{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/time-test.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 26,
                  "endLine": 54,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\telapsed = difference.tv_sec +\n\t    (difference.tv_usec / 1.0e6);\n\n\tprintf(\"timeout_cb called at %d: %.3f seconds elapsed.\\n\",\n\t    (int)newtime.tv_sec, elapsed);\n\tlasttime = newtime;\n\n",
                    "rendered": {
                      "text": "\telapsed = difference.tv_sec +\n\t    (difference.tv_usec / 1.0e6);\n\n\tprintf(\"timeout_cb called at %d: %.3f seconds elapsed.\\n\",\n\t    (int)newtime.tv_sec, elapsed);\n\tlasttime = newtime;\n\n",
                      "markdown": "`\telapsed = difference.tv_sec +\n\t    (difference.tv_usec / 1.0e6);\n\n\tprintf(\"timeout_cb called at %d: %.3f seconds elapsed.\\n\",\n\t    (int)newtime.tv_sec, elapsed);\n\tlasttime = newtime;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/time-test.c"
                },
                "region": {
                  "startLine": 105,
                  "endLine": 105,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tbase = event_base_new();\n\n\t/* Initialize one event */\n\ttimeout = event_new(base, -1, flags, timeout_cb, event_self_cbarg());\n\tsignal_event = evsignal_new(base, SIGINT, signal_cb, (void*)base );\n\tif (timeout == NULL) {\n\t\tfprintf(stderr, \"Couldn't create event\");\n",
                    "rendered": {
                      "text": "\tbase = event_base_new();\n\n\t/* Initialize one event */\n\ttimeout = event_new(base, -1, flags, timeout_cb, event_self_cbarg());\n\tsignal_event = evsignal_new(base, SIGINT, signal_cb, (void*)base );\n\tif (timeout == NULL) {\n\t\tfprintf(stderr, \"Couldn't create event\");\n",
                      "markdown": "`\tbase = event_base_new();\n\n\t/* Initialize one event */\n\ttimeout = event_new(base, -1, flags, timeout_cb, event_self_cbarg());\n\tsignal_event = evsignal_new(base, SIGINT, signal_cb, (void*)base );\n\tif (timeout == NULL) {\n\t\tfprintf(stderr, \"Couldn't create event\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 29,
                  "endLine": 372,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n",
                    "rendered": {
                      "text": "        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n",
                      "markdown": "`        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 30,
                  "endLine": 182,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n",
                    "rendered": {
                      "text": "        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n",
                      "markdown": "`        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 11,
                  "endLine": 136,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n",
                    "rendered": {
                      "text": "# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n",
                      "markdown": "`# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 58,
                  "endLine": 394,
                  "endColumn": 63,
                  "snippet": {
                    "text": "             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n",
                    "rendered": {
                      "text": "             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n",
                      "markdown": "`             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`AS_ECHO([\"$ac_link\"]) | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 37,
                  "endLine": 369,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n",
                    "rendered": {
                      "text": "        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n",
                      "markdown": "`        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 57,
                  "endLine": 279,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n\n",
                    "rendered": {
                      "text": "\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n\n",
                      "markdown": "`\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 59,
                  "endLine": 278,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n",
                    "rendered": {
                      "text": "                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n",
                      "markdown": "`                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n                ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 55,
                  "endLine": 27,
                  "endColumn": 61,
                  "snippet": {
                    "text": "#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threaded programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n",
                    "rendered": {
                      "text": "#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threaded programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n",
                      "markdown": "`#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#   $PTHREAD_CXX $CXXFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threaded programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/bench_cascade.c"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 44,
                  "endLine": 127,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tevutil_gettimeofday(&te, NULL);\n\tevutil_timersub(&te, &ts, &te);\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tevent_del(&events[i]);\n\t\tevutil_closesocket(cp[0]);\n\t\tevutil_closesocket(cp[1]);\n",
                    "rendered": {
                      "text": "\tevutil_gettimeofday(&te, NULL);\n\tevutil_timersub(&te, &ts, &te);\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tevent_del(&events[i]);\n\t\tevutil_closesocket(cp[0]);\n\t\tevutil_closesocket(cp[1]);\n",
                      "markdown": "`\tevutil_gettimeofday(&te, NULL);\n\tevutil_timersub(&te, &ts, &te);\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tevent_del(&events[i]);\n\t\tevutil_closesocket(cp[0]);\n\t\tevutil_closesocket(cp[1]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/bench_cascade.c"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 44,
                  "endLine": 109,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tevutil_timerclear(&tv_timeout);\n\ttv_timeout.tv_sec = 60;\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tevutil_socket_t fd = i < num_pipes - 1 ? cp[3] : -1;\n\t\tevent_set(&events[i], cp[0], EV_READ, read_cb,\n\t\t    (void *)(ev_intptr_t)fd);\n",
                    "rendered": {
                      "text": "\tevutil_timerclear(&tv_timeout);\n\ttv_timeout.tv_sec = 60;\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tevutil_socket_t fd = i < num_pipes - 1 ? cp[3] : -1;\n\t\tevent_set(&events[i], cp[0], EV_READ, read_cb,\n\t\t    (void *)(ev_intptr_t)fd);\n",
                      "markdown": "`\tevutil_timerclear(&tv_timeout);\n\ttv_timeout.tv_sec = 60;\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tevutil_socket_t fd = i < num_pipes - 1 ? cp[3] : -1;\n\t\tevent_set(&events[i], cp[0], EV_READ, read_cb,\n\t\t    (void *)(ev_intptr_t)fd);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/bench_cascade.c"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 44,
                  "endLine": 95,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\texit(1);\n\t}\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tif (evutil_socketpair(AF_UNIX, SOCK_STREAM, 0, cp) == -1) {\n\t\t\tperror(\"socketpair\");\n\t\t\texit(1);\n",
                    "rendered": {
                      "text": "\t\texit(1);\n\t}\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tif (evutil_socketpair(AF_UNIX, SOCK_STREAM, 0, cp) == -1) {\n\t\t\tperror(\"socketpair\");\n\t\t\texit(1);\n",
                      "markdown": "`\t\texit(1);\n\t}\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tif (evutil_socketpair(AF_UNIX, SOCK_STREAM, 0, cp) == -1) {\n\t\t\tperror(\"socketpair\");\n\t\t\texit(1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/include/include.am"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 2,
                  "endLine": 38,
                  "snippet": {
                    "text": "\tinclude/event2/ws.h \\\n\tinclude/event2/visibility.h\n\nif OPENSSL\nEVENT2_EXPORT += include/event2/bufferevent_ssl.h\nelse\nif MBEDTLS\nEVENT2_EXPORT += include/event2/bufferevent_ssl.h\n",
                    "rendered": {
                      "text": "\tinclude/event2/ws.h \\\n\tinclude/event2/visibility.h\n\nif OPENSSL\nEVENT2_EXPORT += include/event2/bufferevent_ssl.h\nelse\nif MBEDTLS\nEVENT2_EXPORT += include/event2/bufferevent_ssl.h\n",
                      "markdown": "`\tinclude/event2/ws.h \\\n\tinclude/event2/visibility.h\n\nif OPENSSL\nEVENT2_EXPORT += include/event2/bufferevent_ssl.h\nelse\nif MBEDTLS\nEVENT2_EXPORT += include/event2/bufferevent_ssl.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evrpc.c"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 42,
                  "endLine": 220,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\tconstructed_uri_len = strlen(EVRPC_URI_PREFIX) + strlen(uri) + 1;\n\tif ((constructed_uri = mm_malloc(constructed_uri_len)) == NULL)\n\t\tevent_err(1, \"%s: failed to register rpc at %s\",\n\t\t    __func__, uri);\n\tmemcpy(constructed_uri, EVRPC_URI_PREFIX, strlen(EVRPC_URI_PREFIX));\n\tmemcpy(constructed_uri + strlen(EVRPC_URI_PREFIX), uri, strlen(uri));\n",
                    "rendered": {
                      "text": "\n\tconstructed_uri_len = strlen(EVRPC_URI_PREFIX) + strlen(uri) + 1;\n\tif ((constructed_uri = mm_malloc(constructed_uri_len)) == NULL)\n\t\tevent_err(1, \"%s: failed to register rpc at %s\",\n\t\t    __func__, uri);\n\tmemcpy(constructed_uri, EVRPC_URI_PREFIX, strlen(EVRPC_URI_PREFIX));\n\tmemcpy(constructed_uri + strlen(EVRPC_URI_PREFIX), uri, strlen(uri));\n",
                      "markdown": "`\n\tconstructed_uri_len = strlen(EVRPC_URI_PREFIX) + strlen(uri) + 1;\n\tif ((constructed_uri = mm_malloc(constructed_uri_len)) == NULL)\n\t\tevent_err(1, \"%s: failed to register rpc at %s\",\n\t\t    __func__, uri);\n\tmemcpy(constructed_uri, EVRPC_URI_PREFIX, strlen(EVRPC_URI_PREFIX));\n\tmemcpy(constructed_uri + strlen(EVRPC_URI_PREFIX), uri, strlen(uri));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evrpc.c"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 1,
                  "endLine": 180,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n\t\tbreak;\n\tdefault:\n\t\tEVUTIL_ASSERT(hook_type == EVRPC_INPUT || hook_type == EVRPC_OUTPUT);\n",
                    "rendered": {
                      "text": "\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n\t\tbreak;\n\tdefault:\n\t\tEVUTIL_ASSERT(hook_type == EVRPC_INPUT || hook_type == EVRPC_OUTPUT);\n",
                      "markdown": "`\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n\t\tbreak;\n\tdefault:\n\t\tEVUTIL_ASSERT(hook_type == EVRPC_INPUT || hook_type == EVRPC_OUTPUT);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evrpc.c"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 1,
                  "endLine": 177,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tstruct evrpc_hook_list *head = NULL;\n\tswitch (hook_type) {\n\tcase EVRPC_INPUT:\n\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n",
                    "rendered": {
                      "text": "\tstruct evrpc_hook_list *head = NULL;\n\tswitch (hook_type) {\n\tcase EVRPC_INPUT:\n\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n",
                      "markdown": "`\tstruct evrpc_hook_list *head = NULL;\n\tswitch (hook_type) {\n\tcase EVRPC_INPUT:\n\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evrpc.c"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 1,
                  "endLine": 133,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n\t\tbreak;\n\tdefault:\n\t\tEVUTIL_ASSERT(hook_type == EVRPC_INPUT || hook_type == EVRPC_OUTPUT);\n",
                    "rendered": {
                      "text": "\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n\t\tbreak;\n\tdefault:\n\t\tEVUTIL_ASSERT(hook_type == EVRPC_INPUT || hook_type == EVRPC_OUTPUT);\n",
                      "markdown": "`\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n\t\tbreak;\n\tdefault:\n\t\tEVUTIL_ASSERT(hook_type == EVRPC_INPUT || hook_type == EVRPC_OUTPUT);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evrpc.c"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 1,
                  "endLine": 130,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tstruct evrpc_hook *hook = NULL;\n\tswitch (hook_type) {\n\tcase EVRPC_INPUT:\n\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n",
                    "rendered": {
                      "text": "\tstruct evrpc_hook *hook = NULL;\n\tswitch (hook_type) {\n\tcase EVRPC_INPUT:\n\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n",
                      "markdown": "`\tstruct evrpc_hook *hook = NULL;\n\tswitch (hook_type) {\n\tcase EVRPC_INPUT:\n\t\thead = &base->in_hooks;\n\t\tbreak;\n\tcase EVRPC_OUTPUT:\n\t\thead = &base->out_hooks;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.gitignore"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 6,
                  "snippet": {
                    "text": "*.gcov\n*.gcda\n\n# gdb stuff\n.gdb_history\n\n# ctags stuff\n",
                    "rendered": {
                      "text": "*.gcov\n*.gcda\n\n# gdb stuff\n.gdb_history\n\n# ctags stuff\n",
                      "markdown": "`*.gcov\n*.gcda\n\n# gdb stuff\n.gdb_history\n\n# ctags stuff\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.h"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 63,
                  "endLine": 27,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n#define CURL_HOST_NOMATCH 0\n#define CURL_HOST_MATCH   1\nint Curl_cert_hostcheck(const char *match_pattern, const char *hostname);\n\n#endif /* HEADER_CURL_HOSTCHECK_H */\n\n",
                    "rendered": {
                      "text": "\n#define CURL_HOST_NOMATCH 0\n#define CURL_HOST_MATCH   1\nint Curl_cert_hostcheck(const char *match_pattern, const char *hostname);\n\n#endif /* HEADER_CURL_HOSTCHECK_H */\n\n",
                      "markdown": "`\n#define CURL_HOST_NOMATCH 0\n#define CURL_HOST_MATCH   1\nint Curl_cert_hostcheck(const char *match_pattern, const char *hostname);\n\n#endif /* HEADER_CURL_HOSTCHECK_H */\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/ws-chat-server.c"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tstruct sockaddr_in6 *s = (struct sockaddr_in6 *)sa;\n\t\tport = ntohs(s->sin6_port);\n\t\tevutil_inet_ntop(AF_INET6, &s->sin6_addr, addr, len);\n\t\tnice = nice_addr(addr);\n\t\tif (nice != addr) {\n\t\t\tsize_t len = strlen(addr) - (nice - addr);\n\t\t\tmemmove(addr, nice, len);\n",
                    "rendered": {
                      "text": "\t\tstruct sockaddr_in6 *s = (struct sockaddr_in6 *)sa;\n\t\tport = ntohs(s->sin6_port);\n\t\tevutil_inet_ntop(AF_INET6, &s->sin6_addr, addr, len);\n\t\tnice = nice_addr(addr);\n\t\tif (nice != addr) {\n\t\t\tsize_t len = strlen(addr) - (nice - addr);\n\t\t\tmemmove(addr, nice, len);\n",
                      "markdown": "`\t\tstruct sockaddr_in6 *s = (struct sockaddr_in6 *)sa;\n\t\tport = ntohs(s->sin6_port);\n\t\tevutil_inet_ntop(AF_INET6, &s->sin6_addr, addr, len);\n\t\tnice = nice_addr(addr);\n\t\tif (nice != addr) {\n\t\t\tsize_t len = strlen(addr) - (nice - addr);\n\t\t\tmemmove(addr, nice, len);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 31,
                  "endLine": 54,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    mbedtlsdir = ''\n    if platform.system() == \"Windows\":\n        arch = '-A x64'\n        vcpkg_root = os.environ.get('VCPKG_ROOT')\n        if vcpkg_root is not None:\n            vcpkg = f\"-DCMAKE_TOOLCHAIN_FILE={vcpkg_root}/scripts/buildsystems/vcpkg.cmake\"\n    elif platform.system() == \"Darwin\":\n",
                    "rendered": {
                      "text": "    mbedtlsdir = ''\n    if platform.system() == \"Windows\":\n        arch = '-A x64'\n        vcpkg_root = os.environ.get('VCPKG_ROOT')\n        if vcpkg_root is not None:\n            vcpkg = f\"-DCMAKE_TOOLCHAIN_FILE={vcpkg_root}/scripts/buildsystems/vcpkg.cmake\"\n    elif platform.system() == \"Darwin\":\n",
                      "markdown": "`    mbedtlsdir = ''\n    if platform.system() == \"Windows\":\n        arch = '-A x64'\n        vcpkg_root = os.environ.get('VCPKG_ROOT')\n        if vcpkg_root is not None:\n            vcpkg = f\"-DCMAKE_TOOLCHAIN_FILE={vcpkg_root}/scripts/buildsystems/vcpkg.cmake\"\n    elif platform.system() == \"Darwin\":\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 24,
                  "endLine": 54,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    mbedtlsdir = ''\n    if platform.system() == \"Windows\":\n        arch = '-A x64'\n        vcpkg_root = os.environ.get('VCPKG_ROOT')\n        if vcpkg_root is not None:\n            vcpkg = f\"-DCMAKE_TOOLCHAIN_FILE={vcpkg_root}/scripts/buildsystems/vcpkg.cmake\"\n    elif platform.system() == \"Darwin\":\n",
                    "rendered": {
                      "text": "    mbedtlsdir = ''\n    if platform.system() == \"Windows\":\n        arch = '-A x64'\n        vcpkg_root = os.environ.get('VCPKG_ROOT')\n        if vcpkg_root is not None:\n            vcpkg = f\"-DCMAKE_TOOLCHAIN_FILE={vcpkg_root}/scripts/buildsystems/vcpkg.cmake\"\n    elif platform.system() == \"Darwin\":\n",
                      "markdown": "`    mbedtlsdir = ''\n    if platform.system() == \"Windows\":\n        arch = '-A x64'\n        vcpkg_root = os.environ.get('VCPKG_ROOT')\n        if vcpkg_root is not None:\n            vcpkg = f\"-DCMAKE_TOOLCHAIN_FILE={vcpkg_root}/scripts/buildsystems/vcpkg.cmake\"\n    elif platform.system() == \"Darwin\":\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 39,
                  "endLine": 191,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# build directory to avoid confusion when using find_package().\nprint(\"[test-export] test for install tree(in non-system-wide path)\")\nexec_cmd(\"cmake --build . -v --target uninstall\", True)\ntempdir = tempfile.TemporaryDirectory()\ncmd = 'cmake -DCMAKE_SKIP_INSTALL_RPATH=OFF -DCMAKE_INSTALL_PREFIX=\"%s\" ..' % tempdir.name\nexec_cmd(cmd, True)\nexec_cmd(\"cmake --build . -v --target install\", True)\nos.environ[\"CMAKE_PREFIX_PATH\"] = os.path.join(tempdir.name, \"lib/cmake/libevent\")\n",
                    "rendered": {
                      "text": "# build directory to avoid confusion when using find_package().\nprint(\"[test-export] test for install tree(in non-system-wide path)\")\nexec_cmd(\"cmake --build . -v --target uninstall\", True)\ntempdir = tempfile.TemporaryDirectory()\ncmd = 'cmake -DCMAKE_SKIP_INSTALL_RPATH=OFF -DCMAKE_INSTALL_PREFIX=\"%s\" ..' % tempdir.name\nexec_cmd(cmd, True)\nexec_cmd(\"cmake --build . -v --target install\", True)\nos.environ[\"CMAKE_PREFIX_PATH\"] = os.path.join(tempdir.name, \"lib/cmake/libevent\")\n",
                      "markdown": "`# build directory to avoid confusion when using find_package().\nprint(\"[test-export] test for install tree(in non-system-wide path)\")\nexec_cmd(\"cmake --build . -v --target uninstall\", True)\ntempdir = tempfile.TemporaryDirectory()\ncmd = 'cmake -DCMAKE_SKIP_INSTALL_RPATH=OFF -DCMAKE_INSTALL_PREFIX=\"%s\" ..' % tempdir.name\nexec_cmd(cmd, True)\nexec_cmd(\"cmake --build . -v --target install\", True)\nos.environ[\"CMAKE_PREFIX_PATH\"] = os.path.join(tempdir.name, \"lib/cmake/libevent\")\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 7,
                  "endLine": 68,
                  "endColumn": 12,
                  "snippet": {
                    "text": "          f\" {openssldir}\" \\\n          f\" {mbedtlsdir}\"\n    if link_type == \"static\":\n        cmd = \"\".join([cmd, \" -DLIBEVENT_STATIC_LINK=1\"])\n    r = exec_cmd(cmd, True)\n    if r == 0:\n        r = exec_cmd('cmake --build . -v', True)\n",
                    "rendered": {
                      "text": "          f\" {openssldir}\" \\\n          f\" {mbedtlsdir}\"\n    if link_type == \"static\":\n        cmd = \"\".join([cmd, \" -DLIBEVENT_STATIC_LINK=1\"])\n    r = exec_cmd(cmd, True)\n    if r == 0:\n        r = exec_cmd('cmake --build . -v', True)\n",
                      "markdown": "`          f\" {openssldir}\" \\\n          f\" {mbedtlsdir}\"\n    if link_type == \"static\":\n        cmd = \"\".join([cmd, \" -DLIBEVENT_STATIC_LINK=1\"])\n    r = exec_cmd(cmd, True)\n    if r == 0:\n        r = exec_cmd('cmake --build . -v', True)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 3,
                  "endLine": 60,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    elif platform.system() == \"Darwin\":\n        openssldir = '-DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl'\n        mbedtlsdir = '-DMBEDTLS_ROOT_DIR=/opt/homebrew/opt/mbedtls@2'\n    cmd = f\"cmake ..\" \\\n          f\" {arch}\" \\\n          f\" {vcpkg}\" \\\n          f\" -DEVENT__LINK_COMPONENT={link}\" \\\n",
                    "rendered": {
                      "text": "    elif platform.system() == \"Darwin\":\n        openssldir = '-DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl'\n        mbedtlsdir = '-DMBEDTLS_ROOT_DIR=/opt/homebrew/opt/mbedtls@2'\n    cmd = f\"cmake ..\" \\\n          f\" {arch}\" \\\n          f\" {vcpkg}\" \\\n          f\" -DEVENT__LINK_COMPONENT={link}\" \\\n",
                      "markdown": "`    elif platform.system() == \"Darwin\":\n        openssldir = '-DOPENSSL_ROOT_DIR=/opt/homebrew/opt/openssl'\n        mbedtlsdir = '-DMBEDTLS_ROOT_DIR=/opt/homebrew/opt/mbedtls@2'\n    cmd = f\"cmake ..\" \\\n          f\" {arch}\" \\\n          f\" {vcpkg}\" \\\n          f\" -DEVENT__LINK_COMPONENT={link}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 9,
                  "snippet": {
                    "text": "        r = 1\n    return r\n\n# expect  0:success 1:failure\ndef testcase(link, code, expect):\n    r = link_and_run(link, code)\n    if link == \"\":\n",
                    "rendered": {
                      "text": "        r = 1\n    return r\n\n# expect  0:success 1:failure\ndef testcase(link, code, expect):\n    r = link_and_run(link, code)\n    if link == \"\":\n",
                      "markdown": "`        r = 1\n    return r\n\n# expect  0:success 1:failure\ndef testcase(link, code, expect):\n    r = link_and_run(link, code)\n    if link == \"\":\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test-export/test-export.py"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 12,
                  "endLine": 4,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n#\n# Check if find_package(Libevent COMPONENTS xxx) can get the correct library.\n# Note: this script has only been tested on python3.\n# Usage:\n#   cd cmake-build-dir\n#   cmake <options> .. && cmake --build .\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n#\n# Check if find_package(Libevent COMPONENTS xxx) can get the correct library.\n# Note: this script has only been tested on python3.\n# Usage:\n#   cd cmake-build-dir\n#   cmake <options> .. && cmake --build .\n",
                      "markdown": "`#!/usr/bin/env python3\n#\n# Check if find_package(Libevent COMPONENTS xxx) can get the correct library.\n# Note: this script has only been tested on python3.\n# Usage:\n#   cd cmake-build-dir\n#   cmake <options> .. && cmake --build .\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/include/event2/bufferevent.h"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 87,
                  "endLine": 264,
                  "endColumn": 95,
                  "snippet": {
                    "text": " */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname_hints(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in, const char *hostname, int port);\n\n\n/**\n",
                    "rendered": {
                      "text": " */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname_hints(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in, const char *hostname, int port);\n\n\n/**\n",
                      "markdown": "` */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname_hints(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in, const char *hostname, int port);\n\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/include/event2/bufferevent.h"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 31,
                  "endLine": 263,
                  "endColumn": 39,
                  "snippet": {
                    "text": "   what you want.\n */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname_hints(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in, const char *hostname, int port);\n\n\n",
                    "rendered": {
                      "text": "   what you want.\n */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname_hints(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in, const char *hostname, int port);\n\n\n",
                      "markdown": "`   what you want.\n */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname_hints(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in, const char *hostname, int port);\n\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/include/event2/bufferevent.h"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 59,
                  "endLine": 235,
                  "endColumn": 67,
                  "snippet": {
                    "text": " */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port);\n\n/**\n   Resolve the hostname 'hostname' and connect to it as with\n",
                    "rendered": {
                      "text": " */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port);\n\n/**\n   Resolve the hostname 'hostname' and connect to it as with\n",
                      "markdown": "` */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port);\n\n/**\n   Resolve the hostname 'hostname' and connect to it as with\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/include/event2/bufferevent.h"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 31,
                  "endLine": 234,
                  "endColumn": 39,
                  "snippet": {
                    "text": "   @see bufferevent_socket_connect_hostname_hints()\n */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port);\n\n/**\n",
                    "rendered": {
                      "text": "   @see bufferevent_socket_connect_hostname_hints()\n */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port);\n\n/**\n",
                      "markdown": "`   @see bufferevent_socket_connect_hostname_hints()\n */\nEVENT2_EXPORT_SYMBOL\nint bufferevent_socket_connect_hostname(struct bufferevent *bufev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port);\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5519,
                  "startColumn": 44,
                  "endLine": 5519,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\te = TAILQ_FIRST(&base->hostsdb);\n\n\tfor (; e; e = TAILQ_NEXT(e, next)) {\n\t\tif (!evutil_ascii_strcasecmp(e->hostname, hostname))\n\t\t\treturn e;\n\t}\n\treturn NULL;\n",
                    "rendered": {
                      "text": "\t\te = TAILQ_FIRST(&base->hostsdb);\n\n\tfor (; e; e = TAILQ_NEXT(e, next)) {\n\t\tif (!evutil_ascii_strcasecmp(e->hostname, hostname))\n\t\t\treturn e;\n\t}\n\treturn NULL;\n",
                      "markdown": "`\t\te = TAILQ_FIRST(&base->hostsdb);\n\n\tfor (; e; e = TAILQ_NEXT(e, next)) {\n\t\tif (!evutil_ascii_strcasecmp(e->hostname, hostname))\n\t\t\treturn e;\n\t}\n\treturn NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5519,
                  "startColumn": 34,
                  "endLine": 5519,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\te = TAILQ_FIRST(&base->hostsdb);\n\n\tfor (; e; e = TAILQ_NEXT(e, next)) {\n\t\tif (!evutil_ascii_strcasecmp(e->hostname, hostname))\n\t\t\treturn e;\n\t}\n\treturn NULL;\n",
                    "rendered": {
                      "text": "\t\te = TAILQ_FIRST(&base->hostsdb);\n\n\tfor (; e; e = TAILQ_NEXT(e, next)) {\n\t\tif (!evutil_ascii_strcasecmp(e->hostname, hostname))\n\t\t\treturn e;\n\t}\n\treturn NULL;\n",
                      "markdown": "`\t\te = TAILQ_FIRST(&base->hostsdb);\n\n\tfor (; e; e = TAILQ_NEXT(e, next)) {\n\t\tif (!evutil_ascii_strcasecmp(e->hostname, hostname))\n\t\t\treturn e;\n\t}\n\treturn NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5508,
                  "startColumn": 54,
                  "endLine": 5508,
                  "endColumn": 62,
                  "snippet": {
                    "text": "}\n\nstatic struct hosts_entry *\nfind_hosts_entry(struct evdns_base *base, const char *hostname,\n    struct hosts_entry *find_after)\n{\n\tstruct hosts_entry *e;\n",
                    "rendered": {
                      "text": "}\n\nstatic struct hosts_entry *\nfind_hosts_entry(struct evdns_base *base, const char *hostname,\n    struct hosts_entry *find_after)\n{\n\tstruct hosts_entry *e;\n",
                      "markdown": "`}\n\nstatic struct hosts_entry *\nfind_hosts_entry(struct evdns_base *base, const char *hostname,\n    struct hosts_entry *find_after)\n{\n\tstruct hosts_entry *e;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5092,
                  "startColumn": 23,
                  "endLine": 5092,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\treturn -1;\n\t\tEVUTIL_ASSERT(socklen <= (int)sizeof(he->addr));\n\t\tmemcpy(&he->addr, &ss, socklen);\n\t\tmemcpy(he->hostname, hostname, namelen+1);\n\t\the->addrlen = socklen;\n\n\t\tTAILQ_INSERT_TAIL(&base->hostsdb, he, next);\n",
                    "rendered": {
                      "text": "\t\t\treturn -1;\n\t\tEVUTIL_ASSERT(socklen <= (int)sizeof(he->addr));\n\t\tmemcpy(&he->addr, &ss, socklen);\n\t\tmemcpy(he->hostname, hostname, namelen+1);\n\t\the->addrlen = socklen;\n\n\t\tTAILQ_INSERT_TAIL(&base->hostsdb, he, next);\n",
                      "markdown": "`\t\t\treturn -1;\n\t\tEVUTIL_ASSERT(socklen <= (int)sizeof(he->addr));\n\t\tmemcpy(&he->addr, &ss, socklen);\n\t\tmemcpy(he->hostname, hostname, namelen+1);\n\t\the->addrlen = socklen;\n\n\t\tTAILQ_INSERT_TAIL(&base->hostsdb, he, next);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5092,
                  "startColumn": 13,
                  "endLine": 5092,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\treturn -1;\n\t\tEVUTIL_ASSERT(socklen <= (int)sizeof(he->addr));\n\t\tmemcpy(&he->addr, &ss, socklen);\n\t\tmemcpy(he->hostname, hostname, namelen+1);\n\t\the->addrlen = socklen;\n\n\t\tTAILQ_INSERT_TAIL(&base->hostsdb, he, next);\n",
                    "rendered": {
                      "text": "\t\t\treturn -1;\n\t\tEVUTIL_ASSERT(socklen <= (int)sizeof(he->addr));\n\t\tmemcpy(&he->addr, &ss, socklen);\n\t\tmemcpy(he->hostname, hostname, namelen+1);\n\t\the->addrlen = socklen;\n\n\t\tTAILQ_INSERT_TAIL(&base->hostsdb, he, next);\n",
                      "markdown": "`\t\t\treturn -1;\n\t\tEVUTIL_ASSERT(socklen <= (int)sizeof(he->addr));\n\t\tmemcpy(&he->addr, &ss, socklen);\n\t\tmemcpy(he->hostname, hostname, namelen+1);\n\t\the->addrlen = socklen;\n\n\t\tTAILQ_INSERT_TAIL(&base->hostsdb, he, next);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5085,
                  "startColumn": 19,
                  "endLine": 5085,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t*hash = '\\0';\n\t\t}\n\n\t\tnamelen = strlen(hostname);\n\n\t\the = mm_calloc(1, sizeof(struct hosts_entry)+namelen);\n\t\tif (!he)\n",
                    "rendered": {
                      "text": "\t\t\t*hash = '\\0';\n\t\t}\n\n\t\tnamelen = strlen(hostname);\n\n\t\the = mm_calloc(1, sizeof(struct hosts_entry)+namelen);\n\t\tif (!he)\n",
                      "markdown": "`\t\t\t*hash = '\\0';\n\t\t}\n\n\t\tnamelen = strlen(hostname);\n\n\t\the = mm_calloc(1, sizeof(struct hosts_entry)+namelen);\n\t\tif (!he)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5080,
                  "startColumn": 15,
                  "endLine": 5080,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n\t\t\tif (hash == hostname)\n\t\t\t\treturn 0;\n\t\t\t*hash = '\\0';\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n\t\t\tif (hash == hostname)\n\t\t\t\treturn 0;\n\t\t\t*hash = '\\0';\n\t\t}\n",
                      "markdown": "`\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n\t\t\tif (hash == hostname)\n\t\t\t\treturn 0;\n\t\t\t*hash = '\\0';\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5079,
                  "startColumn": 21,
                  "endLine": 5079,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\twhile ((hostname = NEXT_TOKEN)) {\n\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n\t\t\tif (hash == hostname)\n\t\t\t\treturn 0;\n\t\t\t*hash = '\\0';\n",
                    "rendered": {
                      "text": "\twhile ((hostname = NEXT_TOKEN)) {\n\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n\t\t\tif (hash == hostname)\n\t\t\t\treturn 0;\n\t\t\t*hash = '\\0';\n",
                      "markdown": "`\twhile ((hostname = NEXT_TOKEN)) {\n\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n\t\t\tif (hash == hostname)\n\t\t\t\treturn 0;\n\t\t\t*hash = '\\0';\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5076,
                  "startColumn": 9,
                  "endLine": 5076,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\tif (sockaddr_getport((struct sockaddr*)&ss))\n\t\treturn -1;\n\n\twhile ((hostname = NEXT_TOKEN)) {\n\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n",
                    "rendered": {
                      "text": "\tif (sockaddr_getport((struct sockaddr*)&ss))\n\t\treturn -1;\n\n\twhile ((hostname = NEXT_TOKEN)) {\n\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n",
                      "markdown": "`\tif (sockaddr_getport((struct sockaddr*)&ss))\n\t\treturn -1;\n\n\twhile ((hostname = NEXT_TOKEN)) {\n\t\tstruct hosts_entry *he;\n\t\tsize_t namelen;\n\t\tif ((hash = strchr(hostname, '#'))) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5057,
                  "startColumn": 7,
                  "endLine": 5057,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tchar *strtok_state;\n\tstatic const char *const delims = \" \\t\";\n\tchar *const addr = strtok_r(line, delims, &strtok_state);\n\tchar *hostname, *hash;\n\tstruct sockaddr_storage ss;\n\tint socklen = sizeof(ss);\n\tASSERT_LOCKED(base);\n",
                    "rendered": {
                      "text": "\tchar *strtok_state;\n\tstatic const char *const delims = \" \\t\";\n\tchar *const addr = strtok_r(line, delims, &strtok_state);\n\tchar *hostname, *hash;\n\tstruct sockaddr_storage ss;\n\tint socklen = sizeof(ss);\n\tASSERT_LOCKED(base);\n",
                      "markdown": "`\tchar *strtok_state;\n\tstatic const char *const delims = \" \\t\";\n\tchar *const addr = strtok_r(line, delims, &strtok_state);\n\tchar *hostname, *hash;\n\tstruct sockaddr_storage ss;\n\tint socklen = sizeof(ss);\n\tASSERT_LOCKED(base);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4570,
                  "startColumn": 18,
                  "endLine": 4570,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\terr = EVDNS_ERROR_NO_NAMESERVERS_CONFIGURED;\n\t}\n\tif (flags & DNS_OPTION_SEARCH && (!base->global_search_state || base->global_search_state->num_domains == 0)) {\n\t\tsearch_set_from_hostname(base);\n\t}\n\n\tmm_free(resolv);\n",
                    "rendered": {
                      "text": "\t\terr = EVDNS_ERROR_NO_NAMESERVERS_CONFIGURED;\n\t}\n\tif (flags & DNS_OPTION_SEARCH && (!base->global_search_state || base->global_search_state->num_domains == 0)) {\n\t\tsearch_set_from_hostname(base);\n\t}\n\n\tmm_free(resolv);\n",
                      "markdown": "`\t\terr = EVDNS_ERROR_NO_NAMESERVERS_CONFIGURED;\n\t}\n\tif (flags & DNS_OPTION_SEARCH && (!base->global_search_state || base->global_search_state->num_domains == 0)) {\n\t\tsearch_set_from_hostname(base);\n\t}\n\n\tmm_free(resolv);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4129,
                  "startColumn": 18,
                  "endLine": 4129,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t/* if the file isn't found then we assume a local resolver */\n\tASSERT_LOCKED(base);\n\tif (flags & DNS_OPTION_SEARCH)\n\t\tsearch_set_from_hostname(base);\n\tif (add_default)\n\t\tevdns_base_nameserver_ip_add(base, \"127.0.0.1\");\n}\n",
                    "rendered": {
                      "text": "\t/* if the file isn't found then we assume a local resolver */\n\tASSERT_LOCKED(base);\n\tif (flags & DNS_OPTION_SEARCH)\n\t\tsearch_set_from_hostname(base);\n\tif (add_default)\n\t\tevdns_base_nameserver_ip_add(base, \"127.0.0.1\");\n}\n",
                      "markdown": "`\t/* if the file isn't found then we assume a local resolver */\n\tASSERT_LOCKED(base);\n\tif (flags & DNS_OPTION_SEARCH)\n\t\tsearch_set_from_hostname(base);\n\tif (add_default)\n\t\tevdns_base_nameserver_ip_add(base, \"127.0.0.1\");\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 3976,
                  "startColumn": 21,
                  "endLine": 3976,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n}\n",
                    "rendered": {
                      "text": "\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n}\n",
                      "markdown": "`\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 3975,
                  "startColumn": 34,
                  "endLine": 3975,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n",
                    "rendered": {
                      "text": "\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n",
                      "markdown": "`\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 3975,
                  "startColumn": 17,
                  "endLine": 3975,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n",
                    "rendered": {
                      "text": "\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n",
                      "markdown": "`\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n\tif (gethostname(hostname, sizeof(hostname))) return;\n\tdomainname = strchr(hostname, '.');\n\tif (!domainname) return;\n\tsearch_postfix_add(base, domainname);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 3971,
                  "startColumn": 6,
                  "endLine": 3971,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nstatic void\nsearch_set_from_hostname(struct evdns_base *base) {\n\tchar hostname[EVDNS_NAME_MAX + 1], *domainname;\n\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n",
                    "rendered": {
                      "text": "\nstatic void\nsearch_set_from_hostname(struct evdns_base *base) {\n\tchar hostname[EVDNS_NAME_MAX + 1], *domainname;\n\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n",
                      "markdown": "`\nstatic void\nsearch_set_from_hostname(struct evdns_base *base) {\n\tchar hostname[EVDNS_NAME_MAX + 1], *domainname;\n\n\tASSERT_LOCKED(base);\n\tsearch_postfix_clear(base);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 3970,
                  "startColumn": 16,
                  "endLine": 3970,
                  "endColumn": 24,
                  "snippet": {
                    "text": "}\n\nstatic void\nsearch_set_from_hostname(struct evdns_base *base) {\n\tchar hostname[EVDNS_NAME_MAX + 1], *domainname;\n\n\tASSERT_LOCKED(base);\n",
                    "rendered": {
                      "text": "}\n\nstatic void\nsearch_set_from_hostname(struct evdns_base *base) {\n\tchar hostname[EVDNS_NAME_MAX + 1], *domainname;\n\n\tASSERT_LOCKED(base);\n",
                      "markdown": "`}\n\nstatic void\nsearch_set_from_hostname(struct evdns_base *base) {\n\tchar hostname[EVDNS_NAME_MAX + 1], *domainname;\n\n\tASSERT_LOCKED(base);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 2390,
                  "startColumn": 16,
                  "endLine": 2390,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t}\n\treturn evdns_server_request_add_reply(\n\t\t  req, EVDNS_ANSWER_SECTION, inaddr_name, TYPE_PTR, CLASS_INET,\n\t\t  ttl, -1, 1, hostname);\n}\n\n/* exported function */\n",
                    "rendered": {
                      "text": "\t}\n\treturn evdns_server_request_add_reply(\n\t\t  req, EVDNS_ANSWER_SECTION, inaddr_name, TYPE_PTR, CLASS_INET,\n\t\t  ttl, -1, 1, hostname);\n}\n\n/* exported function */\n",
                      "markdown": "`\t}\n\treturn evdns_server_request_add_reply(\n\t\t  req, EVDNS_ANSWER_SECTION, inaddr_name, TYPE_PTR, CLASS_INET,\n\t\t  ttl, -1, 1, hostname);\n}\n\n/* exported function */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 2371,
                  "startColumn": 126,
                  "endLine": 2371,
                  "endColumn": 134,
                  "snippet": {
                    "text": "\n/* exported function */\nint\nevdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl)\n{\n\tu32 a;\n\tchar buf[32];\n",
                    "rendered": {
                      "text": "\n/* exported function */\nint\nevdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl)\n{\n\tu32 a;\n\tchar buf[32];\n",
                      "markdown": "`\n/* exported function */\nint\nevdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl)\n{\n\tu32 a;\n\tchar buf[32];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 6,
                  "endLine": 447,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\tstruct sockaddr_in6 sin6;\n\t} addr;\n\tint addrlen;\n\tchar hostname[1];\n};\n\nstatic struct evdns_base *current_base = NULL;\n",
                    "rendered": {
                      "text": "\t\tstruct sockaddr_in6 sin6;\n\t} addr;\n\tint addrlen;\n\tchar hostname[1];\n};\n\nstatic struct evdns_base *current_base = NULL;\n",
                      "markdown": "`\t\tstruct sockaddr_in6 sin6;\n\t} addr;\n\tint addrlen;\n\tchar hostname[1];\n};\n\nstatic struct evdns_base *current_base = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5133,
                  "startColumn": 2,
                  "endLine": 5133,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tif (eol) {\n\t\t\t*eol = '\\0';\n\t\t\tevdns_base_parse_hosts_line(base, cp);\n\t\t\tcp = eol+1;\n\t\t} else {\n\t\t\tevdns_base_parse_hosts_line(base, cp);\n\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\tif (eol) {\n\t\t\t*eol = '\\0';\n\t\t\tevdns_base_parse_hosts_line(base, cp);\n\t\t\tcp = eol+1;\n\t\t} else {\n\t\t\tevdns_base_parse_hosts_line(base, cp);\n\t\t\tbreak;\n",
                      "markdown": "`\t\tif (eol) {\n\t\t\t*eol = '\\0';\n\t\t\tevdns_base_parse_hosts_line(base, cp);\n\t\t\tcp = eol+1;\n\t\t} else {\n\t\t\tevdns_base_parse_hosts_line(base, cp);\n\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 5126,
                  "endLine": 5126,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\t/* This will break early if there is a NUL in the hosts file.\n\t * Probably not a problem.*/\n\tcp = str;\n\tfor (;;) {\n\t\teol = strchr(cp, '\\n');\n\n",
                    "rendered": {
                      "text": "\n\t/* This will break early if there is a NUL in the hosts file.\n\t * Probably not a problem.*/\n\tcp = str;\n\tfor (;;) {\n\t\teol = strchr(cp, '\\n');\n\n",
                      "markdown": "`\n\t/* This will break early if there is a NUL in the hosts file.\n\t * Probably not a problem.*/\n\tcp = str;\n\tfor (;;) {\n\t\teol = strchr(cp, '\\n');\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4770,
                  "startColumn": 28,
                  "endLine": 4770,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t}\n\n\tif (found == 0) {\n\t\tlog(EVDNS_LOG_WARN,\"Didn't find any nameservers.\");\n\t}\n\n\treturn found ? 0 : -1;\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (found == 0) {\n\t\tlog(EVDNS_LOG_WARN,\"Didn't find any nameservers.\");\n\t}\n\n\treturn found ? 0 : -1;\n",
                      "markdown": "`\t}\n\n\tif (found == 0) {\n\t\tlog(EVDNS_LOG_WARN,\"Didn't find any nameservers.\");\n\t}\n\n\treturn found ? 0 : -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4731,
                  "startColumn": 29,
                  "endLine": 4731,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tlog(EVDNS_LOG_DEBUG,\"Found nameservers in %s/%s\",#k,name); \\\n\t\tfound = 1;\t\t\t\t\t\t\\\n\t} else if (!found) {\t\t\t\t\t\t\\\n\t\tlog(EVDNS_LOG_DEBUG,\"Didn't find nameservers in %s/%s\", \\\n\t\t    #k,#name);\t\t\t\t\t\t\\\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tlog(EVDNS_LOG_DEBUG,\"Found nameservers in %s/%s\",#k,name); \\\n\t\tfound = 1;\t\t\t\t\t\t\\\n\t} else if (!found) {\t\t\t\t\t\t\\\n\t\tlog(EVDNS_LOG_DEBUG,\"Didn't find nameservers in %s/%s\", \\\n\t\t    #k,#name);\t\t\t\t\t\t\\\n\t}\n\n",
                      "markdown": "`\t\tlog(EVDNS_LOG_DEBUG,\"Found nameservers in %s/%s\",#k,name); \\\n\t\tfound = 1;\t\t\t\t\t\t\\\n\t} else if (!found) {\t\t\t\t\t\t\\\n\t\tlog(EVDNS_LOG_DEBUG,\"Didn't find nameservers in %s/%s\", \\\n\t\t    #k,#name);\t\t\t\t\t\t\\\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4402,
                  "startColumn": 40,
                  "endLine": 4402,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t\tstruct timeval tv;\n\t\tif (evdns_strtotimeval(val, &tv) == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting tcp idle timeout to %s\", val);\n\t\tmemcpy(&base->global_tcp_idle_timeout, &tv, sizeof(tv));\n\t} else if (str_matches_option(option, \"use-vc:\")) {\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n",
                    "rendered": {
                      "text": "\t\tstruct timeval tv;\n\t\tif (evdns_strtotimeval(val, &tv) == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting tcp idle timeout to %s\", val);\n\t\tmemcpy(&base->global_tcp_idle_timeout, &tv, sizeof(tv));\n\t} else if (str_matches_option(option, \"use-vc:\")) {\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n",
                      "markdown": "`\t\tstruct timeval tv;\n\t\tif (evdns_strtotimeval(val, &tv) == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting tcp idle timeout to %s\", val);\n\t\tmemcpy(&base->global_tcp_idle_timeout, &tv, sizeof(tv));\n\t} else if (str_matches_option(option, \"use-vc:\")) {\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4383,
                  "startColumn": 37,
                  "endLine": 4383,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\tconst int backoff_backtor = strtoint_clipped(val, 1, 10);\n\t\tif (backoff_backtor == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting probe timeout backoff factor to %d\",\n\t\t\tbackoff_backtor);\n\t\tbase->ns_timeout_backoff_factor = backoff_backtor;\n\t} else if (str_matches_option(option, \"so-rcvbuf:\")) {\n",
                    "rendered": {
                      "text": "\t\tconst int backoff_backtor = strtoint_clipped(val, 1, 10);\n\t\tif (backoff_backtor == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting probe timeout backoff factor to %d\",\n\t\t\tbackoff_backtor);\n\t\tbase->ns_timeout_backoff_factor = backoff_backtor;\n\t} else if (str_matches_option(option, \"so-rcvbuf:\")) {\n",
                      "markdown": "`\t\tconst int backoff_backtor = strtoint_clipped(val, 1, 10);\n\t\tif (backoff_backtor == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting probe timeout backoff factor to %d\",\n\t\t\tbackoff_backtor);\n\t\tbase->ns_timeout_backoff_factor = backoff_backtor;\n\t} else if (str_matches_option(option, \"so-rcvbuf:\")) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4376,
                  "startColumn": 46,
                  "endLine": 4376,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\tif (base->global_nameserver_probe_initial_timeout.tv_sec > max_probe_timeout) {\n\t\t\tbase->global_nameserver_probe_initial_timeout.tv_sec = max_probe_timeout;\n\t\t\tbase->global_nameserver_probe_initial_timeout.tv_usec = 0;\n\t\t\tlog(EVDNS_LOG_DEBUG, \"Setting initial probe timeout to %s\",\n\t\t\t\tval);\n\t\t}\n\t} else if (str_matches_option(option, \"probe-backoff-factor:\")) {\n",
                    "rendered": {
                      "text": "\t\tif (base->global_nameserver_probe_initial_timeout.tv_sec > max_probe_timeout) {\n\t\t\tbase->global_nameserver_probe_initial_timeout.tv_sec = max_probe_timeout;\n\t\t\tbase->global_nameserver_probe_initial_timeout.tv_usec = 0;\n\t\t\tlog(EVDNS_LOG_DEBUG, \"Setting initial probe timeout to %s\",\n\t\t\t\tval);\n\t\t}\n\t} else if (str_matches_option(option, \"probe-backoff-factor:\")) {\n",
                      "markdown": "`\t\tif (base->global_nameserver_probe_initial_timeout.tv_sec > max_probe_timeout) {\n\t\t\tbase->global_nameserver_probe_initial_timeout.tv_sec = max_probe_timeout;\n\t\t\tbase->global_nameserver_probe_initial_timeout.tv_usec = 0;\n\t\t\tlog(EVDNS_LOG_DEBUG, \"Setting initial probe timeout to %s\",\n\t\t\t\tval);\n\t\t}\n\t} else if (str_matches_option(option, \"probe-backoff-factor:\")) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4370,
                  "startColumn": 45,
                  "endLine": 4370,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\tconst int max_probe_timeout = strtoint_clipped(val, 1, 3600);\n\t\tif (max_probe_timeout == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting maximum probe timeout to %d\",\n\t\t\tmax_probe_timeout);\n\t\tbase->ns_max_probe_timeout = max_probe_timeout;\n\t\tif (base->global_nameserver_probe_initial_timeout.tv_sec > max_probe_timeout) {\n",
                    "rendered": {
                      "text": "\t\tconst int max_probe_timeout = strtoint_clipped(val, 1, 3600);\n\t\tif (max_probe_timeout == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting maximum probe timeout to %d\",\n\t\t\tmax_probe_timeout);\n\t\tbase->ns_max_probe_timeout = max_probe_timeout;\n\t\tif (base->global_nameserver_probe_initial_timeout.tv_sec > max_probe_timeout) {\n",
                      "markdown": "`\t\tconst int max_probe_timeout = strtoint_clipped(val, 1, 3600);\n\t\tif (max_probe_timeout == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting maximum probe timeout to %d\",\n\t\t\tmax_probe_timeout);\n\t\tbase->ns_max_probe_timeout = max_probe_timeout;\n\t\tif (base->global_nameserver_probe_initial_timeout.tv_sec > max_probe_timeout) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4362,
                  "startColumn": 45,
                  "endLine": 4362,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\tif (tv.tv_sec > 3600)\n\t\t\ttv.tv_sec = 3600;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting initial probe timeout to %s\",\n\t\t    val);\n\t\tmemcpy(&base->global_nameserver_probe_initial_timeout, &tv,\n\t\t    sizeof(tv));\n",
                    "rendered": {
                      "text": "\t\tif (tv.tv_sec > 3600)\n\t\t\ttv.tv_sec = 3600;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting initial probe timeout to %s\",\n\t\t    val);\n\t\tmemcpy(&base->global_nameserver_probe_initial_timeout, &tv,\n\t\t    sizeof(tv));\n",
                      "markdown": "`\t\tif (tv.tv_sec > 3600)\n\t\t\ttv.tv_sec = 3600;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting initial probe timeout to %s\",\n\t\t    val);\n\t\tmemcpy(&base->global_nameserver_probe_initial_timeout, &tv,\n\t\t    sizeof(tv));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4311,
                  "startColumn": 31,
                  "endLine": 4311,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\tstruct timeval tv;\n\t\tif (evdns_strtotimeval(val, &tv) == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting timeout to %s\", val);\n\t\tmemcpy(&base->global_timeout, &tv, sizeof(struct timeval));\n\t} else if (str_matches_option(option, \"getaddrinfo-allow-skew:\")) {\n\t\tstruct timeval tv;\n",
                    "rendered": {
                      "text": "\t\tstruct timeval tv;\n\t\tif (evdns_strtotimeval(val, &tv) == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting timeout to %s\", val);\n\t\tmemcpy(&base->global_timeout, &tv, sizeof(struct timeval));\n\t} else if (str_matches_option(option, \"getaddrinfo-allow-skew:\")) {\n\t\tstruct timeval tv;\n",
                      "markdown": "`\t\tstruct timeval tv;\n\t\tif (evdns_strtotimeval(val, &tv) == -1) return -1;\n\t\tif (!(flags & DNS_OPTION_MISC)) return 0;\n\t\tlog(EVDNS_LOG_DEBUG, \"Setting timeout to %s\", val);\n\t\tmemcpy(&base->global_timeout, &tv, sizeof(struct timeval));\n\t} else if (str_matches_option(option, \"getaddrinfo-allow-skew:\")) {\n\t\tstruct timeval tv;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 4138,
                  "startColumn": 8,
                  "endLine": 4138,
                  "endColumn": 12,
                  "snippet": {
                    "text": "static char *\nstrtok_r(char *s, const char *delim, char **state) {\n\tchar *cp, *start;\n\tstart = cp = s ? s : *state;\n\tif (!cp)\n\t\treturn NULL;\n\twhile (*cp && !strchr(delim, *cp))\n",
                    "rendered": {
                      "text": "static char *\nstrtok_r(char *s, const char *delim, char **state) {\n\tchar *cp, *start;\n\tstart = cp = s ? s : *state;\n\tif (!cp)\n\t\treturn NULL;\n\twhile (*cp && !strchr(delim, *cp))\n",
                      "markdown": "`static char *\nstrtok_r(char *s, const char *delim, char **state) {\n\tchar *cp, *start;\n\tstart = cp = s ? s : *state;\n\tif (!cp)\n\t\treturn NULL;\n\twhile (*cp && !strchr(delim, *cp))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 3798,
                  "endLine": 3798,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tstruct request *req;\n\tint i;\n\tEVUTIL_ASSERT(in);\n\tcp = buf;\n\tfor (i=15; i >= 0; --i) {\n\t\tu8 byte = in->s6_addr[i];\n\t\t*cp++ = \"0123456789abcdef\"[byte & 0x0f];\n",
                    "rendered": {
                      "text": "\tstruct request *req;\n\tint i;\n\tEVUTIL_ASSERT(in);\n\tcp = buf;\n\tfor (i=15; i >= 0; --i) {\n\t\tu8 byte = in->s6_addr[i];\n\t\t*cp++ = \"0123456789abcdef\"[byte & 0x0f];\n",
                      "markdown": "`\tstruct request *req;\n\tint i;\n\tEVUTIL_ASSERT(in);\n\tcp = buf;\n\tfor (i=15; i >= 0; --i) {\n\t\tu8 byte = in->s6_addr[i];\n\t\t*cp++ = \"0123456789abcdef\"[byte & 0x0f];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 2992,
                  "startColumn": 14,
                  "endLine": 2992,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tdefault:\n\t\t/* all ok */\n\t\tlog(EVDNS_LOG_DEBUG,\n\t\t    \"Setting timeout for request %p, sent to nameserver %p\", (void *)req, (void *)req->ns);\n\t\tif (evtimer_add(&req->timeout_event, &req->base->global_timeout) < 0) {\n\t\t\tlog(EVDNS_LOG_WARN,\n\t\t      \"Error from libevent when adding timer for request %p\",\n",
                    "rendered": {
                      "text": "\tdefault:\n\t\t/* all ok */\n\t\tlog(EVDNS_LOG_DEBUG,\n\t\t    \"Setting timeout for request %p, sent to nameserver %p\", (void *)req, (void *)req->ns);\n\t\tif (evtimer_add(&req->timeout_event, &req->base->global_timeout) < 0) {\n\t\t\tlog(EVDNS_LOG_WARN,\n\t\t      \"Error from libevent when adding timer for request %p\",\n",
                      "markdown": "`\tdefault:\n\t\t/* all ok */\n\t\tlog(EVDNS_LOG_DEBUG,\n\t\t    \"Setting timeout for request %p, sent to nameserver %p\", (void *)req, (void *)req->ns);\n\t\tif (evtimer_add(&req->timeout_event, &req->base->global_timeout) < 0) {\n\t\t\tlog(EVDNS_LOG_WARN,\n\t\t      \"Error from libevent when adding timer for request %p\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 1237,
                  "startColumn": 1,
                  "endLine": 1237,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tif (cp + label_len >= end) return -1;\n\t\tif (j + label_len > length) return -1;\n\t\tmemcpy(cp, packet + j, label_len);\n\t\tcp += label_len;\n\t\tj += label_len;\n\t}\n\tif (cp >= end) return -1;\n",
                    "rendered": {
                      "text": "\t\tif (cp + label_len >= end) return -1;\n\t\tif (j + label_len > length) return -1;\n\t\tmemcpy(cp, packet + j, label_len);\n\t\tcp += label_len;\n\t\tj += label_len;\n\t}\n\tif (cp >= end) return -1;\n",
                      "markdown": "`\t\tif (cp + label_len >= end) return -1;\n\t\tif (j + label_len > length) return -1;\n\t\tmemcpy(cp, packet + j, label_len);\n\t\tcp += label_len;\n\t\tj += label_len;\n\t}\n\tif (cp >= end) return -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 1143,
                  "startColumn": 37,
                  "endLine": 1143,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\t * Treat this as a timeout, not a failure.\n\t\t\t */\n\t\t\tlog(EVDNS_LOG_DEBUG, \"Got a SERVERFAILED from nameserver\"\n\t\t\t\t\"at %s; will allow the request to time out.\",\n\t\t\t    evutil_format_sockaddr_port_(\n\t\t\t\t    (struct sockaddr *)&req->ns->address,\n\t\t\t\t    addrbuf, sizeof(addrbuf)));\n",
                    "rendered": {
                      "text": "\t\t\t * Treat this as a timeout, not a failure.\n\t\t\t */\n\t\t\tlog(EVDNS_LOG_DEBUG, \"Got a SERVERFAILED from nameserver\"\n\t\t\t\t\"at %s; will allow the request to time out.\",\n\t\t\t    evutil_format_sockaddr_port_(\n\t\t\t\t    (struct sockaddr *)&req->ns->address,\n\t\t\t\t    addrbuf, sizeof(addrbuf)));\n",
                      "markdown": "`\t\t\t * Treat this as a timeout, not a failure.\n\t\t\t */\n\t\t\tlog(EVDNS_LOG_DEBUG, \"Got a SERVERFAILED from nameserver\"\n\t\t\t\t\"at %s; will allow the request to time out.\",\n\t\t\t    evutil_format_sockaddr_port_(\n\t\t\t\t    (struct sockaddr *)&req->ns->address,\n\t\t\t\t    addrbuf, sizeof(addrbuf)));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evdns.c"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 31,
                  "endLine": 866,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tif (head)\n\t\tevdns_request_remove(req, head);\n\n\tlog(EVDNS_LOG_DEBUG, \"Removing timeout for request %p\", (void *)req);\n\tif (was_inflight) {\n\t\tevtimer_del(&req->timeout_event);\n\t\tbase->global_requests_inflight--;\n",
                    "rendered": {
                      "text": "\tif (head)\n\t\tevdns_request_remove(req, head);\n\n\tlog(EVDNS_LOG_DEBUG, \"Removing timeout for request %p\", (void *)req);\n\tif (was_inflight) {\n\t\tevtimer_del(&req->timeout_event);\n\t\tbase->global_requests_inflight--;\n",
                      "markdown": "`\tif (head)\n\t\tevdns_request_remove(req, head);\n\n\tlog(EVDNS_LOG_DEBUG, \"Removing timeout for request %p\", (void *)req);\n\tif (was_inflight) {\n\t\tevtimer_del(&req->timeout_event);\n\t\tbase->global_requests_inflight--;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_testutils.c"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 37,
                  "endLine": 208,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tchar *question;\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n",
                    "rendered": {
                      "text": "\tchar *question;\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n",
                      "markdown": "`\tchar *question;\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress.c"
                },
                "region": {
                  "startLine": 2801,
                  "startColumn": 17,
                  "endLine": 2801,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tevent_config_set_flag(cfg, EVENT_BASE_FLAG_IGNORE_ENV);\n\tbase = event_base_new_with_config(cfg);\n\ttt_assert(base);\n\ttt_str_op(ignoreenvname, ==, event_base_get_method(base));\n#else\n\ttt_skip();\n#endif\n",
                    "rendered": {
                      "text": "\tevent_config_set_flag(cfg, EVENT_BASE_FLAG_IGNORE_ENV);\n\tbase = event_base_new_with_config(cfg);\n\ttt_assert(base);\n\ttt_str_op(ignoreenvname, ==, event_base_get_method(base));\n#else\n\ttt_skip();\n#endif\n",
                      "markdown": "`\tevent_config_set_flag(cfg, EVENT_BASE_FLAG_IGNORE_ENV);\n\tbase = event_base_new_with_config(cfg);\n\ttt_assert(base);\n\ttt_str_op(ignoreenvname, ==, event_base_get_method(base));\n#else\n\ttt_skip();\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_watch.c"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 15,
                  "endLine": 183,
                  "endColumn": 24,
                  "snippet": {
                    "text": "prepare_callback_3(struct evwatch *watcher, const struct evwatch_prepare_cb_info *info, void *arg)\n{\n\t/* timeout should not be written to */\n\tstruct timeval timeout = { 123, 456 };\n\ttt_int_op(evwatch_prepare_get_timeout(info, &timeout), ==, 0);\n\ttt_int_op(timeout.tv_sec, ==, 123);\n\ttt_int_op(timeout.tv_usec, ==, 456);\n",
                    "rendered": {
                      "text": "prepare_callback_3(struct evwatch *watcher, const struct evwatch_prepare_cb_info *info, void *arg)\n{\n\t/* timeout should not be written to */\n\tstruct timeval timeout = { 123, 456 };\n\ttt_int_op(evwatch_prepare_get_timeout(info, &timeout), ==, 0);\n\ttt_int_op(timeout.tv_sec, ==, 123);\n\ttt_int_op(timeout.tv_usec, ==, 456);\n",
                      "markdown": "`prepare_callback_3(struct evwatch *watcher, const struct evwatch_prepare_cb_info *info, void *arg)\n{\n\t/* timeout should not be written to */\n\tstruct timeval timeout = { 123, 456 };\n\ttt_int_op(evwatch_prepare_get_timeout(info, &timeout), ==, 0);\n\ttt_int_op(timeout.tv_sec, ==, 123);\n\ttt_int_op(timeout.tv_usec, ==, 456);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 2372,
                  "startColumn": 18,
                  "endLine": 2372,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tstatic void                                                    \\\n\ttest_dbg_leak_##name##_(void *env_)                            \\\n\t{                                                              \\\n\t\tdbg_leak_resume(env_, cancel, send_err_shutdown);          \\\n\t}\nIMPL_DBG_LEAK_RESUME(resume, 0, 0)\nIMPL_DBG_LEAK_RESUME(cancel_and_resume, 1, 0)\n",
                    "rendered": {
                      "text": "\tstatic void                                                    \\\n\ttest_dbg_leak_##name##_(void *env_)                            \\\n\t{                                                              \\\n\t\tdbg_leak_resume(env_, cancel, send_err_shutdown);          \\\n\t}\nIMPL_DBG_LEAK_RESUME(resume, 0, 0)\nIMPL_DBG_LEAK_RESUME(cancel_and_resume, 1, 0)\n",
                      "markdown": "`\tstatic void                                                    \\\n\ttest_dbg_leak_##name##_(void *env_)                            \\\n\t{                                                              \\\n\t\tdbg_leak_resume(env_, cancel, send_err_shutdown);          \\\n\t}\nIMPL_DBG_LEAK_RESUME(resume, 0, 0)\nIMPL_DBG_LEAK_RESUME(cancel_and_resume, 1, 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 2336,
                  "startColumn": 22,
                  "endLine": 2336,
                  "endColumn": 36,
                  "snippet": {
                    "text": "}\n\nstatic void\ndbg_leak_resume(void *env_, int cancel, int send_err_shutdown)\n{\n\t/* cancel, loop, free/dns, free/base */\n\tstruct testleak_env_t *env = env_;\n",
                    "rendered": {
                      "text": "}\n\nstatic void\ndbg_leak_resume(void *env_, int cancel, int send_err_shutdown)\n{\n\t/* cancel, loop, free/dns, free/base */\n\tstruct testleak_env_t *env = env_;\n",
                      "markdown": "`}\n\nstatic void\ndbg_leak_resume(void *env_, int cancel, int send_err_shutdown)\n{\n\t/* cancel, loop, free/dns, free/base */\n\tstruct testleak_env_t *env = env_;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 3127,
                  "startColumn": 66,
                  "endLine": 3127,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"hints\" },\n\t{ \"disable_when_inactive\", dns_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n",
                    "rendered": {
                      "text": "\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"hints\" },\n\t{ \"disable_when_inactive\", dns_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n",
                      "markdown": "`\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"hints\" },\n\t{ \"disable_when_inactive\", dns_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 3127,
                  "startColumn": 24,
                  "endLine": 3127,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"hints\" },\n\t{ \"disable_when_inactive\", dns_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n",
                    "rendered": {
                      "text": "\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"hints\" },\n\t{ \"disable_when_inactive\", dns_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n",
                      "markdown": "`\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"hints\" },\n\t{ \"disable_when_inactive\", dns_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 3124,
                  "startColumn": 67,
                  "endLine": 3124,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n",
                    "rendered": {
                      "text": "\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n",
                      "markdown": "`\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 3124,
                  "startColumn": 24,
                  "endLine": 3124,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n",
                    "rendered": {
                      "text": "\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n",
                      "markdown": "`\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, (char*)\"emfile\" },\n#endif\n\t{ \"bufferevent_connect_hostname_hints\", test_bufferevent_connect_hostname,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 3121,
                  "startColumn": 60,
                  "endLine": 3121,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t{ \"reissue_disable_when_inactive\", dns_reissue_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE|TT_NO_LOGS, &basic_setup, NULL },\n\t{ \"inflight\", dns_inflight_test, TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n",
                    "rendered": {
                      "text": "\t{ \"reissue_disable_when_inactive\", dns_reissue_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE|TT_NO_LOGS, &basic_setup, NULL },\n\t{ \"inflight\", dns_inflight_test, TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n",
                      "markdown": "`\t{ \"reissue_disable_when_inactive\", dns_reissue_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE|TT_NO_LOGS, &basic_setup, NULL },\n\t{ \"inflight\", dns_inflight_test, TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 3121,
                  "startColumn": 24,
                  "endLine": 3121,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t{ \"reissue_disable_when_inactive\", dns_reissue_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE|TT_NO_LOGS, &basic_setup, NULL },\n\t{ \"inflight\", dns_inflight_test, TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n",
                    "rendered": {
                      "text": "\t{ \"reissue_disable_when_inactive\", dns_reissue_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE|TT_NO_LOGS, &basic_setup, NULL },\n\t{ \"inflight\", dns_inflight_test, TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n",
                      "markdown": "`\t{ \"reissue_disable_when_inactive\", dns_reissue_disable_when_inactive_test,\n\t  TT_FORK|TT_NEED_BASE|TT_NO_LOGS, &basic_setup, NULL },\n\t{ \"inflight\", dns_inflight_test, TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n\t{ \"bufferevent_connect_hostname\", test_bufferevent_connect_hostname,\n\t  TT_FORK|TT_NEED_BASE, &basic_setup, NULL },\n#ifdef EVENT__HAVE_SETRLIMIT\n\t{ \"bufferevent_connect_hostname_emfile\", test_bufferevent_connect_hostname,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1660,
                  "startColumn": 24,
                  "endLine": 1660,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n\t\t\"127.0.0.1\", listener_port));\n\t/* Launch an async resolve that will succeed. */\n\ttt_assert(!bev_connect_hostname(be[2], dns, &in_hints,\n\t\t\"nobodaddy.example.com\", listener_port));\n\n\tret = event_base_dispatch(data->base);\n",
                    "rendered": {
                      "text": "\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n\t\t\"127.0.0.1\", listener_port));\n\t/* Launch an async resolve that will succeed. */\n\ttt_assert(!bev_connect_hostname(be[2], dns, &in_hints,\n\t\t\"nobodaddy.example.com\", listener_port));\n\n\tret = event_base_dispatch(data->base);\n",
                      "markdown": "`\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n\t\t\"127.0.0.1\", listener_port));\n\t/* Launch an async resolve that will succeed. */\n\ttt_assert(!bev_connect_hostname(be[2], dns, &in_hints,\n\t\t\"nobodaddy.example.com\", listener_port));\n\n\tret = event_base_dispatch(data->base);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1657,
                  "startColumn": 24,
                  "endLine": 1657,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\ttt_assert(!bev_connect_hostname(be[0], dns, &in_hints,\n\t\t\"nosuchplace.example.com\", listener_port));\n\t/* Connect to the IP without resolving. */\n\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n\t\t\"127.0.0.1\", listener_port));\n\t/* Launch an async resolve that will succeed. */\n\ttt_assert(!bev_connect_hostname(be[2], dns, &in_hints,\n",
                    "rendered": {
                      "text": "\ttt_assert(!bev_connect_hostname(be[0], dns, &in_hints,\n\t\t\"nosuchplace.example.com\", listener_port));\n\t/* Connect to the IP without resolving. */\n\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n\t\t\"127.0.0.1\", listener_port));\n\t/* Launch an async resolve that will succeed. */\n\ttt_assert(!bev_connect_hostname(be[2], dns, &in_hints,\n",
                      "markdown": "`\ttt_assert(!bev_connect_hostname(be[0], dns, &in_hints,\n\t\t\"nosuchplace.example.com\", listener_port));\n\t/* Connect to the IP without resolving. */\n\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n\t\t\"127.0.0.1\", listener_port));\n\t/* Launch an async resolve that will succeed. */\n\ttt_assert(!bev_connect_hostname(be[2], dns, &in_hints,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1654,
                  "startColumn": 24,
                  "endLine": 1654,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\t\"nonesuch.nowhere.example.com\", \"80\", &hints, &ai);\n\t}\n\t/* Launch an async resolve that will fail. */\n\ttt_assert(!bev_connect_hostname(be[0], dns, &in_hints,\n\t\t\"nosuchplace.example.com\", listener_port));\n\t/* Connect to the IP without resolving. */\n\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n",
                    "rendered": {
                      "text": "\t\t\t\"nonesuch.nowhere.example.com\", \"80\", &hints, &ai);\n\t}\n\t/* Launch an async resolve that will fail. */\n\ttt_assert(!bev_connect_hostname(be[0], dns, &in_hints,\n\t\t\"nosuchplace.example.com\", listener_port));\n\t/* Connect to the IP without resolving. */\n\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n",
                      "markdown": "`\t\t\t\"nonesuch.nowhere.example.com\", \"80\", &hints, &ai);\n\t}\n\t/* Launch an async resolve that will fail. */\n\ttt_assert(!bev_connect_hostname(be[0], dns, &in_hints,\n\t\t\"nosuchplace.example.com\", listener_port));\n\t/* Connect to the IP without resolving. */\n\ttt_assert(!bev_connect_hostname(be[1], dns, &in_hints,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 24,
                  "endLine": 1639,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\ttt_assert(!bev_connect_hostname(be[3], NULL, &in_hints,\n\t\t\"localhost\", listener_port));\n\t/* Use the blocking resolver with a nonexistent hostname. */\n\ttt_assert(!bev_connect_hostname(be[4], NULL, &in_hints,\n\t\t\"nonesuch.nowhere.example.com\", 80));\n\t{\n\t\t/* The blocking resolver will use the system nameserver, which\n",
                    "rendered": {
                      "text": "\ttt_assert(!bev_connect_hostname(be[3], NULL, &in_hints,\n\t\t\"localhost\", listener_port));\n\t/* Use the blocking resolver with a nonexistent hostname. */\n\ttt_assert(!bev_connect_hostname(be[4], NULL, &in_hints,\n\t\t\"nonesuch.nowhere.example.com\", 80));\n\t{\n\t\t/* The blocking resolver will use the system nameserver, which\n",
                      "markdown": "`\ttt_assert(!bev_connect_hostname(be[3], NULL, &in_hints,\n\t\t\"localhost\", listener_port));\n\t/* Use the blocking resolver with a nonexistent hostname. */\n\ttt_assert(!bev_connect_hostname(be[4], NULL, &in_hints,\n\t\t\"nonesuch.nowhere.example.com\", 80));\n\t{\n\t\t/* The blocking resolver will use the system nameserver, which\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1636,
                  "startColumn": 24,
                  "endLine": 1636,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n\t/* Use the blocking resolver.  This one will fail if your resolver\n\t * can't resolve localhost to 127.0.0.1 */\n\ttt_assert(!bev_connect_hostname(be[3], NULL, &in_hints,\n\t\t\"localhost\", listener_port));\n\t/* Use the blocking resolver with a nonexistent hostname. */\n\ttt_assert(!bev_connect_hostname(be[4], NULL, &in_hints,\n",
                    "rendered": {
                      "text": "\n\t/* Use the blocking resolver.  This one will fail if your resolver\n\t * can't resolve localhost to 127.0.0.1 */\n\ttt_assert(!bev_connect_hostname(be[3], NULL, &in_hints,\n\t\t\"localhost\", listener_port));\n\t/* Use the blocking resolver with a nonexistent hostname. */\n\ttt_assert(!bev_connect_hostname(be[4], NULL, &in_hints,\n",
                      "markdown": "`\n\t/* Use the blocking resolver.  This one will fail if your resolver\n\t * can't resolve localhost to 127.0.0.1 */\n\ttt_assert(!bev_connect_hostname(be[3], NULL, &in_hints,\n\t\t\"localhost\", listener_port));\n\t/* Use the blocking resolver with a nonexistent hostname. */\n\ttt_assert(!bev_connect_hostname(be[4], NULL, &in_hints,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1630,
                  "startColumn": 50,
                  "endLine": 1630,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t\tmemset(&be_outcome[i], 0, sizeof(be_outcome[i]));\n\t\tbe[i] = bufferevent_socket_new(data->base, -1, BEV_OPT_CLOSE_ON_FREE);\n\t\ttt_assert(be[i]);\n\t\tbufferevent_setcb(be[i], NULL, NULL, be_connect_hostname_event_cb,\n\t\t\t&be_outcome[i]);\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tmemset(&be_outcome[i], 0, sizeof(be_outcome[i]));\n\t\tbe[i] = bufferevent_socket_new(data->base, -1, BEV_OPT_CLOSE_ON_FREE);\n\t\ttt_assert(be[i]);\n\t\tbufferevent_setcb(be[i], NULL, NULL, be_connect_hostname_event_cb,\n\t\t\t&be_outcome[i]);\n\t}\n\n",
                      "markdown": "`\t\tmemset(&be_outcome[i], 0, sizeof(be_outcome[i]));\n\t\tbe[i] = bufferevent_socket_new(data->base, -1, BEV_OPT_CLOSE_ON_FREE);\n\t\ttt_assert(be[i]);\n\t\tbufferevent_setcb(be[i], NULL, NULL, be_connect_hostname_event_cb,\n\t\t\t&be_outcome[i]);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1584,
                  "startColumn": 12,
                  "endLine": 1584,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tin_hints.ai_flags = EVUTIL_AI_ADDRCONFIG;\n\t}\n\n\tbe_connect_hostname_base = data->base;\n\n\t/* Bind an address and figure out what port it's on. */\n\tmemset(&sin, 0, sizeof(sin));\n",
                    "rendered": {
                      "text": "\t\tin_hints.ai_flags = EVUTIL_AI_ADDRCONFIG;\n\t}\n\n\tbe_connect_hostname_base = data->base;\n\n\t/* Bind an address and figure out what port it's on. */\n\tmemset(&sin, 0, sizeof(sin));\n",
                      "markdown": "`\t\tin_hints.ai_flags = EVUTIL_AI_ADDRCONFIG;\n\t}\n\n\tbe_connect_hostname_base = data->base;\n\n\t/* Bind an address and figure out what port it's on. */\n\tmemset(&sin, 0, sizeof(sin));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1563,
                  "startColumn": 16,
                  "endLine": 1563,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tint hints  = data->setup_data && !strcmp(data->setup_data, \"hints\");\n\tstruct evconnlistener *listener = NULL;\n\tstruct bufferevent *be[5] = { NULL, NULL, NULL, NULL, NULL };\n\tstruct be_conn_hostname_result be_outcome[ARRAY_SIZE(be)];\n\tint expect_err;\n\tstruct evdns_base *dns=NULL;\n\tstruct evdns_server_port *port=NULL;\n",
                    "rendered": {
                      "text": "\tint hints  = data->setup_data && !strcmp(data->setup_data, \"hints\");\n\tstruct evconnlistener *listener = NULL;\n\tstruct bufferevent *be[5] = { NULL, NULL, NULL, NULL, NULL };\n\tstruct be_conn_hostname_result be_outcome[ARRAY_SIZE(be)];\n\tint expect_err;\n\tstruct evdns_base *dns=NULL;\n\tstruct evdns_server_port *port=NULL;\n",
                      "markdown": "`\tint hints  = data->setup_data && !strcmp(data->setup_data, \"hints\");\n\tstruct evconnlistener *listener = NULL;\n\tstruct bufferevent *be[5] = { NULL, NULL, NULL, NULL, NULL };\n\tstruct be_conn_hostname_result be_outcome[ARRAY_SIZE(be)];\n\tint expect_err;\n\tstruct evdns_base *dns=NULL;\n\tstruct evdns_server_port *port=NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1556,
                  "startColumn": 25,
                  "endLine": 1556,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\nstatic void\ntest_bufferevent_connect_hostname(void *arg)\n{\n\tstruct basic_test_data *data = arg;\n\tint emfile = data->setup_data && !strcmp(data->setup_data, \"emfile\");\n",
                    "rendered": {
                      "text": "\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\nstatic void\ntest_bufferevent_connect_hostname(void *arg)\n{\n\tstruct basic_test_data *data = arg;\n\tint emfile = data->setup_data && !strcmp(data->setup_data, \"emfile\");\n",
                      "markdown": "`\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\nstatic void\ntest_bufferevent_connect_hostname(void *arg)\n{\n\tstruct basic_test_data *data = arg;\n\tint emfile = data->setup_data && !strcmp(data->setup_data, \"emfile\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1553,
                  "startColumn": 36,
                  "endLine": 1553,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tif (hints->ai_flags)\n\t\treturn bufferevent_socket_connect_hostname_hints(bev, dns, hints, host, port);\n\telse\n\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\nstatic void\ntest_bufferevent_connect_hostname(void *arg)\n",
                    "rendered": {
                      "text": "\tif (hints->ai_flags)\n\t\treturn bufferevent_socket_connect_hostname_hints(bev, dns, hints, host, port);\n\telse\n\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\nstatic void\ntest_bufferevent_connect_hostname(void *arg)\n",
                      "markdown": "`\tif (hints->ai_flags)\n\t\treturn bufferevent_socket_connect_hostname_hints(bev, dns, hints, host, port);\n\telse\n\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\nstatic void\ntest_bufferevent_connect_hostname(void *arg)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1551,
                  "startColumn": 36,
                  "endLine": 1551,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    struct evutil_addrinfo *hints, const char *host, int port)\n{\n\tif (hints->ai_flags)\n\t\treturn bufferevent_socket_connect_hostname_hints(bev, dns, hints, host, port);\n\telse\n\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\n",
                    "rendered": {
                      "text": "    struct evutil_addrinfo *hints, const char *host, int port)\n{\n\tif (hints->ai_flags)\n\t\treturn bufferevent_socket_connect_hostname_hints(bev, dns, hints, host, port);\n\telse\n\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\n",
                      "markdown": "`    struct evutil_addrinfo *hints, const char *host, int port)\n{\n\tif (hints->ai_flags)\n\t\treturn bufferevent_socket_connect_hostname_hints(bev, dns, hints, host, port);\n\telse\n\t\treturn bufferevent_socket_connect_hostname(bev, dns, AF_INET, host, port);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1547,
                  "startColumn": 23,
                  "endLine": 1547,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t}\n}\n\nstatic int bev_connect_hostname(struct bufferevent *bev, struct evdns_base *dns,\n    struct evutil_addrinfo *hints, const char *host, int port)\n{\n\tif (hints->ai_flags)\n",
                    "rendered": {
                      "text": "\t}\n}\n\nstatic int bev_connect_hostname(struct bufferevent *bev, struct evdns_base *dns,\n    struct evutil_addrinfo *hints, const char *host, int port)\n{\n\tif (hints->ai_flags)\n",
                      "markdown": "`\t}\n}\n\nstatic int bev_connect_hostname(struct bufferevent *bev, struct evdns_base *dns,\n    struct evutil_addrinfo *hints, const char *host, int port)\n{\n\tif (hints->ai_flags)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1542,
                  "startColumn": 34,
                  "endLine": 1542,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (total_n_accepted >= expected && total_connected_or_failed >= 5)\n\t\t\tevent_base_loopexit(be_connect_hostname_base,\n\t\t\t    NULL);\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (total_n_accepted >= expected && total_connected_or_failed >= 5)\n\t\t\tevent_base_loopexit(be_connect_hostname_base,\n\t\t\t    NULL);\n\t}\n}\n",
                      "markdown": "`\t\t}\n\n\t\tif (total_n_accepted >= expected && total_connected_or_failed >= 5)\n\t\t\tevent_base_loopexit(be_connect_hostname_base,\n\t\t\t    NULL);\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1514,
                  "startColumn": 16,
                  "endLine": 1514,
                  "endColumn": 24,
                  "snippet": {
                    "text": "static void\nbe_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)\n{\n\tstruct be_conn_hostname_result *got = ctx;\n\n\tif (got->what) {\n\t\tTT_FAIL((\"Two events on one bufferevent. %d,%d\",\n",
                    "rendered": {
                      "text": "static void\nbe_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)\n{\n\tstruct be_conn_hostname_result *got = ctx;\n\n\tif (got->what) {\n\t\tTT_FAIL((\"Two events on one bufferevent. %d,%d\",\n",
                      "markdown": "`static void\nbe_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)\n{\n\tstruct be_conn_hostname_result *got = ctx;\n\n\tif (got->what) {\n\t\tTT_FAIL((\"Two events on one bufferevent. %d,%d\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1512,
                  "startColumn": 11,
                  "endLine": 1512,
                  "endColumn": 19,
                  "snippet": {
                    "text": "/* Bufferevent event callback for the connect_hostname test: remembers what\n * event we got. */\nstatic void\nbe_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)\n{\n\tstruct be_conn_hostname_result *got = ctx;\n\n",
                    "rendered": {
                      "text": "/* Bufferevent event callback for the connect_hostname test: remembers what\n * event we got. */\nstatic void\nbe_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)\n{\n\tstruct be_conn_hostname_result *got = ctx;\n\n",
                      "markdown": "`/* Bufferevent event callback for the connect_hostname test: remembers what\n * event we got. */\nstatic void\nbe_connect_hostname_event_cb(struct bufferevent *bev, short what, void *ctx)\n{\n\tstruct be_conn_hostname_result *got = ctx;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1504,
                  "startColumn": 15,
                  "endLine": 1504,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t    NULL);\n}\n\nstruct be_conn_hostname_result {\n\tint dnserr;\n\tint what;\n};\n",
                    "rendered": {
                      "text": "\t\t    NULL);\n}\n\nstruct be_conn_hostname_result {\n\tint dnserr;\n\tint what;\n};\n",
                      "markdown": "`\t\t    NULL);\n}\n\nstruct be_conn_hostname_result {\n\tint dnserr;\n\tint what;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1500,
                  "startColumn": 33,
                  "endLine": 1500,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t++total_n_accepted;\n\t/* don't do anything with the socket; let it close when we exit() */\n\tif (total_n_accepted >= 3 && total_connected_or_failed >= 5)\n\t\tevent_base_loopexit(be_connect_hostname_base,\n\t\t    NULL);\n}\n\n",
                    "rendered": {
                      "text": "\t++total_n_accepted;\n\t/* don't do anything with the socket; let it close when we exit() */\n\tif (total_n_accepted >= 3 && total_connected_or_failed >= 5)\n\t\tevent_base_loopexit(be_connect_hostname_base,\n\t\t    NULL);\n}\n\n",
                      "markdown": "`\t++total_n_accepted;\n\t/* don't do anything with the socket; let it close when we exit() */\n\tif (total_n_accepted >= 3 && total_connected_or_failed >= 5)\n\t\tevent_base_loopexit(be_connect_hostname_base,\n\t\t    NULL);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 37,
                  "endLine": 1349,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\nstatic int total_connected_or_failed = 0;\nstatic int total_n_accepted = 0;\nstatic struct event_base *be_connect_hostname_base = NULL;\n\n/* Implements a DNS server for the connect_hostname test and the\n * getaddrinfo_async test */\n",
                    "rendered": {
                      "text": "\nstatic int total_connected_or_failed = 0;\nstatic int total_n_accepted = 0;\nstatic struct event_base *be_connect_hostname_base = NULL;\n\n/* Implements a DNS server for the connect_hostname test and the\n * getaddrinfo_async test */\n",
                      "markdown": "`\nstatic int total_connected_or_failed = 0;\nstatic int total_n_accepted = 0;\nstatic struct event_base *be_connect_hostname_base = NULL;\n\n/* Implements a DNS server for the connect_hostname test and the\n * getaddrinfo_async test */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 6,
                  "endLine": 472,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t    dns_server_gethostbyname_cb, NULL);\n\tmemcpy(resolve_addr6.s6_addr,\n\t    \"\\xff\\xf0\\x00\\x00\\x00\\x00\\xaa\\xaa\"\n\t    \"\\x11\\x11\\x00\\x00\\x00\\x00\\xef\\xef\", 16);\n\tevdns_base_resolve_reverse_ipv6(base, &resolve_addr6, 0,\n\t    dns_server_gethostbyname_cb, (void*)6);\n\n",
                    "rendered": {
                      "text": "\t    dns_server_gethostbyname_cb, NULL);\n\tmemcpy(resolve_addr6.s6_addr,\n\t    \"\\xff\\xf0\\x00\\x00\\x00\\x00\\xaa\\xaa\"\n\t    \"\\x11\\x11\\x00\\x00\\x00\\x00\\xef\\xef\", 16);\n\tevdns_base_resolve_reverse_ipv6(base, &resolve_addr6, 0,\n\t    dns_server_gethostbyname_cb, (void*)6);\n\n",
                      "markdown": "`\t    dns_server_gethostbyname_cb, NULL);\n\tmemcpy(resolve_addr6.s6_addr,\n\t    \"\\xff\\xf0\\x00\\x00\\x00\\x00\\xaa\\xaa\"\n\t    \"\\x11\\x11\\x00\\x00\\x00\\x00\\xef\\xef\", 16);\n\tevdns_base_resolve_reverse_ipv6(base, &resolve_addr6, 0,\n\t    dns_server_gethostbyname_cb, (void*)6);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 6,
                  "endLine": 471,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tevdns_base_resolve_reverse(base, &resolve_addr, 0,\n\t    dns_server_gethostbyname_cb, NULL);\n\tmemcpy(resolve_addr6.s6_addr,\n\t    \"\\xff\\xf0\\x00\\x00\\x00\\x00\\xaa\\xaa\"\n\t    \"\\x11\\x11\\x00\\x00\\x00\\x00\\xef\\xef\", 16);\n\tevdns_base_resolve_reverse_ipv6(base, &resolve_addr6, 0,\n\t    dns_server_gethostbyname_cb, (void*)6);\n",
                    "rendered": {
                      "text": "\tevdns_base_resolve_reverse(base, &resolve_addr, 0,\n\t    dns_server_gethostbyname_cb, NULL);\n\tmemcpy(resolve_addr6.s6_addr,\n\t    \"\\xff\\xf0\\x00\\x00\\x00\\x00\\xaa\\xaa\"\n\t    \"\\x11\\x11\\x00\\x00\\x00\\x00\\xef\\xef\", 16);\n\tevdns_base_resolve_reverse_ipv6(base, &resolve_addr6, 0,\n\t    dns_server_gethostbyname_cb, (void*)6);\n",
                      "markdown": "`\tevdns_base_resolve_reverse(base, &resolve_addr, 0,\n\t    dns_server_gethostbyname_cb, NULL);\n\tmemcpy(resolve_addr6.s6_addr,\n\t    \"\\xff\\xf0\\x00\\x00\\x00\\x00\\xaa\\xaa\"\n\t    \"\\x11\\x11\\x00\\x00\\x00\\x00\\xef\\xef\", 16);\n\tevdns_base_resolve_reverse_ipv6(base, &resolve_addr6, 0,\n\t    dns_server_gethostbyname_cb, (void*)6);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 767,
                  "startColumn": 37,
                  "endLine": 767,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t}\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n",
                      "markdown": "`\t}\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 37,
                  "endLine": 692,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\tconst char *question;\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n",
                    "rendered": {
                      "text": "\tconst char *question;\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n",
                      "markdown": "`\tconst char *question;\n\n\tif (req->nquestions != 1)\n\t\tTT_DIE((\"Only handling one question at a time; got %d\",\n\t\t\treq->nquestions));\n\n\tquestion = req->questions[0]->name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_dns.c"
                },
                "region": {
                  "startLine": 2278,
                  "endLine": 2278,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tevent_enable_debug_mode();\n\n\t/* not mm_calloc: we don't want to mess with the count. */\n\tenv = calloc(1, sizeof(struct testleak_env_t));\n\tenv->base = event_base_new();\n\tenv->dns_base = evdns_base_new(env->base, 0);\n\tenv->req = evdns_base_resolve_ipv4(\n",
                    "rendered": {
                      "text": "\tevent_enable_debug_mode();\n\n\t/* not mm_calloc: we don't want to mess with the count. */\n\tenv = calloc(1, sizeof(struct testleak_env_t));\n\tenv->base = event_base_new();\n\tenv->dns_base = evdns_base_new(env->base, 0);\n\tenv->req = evdns_base_resolve_ipv4(\n",
                      "markdown": "`\tevent_enable_debug_mode();\n\n\t/* not mm_calloc: we don't want to mess with the count. */\n\tenv = calloc(1, sizeof(struct testleak_env_t));\n\tenv->base = event_base_new();\n\tenv->dns_base = evdns_base_new(env->base, 0);\n\tenv->req = evdns_base_resolve_ipv4(\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-ratelim.c"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 8,
                  "endLine": 534,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tprintf(\" average: %f per second\\n\",\n\t    (((double)total_received)/cfg_duration)/cfg_n_connections);\n\tif (expected_avg_persec > 0) {\n\t\tdouble diff = expected_avg_persec - (((double)total_received)/cfg_duration)/cfg_n_connections;\n\t\tprintf(\"  [Off by %lf]\\n\", diff);\n\t\tif (cfg_connlimit_tolerance > 0 &&\n\t\t    fabs(diff) > cfg_connlimit_tolerance) {\n",
                    "rendered": {
                      "text": "\tprintf(\" average: %f per second\\n\",\n\t    (((double)total_received)/cfg_duration)/cfg_n_connections);\n\tif (expected_avg_persec > 0) {\n\t\tdouble diff = expected_avg_persec - (((double)total_received)/cfg_duration)/cfg_n_connections;\n\t\tprintf(\"  [Off by %lf]\\n\", diff);\n\t\tif (cfg_connlimit_tolerance > 0 &&\n\t\t    fabs(diff) > cfg_connlimit_tolerance) {\n",
                      "markdown": "`\tprintf(\" average: %f per second\\n\",\n\t    (((double)total_received)/cfg_duration)/cfg_n_connections);\n\tif (expected_avg_persec > 0) {\n\t\tdouble diff = expected_avg_persec - (((double)total_received)/cfg_duration)/cfg_n_connections;\n\t\tprintf(\"  [Off by %lf]\\n\", diff);\n\t\tif (cfg_connlimit_tolerance > 0 &&\n\t\t    fabs(diff) > cfg_connlimit_tolerance) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-ratelim.c"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 8,
                  "endLine": 521,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tprintf(\"   total: %f per second\\n\",\n\t    ((double)total_received)/cfg_duration);\n\tif (expected_total_persec > 0) {\n\t\tdouble diff = expected_total_persec -\n\t\t    ((double)total_received/cfg_duration);\n\t\tprintf(\"  [Off by %lf]\\n\", diff);\n\t\tif (cfg_grouplimit_tolerance > 0 &&\n",
                    "rendered": {
                      "text": "\tprintf(\"   total: %f per second\\n\",\n\t    ((double)total_received)/cfg_duration);\n\tif (expected_total_persec > 0) {\n\t\tdouble diff = expected_total_persec -\n\t\t    ((double)total_received/cfg_duration);\n\t\tprintf(\"  [Off by %lf]\\n\", diff);\n\t\tif (cfg_grouplimit_tolerance > 0 &&\n",
                      "markdown": "`\tprintf(\"   total: %f per second\\n\",\n\t    ((double)total_received)/cfg_duration);\n\tif (expected_total_persec > 0) {\n\t\tdouble diff = expected_total_persec -\n\t\t    ((double)total_received/cfg_duration);\n\t\tprintf(\"  [Off by %lf]\\n\", diff);\n\t\tif (cfg_grouplimit_tolerance > 0 &&\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/FindMbedTLS.cmake"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/FindMbedTLS.cmake"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# FindMbedTLS\n# -----------\n#\n# Find the mbedTLS encryption library.\n#\n# Imported Targets\n# ^^^^^^^^^^^^^^^^\n",
                    "rendered": {
                      "text": "# FindMbedTLS\n# -----------\n#\n# Find the mbedTLS encryption library.\n#\n# Imported Targets\n# ^^^^^^^^^^^^^^^^\n",
                      "markdown": "`# FindMbedTLS\n# -----------\n#\n# Find the mbedTLS encryption library.\n#\n# Imported Targets\n# ^^^^^^^^^^^^^^^^\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/VersionViaGit.cmake"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# This module defines the following variables utilizing\n# git to determine the parent tag. And if found the macro\n# will attempt to parse them in the github tag format\n#\n# Useful for auto-versioning in our CMakeLists\n",
                    "rendered": {
                      "text": "# This module defines the following variables utilizing\n# git to determine the parent tag. And if found the macro\n# will attempt to parse them in the github tag format\n#\n# Useful for auto-versioning in our CMakeLists\n",
                      "markdown": "`# This module defines the following variables utilizing\n# git to determine the parent tag. And if found the macro\n# will attempt to parse them in the github tag format\n#\n# Useful for auto-versioning in our CMakeLists\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.exrc"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 37,
                  "endLine": 2,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\"\n\" Add this into your .vimrc, to allow vim handle this file.\n\"\n\" set exrc\n\" set secure \" even after this this is kind of dangerous\n",
                    "rendered": {
                      "text": "\"\n\" Add this into your .vimrc, to allow vim handle this file.\n\"\n\" set exrc\n\" set secure \" even after this this is kind of dangerous\n",
                      "markdown": "`\"\n\" Add this into your .vimrc, to allow vim handle this file.\n\"\n\" set exrc\n\" set secure \" even after this this is kind of dangerous\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Doxyfile"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 55,
                  "endLine": 205,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Doxyfile"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 55,
                  "endLine": 205,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro \n# names in the source code. If set to NO (the default) only conditional \n# compilation will be performed. Macro expansion can be done in a controlled \n# way by setting EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Doxyfile"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 20,
                  "endLine": 191,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# then it will generate one additional man file for each entity \n# documented in the real man page(s). These additional files \n# only source the real man page, but without them the man command \n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n",
                    "rendered": {
                      "text": "# then it will generate one additional man file for each entity \n# documented in the real man page(s). These additional files \n# only source the real man page, but without them the man command \n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n",
                      "markdown": "`# then it will generate one additional man file for each entity \n# documented in the real man page(s). These additional files \n# only source the real man page, but without them the man command \n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Doxyfile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 60,
                  "endLine": 41,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n# brief documentation of file, namespace and class members alphabetically \n# by member name. If set to NO (the default) the members will appear in \n# declaration order.\n",
                    "rendered": {
                      "text": "\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n# brief documentation of file, namespace and class members alphabetically \n# by member name. If set to NO (the default) the members will appear in \n# declaration order.\n",
                      "markdown": "`\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the \n# brief documentation of file, namespace and class members alphabetically \n# by member name. If set to NO (the default) the members will appear in \n# declaration order.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/kqueue.c"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 16,
                  "endLine": 563,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tstruct kqop *kqop = base->evbase;\n#if defined(EVFILT_USER) && defined(NOTE_TRIGGER)\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n#endif\n\tif (! kqop->notify_event_added)\n\t\treturn -1;\n",
                    "rendered": {
                      "text": "\tstruct kqop *kqop = base->evbase;\n#if defined(EVFILT_USER) && defined(NOTE_TRIGGER)\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n#endif\n\tif (! kqop->notify_event_added)\n\t\treturn -1;\n",
                      "markdown": "`\tstruct kqop *kqop = base->evbase;\n#if defined(EVFILT_USER) && defined(NOTE_TRIGGER)\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n#endif\n\tif (! kqop->notify_event_added)\n\t\treturn -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/kqueue.c"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 16,
                  "endLine": 532,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tstruct kqop *kqop = base->evbase;\n#if defined(EVFILT_USER) && defined(NOTE_TRIGGER)\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n#endif\n\n\tif (kqop->notify_event_added)\n",
                    "rendered": {
                      "text": "\tstruct kqop *kqop = base->evbase;\n#if defined(EVFILT_USER) && defined(NOTE_TRIGGER)\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n#endif\n\n\tif (kqop->notify_event_added)\n",
                      "markdown": "`\tstruct kqop *kqop = base->evbase;\n#if defined(EVFILT_USER) && defined(NOTE_TRIGGER)\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n#endif\n\n\tif (kqop->notify_event_added)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/kqueue.c"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 16,
                  "endLine": 492,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tstruct kqop *kqop = base->evbase;\n\tstruct kevent kev;\n\n\tstruct timespec timeout = { 0, 0 };\n\t(void)p;\n\n\tEVUTIL_ASSERT(nsignal >= 0 && nsignal < NSIG);\n",
                    "rendered": {
                      "text": "\tstruct kqop *kqop = base->evbase;\n\tstruct kevent kev;\n\n\tstruct timespec timeout = { 0, 0 };\n\t(void)p;\n\n\tEVUTIL_ASSERT(nsignal >= 0 && nsignal < NSIG);\n",
                      "markdown": "`\tstruct kqop *kqop = base->evbase;\n\tstruct kevent kev;\n\n\tstruct timespec timeout = { 0, 0 };\n\t(void)p;\n\n\tEVUTIL_ASSERT(nsignal >= 0 && nsignal < NSIG);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/kqueue.c"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 16,
                  "endLine": 458,
                  "endColumn": 25,
                  "snippet": {
                    "text": "{\n\tstruct kqop *kqop = base->evbase;\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n\t(void)p;\n\n\tEVUTIL_ASSERT(nsignal >= 0 && nsignal < NSIG);\n",
                    "rendered": {
                      "text": "{\n\tstruct kqop *kqop = base->evbase;\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n\t(void)p;\n\n\tEVUTIL_ASSERT(nsignal >= 0 && nsignal < NSIG);\n",
                      "markdown": "`{\n\tstruct kqop *kqop = base->evbase;\n\tstruct kevent kev;\n\tstruct timespec timeout = { 0, 0 };\n\t(void)p;\n\n\tEVUTIL_ASSERT(nsignal >= 0 && nsignal < NSIG);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2176,
                  "startColumn": 5,
                  "endLine": 2176,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    if (key < node->key)\n      node = node->left;\n    else if (key > node->key)\n      node = node->right;\n    else\n      return node;\n  }\n",
                    "rendered": {
                      "text": "    if (key < node->key)\n      node = node->left;\n    else if (key > node->key)\n      node = node->right;\n    else\n      return node;\n  }\n",
                      "markdown": "`    if (key < node->key)\n      node = node->left;\n    else if (key > node->key)\n      node = node->right;\n    else\n      return node;\n  }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2174,
                  "startColumn": 5,
                  "endLine": 2174,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  tree_node_t* node = tree->root;\n  while (node) {\n    if (key < node->key)\n      node = node->left;\n    else if (key > node->key)\n      node = node->right;\n    else\n",
                    "rendered": {
                      "text": "  tree_node_t* node = tree->root;\n  while (node) {\n    if (key < node->key)\n      node = node->left;\n    else if (key > node->key)\n      node = node->right;\n    else\n",
                      "markdown": "`  tree_node_t* node = tree->root;\n  while (node) {\n    if (key < node->key)\n      node = node->left;\n    else if (key > node->key)\n      node = node->right;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2171,
                  "startColumn": 14,
                  "endLine": 2171,
                  "endColumn": 20,
                  "snippet": {
                    "text": "}\n\ntree_node_t* tree_find(const tree_t* tree, uintptr_t key) {\n  tree_node_t* node = tree->root;\n  while (node) {\n    if (key < node->key)\n      node = node->left;\n",
                    "rendered": {
                      "text": "}\n\ntree_node_t* tree_find(const tree_t* tree, uintptr_t key) {\n  tree_node_t* node = tree->root;\n  while (node) {\n    if (key < node->key)\n      node = node->left;\n",
                      "markdown": "`}\n\ntree_node_t* tree_find(const tree_t* tree, uintptr_t key) {\n  tree_node_t* node = tree->root;\n  while (node) {\n    if (key < node->key)\n      node = node->left;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2162,
                  "startColumn": 3,
                  "endLine": 2162,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    } else {\n      TREE__REBALANCE_AFTER_REMOVE(right, left)\n    }\n    node = parent;\n    parent = parent->parent;\n  } while (!node->red);\n\n",
                    "rendered": {
                      "text": "    } else {\n      TREE__REBALANCE_AFTER_REMOVE(right, left)\n    }\n    node = parent;\n    parent = parent->parent;\n  } while (!node->red);\n\n",
                      "markdown": "`    } else {\n      TREE__REBALANCE_AFTER_REMOVE(right, left)\n    }\n    node = parent;\n    parent = parent->parent;\n  } while (!node->red);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2142,
                  "startColumn": 3,
                  "endLine": 2142,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    }\n  } else {\n    red = node->red;\n    node = next;\n  }\n\n  if (node)\n",
                    "rendered": {
                      "text": "    }\n  } else {\n    red = node->red;\n    node = next;\n  }\n\n  if (node)\n",
                      "markdown": "`    }\n  } else {\n    red = node->red;\n    node = next;\n  }\n\n  if (node)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2141,
                  "startColumn": 3,
                  "endLine": 2141,
                  "endColumn": 8,
                  "snippet": {
                    "text": "      node = next->right;\n    }\n  } else {\n    red = node->red;\n    node = next;\n  }\n\n",
                    "rendered": {
                      "text": "      node = next->right;\n    }\n  } else {\n    red = node->red;\n    node = next;\n  }\n\n",
                      "markdown": "`      node = next->right;\n    }\n  } else {\n    red = node->red;\n    node = next;\n  }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2138,
                  "startColumn": 5,
                  "endLine": 2138,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    } else {\n      next->parent = parent;\n      parent = next;\n      node = next->right;\n    }\n  } else {\n    red = node->red;\n",
                    "rendered": {
                      "text": "    } else {\n      next->parent = parent;\n      parent = next;\n      node = next->right;\n    }\n  } else {\n    red = node->red;\n",
                      "markdown": "`    } else {\n      next->parent = parent;\n      parent = next;\n      node = next->right;\n    }\n  } else {\n    red = node->red;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2131,
                  "startColumn": 5,
                  "endLine": 2131,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    if (next != right) {\n      parent = next->parent;\n      next->parent = node->parent;\n      node = next->right;\n      parent->left = node;\n      next->right = right;\n      right->parent = next;\n",
                    "rendered": {
                      "text": "    if (next != right) {\n      parent = next->parent;\n      next->parent = node->parent;\n      node = next->right;\n      parent->left = node;\n      next->right = right;\n      right->parent = next;\n",
                      "markdown": "`    if (next != right) {\n      parent = next->parent;\n      next->parent = node->parent;\n      node = next->right;\n      parent->left = node;\n      next->right = right;\n      right->parent = next;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2124,
                  "startColumn": 3,
                  "endLine": 2124,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  }\n\n  if (left && right) {\n    red = next->red;\n    next->red = node->red;\n    next->left = left;\n    left->parent = next;\n",
                    "rendered": {
                      "text": "  }\n\n  if (left && right) {\n    red = next->red;\n    next->red = node->red;\n    next->left = left;\n    left->parent = next;\n",
                      "markdown": "`  }\n\n  if (left && right) {\n    red = next->red;\n    next->red = node->red;\n    next->left = left;\n    left->parent = next;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2092,
                  "startColumn": 3,
                  "endLine": 2092,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    sibling->red = parent->red;                    \\\n    parent->red = sibling->trans->red = false;     \\\n    tree__rotate_##cis(tree, parent);              \\\n    node = tree->root;                             \\\n    break;                                         \\\n  }                                                \\\n  sibling->red = true;\n",
                    "rendered": {
                      "text": "    sibling->red = parent->red;                    \\\n    parent->red = sibling->trans->red = false;     \\\n    tree__rotate_##cis(tree, parent);              \\\n    node = tree->root;                             \\\n    break;                                         \\\n  }                                                \\\n  sibling->red = true;\n",
                      "markdown": "`    sibling->red = parent->red;                    \\\n    parent->red = sibling->trans->red = false;     \\\n    tree__rotate_##cis(tree, parent);              \\\n    node = tree->root;                             \\\n    break;                                         \\\n  }                                                \\\n  sibling->red = true;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2029,
                  "startColumn": 5,
                  "endLine": 2029,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  } else {                                       \\\n    if (node == parent->trans) {                 \\\n      tree__rotate_##cis(tree, parent);          \\\n      node = parent;                             \\\n      parent = node->parent;                     \\\n    }                                            \\\n    parent->red = false;                         \\\n",
                    "rendered": {
                      "text": "  } else {                                       \\\n    if (node == parent->trans) {                 \\\n      tree__rotate_##cis(tree, parent);          \\\n      node = parent;                             \\\n      parent = node->parent;                     \\\n    }                                            \\\n    parent->red = false;                         \\\n",
                      "markdown": "`  } else {                                       \\\n    if (node == parent->trans) {                 \\\n      tree__rotate_##cis(tree, parent);          \\\n      node = parent;                             \\\n      parent = node->parent;                     \\\n    }                                            \\\n    parent->red = false;                         \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/wepoll.c"
                },
                "region": {
                  "startLine": 2025,
                  "startColumn": 3,
                  "endLine": 2025,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  if (uncle && uncle->red) {                     \\\n    parent->red = uncle->red = false;            \\\n    grandparent->red = true;                     \\\n    node = grandparent;                          \\\n  } else {                                       \\\n    if (node == parent->trans) {                 \\\n      tree__rotate_##cis(tree, parent);          \\\n",
                    "rendered": {
                      "text": "  if (uncle && uncle->red) {                     \\\n    parent->red = uncle->red = false;            \\\n    grandparent->red = true;                     \\\n    node = grandparent;                          \\\n  } else {                                       \\\n    if (node == parent->trans) {                 \\\n      tree__rotate_##cis(tree, parent);          \\\n",
                      "markdown": "`  if (uncle && uncle->red) {                     \\\n    parent->red = uncle->red = false;            \\\n    grandparent->red = true;                     \\\n    node = grandparent;                          \\\n  } else {                                       \\\n    if (node == parent->trans) {                 \\\n      tree__rotate_##cis(tree, parent);          \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/becat.c"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 14,
                  "endLine": 147,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tgoto err;\n\t\tif (SSL_use_certificate(ssl, ctx->ssl.cert) != 1)\n\t\t\tgoto err;\n\t\tif (SSL_use_PrivateKey(ssl, ctx->ssl.pkey) != 1)\n\t\t\tgoto err;\n\t\tbev = bufferevent_openssl_socket_new(base, fd, ssl, state, flags);\n\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tgoto err;\n\t\tif (SSL_use_certificate(ssl, ctx->ssl.cert) != 1)\n\t\t\tgoto err;\n\t\tif (SSL_use_PrivateKey(ssl, ctx->ssl.pkey) != 1)\n\t\t\tgoto err;\n\t\tbev = bufferevent_openssl_socket_new(base, fd, ssl, state, flags);\n\t} else {\n",
                      "markdown": "`\t\t\tgoto err;\n\t\tif (SSL_use_certificate(ssl, ctx->ssl.cert) != 1)\n\t\t\tgoto err;\n\t\tif (SSL_use_PrivateKey(ssl, ctx->ssl.pkey) != 1)\n\t\t\tgoto err;\n\t\tbev = bufferevent_openssl_socket_new(base, fd, ssl, state, flags);\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/becat.c"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 36,
                  "endLine": 270,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nstatic void print_usage(FILE *out, const char *name)\n{\n\tfprintf(out, \"Syntax: %s [ OPTS ] [hostname] [port]\\n\", name);\n\tfprintf(out,\n\t\t\"\\n\"\n\t\t\"ncat like utility\\n\"\n",
                    "rendered": {
                      "text": "\nstatic void print_usage(FILE *out, const char *name)\n{\n\tfprintf(out, \"Syntax: %s [ OPTS ] [hostname] [port]\\n\", name);\n\tfprintf(out,\n\t\t\"\\n\"\n\t\t\"ncat like utility\\n\"\n",
                      "markdown": "`\nstatic void print_usage(FILE *out, const char *name)\n{\n\tfprintf(out, \"Syntax: %s [ OPTS ] [hostname] [port]\\n\", name);\n\tfprintf(out,\n\t\t\"\\n\"\n\t\t\"ncat like utility\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/becat.c"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 19,
                  "endLine": 614,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\tgoto err;\n\t\t}\n\t\tif (be_set_timeout(bev, &o)) {\n\t\t\tinfo(\"Cannot set timeout for client\\n\");\n\t\t\tgoto err;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tgoto err;\n\t\t}\n\t\tif (be_set_timeout(bev, &o)) {\n\t\t\tinfo(\"Cannot set timeout for client\\n\");\n\t\t\tgoto err;\n\t\t}\n\n",
                      "markdown": "`\t\t\tgoto err;\n\t\t}\n\t\tif (be_set_timeout(bev, &o)) {\n\t\t\tinfo(\"Cannot set timeout for client\\n\");\n\t\t\tgoto err;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/becat.c"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 18,
                  "endLine": 474,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tgoto err;\n\t}\n\tif (be_set_timeout(bev, ctx->opts)) {\n\t\tinfo(\"Cannot set timeout for server\\n\");\n\t\tgoto err;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tgoto err;\n\t}\n\tif (be_set_timeout(bev, ctx->opts)) {\n\t\tinfo(\"Cannot set timeout for server\\n\");\n\t\tgoto err;\n\t}\n\n",
                      "markdown": "`\t\tgoto err;\n\t}\n\tif (be_set_timeout(bev, ctx->opts)) {\n\t\tinfo(\"Cannot set timeout for server\\n\");\n\t\tgoto err;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/becat.c"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 10,
                  "endLine": 167,
                  "endColumn": 19,
                  "snippet": {
                    "text": "{\n\tstruct timeval tv_read = { o->timeout.read, 0 };\n\tstruct timeval tv_write = { o->timeout.write, 0 };\n\tinfo(\"Set timeout to (read=%i, write=%i)\\n\", o->timeout.read, o->timeout.write);\n\treturn bufferevent_set_timeouts(bev, &tv_read, &tv_write);\n}\n\n",
                    "rendered": {
                      "text": "{\n\tstruct timeval tv_read = { o->timeout.read, 0 };\n\tstruct timeval tv_write = { o->timeout.write, 0 };\n\tinfo(\"Set timeout to (read=%i, write=%i)\\n\", o->timeout.read, o->timeout.write);\n\treturn bufferevent_set_timeouts(bev, &tv_read, &tv_write);\n}\n\n",
                      "markdown": "`{\n\tstruct timeval tv_read = { o->timeout.read, 0 };\n\tstruct timeval tv_write = { o->timeout.write, 0 };\n\tinfo(\"Set timeout to (read=%i, write=%i)\\n\", o->timeout.read, o->timeout.write);\n\treturn bufferevent_set_timeouts(bev, &tv_read, &tv_write);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.h"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 55,
                  "endLine": 56,
                  "endColumn": 63,
                  "snippet": {
                    "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert);\n",
                    "rendered": {
                      "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert);\n",
                      "markdown": "`* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.h"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 34,
                  "endLine": 56,
                  "endColumn": 42,
                  "snippet": {
                    "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert);\n",
                    "rendered": {
                      "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert);\n",
                      "markdown": "`* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Requirements:\n# - wdiff\n# - rfcdiff\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Requirements:\n# - wdiff\n# - rfcdiff\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Requirements:\n# - wdiff\n# - rfcdiff\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 44,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n)\n\n# run LVC tools\n",
                    "rendered": {
                      "text": "  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n)\n\n# run LVC tools\n",
                      "markdown": "`  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n)\n\n# run LVC tools\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n)\n",
                    "rendered": {
                      "text": "  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n)\n",
                      "markdown": "`  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 99,
                  "endLine": 41,
                  "endColumn": 104,
                  "snippet": {
                    "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                    "rendered": {
                      "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                      "markdown": "`  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 68,
                  "endLine": 41,
                  "endColumn": 74,
                  "snippet": {
                    "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                    "rendered": {
                      "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                      "markdown": "`  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 48,
                  "endLine": 41,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                    "rendered": {
                      "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                      "markdown": "`  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 28,
                  "endLine": 41,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                    "rendered": {
                      "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                      "markdown": "`  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 18,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                    "rendered": {
                      "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                      "markdown": "`  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 5,
                  "endLine": 41,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                    "rendered": {
                      "text": "  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n",
                      "markdown": "`  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n  cp extra/abi-check/libevent.json \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  # XXX: not `git archive` since it will not copy changes that are not in index,\n  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n",
                    "rendered": {
                      "text": "  # XXX: not `git archive` since it will not copy changes that are not in index,\n  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n",
                      "markdown": "`  # XXX: not `git archive` since it will not copy changes that are not in index,\n  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n  }\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  cd \"$EVENT_SOURCE_DIR\"\n  # XXX: not `git archive` since it will not copy changes that are not in index,\n  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n",
                    "rendered": {
                      "text": "  cd \"$EVENT_SOURCE_DIR\"\n  # XXX: not `git archive` since it will not copy changes that are not in index,\n  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n",
                      "markdown": "`  cd \"$EVENT_SOURCE_DIR\"\n  # XXX: not `git archive` since it will not copy changes that are not in index,\n  # and maybe some issues on CI (since it does not contain full clone)\n  find . -maxdepth 1 -mindepth 1 | {\n    git check-ignore --no-index --verbose --non-matching --stdin\n  } | grep -F :: | cut -f2 | grep -F -v /.git/ | xargs readlink -f | grep -F -v \"$ABI_CHECK_ROOT\" | tee /dev/stderr | {\n    xargs cp -r -t \"$ABI_CHECK_ROOT/$ABI_CHECK_WORKSPACE/src/libevent/current/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 3,
                  "endLine": 10,
                  "snippet": {
                    "text": "# - universal-ctags\n# - abi-tracker\n# - abi-monitor\n# - git\n#\n# All of this are included in:\n#   docker.pkg.github.com/azat/docker-images/lvc-debian:latest\n#\n",
                    "rendered": {
                      "text": "# - universal-ctags\n# - abi-tracker\n# - abi-monitor\n# - git\n#\n# All of this are included in:\n#   docker.pkg.github.com/azat/docker-images/lvc-debian:latest\n#\n",
                      "markdown": "`# - universal-ctags\n# - abi-tracker\n# - abi-monitor\n# - git\n#\n# All of this are included in:\n#   docker.pkg.github.com/azat/docker-images/lvc-debian:latest\n#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/abi_check.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Requirements:\n# - wdiff\n# - rfcdiff\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Requirements:\n# - wdiff\n# - rfcdiff\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Requirements:\n# - wdiff\n# - rfcdiff\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/debian.patch"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 47,
                  "endLine": 4,
                  "endColumn": 53,
                  "snippet": {
                    "text": "--- /usr/bin/abi-compliance-checker\t2024-02-20 03:34:20.805679599 +0000\n+++ /usr/bin/abi-compliance-checker\t2024-02-20 03:34:32.095652901 +0000\n@@ -9343,9 +9343,9 @@\n                 exitStatus(\"Not_Found\", \"can't find \\\"tar\\\" command\");\n             }\n             chdir($UnpackDir);\n-            my @res = child_exec(\"$TarCmd -xvzf \\\"$Path\\\" >\\\"$TmpDir/null\\\"\");\n",
                    "rendered": {
                      "text": "--- /usr/bin/abi-compliance-checker\t2024-02-20 03:34:20.805679599 +0000\n+++ /usr/bin/abi-compliance-checker\t2024-02-20 03:34:32.095652901 +0000\n@@ -9343,9 +9343,9 @@\n                 exitStatus(\"Not_Found\", \"can't find \\\"tar\\\" command\");\n             }\n             chdir($UnpackDir);\n-            my @res = child_exec(\"$TarCmd -xvzf \\\"$Path\\\" >\\\"$TmpDir/null\\\"\");\n",
                      "markdown": "`--- /usr/bin/abi-compliance-checker\t2024-02-20 03:34:20.805679599 +0000\n+++ /usr/bin/abi-compliance-checker\t2024-02-20 03:34:32.095652901 +0000\n@@ -9343,9 +9343,9 @@\n                 exitStatus(\"Not_Found\", \"can't find \\\"tar\\\" command\");\n             }\n             chdir($UnpackDir);\n-            my @res = child_exec(\"$TarCmd -xvzf \\\"$Path\\\" >\\\"$TmpDir/null\\\"\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/README.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 1,
                  "endLine": 31,
                  "endColumn": 9,
                  "snippet": {
                    "text": "And the full command looks like:\n\n```shell\n  docker run --rm -it -v $PWD:/src:ro -w /src -v tmp/le-abi-check-root:/abi-root -e ABI_CHECK_ROOT=/abi-root docker.pkg.github.com/azat/docker-images/lvc-debian /src/extra/abi-check/abi_check.sh\n```\n\n'timeline/libevent/index.html' is the final result and can be viewed\n",
                    "rendered": {
                      "text": "And the full command looks like:\n\n```shell\n  docker run --rm -it -v $PWD:/src:ro -w /src -v tmp/le-abi-check-root:/abi-root -e ABI_CHECK_ROOT=/abi-root docker.pkg.github.com/azat/docker-images/lvc-debian /src/extra/abi-check/abi_check.sh\n```\n\n'timeline/libevent/index.html' is the final result and can be viewed\n",
                      "markdown": "`And the full command looks like:\n\n```shell\n  docker run --rm -it -v $PWD:/src:ro -w /src -v tmp/le-abi-check-root:/abi-root -e ABI_CHECK_ROOT=/abi-root docker.pkg.github.com/azat/docker-images/lvc-debian /src/extra/abi-check/abi_check.sh\n```\n\n'timeline/libevent/index.html' is the final result and can be viewed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/README.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 71,
                  "endLine": 22,
                  "endColumn": 79,
                  "snippet": {
                    "text": "If no parameter given, it will generate overview for the last 2 versions and\nthe current version by default.\n\nBut this script requires some tools that are available in the following docker image:\n\n```\ndocker.pkg.github.com/azat/docker-images/lvc-debian\n",
                    "rendered": {
                      "text": "If no parameter given, it will generate overview for the last 2 versions and\nthe current version by default.\n\nBut this script requires some tools that are available in the following docker image:\n\n```\ndocker.pkg.github.com/azat/docker-images/lvc-debian\n",
                      "markdown": "`If no parameter given, it will generate overview for the last 2 versions and\nthe current version by default.\n\nBut this script requires some tools that are available in the following docker image:\n\n```\ndocker.pkg.github.com/azat/docker-images/lvc-debian\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/README.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 8,
                  "endLine": 22,
                  "endColumn": 16,
                  "snippet": {
                    "text": "If no parameter given, it will generate overview for the last 2 versions and\nthe current version by default.\n\nBut this script requires some tools that are available in the following docker image:\n\n```\ndocker.pkg.github.com/azat/docker-images/lvc-debian\n",
                    "rendered": {
                      "text": "If no parameter given, it will generate overview for the last 2 versions and\nthe current version by default.\n\nBut this script requires some tools that are available in the following docker image:\n\n```\ndocker.pkg.github.com/azat/docker-images/lvc-debian\n",
                      "markdown": "`If no parameter given, it will generate overview for the last 2 versions and\nthe current version by default.\n\nBut this script requires some tools that are available in the following docker image:\n\n```\ndocker.pkg.github.com/azat/docker-images/lvc-debian\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/abi-check/README.md"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 4,
                  "endLine": 4,
                  "endColumn": 12,
                  "snippet": {
                    "text": "## libevent ABI/API changes\n\n\nThis script is used to generate information about changes in libevent ABI/API\nbetween various versions using [LVC tools](https://github.com/lvc). Such an\noverview can help developers migrate from one version to another.\n\n",
                    "rendered": {
                      "text": "## libevent ABI/API changes\n\n\nThis script is used to generate information about changes in libevent ABI/API\nbetween various versions using [LVC tools](https://github.com/lvc). Such an\noverview can help developers migrate from one version to another.\n\n",
                      "markdown": "`## libevent ABI/API changes\n\n\nThis script is used to generate information about changes in libevent ABI/API\nbetween various versions using [LVC tools](https://github.com/lvc). Such an\noverview can help developers migrate from one version to another.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_mbedtls.c"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 16,
                  "endLine": 58,
                  "endColumn": 26,
                  "snippet": {
                    "text": "#define SSL_use_certificate(a, b) \\\n\tdo {                          \\\n\t} while (0);\n#define SSL_use_PrivateKey(a, b) \\\n\tdo {                         \\\n\t} while (0);\n#define X509_free(x) \\\n",
                    "rendered": {
                      "text": "#define SSL_use_certificate(a, b) \\\n\tdo {                          \\\n\t} while (0);\n#define SSL_use_PrivateKey(a, b) \\\n\tdo {                         \\\n\t} while (0);\n#define X509_free(x) \\\n",
                      "markdown": "`#define SSL_use_certificate(a, b) \\\n\tdo {                          \\\n\t} while (0);\n#define SSL_use_PrivateKey(a, b) \\\n\tdo {                         \\\n\t} while (0);\n#define X509_free(x) \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_thread.c"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 23,
                  "endLine": 556,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tdouble sec;\n\t\tevutil_timersub(&times[i], &starttime, &diff);\n\t\tsec = diff.tv_sec + diff.tv_usec/1.0e6;\n\t\tTT_BLATHER((\"event %d at %.4f seconds\", i, sec));\n\t}\n\ttest_timeval_diff_eq(&starttime, &times[0], 100);\n\ttest_timeval_diff_eq(&starttime, &times[1], 200);\n",
                    "rendered": {
                      "text": "\t\tdouble sec;\n\t\tevutil_timersub(&times[i], &starttime, &diff);\n\t\tsec = diff.tv_sec + diff.tv_usec/1.0e6;\n\t\tTT_BLATHER((\"event %d at %.4f seconds\", i, sec));\n\t}\n\ttest_timeval_diff_eq(&starttime, &times[0], 100);\n\ttest_timeval_diff_eq(&starttime, &times[1], 200);\n",
                      "markdown": "`\t\tdouble sec;\n\t\tevutil_timersub(&times[i], &starttime, &diff);\n\t\tsec = diff.tv_sec + diff.tv_usec/1.0e6;\n\t\tTT_BLATHER((\"event %d at %.4f seconds\", i, sec));\n\t}\n\ttest_timeval_diff_eq(&starttime, &times[0], 100);\n\ttest_timeval_diff_eq(&starttime, &times[1], 200);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/rpcgen_wrapper.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 54,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# distcheck _build directory, which were then detected as leftover\n# files in the build tree after distclean, breaking distcheck.\n# Note that regress.gen.[ch] are not in fresh git clones, making\n# working Python a requirement for make distcheck of a git tree.\n\nexit_updated() {\n#    echo \"Updated ${srcdir}/regress.gen.c and ${srcdir}/regress.gen.h\"\n",
                    "rendered": {
                      "text": "# distcheck _build directory, which were then detected as leftover\n# files in the build tree after distclean, breaking distcheck.\n# Note that regress.gen.[ch] are not in fresh git clones, making\n# working Python a requirement for make distcheck of a git tree.\n\nexit_updated() {\n#    echo \"Updated ${srcdir}/regress.gen.c and ${srcdir}/regress.gen.h\"\n",
                      "markdown": "`# distcheck _build directory, which were then detected as leftover\n# files in the build tree after distclean, breaking distcheck.\n# Note that regress.gen.[ch] are not in fresh git clones, making\n# working Python a requirement for make distcheck of a git tree.\n\nexit_updated() {\n#    echo \"Updated ${srcdir}/regress.gen.c and ${srcdir}/regress.gen.h\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/rpcgen_wrapper.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 45,
                  "endLine": 11,
                  "endColumn": 50,
                  "snippet": {
                    "text": "# Makefile.am to create stub regress.gen.c and regress.gen.h in the\n# distcheck _build directory, which were then detected as leftover\n# files in the build tree after distclean, breaking distcheck.\n# Note that regress.gen.[ch] are not in fresh git clones, making\n# working Python a requirement for make distcheck of a git tree.\n\nexit_updated() {\n",
                    "rendered": {
                      "text": "# Makefile.am to create stub regress.gen.c and regress.gen.h in the\n# distcheck _build directory, which were then detected as leftover\n# files in the build tree after distclean, breaking distcheck.\n# Note that regress.gen.[ch] are not in fresh git clones, making\n# working Python a requirement for make distcheck of a git tree.\n\nexit_updated() {\n",
                      "markdown": "`# Makefile.am to create stub regress.gen.c and regress.gen.h in the\n# distcheck _build directory, which were then detected as leftover\n# files in the build tree after distclean, breaking distcheck.\n# Note that regress.gen.[ch] are not in fresh git clones, making\n# working Python a requirement for make distcheck of a git tree.\n\nexit_updated() {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test.sh"
                },
                "region": {
                  "startLine": 169,
                  "endLine": 169,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nusage()\n{\n\tcat <<EOL\n  -b   - specify backends\n  -t   - run timerfd test\n  -c   - run changelist test\n",
                    "rendered": {
                      "text": "\nusage()\n{\n\tcat <<EOL\n  -b   - specify backends\n  -t   - run timerfd test\n  -c   - run changelist test\n",
                      "markdown": "`\nusage()\n{\n\tcat <<EOL\n  -b   - specify backends\n  -t   - run timerfd test\n  -c   - run changelist test\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 14,
                  "endLine": 32,
                  "endColumn": 19,
                  "snippet": {
                    "text": "TEST_DIR=.\nTEST_SRC_DIR=.\n\nT=`echo \"$0\" | sed -e 's/test.sh$//'`\nif test -x \"$T/test-init\"\nthen\n\tTEST_DIR=\"$T\"\n",
                    "rendered": {
                      "text": "TEST_DIR=.\nTEST_SRC_DIR=.\n\nT=`echo \"$0\" | sed -e 's/test.sh$//'`\nif test -x \"$T/test-init\"\nthen\n\tTEST_DIR=\"$T\"\n",
                      "markdown": "`TEST_DIR=.\nTEST_SRC_DIR=.\n\nT=`echo \"$0\" | sed -e 's/test.sh$//'`\nif test -x \"$T/test-init\"\nthen\n\tTEST_DIR=\"$T\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/CodeCoverage.cmake"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 21,
                  "endLine": 154,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tCOMMENT \"Running gcovr to produce Cobertura code coverage report.\"\n\t)\n\n\t# Show info where to find the report\n\tADD_CUSTOM_COMMAND(TARGET ${_targetname} POST_BUILD\n\t\tCOMMAND ;\n\t\tCOMMENT \"Cobertura code coverage report saved in ${_outputname}.xml.\"\n",
                    "rendered": {
                      "text": "\t\tCOMMENT \"Running gcovr to produce Cobertura code coverage report.\"\n\t)\n\n\t# Show info where to find the report\n\tADD_CUSTOM_COMMAND(TARGET ${_targetname} POST_BUILD\n\t\tCOMMAND ;\n\t\tCOMMENT \"Cobertura code coverage report saved in ${_outputname}.xml.\"\n",
                      "markdown": "`\t\tCOMMENT \"Running gcovr to produce Cobertura code coverage report.\"\n\t)\n\n\t# Show info where to find the report\n\tADD_CUSTOM_COMMAND(TARGET ${_targetname} POST_BUILD\n\t\tCOMMAND ;\n\t\tCOMMENT \"Cobertura code coverage report saved in ${_outputname}.xml.\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/CodeCoverage.cmake"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 21,
                  "endLine": 120,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tCOMMENT \"Resetting code coverage counters to zero.\\nProcessing code coverage counters and generating report.\"\n\t)\n\t\n\t# Show info where to find the report\n\tADD_CUSTOM_COMMAND(TARGET ${_targetname} POST_BUILD\n\t\tCOMMAND ;\n\t\tCOMMENT \"Open ./${_outputname}/index.html in your browser to view the coverage report.\"\n",
                    "rendered": {
                      "text": "\t\tCOMMENT \"Resetting code coverage counters to zero.\\nProcessing code coverage counters and generating report.\"\n\t)\n\t\n\t# Show info where to find the report\n\tADD_CUSTOM_COMMAND(TARGET ${_targetname} POST_BUILD\n\t\tCOMMAND ;\n\t\tCOMMENT \"Open ./${_outputname}/index.html in your browser to view the coverage report.\"\n",
                      "markdown": "`\t\tCOMMENT \"Resetting code coverage counters to zero.\\nProcessing code coverage counters and generating report.\"\n\t)\n\t\n\t# Show info where to find the report\n\tADD_CUSTOM_COMMAND(TARGET ${_targetname} POST_BUILD\n\t\tCOMMAND ;\n\t\tCOMMENT \"Open ./${_outputname}/index.html in your browser to view the coverage report.\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/include/event2/dns.h"
                },
                "region": {
                  "startLine": 750,
                  "startColumn": 130,
                  "endLine": 750,
                  "endColumn": 138,
                  "snippet": {
                    "text": "EVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_aaaa_reply(struct evdns_server_request *req, const char *name, int n, const void *addrs, int ttl);\nEVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl);\nEVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_cname_reply(struct evdns_server_request *req, const char *name, const char *cname, int ttl);\n\n",
                    "rendered": {
                      "text": "EVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_aaaa_reply(struct evdns_server_request *req, const char *name, int n, const void *addrs, int ttl);\nEVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl);\nEVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_cname_reply(struct evdns_server_request *req, const char *name, const char *cname, int ttl);\n\n",
                      "markdown": "`EVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_aaaa_reply(struct evdns_server_request *req, const char *name, int n, const void *addrs, int ttl);\nEVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_ptr_reply(struct evdns_server_request *req, struct in_addr *in, const char *inaddr_name, const char *hostname, int ttl);\nEVENT2_EXPORT_SYMBOL\nint evdns_server_request_add_cname_reply(struct evdns_server_request *req, const char *name, const char *cname, int ttl);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event.c"
                },
                "region": {
                  "startLine": 1985,
                  "startColumn": 34,
                  "endLine": 1985,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\tif (base->running_loop) {\n\t\tevent_warnx(\"%s: reentrant invocation.  Only one event_base_loop\"\n\t\t    \" can run on each event_base at once.\", __func__);\n\t\tEVBASE_RELEASE_LOCK(base, th_base_lock);\n\t\treturn -1;\n\t}\n",
                    "rendered": {
                      "text": "\n\tif (base->running_loop) {\n\t\tevent_warnx(\"%s: reentrant invocation.  Only one event_base_loop\"\n\t\t    \" can run on each event_base at once.\", __func__);\n\t\tEVBASE_RELEASE_LOCK(base, th_base_lock);\n\t\treturn -1;\n\t}\n",
                      "markdown": "`\n\tif (base->running_loop) {\n\t\tevent_warnx(\"%s: reentrant invocation.  Only one event_base_loop\"\n\t\t    \" can run on each event_base at once.\", __func__);\n\t\tEVBASE_RELEASE_LOCK(base, th_base_lock);\n\t\treturn -1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event.c"
                },
                "region": {
                  "startLine": 2828,
                  "startColumn": 16,
                  "endLine": 2828,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\tcommon_timeout_schedule(ctl, &now, ev);\n\t\t\t}\n\t\t} else {\n\t\t\tstruct event* top = NULL;\n\t\t\t/* See if the earliest timeout is now earlier than it\n\t\t\t * was before: if so, we will need to tell the main\n\t\t\t * thread to wake up earlier than it would otherwise.\n",
                    "rendered": {
                      "text": "\t\t\t\tcommon_timeout_schedule(ctl, &now, ev);\n\t\t\t}\n\t\t} else {\n\t\t\tstruct event* top = NULL;\n\t\t\t/* See if the earliest timeout is now earlier than it\n\t\t\t * was before: if so, we will need to tell the main\n\t\t\t * thread to wake up earlier than it would otherwise.\n",
                      "markdown": "`\t\t\t\tcommon_timeout_schedule(ctl, &now, ev);\n\t\t\t}\n\t\t} else {\n\t\t\tstruct event* top = NULL;\n\t\t\t/* See if the earliest timeout is now earlier than it\n\t\t\t * was before: if so, we will need to tell the main\n\t\t\t * thread to wake up earlier than it would otherwise.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event.c"
                },
                "region": {
                  "startLine": 2812,
                  "startColumn": 25,
                  "endLine": 2812,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tevent_debug((\n\t\t\t \"event_add: event %p, timeout in %d seconds %d useconds, call %p\",\n\t\t\t (void *)ev, (int)tv->tv_sec, (int)tv->tv_usec, (void *)ev->ev_callback));\n\n#ifdef USE_REINSERT_TIMEOUT\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tevent_debug((\n\t\t\t \"event_add: event %p, timeout in %d seconds %d useconds, call %p\",\n\t\t\t (void *)ev, (int)tv->tv_sec, (int)tv->tv_usec, (void *)ev->ev_callback));\n\n#ifdef USE_REINSERT_TIMEOUT\n",
                      "markdown": "`\t\t}\n\n\t\tevent_debug((\n\t\t\t \"event_add: event %p, timeout in %d seconds %d useconds, call %p\",\n\t\t\t (void *)ev, (int)tv->tv_sec, (int)tv->tv_usec, (void *)ev->ev_callback));\n\n#ifdef USE_REINSERT_TIMEOUT\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event.c"
                },
                "region": {
                  "startLine": 1489,
                  "startColumn": 15,
                  "endLine": 1489,
                  "endColumn": 24,
                  "snippet": {
                    "text": "common_timeout_schedule(struct common_timeout_list *ctl,\n    const struct timeval *now, struct event *head)\n{\n\tstruct timeval timeout = head->ev_timeout;\n\ttimeout.tv_usec &= MICROSECONDS_MASK;\n\tevent_add_nolock_(&ctl->timeout_event, &timeout, 1);\n}\n",
                    "rendered": {
                      "text": "common_timeout_schedule(struct common_timeout_list *ctl,\n    const struct timeval *now, struct event *head)\n{\n\tstruct timeval timeout = head->ev_timeout;\n\ttimeout.tv_usec &= MICROSECONDS_MASK;\n\tevent_add_nolock_(&ctl->timeout_event, &timeout, 1);\n}\n",
                      "markdown": "`common_timeout_schedule(struct common_timeout_list *ctl,\n    const struct timeval *now, struct event *head)\n{\n\tstruct timeval timeout = head->ev_timeout;\n\ttimeout.tv_usec &= MICROSECONDS_MASK;\n\tevent_add_nolock_(&ctl->timeout_event, &timeout, 1);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event-config.h.cmake"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 37,
                  "endLine": 405,
                  "endColumn": 46,
                  "snippet": {
                    "text": "/* Define to 1 if you have the <unistd.h> header file. */\n#cmakedefine EVENT__HAVE_UNISTD_H 1\n\n/* Define to 1 if you have the `unsetenv' function. */\n#cmakedefine EVENT__HAVE_UNSETENV 1\n\n/* Define if kqueue works correctly with pipes */\n",
                    "rendered": {
                      "text": "/* Define to 1 if you have the <unistd.h> header file. */\n#cmakedefine EVENT__HAVE_UNISTD_H 1\n\n/* Define to 1 if you have the `unsetenv' function. */\n#cmakedefine EVENT__HAVE_UNSETENV 1\n\n/* Define if kqueue works correctly with pipes */\n",
                      "markdown": "`/* Define to 1 if you have the <unistd.h> header file. */\n#cmakedefine EVENT__HAVE_UNISTD_H 1\n\n/* Define to 1 if you have the `unsetenv' function. */\n#cmakedefine EVENT__HAVE_UNSETENV 1\n\n/* Define if kqueue works correctly with pipes */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event-config.h.cmake"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 35,
                  "endLine": 231,
                  "endColumn": 44,
                  "snippet": {
                    "text": "/* Define to 1 if you have the `select' function. */\n#cmakedefine EVENT__HAVE_SELECT 1\n\n/* Define to 1 if you have the `setenv' function. */\n#cmakedefine EVENT__HAVE_SETENV 1\n\n/* Define if F_SETFD is defined in <fcntl.h> */\n",
                    "rendered": {
                      "text": "/* Define to 1 if you have the `select' function. */\n#cmakedefine EVENT__HAVE_SELECT 1\n\n/* Define to 1 if you have the `setenv' function. */\n#cmakedefine EVENT__HAVE_SETENV 1\n\n/* Define if F_SETFD is defined in <fcntl.h> */\n",
                      "markdown": "`/* Define to 1 if you have the `select' function. */\n#cmakedefine EVENT__HAVE_SELECT 1\n\n/* Define to 1 if you have the `setenv' function. */\n#cmakedefine EVENT__HAVE_SETENV 1\n\n/* Define if F_SETFD is defined in <fcntl.h> */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event-config.h.cmake"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 35,
                  "endLine": 222,
                  "endColumn": 44,
                  "snippet": {
                    "text": "/* Define to 1 if you have the `pthread_mutexattr_setprotocol' function. */\n#cmakedefine EVENT__HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL 1\n\n/* Define to 1 if you have the `putenv' function. */\n#cmakedefine EVENT__HAVE_PUTENV 1\n\n/* Define to 1 if the system has the type `sa_family_t'. */\n",
                    "rendered": {
                      "text": "/* Define to 1 if you have the `pthread_mutexattr_setprotocol' function. */\n#cmakedefine EVENT__HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL 1\n\n/* Define to 1 if you have the `putenv' function. */\n#cmakedefine EVENT__HAVE_PUTENV 1\n\n/* Define to 1 if the system has the type `sa_family_t'. */\n",
                      "markdown": "`/* Define to 1 if you have the `pthread_mutexattr_setprotocol' function. */\n#cmakedefine EVENT__HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL 1\n\n/* Define to 1 if you have the `putenv' function. */\n#cmakedefine EVENT__HAVE_PUTENV 1\n\n/* Define to 1 if the system has the type `sa_family_t'. */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event-config.h.cmake"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 27,
                  "endLine": 201,
                  "endColumn": 36,
                  "snippet": {
                    "text": "/* Define to 1 if you have the <afunix.h> header file. */\n#cmakedefine EVENT__HAVE_AFUNIX_H 1\n\n/* Define if the system has openssl */\n#cmakedefine EVENT__HAVE_OPENSSL 1\n\n/* Define if the system has mbedtls */\n",
                    "rendered": {
                      "text": "/* Define to 1 if you have the <afunix.h> header file. */\n#cmakedefine EVENT__HAVE_AFUNIX_H 1\n\n/* Define if the system has openssl */\n#cmakedefine EVENT__HAVE_OPENSSL 1\n\n/* Define if the system has mbedtls */\n",
                      "markdown": "`/* Define to 1 if you have the <afunix.h> header file. */\n#cmakedefine EVENT__HAVE_AFUNIX_H 1\n\n/* Define if the system has openssl */\n#cmakedefine EVENT__HAVE_OPENSSL 1\n\n/* Define if the system has mbedtls */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4635,
                  "startColumn": 10,
                  "endLine": 4635,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t}\n\t\tevcon = evhttp_connection_base_bufferevent_new(\n\t\t\thttp->base, NULL, bev, hostname, atoi(portname));\n\t\tmm_free(hostname);\n\t\tmm_free(portname);\n\t}\n\tif (evcon == NULL)\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tevcon = evhttp_connection_base_bufferevent_new(\n\t\t\thttp->base, NULL, bev, hostname, atoi(portname));\n\t\tmm_free(hostname);\n\t\tmm_free(portname);\n\t}\n\tif (evcon == NULL)\n",
                      "markdown": "`\t\t}\n\t\tevcon = evhttp_connection_base_bufferevent_new(\n\t\t\thttp->base, NULL, bev, hostname, atoi(portname));\n\t\tmm_free(hostname);\n\t\tmm_free(portname);\n\t}\n\tif (evcon == NULL)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4634,
                  "startColumn": 26,
                  "endLine": 4634,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\tbev = (*http->bevcb)(http->base, http->bevcbarg);\n\t\t}\n\t\tevcon = evhttp_connection_base_bufferevent_new(\n\t\t\thttp->base, NULL, bev, hostname, atoi(portname));\n\t\tmm_free(hostname);\n\t\tmm_free(portname);\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tbev = (*http->bevcb)(http->base, http->bevcbarg);\n\t\t}\n\t\tevcon = evhttp_connection_base_bufferevent_new(\n\t\t\thttp->base, NULL, bev, hostname, atoi(portname));\n\t\tmm_free(hostname);\n\t\tmm_free(portname);\n\t}\n",
                      "markdown": "`\t\t\tbev = (*http->bevcb)(http->base, http->bevcbarg);\n\t\t}\n\t\tevcon = evhttp_connection_base_bufferevent_new(\n\t\t\thttp->base, NULL, bev, hostname, atoi(portname));\n\t\tmm_free(hostname);\n\t\tmm_free(portname);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4627,
                  "startColumn": 13,
                  "endLine": 4627,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tevent_debug((\"%s: new request from %s:%s on \"EV_SOCK_FMT\"\\n\",\n\t\t\t__func__, hostname, portname, EV_SOCK_ARG(fd)));\n\n\t\t/* we need a connection object to put the http request on */\n\t\tif (!bev && http->bevcb != NULL) {\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tevent_debug((\"%s: new request from %s:%s on \"EV_SOCK_FMT\"\\n\",\n\t\t\t__func__, hostname, portname, EV_SOCK_ARG(fd)));\n\n\t\t/* we need a connection object to put the http request on */\n\t\tif (!bev && http->bevcb != NULL) {\n",
                      "markdown": "`\t\t}\n\n\t\tevent_debug((\"%s: new request from %s:%s on \"EV_SOCK_FMT\"\\n\",\n\t\t\t__func__, hostname, portname, EV_SOCK_ARG(fd)));\n\n\t\t/* we need a connection object to put the http request on */\n\t\tif (!bev && http->bevcb != NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4621,
                  "startColumn": 25,
                  "endLine": 4621,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n\t\t}\n",
                      "markdown": "`\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4621,
                  "startColumn": 7,
                  "endLine": 4621,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n\t\t}\n",
                      "markdown": "`\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4620,
                  "startColumn": 6,
                  "endLine": 4620,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n",
                    "rendered": {
                      "text": "\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n",
                      "markdown": "`\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n\t\t\treturn (NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4619,
                  "startColumn": 29,
                  "endLine": 4619,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t{\n\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n",
                    "rendered": {
                      "text": "\t{\n\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n",
                      "markdown": "`\t{\n\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n\t\t\tif (hostname) mm_free(hostname);\n\t\t\tif (portname) mm_free(portname);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 4617,
                  "startColumn": 8,
                  "endLine": 4617,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\telse\n#endif\n\t{\n\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n",
                    "rendered": {
                      "text": "\telse\n#endif\n\t{\n\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n",
                      "markdown": "`\telse\n#endif\n\t{\n\t\tchar *hostname = NULL, *portname = NULL;\n\n\t\tname_from_addr(sa, salen, &hostname, &portname);\n\t\tif (hostname == NULL || portname == NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3823,
                  "startColumn": 33,
                  "endLine": 3823,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n\n\tif ((cb = evhttp_dispatch_callback(&http->callbacks, req)) != NULL) {\n",
                    "rendered": {
                      "text": "\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n\n\tif ((cb = evhttp_dispatch_callback(&http->callbacks, req)) != NULL) {\n",
                      "markdown": "`\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n\n\tif ((cb = evhttp_dispatch_callback(&http->callbacks, req)) != NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3822,
                  "startColumn": 5,
                  "endLine": 3822,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n\n",
                    "rendered": {
                      "text": "\n\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n\n",
                      "markdown": "`\n\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3821,
                  "startColumn": 1,
                  "endLine": 3821,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t}\n\n\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n",
                      "markdown": "`\t}\n\n\t/* handle potential virtual hosts */\n\thostname = evhttp_request_get_host(req);\n\tif (hostname != NULL) {\n\t\tevhttp_find_vhost(http, &http, hostname);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3801,
                  "startColumn": 13,
                  "endLine": 3801,
                  "endColumn": 21,
                  "snippet": {
                    "text": "{\n\tstruct evhttp *http = arg;\n\tstruct evhttp_cb *cb = NULL;\n\tconst char *hostname;\n\n\t/* we have a new request on which the user needs to take action */\n\treq->userdone = 0;\n",
                    "rendered": {
                      "text": "{\n\tstruct evhttp *http = arg;\n\tstruct evhttp_cb *cb = NULL;\n\tconst char *hostname;\n\n\t/* we have a new request on which the user needs to take action */\n\treq->userdone = 0;\n",
                      "markdown": "`{\n\tstruct evhttp *http = arg;\n\tstruct evhttp_cb *cb = NULL;\n\tconst char *hostname;\n\n\t/* we have a new request on which the user needs to take action */\n\treq->userdone = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3782,
                  "startColumn": 4,
                  "endLine": 3782,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\toldhttp = http;\n\t\tTAILQ_FOREACH(vhost, &http->virtualhosts, next_vhost) {\n\t\t\tif (prefix_suffix_match(vhost->vhost_pattern,\n\t\t\t\thostname, 1 /* ignorecase */)) {\n\t\t\t\thttp = vhost;\n\t\t\t\tmatch_found = 1;\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\toldhttp = http;\n\t\tTAILQ_FOREACH(vhost, &http->virtualhosts, next_vhost) {\n\t\t\tif (prefix_suffix_match(vhost->vhost_pattern,\n\t\t\t\thostname, 1 /* ignorecase */)) {\n\t\t\t\thttp = vhost;\n\t\t\t\tmatch_found = 1;\n\t\t\t\tbreak;\n",
                      "markdown": "`\t\toldhttp = http;\n\t\tTAILQ_FOREACH(vhost, &http->virtualhosts, next_vhost) {\n\t\t\tif (prefix_suffix_match(vhost->vhost_pattern,\n\t\t\t\thostname, 1 /* ignorecase */)) {\n\t\t\t\thttp = vhost;\n\t\t\t\tmatch_found = 1;\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3775,
                  "startColumn": 38,
                  "endLine": 3775,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tstruct evhttp *oldhttp;\n\tint match_found = 0;\n\n\tif (evhttp_find_alias(http, outhttp, hostname))\n\t\treturn 1;\n\n\tdo {\n",
                    "rendered": {
                      "text": "\tstruct evhttp *oldhttp;\n\tint match_found = 0;\n\n\tif (evhttp_find_alias(http, outhttp, hostname))\n\t\treturn 1;\n\n\tdo {\n",
                      "markdown": "`\tstruct evhttp *oldhttp;\n\tint match_found = 0;\n\n\tif (evhttp_find_alias(http, outhttp, hostname))\n\t\treturn 1;\n\n\tdo {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3769,
                  "startColumn": 16,
                  "endLine": 3769,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nstatic int\nevhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp,\n\t\t  const char *hostname)\n{\n\tstruct evhttp *vhost;\n\tstruct evhttp *oldhttp;\n",
                    "rendered": {
                      "text": "\nstatic int\nevhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp,\n\t\t  const char *hostname)\n{\n\tstruct evhttp *vhost;\n\tstruct evhttp *oldhttp;\n",
                      "markdown": "`\nstatic int\nevhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp,\n\t\t  const char *hostname)\n{\n\tstruct evhttp *vhost;\n\tstruct evhttp *oldhttp;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3749,
                  "startColumn": 40,
                  "endLine": 3749,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t/* XXX It might be good to avoid recursion here, but I don't\n\t   see a way to do that w/o a list. */\n\tTAILQ_FOREACH(vhost, &http->virtualhosts, next_vhost) {\n\t\tif (evhttp_find_alias(vhost, outhttp, hostname))\n\t\t\treturn 1;\n\t}\n\n",
                    "rendered": {
                      "text": "\t/* XXX It might be good to avoid recursion here, but I don't\n\t   see a way to do that w/o a list. */\n\tTAILQ_FOREACH(vhost, &http->virtualhosts, next_vhost) {\n\t\tif (evhttp_find_alias(vhost, outhttp, hostname))\n\t\t\treturn 1;\n\t}\n\n",
                      "markdown": "`\t/* XXX It might be good to avoid recursion here, but I don't\n\t   see a way to do that w/o a list. */\n\tTAILQ_FOREACH(vhost, &http->virtualhosts, next_vhost) {\n\t\tif (evhttp_find_alias(vhost, outhttp, hostname))\n\t\t\treturn 1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3739,
                  "startColumn": 45,
                  "endLine": 3739,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\tTAILQ_FOREACH(alias, &http->aliases, next) {\n\t\t/* XXX Do we need to handle IP addresses? */\n\t\tif (!evutil_ascii_strcasecmp(alias->alias, hostname)) {\n\t\t\tif (outhttp)\n\t\t\t\t*outhttp = http;\n\t\t\treturn 1;\n",
                    "rendered": {
                      "text": "\n\tTAILQ_FOREACH(alias, &http->aliases, next) {\n\t\t/* XXX Do we need to handle IP addresses? */\n\t\tif (!evutil_ascii_strcasecmp(alias->alias, hostname)) {\n\t\t\tif (outhttp)\n\t\t\t\t*outhttp = http;\n\t\t\treturn 1;\n",
                      "markdown": "`\n\tTAILQ_FOREACH(alias, &http->aliases, next) {\n\t\t/* XXX Do we need to handle IP addresses? */\n\t\tif (!evutil_ascii_strcasecmp(alias->alias, hostname)) {\n\t\t\tif (outhttp)\n\t\t\t\t*outhttp = http;\n\t\t\treturn 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 3732,
                  "startColumn": 16,
                  "endLine": 3732,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nstatic int\nevhttp_find_alias(struct evhttp *http, struct evhttp **outhttp,\n\t\t  const char *hostname)\n{\n\tstruct evhttp_server_alias *alias;\n\tstruct evhttp *vhost;\n",
                    "rendered": {
                      "text": "\nstatic int\nevhttp_find_alias(struct evhttp *http, struct evhttp **outhttp,\n\t\t  const char *hostname)\n{\n\tstruct evhttp_server_alias *alias;\n\tstruct evhttp *vhost;\n",
                      "markdown": "`\nstatic int\nevhttp_find_alias(struct evhttp *http, struct evhttp **outhttp,\n\t\t  const char *hostname)\n{\n\tstruct evhttp_server_alias *alias;\n\tstruct evhttp *vhost;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 2882,
                  "startColumn": 35,
                  "endLine": 2882,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n#endif\n\telse {\n\t\tret = bufferevent_socket_connect_hostname(evcon->bufev,\n\t\t\t\tevcon->dns_base, evcon->ai_family, address, evcon->port);\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n#endif\n\telse {\n\t\tret = bufferevent_socket_connect_hostname(evcon->bufev,\n\t\t\t\tevcon->dns_base, evcon->ai_family, address, evcon->port);\n\t}\n\n",
                      "markdown": "`\t}\n#endif\n\telse {\n\t\tret = bufferevent_socket_connect_hostname(evcon->bufev,\n\t\t\t\tevcon->dns_base, evcon->ai_family, address, evcon->port);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 2068,
                  "startColumn": 55,
                  "endLine": 2068,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n\t    !evhttp_find_vhost(req->evcon->http_server, NULL, hostname))\n\t\treq->flags |= EVHTTP_PROXY_REQUEST;\n\n\treturn 0;\n",
                    "rendered": {
                      "text": "\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n\t    !evhttp_find_vhost(req->evcon->http_server, NULL, hostname))\n\t\treq->flags |= EVHTTP_PROXY_REQUEST;\n\n\treturn 0;\n",
                      "markdown": "`\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n\t    !evhttp_find_vhost(req->evcon->http_server, NULL, hostname))\n\t\treq->flags |= EVHTTP_PROXY_REQUEST;\n\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 2067,
                  "startColumn": 5,
                  "endLine": 2067,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\thostname = evhttp_uri_get_host(req->uri_elems);\n\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n\t    !evhttp_find_vhost(req->evcon->http_server, NULL, hostname))\n\t\treq->flags |= EVHTTP_PROXY_REQUEST;\n\n",
                    "rendered": {
                      "text": "\thostname = evhttp_uri_get_host(req->uri_elems);\n\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n\t    !evhttp_find_vhost(req->evcon->http_server, NULL, hostname))\n\t\treq->flags |= EVHTTP_PROXY_REQUEST;\n\n",
                      "markdown": "`\thostname = evhttp_uri_get_host(req->uri_elems);\n\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n\t    !evhttp_find_vhost(req->evcon->http_server, NULL, hostname))\n\t\treq->flags |= EVHTTP_PROXY_REQUEST;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 2064,
                  "startColumn": 1,
                  "endLine": 2064,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t   for a known vhost or server alias. If we don't know about this\n\t   host, we consider it a proxy request. */\n\tscheme = evhttp_uri_get_scheme(req->uri_elems);\n\thostname = evhttp_uri_get_host(req->uri_elems);\n\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n",
                    "rendered": {
                      "text": "\t   for a known vhost or server alias. If we don't know about this\n\t   host, we consider it a proxy request. */\n\tscheme = evhttp_uri_get_scheme(req->uri_elems);\n\thostname = evhttp_uri_get_host(req->uri_elems);\n\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n",
                      "markdown": "`\t   for a known vhost or server alias. If we don't know about this\n\t   host, we consider it a proxy request. */\n\tscheme = evhttp_uri_get_scheme(req->uri_elems);\n\thostname = evhttp_uri_get_host(req->uri_elems);\n\tif (scheme && (!evutil_ascii_strcasecmp(scheme, \"http\") ||\n\t\t       !evutil_ascii_strcasecmp(scheme, \"https\")) &&\n\t    hostname &&\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 1815,
                  "startColumn": 13,
                  "endLine": 1815,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tchar *method;\n\tchar *uri;\n\tchar *version;\n\tconst char *hostname;\n\tconst char *scheme;\n\tsize_t method_len;\n\tenum evhttp_cmd_type type = 0;\n",
                    "rendered": {
                      "text": "\tchar *method;\n\tchar *uri;\n\tchar *version;\n\tconst char *hostname;\n\tconst char *scheme;\n\tsize_t method_len;\n\tenum evhttp_cmd_type type = 0;\n",
                      "markdown": "`\tchar *method;\n\tchar *uri;\n\tchar *version;\n\tconst char *hostname;\n\tconst char *scheme;\n\tsize_t method_len;\n\tenum evhttp_cmd_type type = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 87,
                  "endLine": 212,
                  "endColumn": 95,
                  "snippet": {
                    "text": "static void evhttp_read_cb(struct bufferevent *, void *);\nstatic void evhttp_write_cb(struct bufferevent *, void *);\nstatic void evhttp_error_cb(struct bufferevent *bufev, short what, void *arg);\nstatic int evhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp, const char *hostname);\nstatic const char *evhttp_method_(struct evhttp_connection *evcon,\n\tenum evhttp_cmd_type type, ev_uint16_t *flags);\n\n",
                    "rendered": {
                      "text": "static void evhttp_read_cb(struct bufferevent *, void *);\nstatic void evhttp_write_cb(struct bufferevent *, void *);\nstatic void evhttp_error_cb(struct bufferevent *bufev, short what, void *arg);\nstatic int evhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp, const char *hostname);\nstatic const char *evhttp_method_(struct evhttp_connection *evcon,\n\tenum evhttp_cmd_type type, ev_uint16_t *flags);\n\n",
                      "markdown": "`static void evhttp_read_cb(struct bufferevent *, void *);\nstatic void evhttp_write_cb(struct bufferevent *, void *);\nstatic void evhttp_error_cb(struct bufferevent *bufev, short what, void *arg);\nstatic int evhttp_find_vhost(struct evhttp *http, struct evhttp **outhttp, const char *hostname);\nstatic const char *evhttp_method_(struct evhttp_connection *evcon,\n\tenum evhttp_cmd_type type, ev_uint16_t *flags);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5181,
                  "startColumn": 2,
                  "endLine": 5181,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t++cp;\n\t\telse if (*cp == '%' && EVUTIL_ISXDIGIT_(cp[1]) &&\n\t\t    EVUTIL_ISXDIGIT_(cp[2]))\n\t\t\tcp += 3;\n\t\telse if (*cp == '?' && part != PART_PATH)\n\t\t\t++cp;\n\t\telse\n",
                    "rendered": {
                      "text": "\t\t\t++cp;\n\t\telse if (*cp == '%' && EVUTIL_ISXDIGIT_(cp[1]) &&\n\t\t    EVUTIL_ISXDIGIT_(cp[2]))\n\t\t\tcp += 3;\n\t\telse if (*cp == '?' && part != PART_PATH)\n\t\t\t++cp;\n\t\telse\n",
                      "markdown": "`\t\t\t++cp;\n\t\telse if (*cp == '%' && EVUTIL_ISXDIGIT_(cp[1]) &&\n\t\t    EVUTIL_ISXDIGIT_(cp[2]))\n\t\t\tcp += 3;\n\t\telse if (*cp == '?' && part != PART_PATH)\n\t\t\t++cp;\n\t\telse\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5168,
                  "startColumn": 2,
                  "endLine": 5168,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t\t++cp;\n\t\t\tbreak;\n\t\tcase PART_FRAGMENT:\n\t\t\tcp += strlen(cp);\n\t\t\tbreak;\n\t\t};\n\t\treturn cp;\n",
                    "rendered": {
                      "text": "\t\t\t\t++cp;\n\t\t\tbreak;\n\t\tcase PART_FRAGMENT:\n\t\t\tcp += strlen(cp);\n\t\t\tbreak;\n\t\t};\n\t\treturn cp;\n",
                      "markdown": "`\t\t\t\t++cp;\n\t\t\tbreak;\n\t\tcase PART_FRAGMENT:\n\t\t\tcp += strlen(cp);\n\t\t\tbreak;\n\t\t};\n\t\treturn cp;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5088,
                  "startColumn": 12,
                  "endLine": 5088,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t/* Optionally, we end with \":port\" */\n\tfor (port=eos-1; port >= cp && EVUTIL_ISDIGIT_(*port); --port)\n\t\t;\n\tif (port >= cp && *port == ':') {\n\t\tif (port+1 == eos) /* Leave port unspecified; the RFC allows a\n\t\t\t\t    * nil port */\n\t\t\turi->port = -1;\n",
                    "rendered": {
                      "text": "\t/* Optionally, we end with \":port\" */\n\tfor (port=eos-1; port >= cp && EVUTIL_ISDIGIT_(*port); --port)\n\t\t;\n\tif (port >= cp && *port == ':') {\n\t\tif (port+1 == eos) /* Leave port unspecified; the RFC allows a\n\t\t\t\t    * nil port */\n\t\t\turi->port = -1;\n",
                      "markdown": "`\t/* Optionally, we end with \":port\" */\n\tfor (port=eos-1; port >= cp && EVUTIL_ISDIGIT_(*port); --port)\n\t\t;\n\tif (port >= cp && *port == ':') {\n\t\tif (port+1 == eos) /* Leave port unspecified; the RFC allows a\n\t\t\t\t    * nil port */\n\t\t\turi->port = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5086,
                  "startColumn": 25,
                  "endLine": 5086,
                  "endColumn": 29,
                  "snippet": {
                    "text": "#endif\n\n\t/* Optionally, we end with \":port\" */\n\tfor (port=eos-1; port >= cp && EVUTIL_ISDIGIT_(*port); --port)\n\t\t;\n\tif (port >= cp && *port == ':') {\n\t\tif (port+1 == eos) /* Leave port unspecified; the RFC allows a\n",
                    "rendered": {
                      "text": "#endif\n\n\t/* Optionally, we end with \":port\" */\n\tfor (port=eos-1; port >= cp && EVUTIL_ISDIGIT_(*port); --port)\n\t\t;\n\tif (port >= cp && *port == ':') {\n\t\tif (port+1 == eos) /* Leave port unspecified; the RFC allows a\n",
                      "markdown": "`#endif\n\n\t/* Optionally, we end with \":port\" */\n\tfor (port=eos-1; port >= cp && EVUTIL_ISDIGIT_(*port); --port)\n\t\t;\n\tif (port >= cp && *port == ':') {\n\t\tif (port+1 == eos) /* Leave port unspecified; the RFC allows a\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5069,
                  "startColumn": 1,
                  "endLine": 5069,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\tcp = s;\n\t}\n\n#ifndef _WIN32\n",
                    "rendered": {
                      "text": "\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\tcp = s;\n\t}\n\n#ifndef _WIN32\n",
                      "markdown": "`\t\t\treturn -1;\n\t\t}\n\t} else {\n\t\tcp = s;\n\t}\n\n#ifndef _WIN32\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5059,
                  "startColumn": 10,
                  "endLine": 5059,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t/* Optionally, we start with \"userinfo@\" */\n\n\tcp = strchr(s, '@');\n\tif (cp && cp < eos) {\n\t\tif (! userinfo_ok(s,cp))\n\t\t\treturn -1;\n\t\t*cp++ = '\\0';\n",
                    "rendered": {
                      "text": "\t/* Optionally, we start with \"userinfo@\" */\n\n\tcp = strchr(s, '@');\n\tif (cp && cp < eos) {\n\t\tif (! userinfo_ok(s,cp))\n\t\t\treturn -1;\n\t\t*cp++ = '\\0';\n",
                      "markdown": "`\t/* Optionally, we start with \"userinfo@\" */\n\n\tcp = strchr(s, '@');\n\tif (cp && cp < eos) {\n\t\tif (! userinfo_ok(s,cp))\n\t\t\treturn -1;\n\t\t*cp++ = '\\0';\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 5058,
                  "endLine": 5058,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\t/* Optionally, we start with \"userinfo@\" */\n\n\tcp = strchr(s, '@');\n\tif (cp && cp < eos) {\n\t\tif (! userinfo_ok(s,cp))\n\t\t\treturn -1;\n",
                    "rendered": {
                      "text": "\n\t/* Optionally, we start with \"userinfo@\" */\n\n\tcp = strchr(s, '@');\n\tif (cp && cp < eos) {\n\t\tif (! userinfo_ok(s,cp))\n\t\t\treturn -1;\n",
                      "markdown": "`\n\t/* Optionally, we start with \"userinfo@\" */\n\n\tcp = strchr(s, '@');\n\tif (cp && cp < eos) {\n\t\tif (! userinfo_ok(s,cp))\n\t\t\treturn -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 1615,
                  "startColumn": 31,
                  "endLine": 1615,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tswitch (evcon->state) {\n\tcase EVCON_CONNECTING:\n\t\tif (what & BEV_EVENT_TIMEOUT) {\n\t\t\tevent_debug((\"%s: connection timeout for \\\"%s:%d\\\" on \"\n\t\t\t\tEV_SOCK_FMT,\n\t\t\t\t__func__, evcon->address, evcon->port,\n\t\t\t\tEV_SOCK_ARG(bufferevent_getfd(bufev))));\n",
                    "rendered": {
                      "text": "\tswitch (evcon->state) {\n\tcase EVCON_CONNECTING:\n\t\tif (what & BEV_EVENT_TIMEOUT) {\n\t\t\tevent_debug((\"%s: connection timeout for \\\"%s:%d\\\" on \"\n\t\t\t\tEV_SOCK_FMT,\n\t\t\t\t__func__, evcon->address, evcon->port,\n\t\t\t\tEV_SOCK_ARG(bufferevent_getfd(bufev))));\n",
                      "markdown": "`\tswitch (evcon->state) {\n\tcase EVCON_CONNECTING:\n\t\tif (what & BEV_EVENT_TIMEOUT) {\n\t\t\tevent_debug((\"%s: connection timeout for \\\"%s:%d\\\" on \"\n\t\t\t\tEV_SOCK_FMT,\n\t\t\t\t__func__, evcon->address, evcon->port,\n\t\t\t\tEV_SOCK_ARG(bufferevent_getfd(bufev))));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 1,
                  "endLine": 817,
                  "endColumn": 10,
                  "snippet": {
                    "text": "evhttp_set_timeout_(struct timeval *tv, int timeout, int def)\n{\n\tif (timeout == -1) {\n\t\ttimeout = def;\n\t}\n\n\tif (timeout == -1) {\n",
                    "rendered": {
                      "text": "evhttp_set_timeout_(struct timeval *tv, int timeout, int def)\n{\n\tif (timeout == -1) {\n\t\ttimeout = def;\n\t}\n\n\tif (timeout == -1) {\n",
                      "markdown": "`evhttp_set_timeout_(struct timeval *tv, int timeout, int def)\n{\n\tif (timeout == -1) {\n\t\ttimeout = def;\n\t}\n\n\tif (timeout == -1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 663,
                  "endLine": 663,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tif (!(req->kind == EVHTTP_REQUEST) || !REQ_VERSION_ATLEAST(req, 1, 1))\n\t\treturn NO;\n\n\texpect = evhttp_find_header(h, \"Expect\");\n\tif (!expect)\n\t\treturn NO;\n\n",
                    "rendered": {
                      "text": "\tif (!(req->kind == EVHTTP_REQUEST) || !REQ_VERSION_ATLEAST(req, 1, 1))\n\t\treturn NO;\n\n\texpect = evhttp_find_header(h, \"Expect\");\n\tif (!expect)\n\t\treturn NO;\n\n",
                      "markdown": "`\tif (!(req->kind == EVHTTP_REQUEST) || !REQ_VERSION_ATLEAST(req, 1, 1))\n\t\treturn NO;\n\n\texpect = evhttp_find_header(h, \"Expect\");\n\tif (!expect)\n\t\treturn NO;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 655,
                  "startColumn": 11,
                  "endLine": 655,
                  "endColumn": 19,
                  "snippet": {
                    "text": "}\n\nenum expect { NO, CONTINUE, OTHER };\nstatic enum expect evhttp_have_expect(struct evhttp_request *req, int input)\n{\n\tconst char *expect;\n\tstruct evkeyvalq *h = input ? req->input_headers : req->output_headers;\n",
                    "rendered": {
                      "text": "}\n\nenum expect { NO, CONTINUE, OTHER };\nstatic enum expect evhttp_have_expect(struct evhttp_request *req, int input)\n{\n\tconst char *expect;\n\tstruct evkeyvalq *h = input ? req->input_headers : req->output_headers;\n",
                      "markdown": "`}\n\nenum expect { NO, CONTINUE, OTHER };\nstatic enum expect evhttp_have_expect(struct evhttp_request *req, int input)\n{\n\tconst char *expect;\n\tstruct evkeyvalq *h = input ? req->input_headers : req->output_headers;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/http.c"
                },
                "region": {
                  "startLine": 654,
                  "startColumn": 4,
                  "endLine": 654,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t}\n}\n\nenum expect { NO, CONTINUE, OTHER };\nstatic enum expect evhttp_have_expect(struct evhttp_request *req, int input)\n{\n\tconst char *expect;\n",
                    "rendered": {
                      "text": "\t}\n}\n\nenum expect { NO, CONTINUE, OTHER };\nstatic enum expect evhttp_have_expect(struct evhttp_request *req, int input)\n{\n\tconst char *expect;\n",
                      "markdown": "`\t}\n}\n\nenum expect { NO, CONTINUE, OTHER };\nstatic enum expect evhttp_have_expect(struct evhttp_request *req, int input)\n{\n\tconst char *expect;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nfunction path_in_repo()\n{\n    echo \"$(git rev-parse --show-toplevel)/$*\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nfunction path_in_repo()\n{\n    echo \"$(git rev-parse --show-toplevel)/$*\"\n",
                      "markdown": "`#!/usr/bin/env bash\n\nfunction path_in_repo()\n{\n    echo \"$(git rev-parse --show-toplevel)/$*\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\nmain \"$@\"\n",
                    "rendered": {
                      "text": "        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\nmain \"$@\"\n",
                      "markdown": "`        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\nmain \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 13,
                  "snippet": {
                    "text": "            -e GitHub\n        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\nmain \"$@\"\n",
                    "rendered": {
                      "text": "            -e GitHub\n        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\nmain \"$@\"\n",
                      "markdown": "`            -e GitHub\n        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\nmain \"$@\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 7,
                  "endLine": 20,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        local grep_patterns=(\n            -e GitHub\n        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\n",
                    "rendered": {
                      "text": "        local grep_patterns=(\n            -e GitHub\n        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\n",
                      "markdown": "`        local grep_patterns=(\n            -e GitHub\n        )\n        grep -F -x -v \"${grep_patterns[@]}\" \n    } | sort -u > \"$new_contributors.filtered\"\n    awk '{printf(\" * %s\\n\", $0)}' \"$new_contributors.filtered\" >> \"$(path_in_repo CONTRIBUTORS.md)\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 15,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n        local grep_patterns=(\n            -e GitHub\n",
                    "rendered": {
                      "text": "\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n        local grep_patterns=(\n            -e GitHub\n",
                      "markdown": "`\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n        local grep_patterns=(\n            -e GitHub\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    trap \"rm $new_contributors $new_contributors.filtered\" EXIT\n\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n        local grep_patterns=(\n",
                    "rendered": {
                      "text": "    trap \"rm $new_contributors $new_contributors.filtered\" EXIT\n\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n        local grep_patterns=(\n",
                      "markdown": "`    trap \"rm $new_contributors $new_contributors.filtered\" EXIT\n\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n        local grep_patterns=(\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    new_contributors=\"$(mktemp libevent.XXXXXX)\"\n    trap \"rm $new_contributors $new_contributors.filtered\" EXIT\n\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n",
                    "rendered": {
                      "text": "    new_contributors=\"$(mktemp libevent.XXXXXX)\"\n    trap \"rm $new_contributors $new_contributors.filtered\" EXIT\n\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n",
                      "markdown": "`    new_contributors=\"$(mktemp libevent.XXXXXX)\"\n    trap \"rm $new_contributors $new_contributors.filtered\" EXIT\n\n    git log \"$(git describe --abbrev=0)..HEAD\" --pretty='format:%cN%n%aN' > \"$new_contributors\"\n    awk '/^ \\* / { split($0, cols, \" \\\\* \"); print(cols[2]); }' \"$(path_in_repo CONTRIBUTORS.md)\" | {\n        grep -F -x -v -f- \"$new_contributors\"\n    } | {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/update-contributors.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nfunction path_in_repo()\n{\n    echo \"$(git rev-parse --show-toplevel)/$*\"\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nfunction path_in_repo()\n{\n    echo \"$(git rev-parse --show-toplevel)/$*\"\n",
                      "markdown": "`#!/usr/bin/env bash\n\nfunction path_in_repo()\n{\n    echo \"$(git rev-parse --show-toplevel)/$*\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/changelog.py"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 28,
                  "endLine": 61,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                for c in repo.iter_commits('{}..{}'.format(*commit.parents)):\n                    ignore.append(c.hexsha)\n                    authors.add(c.author)\n                    pr = prs.get(c, pr)\n        summary = commit.summary\n        if pr is not None:\n            pr = f'#{pr}'\n",
                    "rendered": {
                      "text": "                for c in repo.iter_commits('{}..{}'.format(*commit.parents)):\n                    ignore.append(c.hexsha)\n                    authors.add(c.author)\n                    pr = prs.get(c, pr)\n        summary = commit.summary\n        if pr is not None:\n            pr = f'#{pr}'\n",
                      "markdown": "`                for c in repo.iter_commits('{}..{}'.format(*commit.parents)):\n                    ignore.append(c.hexsha)\n                    authors.add(c.author)\n                    pr = prs.get(c, pr)\n        summary = commit.summary\n        if pr is not None:\n            pr = f'#{pr}'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/changelog.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 16,
                  "endLine": 50,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n    for commit in repo.iter_commits(revision_range):\n        authors = set({commit.author})\n        pr = prs.get(commit, None)\n        if squash:\n            if commit.hexsha in ignore:\n                continue\n",
                    "rendered": {
                      "text": "\n    for commit in repo.iter_commits(revision_range):\n        authors = set({commit.author})\n        pr = prs.get(commit, None)\n        if squash:\n            if commit.hexsha in ignore:\n                continue\n",
                      "markdown": "`\n    for commit in repo.iter_commits(revision_range):\n        authors = set({commit.author})\n        pr = prs.get(commit, None)\n        if squash:\n            if commit.hexsha in ignore:\n                continue\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/changelog.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 17,
                  "endLine": 22,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    #     fetch = +refs/heads/*:refs/remotes/upstream/*\n    #     fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n    #\n    # So that the script could obtain the PR number.\n    #\n    # I hope that it will work with rebase & squashes.\n    p.add_argument('--pull-request-refs', default='upstream/pr/')\n",
                    "rendered": {
                      "text": "    #     fetch = +refs/heads/*:refs/remotes/upstream/*\n    #     fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n    #\n    # So that the script could obtain the PR number.\n    #\n    # I hope that it will work with rebase & squashes.\n    p.add_argument('--pull-request-refs', default='upstream/pr/')\n",
                      "markdown": "`    #     fetch = +refs/heads/*:refs/remotes/upstream/*\n    #     fetch = +refs/pull/*/head:refs/remotes/upstream/pr/*\n    #\n    # So that the script could obtain the PR number.\n    #\n    # I hope that it will work with rebase & squashes.\n    p.add_argument('--pull-request-refs', default='upstream/pr/')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/changelog.py"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 15,
                  "endLine": 13,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    p.add_argument('--abbrev', default=8, type=int)\n    # git config pretty.le\n    p.add_argument('--format', default='  o %(s)s (%(h)s %(aN)s)')\n    # I did not find a way to search PRs by commits (even though web can do\n    # this), so instead, you should configure your repository to fetch all PRs,\n    # like this:\n    #\n",
                    "rendered": {
                      "text": "    p.add_argument('--abbrev', default=8, type=int)\n    # git config pretty.le\n    p.add_argument('--format', default='  o %(s)s (%(h)s %(aN)s)')\n    # I did not find a way to search PRs by commits (even though web can do\n    # this), so instead, you should configure your repository to fetch all PRs,\n    # like this:\n    #\n",
                      "markdown": "`    p.add_argument('--abbrev', default=8, type=int)\n    # git config pretty.le\n    p.add_argument('--format', default='  o %(s)s (%(h)s %(aN)s)')\n    # I did not find a way to search PRs by commits (even though web can do\n    # this), so instead, you should configure your repository to fetch all PRs,\n    # like this:\n    #\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/changelog.py"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 5,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    p.add_argument('--git-root', default='.')\n    p.add_argument('--no-squash-merge-childs', action='store_true')\n    p.add_argument('--abbrev', default=8, type=int)\n    # git config pretty.le\n    p.add_argument('--format', default='  o %(s)s (%(h)s %(aN)s)')\n    # I did not find a way to search PRs by commits (even though web can do\n    # this), so instead, you should configure your repository to fetch all PRs,\n",
                    "rendered": {
                      "text": "    p.add_argument('--git-root', default='.')\n    p.add_argument('--no-squash-merge-childs', action='store_true')\n    p.add_argument('--abbrev', default=8, type=int)\n    # git config pretty.le\n    p.add_argument('--format', default='  o %(s)s (%(h)s %(aN)s)')\n    # I did not find a way to search PRs by commits (even though web can do\n    # this), so instead, you should configure your repository to fetch all PRs,\n",
                      "markdown": "`    p.add_argument('--git-root', default='.')\n    p.add_argument('--no-squash-merge-childs', action='store_true')\n    p.add_argument('--abbrev', default=8, type=int)\n    # git config pretty.le\n    p.add_argument('--format', default='  o %(s)s (%(h)s %(aN)s)')\n    # I did not find a way to search PRs by commits (even though web can do\n    # this), so instead, you should configure your repository to fetch all PRs,\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/extra/release/changelog.py"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 6,
                  "endLine": 4,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\nimport git\nimport argparse\n\ndef parse_opts():\n    p = argparse.ArgumentParser()\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\nimport git\nimport argparse\n\ndef parse_opts():\n    p = argparse.ArgumentParser()\n",
                      "markdown": "`#!/usr/bin/env python3\n\nimport git\nimport argparse\n\ndef parse_opts():\n    p = argparse.ArgumentParser()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 161,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                    "rendered": {
                      "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                      "markdown": "`\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                    "rendered": {
                      "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                      "markdown": "`\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n#   override the default by specifying --enable or --disable. The macros\n#   ensure that contradictory flags are not given (e.g.,\n#   --enable-doxygen-html and --enable-doxygen-chm,\n",
                    "rendered": {
                      "text": "#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n#   override the default by specifying --enable or --disable. The macros\n#   ensure that contradictory flags are not given (e.g.,\n#   --enable-doxygen-html and --enable-doxygen-chm,\n",
                      "markdown": "`#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n#   override the default by specifying --enable or --disable. The macros\n#   ensure that contradictory flags are not given (e.g.,\n#   --enable-doxygen-html and --enable-doxygen-chm,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 71,
                  "endLine": 34,
                  "snippet": {
                    "text": "#   be the most popular and portable combination. MAN pages created by\n#   Doxygen are usually problematic, though by picking an appropriate subset\n#   and doing some massaging they might be better than nothing. CHM and RTF\n#   are specific for MS (note that you can't generate both HTML and CHM at\n#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n",
                    "rendered": {
                      "text": "#   be the most popular and portable combination. MAN pages created by\n#   Doxygen are usually problematic, though by picking an appropriate subset\n#   and doing some massaging they might be better than nothing. CHM and RTF\n#   are specific for MS (note that you can't generate both HTML and CHM at\n#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n",
                      "markdown": "`#   be the most popular and portable combination. MAN pages created by\n#   Doxygen are usually problematic, though by picking an appropriate subset\n#   and doing some massaging they might be better than nothing. CHM and RTF\n#   are specific for MS (note that you can't generate both HTML and CHM at\n#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 27,
                  "endLine": 21,
                  "endColumn": 36,
                  "snippet": {
                    "text": "#\n# DESCRIPTION\n#\n#   The DX_*_FEATURE macros control the default setting for the given\n#   Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for\n#   generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML\n#   help (for MS users), 'CHI' for generating a separate .chi file by the\n",
                    "rendered": {
                      "text": "#\n# DESCRIPTION\n#\n#   The DX_*_FEATURE macros control the default setting for the given\n#   Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for\n#   generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML\n#   help (for MS users), 'CHI' for generating a separate .chi file by the\n",
                      "markdown": "`#\n# DESCRIPTION\n#\n#   The DX_*_FEATURE macros control the default setting for the given\n#   Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for\n#   generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML\n#   help (for MS users), 'CHI' for generating a separate .chi file by the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 505,
                  "endLine": 505,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t    \\$(DX_PDFLATEX) refman.tex; \\\\\n\t    countdown=\\`expr \\$\\$countdown - 1\\`; \\\\\n\tdone; \\\\\n\tmv refman.pdf ../\\$(PACKAGE).pdf\n\n]])[\"]],\n[[DX_SNIPPET_pdf=\"\"]])\n",
                    "rendered": {
                      "text": "\t    \\$(DX_PDFLATEX) refman.tex; \\\\\n\t    countdown=\\`expr \\$\\$countdown - 1\\`; \\\\\n\tdone; \\\\\n\tmv refman.pdf ../\\$(PACKAGE).pdf\n\n]])[\"]],\n[[DX_SNIPPET_pdf=\"\"]])\n",
                      "markdown": "`\t    \\$(DX_PDFLATEX) refman.tex; \\\\\n\t    countdown=\\`expr \\$\\$countdown - 1\\`; \\\\\n\tdone; \\\\\n\tmv refman.pdf ../\\$(PACKAGE).pdf\n\n]])[\"]],\n[[DX_SNIPPET_pdf=\"\"]])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 161,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                    "rendered": {
                      "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                      "markdown": "`\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                    "rendered": {
                      "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                      "markdown": "`\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 35,
                  "endLine": 99,
                  "snippet": {
                    "text": "    ;;\nesac\n\ndnl check if we have and should use OpenSSL\nAM_CONDITIONAL(OPENSSL, [test \"$have_openssl\" = \"yes\"])\n])\n",
                    "rendered": {
                      "text": "    ;;\nesac\n\ndnl check if we have and should use OpenSSL\nAM_CONDITIONAL(OPENSSL, [test \"$have_openssl\" = \"yes\"])\n])\n",
                      "markdown": "`    ;;\nesac\n\ndnl check if we have and should use OpenSSL\nAM_CONDITIONAL(OPENSSL, [test \"$have_openssl\" = \"yes\"])\n])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 23,
                  "endLine": 93,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        AC_MSG_ERROR([OpenSSL could not be found. You should add the directory \\\n            containing 'openssl.pc' to the 'PKG_CONFIG_PATH' environment variable, set \\\n            'CFLAGS' and 'LDFLAGS' directly, or use '--disable-openssl' to disable \\\n            support for OpenSSL encryption])\n    fi\n    ;;\nesac\n",
                    "rendered": {
                      "text": "        AC_MSG_ERROR([OpenSSL could not be found. You should add the directory \\\n            containing 'openssl.pc' to the 'PKG_CONFIG_PATH' environment variable, set \\\n            'CFLAGS' and 'LDFLAGS' directly, or use '--disable-openssl' to disable \\\n            support for OpenSSL encryption])\n    fi\n    ;;\nesac\n",
                      "markdown": "`        AC_MSG_ERROR([OpenSSL could not be found. You should add the directory \\\n            containing 'openssl.pc' to the 'PKG_CONFIG_PATH' environment variable, set \\\n            'CFLAGS' and 'LDFLAGS' directly, or use '--disable-openssl' to disable \\\n            support for OpenSSL encryption])\n    fi\n    ;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 35,
                  "endLine": 57,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t    have_openssl=yes\n\t    ;;\n\tesac\n\tOPENSSL_INCS=`$PKG_CONFIG --cflags openssl 2>/dev/null`\n\t;;\n    esac\n    case \"$have_openssl\" in\n",
                    "rendered": {
                      "text": "\t    have_openssl=yes\n\t    ;;\n\tesac\n\tOPENSSL_INCS=`$PKG_CONFIG --cflags openssl 2>/dev/null`\n\t;;\n    esac\n    case \"$have_openssl\" in\n",
                      "markdown": "`\t    have_openssl=yes\n\t    ;;\n\tesac\n\tOPENSSL_INCS=`$PKG_CONFIG --cflags openssl 2>/dev/null`\n\t;;\n    esac\n    case \"$have_openssl\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 33,
                  "endLine": 50,
                  "endColumn": 42,
                  "snippet": {
                    "text": "     '')\n\t;;\n     *)\n\tOPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n\tcase \"$OPENSSL_LIBS\" in\n\t '') ;;\n\t *) OPENSSL_LIBS=\"$OPENSSL_LIBS $EV_LIB_GDI $EV_LIB_WS32 $OPENSSL_LIBADD\"\n",
                    "rendered": {
                      "text": "     '')\n\t;;\n     *)\n\tOPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n\tcase \"$OPENSSL_LIBS\" in\n\t '') ;;\n\t *) OPENSSL_LIBS=\"$OPENSSL_LIBS $EV_LIB_GDI $EV_LIB_WS32 $OPENSSL_LIBADD\"\n",
                      "markdown": "`     '')\n\t;;\n     *)\n\tOPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n\tcase \"$OPENSSL_LIBS\" in\n\t '') ;;\n\t *) OPENSSL_LIBS=\"$OPENSSL_LIBS $EV_LIB_GDI $EV_LIB_WS32 $OPENSSL_LIBADD\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 86,
                  "endLine": 35,
                  "endColumn": 95,
                  "snippet": {
                    "text": "                OPENSSL_PKG_CONFIG=\"$openssl_prefix/lib/pkgconfig\"\n                PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH$OPENSSL_PKG_CONFIG\"\n                export PKG_CONFIG_PATH\n                AC_MSG_NOTICE([PKG_CONFIG_PATH has been set to $PKG_CONFIG_PATH (added openssl from brew)])\n                ;;\n            esac\n        fi\n",
                    "rendered": {
                      "text": "                OPENSSL_PKG_CONFIG=\"$openssl_prefix/lib/pkgconfig\"\n                PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH$OPENSSL_PKG_CONFIG\"\n                export PKG_CONFIG_PATH\n                AC_MSG_NOTICE([PKG_CONFIG_PATH has been set to $PKG_CONFIG_PATH (added openssl from brew)])\n                ;;\n            esac\n        fi\n",
                      "markdown": "`                OPENSSL_PKG_CONFIG=\"$openssl_prefix/lib/pkgconfig\"\n                PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH$OPENSSL_PKG_CONFIG\"\n                export PKG_CONFIG_PATH\n                AC_MSG_NOTICE([PKG_CONFIG_PATH has been set to $PKG_CONFIG_PATH (added openssl from brew)])\n                ;;\n            esac\n        fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 24,
                  "endLine": 27,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        if test x$openssl_prefix != x; then\n            OPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n            case \"$OPENSSL_LIBS\" in\n             dnl only if openssl is not in PKG_CONFIG_PATH already\n             '')\n                if test x$PKG_CONFIG_PATH != x; then\n                    PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:\"\n",
                    "rendered": {
                      "text": "        if test x$openssl_prefix != x; then\n            OPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n            case \"$OPENSSL_LIBS\" in\n             dnl only if openssl is not in PKG_CONFIG_PATH already\n             '')\n                if test x$PKG_CONFIG_PATH != x; then\n                    PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:\"\n",
                      "markdown": "`        if test x$openssl_prefix != x; then\n            OPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n            case \"$OPENSSL_LIBS\" in\n             dnl only if openssl is not in PKG_CONFIG_PATH already\n             '')\n                if test x$PKG_CONFIG_PATH != x; then\n                    PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH:\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 44,
                  "endLine": 25,
                  "endColumn": 53,
                  "snippet": {
                    "text": "            openssl_prefix=$($BREW --prefix $($BREW list | $GREP -m1 openssl) 2>/dev/null)\n        fi\n        if test x$openssl_prefix != x; then\n            OPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n            case \"$OPENSSL_LIBS\" in\n             dnl only if openssl is not in PKG_CONFIG_PATH already\n             '')\n",
                    "rendered": {
                      "text": "            openssl_prefix=$($BREW --prefix $($BREW list | $GREP -m1 openssl) 2>/dev/null)\n        fi\n        if test x$openssl_prefix != x; then\n            OPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n            case \"$OPENSSL_LIBS\" in\n             dnl only if openssl is not in PKG_CONFIG_PATH already\n             '')\n",
                      "markdown": "`            openssl_prefix=$($BREW --prefix $($BREW list | $GREP -m1 openssl) 2>/dev/null)\n        fi\n        if test x$openssl_prefix != x; then\n            OPENSSL_LIBS=`$PKG_CONFIG --libs openssl 2>/dev/null`\n            case \"$OPENSSL_LIBS\" in\n             dnl only if openssl is not in PKG_CONFIG_PATH already\n             '')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 39,
                  "endLine": 17,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    dnl and then export it, so that it can be used in detection below.\n    AC_CHECK_PROG([BREW],brew, brew)\n    if test x$BREW = xbrew; then\n        openssl_prefix=$($BREW --prefix openssl 2>/dev/null)\n        dnl CI workers has only openssl@1.1,\n        dnl while default is openssl@3, see\n        dnl https://github.com/Homebrew/brew/issues/12879\n",
                    "rendered": {
                      "text": "    dnl and then export it, so that it can be used in detection below.\n    AC_CHECK_PROG([BREW],brew, brew)\n    if test x$BREW = xbrew; then\n        openssl_prefix=$($BREW --prefix openssl 2>/dev/null)\n        dnl CI workers has only openssl@1.1,\n        dnl while default is openssl@3, see\n        dnl https://github.com/Homebrew/brew/issues/12879\n",
                      "markdown": "`    dnl and then export it, so that it can be used in detection below.\n    AC_CHECK_PROG([BREW],brew, brew)\n    if test x$BREW = xbrew; then\n        openssl_prefix=$($BREW --prefix openssl 2>/dev/null)\n        dnl CI workers has only openssl@1.1,\n        dnl while default is openssl@3, see\n        dnl https://github.com/Homebrew/brew/issues/12879\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 45,
                  "endLine": 12,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\ncase \"$host_os\" in\n    darwin*)\n    dnl when compiling for Darwin, attempt to find OpenSSL using brew.\n    dnl We append the location given by brew to PKG_CONFIG_PATH path\n    dnl and then export it, so that it can be used in detection below.\n    AC_CHECK_PROG([BREW],brew, brew)\n",
                    "rendered": {
                      "text": "\ncase \"$host_os\" in\n    darwin*)\n    dnl when compiling for Darwin, attempt to find OpenSSL using brew.\n    dnl We append the location given by brew to PKG_CONFIG_PATH path\n    dnl and then export it, so that it can be used in detection below.\n    AC_CHECK_PROG([BREW],brew, brew)\n",
                      "markdown": "`\ncase \"$host_os\" in\n    darwin*)\n    dnl when compiling for Darwin, attempt to find OpenSSL using brew.\n    dnl We append the location given by brew to PKG_CONFIG_PATH path\n    dnl and then export it, so that it can be used in detection below.\n    AC_CHECK_PROG([BREW],brew, brew)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/m4/libevent_openssl.m4"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 3,
                  "endLine": 2,
                  "endColumn": 12,
                  "snippet": {
                    "text": "dnl ######################################################################\ndnl OpenSSL support\nAC_DEFUN([LIBEVENT_OPENSSL], [\n\nm4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh])])\n",
                    "rendered": {
                      "text": "dnl ######################################################################\ndnl OpenSSL support\nAC_DEFUN([LIBEVENT_OPENSSL], [\n\nm4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh])])\n",
                      "markdown": "`dnl ######################################################################\ndnl OpenSSL support\nAC_DEFUN([LIBEVENT_OPENSSL], [\n\nm4_ifndef([PKG_PROG_PKG_CONFIG], [AC_MSG_ERROR([PKG_PROG_PKG_CONFIG not found. Please install pkg-config and re-run autogen.sh])])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/include.am"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 2,
                  "endLine": 174,
                  "snippet": {
                    "text": "test_regress_CPPFLAGS = $(AM_CPPFLAGS) $(PTHREAD_CFLAGS) $(ZLIB_CFLAGS) -Itest\ntest_regress_LDFLAGS = $(PTHREAD_CFLAGS)\n\nif OPENSSL\ntest_regress_SOURCES += test/regress_openssl.c\ntest_regress_CPPFLAGS += $(OPENSSL_INCS)\ntest_regress_LDADD += libevent_openssl.la $(OPENSSL_LIBS) ${OPENSSL_LIBADD}\nendif\n",
                    "rendered": {
                      "text": "test_regress_CPPFLAGS = $(AM_CPPFLAGS) $(PTHREAD_CFLAGS) $(ZLIB_CFLAGS) -Itest\ntest_regress_LDFLAGS = $(PTHREAD_CFLAGS)\n\nif OPENSSL\ntest_regress_SOURCES += test/regress_openssl.c\ntest_regress_CPPFLAGS += $(OPENSSL_INCS)\ntest_regress_LDADD += libevent_openssl.la $(OPENSSL_LIBS) ${OPENSSL_LIBADD}\nendif\n",
                      "markdown": "`test_regress_CPPFLAGS = $(AM_CPPFLAGS) $(PTHREAD_CFLAGS) $(ZLIB_CFLAGS) -Itest\ntest_regress_LDFLAGS = $(PTHREAD_CFLAGS)\n\nif OPENSSL\ntest_regress_SOURCES += test/regress_openssl.c\ntest_regress_CPPFLAGS += $(OPENSSL_INCS)\ntest_regress_LDADD += libevent_openssl.la $(OPENSSL_LIBS) ${OPENSSL_LIBADD}\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/doxygen.am"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 63,
                  "endLine": 72,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }; \\\n\tdone\n\trmdir \"$(DESTDIR)$(htmldir)/\" || true\n",
                    "rendered": {
                      "text": "\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }; \\\n\tdone\n\trmdir \"$(DESTDIR)$(htmldir)/\" || true\n",
                      "markdown": "`\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }; \\\n\tdone\n\trmdir \"$(DESTDIR)$(htmldir)/\" || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/doxygen.am"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 4,
                  "endLine": 72,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }; \\\n\tdone\n\trmdir \"$(DESTDIR)$(htmldir)/\" || true\n",
                    "rendered": {
                      "text": "\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }; \\\n\tdone\n\trmdir \"$(DESTDIR)$(htmldir)/\" || true\n",
                      "markdown": "`\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }; \\\n\tdone\n\trmdir \"$(DESTDIR)$(htmldir)/\" || true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/doxygen.am"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 63,
                  "endLine": 69,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t@for d in $(docdirs); do \\\n\t  d=`basename $$d`; \\\n\t  echo \"test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n",
                    "rendered": {
                      "text": "\t@for d in $(docdirs); do \\\n\t  d=`basename $$d`; \\\n\t  echo \"test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n",
                      "markdown": "`\t@for d in $(docdirs); do \\\n\t  d=`basename $$d`; \\\n\t  echo \"test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/doxygen.am"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 4,
                  "endLine": 69,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t@for d in $(docdirs); do \\\n\t  d=`basename $$d`; \\\n\t  echo \"test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n",
                    "rendered": {
                      "text": "\t@for d in $(docdirs); do \\\n\t  d=`basename $$d`; \\\n\t  echo \"test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n",
                      "markdown": "`\t@for d in $(docdirs); do \\\n\t  d=`basename $$d`; \\\n\t  echo \"test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n\t  rm -rf '$(DESTDIR)$(htmldir)/'$$d; }\"; \\\n\t  test ! -d '$(DESTDIR)$(htmldir)/'$$d || \\\n\t  { find '$(DESTDIR)$(htmldir)/'$$d -type d ! -perm -200 -exec chmod u+w '{}' ';' && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/doxygen.am"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 2,
                  "endLine": 61,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tfi\n\t@for d in $(docdirs); do \\\n\t  echo \"cp -pR $$d '$(DESTDIR)$(htmldir)/'\"; \\\n\t  cp -pR $$d '$(DESTDIR)$(htmldir)/'; \\\n\tdone\n\n# Rules for uninstalling docs generated by doxygen from $(htmldir)\n",
                    "rendered": {
                      "text": "\tfi\n\t@for d in $(docdirs); do \\\n\t  echo \"cp -pR $$d '$(DESTDIR)$(htmldir)/'\"; \\\n\t  cp -pR $$d '$(DESTDIR)$(htmldir)/'; \\\n\tdone\n\n# Rules for uninstalling docs generated by doxygen from $(htmldir)\n",
                      "markdown": "`\tfi\n\t@for d in $(docdirs); do \\\n\t  echo \"cp -pR $$d '$(DESTDIR)$(htmldir)/'\"; \\\n\t  cp -pR $$d '$(DESTDIR)$(htmldir)/'; \\\n\tdone\n\n# Rules for uninstalling docs generated by doxygen from $(htmldir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/doxygen.am"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 2,
                  "endLine": 40,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t  p=`basename $$p`; \\\n\t  p_strip=$${p/libevent_/}; \\\n\t  if [ ! \"$$p_strip\" = \"$$p\" ]; then continue; fi; \\\n\t  mv '$(man3_MAN_DIR)/'$$p '$(man3_MAN_DIR)/'libevent_$$p; \\\n\tdone\n\n# integrate doxygen with automake targets\n",
                    "rendered": {
                      "text": "\t  p=`basename $$p`; \\\n\t  p_strip=$${p/libevent_/}; \\\n\t  if [ ! \"$$p_strip\" = \"$$p\" ]; then continue; fi; \\\n\t  mv '$(man3_MAN_DIR)/'$$p '$(man3_MAN_DIR)/'libevent_$$p; \\\n\tdone\n\n# integrate doxygen with automake targets\n",
                      "markdown": "`\t  p=`basename $$p`; \\\n\t  p_strip=$${p/libevent_/}; \\\n\t  if [ ! \"$$p_strip\" = \"$$p\" ]; then continue; fi; \\\n\t  mv '$(man3_MAN_DIR)/'$$p '$(man3_MAN_DIR)/'libevent_$$p; \\\n\tdone\n\n# integrate doxygen with automake targets\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/make-event-config.sed"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# Sed script to postprocess config.h into event-config.h.\n\n1i\\\n/* event2/event-config.h\\\n",
                    "rendered": {
                      "text": "# Sed script to postprocess config.h into event-config.h.\n\n1i\\\n/* event2/event-config.h\\\n",
                      "markdown": "`# Sed script to postprocess config.h into event-config.h.\n\n1i\\\n/* event2/event-config.h\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/event_rpcgen.py"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 39,
                  "endLine": 19,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# 1) propagate the arguments/options parsed by argparse down to the\n#    instantiated factory objects.\n# 2) move the globals into a class that manages execution, including the\n#    progress outputs that go to stderr at the moment.\n# 3) emit other languages.\n\nimport argparse\n",
                    "rendered": {
                      "text": "# 1) propagate the arguments/options parsed by argparse down to the\n#    instantiated factory objects.\n# 2) move the globals into a class that manages execution, including the\n#    progress outputs that go to stderr at the moment.\n# 3) emit other languages.\n\nimport argparse\n",
                      "markdown": "`# 1) propagate the arguments/options parsed by argparse down to the\n#    instantiated factory objects.\n# 2) move the globals into a class that manages execution, including the\n#    progress outputs that go to stderr at the moment.\n# 3) emit other languages.\n\nimport argparse\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 131,
                  "endLine": 222,
                  "endColumn": 135,
                  "snippet": {
                    "text": "e won't break.  Mark the macro as deprecated.\n o Fix DNS unit tests so that having a DNS server with broken IPv6 support is no longer cause for aborting the unit tests.\n o Make event_base_free() succeed even if there are pending non-internal events on a base.  This may still leak memory and fds, but at least it no longer crashes.\n o Post-process the config.h file into a new, installed event-config.h file that we can install, and whose macros will be safe to include in header files.\n o Remove the long-deprecated acconfig.h file.\n o Do not require #include <sys/types.h> before #include <event.h>.\n o",
                    "rendered": {
                      "text": "e won't break.  Mark the macro as deprecated.\n o Fix DNS unit tests so that having a DNS server with broken IPv6 support is no longer cause for aborting the unit tests.\n o Make event_base_free() succeed even if there are pending non-internal events on a base.  This may still leak memory and fds, but at least it no longer crashes.\n o Post-process the config.h file into a new, installed event-config.h file that we can install, and whose macros will be safe to include in header files.\n o Remove the long-deprecated acconfig.h file.\n o Do not require #include <sys/types.h> before #include <event.h>.\n o",
                      "markdown": "`e won't break.  Mark the macro as deprecated.\n o Fix DNS unit tests so that having a DNS server with broken IPv6 support is no longer cause for aborting the unit tests.\n o Make event_base_free() succeed even if there are pending non-internal events on a base.  This may still leak memory and fds, but at least it no longer crashes.\n o Post-process the config.h file into a new, installed event-config.h file that we can install, and whose macros will be safe to include in header files.\n o Remove the long-deprecated acconfig.h file.\n o Do not require #include <sys/types.h> before #include <event.h>.\n o`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 2,
                  "endLine": 153,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Use a 64-bit field to hold HTTP content-lengths.  Patch from Scott Lamb.\n o Allow regression code to build even without Python installed\n o remove NDEBUG ifdefs from evdns.c\n o update documentation of event_loop and event_base_loop; from Tani Hosokawa.\n o detect integer types properly on platforms without stdint.h\n o Remove \"AM_MAINTAINER_MODE\" declaration in configure.in: now makefiles and configure should get re-generated automatically when Makefile.am or configure.in changes.\n o do not insert event into list when evsel->add fails\n",
                    "rendered": {
                      "text": " o Use a 64-bit field to hold HTTP content-lengths.  Patch from Scott Lamb.\n o Allow regression code to build even without Python installed\n o remove NDEBUG ifdefs from evdns.c\n o update documentation of event_loop and event_base_loop; from Tani Hosokawa.\n o detect integer types properly on platforms without stdint.h\n o Remove \"AM_MAINTAINER_MODE\" declaration in configure.in: now makefiles and configure should get re-generated automatically when Makefile.am or configure.in changes.\n o do not insert event into list when evsel->add fails\n",
                      "markdown": "` o Use a 64-bit field to hold HTTP content-lengths.  Patch from Scott Lamb.\n o Allow regression code to build even without Python installed\n o remove NDEBUG ifdefs from evdns.c\n o update documentation of event_loop and event_base_loop; from Tani Hosokawa.\n o detect integer types properly on platforms without stdint.h\n o Remove \"AM_MAINTAINER_MODE\" declaration in configure.in: now makefiles and configure should get re-generated automatically when Makefile.am or configure.in changes.\n o do not insert event into list when evsel->add fails\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 25,
                  "endLine": 93,
                  "endColumn": 29,
                  "snippet": {
                    "text": "g.h> directly\n o switch all uses of [v]snprintf over to evutil\n o Correct handling of trailing headers in chunked replies; from Scott Lamb.\n o Support multi-line HTTP headers; based on a patch from Moshe Litvin\n o Reject negative Content-Length headers; anonymous bug report\n o Detect CLOCK_MONOTONIC at runtime for evdns; anonymous bug report\t\n o Fix a bug where deleting signals with the kqueue backend would cause subsequent adds to fail\n o Support multiple events listening on the same signal; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n o Deal ",
                    "rendered": {
                      "text": "g.h> directly\n o switch all uses of [v]snprintf over to evutil\n o Correct handling of trailing headers in chunked replies; from Scott Lamb.\n o Support multi-line HTTP headers; based on a patch from Moshe Litvin\n o Reject negative Content-Length headers; anonymous bug report\n o Detect CLOCK_MONOTONIC at runtime for evdns; anonymous bug report\t\n o Fix a bug where deleting signals with the kqueue backend would cause subsequent adds to fail\n o Support multiple events listening on the same signal; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n o Deal ",
                      "markdown": "`g.h> directly\n o switch all uses of [v]snprintf over to evutil\n o Correct handling of trailing headers in chunked replies; from Scott Lamb.\n o Support multi-line HTTP headers; based on a patch from Moshe Litvin\n o Reject negative Content-Length headers; anonymous bug report\n o Detect CLOCK_MONOTONIC at runtime for evdns; anonymous bug report\t\n o Fix a bug where deleting signals with the kqueue backend would cause subsequent adds to fail\n o Support multiple events listening on the same signal; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n o Deal `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 129,
                  "endLine": 33,
                  "endColumn": 133,
                  "snippet": {
                    "text": "-stable:\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not allocate the maximum event queue and fd array for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 512K per epoll-based event_base.  Resolves bug 2839240.\n o Fix compilation on Android, which forgot to define fd_mask in its sys/select.h\n o Do not drop data from evbuff",
                    "rendered": {
                      "text": "-stable:\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not allocate the maximum event queue and fd array for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 512K per epoll-based event_base.  Resolves bug 2839240.\n o Fix compilation on Android, which forgot to define fd_mask in its sys/select.h\n o Do not drop data from evbuff",
                      "markdown": "`-stable:\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not allocate the maximum event queue and fd array for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 512K per epoll-based event_base.  Resolves bug 2839240.\n o Fix compilation on Android, which forgot to define fd_mask in its sys/select.h\n o Do not drop data from evbuff`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 77,
                  "endLine": 33,
                  "endColumn": 81,
                  "snippet": {
                    "text": " on Solaris, elsewhere (6cbea13)\n\n\nChanges in 1.4.13-stable:\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not allocate the maximum event queue and fd array for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 512K per epoll-based event_base.  Resolves bug 2839240.\n o Fix compilation on Android, which forgot to define fd_mask",
                    "rendered": {
                      "text": " on Solaris, elsewhere (6cbea13)\n\n\nChanges in 1.4.13-stable:\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not allocate the maximum event queue and fd array for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 512K per epoll-based event_base.  Resolves bug 2839240.\n o Fix compilation on Android, which forgot to define fd_mask",
                      "markdown": "` on Solaris, elsewhere (6cbea13)\n\n\nChanges in 1.4.13-stable:\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not allocate the maximum event queue and fd array for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 512K per epoll-based event_base.  Resolves bug 2839240.\n o Fix compilation on Android, which forgot to define fd_mask`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 2,
                  "endLine": 11,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Valgrind fix: Clear struct kevent before checking for OSX bug. (5713d5d William Ahern)\n o Fix a crash when reading badly formatted resolve.conf (5b10d00 Yasuoka Masahiko)\n o Fix memory-leak of signal handler array with kqueue. [backport] (01f3775)\n o Update sample/signal-test.c to use newer APIs and not leak. (891765c Evan Jones)\n o Correct all versions in 1.4 branch (ac0d213)\n o Make evutil_make_socket_nonblocking() leave any other flags alone. (81c26ba Jardel Weyrich)\n o Adjusted fcntl() retval comparison on evutil_make_socket_nonblocking(). (5f2e250 Jardel Weyrich)\n",
                    "rendered": {
                      "text": " o Valgrind fix: Clear struct kevent before checking for OSX bug. (5713d5d William Ahern)\n o Fix a crash when reading badly formatted resolve.conf (5b10d00 Yasuoka Masahiko)\n o Fix memory-leak of signal handler array with kqueue. [backport] (01f3775)\n o Update sample/signal-test.c to use newer APIs and not leak. (891765c Evan Jones)\n o Correct all versions in 1.4 branch (ac0d213)\n o Make evutil_make_socket_nonblocking() leave any other flags alone. (81c26ba Jardel Weyrich)\n o Adjusted fcntl() retval comparison on evutil_make_socket_nonblocking(). (5f2e250 Jardel Weyrich)\n",
                      "markdown": "` o Valgrind fix: Clear struct kevent before checking for OSX bug. (5713d5d William Ahern)\n o Fix a crash when reading badly formatted resolve.conf (5b10d00 Yasuoka Masahiko)\n o Fix memory-leak of signal handler array with kqueue. [backport] (01f3775)\n o Update sample/signal-test.c to use newer APIs and not leak. (891765c Evan Jones)\n o Correct all versions in 1.4 branch (ac0d213)\n o Make evutil_make_socket_nonblocking() leave any other flags alone. (81c26ba Jardel Weyrich)\n o Adjusted fcntl() retval comparison on evutil_make_socket_nonblocking(). (5f2e250 Jardel Weyrich)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 39,
                  "endLine": 231,
                  "endColumn": 48,
                  "snippet": {
                    "text": " o Remove a bash-ism in autogen.sh\n o When calling event_del on a signal, restore the signal handler's previous value rather than setting it to SIG_DFL. Patch from Christopher Layne.\n o Make the logic for active events work better with internal events; patch from Christopher Layne.\n o We do not need to specially remove a timeout before calling event_del; patch from Christopher Layne.\n",
                    "rendered": {
                      "text": " o Remove a bash-ism in autogen.sh\n o When calling event_del on a signal, restore the signal handler's previous value rather than setting it to SIG_DFL. Patch from Christopher Layne.\n o Make the logic for active events work better with internal events; patch from Christopher Layne.\n o We do not need to specially remove a timeout before calling event_del; patch from Christopher Layne.\n",
                      "markdown": "` o Remove a bash-ism in autogen.sh\n o When calling event_del on a signal, restore the signal handler's previous value rather than setting it to SIG_DFL. Patch from Christopher Layne.\n o Make the logic for active events work better with internal events; patch from Christopher Layne.\n o We do not need to specially remove a timeout before calling event_del; patch from Christopher Layne.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 19,
                  "endLine": 206,
                  "endColumn": 27,
                  "snippet": {
                    "text": "oeter.)\n o Skip calling gettime() in timeout_process if we are not in fact waiting for any events. (Patch from Trond Norbye)\n o Make test subdirectory compile under mingw.\n o Fix win32 buffer.c behavior so that it is correct for sockets (which do not like ReadFile and WriteFile).\n o Make the test.sh script run unit tests for the evpoll method.\n o Make the entire evdns.h header enclosed in \"extern C\" as appropriate.\n o Fix implementation of strsep on platforms that lack it\n o Fix implementation of getaddrinfo on platforms that lack it; mainly, this will make Windows http.c work better.  Original patch ",
                    "rendered": {
                      "text": "oeter.)\n o Skip calling gettime() in timeout_process if we are not in fact waiting for any events. (Patch from Trond Norbye)\n o Make test subdirectory compile under mingw.\n o Fix win32 buffer.c behavior so that it is correct for sockets (which do not like ReadFile and WriteFile).\n o Make the test.sh script run unit tests for the evpoll method.\n o Make the entire evdns.h header enclosed in \"extern C\" as appropriate.\n o Fix implementation of strsep on platforms that lack it\n o Fix implementation of getaddrinfo on platforms that lack it; mainly, this will make Windows http.c work better.  Original patch ",
                      "markdown": "`oeter.)\n o Skip calling gettime() in timeout_process if we are not in fact waiting for any events. (Patch from Trond Norbye)\n o Make test subdirectory compile under mingw.\n o Fix win32 buffer.c behavior so that it is correct for sockets (which do not like ReadFile and WriteFile).\n o Make the test.sh script run unit tests for the evpoll method.\n o Make the entire evdns.h header enclosed in \"extern C\" as appropriate.\n o Fix implementation of strsep on platforms that lack it\n o Fix implementation of getaddrinfo on platforms that lack it; mainly, this will make Windows http.c work better.  Original patch `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 18,
                  "endLine": 202,
                  "endColumn": 26,
                  "snippet": {
                    "text": "action ID generation code.\n o Add an evutil module (with header evutil.h) to implement our standard cross-platform hacks, on the theory that somebody else would like to use them too.\n o Fix signals implementation on windows.\n o Fix http module on windows to close sockets properly.\n o Make autogen.sh script run correctly on systems where /bin/sh isn't bash. (Patch from Trond Norbye, rewritten by Hagne Mahre and then Hannah Schroeter.)\n o Skip calling gettime() in timeout_process if we are not in fact waiting for any events. (Patch from Trond Norbye)\n o Make test subdirectory compile under mingw.\n o Fix",
                    "rendered": {
                      "text": "action ID generation code.\n o Add an evutil module (with header evutil.h) to implement our standard cross-platform hacks, on the theory that somebody else would like to use them too.\n o Fix signals implementation on windows.\n o Fix http module on windows to close sockets properly.\n o Make autogen.sh script run correctly on systems where /bin/sh isn't bash. (Patch from Trond Norbye, rewritten by Hagne Mahre and then Hannah Schroeter.)\n o Skip calling gettime() in timeout_process if we are not in fact waiting for any events. (Patch from Trond Norbye)\n o Make test subdirectory compile under mingw.\n o Fix",
                      "markdown": "`action ID generation code.\n o Add an evutil module (with header evutil.h) to implement our standard cross-platform hacks, on the theory that somebody else would like to use them too.\n o Fix signals implementation on windows.\n o Fix http module on windows to close sockets properly.\n o Make autogen.sh script run correctly on systems where /bin/sh isn't bash. (Patch from Trond Norbye, rewritten by Hagne Mahre and then Hannah Schroeter.)\n o Skip calling gettime() in timeout_process if we are not in fact waiting for any events. (Patch from Trond Norbye)\n o Make test subdirectory compile under mingw.\n o Fix`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 16,
                  "endLine": 178,
                  "endColumn": 24,
                  "snippet": {
                    "text": "ndling out of the event backends\n o support for 32-bit tag numbers in rpc structures; this is wire compatible, but changes the API slightly.\n o prefix {encode,decode}_tag functions with evtag to avoid collisions\n o Correctly handle DNS replies with no answers set (Fixes bug 1846282)\n o The configure script now takes an --enable-gcc-warnings option that turns on many optional gcc warnings.  (Nick has been building with these for a while, but they might be useful to other developers.)\n o When building with GCC, use the \"format\" attribute to verify type correctness of calls to printf-like functions.\n o r",
                    "rendered": {
                      "text": "ndling out of the event backends\n o support for 32-bit tag numbers in rpc structures; this is wire compatible, but changes the API slightly.\n o prefix {encode,decode}_tag functions with evtag to avoid collisions\n o Correctly handle DNS replies with no answers set (Fixes bug 1846282)\n o The configure script now takes an --enable-gcc-warnings option that turns on many optional gcc warnings.  (Nick has been building with these for a while, but they might be useful to other developers.)\n o When building with GCC, use the \"format\" attribute to verify type correctness of calls to printf-like functions.\n o r",
                      "markdown": "`ndling out of the event backends\n o support for 32-bit tag numbers in rpc structures; this is wire compatible, but changes the API slightly.\n o prefix {encode,decode}_tag functions with evtag to avoid collisions\n o Correctly handle DNS replies with no answers set (Fixes bug 1846282)\n o The configure script now takes an --enable-gcc-warnings option that turns on many optional gcc warnings.  (Nick has been building with these for a while, but they might be useful to other developers.)\n o When building with GCC, use the \"format\" attribute to verify type correctness of calls to printf-like functions.\n o r`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 30,
                  "endLine": 141,
                  "endColumn": 39,
                  "snippet": {
                    "text": " o make event_rpcgen.py generate code include event-config.h; reported by Sam Banks.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n o make RPC replies use application/octet-stream as mime type\n o do not delete uninitialized timeout event in evdns\n\nChanges in 1.4.2-rc:\n o remove pending timeouts on event_base_free()\n",
                    "rendered": {
                      "text": " o make event_rpcgen.py generate code include event-config.h; reported by Sam Banks.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n o make RPC replies use application/octet-stream as mime type\n o do not delete uninitialized timeout event in evdns\n\nChanges in 1.4.2-rc:\n o remove pending timeouts on event_base_free()\n",
                      "markdown": "` o make event_rpcgen.py generate code include event-config.h; reported by Sam Banks.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n o make RPC replies use application/octet-stream as mime type\n o do not delete uninitialized timeout event in evdns\n\nChanges in 1.4.2-rc:\n o remove pending timeouts on event_base_free()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 15,
                  "endLine": 131,
                  "endColumn": 23,
                  "snippet": {
                    "text": " o Fix build under Visual C++ 2005.\n o Expose evhttp_accept_socket() API.\n o Merge windows gettimeofday() replacement into a new evutil_gettimeofday() function.\n o Fix autoconf script behavior on IRIX.\n o Make sure winsock2.h include always comes before windows.h include.\n\nChanges in 1.4.3-stable:\n",
                    "rendered": {
                      "text": " o Fix build under Visual C++ 2005.\n o Expose evhttp_accept_socket() API.\n o Merge windows gettimeofday() replacement into a new evutil_gettimeofday() function.\n o Fix autoconf script behavior on IRIX.\n o Make sure winsock2.h include always comes before windows.h include.\n\nChanges in 1.4.3-stable:\n",
                      "markdown": "` o Fix build under Visual C++ 2005.\n o Expose evhttp_accept_socket() API.\n o Merge windows gettimeofday() replacement into a new evutil_gettimeofday() function.\n o Fix autoconf script behavior on IRIX.\n o Make sure winsock2.h include always comes before windows.h include.\n\nChanges in 1.4.3-stable:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 42,
                  "endLine": 125,
                  "endColumn": 48,
                  "snippet": {
                    "text": " o fix a bug in bufferevent read water marks and add a test for them\n o introduce bufferevent_setcb and bufferevent_setfd to allow better manipulation of bufferevents\n o use libevent's internal timercmp on all platforms, to avoid bugs on old platforms where timercmp(a,b,<=) is buggy.\n o reduce system calls for getting current time by caching it.\n o fix evhttp_bind_socket() so that multiple sockets can be bound by the same http server.\n o Build test directory correctly with CPPFLAGS set.\n o Fix build under Visual C++ 2005.\n",
                    "rendered": {
                      "text": " o fix a bug in bufferevent read water marks and add a test for them\n o introduce bufferevent_setcb and bufferevent_setfd to allow better manipulation of bufferevents\n o use libevent's internal timercmp on all platforms, to avoid bugs on old platforms where timercmp(a,b,<=) is buggy.\n o reduce system calls for getting current time by caching it.\n o fix evhttp_bind_socket() so that multiple sockets can be bound by the same http server.\n o Build test directory correctly with CPPFLAGS set.\n o Fix build under Visual C++ 2005.\n",
                      "markdown": "` o fix a bug in bufferevent read water marks and add a test for them\n o introduce bufferevent_setcb and bufferevent_setfd to allow better manipulation of bufferevents\n o use libevent's internal timercmp on all platforms, to avoid bugs on old platforms where timercmp(a,b,<=) is buggy.\n o reduce system calls for getting current time by caching it.\n o fix evhttp_bind_socket() so that multiple sockets can be bound by the same http server.\n o Build test directory correctly with CPPFLAGS set.\n o Fix build under Visual C++ 2005.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 30,
                  "endLine": 98,
                  "endColumn": 39,
                  "snippet": {
                    "text": "l; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n o Deal with evbuffer_read() returning -1 on EINTR|EAGAIN; from Adam Langley.\n o Fix a bug in which the DNS server would incorrectly set the type of a cname reply to a.\n o Fix a bug where setting the timeout on a bufferevent would take not effect if the event was already pending.\n o Fix a memory leak when using signals for some event bases; reported by Alexander Drozdov.\n o Add libevent.vcproj file to distribution to help with Windows build.\n o Fix a problem with epoll() and reinit; problem report by Al",
                    "rendered": {
                      "text": "l; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n o Deal with evbuffer_read() returning -1 on EINTR|EAGAIN; from Adam Langley.\n o Fix a bug in which the DNS server would incorrectly set the type of a cname reply to a.\n o Fix a bug where setting the timeout on a bufferevent would take not effect if the event was already pending.\n o Fix a memory leak when using signals for some event bases; reported by Alexander Drozdov.\n o Add libevent.vcproj file to distribution to help with Windows build.\n o Fix a problem with epoll() and reinit; problem report by Al",
                      "markdown": "`l; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n o Deal with evbuffer_read() returning -1 on EINTR|EAGAIN; from Adam Langley.\n o Fix a bug in which the DNS server would incorrectly set the type of a cname reply to a.\n o Fix a bug where setting the timeout on a bufferevent would take not effect if the event was already pending.\n o Fix a memory leak when using signals for some event bases; reported by Alexander Drozdov.\n o Add libevent.vcproj file to distribution to help with Windows build.\n o Fix a problem with epoll() and reinit; problem report by Al`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 22,
                  "endLine": 66,
                  "endColumn": 27,
                  "snippet": {
                    "text": " o fix signal processing when a signal callback delivers a signal; from Alexander Drozdov\n o const-ify some arguments to evdns functions.\n o off-by-one error in epoll_recalc; reported by Victor Goya\n o include Doxyfile in tar ball; from Jeff Garzik\n o correctly parse queries with encoded \\r, \\n or + characters\n\nChanges in 1.4.9-stable:\n",
                    "rendered": {
                      "text": " o fix signal processing when a signal callback delivers a signal; from Alexander Drozdov\n o const-ify some arguments to evdns functions.\n o off-by-one error in epoll_recalc; reported by Victor Goya\n o include Doxyfile in tar ball; from Jeff Garzik\n o correctly parse queries with encoded \\r, \\n or + characters\n\nChanges in 1.4.9-stable:\n",
                      "markdown": "` o fix signal processing when a signal callback delivers a signal; from Alexander Drozdov\n o const-ify some arguments to evdns functions.\n o off-by-one error in epoll_recalc; reported by Victor Goya\n o include Doxyfile in tar ball; from Jeff Garzik\n o correctly parse queries with encoded \\r, \\n or + characters\n\nChanges in 1.4.9-stable:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 28,
                  "endLine": 53,
                  "endColumn": 37,
                  "snippet": {
                    "text": " o Disable strict aliasing with GCC: our code is not compliant with it.\n\nChanges in 1.4.11-stable:\n o Fix a bug when removing a timeout from the heap. [Patch from Marko Kreen]\n o Remove the limit on size of HTTP headers by removing static buffers.\n o Fix a nasty dangling pointer bug in epoll.c that could occur after epoll_recalc(). [Patch from Kevin Springborn]\n o Distribute Win32-Code/event-config.h, not ./event-config.h\n",
                    "rendered": {
                      "text": " o Disable strict aliasing with GCC: our code is not compliant with it.\n\nChanges in 1.4.11-stable:\n o Fix a bug when removing a timeout from the heap. [Patch from Marko Kreen]\n o Remove the limit on size of HTTP headers by removing static buffers.\n o Fix a nasty dangling pointer bug in epoll.c that could occur after epoll_recalc(). [Patch from Kevin Springborn]\n o Distribute Win32-Code/event-config.h, not ./event-config.h\n",
                      "markdown": "` o Disable strict aliasing with GCC: our code is not compliant with it.\n\nChanges in 1.4.11-stable:\n o Fix a bug when removing a timeout from the heap. [Patch from Marko Kreen]\n o Remove the limit on size of HTTP headers by removing static buffers.\n o Fix a nasty dangling pointer bug in epoll.c that could occur after epoll_recalc(). [Patch from Kevin Springborn]\n o Distribute Win32-Code/event-config.h, not ./event-config.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-1.4"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 57,
                  "endLine": 48,
                  "endColumn": 61,
                  "snippet": {
                    "text": " o Use __VA_ARGS__ syntax for varargs macros in event_rpcgen when compiler is not GCC.\n o Activate fd events in a pseudorandom order with O(N) backends, so that we don't systematically favor low fds (select) or earlier-added fds (poll, win32).\n o Fix another pair of fencepost bugs in epoll.c.  [Patch from Adam Langley.]\n o Do not break evdns connections to nameservers when our IP changes.\n o Set truncated flag correctly in evdns server replies.\n o Disable strict aliasing with GCC: our code is not compliant with it.\n\n",
                    "rendered": {
                      "text": " o Use __VA_ARGS__ syntax for varargs macros in event_rpcgen when compiler is not GCC.\n o Activate fd events in a pseudorandom order with O(N) backends, so that we don't systematically favor low fds (select) or earlier-added fds (poll, win32).\n o Fix another pair of fencepost bugs in epoll.c.  [Patch from Adam Langley.]\n o Do not break evdns connections to nameservers when our IP changes.\n o Set truncated flag correctly in evdns server replies.\n o Disable strict aliasing with GCC: our code is not compliant with it.\n\n",
                      "markdown": "` o Use __VA_ARGS__ syntax for varargs macros in event_rpcgen when compiler is not GCC.\n o Activate fd events in a pseudorandom order with O(N) backends, so that we don't systematically favor low fds (select) or earlier-added fds (poll, win32).\n o Fix another pair of fencepost bugs in epoll.c.  [Patch from Adam Langley.]\n o Do not break evdns connections to nameservers when our IP changes.\n o Set truncated flag correctly in evdns server replies.\n o Disable strict aliasing with GCC: our code is not compliant with it.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/include.am"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 41,
                  "endColumn": 24,
                  "snippet": {
                    "text": "sample_https_client_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\nnoinst_HEADERS += \\\n\tsample/hostcheck.h \\\n\tsample/openssl_hostname_validation.h\nendif\n\nif MBEDTLS\n",
                    "rendered": {
                      "text": "sample_https_client_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\nnoinst_HEADERS += \\\n\tsample/hostcheck.h \\\n\tsample/openssl_hostname_validation.h\nendif\n\nif MBEDTLS\n",
                      "markdown": "`sample_https_client_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\nnoinst_HEADERS += \\\n\tsample/hostcheck.h \\\n\tsample/openssl_hostname_validation.h\nendif\n\nif MBEDTLS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/include.am"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 16,
                  "endLine": 33,
                  "endColumn": 24,
                  "snippet": {
                    "text": "sample_https_client_SOURCES = \\\n\tsample/https-client.c \\\n\tsample/hostcheck.c \\\n\tsample/openssl_hostname_validation.c\nsample_https_client_LDADD = libevent.la libevent_openssl.la $(OPENSSL_LIBS) $(OPENSSL_LIBADD)\nif BUILD_WIN32\nsample_https_client_LDADD += -lcrypt32\n",
                    "rendered": {
                      "text": "sample_https_client_SOURCES = \\\n\tsample/https-client.c \\\n\tsample/hostcheck.c \\\n\tsample/openssl_hostname_validation.c\nsample_https_client_LDADD = libevent.la libevent_openssl.la $(OPENSSL_LIBS) $(OPENSSL_LIBADD)\nif BUILD_WIN32\nsample_https_client_LDADD += -lcrypt32\n",
                      "markdown": "`sample_https_client_SOURCES = \\\n\tsample/https-client.c \\\n\tsample/hostcheck.c \\\n\tsample/openssl_hostname_validation.c\nsample_https_client_LDADD = libevent.la libevent_openssl.la $(OPENSSL_LIBS) $(OPENSSL_LIBADD)\nif BUILD_WIN32\nsample_https_client_LDADD += -lcrypt32\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/include.am"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 2,
                  "endLine": 19,
                  "snippet": {
                    "text": "\tsample/ws-chat-server\t\t\t\t\\\n\tsample/watch-timing\n\nif OPENSSL\nSAMPLES += sample/le-proxy\nsample_le_proxy_SOURCES = sample/le-proxy.c\nsample_le_proxy_LDADD = libevent.la libevent_openssl.la $(OPENSSL_LIBS) $(OPENSSL_LIBADD)\nsample_le_proxy_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\n",
                    "rendered": {
                      "text": "\tsample/ws-chat-server\t\t\t\t\\\n\tsample/watch-timing\n\nif OPENSSL\nSAMPLES += sample/le-proxy\nsample_le_proxy_SOURCES = sample/le-proxy.c\nsample_le_proxy_LDADD = libevent.la libevent_openssl.la $(OPENSSL_LIBS) $(OPENSSL_LIBADD)\nsample_le_proxy_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\n",
                      "markdown": "`\tsample/ws-chat-server\t\t\t\t\\\n\tsample/watch-timing\n\nif OPENSSL\nSAMPLES += sample/le-proxy\nsample_le_proxy_SOURCES = sample/le-proxy.c\nsample_le_proxy_LDADD = libevent.la libevent_openssl.la $(OPENSSL_LIBS) $(OPENSSL_LIBADD)\nsample_le_proxy_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/dns-example.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 65,
                  "endLine": 174,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\tmemset(&o, 0, sizeof(o));\n\n\tif (c < 2) {\n\t\tfprintf(stderr, \"syntax: %s [-x] [-v] [-c resolv.conf] [-s ns] hostname\\n\", v[0]);\n\t\tfprintf(stderr, \"syntax: %s [-T]\\n\", v[0]);\n\t\treturn 1;\n\t}\n",
                    "rendered": {
                      "text": "\tmemset(&o, 0, sizeof(o));\n\n\tif (c < 2) {\n\t\tfprintf(stderr, \"syntax: %s [-x] [-v] [-c resolv.conf] [-s ns] hostname\\n\", v[0]);\n\t\tfprintf(stderr, \"syntax: %s [-T]\\n\", v[0]);\n\t\treturn 1;\n\t}\n",
                      "markdown": "`\tmemset(&o, 0, sizeof(o));\n\n\tif (c < 2) {\n\t\tfprintf(stderr, \"syntax: %s [-x] [-v] [-c resolv.conf] [-s ns] hostname\\n\", v[0]);\n\t\tfprintf(stderr, \"syntax: %s [-T]\\n\", v[0]);\n\t\treturn 1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 45,
                  "endLine": 174,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        result = matches_subject_alternative_name(hostname, server_cert);\n        if (result == NoSANPresent) {\n                // Extension was not found: try the Common Name\n                result = matches_common_name(hostname, server_cert);\n        }\n\n        return result;\n",
                    "rendered": {
                      "text": "        result = matches_subject_alternative_name(hostname, server_cert);\n        if (result == NoSANPresent) {\n                // Extension was not found: try the Common Name\n                result = matches_common_name(hostname, server_cert);\n        }\n\n        return result;\n",
                      "markdown": "`        result = matches_subject_alternative_name(hostname, server_cert);\n        if (result == NoSANPresent) {\n                // Extension was not found: try the Common Name\n                result = matches_common_name(hostname, server_cert);\n        }\n\n        return result;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 50,
                  "endLine": 171,
                  "endColumn": 58,
                  "snippet": {
                    "text": "                return Error;\n\n        // First try the Subject Alternative Names extension\n        result = matches_subject_alternative_name(hostname, server_cert);\n        if (result == NoSANPresent) {\n                // Extension was not found: try the Common Name\n                result = matches_common_name(hostname, server_cert);\n",
                    "rendered": {
                      "text": "                return Error;\n\n        // First try the Subject Alternative Names extension\n        result = matches_subject_alternative_name(hostname, server_cert);\n        if (result == NoSANPresent) {\n                // Extension was not found: try the Common Name\n                result = matches_common_name(hostname, server_cert);\n",
                      "markdown": "`                return Error;\n\n        // First try the Subject Alternative Names extension\n        result = matches_subject_alternative_name(hostname, server_cert);\n        if (result == NoSANPresent) {\n                // Extension was not found: try the Common Name\n                result = matches_common_name(hostname, server_cert);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 12,
                  "endLine": 167,
                  "endColumn": 20,
                  "snippet": {
                    "text": "HostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n                return Error;\n\n        // First try the Subject Alternative Names extension\n",
                    "rendered": {
                      "text": "HostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n                return Error;\n\n        // First try the Subject Alternative Names extension\n",
                      "markdown": "`HostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n                return Error;\n\n        // First try the Subject Alternative Names extension\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 55,
                  "endLine": 164,
                  "endColumn": 63,
                  "snippet": {
                    "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n",
                    "rendered": {
                      "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n",
                      "markdown": "`* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 34,
                  "endLine": 164,
                  "endColumn": 42,
                  "snippet": {
                    "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n",
                    "rendered": {
                      "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n",
                      "markdown": "`* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns Error if there was an error.\n*/\nHostnameValidationResult validate_hostname(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result;\n\n        if((hostname == NULL) || (server_cert == NULL))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 66,
                  "endLine": 139,
                  "endColumn": 74,
                  "snippet": {
                    "text": "                                break;\n                        }\n                        else { // Compare expected hostname with the DNS name\n                                if (Curl_cert_hostcheck(dns_name, hostname)\n                                    == CURL_HOST_MATCH) {\n                                        result = MatchFound;\n                                        break;\n",
                    "rendered": {
                      "text": "                                break;\n                        }\n                        else { // Compare expected hostname with the DNS name\n                                if (Curl_cert_hostcheck(dns_name, hostname)\n                                    == CURL_HOST_MATCH) {\n                                        result = MatchFound;\n                                        break;\n",
                      "markdown": "`                                break;\n                        }\n                        else { // Compare expected hostname with the DNS name\n                                if (Curl_cert_hostcheck(dns_name, hostname)\n                                    == CURL_HOST_MATCH) {\n                                        result = MatchFound;\n                                        break;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 77,
                  "endLine": 112,
                  "endColumn": 85,
                  "snippet": {
                    "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns NoSANPresent if the SAN extension was not present in the certificate.\n*/\nstatic HostnameValidationResult matches_subject_alternative_name(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result = MatchNotFound;\n        int i;\n        int san_names_nb = -1;\n",
                    "rendered": {
                      "text": "* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns NoSANPresent if the SAN extension was not present in the certificate.\n*/\nstatic HostnameValidationResult matches_subject_alternative_name(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result = MatchNotFound;\n        int i;\n        int san_names_nb = -1;\n",
                      "markdown": "`* Returns MalformedCertificate if any of the hostnames had a NUL character embedded in it.\n* Returns NoSANPresent if the SAN extension was not present in the certificate.\n*/\nstatic HostnameValidationResult matches_subject_alternative_name(const char *hostname, const X509 *server_cert) {\n        HostnameValidationResult result = MatchNotFound;\n        int i;\n        int san_names_nb = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 49,
                  "endLine": 95,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        }\n\n        // Compare expected hostname with the CN\n        if (Curl_cert_hostcheck(common_name_str, hostname) == CURL_HOST_MATCH) {\n                return MatchFound;\n        }\n        else {\n",
                    "rendered": {
                      "text": "        }\n\n        // Compare expected hostname with the CN\n        if (Curl_cert_hostcheck(common_name_str, hostname) == CURL_HOST_MATCH) {\n                return MatchFound;\n        }\n        else {\n",
                      "markdown": "`        }\n\n        // Compare expected hostname with the CN\n        if (Curl_cert_hostcheck(common_name_str, hostname) == CURL_HOST_MATCH) {\n                return MatchFound;\n        }\n        else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 64,
                  "endLine": 64,
                  "endColumn": 72,
                  "snippet": {
                    "text": "* Returns MalformedCertificate if the Common Name had a NUL character embedded in it.\n* Returns Error if the Common Name could not be extracted.\n*/\nstatic HostnameValidationResult matches_common_name(const char *hostname, const X509 *server_cert) {\n        int common_name_loc = -1;\n        X509_NAME_ENTRY *common_name_entry = NULL;\n        ASN1_STRING *common_name_asn1 = NULL;\n",
                    "rendered": {
                      "text": "* Returns MalformedCertificate if the Common Name had a NUL character embedded in it.\n* Returns Error if the Common Name could not be extracted.\n*/\nstatic HostnameValidationResult matches_common_name(const char *hostname, const X509 *server_cert) {\n        int common_name_loc = -1;\n        X509_NAME_ENTRY *common_name_entry = NULL;\n        ASN1_STRING *common_name_asn1 = NULL;\n",
                      "markdown": "`* Returns MalformedCertificate if the Common Name had a NUL character embedded in it.\n* Returns Error if the Common Name could not be extracted.\n*/\nstatic HostnameValidationResult matches_common_name(const char *hostname, const X509 *server_cert) {\n        int common_name_loc = -1;\n        X509_NAME_ENTRY *common_name_entry = NULL;\n        ASN1_STRING *common_name_asn1 = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/openssl_hostname_validation.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 18,
                  "endLine": 46,
                  "endColumn": 26,
                  "snippet": {
                    "text": "#include <openssl/ssl.h>\n#include <string.h>\n\n#include \"openssl_hostname_validation.h\"\n#include \"hostcheck.h\"\n\n#define HOSTNAME_MAX_SIZE 255\n",
                    "rendered": {
                      "text": "#include <openssl/ssl.h>\n#include <string.h>\n\n#include \"openssl_hostname_validation.h\"\n#include \"hostcheck.h\"\n\n#define HOSTNAME_MAX_SIZE 255\n",
                      "markdown": "`#include <openssl/ssl.h>\n#include <string.h>\n\n#include \"openssl_hostname_validation.h\"\n#include \"hostcheck.h\"\n\n#define HOSTNAME_MAX_SIZE 255\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/https-client.c"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 17,
                  "endLine": 512,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}\n\n#ifdef USE_MBEDTLS\n\tmbedtls_ssl_set_hostname(ssl, host);\n#else\n\t// Create OpenSSL bufferevent and stack evhttp on top of it\n\tssl = SSL_new(ssl_ctx);\n",
                    "rendered": {
                      "text": "\t}\n\n#ifdef USE_MBEDTLS\n\tmbedtls_ssl_set_hostname(ssl, host);\n#else\n\t// Create OpenSSL bufferevent and stack evhttp on top of it\n\tssl = SSL_new(ssl_ctx);\n",
                      "markdown": "`\t}\n\n#ifdef USE_MBEDTLS\n\tmbedtls_ssl_set_hostname(ssl, host);\n#else\n\t// Create OpenSSL bufferevent and stack evhttp on top of it\n\tssl = SSL_new(ssl_ctx);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/https-client.c"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 23,
                  "endLine": 213,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t       host, cert_str);\n\t\treturn 1;\n\t} else {\n\t\tprintf(\"Got '%s' for hostname '%s' and certificate:\\n%s\\n\",\n\t\t       res_str, host, cert_str);\n\t\treturn 0;\n\t}\n",
                    "rendered": {
                      "text": "\t\t       host, cert_str);\n\t\treturn 1;\n\t} else {\n\t\tprintf(\"Got '%s' for hostname '%s' and certificate:\\n%s\\n\",\n\t\t       res_str, host, cert_str);\n\t\treturn 0;\n\t}\n",
                      "markdown": "`\t\t       host, cert_str);\n\t\treturn 1;\n\t} else {\n\t\tprintf(\"Got '%s' for hostname '%s' and certificate:\\n%s\\n\",\n\t\t       res_str, host, cert_str);\n\t\treturn 0;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/https-client.c"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 17,
                  "endLine": 180,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tserver_cert = X509_STORE_CTX_get_current_cert(x509_ctx);\n\n\tif (ok_so_far) {\n\t\tres = validate_hostname(host, server_cert);\n\n\t\tswitch (res) {\n\t\tcase MatchFound:\n",
                    "rendered": {
                      "text": "\tserver_cert = X509_STORE_CTX_get_current_cert(x509_ctx);\n\n\tif (ok_so_far) {\n\t\tres = validate_hostname(host, server_cert);\n\n\t\tswitch (res) {\n\t\tcase MatchFound:\n",
                      "markdown": "`\tserver_cert = X509_STORE_CTX_get_current_cert(x509_ctx);\n\n\tif (ok_so_far) {\n\t\tres = validate_hostname(host, server_cert);\n\n\t\tswitch (res) {\n\t\tcase MatchFound:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/https-client.c"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 18,
                  "endLine": 55,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n#ifdef USE_MBEDTLS\n#else\n#include \"openssl_hostname_validation.h\"\n#endif\n\nstatic int ignore_cert = 0;\n",
                    "rendered": {
                      "text": "\n#ifdef USE_MBEDTLS\n#else\n#include \"openssl_hostname_validation.h\"\n#endif\n\nstatic int ignore_cert = 0;\n",
                      "markdown": "`\n#ifdef USE_MBEDTLS\n#else\n#include \"openssl_hostname_validation.h\"\n#endif\n\nstatic int ignore_cert = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/https-client.c"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 3,
                  "endLine": 341,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t} else if (!strcmp(\"-timeout\", argv[i])) {\n\t\t\tif (i < argc - 1) {\n\t\t\t\ttimeout = atoi(argv[i + 1]);\n\t\t\t} else {\n\t\t\t\tsyntax();\n\t\t\t\tgoto error;\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t} else if (!strcmp(\"-timeout\", argv[i])) {\n\t\t\tif (i < argc - 1) {\n\t\t\t\ttimeout = atoi(argv[i + 1]);\n\t\t\t} else {\n\t\t\t\tsyntax();\n\t\t\t\tgoto error;\n",
                      "markdown": "`\t\t\t}\n\t\t} else if (!strcmp(\"-timeout\", argv[i])) {\n\t\t\tif (i < argc - 1) {\n\t\t\t\ttimeout = atoi(argv[i + 1]);\n\t\t\t} else {\n\t\t\t\tsyntax();\n\t\t\t\tgoto error;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/https-client.c"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 4,
                  "endLine": 274,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tchar uri[256];\n\tint port;\n\tint retries = 0;\n\tint timeout = -1;\n\n#ifdef USE_MBEDTLS\n\tmbedtls_dyncontext* ssl = NULL;\n",
                    "rendered": {
                      "text": "\tchar uri[256];\n\tint port;\n\tint retries = 0;\n\tint timeout = -1;\n\n#ifdef USE_MBEDTLS\n\tmbedtls_dyncontext* ssl = NULL;\n",
                      "markdown": "`\tchar uri[256];\n\tint port;\n\tint retries = 0;\n\tint timeout = -1;\n\n#ifdef USE_MBEDTLS\n\tmbedtls_dyncontext* ssl = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/ssl-client-mbedtls.c"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 33,
                  "endLine": 252,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n\tif ((ret = mbedtls_ssl_set_hostname(ssl, SERVER_NAME)) != 0) {\n\t\tmbedtls_printf(\n\t\t\t\" failed\\n  ! mbedtls_ssl_set_hostname returned %d\\n\\n\", ret);\n\t\tgoto exit;\n\t}\n\tfflush(stdout);\n",
                    "rendered": {
                      "text": "\n\tif ((ret = mbedtls_ssl_set_hostname(ssl, SERVER_NAME)) != 0) {\n\t\tmbedtls_printf(\n\t\t\t\" failed\\n  ! mbedtls_ssl_set_hostname returned %d\\n\\n\", ret);\n\t\tgoto exit;\n\t}\n\tfflush(stdout);\n",
                      "markdown": "`\n\tif ((ret = mbedtls_ssl_set_hostname(ssl, SERVER_NAME)) != 0) {\n\t\tmbedtls_printf(\n\t\t\t\" failed\\n  ! mbedtls_ssl_set_hostname returned %d\\n\\n\", ret);\n\t\tgoto exit;\n\t}\n\tfflush(stdout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/ssl-client-mbedtls.c"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 28,
                  "endLine": 250,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tssl = bufferevent_mbedtls_dyncontext_new(&conf);\n\n\tif ((ret = mbedtls_ssl_set_hostname(ssl, SERVER_NAME)) != 0) {\n\t\tmbedtls_printf(\n\t\t\t\" failed\\n  ! mbedtls_ssl_set_hostname returned %d\\n\\n\", ret);\n\t\tgoto exit;\n",
                    "rendered": {
                      "text": "\n\tssl = bufferevent_mbedtls_dyncontext_new(&conf);\n\n\tif ((ret = mbedtls_ssl_set_hostname(ssl, SERVER_NAME)) != 0) {\n\t\tmbedtls_printf(\n\t\t\t\" failed\\n  ! mbedtls_ssl_set_hostname returned %d\\n\\n\", ret);\n\t\tgoto exit;\n",
                      "markdown": "`\n\tssl = bufferevent_mbedtls_dyncontext_new(&conf);\n\n\tif ((ret = mbedtls_ssl_set_hostname(ssl, SERVER_NAME)) != 0) {\n\t\tmbedtls_printf(\n\t\t\t\" failed\\n  ! mbedtls_ssl_set_hostname returned %d\\n\\n\", ret);\n\t\tgoto exit;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 15,
                  "endLine": 214,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n    return 1;\n\n  if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)\n    return 1;\n  return 0;\n}\n",
                    "rendered": {
                      "text": "  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n    return 1;\n\n  if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)\n    return 1;\n  return 0;\n}\n",
                      "markdown": "`  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n    return 1;\n\n  if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)\n    return 1;\n  return 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 20,
                  "endLine": 211,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n    return 1;\n\n  if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)\n",
                    "rendered": {
                      "text": "      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n    return 1;\n\n  if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)\n",
                      "markdown": "`      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n    return 1;\n\n  if(hostmatch(hostname,match_pattern) == CURL_HOST_MATCH)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 21,
                  "endLine": 208,
                  "endColumn": 29,
                  "snippet": {
                    "text": "int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n",
                    "rendered": {
                      "text": "int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n",
                      "markdown": "`int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 7,
                  "endLine": 208,
                  "endColumn": 15,
                  "snippet": {
                    "text": "int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n",
                    "rendered": {
                      "text": "int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n",
                      "markdown": "`int Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n    return 0;\n\n  if(Curl_raw_equal(hostname, match_pattern)) /* trivial case */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 63,
                  "endLine": 205,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n}\n\nint Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n",
                    "rendered": {
                      "text": "    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n}\n\nint Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n",
                      "markdown": "`    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n}\n\nint Curl_cert_hostcheck(const char *match_pattern, const char *hostname)\n{\n  if(!match_pattern || !*match_pattern ||\n      !hostname || !*hostname) /* sanity check */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 40,
                  "endLine": 200,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  prefixlen = pattern_wildcard - pattern;\n  suffixlen = pattern_label_end - (pattern_wildcard+1);\n  return Curl_raw_nequal(pattern, hostname, prefixlen) &&\n    Curl_raw_nequal(pattern_wildcard+1, hostname_label_end - suffixlen,\n                    suffixlen) ?\n    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n}\n",
                    "rendered": {
                      "text": "  prefixlen = pattern_wildcard - pattern;\n  suffixlen = pattern_label_end - (pattern_wildcard+1);\n  return Curl_raw_nequal(pattern, hostname, prefixlen) &&\n    Curl_raw_nequal(pattern_wildcard+1, hostname_label_end - suffixlen,\n                    suffixlen) ?\n    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n}\n",
                      "markdown": "`  prefixlen = pattern_wildcard - pattern;\n  suffixlen = pattern_label_end - (pattern_wildcard+1);\n  return Curl_raw_nequal(pattern, hostname, prefixlen) &&\n    Curl_raw_nequal(pattern_wildcard+1, hostname_label_end - suffixlen,\n                    suffixlen) ?\n    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 34,
                  "endLine": 199,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n  prefixlen = pattern_wildcard - pattern;\n  suffixlen = pattern_label_end - (pattern_wildcard+1);\n  return Curl_raw_nequal(pattern, hostname, prefixlen) &&\n    Curl_raw_nequal(pattern_wildcard+1, hostname_label_end - suffixlen,\n                    suffixlen) ?\n    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n",
                    "rendered": {
                      "text": "\n  prefixlen = pattern_wildcard - pattern;\n  suffixlen = pattern_label_end - (pattern_wildcard+1);\n  return Curl_raw_nequal(pattern, hostname, prefixlen) &&\n    Curl_raw_nequal(pattern_wildcard+1, hostname_label_end - suffixlen,\n                    suffixlen) ?\n    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n",
                      "markdown": "`\n  prefixlen = pattern_wildcard - pattern;\n  suffixlen = pattern_label_end - (pattern_wildcard+1);\n  return Curl_raw_nequal(pattern, hostname, prefixlen) &&\n    Curl_raw_nequal(pattern_wildcard+1, hostname_label_end - suffixlen,\n                    suffixlen) ?\n    CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 26,
                  "endLine": 194,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  /* The wildcard must match at least one character, so the left-most\n     label of the hostname is at least as large as the left-most label\n     of the pattern. */\n  if(hostname_label_end - hostname < pattern_label_end - pattern)\n    return CURL_HOST_NOMATCH;\n\n  prefixlen = pattern_wildcard - pattern;\n",
                    "rendered": {
                      "text": "  /* The wildcard must match at least one character, so the left-most\n     label of the hostname is at least as large as the left-most label\n     of the pattern. */\n  if(hostname_label_end - hostname < pattern_label_end - pattern)\n    return CURL_HOST_NOMATCH;\n\n  prefixlen = pattern_wildcard - pattern;\n",
                      "markdown": "`  /* The wildcard must match at least one character, so the left-most\n     label of the hostname is at least as large as the left-most label\n     of the pattern. */\n  if(hostname_label_end - hostname < pattern_label_end - pattern)\n    return CURL_HOST_NOMATCH;\n\n  prefixlen = pattern_wildcard - pattern;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 5,
                  "endLine": 194,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  /* The wildcard must match at least one character, so the left-most\n     label of the hostname is at least as large as the left-most label\n     of the pattern. */\n  if(hostname_label_end - hostname < pattern_label_end - pattern)\n    return CURL_HOST_NOMATCH;\n\n  prefixlen = pattern_wildcard - pattern;\n",
                    "rendered": {
                      "text": "  /* The wildcard must match at least one character, so the left-most\n     label of the hostname is at least as large as the left-most label\n     of the pattern. */\n  if(hostname_label_end - hostname < pattern_label_end - pattern)\n    return CURL_HOST_NOMATCH;\n\n  prefixlen = pattern_wildcard - pattern;\n",
                      "markdown": "`  /* The wildcard must match at least one character, so the left-most\n     label of the hostname is at least as large as the left-most label\n     of the pattern. */\n  if(hostname_label_end - hostname < pattern_label_end - pattern)\n    return CURL_HOST_NOMATCH;\n\n  prefixlen = pattern_wildcard - pattern;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 40,
                  "endLine": 188,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n\n  /* The wildcard must match at least one character, so the left-most\n",
                    "rendered": {
                      "text": "\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n\n  /* The wildcard must match at least one character, so the left-most\n",
                      "markdown": "`\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n\n  /* The wildcard must match at least one character, so the left-most\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 5,
                  "endLine": 187,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n\n",
                    "rendered": {
                      "text": "      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n\n",
                      "markdown": "`      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 30,
                  "endLine": 186,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n",
                    "rendered": {
                      "text": "    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n",
                      "markdown": "`    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 2,
                  "endLine": 186,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n",
                    "rendered": {
                      "text": "    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n",
                      "markdown": "`    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n  if(hostname_label_end == NULL ||\n     !Curl_raw_equal(pattern_label_end, hostname_label_end))\n    return CURL_HOST_NOMATCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 35,
                  "endLine": 183,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    wildcard_enabled = 0;\n  }\n  if(!wildcard_enabled)\n    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n",
                    "rendered": {
                      "text": "    wildcard_enabled = 0;\n  }\n  if(!wildcard_enabled)\n    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n",
                      "markdown": "`    wildcard_enabled = 0;\n  }\n  if(!wildcard_enabled)\n    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  hostname_label_end = strchr(hostname, '.');\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 35,
                  "endLine": 170,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  size_t prefixlen, suffixlen;\n  pattern_wildcard = strchr(pattern, '*');\n  if(pattern_wildcard == NULL)\n    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  /* We require at least 2 dots in pattern to avoid too wide wildcard\n",
                    "rendered": {
                      "text": "  size_t prefixlen, suffixlen;\n  pattern_wildcard = strchr(pattern, '*');\n  if(pattern_wildcard == NULL)\n    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  /* We require at least 2 dots in pattern to avoid too wide wildcard\n",
                      "markdown": "`  size_t prefixlen, suffixlen;\n  pattern_wildcard = strchr(pattern, '*');\n  if(pattern_wildcard == NULL)\n    return Curl_raw_equal(pattern, hostname) ?\n      CURL_HOST_MATCH : CURL_HOST_NOMATCH;\n\n  /* We require at least 2 dots in pattern to avoid too wide wildcard\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 53,
                  "endLine": 165,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\nstatic int hostmatch(const char *hostname, const char *pattern)\n{\n  const char *pattern_label_end, *pattern_wildcard, *hostname_label_end;\n  int wildcard_enabled;\n  size_t prefixlen, suffixlen;\n  pattern_wildcard = strchr(pattern, '*');\n",
                    "rendered": {
                      "text": "\nstatic int hostmatch(const char *hostname, const char *pattern)\n{\n  const char *pattern_label_end, *pattern_wildcard, *hostname_label_end;\n  int wildcard_enabled;\n  size_t prefixlen, suffixlen;\n  pattern_wildcard = strchr(pattern, '*');\n",
                      "markdown": "`\nstatic int hostmatch(const char *hostname, const char *pattern)\n{\n  const char *pattern_label_end, *pattern_wildcard, *hostname_label_end;\n  int wildcard_enabled;\n  size_t prefixlen, suffixlen;\n  pattern_wildcard = strchr(pattern, '*');\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/sample/hostcheck.c"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 33,
                  "endLine": 163,
                  "endColumn": 41,
                  "snippet": {
                    "text": " * http://tools.ietf.org/html/rfc6125#section-6.4.3\n */\n\nstatic int hostmatch(const char *hostname, const char *pattern)\n{\n  const char *pattern_label_end, *pattern_wildcard, *hostname_label_end;\n  int wildcard_enabled;\n",
                    "rendered": {
                      "text": " * http://tools.ietf.org/html/rfc6125#section-6.4.3\n */\n\nstatic int hostmatch(const char *hostname, const char *pattern)\n{\n  const char *pattern_label_end, *pattern_wildcard, *hostname_label_end;\n  int wildcard_enabled;\n",
                      "markdown": "` * http://tools.ietf.org/html/rfc6125#section-6.4.3\n */\n\nstatic int hostmatch(const char *hostname, const char *pattern)\n{\n  const char *pattern_label_end, *pattern_wildcard, *hostname_label_end;\n  int wildcard_enabled;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_bufferevent.c"
                },
                "region": {
                  "startLine": 1149,
                  "startColumn": 15,
                  "endLine": 1149,
                  "endColumn": 24,
                  "snippet": {
                    "text": "static void\ntrigger_readcb(struct bufferevent *bev, void *ctx)\n{\n\tstruct timeval timeout = { 30, 0 };\n\tstruct event_base *base = ctx;\n\tsize_t low, high, len;\n\tint expected_reads;\n",
                    "rendered": {
                      "text": "static void\ntrigger_readcb(struct bufferevent *bev, void *ctx)\n{\n\tstruct timeval timeout = { 30, 0 };\n\tstruct event_base *base = ctx;\n\tsize_t low, high, len;\n\tint expected_reads;\n",
                      "markdown": "`static void\ntrigger_readcb(struct bufferevent *bev, void *ctx)\n{\n\tstruct timeval timeout = { 30, 0 };\n\tstruct event_base *base = ctx;\n\tsize_t low, high, len;\n\tint expected_reads;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_bufferevent.c"
                },
                "region": {
                  "startLine": 678,
                  "startColumn": 28,
                  "endLine": 678,
                  "endColumn": 34,
                  "snippet": {
                    "text": "static int n_reads_invoked = 0;\nstatic int n_events_invoked = 0;\n\n#define TEST_STR \"Now is the time for all good events to signal for \" \\\n\t\"the good of their protocol\"\nstatic void\nlisten_cb(struct evconnlistener *listener, evutil_socket_t fd,\n",
                    "rendered": {
                      "text": "static int n_reads_invoked = 0;\nstatic int n_events_invoked = 0;\n\n#define TEST_STR \"Now is the time for all good events to signal for \" \\\n\t\"the good of their protocol\"\nstatic void\nlisten_cb(struct evconnlistener *listener, evutil_socket_t fd,\n",
                      "markdown": "`static int n_reads_invoked = 0;\nstatic int n_events_invoked = 0;\n\n#define TEST_STR \"Now is the time for all good events to signal for \" \\\n\t\"the good of their protocol\"\nstatic void\nlisten_cb(struct evconnlistener *listener, evutil_socket_t fd,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-changelist.c"
                },
                "region": {
                  "startLine": 190,
                  "endLine": 190,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\treturn (1);\n\n\t/* Initialize a timeout to terminate the test */\n\ttimeout = evtimer_new(base,timeout_cb,&timeout);\n\tif (timeout == NULL) {\n\t\tperror(\"evtimer_new\");\n\t\tgoto err;\n",
                    "rendered": {
                      "text": "\t\treturn (1);\n\n\t/* Initialize a timeout to terminate the test */\n\ttimeout = evtimer_new(base,timeout_cb,&timeout);\n\tif (timeout == NULL) {\n\t\tperror(\"evtimer_new\");\n\t\tgoto err;\n",
                      "markdown": "`\t\treturn (1);\n\n\t/* Initialize a timeout to terminate the test */\n\ttimeout = evtimer_new(base,timeout_cb,&timeout);\n\tif (timeout == NULL) {\n\t\tperror(\"evtimer_new\");\n\t\tgoto err;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-changelist.c"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 14,
                  "endLine": 165,
                  "endColumn": 23,
                  "snippet": {
                    "text": "main(int argc, char **argv)\n{\n\tstruct event* ev = NULL;\n\tstruct event* timeout = NULL;\n\tstruct event_base* base = NULL;\n\n\tevutil_socket_t pair[2] = {EVUTIL_INVALID_SOCKET, EVUTIL_INVALID_SOCKET};\n",
                    "rendered": {
                      "text": "main(int argc, char **argv)\n{\n\tstruct event* ev = NULL;\n\tstruct event* timeout = NULL;\n\tstruct event_base* base = NULL;\n\n\tevutil_socket_t pair[2] = {EVUTIL_INVALID_SOCKET, EVUTIL_INVALID_SOCKET};\n",
                      "markdown": "`main(int argc, char **argv)\n{\n\tstruct event* ev = NULL;\n\tstruct event* timeout = NULL;\n\tstruct event_base* base = NULL;\n\n\tevutil_socket_t pair[2] = {EVUTIL_INVALID_SOCKET, EVUTIL_INVALID_SOCKET};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-changelist.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 23,
                  "endLine": 156,
                  "endColumn": 29,
                  "snippet": {
                    "text": "static void\ntimeout_cb(evutil_socket_t fd, short event, void *arg)\n{\n\tprintf(\"timeout fired, time to end test\\n\");\n\tevent_del(*(struct event**)arg);\n\treturn;\n}\n",
                    "rendered": {
                      "text": "static void\ntimeout_cb(evutil_socket_t fd, short event, void *arg)\n{\n\tprintf(\"timeout fired, time to end test\\n\");\n\tevent_del(*(struct event**)arg);\n\treturn;\n}\n",
                      "markdown": "`static void\ntimeout_cb(evutil_socket_t fd, short event, void *arg)\n{\n\tprintf(\"timeout fired, time to end test\\n\");\n\tevent_del(*(struct event**)arg);\n\treturn;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-changelist.c"
                },
                "region": {
                  "startLine": 97,
                  "endLine": 97,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tdouble r;\n\ts = filetime_to_100nsec(ftStart);\n\te = filetime_to_100nsec(ftEnd);\n\tdiff = e - s;\n\tr = (double) diff;\n\treturn r / 1.0e7;\n}\n",
                    "rendered": {
                      "text": "\tdouble r;\n\ts = filetime_to_100nsec(ftStart);\n\te = filetime_to_100nsec(ftEnd);\n\tdiff = e - s;\n\tr = (double) diff;\n\treturn r / 1.0e7;\n}\n",
                      "markdown": "`\tdouble r;\n\ts = filetime_to_100nsec(ftStart);\n\te = filetime_to_100nsec(ftEnd);\n\tdiff = e - s;\n\tr = (double) diff;\n\treturn r / 1.0e7;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-ratelim.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 14,
                  "endLine": 25,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nTEST_DIR=.\n\nT=`echo \"$0\" | sed -e 's/test-ratelim.sh$//'`\nif test -x \"$T/test-ratelim\"\nthen\n\tTEST_DIR=\"$T\"\n",
                    "rendered": {
                      "text": "\nTEST_DIR=.\n\nT=`echo \"$0\" | sed -e 's/test-ratelim.sh$//'`\nif test -x \"$T/test-ratelim\"\nthen\n\tTEST_DIR=\"$T\"\n",
                      "markdown": "`\nTEST_DIR=.\n\nT=`echo \"$0\" | sed -e 's/test-ratelim.sh$//'`\nif test -x \"$T/test-ratelim\"\nthen\n\tTEST_DIR=\"$T\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Developers.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n\n*You can find my public key [on github](https://raw.githubusercontent.com/azat/azat.github.com/master/azatpub.asc)*\n\nYou may also want to check the key signatures:\n\n",
                    "rendered": {
                      "text": "$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n\n*You can find my public key [on github](https://raw.githubusercontent.com/azat/azat.github.com/master/azatpub.asc)*\n\nYou may also want to check the key signatures:\n\n",
                      "markdown": "`$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n\n*You can find my public key [on github](https://raw.githubusercontent.com/azat/azat.github.com/master/azatpub.asc)*\n\nYou may also want to check the key signatures:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Developers.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz.asc\n$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n\n",
                    "rendered": {
                      "text": "$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz.asc\n$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n\n",
                      "markdown": "`$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz.asc\n$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Developers.md"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Or\n$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz.asc\n$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n",
                    "rendered": {
                      "text": "# Or\n$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz.asc\n$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n",
                      "markdown": "`# Or\n$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz\n$ wget https://github.com/libevent/libevent/releases/download/release-2.2.1-alpha/libevent-2.2.1-alpha-dev.tar.gz.asc\n$ gpg --verify libevent-2.2.1-alpha-dev.tar.gz.asc\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Developers.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endLine": 11,
                  "endColumn": 7,
                  "snippet": {
                    "text": "`autoconf`)\n\n```\n$ wget https://raw.githubusercontent.com/azat/azat.github.com/master/azatpub.asc\n$ gpg --import azatpub.asc\n# Or\n$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n",
                    "rendered": {
                      "text": "`autoconf`)\n\n```\n$ wget https://raw.githubusercontent.com/azat/azat.github.com/master/azatpub.asc\n$ gpg --import azatpub.asc\n# Or\n$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n",
                      "markdown": "``autoconf`)\n\n```\n$ wget https://raw.githubusercontent.com/azat/azat.github.com/master/azatpub.asc\n$ gpg --import azatpub.asc\n# Or\n$ gpg --recv-key 9E3AC83A27974B84D1B3401DB86086848EF8686D\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 42,
                  "endLine": 143,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)\n        message(FATAL_ERROR \"Can not find any libraries for libevent.\")\n    else()\n        message_if_needed(WARNING \"Can not find any libraries for libevent.\")\n    endif()\nendif()\nset(LIBEVENT_INCLUDE_DIR ${LIBEVENT_INCLUDE_DIRS})\n",
                    "rendered": {
                      "text": "    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)\n        message(FATAL_ERROR \"Can not find any libraries for libevent.\")\n    else()\n        message_if_needed(WARNING \"Can not find any libraries for libevent.\")\n    endif()\nendif()\nset(LIBEVENT_INCLUDE_DIR ${LIBEVENT_INCLUDE_DIRS})\n",
                      "markdown": "`    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)\n        message(FATAL_ERROR \"Can not find any libraries for libevent.\")\n    else()\n        message_if_needed(WARNING \"Can not find any libraries for libevent.\")\n    endif()\nendif()\nset(LIBEVENT_INCLUDE_DIR ${LIBEVENT_INCLUDE_DIRS})\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 36,
                  "endLine": 141,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    message_if_needed(STATUS \"Found libevent ${LIBEVENT_VERSION} in ${LIBEVENT_INSTALL_PREFIX}\")\nelse()\n    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)\n        message(FATAL_ERROR \"Can not find any libraries for libevent.\")\n    else()\n        message_if_needed(WARNING \"Can not find any libraries for libevent.\")\n    endif()\n",
                    "rendered": {
                      "text": "    message_if_needed(STATUS \"Found libevent ${LIBEVENT_VERSION} in ${LIBEVENT_INSTALL_PREFIX}\")\nelse()\n    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)\n        message(FATAL_ERROR \"Can not find any libraries for libevent.\")\n    else()\n        message_if_needed(WARNING \"Can not find any libraries for libevent.\")\n    endif()\n",
                      "markdown": "`    message_if_needed(STATUS \"Found libevent ${LIBEVENT_VERSION} in ${LIBEVENT_INSTALL_PREFIX}\")\nelse()\n    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED)\n        message(FATAL_ERROR \"Can not find any libraries for libevent.\")\n    else()\n        message_if_needed(WARNING \"Can not find any libraries for libevent.\")\n    endif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 67,
                  "endLine": 86,
                  "endColumn": 76,
                  "snippet": {
                    "text": "            set(pthreadlib \", pthreads\")\n        endif()\n        message(FATAL_ERROR \"Your libevent library does not contain a ${_comp} component!\\n\"\n                \"The valid components are core, extra${pthreadlib}, openssl and mbedtls.\")\n    else()\n        message_if_needed(WARNING \"Your libevent library does not contain a ${_comp} component!\")\n    endif()\n",
                    "rendered": {
                      "text": "            set(pthreadlib \", pthreads\")\n        endif()\n        message(FATAL_ERROR \"Your libevent library does not contain a ${_comp} component!\\n\"\n                \"The valid components are core, extra${pthreadlib}, openssl and mbedtls.\")\n    else()\n        message_if_needed(WARNING \"Your libevent library does not contain a ${_comp} component!\")\n    endif()\n",
                      "markdown": "`            set(pthreadlib \", pthreads\")\n        endif()\n        message(FATAL_ERROR \"Your libevent library does not contain a ${_comp} component!\\n\"\n                \"The valid components are core, extra${pthreadlib}, openssl and mbedtls.\")\n    else()\n        message_if_needed(WARNING \"Your libevent library does not contain a ${_comp} component!\")\n    endif()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 36,
                  "endLine": 63,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    set(_LIB_TYPE static)\n    set(_AVAILABLE_LIBS \"${LIBEVENT_STATIC_LIBRARIES}\")\n\n    # CMake before 3.15 doesn't link OpenSSL to pthread/dl, do it ourselves instead\n    if (${CMAKE_VERSION} VERSION_LESS \"3.15.0\" AND \"${LIBEVENT_STATIC_LINK}\" AND \"${OPENSSL_FOUND}\" AND \"${Threads_FOUND}\")\n        set_property(TARGET OpenSSL::Crypto APPEND PROPERTY INTERFACE_LINK_LIBRARIES Threads::Threads)\n        set_property(TARGET OpenSSL::Crypto APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${CMAKE_DL_LIBS})\n",
                    "rendered": {
                      "text": "    set(_LIB_TYPE static)\n    set(_AVAILABLE_LIBS \"${LIBEVENT_STATIC_LIBRARIES}\")\n\n    # CMake before 3.15 doesn't link OpenSSL to pthread/dl, do it ourselves instead\n    if (${CMAKE_VERSION} VERSION_LESS \"3.15.0\" AND \"${LIBEVENT_STATIC_LINK}\" AND \"${OPENSSL_FOUND}\" AND \"${Threads_FOUND}\")\n        set_property(TARGET OpenSSL::Crypto APPEND PROPERTY INTERFACE_LINK_LIBRARIES Threads::Threads)\n        set_property(TARGET OpenSSL::Crypto APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${CMAKE_DL_LIBS})\n",
                      "markdown": "`    set(_LIB_TYPE static)\n    set(_AVAILABLE_LIBS \"${LIBEVENT_STATIC_LIBRARIES}\")\n\n    # CMake before 3.15 doesn't link OpenSSL to pthread/dl, do it ourselves instead\n    if (${CMAKE_VERSION} VERSION_LESS \"3.15.0\" AND \"${LIBEVENT_STATIC_LINK}\" AND \"${OPENSSL_FOUND}\" AND \"${Threads_FOUND}\")\n        set_property(TARGET OpenSSL::Crypto APPEND PROPERTY INTERFACE_LINK_LIBRARIES Threads::Threads)\n        set_property(TARGET OpenSSL::Crypto APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${CMAKE_DL_LIBS})\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 56,
                  "endLine": 34,
                  "endColumn": 65,
                  "snippet": {
                    "text": "#    or target_link_libraries(myapp libevent::core)\n#\n# find_package() can handle dependencies automatically. For example, given the 'openssl' component,\n# all dependencies (libevent_core, libssl, libcrypto and openssl include directories) will be found.\n\nset(LIBEVENT_VERSION @EVENT_PACKAGE_VERSION@)\n\n",
                    "rendered": {
                      "text": "#    or target_link_libraries(myapp libevent::core)\n#\n# find_package() can handle dependencies automatically. For example, given the 'openssl' component,\n# all dependencies (libevent_core, libssl, libcrypto and openssl include directories) will be found.\n\nset(LIBEVENT_VERSION @EVENT_PACKAGE_VERSION@)\n\n",
                      "markdown": "`#    or target_link_libraries(myapp libevent::core)\n#\n# find_package() can handle dependencies automatically. For example, given the 'openssl' component,\n# all dependencies (libevent_core, libssl, libcrypto and openssl include directories) will be found.\n\nset(LIBEVENT_VERSION @EVENT_PACKAGE_VERSION@)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 64,
                  "endLine": 23,
                  "endColumn": 70,
                  "snippet": {
                    "text": "#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n# you must set the LIBEVENT_STATIC_LINK variable to TRUE before calling find_package(Libevent ...).\n# If no component provided, all components will be used.\n# example:\n",
                    "rendered": {
                      "text": "#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n# you must set the LIBEVENT_STATIC_LINK variable to TRUE before calling find_package(Libevent ...).\n# If no component provided, all components will be used.\n# example:\n",
                      "markdown": "`#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n# you must set the LIBEVENT_STATIC_LINK variable to TRUE before calling find_package(Libevent ...).\n# If no component provided, all components will be used.\n# example:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 16,
                  "endLine": 20,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#  core        - the core functions of libevent\n#  extra       - extra functions, contains http, dns and rpc\n#  pthreads    - multiple threads for libevent, does not exist on Windows\n#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n",
                    "rendered": {
                      "text": "#  core        - the core functions of libevent\n#  extra       - extra functions, contains http, dns and rpc\n#  pthreads    - multiple threads for libevent, does not exist on Windows\n#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n",
                      "markdown": "`#  core        - the core functions of libevent\n#  extra       - extra functions, contains http, dns and rpc\n#  pthreads    - multiple threads for libevent, does not exist on Windows\n#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/LibeventConfig.cmake.in"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 2,
                  "endLine": 20,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#  core        - the core functions of libevent\n#  extra       - extra functions, contains http, dns and rpc\n#  pthreads    - multiple threads for libevent, does not exist on Windows\n#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n",
                    "rendered": {
                      "text": "#  core        - the core functions of libevent\n#  extra       - extra functions, contains http, dns and rpc\n#  pthreads    - multiple threads for libevent, does not exist on Windows\n#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n",
                      "markdown": "`#  core        - the core functions of libevent\n#  extra       - extra functions, contains http, dns and rpc\n#  pthreads    - multiple threads for libevent, does not exist on Windows\n#  openssl     - OpenSSL support for libevent\n#  mbedtls     - MbedTLS support for libevent\n#\n# By default, the shared libraries of libevent will be found. To find the static ones instead,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/Uninstall.cmake.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 29,
                  "endLine": 4,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake\n\nif(NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n  message(FATAL_ERROR \"Cannot find install manifest: @CMAKE_BINARY_DIR@/install_manifest.txt\")\nendif(NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n\nfile(READ \"@CMAKE_BINARY_DIR@/install_manifest.txt\" files)\n",
                    "rendered": {
                      "text": "# https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake\n\nif(NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n  message(FATAL_ERROR \"Cannot find install manifest: @CMAKE_BINARY_DIR@/install_manifest.txt\")\nendif(NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n\nfile(READ \"@CMAKE_BINARY_DIR@/install_manifest.txt\" files)\n",
                      "markdown": "`# https://gitlab.kitware.com/cmake/community/wikis/FAQ#can-i-do-make-uninstall-with-cmake\n\nif(NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n  message(FATAL_ERROR \"Cannot find install manifest: @CMAKE_BINARY_DIR@/install_manifest.txt\")\nendif(NOT EXISTS \"@CMAKE_BINARY_DIR@/install_manifest.txt\")\n\nfile(READ \"@CMAKE_BINARY_DIR@/install_manifest.txt\" files)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/cmake/CheckPrototypeDefinition.cmake"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 28,
                  "endLine": 1,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# - Check if the protoype we expect is correct.\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n#\n#  FUNCTION - The name of the function (used to check if prototype exists)\n",
                    "rendered": {
                      "text": "# - Check if the protoype we expect is correct.\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n#\n#  FUNCTION - The name of the function (used to check if prototype exists)\n",
                      "markdown": "`# - Check if the protoype we expect is correct.\n# check_prototype_definition(FUNCTION PROTOTYPE RETURN HEADER VARIABLE)\n#\n#  FUNCTION - The name of the function (used to check if prototype exists)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1091,
                  "startColumn": 14,
                  "endLine": 1092,
                  "snippet": {
                    "text": "      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                    "rendered": {
                      "text": "      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                      "markdown": "`      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1060,
                  "startColumn": 14,
                  "endLine": 1061,
                  "snippet": {
                    "text": "          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS\n",
                    "rendered": {
                      "text": "          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS\n",
                      "markdown": "`          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1059,
                  "startColumn": 13,
                  "endLine": 1060,
                  "snippet": {
                    "text": "          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n",
                    "rendered": {
                      "text": "          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n",
                      "markdown": "`          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 14,
                  "endLine": 1019,
                  "snippet": {
                    "text": "          xcode-version: latest-stable\n\n      - name: Build\n        shell: bash\n        run: |\n          CMAKE_OSX_SYSROOT=\"${{ matrix.EVENT_MATRIX }}\"\n\n          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT\n",
                    "rendered": {
                      "text": "          xcode-version: latest-stable\n\n      - name: Build\n        shell: bash\n        run: |\n          CMAKE_OSX_SYSROOT=\"${{ matrix.EVENT_MATRIX }}\"\n\n          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT\n",
                      "markdown": "`          xcode-version: latest-stable\n\n      - name: Build\n        shell: bash\n        run: |\n          CMAKE_OSX_SYSROOT=\"${{ matrix.EVENT_MATRIX }}\"\n\n          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 973,
                  "startColumn": 16,
                  "endLine": 974,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 16,
                  "endLine": 908,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 813,
                  "startColumn": 16,
                  "endLine": 814,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 16,
                  "endLine": 752,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 16,
                  "endLine": 669,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            cd build\n            make -j $JOBS verify\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            cd build\n            make -j $JOBS verify\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            cd build\n            make -j $JOBS verify\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 14,
                  "endLine": 652,
                  "snippet": {
                    "text": "        run: brew install autoconf automake libtool pkg-config mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          export CPPFLAGS=\"-I`brew --prefix mbedtls@2`/include\"\n          export  LDFLAGS=\"-L`brew --prefix mbedtls@2`/lib\"\n\n",
                    "rendered": {
                      "text": "        run: brew install autoconf automake libtool pkg-config mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          export CPPFLAGS=\"-I`brew --prefix mbedtls@2`/include\"\n          export  LDFLAGS=\"-L`brew --prefix mbedtls@2`/lib\"\n\n",
                      "markdown": "`        run: brew install autoconf automake libtool pkg-config mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          export CPPFLAGS=\"-I`brew --prefix mbedtls@2`/include\"\n          export  LDFLAGS=\"-L`brew --prefix mbedtls@2`/lib\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 16,
                  "endLine": 608,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 14,
                  "endLine": 569,
                  "snippet": {
                    "text": "        run: brew install mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DISABLE_OPENSSL\" ]; then\n            EVENT_CMAKE_OPTIONS=\"-DEVENT__DISABLE_OPENSSL=ON\"\n\n",
                    "rendered": {
                      "text": "        run: brew install mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DISABLE_OPENSSL\" ]; then\n            EVENT_CMAKE_OPTIONS=\"-DEVENT__DISABLE_OPENSSL=ON\"\n\n",
                      "markdown": "`        run: brew install mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DISABLE_OPENSSL\" ]; then\n            EVENT_CMAKE_OPTIONS=\"-DEVENT__DISABLE_OPENSSL=ON\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 16,
                  "endLine": 226,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n\n            cd dist\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n\n            cd dist\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n\n            cd dist\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 14,
                  "endLine": 201,
                  "snippet": {
                    "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          ./autogen.sh\n\n          # dist archive\n",
                    "rendered": {
                      "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          ./autogen.sh\n\n          # dist archive\n",
                      "markdown": "`          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          ./autogen.sh\n\n          # dist archive\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 22,
                  "endLine": 197,
                  "snippet": {
                    "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                    "rendered": {
                      "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                      "markdown": "`\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 16,
                  "endLine": 137,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 14,
                  "endLine": 83,
                  "snippet": {
                    "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DIST\" ]; then\n            ./autogen.sh\n            mkdir -p dist\n",
                    "rendered": {
                      "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DIST\" ]; then\n            ./autogen.sh\n            mkdir -p dist\n",
                      "markdown": "`          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DIST\" ]; then\n            ./autogen.sh\n            mkdir -p dist\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 22,
                  "endLine": 79,
                  "snippet": {
                    "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                    "rendered": {
                      "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                      "markdown": "`\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1091,
                  "startColumn": 14,
                  "endLine": 1092,
                  "snippet": {
                    "text": "      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                    "rendered": {
                      "text": "      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                      "markdown": "`      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1087,
                  "startColumn": 20,
                  "endLine": 1087,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            abi-compliance-checker\n            pkgdiff\n            vtable-dumper\n      # FIXME: clone git repo or report to debian\n      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n",
                    "rendered": {
                      "text": "            abi-compliance-checker\n            pkgdiff\n            vtable-dumper\n      # FIXME: clone git repo or report to debian\n      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n",
                      "markdown": "`            abi-compliance-checker\n            pkgdiff\n            vtable-dumper\n      # FIXME: clone git repo or report to debian\n      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n      - name: Generate\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1080,
                  "startColumn": 14,
                  "endLine": 1080,
                  "endColumn": 19,
                  "snippet": {
                    "text": "          persist-credentials: false\n      - name: Install Dependencies\n        run:\n          sudo apt install\n            abi-tracker\n            abi-monitor\n            abi-dumper\n",
                    "rendered": {
                      "text": "          persist-credentials: false\n      - name: Install Dependencies\n        run:\n          sudo apt install\n            abi-tracker\n            abi-monitor\n            abi-dumper\n",
                      "markdown": "`          persist-credentials: false\n      - name: Install Dependencies\n        run:\n          sudo apt install\n            abi-tracker\n            abi-monitor\n            abi-dumper\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1060,
                  "startColumn": 14,
                  "endLine": 1061,
                  "snippet": {
                    "text": "          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS\n",
                    "rendered": {
                      "text": "          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS\n",
                      "markdown": "`          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n          echo [cmake]: cmake -B build $EVENT_CMAKE_FLAGS\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1059,
                  "startColumn": 13,
                  "endLine": 1060,
                  "snippet": {
                    "text": "          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n",
                    "rendered": {
                      "text": "          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n",
                      "markdown": "`          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n        run: |\n          NDK_TRIPLE=\"${{ matrix.EVENT_MATRIX }}\"\n          EVENT_CMAKE_OPTIONS=\"'-DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake' '-DCMAKE_HOST_SYSTEM_NAME=$NDK_TRIPLE'\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1057,
                  "startColumn": 71,
                  "endLine": 1057,
                  "endColumn": 76,
                  "snippet": {
                    "text": "          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n",
                    "rendered": {
                      "text": "          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n",
                      "markdown": "`          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n\n      - name: Bash\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 76,
                  "endLine": 1054,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n",
                    "rendered": {
                      "text": "\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n",
                      "markdown": "`\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 66,
                  "endLine": 1054,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n",
                    "rendered": {
                      "text": "\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n",
                      "markdown": "`\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 42,
                  "endLine": 1054,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n",
                    "rendered": {
                      "text": "\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n",
                      "markdown": "`\n      - name: Install latest NDK\n        run: |\n          latest_ndk=$(sdkmanager --list | grep -o \"ndk;[0-9.]*\" | sort -V | tail -1)\n          echo \"Installing $latest_ndk\"\n          sdkmanager \"$latest_ndk\"\n          echo \"ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$(echo $latest_ndk | cut -d';' -f2)\" >> $GITHUB_ENV\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 14,
                  "endLine": 1019,
                  "snippet": {
                    "text": "          xcode-version: latest-stable\n\n      - name: Build\n        shell: bash\n        run: |\n          CMAKE_OSX_SYSROOT=\"${{ matrix.EVENT_MATRIX }}\"\n\n          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT\n",
                    "rendered": {
                      "text": "          xcode-version: latest-stable\n\n      - name: Build\n        shell: bash\n        run: |\n          CMAKE_OSX_SYSROOT=\"${{ matrix.EVENT_MATRIX }}\"\n\n          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT\n",
                      "markdown": "`          xcode-version: latest-stable\n\n      - name: Build\n        shell: bash\n        run: |\n          CMAKE_OSX_SYSROOT=\"${{ matrix.EVENT_MATRIX }}\"\n\n          echo [cmake]: cmake -B build -G Xcode -D CMAKE_OSX_SYSROOT=$CMAKE_OSX_SYSROOT\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 975,
                  "startColumn": 11,
                  "endLine": 975,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                    "rendered": {
                      "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                      "markdown": "`          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 973,
                  "startColumn": 16,
                  "endLine": 974,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 909,
                  "startColumn": 11,
                  "endLine": 909,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                    "rendered": {
                      "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                      "markdown": "`          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 16,
                  "endLine": 908,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh openbsd sh <<EOF\n            ulimit -n 102400\n            cd $GITHUB_WORKSPACE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 11,
                  "endLine": 815,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n            cd build\n",
                    "rendered": {
                      "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n            cd build\n",
                      "markdown": "`          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n            cd build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 813,
                  "startColumn": 16,
                  "endLine": 814,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 11,
                  "endLine": 753,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n",
                    "rendered": {
                      "text": "          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n",
                      "markdown": "`          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 16,
                  "endLine": 752,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            ssh freebsd sh <<EOF\n            cd $GITHUB_WORKSPACE\n            JOBS=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 16,
                  "endLine": 669,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            cd build\n            make -j $JOBS verify\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            cd build\n            make -j $JOBS verify\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            cd build\n            make -j $JOBS verify\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 14,
                  "endLine": 652,
                  "snippet": {
                    "text": "        run: brew install autoconf automake libtool pkg-config mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          export CPPFLAGS=\"-I`brew --prefix mbedtls@2`/include\"\n          export  LDFLAGS=\"-L`brew --prefix mbedtls@2`/lib\"\n\n",
                    "rendered": {
                      "text": "        run: brew install autoconf automake libtool pkg-config mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          export CPPFLAGS=\"-I`brew --prefix mbedtls@2`/include\"\n          export  LDFLAGS=\"-L`brew --prefix mbedtls@2`/lib\"\n\n",
                      "markdown": "`        run: brew install autoconf automake libtool pkg-config mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          export CPPFLAGS=\"-I`brew --prefix mbedtls@2`/include\"\n          export  LDFLAGS=\"-L`brew --prefix mbedtls@2`/lib\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 16,
                  "endLine": 608,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=1\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 14,
                  "endLine": 569,
                  "snippet": {
                    "text": "        run: brew install mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DISABLE_OPENSSL\" ]; then\n            EVENT_CMAKE_OPTIONS=\"-DEVENT__DISABLE_OPENSSL=ON\"\n\n",
                    "rendered": {
                      "text": "        run: brew install mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DISABLE_OPENSSL\" ]; then\n            EVENT_CMAKE_OPTIONS=\"-DEVENT__DISABLE_OPENSSL=ON\"\n\n",
                      "markdown": "`        run: brew install mbedtls@2\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DISABLE_OPENSSL\" ]; then\n            EVENT_CMAKE_OPTIONS=\"-DEVENT__DISABLE_OPENSSL=ON\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 24,
                  "endLine": 273,
                  "endColumn": 32,
                  "snippet": {
                    "text": "          key: ${{ matrix.os }}-${{ matrix.EVENT_MATRIX }}-v4\n\n      - name: Prepare vcpkg\n        # Newer versions expect a vcpkg manifest, so stick to v7, that could handle vcpkgArguments\n        uses: lukka/run-vcpkg@v7\n        id: runvcpkg\n        with:\n",
                    "rendered": {
                      "text": "          key: ${{ matrix.os }}-${{ matrix.EVENT_MATRIX }}-v4\n\n      - name: Prepare vcpkg\n        # Newer versions expect a vcpkg manifest, so stick to v7, that could handle vcpkgArguments\n        uses: lukka/run-vcpkg@v7\n        id: runvcpkg\n        with:\n",
                      "markdown": "`          key: ${{ matrix.os }}-${{ matrix.EVENT_MATRIX }}-v4\n\n      - name: Prepare vcpkg\n        # Newer versions expect a vcpkg manifest, so stick to v7, that could handle vcpkgArguments\n        uses: lukka/run-vcpkg@v7\n        id: runvcpkg\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 16,
                  "endLine": 226,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n\n            cd dist\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n\n            cd dist\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n\n            cd dist\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 9,
                  "endLine": 211,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          ../configure\n          make dist\n          archive=$(echo *.tar.gz)\n          tar -vxf $archive\n          cd $(basename $archive .tar.gz)\n          # \\dist archive\n\n",
                    "rendered": {
                      "text": "          ../configure\n          make dist\n          archive=$(echo *.tar.gz)\n          tar -vxf $archive\n          cd $(basename $archive .tar.gz)\n          # \\dist archive\n\n",
                      "markdown": "`          ../configure\n          make dist\n          archive=$(echo *.tar.gz)\n          tar -vxf $archive\n          cd $(basename $archive .tar.gz)\n          # \\dist archive\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 14,
                  "endLine": 201,
                  "snippet": {
                    "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          ./autogen.sh\n\n          # dist archive\n",
                    "rendered": {
                      "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          ./autogen.sh\n\n          # dist archive\n",
                      "markdown": "`          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          ./autogen.sh\n\n          # dist archive\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 14,
                  "endLine": 197,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                    "rendered": {
                      "text": "      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                      "markdown": "`      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 14,
                  "endLine": 196,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n",
                    "rendered": {
                      "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n",
                      "markdown": "`\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 11,
                  "endLine": 181,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      matrix:\n        os: [ubuntu-20.04]\n        include:\n          # openssl 3.0\n          - os: ubuntu-22.04\n\n    steps:\n",
                    "rendered": {
                      "text": "      matrix:\n        os: [ubuntu-20.04]\n        include:\n          # openssl 3.0\n          - os: ubuntu-22.04\n\n    steps:\n",
                      "markdown": "`      matrix:\n        os: [ubuntu-20.04]\n        include:\n          # openssl 3.0\n          - os: ubuntu-22.04\n\n    steps:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 16,
                  "endLine": 137,
                  "snippet": {
                    "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                    "rendered": {
                      "text": "        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n",
                      "markdown": "`        with:\n          max_attempts: 5\n          timeout_minutes: 60\n          shell: bash\n          command: |\n            JOBS=20\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 11,
                  "endLine": 92,
                  "endColumn": 16,
                  "snippet": {
                    "text": "            rm -fr *.tar.gz\n            make dist\n            archive=$(echo *.tar.gz)\n            tar -vxf $archive\n            cd $(basename $archive .tar.gz)\n          fi\n\n",
                    "rendered": {
                      "text": "            rm -fr *.tar.gz\n            make dist\n            archive=$(echo *.tar.gz)\n            tar -vxf $archive\n            cd $(basename $archive .tar.gz)\n          fi\n\n",
                      "markdown": "`            rm -fr *.tar.gz\n            make dist\n            archive=$(echo *.tar.gz)\n            tar -vxf $archive\n            cd $(basename $archive .tar.gz)\n          fi\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 14,
                  "endLine": 83,
                  "snippet": {
                    "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DIST\" ]; then\n            ./autogen.sh\n            mkdir -p dist\n",
                    "rendered": {
                      "text": "          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DIST\" ]; then\n            ./autogen.sh\n            mkdir -p dist\n",
                      "markdown": "`          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n          if [ \"${{ matrix.EVENT_MATRIX }}\" == \"DIST\" ]; then\n            ./autogen.sh\n            mkdir -p dist\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 14,
                  "endLine": 79,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                    "rendered": {
                      "text": "      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                      "markdown": "`      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 14,
                  "endLine": 78,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n",
                    "rendered": {
                      "text": "\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n",
                      "markdown": "`\n      - name: Install Depends\n        run: |\n          sudo apt-get update\n          sudo apt-get install -y libmbedtls-dev\n\n      - name: Build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 38,
                  "endLine": 165,
                  "endColumn": 42,
                  "snippet": {
                    "text": "          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n",
                    "rendered": {
                      "text": "          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n",
                      "markdown": "`          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 22,
                  "endLine": 164,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                    "rendered": {
                      "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                      "markdown": "`\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 42,
                  "endLine": 163,
                  "endColumn": 46,
                  "snippet": {
                    "text": "          [[ -n $LIBEVENT_DEPLOY_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n",
                    "rendered": {
                      "text": "          [[ -n $LIBEVENT_DEPLOY_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n",
                      "markdown": "`          [[ -n $LIBEVENT_DEPLOY_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 21,
                  "endLine": 162,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        run: |\n          [[ -n $LIBEVENT_DEPLOY_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n",
                    "rendered": {
                      "text": "        run: |\n          [[ -n $LIBEVENT_DEPLOY_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n",
                      "markdown": "`        run: |\n          [[ -n $LIBEVENT_DEPLOY_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 38,
                  "endLine": 108,
                  "endColumn": 42,
                  "snippet": {
                    "text": "          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n",
                    "rendered": {
                      "text": "          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n",
                      "markdown": "`          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 22,
                  "endLine": 107,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                    "rendered": {
                      "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                      "markdown": "`\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 46,
                  "endLine": 106,
                  "endColumn": 50,
                  "snippet": {
                    "text": "          [[ -n $LIBEVENT_DEPLOY_ABI_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n",
                    "rendered": {
                      "text": "          [[ -n $LIBEVENT_DEPLOY_ABI_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n",
                      "markdown": "`          [[ -n $LIBEVENT_DEPLOY_ABI_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 21,
                  "endLine": 105,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        run: |\n          [[ -n $LIBEVENT_DEPLOY_ABI_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n",
                    "rendered": {
                      "text": "        run: |\n          [[ -n $LIBEVENT_DEPLOY_ABI_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n",
                      "markdown": "`        run: |\n          [[ -n $LIBEVENT_DEPLOY_ABI_PRI ]] || exit 0\n\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 14,
                  "endLine": 148,
                  "snippet": {
                    "text": "          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n        run: |\n          mkdir build\n          cd build\n          cmake -DEVENT__DOXYGEN=ON -DEVENT__DISABLE_OPENSSL=OFF ..\n",
                    "rendered": {
                      "text": "          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n        run: |\n          mkdir build\n          cd build\n          cmake -DEVENT__DOXYGEN=ON -DEVENT__DISABLE_OPENSSL=OFF ..\n",
                      "markdown": "`          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n        run: |\n          mkdir build\n          cd build\n          cmake -DEVENT__DOXYGEN=ON -DEVENT__DISABLE_OPENSSL=OFF ..\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 14,
                  "endLine": 92,
                  "snippet": {
                    "text": "        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                    "rendered": {
                      "text": "        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                      "markdown": "`        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 41,
                  "snippet": {
                    "text": "            make -j $JOBS\n\n      - name: Test\n        shell: bash\n        run: |\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n            cd build\n",
                    "rendered": {
                      "text": "            make -j $JOBS\n\n      - name: Test\n        shell: bash\n        run: |\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n            cd build\n",
                      "markdown": "`            make -j $JOBS\n\n      - name: Test\n        shell: bash\n        run: |\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n            cd build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "endLine": 32,
                  "snippet": {
                    "text": "        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n            export JOBS=20\n            mkdir -p build\n            cd build\n",
                    "rendered": {
                      "text": "        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n            export JOBS=20\n            mkdir -p build\n            cd build\n",
                      "markdown": "`        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n            export JOBS=20\n            mkdir -p build\n            cd build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 9,
                  "endLine": 175,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n        if: failure()\n",
                    "rendered": {
                      "text": "          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n        if: failure()\n",
                      "markdown": "`          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n        if: failure()\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 9,
                  "endLine": 174,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n",
                    "rendered": {
                      "text": "          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n",
                      "markdown": "`          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 9,
                  "endLine": 173,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n",
                    "rendered": {
                      "text": "          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n",
                      "markdown": "`          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 9,
                  "endLine": 172,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n",
                    "rendered": {
                      "text": "          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n",
                      "markdown": "`          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/doc master\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 9,
                  "endLine": 171,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n",
                    "rendered": {
                      "text": "\n          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n",
                      "markdown": "`\n          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update documentation (libevent/libevent@$short_commit_id)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 9,
                  "endLine": 170,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n",
                    "rendered": {
                      "text": "          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n",
                      "markdown": "`          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n          cd ./build/doxygen/html\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 9,
                  "endLine": 164,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                    "rendered": {
                      "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                      "markdown": "`\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 14,
                  "endLine": 148,
                  "snippet": {
                    "text": "          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n        run: |\n          mkdir build\n          cd build\n          cmake -DEVENT__DOXYGEN=ON -DEVENT__DISABLE_OPENSSL=OFF ..\n",
                    "rendered": {
                      "text": "          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n        run: |\n          mkdir build\n          cd build\n          cmake -DEVENT__DOXYGEN=ON -DEVENT__DISABLE_OPENSSL=OFF ..\n",
                      "markdown": "`          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n        run: |\n          mkdir build\n          cd build\n          cmake -DEVENT__DOXYGEN=ON -DEVENT__DISABLE_OPENSSL=OFF ..\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 14,
                  "endLine": 144,
                  "endColumn": 19,
                  "snippet": {
                    "text": "          persist-credentials: false\n      - name: Install Depends\n        run: |\n          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n",
                    "rendered": {
                      "text": "          persist-credentials: false\n      - name: Install Depends\n        run: |\n          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n",
                      "markdown": "`          persist-credentials: false\n      - name: Install Depends\n        run: |\n          sudo apt install doxygen libmbedtls-dev\n\n      - name: Generate Doxygen\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 35,
                  "endLine": 133,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n  doxygen-job:\n    permissions:\n      contents: write  # for Git to git push\n    runs-on: ubuntu-20.04\n    strategy:\n      fail-fast: false\n",
                    "rendered": {
                      "text": "\n  doxygen-job:\n    permissions:\n      contents: write  # for Git to git push\n    runs-on: ubuntu-20.04\n    strategy:\n      fail-fast: false\n",
                      "markdown": "`\n  doxygen-job:\n    permissions:\n      contents: write  # for Git to git push\n    runs-on: ubuntu-20.04\n    strategy:\n      fail-fast: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 28,
                  "endLine": 133,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n  doxygen-job:\n    permissions:\n      contents: write  # for Git to git push\n    runs-on: ubuntu-20.04\n    strategy:\n      fail-fast: false\n",
                    "rendered": {
                      "text": "\n  doxygen-job:\n    permissions:\n      contents: write  # for Git to git push\n    runs-on: ubuntu-20.04\n    strategy:\n      fail-fast: false\n",
                      "markdown": "`\n  doxygen-job:\n    permissions:\n      contents: write  # for Git to git push\n    runs-on: ubuntu-20.04\n    strategy:\n      fail-fast: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 38,
                  "endLine": 121,
                  "snippet": {
                    "text": "          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n        if: failure()\n        with:\n          name: build\n",
                    "rendered": {
                      "text": "          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n        if: failure()\n        with:\n          name: build\n",
                      "markdown": "`          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n        if: failure()\n        with:\n          name: build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 9,
                  "endLine": 118,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n",
                    "rendered": {
                      "text": "          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n",
                      "markdown": "`          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n      - uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 9,
                  "endLine": 117,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n",
                    "rendered": {
                      "text": "          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n",
                      "markdown": "`          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n      # XXX: requires container-id for docker\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 9,
                  "endLine": 116,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n",
                    "rendered": {
                      "text": "          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n",
                      "markdown": "`          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 9,
                  "endLine": 115,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n",
                    "rendered": {
                      "text": "          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n",
                      "markdown": "`          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n          git push -f git@github.com:\"$OWNER_NAME\"/abi master\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 9,
                  "endLine": 114,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n",
                    "rendered": {
                      "text": "\n          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n",
                      "markdown": "`\n          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n          git commit -m \"Update ABI/API backward compatibility report (libevent/libevent@$short_commit_id)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 9,
                  "endLine": 113,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n",
                    "rendered": {
                      "text": "          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n",
                      "markdown": "`          short_commit_id=\"${COMMIT_ID:0:7}\"\n\n          cd /tmp/le-abi-root/work/abi-check\n          git init\n          git config --local user.name \"Libevent Github Robot\"\n          git config --local user.email \"robot@libevent.org\"\n          git add -f .\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 9,
                  "endLine": 107,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                    "rendered": {
                      "text": "\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n",
                      "markdown": "`\n          mkdir -p ~/.ssh\n          echo \"$LIBEVENT_DEPLOY_ABI_PRI\" > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n          short_commit_id=\"${COMMIT_ID:0:7}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 14,
                  "endLine": 92,
                  "snippet": {
                    "text": "        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                    "rendered": {
                      "text": "        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n",
                      "markdown": "`        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n      - name: Generate\n        shell: bash\n        run: |\n          ./extra/abi-check/abi_check.sh\n        env:\n          ABI_CHECK_ROOT: /tmp/le-abi-root\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 20,
                  "endLine": 86,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            pkgdiff\n            vtable-dumper\n\n      # FIXME: clone git repo or report to debian\n      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n",
                    "rendered": {
                      "text": "            pkgdiff\n            vtable-dumper\n\n      # FIXME: clone git repo or report to debian\n      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n",
                      "markdown": "`            pkgdiff\n            vtable-dumper\n\n      # FIXME: clone git repo or report to debian\n      - name: Patch abi-compliance-checker to avoid endless loop\n        run: sudo patch /usr/bin/abi-compliance-checker < extra/abi-check/debian.patch\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 14,
                  "endLine": 78,
                  "endColumn": 19,
                  "snippet": {
                    "text": "          persist-credentials: false\n      - name: Install Dependencies\n        run:\n          sudo apt install\n            abi-tracker\n            abi-monitor\n            abi-dumper\n",
                    "rendered": {
                      "text": "          persist-credentials: false\n      - name: Install Dependencies\n        run:\n          sudo apt install\n            abi-tracker\n            abi-monitor\n            abi-dumper\n",
                      "markdown": "`          persist-credentials: false\n      - name: Install Dependencies\n        run:\n          sudo apt install\n            abi-tracker\n            abi-monitor\n            abi-dumper\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 16,
                  "endLine": 65,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n    runs-on: ubuntu-22.04\n    ## TODO: use docker image, but for now this is not possible without hacks\n    ## due to even public registry require some authentication:\n    ## - https://github.com/orgs/community/discussions/25689\n    #container: docker.pkg.github.com/azat/docker-images/lvc-debian\n",
                    "rendered": {
                      "text": "    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n    runs-on: ubuntu-22.04\n    ## TODO: use docker image, but for now this is not possible without hacks\n    ## due to even public registry require some authentication:\n    ## - https://github.com/orgs/community/discussions/25689\n    #container: docker.pkg.github.com/azat/docker-images/lvc-debian\n",
                      "markdown": "`    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n    runs-on: ubuntu-22.04\n    ## TODO: use docker image, but for now this is not possible without hacks\n    ## due to even public registry require some authentication:\n    ## - https://github.com/orgs/community/discussions/25689\n    #container: docker.pkg.github.com/azat/docker-images/lvc-debian\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 34,
                  "endLine": 60,
                  "endColumn": 39,
                  "snippet": {
                    "text": "          path: build\n  abi-job:\n    permissions:\n      contents: write # for Git to git push\n    # ABI check is broken [1].\n    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n",
                    "rendered": {
                      "text": "          path: build\n  abi-job:\n    permissions:\n      contents: write # for Git to git push\n    # ABI check is broken [1].\n    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n",
                      "markdown": "`          path: build\n  abi-job:\n    permissions:\n      contents: write # for Git to git push\n    # ABI check is broken [1].\n    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 27,
                  "endLine": 60,
                  "endColumn": 32,
                  "snippet": {
                    "text": "          path: build\n  abi-job:\n    permissions:\n      contents: write # for Git to git push\n    # ABI check is broken [1].\n    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n",
                    "rendered": {
                      "text": "          path: build\n  abi-job:\n    permissions:\n      contents: write # for Git to git push\n    # ABI check is broken [1].\n    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n",
                      "markdown": "`          path: build\n  abi-job:\n    permissions:\n      contents: write # for Git to git push\n    # ABI check is broken [1].\n    #   [1]: https://github.com/libevent/libevent/issues/1463\n    if: \"false\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 41,
                  "snippet": {
                    "text": "            make -j $JOBS\n\n      - name: Test\n        shell: bash\n        run: |\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n            cd build\n",
                    "rendered": {
                      "text": "            make -j $JOBS\n\n      - name: Test\n        shell: bash\n        run: |\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n            cd build\n",
                      "markdown": "`            make -j $JOBS\n\n      - name: Test\n        shell: bash\n        run: |\n            export CTEST_PARALLEL_LEVEL=$JOBS\n            export CTEST_OUTPUT_ON_FAILURE=1\n            cd build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "endLine": 32,
                  "snippet": {
                    "text": "        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n            export JOBS=20\n            mkdir -p build\n            cd build\n",
                    "rendered": {
                      "text": "        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n            export JOBS=20\n            mkdir -p build\n            cd build\n",
                      "markdown": "`        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n        run: |\n            export JOBS=20\n            mkdir -p build\n            cd build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/workflows/master.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 17,
                  "endLine": 28,
                  "endColumn": 22,
                  "snippet": {
                    "text": "          key: ${{ matrix.os }}-coverage-v2\n\n      - name: Install Depends\n        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                    "rendered": {
                      "text": "          key: ${{ matrix.os }}-coverage-v2\n\n      - name: Install Depends\n        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n",
                      "markdown": "`          key: ${{ matrix.os }}-coverage-v2\n\n      - name: Install Depends\n        run: sudo apt install zlib1g-dev libssl-dev build-essential lcov libmbedtls-dev\n\n      - name: Build\n        shell: bash\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/.github/dependabot.yml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 8,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    schedule:\n      interval: \"monthly\"\n    ignore:\n      # Newer versions expect a vcpkg manifest, so stick to v7, that could handle vcpkgArguments\n      - dependency-name: \"lukka/run-vcpkg\"\n    groups:\n      github-actions:\n",
                    "rendered": {
                      "text": "    schedule:\n      interval: \"monthly\"\n    ignore:\n      # Newer versions expect a vcpkg manifest, so stick to v7, that could handle vcpkgArguments\n      - dependency-name: \"lukka/run-vcpkg\"\n    groups:\n      github-actions:\n",
                      "markdown": "`    schedule:\n      interval: \"monthly\"\n    ignore:\n      # Newer versions expect a vcpkg manifest, so stick to v7, that could handle vcpkgArguments\n      - dependency-name: \"lukka/run-vcpkg\"\n    groups:\n      github-actions:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTORS.md"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 2,
                  "endLine": 177,
                  "endColumn": 6,
                  "snippet": {
                    "text": " * Bill Vaughan\n * Christopher Wiley\n * David Paschich\n * Ed Schouten\n * Eduardo Panisset\n * Jan Heylen\n * jer-gentoo\n",
                    "rendered": {
                      "text": " * Bill Vaughan\n * Christopher Wiley\n * David Paschich\n * Ed Schouten\n * Eduardo Panisset\n * Jan Heylen\n * jer-gentoo\n",
                      "markdown": "` * Bill Vaughan\n * Christopher Wiley\n * David Paschich\n * Ed Schouten\n * Eduardo Panisset\n * Jan Heylen\n * jer-gentoo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTORS.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 2,
                  "endLine": 31,
                  "endColumn": 6,
                  "snippet": {
                    "text": " * Paul Croome\n * George Danchev\n * Andrew Danforth\n * Ed Day\n * Christopher Davis\n * Mike Davis\n * Frank Denis\n",
                    "rendered": {
                      "text": " * Paul Croome\n * George Danchev\n * Andrew Danforth\n * Ed Day\n * Christopher Davis\n * Mike Davis\n * Frank Denis\n",
                      "markdown": "` * Paul Croome\n * George Danchev\n * Andrew Danforth\n * Ed Day\n * Christopher Davis\n * Mike Davis\n * Frank Denis\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/util-internal.h"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 44,
                  "endLine": 316,
                  "endColumn": 52,
                  "snippet": {
                    "text": "EVENT2_EXPORT_SYMBOL\nint evutil_ersatz_socketpair_(int, int , int, evutil_socket_t[2]);\n\nint evutil_resolve_(int family, const char *hostname, struct sockaddr *sa,\n    ev_socklen_t *socklen, int port);\n\nconst char *evutil_getenv_(const char *name);\n",
                    "rendered": {
                      "text": "EVENT2_EXPORT_SYMBOL\nint evutil_ersatz_socketpair_(int, int , int, evutil_socket_t[2]);\n\nint evutil_resolve_(int family, const char *hostname, struct sockaddr *sa,\n    ev_socklen_t *socklen, int port);\n\nconst char *evutil_getenv_(const char *name);\n",
                      "markdown": "`EVENT2_EXPORT_SYMBOL\nint evutil_ersatz_socketpair_(int, int , int, evutil_socket_t[2]);\n\nint evutil_resolve_(int family, const char *hostname, struct sockaddr *sa,\n    ev_socklen_t *socklen, int port);\n\nconst char *evutil_getenv_(const char *name);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/devpoll.c"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 1,
                  "endLine": 179,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tdevpoll_commit(devpollop);\n\n\tif (tv != NULL)\n\t\ttimeout = tv->tv_sec * 1000 + (tv->tv_usec + 999) / 1000;\n\n\tdvp.dp_fds = devpollop->events;\n\tdvp.dp_nfds = devpollop->nevents;\n",
                    "rendered": {
                      "text": "\t\tdevpoll_commit(devpollop);\n\n\tif (tv != NULL)\n\t\ttimeout = tv->tv_sec * 1000 + (tv->tv_usec + 999) / 1000;\n\n\tdvp.dp_fds = devpollop->events;\n\tdvp.dp_nfds = devpollop->nevents;\n",
                      "markdown": "`\t\tdevpoll_commit(devpollop);\n\n\tif (tv != NULL)\n\t\ttimeout = tv->tv_sec * 1000 + (tv->tv_usec + 999) / 1000;\n\n\tdvp.dp_fds = devpollop->events;\n\tdvp.dp_nfds = devpollop->nevents;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/devpoll.c"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 12,
                  "endLine": 173,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tstruct devpollop *devpollop = base->evbase;\n\tstruct pollfd *events = devpollop->events;\n\tstruct dvpoll dvp;\n\tint i, res, timeout = -1;\n\n\tif (devpollop->nchanges)\n\t\tdevpoll_commit(devpollop);\n",
                    "rendered": {
                      "text": "\tstruct devpollop *devpollop = base->evbase;\n\tstruct pollfd *events = devpollop->events;\n\tstruct dvpoll dvp;\n\tint i, res, timeout = -1;\n\n\tif (devpollop->nchanges)\n\t\tdevpoll_commit(devpollop);\n",
                      "markdown": "`\tstruct devpollop *devpollop = base->evbase;\n\tstruct pollfd *events = devpollop->events;\n\tstruct dvpoll dvp;\n\tint i, res, timeout = -1;\n\n\tif (devpollop->nchanges)\n\t\tdevpoll_commit(devpollop);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1256,
                  "startColumn": 55,
                  "endLine": 1256,
                  "endColumn": 63,
                  "snippet": {
                    "text": " o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n\nTESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n",
                    "rendered": {
                      "text": " o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n\nTESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n",
                      "markdown": "` o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n\nTESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 942,
                  "startColumn": 44,
                  "endLine": 942,
                  "endColumn": 52,
                  "snippet": {
                    "text": "   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n   o pull in wildcard matching code from cURL (4db9da6 Patrick Pelletier)\n   o Another tweak to https-client.c (95acdaa)\n",
                    "rendered": {
                      "text": "   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n   o pull in wildcard matching code from cURL (4db9da6 Patrick Pelletier)\n   o Another tweak to https-client.c (95acdaa)\n",
                      "markdown": "`   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n   o pull in wildcard matching code from cURL (4db9da6 Patrick Pelletier)\n   o Another tweak to https-client.c (95acdaa)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 940,
                  "startColumn": 39,
                  "endLine": 940,
                  "endColumn": 47,
                  "snippet": {
                    "text": "     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n",
                    "rendered": {
                      "text": "     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n",
                      "markdown": "`     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 795,
                  "startColumn": 23,
                  "endLine": 795,
                  "endColumn": 31,
                  "snippet": {
                    "text": "   o https-client: POST supported, args supported (c5887f7 Alexey Ozeritsky)\n   o https-client: code cleanup (29af65e Alexey Ozeritsky)\n   o https-client: Small tweaks to https-client.c (90786eb)\n   o https-client: Set hostname for SNI extension (by f69m) (d1976f8)\n   o https-client: add a cast to https-client.c (462e6b6)\n\n\n",
                    "rendered": {
                      "text": "   o https-client: POST supported, args supported (c5887f7 Alexey Ozeritsky)\n   o https-client: code cleanup (29af65e Alexey Ozeritsky)\n   o https-client: Small tweaks to https-client.c (90786eb)\n   o https-client: Set hostname for SNI extension (by f69m) (d1976f8)\n   o https-client: add a cast to https-client.c (462e6b6)\n\n\n",
                      "markdown": "`   o https-client: POST supported, args supported (c5887f7 Alexey Ozeritsky)\n   o https-client: code cleanup (29af65e Alexey Ozeritsky)\n   o https-client: Small tweaks to https-client.c (90786eb)\n   o https-client: Set hostname for SNI extension (by f69m) (d1976f8)\n   o https-client: add a cast to https-client.c (462e6b6)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 40,
                  "endLine": 426,
                  "endColumn": 48,
                  "snippet": {
                    "text": "lds it for the M[DT][d] options and performs a hunt and gather of the different output libraries. (ded8086 billsegall)\n   o The Windows socket type is defined as SOCKET. (c9e6c3d billsegall)\n   o autotools: fix getservbyname() detection (959a4c2 Azat Khuzhin)\n   o Add missing <string.h> for openssl_hostname_validation module (3316a21 Azat Khuzhin)\n   o make test/regress_ssl.c compile without warnings (9f02a44 Thomas Bernard)\n   o test/regress_be: drop debug __asm__(int3) to fix arm build (8240379 Azat Khuzhin)\n   o event_debug_created_threadable_ctx_: fix compilation without debug mode (a068f2e Azat K",
                    "rendered": {
                      "text": "lds it for the M[DT][d] options and performs a hunt and gather of the different output libraries. (ded8086 billsegall)\n   o The Windows socket type is defined as SOCKET. (c9e6c3d billsegall)\n   o autotools: fix getservbyname() detection (959a4c2 Azat Khuzhin)\n   o Add missing <string.h> for openssl_hostname_validation module (3316a21 Azat Khuzhin)\n   o make test/regress_ssl.c compile without warnings (9f02a44 Thomas Bernard)\n   o test/regress_be: drop debug __asm__(int3) to fix arm build (8240379 Azat Khuzhin)\n   o event_debug_created_threadable_ctx_: fix compilation without debug mode (a068f2e Azat K",
                      "markdown": "`lds it for the M[DT][d] options and performs a hunt and gather of the different output libraries. (ded8086 billsegall)\n   o The Windows socket type is defined as SOCKET. (c9e6c3d billsegall)\n   o autotools: fix getservbyname() detection (959a4c2 Azat Khuzhin)\n   o Add missing <string.h> for openssl_hostname_validation module (3316a21 Azat Khuzhin)\n   o make test/regress_ssl.c compile without warnings (9f02a44 Thomas Bernard)\n   o test/regress_be: drop debug __asm__(int3) to fix arm build (8240379 Azat Khuzhin)\n   o event_debug_created_threadable_ctx_: fix compilation without debug mode (a068f2e Azat K`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 36,
                  "endLine": 212,
                  "endColumn": 44,
                  "snippet": {
                    "text": "   o test/regress: add tests for evbuffer_add() breakage on empty last chain (d5ee739 Marcus Sundberg)\n   o test/http: fix running some tests sequential (with --no-fork) (bddad71 Azat Khuzhin)\n   o test/http: localize evhttp server structure (cbc3209 Azat Khuzhin)\n   o test/dns: regression for empty hostname (d7348ba Azat Khuzhin)\n   o test/http: fix SERVER_TIMEOUT tests under win32 (d49a658 Azat Khuzhin)\n   o test/http: add a helper for creating timedout/failed request (376f107 Azat Khuzhin)\n   o test/http: adopt for C90 (mixed code and declarations) (d02a285 Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o test/regress: add tests for evbuffer_add() breakage on empty last chain (d5ee739 Marcus Sundberg)\n   o test/http: fix running some tests sequential (with --no-fork) (bddad71 Azat Khuzhin)\n   o test/http: localize evhttp server structure (cbc3209 Azat Khuzhin)\n   o test/dns: regression for empty hostname (d7348ba Azat Khuzhin)\n   o test/http: fix SERVER_TIMEOUT tests under win32 (d49a658 Azat Khuzhin)\n   o test/http: add a helper for creating timedout/failed request (376f107 Azat Khuzhin)\n   o test/http: adopt for C90 (mixed code and declarations) (d02a285 Azat Khuzhin)\n",
                      "markdown": "`   o test/regress: add tests for evbuffer_add() breakage on empty last chain (d5ee739 Marcus Sundberg)\n   o test/http: fix running some tests sequential (with --no-fork) (bddad71 Azat Khuzhin)\n   o test/http: localize evhttp server structure (cbc3209 Azat Khuzhin)\n   o test/dns: regression for empty hostname (d7348ba Azat Khuzhin)\n   o test/http: fix SERVER_TIMEOUT tests under win32 (d49a658 Azat Khuzhin)\n   o test/http: add a helper for creating timedout/failed request (376f107 Azat Khuzhin)\n   o test/http: adopt for C90 (mixed code and declarations) (d02a285 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 41,
                  "endLine": 144,
                  "endColumn": 49,
                  "snippet": {
                    "text": "   o be_openssl: clear all pending errors before SSL_*() calls (38e0f4a Azat Khuzhin)\n   o be_sock: cancel in-progress dns requests (86dfd2c Azat Khuzhin)\n   o be_sock: unfreeze buffers on fd changing (255525d Azat Khuzhin)\n   o be_sock: bufferevent_socket_connect_hostname(): make it thread-safe (809bb39 Azat Khuzhin)\n   o be_openssl: don't call do_write() directly from outbuf_cb (da52933 Azat Khuzhin)\n   o be_openssl: use bufferevent_enable() instead of bufferevent_add_event_() (0c66d32 Azat Khuzhin)\n   o be_openssl: don't add events during bev creation (like be_sock) (f4b6284 Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o be_openssl: clear all pending errors before SSL_*() calls (38e0f4a Azat Khuzhin)\n   o be_sock: cancel in-progress dns requests (86dfd2c Azat Khuzhin)\n   o be_sock: unfreeze buffers on fd changing (255525d Azat Khuzhin)\n   o be_sock: bufferevent_socket_connect_hostname(): make it thread-safe (809bb39 Azat Khuzhin)\n   o be_openssl: don't call do_write() directly from outbuf_cb (da52933 Azat Khuzhin)\n   o be_openssl: use bufferevent_enable() instead of bufferevent_add_event_() (0c66d32 Azat Khuzhin)\n   o be_openssl: don't add events during bev creation (like be_sock) (f4b6284 Azat Khuzhin)\n",
                      "markdown": "`   o be_openssl: clear all pending errors before SSL_*() calls (38e0f4a Azat Khuzhin)\n   o be_sock: cancel in-progress dns requests (86dfd2c Azat Khuzhin)\n   o be_sock: unfreeze buffers on fd changing (255525d Azat Khuzhin)\n   o be_sock: bufferevent_socket_connect_hostname(): make it thread-safe (809bb39 Azat Khuzhin)\n   o be_openssl: don't call do_write() directly from outbuf_cb (da52933 Azat Khuzhin)\n   o be_openssl: use bufferevent_enable() instead of bufferevent_add_event_() (0c66d32 Azat Khuzhin)\n   o be_openssl: don't add events during bev creation (like be_sock) (f4b6284 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1686,
                  "startColumn": 21,
                  "endLine": 1686,
                  "endColumn": 25,
                  "snippet": {
                    "text": "   o bufferevent: Add functions to set/get max_single_read/write\n     values. (998c813 Alexander Drozdov)\n   o bev_ssl: Be more specific in event callbacks. evhttp in particular gets\n     confused without at least one of BEV_EVENT_{READING|WRITING}. (f7eb69a\n     Catalin Patulea)\n\n New functions and features: evconnlisteners\n",
                    "rendered": {
                      "text": "   o bufferevent: Add functions to set/get max_single_read/write\n     values. (998c813 Alexander Drozdov)\n   o bev_ssl: Be more specific in event callbacks. evhttp in particular gets\n     confused without at least one of BEV_EVENT_{READING|WRITING}. (f7eb69a\n     Catalin Patulea)\n\n New functions and features: evconnlisteners\n",
                      "markdown": "`   o bufferevent: Add functions to set/get max_single_read/write\n     values. (998c813 Alexander Drozdov)\n   o bev_ssl: Be more specific in event callbacks. evhttp in particular gets\n     confused without at least one of BEV_EVENT_{READING|WRITING}. (f7eb69a\n     Catalin Patulea)\n\n New functions and features: evconnlisteners\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1658,
                  "startColumn": 39,
                  "endLine": 1658,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n New functions and features: evbuffers\n   o Add evbuffer_add_file_segment() so one fd can be used efficiently\n     in more than one evbuffer_add_file at a time (e72afae, c2d9884,\n     3f405d2, 0aad014)\n   o Fix windows file segment mappings (8254de7)\n   o Allow evbuffer_ptr_set to yield a point just after the end of the\n",
                    "rendered": {
                      "text": "\n New functions and features: evbuffers\n   o Add evbuffer_add_file_segment() so one fd can be used efficiently\n     in more than one evbuffer_add_file at a time (e72afae, c2d9884,\n     3f405d2, 0aad014)\n   o Fix windows file segment mappings (8254de7)\n   o Allow evbuffer_ptr_set to yield a point just after the end of the\n",
                      "markdown": "`\n New functions and features: evbuffers\n   o Add evbuffer_add_file_segment() so one fd can be used efficiently\n     in more than one evbuffer_add_file at a time (e72afae, c2d9884,\n     3f405d2, 0aad014)\n   o Fix windows file segment mappings (8254de7)\n   o Allow evbuffer_ptr_set to yield a point just after the end of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1632,
                  "startColumn": 40,
                  "endLine": 1632,
                  "endColumn": 49,
                  "snippet": {
                    "text": "     approach. (b8b8aa5)\n\n New functions and features: debugging\n   o Add event_enable_debug_logging() to control use of debug logs (e30a82f)\n\n New functions and features: core\n   o Add event_config function to limit time/callbacks between calls\n",
                    "rendered": {
                      "text": "     approach. (b8b8aa5)\n\n New functions and features: debugging\n   o Add event_enable_debug_logging() to control use of debug logs (e30a82f)\n\n New functions and features: core\n   o Add event_config function to limit time/callbacks between calls\n",
                      "markdown": "`     approach. (b8b8aa5)\n\n New functions and features: debugging\n   o Add event_enable_debug_logging() to control use of debug logs (e30a82f)\n\n New functions and features: core\n   o Add event_config function to limit time/callbacks between calls\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1582,
                  "startColumn": 44,
                  "endLine": 1582,
                  "endColumn": 48,
                  "snippet": {
                    "text": "   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n     separate functions. needs testing (efc4dc5)\n   o Make event_count maintenance branchless at the expense of an\n     extra shift. Needs benchmarking (d1cee3b)\n   o In the 2.1 branch, let's try out lazy gettimeofday/clock_gettime\n     comparison (2a83ecc)\n",
                    "rendered": {
                      "text": "   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n     separate functions. needs testing (efc4dc5)\n   o Make event_count maintenance branchless at the expense of an\n     extra shift. Needs benchmarking (d1cee3b)\n   o In the 2.1 branch, let's try out lazy gettimeofday/clock_gettime\n     comparison (2a83ecc)\n",
                      "markdown": "`   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n     separate functions. needs testing (efc4dc5)\n   o Make event_count maintenance branchless at the expense of an\n     extra shift. Needs benchmarking (d1cee3b)\n   o In the 2.1 branch, let's try out lazy gettimeofday/clock_gettime\n     comparison (2a83ecc)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1363,
                  "startColumn": 2,
                  "endLine": 1363,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION FIXES AND IMPROVEMENTS\n o Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy (2888fac)\n o Update Doxyfile to produce more useful output (aea0555)\n\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION FIXES AND IMPROVEMENTS\n o Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy (2888fac)\n o Update Doxyfile to produce more useful output (aea0555)\n\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n",
                      "markdown": "`\nDOCUMENTATION FIXES AND IMPROVEMENTS\n o Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy (2888fac)\n o Update Doxyfile to produce more useful output (aea0555)\n\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1290,
                  "startColumn": 2,
                  "endLine": 1290,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n o Update copyright dates to 2011. (3c824bd)\n o Fix typo in whatsnew-2.0.txt (674bc6a Mansour Moufid)\n o Improve win32 behavior of dns-sample.c code (a3f320e Gisle Vanem)\n\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n o Update copyright dates to 2011. (3c824bd)\n o Fix typo in whatsnew-2.0.txt (674bc6a Mansour Moufid)\n o Improve win32 behavior of dns-sample.c code (a3f320e Gisle Vanem)\n\n",
                      "markdown": "`\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n o Update copyright dates to 2011. (3c824bd)\n o Fix typo in whatsnew-2.0.txt (674bc6a Mansour Moufid)\n o Improve win32 behavior of dns-sample.c code (a3f320e Gisle Vanem)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1286,
                  "startColumn": 25,
                  "endLine": 1286,
                  "endColumn": 29,
                  "snippet": {
                    "text": " o Tests for 94fba5b and f72e8f6 (d58c15e Leonid Evdokimov)\n o Test for commit aff6ba1 (f7841bf Leonid Evdokimov)\n o Style and comment tweaks for dns/leak* tests (5e42202)\n o improve test to remove at least one buffer from src (7eb52eb Greg Hazel)\n\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n",
                    "rendered": {
                      "text": " o Tests for 94fba5b and f72e8f6 (d58c15e Leonid Evdokimov)\n o Test for commit aff6ba1 (f7841bf Leonid Evdokimov)\n o Style and comment tweaks for dns/leak* tests (5e42202)\n o improve test to remove at least one buffer from src (7eb52eb Greg Hazel)\n\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n",
                      "markdown": "` o Tests for 94fba5b and f72e8f6 (d58c15e Leonid Evdokimov)\n o Test for commit aff6ba1 (f7841bf Leonid Evdokimov)\n o Style and comment tweaks for dns/leak* tests (5e42202)\n o improve test to remove at least one buffer from src (7eb52eb Greg Hazel)\n\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1265,
                  "startColumn": 32,
                  "endLine": 1265,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Changes in version 2.0.16-stable (18 Nov 2011)\nBUGFIXES (core):\n o More detailed message in case of libevent self-debugging failure. (9e6a4ef Leonid Evdokimov)\n o epoll: close fd on alloc fail at initialization (1aee718 Jamie Iles)\n o Fix compile warning from saying event2/*.h inside a comment (447b0ba)\n o Warn when unable to construct base because of failing make_base_notifiable (4e797f3)\n o Don't try to make notifiable event_base when no threading fns are configured (e787413)\n",
                    "rendered": {
                      "text": "Changes in version 2.0.16-stable (18 Nov 2011)\nBUGFIXES (core):\n o More detailed message in case of libevent self-debugging failure. (9e6a4ef Leonid Evdokimov)\n o epoll: close fd on alloc fail at initialization (1aee718 Jamie Iles)\n o Fix compile warning from saying event2/*.h inside a comment (447b0ba)\n o Warn when unable to construct base because of failing make_base_notifiable (4e797f3)\n o Don't try to make notifiable event_base when no threading fns are configured (e787413)\n",
                      "markdown": "`Changes in version 2.0.16-stable (18 Nov 2011)\nBUGFIXES (core):\n o More detailed message in case of libevent self-debugging failure. (9e6a4ef Leonid Evdokimov)\n o epoll: close fd on alloc fail at initialization (1aee718 Jamie Iles)\n o Fix compile warning from saying event2/*.h inside a comment (447b0ba)\n o Warn when unable to construct base because of failing make_base_notifiable (4e797f3)\n o Don't try to make notifiable event_base when no threading fns are configured (e787413)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1258,
                  "startColumn": 31,
                  "endLine": 1258,
                  "endColumn": 35,
                  "snippet": {
                    "text": "TESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n o Better workaround for Linux 3.2 edge-triggered epoll bug (9f9e259)\n\n",
                    "rendered": {
                      "text": "TESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n o Better workaround for Linux 3.2 edge-triggered epoll bug (9f9e259)\n\n",
                      "markdown": "`TESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n o Better workaround for Linux 3.2 edge-triggered epoll bug (9f9e259)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1250,
                  "startColumn": 2,
                  "endLine": 1250,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION FIXES:\n o Slightly clarify evbuffer_peek documentation (7bbf6ca)\n o Update copyright notices to 2012 (e49e289)\n\nNEW APIS:\n o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION FIXES:\n o Slightly clarify evbuffer_peek documentation (7bbf6ca)\n o Update copyright notices to 2012 (e49e289)\n\nNEW APIS:\n o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n",
                      "markdown": "`\nDOCUMENTATION FIXES:\n o Slightly clarify evbuffer_peek documentation (7bbf6ca)\n o Update copyright notices to 2012 (e49e289)\n\nNEW APIS:\n o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1147,
                  "startColumn": 27,
                  "endLine": 1147,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\nPORTABILITY FIXES:\n o check for arc4random_buf at runtime, on OS X (bff5f94 Greg Hazel)\n o Correctly check for arc4random_buf (fcec3e8 Sebastian Hahn)\n o Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED) (ca80ea6)\n\n",
                    "rendered": {
                      "text": "\n\nPORTABILITY FIXES:\n o check for arc4random_buf at runtime, on OS X (bff5f94 Greg Hazel)\n o Correctly check for arc4random_buf (fcec3e8 Sebastian Hahn)\n o Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED) (ca80ea6)\n\n",
                      "markdown": "`\n\nPORTABILITY FIXES:\n o check for arc4random_buf at runtime, on OS X (bff5f94 Greg Hazel)\n o Correctly check for arc4random_buf (fcec3e8 Sebastian Hahn)\n o Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED) (ca80ea6)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 4,
                  "endLine": 1037,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o Simplify test.sh code significantly. (9b856fd Ross Lagerwall)\n   o Make all tests that hit the network disabled by default (f2cea87)\n   o Avoid a resource leak on error in http client benchmark (ea92fba)\n   o Update to latest tinytest (911b4f0349377) (ef7c4f7)\n   o Avoid (unlikely) overflow in bench_httpclient.c (5671033)\n   o Shave 700 msec off the persistent_timeout_jump test (21205b8)\n   o Check return value of write() in regress.c (c8009d2)\n",
                    "rendered": {
                      "text": "   o Simplify test.sh code significantly. (9b856fd Ross Lagerwall)\n   o Make all tests that hit the network disabled by default (f2cea87)\n   o Avoid a resource leak on error in http client benchmark (ea92fba)\n   o Update to latest tinytest (911b4f0349377) (ef7c4f7)\n   o Avoid (unlikely) overflow in bench_httpclient.c (5671033)\n   o Shave 700 msec off the persistent_timeout_jump test (21205b8)\n   o Check return value of write() in regress.c (c8009d2)\n",
                      "markdown": "`   o Simplify test.sh code significantly. (9b856fd Ross Lagerwall)\n   o Make all tests that hit the network disabled by default (f2cea87)\n   o Avoid a resource leak on error in http client benchmark (ea92fba)\n   o Update to latest tinytest (911b4f0349377) (ef7c4f7)\n   o Avoid (unlikely) overflow in bench_httpclient.c (5671033)\n   o Shave 700 msec off the persistent_timeout_jump test (21205b8)\n   o Check return value of write() in regress.c (c8009d2)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 38,
                  "endLine": 936,
                  "endColumn": 42,
                  "snippet": {
                    "text": "   o Add sample/https-client.c, an example of stacking evhttp as a client on\n     top of bufferevent_ssl. (be46c99 Catalin Patulea)\n   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n",
                    "rendered": {
                      "text": "   o Add sample/https-client.c, an example of stacking evhttp as a client on\n     top of bufferevent_ssl. (be46c99 Catalin Patulea)\n   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n",
                      "markdown": "`   o Add sample/https-client.c, an example of stacking evhttp as a client on\n     top of bufferevent_ssl. (be46c99 Catalin Patulea)\n   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 913,
                  "startColumn": 42,
                  "endLine": 913,
                  "endColumn": 46,
                  "snippet": {
                    "text": "   o Add regress test ipv6_for_domain. (9ec88bd Azat Khuzhin)\n   o Add an environment variable (EVENT_DEBUG_MODE) to run unit tests in debug\n     mode (2fad0f3)\n   o Add a test with an active_later event at event_base_free time. (1c3147f)\n   o Make all tests pass under EVENT_DEBUG_MODE=1 (b1b054f)\n   o Add some verbose notes to bufferevent unit tests (9d893c9)\n   o New test for active_later->active transition on event_active (a153874)\n",
                    "rendered": {
                      "text": "   o Add regress test ipv6_for_domain. (9ec88bd Azat Khuzhin)\n   o Add an environment variable (EVENT_DEBUG_MODE) to run unit tests in debug\n     mode (2fad0f3)\n   o Add a test with an active_later event at event_base_free time. (1c3147f)\n   o Make all tests pass under EVENT_DEBUG_MODE=1 (b1b054f)\n   o Add some verbose notes to bufferevent unit tests (9d893c9)\n   o New test for active_later->active transition on event_active (a153874)\n",
                      "markdown": "`   o Add regress test ipv6_for_domain. (9ec88bd Azat Khuzhin)\n   o Add an environment variable (EVENT_DEBUG_MODE) to run unit tests in debug\n     mode (2fad0f3)\n   o Add a test with an active_later event at event_base_free time. (1c3147f)\n   o Make all tests pass under EVENT_DEBUG_MODE=1 (b1b054f)\n   o Add some verbose notes to bufferevent unit tests (9d893c9)\n   o New test for active_later->active transition on event_active (a153874)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 752,
                  "startColumn": 4,
                  "endLine": 752,
                  "endColumn": 12,
                  "snippet": {
                    "text": "     (611e28b Azat Khuzhin)\n   o regress_http: add tests for evhttp_connection_get_addr() (4dd500c\n     Azat Khuzhin)\n   o Update to the latest version of tinytest (7a80476)\n   o Heap-allocate zlib data structure in regress_zlib tests (4947c18)\n\n Performance tweaks (core)\n",
                    "rendered": {
                      "text": "     (611e28b Azat Khuzhin)\n   o regress_http: add tests for evhttp_connection_get_addr() (4dd500c\n     Azat Khuzhin)\n   o Update to the latest version of tinytest (7a80476)\n   o Heap-allocate zlib data structure in regress_zlib tests (4947c18)\n\n Performance tweaks (core)\n",
                      "markdown": "`     (611e28b Azat Khuzhin)\n   o regress_http: add tests for evhttp_connection_get_addr() (4dd500c\n     Azat Khuzhin)\n   o Update to the latest version of tinytest (7a80476)\n   o Heap-allocate zlib data structure in regress_zlib tests (4947c18)\n\n Performance tweaks (core)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 28,
                  "endLine": 671,
                  "endColumn": 32,
                  "snippet": {
                    "text": "   o If evsel->del() fails, don't leave the evmap in an inconsistent\n     state (9b5a527 Maxime Henrion)\n   o Move event_debug_note_teardown_ before mm_free. (69b5c64)\n   o Check CLOCK_MONOTONIC_* at runtime if needed. (911abf3)\n   o Fix reinit of fds with EV_WRITE but not EV_READ. (ebfd8a8 maksqwe)\n   o Tweaked callbacks to prevent race condition\n     (https://github.com/libevent/libevent/issues/104) (40830f1, 2ea15ed\n",
                    "rendered": {
                      "text": "   o If evsel->del() fails, don't leave the evmap in an inconsistent\n     state (9b5a527 Maxime Henrion)\n   o Move event_debug_note_teardown_ before mm_free. (69b5c64)\n   o Check CLOCK_MONOTONIC_* at runtime if needed. (911abf3)\n   o Fix reinit of fds with EV_WRITE but not EV_READ. (ebfd8a8 maksqwe)\n   o Tweaked callbacks to prevent race condition\n     (https://github.com/libevent/libevent/issues/104) (40830f1, 2ea15ed\n",
                      "markdown": "`   o If evsel->del() fails, don't leave the evmap in an inconsistent\n     state (9b5a527 Maxime Henrion)\n   o Move event_debug_note_teardown_ before mm_free. (69b5c64)\n   o Check CLOCK_MONOTONIC_* at runtime if needed. (911abf3)\n   o Fix reinit of fds with EV_WRITE but not EV_READ. (ebfd8a8 maksqwe)\n   o Tweaked callbacks to prevent race condition\n     (https://github.com/libevent/libevent/issues/104) (40830f1, 2ea15ed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 641,
                  "startColumn": 4,
                  "endLine": 641,
                  "endColumn": 12,
                  "snippet": {
                    "text": "     Soderberg)\n   o Rename README to README.md and use markdown to format. (d2bc39a\n     Joakim Soderberg)\n   o Update README with CMake build instructions. (604b8cc Joakim Soderberg)\n   o Clean up the README some. (8d4cb35 JoakimSoderberg)\n   o Forgotten headers for old nmake project compatibility. (8697b99\n     Joakim Soderberg)\n",
                    "rendered": {
                      "text": "     Soderberg)\n   o Rename README to README.md and use markdown to format. (d2bc39a\n     Joakim Soderberg)\n   o Update README with CMake build instructions. (604b8cc Joakim Soderberg)\n   o Clean up the README some. (8d4cb35 JoakimSoderberg)\n   o Forgotten headers for old nmake project compatibility. (8697b99\n     Joakim Soderberg)\n",
                      "markdown": "`     Soderberg)\n   o Rename README to README.md and use markdown to format. (d2bc39a\n     Joakim Soderberg)\n   o Update README with CMake build instructions. (604b8cc Joakim Soderberg)\n   o Clean up the README some. (8d4cb35 JoakimSoderberg)\n   o Forgotten headers for old nmake project compatibility. (8697b99\n     Joakim Soderberg)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 4,
                  "endLine": 592,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o Provide on request complete callback facility (b083ca0 Andrew Sweeney)\n   o evhttp_request_set_on_complete_cb to be more specific about what\n     the function actually does and usage (da86dda Andrew Sweeney)\n   o Update unit test to make sure that the callback happens after the\n     output data is written (b85f398 Andrew Sweeney)\n\n Features (evdns)\n",
                    "rendered": {
                      "text": "   o Provide on request complete callback facility (b083ca0 Andrew Sweeney)\n   o evhttp_request_set_on_complete_cb to be more specific about what\n     the function actually does and usage (da86dda Andrew Sweeney)\n   o Update unit test to make sure that the callback happens after the\n     output data is written (b85f398 Andrew Sweeney)\n\n Features (evdns)\n",
                      "markdown": "`   o Provide on request complete callback facility (b083ca0 Andrew Sweeney)\n   o evhttp_request_set_on_complete_cb to be more specific about what\n     the function actually does and usage (da86dda Andrew Sweeney)\n   o Update unit test to make sure that the callback happens after the\n     output data is written (b85f398 Andrew Sweeney)\n\n Features (evdns)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 501,
                  "startColumn": 4,
                  "endLine": 501,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o test: add family argument for http_connection_test_() (177b8a7 Azat Khuzhin)\n   o test: add regress for evhttp_connection_set_family() with AF_INET and AF_UNSPEC (42aefeb Azat Khuzhin)\n   o test/http: add regress test for set family to AF_INET6 (3fbf3cc Azat Khuzhin)\n   o Update to a more recent tinytest_macros. (8da5a18)\n   o test/regress: add simplestsignal: to track reorder bugs separately (b897bef Azat Khuzhin)\n   o test/evbuffer_peek: add regress in case we have first buffer greater (e2d139d Azat Khuzhin)\n   o More evbuffer_peek() test cases (154006a)\n",
                    "rendered": {
                      "text": "   o test: add family argument for http_connection_test_() (177b8a7 Azat Khuzhin)\n   o test: add regress for evhttp_connection_set_family() with AF_INET and AF_UNSPEC (42aefeb Azat Khuzhin)\n   o test/http: add regress test for set family to AF_INET6 (3fbf3cc Azat Khuzhin)\n   o Update to a more recent tinytest_macros. (8da5a18)\n   o test/regress: add simplestsignal: to track reorder bugs separately (b897bef Azat Khuzhin)\n   o test/evbuffer_peek: add regress in case we have first buffer greater (e2d139d Azat Khuzhin)\n   o More evbuffer_peek() test cases (154006a)\n",
                      "markdown": "`   o test: add family argument for http_connection_test_() (177b8a7 Azat Khuzhin)\n   o test: add regress for evhttp_connection_set_family() with AF_INET and AF_UNSPEC (42aefeb Azat Khuzhin)\n   o test/http: add regress test for set family to AF_INET6 (3fbf3cc Azat Khuzhin)\n   o Update to a more recent tinytest_macros. (8da5a18)\n   o test/regress: add simplestsignal: to track reorder bugs separately (b897bef Azat Khuzhin)\n   o test/evbuffer_peek: add regress in case we have first buffer greater (e2d139d Azat Khuzhin)\n   o More evbuffer_peek() test cases (154006a)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 4,
                  "endLine": 433,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o Add a prototype for event_disable_debug_mode() (bfcedee Sebastian Hahn)\n   o http: eliminate warning about \"socklen\" in evhttp_connection_connect_() (dfad1a4 Azat Khuzhin)\n   o Updated gitignore (1dbb55d Mark Ellzey)\n   o Update bench_httpclient.c (cb96931 Seungmo Koo)\n   o *fix: bench_httpclient to support win32 (4e9325e zeliard)\n   o Commented out a WIN32 threading / timing test for now (e84e269 Mark Ellzey)\n   o Fix mixed declarations and code (forbidden by ISO C90) (0c7f217 Thomas Bernard)\n",
                    "rendered": {
                      "text": "   o Add a prototype for event_disable_debug_mode() (bfcedee Sebastian Hahn)\n   o http: eliminate warning about \"socklen\" in evhttp_connection_connect_() (dfad1a4 Azat Khuzhin)\n   o Updated gitignore (1dbb55d Mark Ellzey)\n   o Update bench_httpclient.c (cb96931 Seungmo Koo)\n   o *fix: bench_httpclient to support win32 (4e9325e zeliard)\n   o Commented out a WIN32 threading / timing test for now (e84e269 Mark Ellzey)\n   o Fix mixed declarations and code (forbidden by ISO C90) (0c7f217 Thomas Bernard)\n",
                      "markdown": "`   o Add a prototype for event_disable_debug_mode() (bfcedee Sebastian Hahn)\n   o http: eliminate warning about \"socklen\" in evhttp_connection_connect_() (dfad1a4 Azat Khuzhin)\n   o Updated gitignore (1dbb55d Mark Ellzey)\n   o Update bench_httpclient.c (cb96931 Seungmo Koo)\n   o *fix: bench_httpclient to support win32 (4e9325e zeliard)\n   o Commented out a WIN32 threading / timing test for now (e84e269 Mark Ellzey)\n   o Fix mixed declarations and code (forbidden by ISO C90) (0c7f217 Thomas Bernard)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 19,
                  "endLine": 405,
                  "endColumn": 23,
                  "snippet": {
                    "text": "   o libevent_core and libevent_extra also deserve a pkgconfig file (b8d7c62 Jan Heylen)\n   o Ignore verify_tests.bat (win32 version) (0f2de10 Azat Khuzhin)\n   o cmake: require 3.1 only for win32 to make it work under ubunty precise (87f7238 Azat Khuzhin)\n   o cmake: require at least 3.1 for target_sources() (c46ead5 Azat Khuzhin)\n   o cmake: fix adding of compiler flags, and now it will (36588e1 Azat Khuzhin)\n   o Replace -Wswitch-enum with -Wswitch, and add it into cmake rules too (f29f59e Azat Khuzhin)\n   o test/regress_ssl: Fix compile problems for win32 (73d0360 Trond Norbye)\n",
                    "rendered": {
                      "text": "   o libevent_core and libevent_extra also deserve a pkgconfig file (b8d7c62 Jan Heylen)\n   o Ignore verify_tests.bat (win32 version) (0f2de10 Azat Khuzhin)\n   o cmake: require 3.1 only for win32 to make it work under ubunty precise (87f7238 Azat Khuzhin)\n   o cmake: require at least 3.1 for target_sources() (c46ead5 Azat Khuzhin)\n   o cmake: fix adding of compiler flags, and now it will (36588e1 Azat Khuzhin)\n   o Replace -Wswitch-enum with -Wswitch, and add it into cmake rules too (f29f59e Azat Khuzhin)\n   o test/regress_ssl: Fix compile problems for win32 (73d0360 Trond Norbye)\n",
                      "markdown": "`   o libevent_core and libevent_extra also deserve a pkgconfig file (b8d7c62 Jan Heylen)\n   o Ignore verify_tests.bat (win32 version) (0f2de10 Azat Khuzhin)\n   o cmake: require 3.1 only for win32 to make it work under ubunty precise (87f7238 Azat Khuzhin)\n   o cmake: require at least 3.1 for target_sources() (c46ead5 Azat Khuzhin)\n   o cmake: fix adding of compiler flags, and now it will (36588e1 Azat Khuzhin)\n   o Replace -Wswitch-enum with -Wswitch, and add it into cmake rules too (f29f59e Azat Khuzhin)\n   o test/regress_ssl: Fix compile problems for win32 (73d0360 Trond Norbye)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 4,
                  "endLine": 397,
                  "endColumn": 12,
                  "snippet": {
                    "text": "VERBOSE_DEBUG (typo on -DUSE_DEBUG) (e35f224 Azat Khuzhin)\n   o cmake: do not use stderr for notifications/version-info (38716c6 Azat Khuzhin)\n   o autoconf: fix --disable-thread-support build under win32 (bb09535 Azat Khuzhin)\n   o buffer: don't mix code and declarations (8892f4c Azat Khuzhin)\n   o Update gitignore file to ignore cscope gen'ed files (0aaa4fb Neeraj Badlani)\n   o For non GCC/clang on OSX the -Wno-deprecated-declarations may not be valid (b5ca365 Rainer Keller)\n   o automake: define serial-tests only if automake have this option (61179de Azat Khuzhin)\n   o test/automake: don't use para",
                    "rendered": {
                      "text": "VERBOSE_DEBUG (typo on -DUSE_DEBUG) (e35f224 Azat Khuzhin)\n   o cmake: do not use stderr for notifications/version-info (38716c6 Azat Khuzhin)\n   o autoconf: fix --disable-thread-support build under win32 (bb09535 Azat Khuzhin)\n   o buffer: don't mix code and declarations (8892f4c Azat Khuzhin)\n   o Update gitignore file to ignore cscope gen'ed files (0aaa4fb Neeraj Badlani)\n   o For non GCC/clang on OSX the -Wno-deprecated-declarations may not be valid (b5ca365 Rainer Keller)\n   o automake: define serial-tests only if automake have this option (61179de Azat Khuzhin)\n   o test/automake: don't use para",
                      "markdown": "`VERBOSE_DEBUG (typo on -DUSE_DEBUG) (e35f224 Azat Khuzhin)\n   o cmake: do not use stderr for notifications/version-info (38716c6 Azat Khuzhin)\n   o autoconf: fix --disable-thread-support build under win32 (bb09535 Azat Khuzhin)\n   o buffer: don't mix code and declarations (8892f4c Azat Khuzhin)\n   o Update gitignore file to ignore cscope gen'ed files (0aaa4fb Neeraj Badlani)\n   o For non GCC/clang on OSX the -Wno-deprecated-declarations may not be valid (b5ca365 Rainer Keller)\n   o automake: define serial-tests only if automake have this option (61179de Azat Khuzhin)\n   o test/automake: don't use para`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 4,
                  "endLine": 379,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o travis-ci: adjust alignment (c8be339 Azat Khuzhin)\n   o travis: add builds without debug mode into matrix (3e56da2 Azat Khuzhin)\n   o test: run regress with EVENT_DEBUG_MODE=1 and without (cf2cf2a Azat Khuzhin)\n   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n",
                    "rendered": {
                      "text": "   o travis-ci: adjust alignment (c8be339 Azat Khuzhin)\n   o travis: add builds without debug mode into matrix (3e56da2 Azat Khuzhin)\n   o test: run regress with EVENT_DEBUG_MODE=1 and without (cf2cf2a Azat Khuzhin)\n   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n",
                      "markdown": "`   o travis-ci: adjust alignment (c8be339 Azat Khuzhin)\n   o travis: add builds without debug mode into matrix (3e56da2 Azat Khuzhin)\n   o test: run regress with EVENT_DEBUG_MODE=1 and without (cf2cf2a Azat Khuzhin)\n   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 4,
                  "endLine": 307,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n Code Improvements (evthread)\n   o evthread: add evthread_get_{lock,condition}_callbacks() helpers (c0b34f6 Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n Code Improvements (evthread)\n   o evthread: add evthread_get_{lock,condition}_callbacks() helpers (c0b34f6 Azat Khuzhin)\n",
                      "markdown": "`   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n Code Improvements (evthread)\n   o evthread: add evthread_get_{lock,condition}_callbacks() helpers (c0b34f6 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 4,
                  "endLine": 306,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n Code Improvements (evthread)\n",
                    "rendered": {
                      "text": "   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n Code Improvements (evthread)\n",
                      "markdown": "`   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n Code Improvements (evthread)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 4,
                  "endLine": 305,
                  "endColumn": 12,
                  "snippet": {
                    "text": " Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n",
                    "rendered": {
                      "text": " Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n",
                      "markdown": "` Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 4,
                  "endLine": 304,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n",
                    "rendered": {
                      "text": "\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n",
                      "markdown": "`\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n   o Update README.md (0dfa5dc Mark Ellzey)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 4,
                  "endLine": 303,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o Update dns-example. (620ff24 Mark Ellzey)\n\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n",
                    "rendered": {
                      "text": "   o Update dns-example. (620ff24 Mark Ellzey)\n\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n",
                      "markdown": "`   o Update dns-example. (620ff24 Mark Ellzey)\n\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n   o Update README.md (80faee9 Mark Ellzey)\n   o Update README.md (ad4a897 Mark Ellzey)\n   o Update README.md (a2b2e1e Mark Ellzey)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 4,
                  "endLine": 300,
                  "endColumn": 12,
                  "snippet": {
                    "text": "   o sample/http-connect: don't use assert() to make it work with NDEBUG (6dc71e7 Azat Khuzhin)\n   o sample/http-connect: made it compatible with C90 (f976d43 Azat Khuzhin)\n   o sample: add HTTP CONNECT tunnelling example using libevent http layer (1d34498 Azat Khuzhin)\n   o Update dns-example. (620ff24 Mark Ellzey)\n\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n",
                    "rendered": {
                      "text": "   o sample/http-connect: don't use assert() to make it work with NDEBUG (6dc71e7 Azat Khuzhin)\n   o sample/http-connect: made it compatible with C90 (f976d43 Azat Khuzhin)\n   o sample: add HTTP CONNECT tunnelling example using libevent http layer (1d34498 Azat Khuzhin)\n   o Update dns-example. (620ff24 Mark Ellzey)\n\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n",
                      "markdown": "`   o sample/http-connect: don't use assert() to make it work with NDEBUG (6dc71e7 Azat Khuzhin)\n   o sample/http-connect: made it compatible with C90 (f976d43 Azat Khuzhin)\n   o sample: add HTTP CONNECT tunnelling example using libevent http layer (1d34498 Azat Khuzhin)\n   o Update dns-example. (620ff24 Mark Ellzey)\n\n Documentation\n   o Update README.md (b8ec70c Mark Ellzey)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 53,
                  "endLine": 272,
                  "endColumn": 57,
                  "snippet": {
                    "text": "nding after timeout triggered (cdafdf0 Azat Khuzhin)\n   o test/regress_ssl: cover case when server didn't up (failed with timeout) (74845f1 Azat Khuzhin)\n   o test/regress_ssl: covert that we can't change fd with underlying (df507af Azat Khuzhin)\n   o test/regress_ssl: cover that events (read/write) at finish not pending (762edb4 Azat Khuzhin)\n   o test/regress_ssl: cover fd manipulations (b78a829 Azat Khuzhin)\n   o test/regress_ssl: convert open_ssl_bufevs() to mask (46bba73 Azat Khuzhin)\n   o test/regress_ssl: convert client/server to mask too (3455991 Azat Khuzhin)\n   o test/regress_ssl: cover ",
                    "rendered": {
                      "text": "nding after timeout triggered (cdafdf0 Azat Khuzhin)\n   o test/regress_ssl: cover case when server didn't up (failed with timeout) (74845f1 Azat Khuzhin)\n   o test/regress_ssl: covert that we can't change fd with underlying (df507af Azat Khuzhin)\n   o test/regress_ssl: cover that events (read/write) at finish not pending (762edb4 Azat Khuzhin)\n   o test/regress_ssl: cover fd manipulations (b78a829 Azat Khuzhin)\n   o test/regress_ssl: convert open_ssl_bufevs() to mask (46bba73 Azat Khuzhin)\n   o test/regress_ssl: convert client/server to mask too (3455991 Azat Khuzhin)\n   o test/regress_ssl: cover ",
                      "markdown": "`nding after timeout triggered (cdafdf0 Azat Khuzhin)\n   o test/regress_ssl: cover case when server didn't up (failed with timeout) (74845f1 Azat Khuzhin)\n   o test/regress_ssl: covert that we can't change fd with underlying (df507af Azat Khuzhin)\n   o test/regress_ssl: cover that events (read/write) at finish not pending (762edb4 Azat Khuzhin)\n   o test/regress_ssl: cover fd manipulations (b78a829 Azat Khuzhin)\n   o test/regress_ssl: convert open_ssl_bufevs() to mask (46bba73 Azat Khuzhin)\n   o test/regress_ssl: convert client/server to mask too (3455991 Azat Khuzhin)\n   o test/regress_ssl: cover `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 18,
                  "endLine": 228,
                  "endColumn": 26,
                  "snippet": {
                    "text": "hin)\n   o test/http: avoid huge stack allocations to fix win32 builds (3166765 Azat Khuzhin)\n   o test: http/lingering_close: cover EVHTTP_SERVER_LINGERING_CLOSE (e122ca1 Azat Khuzhin)\n   o test: http/non_lingering_close: cover ~EVHTTP_SERVER_LINGERING_CLOSE (f41e1b0 Azat Khuzhin)\n   o test: http/*: update expected HTTP codes for body exceeds `max_body_size` (addf2b9 Azat Khuzhin)\n   o test: http/data_length_constrains: set EVHTTP_CON_READ_ON_WRITE_ERROR (d38a723 Azat Khuzhin)\n   o test: increase buffer size for http/data_length_constraints to trigger EPIPE (0792e1e Azat Khuzhin)\n   o test/tinytest_de",
                    "rendered": {
                      "text": "hin)\n   o test/http: avoid huge stack allocations to fix win32 builds (3166765 Azat Khuzhin)\n   o test: http/lingering_close: cover EVHTTP_SERVER_LINGERING_CLOSE (e122ca1 Azat Khuzhin)\n   o test: http/non_lingering_close: cover ~EVHTTP_SERVER_LINGERING_CLOSE (f41e1b0 Azat Khuzhin)\n   o test: http/*: update expected HTTP codes for body exceeds `max_body_size` (addf2b9 Azat Khuzhin)\n   o test: http/data_length_constrains: set EVHTTP_CON_READ_ON_WRITE_ERROR (d38a723 Azat Khuzhin)\n   o test: increase buffer size for http/data_length_constraints to trigger EPIPE (0792e1e Azat Khuzhin)\n   o test/tinytest_de",
                      "markdown": "`hin)\n   o test/http: avoid huge stack allocations to fix win32 builds (3166765 Azat Khuzhin)\n   o test: http/lingering_close: cover EVHTTP_SERVER_LINGERING_CLOSE (e122ca1 Azat Khuzhin)\n   o test: http/non_lingering_close: cover ~EVHTTP_SERVER_LINGERING_CLOSE (f41e1b0 Azat Khuzhin)\n   o test: http/*: update expected HTTP codes for body exceeds `max_body_size` (addf2b9 Azat Khuzhin)\n   o test: http/data_length_constrains: set EVHTTP_CON_READ_ON_WRITE_ERROR (d38a723 Azat Khuzhin)\n   o test: increase buffer size for http/data_length_constraints to trigger EPIPE (0792e1e Azat Khuzhin)\n   o test/tinytest_de`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  o Fix incorrect MIME type (23f9a20e johnsonlee)\n Trivial fixes:\n Documentation updates:\n  o Update README.md (3821cca1 Breaker)\n\n\nChanges in version 2.1.7-rc (2 Novemer 2016)\n",
                    "rendered": {
                      "text": "  o Fix incorrect MIME type (23f9a20e johnsonlee)\n Trivial fixes:\n Documentation updates:\n  o Update README.md (3821cca1 Breaker)\n\n\nChanges in version 2.1.7-rc (2 Novemer 2016)\n",
                      "markdown": "`  o Fix incorrect MIME type (23f9a20e johnsonlee)\n Trivial fixes:\n Documentation updates:\n  o Update README.md (3821cca1 Breaker)\n\n\nChanges in version 2.1.7-rc (2 Novemer 2016)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1828,
                  "startColumn": 65,
                  "endLine": 1829,
                  "snippet": {
                    "text": "   o Fix all identifiers with names beginning with underscore. (cb9da0b)\n   o Make event_rpcgen.py output conform to identifier conventions, more\n     (bcefd24)\n   o Fix some problems introduced by automated identifier cleanup script\n     (c963534)\n   o Have all visible internal function names end with an underscore. (8ac3c4c)\n   o Apply the naming convention to our EVUTIL_IS* functions (c7848fa)\n   o Clean up lingering _identifiers. (946b584)\n",
                    "rendered": {
                      "text": "   o Fix all identifiers with names beginning with underscore. (cb9da0b)\n   o Make event_rpcgen.py output conform to identifier conventions, more\n     (bcefd24)\n   o Fix some problems introduced by automated identifier cleanup script\n     (c963534)\n   o Have all visible internal function names end with an underscore. (8ac3c4c)\n   o Apply the naming convention to our EVUTIL_IS* functions (c7848fa)\n   o Clean up lingering _identifiers. (946b584)\n",
                      "markdown": "`   o Fix all identifiers with names beginning with underscore. (cb9da0b)\n   o Make event_rpcgen.py output conform to identifier conventions, more\n     (bcefd24)\n   o Fix some problems introduced by automated identifier cleanup script\n     (c963534)\n   o Have all visible internal function names end with an underscore. (8ac3c4c)\n   o Apply the naming convention to our EVUTIL_IS* functions (c7848fa)\n   o Clean up lingering _identifiers. (946b584)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1774,
                  "startColumn": 48,
                  "endLine": 1774,
                  "endColumn": 57,
                  "snippet": {
                    "text": "   o Synchronize with upstream tinytest (6c81be7)\n   o Make test-changelist faster (7622d26)\n   o Reduce the timeout in the main/fork test. (ab14f7c)\n   o New evhttp function to adjust initial retry timeout (350a3c4)\n   o Make regression tests run over 3x faster. (67a1763)\n   o Use test_timeval_diff_eq more consistently (b77b43f)\n   o Allow more slop in deferred_cb_skew test; freebsd needs it (b9f7e5f)\n",
                    "rendered": {
                      "text": "   o Synchronize with upstream tinytest (6c81be7)\n   o Make test-changelist faster (7622d26)\n   o Reduce the timeout in the main/fork test. (ab14f7c)\n   o New evhttp function to adjust initial retry timeout (350a3c4)\n   o Make regression tests run over 3x faster. (67a1763)\n   o Use test_timeval_diff_eq more consistently (b77b43f)\n   o Allow more slop in deferred_cb_skew test; freebsd needs it (b9f7e5f)\n",
                      "markdown": "`   o Synchronize with upstream tinytest (6c81be7)\n   o Make test-changelist faster (7622d26)\n   o Reduce the timeout in the main/fork test. (ab14f7c)\n   o New evhttp function to adjust initial retry timeout (350a3c4)\n   o Make regression tests run over 3x faster. (67a1763)\n   o Use test_timeval_diff_eq more consistently (b77b43f)\n   o Allow more slop in deferred_cb_skew test; freebsd needs it (b9f7e5f)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1773,
                  "startColumn": 15,
                  "endLine": 1773,
                  "endColumn": 24,
                  "snippet": {
                    "text": "   o Add an (internal) usleep function for use by unit tests (f25d9d3)\n   o Synchronize with upstream tinytest (6c81be7)\n   o Make test-changelist faster (7622d26)\n   o Reduce the timeout in the main/fork test. (ab14f7c)\n   o New evhttp function to adjust initial retry timeout (350a3c4)\n   o Make regression tests run over 3x faster. (67a1763)\n   o Use test_timeval_diff_eq more consistently (b77b43f)\n",
                    "rendered": {
                      "text": "   o Add an (internal) usleep function for use by unit tests (f25d9d3)\n   o Synchronize with upstream tinytest (6c81be7)\n   o Make test-changelist faster (7622d26)\n   o Reduce the timeout in the main/fork test. (ab14f7c)\n   o New evhttp function to adjust initial retry timeout (350a3c4)\n   o Make regression tests run over 3x faster. (67a1763)\n   o Use test_timeval_diff_eq more consistently (b77b43f)\n",
                      "markdown": "`   o Add an (internal) usleep function for use by unit tests (f25d9d3)\n   o Synchronize with upstream tinytest (6c81be7)\n   o Make test-changelist faster (7622d26)\n   o Reduce the timeout in the main/fork test. (ab14f7c)\n   o New evhttp function to adjust initial retry timeout (350a3c4)\n   o Make regression tests run over 3x faster. (67a1763)\n   o Use test_timeval_diff_eq more consistently (b77b43f)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1759,
                  "startColumn": 10,
                  "endLine": 1759,
                  "endColumn": 19,
                  "snippet": {
                    "text": "   o Added --enable-event-debugging in configure (bc7b4e4, a9c2c9a Mark Ellzey)\n   o Debug addition for printing usec on TIMEOUT debugging. (ac43ce0 Mark Ellzey)\n   o Added usec debug in another area for debug (3baab0d Mark Ellzey)\n   o added timeout debug logs to include event ptr. (4b7d298 Mark Ellzey)\n   o more event dbg updates (6727543 Mark Ellzey)\n   o Clarify event_enable_debug_logging a little (6207826)\n   o Make --enable-verbose-debug option match its help text (10c3450)\n",
                    "rendered": {
                      "text": "   o Added --enable-event-debugging in configure (bc7b4e4, a9c2c9a Mark Ellzey)\n   o Debug addition for printing usec on TIMEOUT debugging. (ac43ce0 Mark Ellzey)\n   o Added usec debug in another area for debug (3baab0d Mark Ellzey)\n   o added timeout debug logs to include event ptr. (4b7d298 Mark Ellzey)\n   o more event dbg updates (6727543 Mark Ellzey)\n   o Clarify event_enable_debug_logging a little (6207826)\n   o Make --enable-verbose-debug option match its help text (10c3450)\n",
                      "markdown": "`   o Added --enable-event-debugging in configure (bc7b4e4, a9c2c9a Mark Ellzey)\n   o Debug addition for printing usec on TIMEOUT debugging. (ac43ce0 Mark Ellzey)\n   o Added usec debug in another area for debug (3baab0d Mark Ellzey)\n   o added timeout debug logs to include event ptr. (4b7d298 Mark Ellzey)\n   o more event dbg updates (6727543 Mark Ellzey)\n   o Clarify event_enable_debug_logging a little (6207826)\n   o Make --enable-verbose-debug option match its help text (10c3450)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1757,
                  "startColumn": 40,
                  "endLine": 1757,
                  "endColumn": 49,
                  "snippet": {
                    "text": "   o munge the debug_lock signature before freeing it: it might help us\n     catch use-after-free (f28084d)\n   o Added --enable-event-debugging in configure (bc7b4e4, a9c2c9a Mark Ellzey)\n   o Debug addition for printing usec on TIMEOUT debugging. (ac43ce0 Mark Ellzey)\n   o Added usec debug in another area for debug (3baab0d Mark Ellzey)\n   o added timeout debug logs to include event ptr. (4b7d298 Mark Ellzey)\n   o more event dbg updates (6727543 Mark Ellzey)\n",
                    "rendered": {
                      "text": "   o munge the debug_lock signature before freeing it: it might help us\n     catch use-after-free (f28084d)\n   o Added --enable-event-debugging in configure (bc7b4e4, a9c2c9a Mark Ellzey)\n   o Debug addition for printing usec on TIMEOUT debugging. (ac43ce0 Mark Ellzey)\n   o Added usec debug in another area for debug (3baab0d Mark Ellzey)\n   o added timeout debug logs to include event ptr. (4b7d298 Mark Ellzey)\n   o more event dbg updates (6727543 Mark Ellzey)\n",
                      "markdown": "`   o munge the debug_lock signature before freeing it: it might help us\n     catch use-after-free (f28084d)\n   o Added --enable-event-debugging in configure (bc7b4e4, a9c2c9a Mark Ellzey)\n   o Debug addition for printing usec on TIMEOUT debugging. (ac43ce0 Mark Ellzey)\n   o Added usec debug in another area for debug (3baab0d Mark Ellzey)\n   o added timeout debug logs to include event ptr. (4b7d298 Mark Ellzey)\n   o more event dbg updates (6727543 Mark Ellzey)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1735,
                  "startColumn": 47,
                  "endLine": 1735,
                  "endColumn": 56,
                  "snippet": {
                    "text": "     (9f560b)\n   o In configure, test for _WIN32 not WIN32. (85078b1 Peter Rosin)\n   o Do not define WIN32 in Makefile.nmake (d41f3ea Peter Rosin)\n   o Provide the autoconf m4 macros for the new OpenSSL via pkg-config\n     stuff. (674dc3d Harlan Stenn)\n   o Use pkg-config (if available) to handle OpenSSL. (1c63860 Harlan Stenn)\n   o We need AM_CPPFLAGS when compiling bufferevent_openssl.c (6d2613b\n",
                    "rendered": {
                      "text": "     (9f560b)\n   o In configure, test for _WIN32 not WIN32. (85078b1 Peter Rosin)\n   o Do not define WIN32 in Makefile.nmake (d41f3ea Peter Rosin)\n   o Provide the autoconf m4 macros for the new OpenSSL via pkg-config\n     stuff. (674dc3d Harlan Stenn)\n   o Use pkg-config (if available) to handle OpenSSL. (1c63860 Harlan Stenn)\n   o We need AM_CPPFLAGS when compiling bufferevent_openssl.c (6d2613b\n",
                      "markdown": "`     (9f560b)\n   o In configure, test for _WIN32 not WIN32. (85078b1 Peter Rosin)\n   o Do not define WIN32 in Makefile.nmake (d41f3ea Peter Rosin)\n   o Provide the autoconf m4 macros for the new OpenSSL via pkg-config\n     stuff. (674dc3d Harlan Stenn)\n   o Use pkg-config (if available) to handle OpenSSL. (1c63860 Harlan Stenn)\n   o We need AM_CPPFLAGS when compiling bufferevent_openssl.c (6d2613b\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1681,
                  "startColumn": 33,
                  "endLine": 1681,
                  "endColumn": 39,
                  "snippet": {
                    "text": "   o Allow users to set allow_dirty_shutdown (099d27d Catalin Patulea)\n   o Tweak allow_dirty_shutdown documentation (a44cd2b)\n   o Fix two issues in the allow_dirty_shutdown code. (f3b89de)\n   o Add a bufferevent_getcb() to find a bufferevent's current\n     callbacks (a650394)\n   o bufferevent: Add functions to set/get max_single_read/write\n     values. (998c813 Alexander Drozdov)\n",
                    "rendered": {
                      "text": "   o Allow users to set allow_dirty_shutdown (099d27d Catalin Patulea)\n   o Tweak allow_dirty_shutdown documentation (a44cd2b)\n   o Fix two issues in the allow_dirty_shutdown code. (f3b89de)\n   o Add a bufferevent_getcb() to find a bufferevent's current\n     callbacks (a650394)\n   o bufferevent: Add functions to set/get max_single_read/write\n     values. (998c813 Alexander Drozdov)\n",
                      "markdown": "`   o Allow users to set allow_dirty_shutdown (099d27d Catalin Patulea)\n   o Tweak allow_dirty_shutdown documentation (a44cd2b)\n   o Fix two issues in the allow_dirty_shutdown code. (f3b89de)\n   o Add a bufferevent_getcb() to find a bufferevent's current\n     callbacks (a650394)\n   o bufferevent: Add functions to set/get max_single_read/write\n     values. (998c813 Alexander Drozdov)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1658,
                  "startColumn": 44,
                  "endLine": 1658,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n New functions and features: evbuffers\n   o Add evbuffer_add_file_segment() so one fd can be used efficiently\n     in more than one evbuffer_add_file at a time (e72afae, c2d9884,\n     3f405d2, 0aad014)\n   o Fix windows file segment mappings (8254de7)\n   o Allow evbuffer_ptr_set to yield a point just after the end of the\n",
                    "rendered": {
                      "text": "\n New functions and features: evbuffers\n   o Add evbuffer_add_file_segment() so one fd can be used efficiently\n     in more than one evbuffer_add_file at a time (e72afae, c2d9884,\n     3f405d2, 0aad014)\n   o Fix windows file segment mappings (8254de7)\n   o Allow evbuffer_ptr_set to yield a point just after the end of the\n",
                      "markdown": "`\n New functions and features: evbuffers\n   o Add evbuffer_add_file_segment() so one fd can be used efficiently\n     in more than one evbuffer_add_file at a time (e72afae, c2d9884,\n     3f405d2, 0aad014)\n   o Fix windows file segment mappings (8254de7)\n   o Allow evbuffer_ptr_set to yield a point just after the end of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1643,
                  "startColumn": 4,
                  "endLine": 1643,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   o Make evbase_priority_init() and evbase_get_npriorities()\n     threadsafe (3c55b5e)\n   o New event_base_update_cache_time() to set cached_tv to current\n     time (212533e Abel Mathew)\n   o Add event_self_cbarg() to be used in conjunction with\n     event_new(). (ed36e6a Ross Lagerwall, fa931bb, 09a1906, 1338e6c,\n     33e43ef)\n",
                    "rendered": {
                      "text": "   o Make evbase_priority_init() and evbase_get_npriorities()\n     threadsafe (3c55b5e)\n   o New event_base_update_cache_time() to set cached_tv to current\n     time (212533e Abel Mathew)\n   o Add event_self_cbarg() to be used in conjunction with\n     event_new(). (ed36e6a Ross Lagerwall, fa931bb, 09a1906, 1338e6c,\n     33e43ef)\n",
                      "markdown": "`   o Make evbase_priority_init() and evbase_get_npriorities()\n     threadsafe (3c55b5e)\n   o New event_base_update_cache_time() to set cached_tv to current\n     time (212533e Abel Mathew)\n   o Add event_self_cbarg() to be used in conjunction with\n     event_new(). (ed36e6a Ross Lagerwall, fa931bb, 09a1906, 1338e6c,\n     33e43ef)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1617,
                  "startColumn": 61,
                  "endLine": 1617,
                  "endColumn": 67,
                  "snippet": {
                    "text": "   o Clean up error handling in epoll_apply_one_change() a little (2d55a19)\n\n Performance: Evport backend\n   o evport: use evmap_io to track fdinfo status. Should save time and\n     RAM. (4687ce4)\n   o evport: Remove a linear search over recent events when\n     reactivating them (0f77efe)\n",
                    "rendered": {
                      "text": "   o Clean up error handling in epoll_apply_one_change() a little (2d55a19)\n\n Performance: Evport backend\n   o evport: use evmap_io to track fdinfo status. Should save time and\n     RAM. (4687ce4)\n   o evport: Remove a linear search over recent events when\n     reactivating them (0f77efe)\n",
                      "markdown": "`   o Clean up error handling in epoll_apply_one_change() a little (2d55a19)\n\n Performance: Evport backend\n   o evport: use evmap_io to track fdinfo status. Should save time and\n     RAM. (4687ce4)\n   o evport: Remove a linear search over recent events when\n     reactivating them (0f77efe)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1588,
                  "startColumn": 62,
                  "endLine": 1588,
                  "endColumn": 71,
                  "snippet": {
                    "text": "     comparison (2a83ecc)\n   o Optimization in event_process_active(): ignore maxcb & endtime\n     for highest priority events. (a9866aa Alexander Drozdov)\n   o Bypass event_add when using event_base_once() for a 0-sec timeout (35c5c95)\n   o Remove the eventqueue list and the ev_next pointers. (604569b 066775e)\n\n Performance: Evbuffers\n",
                    "rendered": {
                      "text": "     comparison (2a83ecc)\n   o Optimization in event_process_active(): ignore maxcb & endtime\n     for highest priority events. (a9866aa Alexander Drozdov)\n   o Bypass event_add when using event_base_once() for a 0-sec timeout (35c5c95)\n   o Remove the eventqueue list and the ev_next pointers. (604569b 066775e)\n\n Performance: Evbuffers\n",
                      "markdown": "`     comparison (2a83ecc)\n   o Optimization in event_process_active(): ignore maxcb & endtime\n     for highest priority events. (a9866aa Alexander Drozdov)\n   o Bypass event_add when using event_base_once() for a 0-sec timeout (35c5c95)\n   o Remove the eventqueue list and the ev_next pointers. (604569b 066775e)\n\n Performance: Evbuffers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1578,
                  "startColumn": 62,
                  "endLine": 1578,
                  "endColumn": 71,
                  "snippet": {
                    "text": "     6494772, d313c29, 974d004)\n   o Disabled code to optimize the case where we reinsert an existing\n     timeout (e47042f, 09cbc3d)\n   o Remove a needless base-notify when rescheduling the first timeout (77a96fd)\n   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n     separate functions. needs testing (efc4dc5)\n",
                    "rendered": {
                      "text": "     6494772, d313c29, 974d004)\n   o Disabled code to optimize the case where we reinsert an existing\n     timeout (e47042f, 09cbc3d)\n   o Remove a needless base-notify when rescheduling the first timeout (77a96fd)\n   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n     separate functions. needs testing (efc4dc5)\n",
                      "markdown": "`     6494772, d313c29, 974d004)\n   o Disabled code to optimize the case where we reinsert an existing\n     timeout (e47042f, 09cbc3d)\n   o Remove a needless base-notify when rescheduling the first timeout (77a96fd)\n   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n     separate functions. needs testing (efc4dc5)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1577,
                  "startColumn": 4,
                  "endLine": 1577,
                  "endColumn": 13,
                  "snippet": {
                    "text": "     TAILQ for cases where we don't need queue-like behavior. (f9db33d,\n     6494772, d313c29, 974d004)\n   o Disabled code to optimize the case where we reinsert an existing\n     timeout (e47042f, 09cbc3d)\n   o Remove a needless base-notify when rescheduling the first timeout (77a96fd)\n   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n",
                    "rendered": {
                      "text": "     TAILQ for cases where we don't need queue-like behavior. (f9db33d,\n     6494772, d313c29, 974d004)\n   o Disabled code to optimize the case where we reinsert an existing\n     timeout (e47042f, 09cbc3d)\n   o Remove a needless base-notify when rescheduling the first timeout (77a96fd)\n   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n",
                      "markdown": "`     TAILQ for cases where we don't need queue-like behavior. (f9db33d,\n     6494772, d313c29, 974d004)\n   o Disabled code to optimize the case where we reinsert an existing\n     timeout (e47042f, 09cbc3d)\n   o Remove a needless base-notify when rescheduling the first timeout (77a96fd)\n   o Save a needless comparison when removing/adjusting timeouts (dd5189b)\n   o Possible optimization: split event_queue_insert/remove into\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1568,
                  "startColumn": 40,
                  "endLine": 1568,
                  "endColumn": 45,
                  "snippet": {
                    "text": " Libevent 2.1.1-alpha includes a number of new features and performance\n improvements.  The log below tries to organize them by rough area of\n effect.  It omits some commits which were pure bugfixes on other commits\n listed below.  For more detail, see the git changelogs.  For more\n insight, see the \"whatsnew-2.1.txt\" document included in the Libevent\n 2.1.1-alpha distribution.\n\n",
                    "rendered": {
                      "text": " Libevent 2.1.1-alpha includes a number of new features and performance\n improvements.  The log below tries to organize them by rough area of\n effect.  It omits some commits which were pure bugfixes on other commits\n listed below.  For more detail, see the git changelogs.  For more\n insight, see the \"whatsnew-2.1.txt\" document included in the Libevent\n 2.1.1-alpha distribution.\n\n",
                      "markdown": "` Libevent 2.1.1-alpha includes a number of new features and performance\n improvements.  The log below tries to organize them by rough area of\n effect.  It omits some commits which were pure bugfixes on other commits\n listed below.  For more detail, see the git changelogs.  For more\n insight, see the \"whatsnew-2.1.txt\" document included in the Libevent\n 2.1.1-alpha distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1513,
                  "startColumn": 28,
                  "endLine": 1513,
                  "endColumn": 37,
                  "snippet": {
                    "text": "   o We now require automake 1.9 or later. Modernize! (b7f6e89)\n   o Rename configure.in to configure.ac. (b3fea67 Ross Lagerwall)\n   o Use correct openssl libs and includes in pkgconfig file (d70af27)\n   o Use the same CFLAGS for openssl when building unit tests as with\n     libevent (1d9d511)\n\nDOCUMENTATION\n",
                    "rendered": {
                      "text": "   o We now require automake 1.9 or later. Modernize! (b7f6e89)\n   o Rename configure.in to configure.ac. (b3fea67 Ross Lagerwall)\n   o Use correct openssl libs and includes in pkgconfig file (d70af27)\n   o Use the same CFLAGS for openssl when building unit tests as with\n     libevent (1d9d511)\n\nDOCUMENTATION\n",
                      "markdown": "`   o We now require automake 1.9 or later. Modernize! (b7f6e89)\n   o Rename configure.in to configure.ac. (b3fea67 Ross Lagerwall)\n   o Use correct openssl libs and includes in pkgconfig file (d70af27)\n   o Use the same CFLAGS for openssl when building unit tests as with\n     libevent (1d9d511)\n\nDOCUMENTATION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1512,
                  "startColumn": 16,
                  "endLine": 1512,
                  "endColumn": 25,
                  "snippet": {
                    "text": "   o Fix handling of no-python case for nonrecursive make (1e3123d)\n   o We now require automake 1.9 or later. Modernize! (b7f6e89)\n   o Rename configure.in to configure.ac. (b3fea67 Ross Lagerwall)\n   o Use correct openssl libs and includes in pkgconfig file (d70af27)\n   o Use the same CFLAGS for openssl when building unit tests as with\n     libevent (1d9d511)\n\n",
                    "rendered": {
                      "text": "   o Fix handling of no-python case for nonrecursive make (1e3123d)\n   o We now require automake 1.9 or later. Modernize! (b7f6e89)\n   o Rename configure.in to configure.ac. (b3fea67 Ross Lagerwall)\n   o Use correct openssl libs and includes in pkgconfig file (d70af27)\n   o Use the same CFLAGS for openssl when building unit tests as with\n     libevent (1d9d511)\n\n",
                      "markdown": "`   o Fix handling of no-python case for nonrecursive make (1e3123d)\n   o We now require automake 1.9 or later. Modernize! (b7f6e89)\n   o Rename configure.in to configure.ac. (b3fea67 Ross Lagerwall)\n   o Use correct openssl libs and includes in pkgconfig file (d70af27)\n   o Use the same CFLAGS for openssl when building unit tests as with\n     libevent (1d9d511)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1501,
                  "startColumn": 23,
                  "endLine": 1501,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n   o Split long lists in Makefile.am into one-item-per-line (2711cda)\n   o Remove unnecessary code in configure.in. (e65914f Ross Lagerwall)\n   o attempt to support OpenSSL in Makefile.nmake (eba0eb2 Patrick Pelletier)\n   o Use newer syntax for autoconf/automake init (7d60ba8)\n   o Enable silent build rules by default. Override with V=1 (7b18e5c)\n   o Switch to non-recursive makefiles (7092f3b)\n",
                    "rendered": {
                      "text": "\n   o Split long lists in Makefile.am into one-item-per-line (2711cda)\n   o Remove unnecessary code in configure.in. (e65914f Ross Lagerwall)\n   o attempt to support OpenSSL in Makefile.nmake (eba0eb2 Patrick Pelletier)\n   o Use newer syntax for autoconf/automake init (7d60ba8)\n   o Enable silent build rules by default. Override with V=1 (7b18e5c)\n   o Switch to non-recursive makefiles (7092f3b)\n",
                      "markdown": "`\n   o Split long lists in Makefile.am into one-item-per-line (2711cda)\n   o Remove unnecessary code in configure.in. (e65914f Ross Lagerwall)\n   o attempt to support OpenSSL in Makefile.nmake (eba0eb2 Patrick Pelletier)\n   o Use newer syntax for autoconf/automake init (7d60ba8)\n   o Enable silent build rules by default. Override with V=1 (7b18e5c)\n   o Switch to non-recursive makefiles (7092f3b)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1466,
                  "startColumn": 5,
                  "endLine": 1466,
                  "endColumn": 11,
                  "snippet": {
                    "text": " o Actually send NULL request in http_bad_request_test (b693c32 Sebastian Hahn)\n o add some (void) casts for unused variables (65707d7 Sebastian Hahn)\n o Refactor test_getaddrinfo_async_cancel_stress() (48c44a6 Sebastian Hahn)\n o Be nice and \"handle\" error return values in sample code (4bac793 Sebastian Hahn)\n o Check return value of evbuffer_add_cb in tests (93a1abb Sebastian Hahn)\n o Remote some dead code from dns-example.c (744c745 Sebastian Hahn)\n o Zero a struct sockaddr_in before using it (646f9fe Sebastian Hahn)\n",
                    "rendered": {
                      "text": " o Actually send NULL request in http_bad_request_test (b693c32 Sebastian Hahn)\n o add some (void) casts for unused variables (65707d7 Sebastian Hahn)\n o Refactor test_getaddrinfo_async_cancel_stress() (48c44a6 Sebastian Hahn)\n o Be nice and \"handle\" error return values in sample code (4bac793 Sebastian Hahn)\n o Check return value of evbuffer_add_cb in tests (93a1abb Sebastian Hahn)\n o Remote some dead code from dns-example.c (744c745 Sebastian Hahn)\n o Zero a struct sockaddr_in before using it (646f9fe Sebastian Hahn)\n",
                      "markdown": "` o Actually send NULL request in http_bad_request_test (b693c32 Sebastian Hahn)\n o add some (void) casts for unused variables (65707d7 Sebastian Hahn)\n o Refactor test_getaddrinfo_async_cancel_stress() (48c44a6 Sebastian Hahn)\n o Be nice and \"handle\" error return values in sample code (4bac793 Sebastian Hahn)\n o Check return value of evbuffer_add_cb in tests (93a1abb Sebastian Hahn)\n o Remote some dead code from dns-example.c (744c745 Sebastian Hahn)\n o Zero a struct sockaddr_in before using it (646f9fe Sebastian Hahn)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1459,
                  "startColumn": 28,
                  "endLine": 1459,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nBUGS IN TESTS:\n o Fix test.sh output on solaris (b4f89b6 Dave Hart)\n o Make test-eof fail with a timeout if we never get an eof. (05a2c22 Harlan Stenn)\n o Use %s with printf in test.sh (039b9bd)\n o Add an assert to appease clang's static analyzer (b0ff7eb Sebastian Hahn)\n o Add a forgotten return value check in the unit tests (3819b62 Sebastian Hahn)\n",
                    "rendered": {
                      "text": "\nBUGS IN TESTS:\n o Fix test.sh output on solaris (b4f89b6 Dave Hart)\n o Make test-eof fail with a timeout if we never get an eof. (05a2c22 Harlan Stenn)\n o Use %s with printf in test.sh (039b9bd)\n o Add an assert to appease clang's static analyzer (b0ff7eb Sebastian Hahn)\n o Add a forgotten return value check in the unit tests (3819b62 Sebastian Hahn)\n",
                      "markdown": "`\nBUGS IN TESTS:\n o Fix test.sh output on solaris (b4f89b6 Dave Hart)\n o Make test-eof fail with a timeout if we never get an eof. (05a2c22 Harlan Stenn)\n o Use %s with printf in test.sh (039b9bd)\n o Add an assert to appease clang's static analyzer (b0ff7eb Sebastian Hahn)\n o Add a forgotten return value check in the unit tests (3819b62 Sebastian Hahn)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1427,
                  "startColumn": 65,
                  "endLine": 1427,
                  "endColumn": 71,
                  "snippet": {
                    "text": " o Make --enable-gcc-warnings a no-op if not using gcc (3267703)\n o Fix a type error in our (unused) arc4random_stir() (f736198)\n o Correctly detect and stop non-chunked http requests when the body is too long (63a715e)\n o Have event_base_gettimeofday_cached() always return wall-clock time (a459ef7)\n o Workaround for http crash bug 3078187 (5dc5662 Tomash Brechko)\n o Fix incorrect assertions and possible use-after-free in evrpc_free() (4b8f02f Christophe Fillot)\n o Reset outgoing http connection when read data in idle state. (272823f Tomash Brechko)\n",
                    "rendered": {
                      "text": " o Make --enable-gcc-warnings a no-op if not using gcc (3267703)\n o Fix a type error in our (unused) arc4random_stir() (f736198)\n o Correctly detect and stop non-chunked http requests when the body is too long (63a715e)\n o Have event_base_gettimeofday_cached() always return wall-clock time (a459ef7)\n o Workaround for http crash bug 3078187 (5dc5662 Tomash Brechko)\n o Fix incorrect assertions and possible use-after-free in evrpc_free() (4b8f02f Christophe Fillot)\n o Reset outgoing http connection when read data in idle state. (272823f Tomash Brechko)\n",
                      "markdown": "` o Make --enable-gcc-warnings a no-op if not using gcc (3267703)\n o Fix a type error in our (unused) arc4random_stir() (f736198)\n o Correctly detect and stop non-chunked http requests when the body is too long (63a715e)\n o Have event_base_gettimeofday_cached() always return wall-clock time (a459ef7)\n o Workaround for http crash bug 3078187 (5dc5662 Tomash Brechko)\n o Fix incorrect assertions and possible use-after-free in evrpc_free() (4b8f02f Christophe Fillot)\n o Reset outgoing http connection when read data in idle state. (272823f Tomash Brechko)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1415,
                  "startColumn": 25,
                  "endLine": 1415,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\nChanges in version 2.0.11-stable (27 Apr 2011)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES:\n o Fix evport handling of POLLHUP and POLLERR (b42ce4b)\n o Fix compilation on Windows with NDEBUG (cb8059d)\n",
                    "rendered": {
                      "text": "\n\nChanges in version 2.0.11-stable (27 Apr 2011)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES:\n o Fix evport handling of POLLHUP and POLLERR (b42ce4b)\n o Fix compilation on Windows with NDEBUG (cb8059d)\n",
                      "markdown": "`\n\nChanges in version 2.0.11-stable (27 Apr 2011)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES:\n o Fix evport handling of POLLHUP and POLLERR (b42ce4b)\n o Fix compilation on Windows with NDEBUG (cb8059d)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1402,
                  "startColumn": 23,
                  "endLine": 1402,
                  "endColumn": 31,
                  "snippet": {
                    "text": " o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n o Make sure TINYTEST_LOCAL is defined when building tinytest.c (8fa030c Peter Rosin)\n",
                    "rendered": {
                      "text": " o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n o Make sure TINYTEST_LOCAL is defined when building tinytest.c (8fa030c Peter Rosin)\n",
                      "markdown": "` o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n o Make sure TINYTEST_LOCAL is defined when building tinytest.c (8fa030c Peter Rosin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1401,
                  "startColumn": 28,
                  "endLine": 1401,
                  "endColumn": 37,
                  "snippet": {
                    "text": " o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n",
                    "rendered": {
                      "text": " o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n",
                      "markdown": "` o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1396,
                  "startColumn": 19,
                  "endLine": 1396,
                  "endColumn": 28,
                  "snippet": {
                    "text": " o Libtool brings in the dependencies of libevent_openssl.la automatically (7b819f2 Peter Rosin)\n o Use OPENSSL_LIBS in Makefile.am (292092e Sebastian Hahn)\n o Move the win32 detection in configure.in (ceb03b9 Sebastian Hahn)\n o Correctly detect openssl on windows (6619385 Sebastian Hahn)\n o Fix a compile warning with zlib 1.2.4 and 1.2.5 (5786b91 Sebastian Hahn)\n o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n",
                    "rendered": {
                      "text": " o Libtool brings in the dependencies of libevent_openssl.la automatically (7b819f2 Peter Rosin)\n o Use OPENSSL_LIBS in Makefile.am (292092e Sebastian Hahn)\n o Move the win32 detection in configure.in (ceb03b9 Sebastian Hahn)\n o Correctly detect openssl on windows (6619385 Sebastian Hahn)\n o Fix a compile warning with zlib 1.2.4 and 1.2.5 (5786b91 Sebastian Hahn)\n o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n",
                      "markdown": "` o Libtool brings in the dependencies of libevent_openssl.la automatically (7b819f2 Peter Rosin)\n o Use OPENSSL_LIBS in Makefile.am (292092e Sebastian Hahn)\n o Move the win32 detection in configure.in (ceb03b9 Sebastian Hahn)\n o Correctly detect openssl on windows (6619385 Sebastian Hahn)\n o Fix a compile warning with zlib 1.2.4 and 1.2.5 (5786b91 Sebastian Hahn)\n o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1373,
                  "startColumn": 39,
                  "endLine": 1373,
                  "endColumn": 44,
                  "snippet": {
                    "text": " o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n o Fix select.c compilation on systems with no NFDBITS (49d1136)\n o Fix a few warnings on OpenBSD (8ee9f9c Nicholas Marriott)\n o Don't break when building tests from git without python installed (b031adf)\n o Don't install event_rpcgen.py when --disable-libevent-install is used (e23cda3 Harlan Stenn)\n o Fix AIX build issue with TAILQ_FOREACH definition (e934096)\n\n",
                    "rendered": {
                      "text": " o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n o Fix select.c compilation on systems with no NFDBITS (49d1136)\n o Fix a few warnings on OpenBSD (8ee9f9c Nicholas Marriott)\n o Don't break when building tests from git without python installed (b031adf)\n o Don't install event_rpcgen.py when --disable-libevent-install is used (e23cda3 Harlan Stenn)\n o Fix AIX build issue with TAILQ_FOREACH definition (e934096)\n\n",
                      "markdown": "` o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n o Fix select.c compilation on systems with no NFDBITS (49d1136)\n o Fix a few warnings on OpenBSD (8ee9f9c Nicholas Marriott)\n o Don't break when building tests from git without python installed (b031adf)\n o Don't install event_rpcgen.py when --disable-libevent-install is used (e23cda3 Harlan Stenn)\n o Fix AIX build issue with TAILQ_FOREACH definition (e934096)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1367,
                  "startColumn": 54,
                  "endLine": 1367,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n o Fix tinytest invocation from windows shell (57def34 Ed Day)\n\nBUILD FIXES\n o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n",
                    "rendered": {
                      "text": "\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n o Fix tinytest invocation from windows shell (57def34 Ed Day)\n\nBUILD FIXES\n o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n",
                      "markdown": "`\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n o Fix tinytest invocation from windows shell (57def34 Ed Day)\n\nBUILD FIXES\n o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1324,
                  "startColumn": 9,
                  "endLine": 1324,
                  "endColumn": 18,
                  "snippet": {
                    "text": "Changes in version 2.0.14-stable (31 Aug 2011)\nBUGFIXES (bufferevents and evbuffers):\n o Propagate errors on the underlying bufferevent to the user. (4a34394 Joachim Bauch)\n o Ignore OpenSSL deprecation warnings on OS X (5d1b255 Sebastian Hahn)\n o Fix handling of group rate limits under 64 bytes of burst (6d5440e)\n o Solaris sendfile: correctly detect amount of data sent (643922e Michael Herf)\n o Make rate limiting work with common_timeout logic (5b18f13)\n",
                    "rendered": {
                      "text": "Changes in version 2.0.14-stable (31 Aug 2011)\nBUGFIXES (bufferevents and evbuffers):\n o Propagate errors on the underlying bufferevent to the user. (4a34394 Joachim Bauch)\n o Ignore OpenSSL deprecation warnings on OS X (5d1b255 Sebastian Hahn)\n o Fix handling of group rate limits under 64 bytes of burst (6d5440e)\n o Solaris sendfile: correctly detect amount of data sent (643922e Michael Herf)\n o Make rate limiting work with common_timeout logic (5b18f13)\n",
                      "markdown": "`Changes in version 2.0.14-stable (31 Aug 2011)\nBUGFIXES (bufferevents and evbuffers):\n o Propagate errors on the underlying bufferevent to the user. (4a34394 Joachim Bauch)\n o Ignore OpenSSL deprecation warnings on OS X (5d1b255 Sebastian Hahn)\n o Fix handling of group rate limits under 64 bytes of burst (6d5440e)\n o Solaris sendfile: correctly detect amount of data sent (643922e Michael Herf)\n o Make rate limiting work with common_timeout logic (5b18f13)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1313,
                  "startColumn": 33,
                  "endLine": 1313,
                  "endColumn": 42,
                  "snippet": {
                    "text": " o refer to non-deprecated evdns functions in comments (ba5c27d Greg Hazel)\n\nBUILD AND TESTING FIXES:\n o le-proxy and regress depend on openssl directly (9ae061a Sergey Avseyev)\n o Use _SOURCES, not _sources, in sample/Makefile.am (7f82382)\n o Fixed compiler warnings for unchecked read/write calls. (c3b62fd Mark Ellzey)\n o Make write-checking fixes use tt_fail_perror (2b76847)\n",
                    "rendered": {
                      "text": " o refer to non-deprecated evdns functions in comments (ba5c27d Greg Hazel)\n\nBUILD AND TESTING FIXES:\n o le-proxy and regress depend on openssl directly (9ae061a Sergey Avseyev)\n o Use _SOURCES, not _sources, in sample/Makefile.am (7f82382)\n o Fixed compiler warnings for unchecked read/write calls. (c3b62fd Mark Ellzey)\n o Make write-checking fixes use tt_fail_perror (2b76847)\n",
                      "markdown": "` o refer to non-deprecated evdns functions in comments (ba5c27d Greg Hazel)\n\nBUILD AND TESTING FIXES:\n o le-proxy and regress depend on openssl directly (9ae061a Sergey Avseyev)\n o Use _SOURCES, not _sources, in sample/Makefile.am (7f82382)\n o Fixed compiler warnings for unchecked read/write calls. (c3b62fd Mark Ellzey)\n o Make write-checking fixes use tt_fail_perror (2b76847)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1277,
                  "startColumn": 20,
                  "endLine": 1277,
                  "endColumn": 29,
                  "snippet": {
                    "text": "BUGFIXES (bufferevent_openssl):\n o Refactor amount-to-read calculations in buffervent_ssl consider_reading() (a186e73 Mark Ellzey)\n o Move SSL rate-limit enforcement into bytes_to_read() (96c562f)\n o Avoid spinning on OpenSSL reads (2aa036f Mark Ellzey)\n\nBUGFIXES (dns)\n o Empty DNS reply with OK status is another way to say NODATA. (21a08d6 Leonid Evdokimov)\n",
                    "rendered": {
                      "text": "BUGFIXES (bufferevent_openssl):\n o Refactor amount-to-read calculations in buffervent_ssl consider_reading() (a186e73 Mark Ellzey)\n o Move SSL rate-limit enforcement into bytes_to_read() (96c562f)\n o Avoid spinning on OpenSSL reads (2aa036f Mark Ellzey)\n\nBUGFIXES (dns)\n o Empty DNS reply with OK status is another way to say NODATA. (21a08d6 Leonid Evdokimov)\n",
                      "markdown": "`BUGFIXES (bufferevent_openssl):\n o Refactor amount-to-read calculations in buffervent_ssl consider_reading() (a186e73 Mark Ellzey)\n o Move SSL rate-limit enforcement into bytes_to_read() (96c562f)\n o Avoid spinning on OpenSSL reads (2aa036f Mark Ellzey)\n\nBUGFIXES (dns)\n o Empty DNS reply with OK status is another way to say NODATA. (21a08d6 Leonid Evdokimov)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1212,
                  "startColumn": 24,
                  "endLine": 1212,
                  "endColumn": 29,
                  "snippet": {
                    "text": " o Properly zero the kevent in kq_setup_kevent() (c2c7b39 Sebastian Hahn)\n\nBUILD FIXES:\n o Added OPENSSL_LDFLAGS env variable which is appended to SSL checks. (9278196 Mark Ellzey)\n o Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD (2d67b63 Mark Ellzey)\n o Don't do clang version detection when disabling some flags (083296b Sebastian Hahn)\n\n",
                    "rendered": {
                      "text": " o Properly zero the kevent in kq_setup_kevent() (c2c7b39 Sebastian Hahn)\n\nBUILD FIXES:\n o Added OPENSSL_LDFLAGS env variable which is appended to SSL checks. (9278196 Mark Ellzey)\n o Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD (2d67b63 Mark Ellzey)\n o Don't do clang version detection when disabling some flags (083296b Sebastian Hahn)\n\n",
                      "markdown": "` o Properly zero the kevent in kq_setup_kevent() (c2c7b39 Sebastian Hahn)\n\nBUILD FIXES:\n o Added OPENSSL_LDFLAGS env variable which is appended to SSL checks. (9278196 Mark Ellzey)\n o Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD (2d67b63 Mark Ellzey)\n o Don't do clang version detection when disabling some flags (083296b Sebastian Hahn)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1192,
                  "startColumn": 40,
                  "endLine": 1192,
                  "endColumn": 45,
                  "snippet": {
                    "text": "COMPILATION FIXES:\n o Fix a compilation error with MSVC 2005 due to use of mode_t (336dcae)\n o Configure with gcc older than 2.95 (4a6fd43 Sebastian Hahn)\n o Generate event-config.h with a single sed script (30b6f88 Zack Weinberg)\n\nFORWARD-COMPATIBILITY:\n o Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_* (d1a03b2)\n",
                    "rendered": {
                      "text": "COMPILATION FIXES:\n o Fix a compilation error with MSVC 2005 due to use of mode_t (336dcae)\n o Configure with gcc older than 2.95 (4a6fd43 Sebastian Hahn)\n o Generate event-config.h with a single sed script (30b6f88 Zack Weinberg)\n\nFORWARD-COMPATIBILITY:\n o Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_* (d1a03b2)\n",
                      "markdown": "`COMPILATION FIXES:\n o Fix a compilation error with MSVC 2005 due to use of mode_t (336dcae)\n o Configure with gcc older than 2.95 (4a6fd43 Sebastian Hahn)\n o Generate event-config.h with a single sed script (30b6f88 Zack Weinberg)\n\nFORWARD-COMPATIBILITY:\n o Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_* (d1a03b2)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1177,
                  "startColumn": 47,
                  "endLine": 1177,
                  "endColumn": 56,
                  "snippet": {
                    "text": " o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n o Fixed potential double-readcb execution with openssl bufferevents. (4e62cd1 Mark Ellzey)\n\nBUGFIXES (DNS):\n o Cancel a probe request when the server is freed, and ignore cancelled probe callbacks (94d2336 Greg Hazel)\n",
                    "rendered": {
                      "text": " o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n o Fixed potential double-readcb execution with openssl bufferevents. (4e62cd1 Mark Ellzey)\n\nBUGFIXES (DNS):\n o Cancel a probe request when the server is freed, and ignore cancelled probe callbacks (94d2336 Greg Hazel)\n",
                      "markdown": "` o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n o Fixed potential double-readcb execution with openssl bufferevents. (4e62cd1 Mark Ellzey)\n\nBUGFIXES (DNS):\n o Cancel a probe request when the server is freed, and ignore cancelled probe callbacks (94d2336 Greg Hazel)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1173,
                  "startColumn": 5,
                  "endLine": 1173,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Changes in version 2.0.19-stable (3 May 2012)\nBUGFIXES (CORE):\n o Refactor event_persist_closure: raise and extract some common logic (bec22b4)\n o If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead (dfd808c)\n o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n",
                    "rendered": {
                      "text": "Changes in version 2.0.19-stable (3 May 2012)\nBUGFIXES (CORE):\n o Refactor event_persist_closure: raise and extract some common logic (bec22b4)\n o If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead (dfd808c)\n o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n",
                      "markdown": "`Changes in version 2.0.19-stable (3 May 2012)\nBUGFIXES (CORE):\n o Refactor event_persist_closure: raise and extract some common logic (bec22b4)\n o If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead (dfd808c)\n o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1142,
                  "startColumn": 33,
                  "endLine": 1142,
                  "endColumn": 42,
                  "snippet": {
                    "text": " o evbuffer: Avoid possible needless call to writev. Found by coverity. (6a4ec5c)\n o evdns: memset sockaddr_in before using it. Found by coverity. (a1a0e67)\n o evhttp: Check more setsockopt return values when binding sockets. Found by coverity (a0912e3)\n o evdns: Avoid segfault on weird timeout during name lookup. (dc32077 Greg Hazel)\n o bufferevent_ssl: Correctly invoke callbacks when a SSL bufferevent reads some and then blocks. (606ac43)\n\n\n",
                    "rendered": {
                      "text": " o evbuffer: Avoid possible needless call to writev. Found by coverity. (6a4ec5c)\n o evdns: memset sockaddr_in before using it. Found by coverity. (a1a0e67)\n o evhttp: Check more setsockopt return values when binding sockets. Found by coverity (a0912e3)\n o evdns: Avoid segfault on weird timeout during name lookup. (dc32077 Greg Hazel)\n o bufferevent_ssl: Correctly invoke callbacks when a SSL bufferevent reads some and then blocks. (606ac43)\n\n\n",
                      "markdown": "` o evbuffer: Avoid possible needless call to writev. Found by coverity. (6a4ec5c)\n o evdns: memset sockaddr_in before using it. Found by coverity. (a1a0e67)\n o evhttp: Check more setsockopt return values when binding sockets. Found by coverity (a0912e3)\n o evdns: Avoid segfault on weird timeout during name lookup. (dc32077 Greg Hazel)\n o bufferevent_ssl: Correctly invoke callbacks when a SSL bufferevent reads some and then blocks. (606ac43)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 19,
                  "endLine": 1131,
                  "endColumn": 28,
                  "snippet": {
                    "text": " o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\nChanges in version 2.0.20-stable (23 Aug 2012)\n",
                    "rendered": {
                      "text": " o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\nChanges in version 2.0.20-stable (23 Aug 2012)\n",
                      "markdown": "` o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\nChanges in version 2.0.20-stable (23 Aug 2012)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1130,
                  "startColumn": 47,
                  "endLine": 1130,
                  "endColumn": 56,
                  "snippet": {
                    "text": " o iocp: Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set (cb853ea Juan Pablo Fernandez)\n o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\n",
                    "rendered": {
                      "text": " o iocp: Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set (cb853ea Juan Pablo Fernandez)\n o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\n",
                      "markdown": "` o iocp: Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set (cb853ea Juan Pablo Fernandez)\n o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1119,
                  "startColumn": 41,
                  "endLine": 1119,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\nChanges in version 2.0.21-stable (18 Nov 2012)\nBUGFIXES:\n o ssl: Don't discard SSL read event when timeout and read come close together (576b29f)\n o ssl: Stop looping in \"consider_reading\" if reading is suspended. (f719b8a Joachim Bauch)\n o ssl: No need to reserve space if reading is suspended. (1acf2eb Joachim Bauch)\n o dns: Avoid a memory-leak on OOM in evdns. (73e85dd, f2bff75 George Danchev)\n",
                    "rendered": {
                      "text": "\nChanges in version 2.0.21-stable (18 Nov 2012)\nBUGFIXES:\n o ssl: Don't discard SSL read event when timeout and read come close together (576b29f)\n o ssl: Stop looping in \"consider_reading\" if reading is suspended. (f719b8a Joachim Bauch)\n o ssl: No need to reserve space if reading is suspended. (1acf2eb Joachim Bauch)\n o dns: Avoid a memory-leak on OOM in evdns. (73e85dd, f2bff75 George Danchev)\n",
                      "markdown": "`\nChanges in version 2.0.21-stable (18 Nov 2012)\nBUGFIXES:\n o ssl: Don't discard SSL read event when timeout and read come close together (576b29f)\n o ssl: Stop looping in \"consider_reading\" if reading is suspended. (f719b8a Joachim Bauch)\n o ssl: No need to reserve space if reading is suspended. (1acf2eb Joachim Bauch)\n o dns: Avoid a memory-leak on OOM in evdns. (73e85dd, f2bff75 George Danchev)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 1044,
                  "startColumn": 42,
                  "endLine": 1044,
                  "endColumn": 51,
                  "snippet": {
                    "text": "   o Make load-dependent monotonic timer tests off-by-default (2b6fe8b)\n   o Add deferred_cb_skew to list of timing-dependent tests (34c8f31)\n   o Avoid test -e; older shs don't have one. (f1bd938)\n   o Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n   o Fix a couple of compile warnings in the unit tests (5a9a014)\n\nMISC:\n",
                    "rendered": {
                      "text": "   o Make load-dependent monotonic timer tests off-by-default (2b6fe8b)\n   o Add deferred_cb_skew to list of timing-dependent tests (34c8f31)\n   o Avoid test -e; older shs don't have one. (f1bd938)\n   o Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n   o Fix a couple of compile warnings in the unit tests (5a9a014)\n\nMISC:\n",
                      "markdown": "`   o Make load-dependent monotonic timer tests off-by-default (2b6fe8b)\n   o Add deferred_cb_skew to list of timing-dependent tests (34c8f31)\n   o Avoid test -e; older shs don't have one. (f1bd938)\n   o Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n   o Fix a couple of compile warnings in the unit tests (5a9a014)\n\nMISC:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 957,
                  "startColumn": 40,
                  "endLine": 957,
                  "endColumn": 45,
                  "snippet": {
                    "text": " closes some longstanding gaps in the interface, makde other\n improvements.  Ths log below tries to organize features by rough area of\n effect.  It omits a few commits which were pure bugfixes on other commits\n listed below.  For more detail, see the git changelogs.  For more\n insight, see the \"whatsnew-2.1.txt\" document included in the Libevent\n 2.1.2-alpha distribution.\n\n",
                    "rendered": {
                      "text": " closes some longstanding gaps in the interface, makde other\n improvements.  Ths log below tries to organize features by rough area of\n effect.  It omits a few commits which were pure bugfixes on other commits\n listed below.  For more detail, see the git changelogs.  For more\n insight, see the \"whatsnew-2.1.txt\" document included in the Libevent\n 2.1.2-alpha distribution.\n\n",
                      "markdown": "` closes some longstanding gaps in the interface, makde other\n improvements.  Ths log below tries to organize features by rough area of\n effect.  It omits a few commits which were pure bugfixes on other commits\n listed below.  For more detail, see the git changelogs.  For more\n insight, see the \"whatsnew-2.1.txt\" document included in the Libevent\n 2.1.2-alpha distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 944,
                  "startColumn": 40,
                  "endLine": 944,
                  "endColumn": 46,
                  "snippet": {
                    "text": "     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n   o pull in wildcard matching code from cURL (4db9da6 Patrick Pelletier)\n   o Another tweak to https-client.c (95acdaa)\n   o Remove http_struct.h usage in sample/https-client.c (8a90a85)\n\n",
                    "rendered": {
                      "text": "     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n   o pull in wildcard matching code from cURL (4db9da6 Patrick Pelletier)\n   o Another tweak to https-client.c (95acdaa)\n   o Remove http_struct.h usage in sample/https-client.c (8a90a85)\n\n",
                      "markdown": "`     Patrick Pelletier)\n   o avoid sign mismatch warning in openssl_hostname_validation.c (6021cb5\n     Patrick Pelletier)\n   o pull in wildcard matching code from cURL (4db9da6 Patrick Pelletier)\n   o Another tweak to https-client.c (95acdaa)\n   o Remove http_struct.h usage in sample/https-client.c (8a90a85)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 938,
                  "startColumn": 23,
                  "endLine": 938,
                  "endColumn": 32,
                  "snippet": {
                    "text": "   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n",
                    "rendered": {
                      "text": "   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n",
                      "markdown": "`   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n   o better handling of OpenSSL errors (5754d96 Patrick Pelletier)\n   o use Debian's default root certificate location (aacd674 Patrick Pelletier)\n   o use iSECPartners code to validate hostname in certificate (64d9f16\n     Patrick Pelletier)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 934,
                  "startColumn": 4,
                  "endLine": 934,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n Examples (http)\n   o Add sample/https-client.c, an example of stacking evhttp as a client on\n     top of bufferevent_ssl. (be46c99 Catalin Patulea)\n   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n",
                    "rendered": {
                      "text": "\n Examples (http)\n   o Add sample/https-client.c, an example of stacking evhttp as a client on\n     top of bufferevent_ssl. (be46c99 Catalin Patulea)\n   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n",
                      "markdown": "`\n Examples (http)\n   o Add sample/https-client.c, an example of stacking evhttp as a client on\n     top of bufferevent_ssl. (be46c99 Catalin Patulea)\n   o use ${OPENSSL_LIBS} instead of -lssl -lcrypto (bf31fa5 Patrick Pelletier)\n   o https-client was putting newlines at 256-byte boundaries (42d7441 Patrick\n     Pelletier)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 60,
                  "endLine": 894,
                  "snippet": {
                    "text": "   o Implement EVUTIL_ERR_IS_EAGAIN on windows. (42aaf4d)\n\n Evhttp changes:\n   o Fix ipv6 support for http. When URL contain domain, not IP\n     address. (71e709c Azat Khuzhin)\n   o uri decode: fix for warning \"use of uninitialised value\" (64b6ece Azat\n     Khuzhin)\n   o uri decode: changed the test for the existence of the next character\n",
                    "rendered": {
                      "text": "   o Implement EVUTIL_ERR_IS_EAGAIN on windows. (42aaf4d)\n\n Evhttp changes:\n   o Fix ipv6 support for http. When URL contain domain, not IP\n     address. (71e709c Azat Khuzhin)\n   o uri decode: fix for warning \"use of uninitialised value\" (64b6ece Azat\n     Khuzhin)\n   o uri decode: changed the test for the existence of the next character\n",
                      "markdown": "`   o Implement EVUTIL_ERR_IS_EAGAIN on windows. (42aaf4d)\n\n Evhttp changes:\n   o Fix ipv6 support for http. When URL contain domain, not IP\n     address. (71e709c Azat Khuzhin)\n   o uri decode: fix for warning \"use of uninitialised value\" (64b6ece Azat\n     Khuzhin)\n   o uri decode: changed the test for the existence of the next character\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 22,
                  "endLine": 833,
                  "endColumn": 31,
                  "snippet": {
                    "text": " Bugfixes (Core)\n   o Make event_remove_timer behave correctly with persistent timers (5623e80)\n   o Unit test for event_remove_timer with EV_PERSIST. (96150dd)\n   o Double-check next timeout when adding events (9443868 Nate Rosenblum)\n   o event_base_update_cache_time should be a no-op if the loop isn't\n     running (5e6fa2a)\n\n",
                    "rendered": {
                      "text": " Bugfixes (Core)\n   o Make event_remove_timer behave correctly with persistent timers (5623e80)\n   o Unit test for event_remove_timer with EV_PERSIST. (96150dd)\n   o Double-check next timeout when adding events (9443868 Nate Rosenblum)\n   o event_base_update_cache_time should be a no-op if the loop isn't\n     running (5e6fa2a)\n\n",
                      "markdown": "` Bugfixes (Core)\n   o Make event_remove_timer behave correctly with persistent timers (5623e80)\n   o Unit test for event_remove_timer with EV_PERSIST. (96150dd)\n   o Double-check next timeout when adding events (9443868 Nate Rosenblum)\n   o event_base_update_cache_time should be a no-op if the loop isn't\n     running (5e6fa2a)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 748,
                  "startColumn": 33,
                  "endLine": 748,
                  "endColumn": 38,
                  "snippet": {
                    "text": "   o DNS tests: add a missing check (f314900)\n   o Finalize tests: add a missing check (82b6956)\n   o test_evutil_rtrim: add another missing check. (e193c95)\n   o regress_main: logging all if env EVENT_DEBUG_LOGGING_ALL isset\n     (611e28b Azat Khuzhin)\n   o regress_http: add tests for evhttp_connection_get_addr() (4dd500c\n     Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o DNS tests: add a missing check (f314900)\n   o Finalize tests: add a missing check (82b6956)\n   o test_evutil_rtrim: add another missing check. (e193c95)\n   o regress_main: logging all if env EVENT_DEBUG_LOGGING_ALL isset\n     (611e28b Azat Khuzhin)\n   o regress_http: add tests for evhttp_connection_get_addr() (4dd500c\n     Azat Khuzhin)\n",
                      "markdown": "`   o DNS tests: add a missing check (f314900)\n   o Finalize tests: add a missing check (82b6956)\n   o test_evutil_rtrim: add another missing check. (e193c95)\n   o regress_main: logging all if env EVENT_DEBUG_LOGGING_ALL isset\n     (611e28b Azat Khuzhin)\n   o regress_http: add tests for evhttp_connection_get_addr() (4dd500c\n     Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 33,
                  "endLine": 700,
                  "endColumn": 42,
                  "snippet": {
                    "text": "   o Fix another arc4random_buf-related warning (e64a2b0)\n\n Bugfixes (bufferevents)\n   o Initialize async bufferevent timeout CBs unconditionally (af9b2a7)\n\n Bugfixes (evdns)\n   o Checking request nameserver for NULL, before using it. (5c710c0\n",
                    "rendered": {
                      "text": "   o Fix another arc4random_buf-related warning (e64a2b0)\n\n Bugfixes (bufferevents)\n   o Initialize async bufferevent timeout CBs unconditionally (af9b2a7)\n\n Bugfixes (evdns)\n   o Checking request nameserver for NULL, before using it. (5c710c0\n",
                      "markdown": "`   o Fix another arc4random_buf-related warning (e64a2b0)\n\n Bugfixes (bufferevents)\n   o Initialize async bufferevent timeout CBs unconditionally (af9b2a7)\n\n Bugfixes (evdns)\n   o Checking request nameserver for NULL, before using it. (5c710c0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 27,
                  "endLine": 651,
                  "endColumn": 36,
                  "snippet": {
                    "text": "     (8b40a5b Joakim Söderberg)\n   o Fix broken autotools build. (ae1bd82 Joakim Söderberg)\n   o Disclaimerize cmake a little in the README (d03b5bf)\n   o Fix CMake compile when OpenSSL is disabled. (e423d42 Joakim\n     Söderberg)\n   o CMake: Get rid of python not found warning when regress tests\n     turned off. (d38d798 Joakim Söderberg)\n",
                    "rendered": {
                      "text": "     (8b40a5b Joakim Söderberg)\n   o Fix broken autotools build. (ae1bd82 Joakim Söderberg)\n   o Disclaimerize cmake a little in the README (d03b5bf)\n   o Fix CMake compile when OpenSSL is disabled. (e423d42 Joakim\n     Söderberg)\n   o CMake: Get rid of python not found warning when regress tests\n     turned off. (d38d798 Joakim Söderberg)\n",
                      "markdown": "`     (8b40a5b Joakim Söderberg)\n   o Fix broken autotools build. (ae1bd82 Joakim Söderberg)\n   o Disclaimerize cmake a little in the README (d03b5bf)\n   o Fix CMake compile when OpenSSL is disabled. (e423d42 Joakim\n     Söderberg)\n   o CMake: Get rid of python not found warning when regress tests\n     turned off. (d38d798 Joakim Söderberg)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 617,
                  "startColumn": 40,
                  "endLine": 617,
                  "endColumn": 49,
                  "snippet": {
                    "text": "     Joakim Soderberg)\n   o Added a \"make verify\" target. (e053c4f Joakim Soderberg)\n   o Fix the make \"verify\" target on Windows. (67e5d74 Joakim Soderberg)\n   o Get rid of deprecation warnings for OpenSSL on OSX 10.7+ (69c3516\n     Joakim Söderberg)\n   o Fix kqueue support. (a831f2f Joakim Söderberg)\n   o Added a test for testing if kqueue works with pipes. (2799b35\n",
                    "rendered": {
                      "text": "     Joakim Soderberg)\n   o Added a \"make verify\" target. (e053c4f Joakim Soderberg)\n   o Fix the make \"verify\" target on Windows. (67e5d74 Joakim Soderberg)\n   o Get rid of deprecation warnings for OpenSSL on OSX 10.7+ (69c3516\n     Joakim Söderberg)\n   o Fix kqueue support. (a831f2f Joakim Söderberg)\n   o Added a test for testing if kqueue works with pipes. (2799b35\n",
                      "markdown": "`     Joakim Soderberg)\n   o Added a \"make verify\" target. (e053c4f Joakim Soderberg)\n   o Fix the make \"verify\" target on Windows. (67e5d74 Joakim Soderberg)\n   o Get rid of deprecation warnings for OpenSSL on OSX 10.7+ (69c3516\n     Joakim Söderberg)\n   o Fix kqueue support. (a831f2f Joakim Söderberg)\n   o Added a test for testing if kqueue works with pipes. (2799b35\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 78,
                  "endLine": 480,
                  "endColumn": 84,
                  "snippet": {
                    "text": "   o Implement interface that provides the ability to have an outbound evhttp_connection free itself once all requests have completed (2b9ec4c,10fe4f John Ohl)\n\n New APIs (core)\n   o Implement new/free for struct evutil_monotonic_timer and export monotonic time functions (f2645f8 Andrea Shepard)\n\n Bugfixes (evdns)\n   o Load hosts file on Windows. (a0b247c Vilmos Nebehaj)\n",
                    "rendered": {
                      "text": "   o Implement interface that provides the ability to have an outbound evhttp_connection free itself once all requests have completed (2b9ec4c,10fe4f John Ohl)\n\n New APIs (core)\n   o Implement new/free for struct evutil_monotonic_timer and export monotonic time functions (f2645f8 Andrea Shepard)\n\n Bugfixes (evdns)\n   o Load hosts file on Windows. (a0b247c Vilmos Nebehaj)\n",
                      "markdown": "`   o Implement interface that provides the ability to have an outbound evhttp_connection free itself once all requests have completed (2b9ec4c,10fe4f John Ohl)\n\n New APIs (core)\n   o Implement new/free for struct evutil_monotonic_timer and export monotonic time functions (f2645f8 Andrea Shepard)\n\n Bugfixes (evdns)\n   o Load hosts file on Windows. (a0b247c Vilmos Nebehaj)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 30,
                  "endLine": 473,
                  "endColumn": 39,
                  "snippet": {
                    "text": "   o make bufferevent_getwatermark api more robust (a21e510 ufo2243)\n   o [Bugfix] fix bufferevent setwatermark suspend_read (b34e4ac ufo2243)\n   o bufferevent_openssl: reset fd_is_set when setfd with -1 is called (3da84c2 Azat Khuzhin)\n   o Fix compilation for older OpenSSL versions. (5c7282f Joakim Soderberg)\n\n New APIs (evhttp)\n   o Add evhttp_connection_set_family() to set addrinfo->family for DNS requests (12c29b0 Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o make bufferevent_getwatermark api more robust (a21e510 ufo2243)\n   o [Bugfix] fix bufferevent setwatermark suspend_read (b34e4ac ufo2243)\n   o bufferevent_openssl: reset fd_is_set when setfd with -1 is called (3da84c2 Azat Khuzhin)\n   o Fix compilation for older OpenSSL versions. (5c7282f Joakim Soderberg)\n\n New APIs (evhttp)\n   o Add evhttp_connection_set_family() to set addrinfo->family for DNS requests (12c29b0 Azat Khuzhin)\n",
                      "markdown": "`   o make bufferevent_getwatermark api more robust (a21e510 ufo2243)\n   o [Bugfix] fix bufferevent setwatermark suspend_read (b34e4ac ufo2243)\n   o bufferevent_openssl: reset fd_is_set when setfd with -1 is called (3da84c2 Azat Khuzhin)\n   o Fix compilation for older OpenSSL versions. (5c7282f Joakim Soderberg)\n\n New APIs (evhttp)\n   o Add evhttp_connection_set_family() to set addrinfo->family for DNS requests (12c29b0 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 22,
                  "endLine": 382,
                  "endColumn": 31,
                  "snippet": {
                    "text": "   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n   o Add support for appveyor.com windows CI (5f89c37 Joakim Söderberg)\n\n Build Improvements/Fixes:\n",
                    "rendered": {
                      "text": "   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n   o Add support for appveyor.com windows CI (5f89c37 Joakim Söderberg)\n\n Build Improvements/Fixes:\n",
                      "markdown": "`   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n   o Add support for appveyor.com windows CI (5f89c37 Joakim Söderberg)\n\n Build Improvements/Fixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 30,
                  "endLine": 381,
                  "endColumn": 39,
                  "snippet": {
                    "text": "   o test: run regress with EVENT_DEBUG_MODE=1 and without (cf2cf2a Azat Khuzhin)\n   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n   o Add support for appveyor.com windows CI (5f89c37 Joakim Söderberg)\n\n",
                    "rendered": {
                      "text": "   o test: run regress with EVENT_DEBUG_MODE=1 and without (cf2cf2a Azat Khuzhin)\n   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n   o Add support for appveyor.com windows CI (5f89c37 Joakim Söderberg)\n\n",
                      "markdown": "`   o test: run regress with EVENT_DEBUG_MODE=1 and without (cf2cf2a Azat Khuzhin)\n   o Update travis config for status updates (37453ab Mark Ellzey)\n   o Use autotools for appveyor until cmake is fixed. (1cc2e29 Mark Ellzey)\n   o Fix the link for appveyor OpenSSL installer (WIN32) (107d565 Mark Ellzey)\n   o Forgot to install OpenSSL for appveyor (26164a5 Joakim Söderberg)\n   o Add support for appveyor.com windows CI (5f89c37 Joakim Söderberg)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 32,
                  "endLine": 368,
                  "endColumn": 41,
                  "snippet": {
                    "text": "   o travis: split long lines, and make it cleaner (685a6a1 Azat Khuzhin)\n   o travis: fix autotools on osx by reinstalling libtool (088ea5e Azat Khuzhin)\n   o appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS (6fcfa25 Azat Khuzhin)\n   o appveyor: image already had openssl installed (4634b85 Azat Khuzhin)\n   o appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only) (e9acc44 Azat Khuzhin)\n   o appveyor: ignore failure of mingw-get (1810857 Azat Khuzhin)\n   o appveyor: drop shallow_clone, since we use tags for detecting version in cmake (ac90133 Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o travis: split long lines, and make it cleaner (685a6a1 Azat Khuzhin)\n   o travis: fix autotools on osx by reinstalling libtool (088ea5e Azat Khuzhin)\n   o appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS (6fcfa25 Azat Khuzhin)\n   o appveyor: image already had openssl installed (4634b85 Azat Khuzhin)\n   o appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only) (e9acc44 Azat Khuzhin)\n   o appveyor: ignore failure of mingw-get (1810857 Azat Khuzhin)\n   o appveyor: drop shallow_clone, since we use tags for detecting version in cmake (ac90133 Azat Khuzhin)\n",
                      "markdown": "`   o travis: split long lines, and make it cleaner (685a6a1 Azat Khuzhin)\n   o travis: fix autotools on osx by reinstalling libtool (088ea5e Azat Khuzhin)\n   o appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS (6fcfa25 Azat Khuzhin)\n   o appveyor: image already had openssl installed (4634b85 Azat Khuzhin)\n   o appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only) (e9acc44 Azat Khuzhin)\n   o appveyor: ignore failure of mingw-get (1810857 Azat Khuzhin)\n   o appveyor: drop shallow_clone, since we use tags for detecting version in cmake (ac90133 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 34,
                  "endLine": 367,
                  "endColumn": 43,
                  "snippet": {
                    "text": " Continuous Integration:\n   o travis: split long lines, and make it cleaner (685a6a1 Azat Khuzhin)\n   o travis: fix autotools on osx by reinstalling libtool (088ea5e Azat Khuzhin)\n   o appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS (6fcfa25 Azat Khuzhin)\n   o appveyor: image already had openssl installed (4634b85 Azat Khuzhin)\n   o appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only) (e9acc44 Azat Khuzhin)\n   o appveyor: ignore failure of mingw-get (1810857 Azat Khuzhin)\n",
                    "rendered": {
                      "text": " Continuous Integration:\n   o travis: split long lines, and make it cleaner (685a6a1 Azat Khuzhin)\n   o travis: fix autotools on osx by reinstalling libtool (088ea5e Azat Khuzhin)\n   o appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS (6fcfa25 Azat Khuzhin)\n   o appveyor: image already had openssl installed (4634b85 Azat Khuzhin)\n   o appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only) (e9acc44 Azat Khuzhin)\n   o appveyor: ignore failure of mingw-get (1810857 Azat Khuzhin)\n",
                      "markdown": "` Continuous Integration:\n   o travis: split long lines, and make it cleaner (685a6a1 Azat Khuzhin)\n   o travis: fix autotools on osx by reinstalling libtool (088ea5e Azat Khuzhin)\n   o appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS (6fcfa25 Azat Khuzhin)\n   o appveyor: image already had openssl installed (4634b85 Azat Khuzhin)\n   o appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only) (e9acc44 Azat Khuzhin)\n   o appveyor: ignore failure of mingw-get (1810857 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 52,
                  "endLine": 360,
                  "endColumn": 56,
                  "snippet": {
                    "text": "   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n   o be: include all variations of headers for sockaddr_in6 struct (c212291 Azat Khuzhin)\n   o be: fix sockaddr_in6 type definition for win32 (c42bc6b Azat Khuzhin)\n\n",
                    "rendered": {
                      "text": "   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n   o be: include all variations of headers for sockaddr_in6 struct (c212291 Azat Khuzhin)\n   o be: fix sockaddr_in6 type definition for win32 (c42bc6b Azat Khuzhin)\n\n",
                      "markdown": "`   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n   o be: include all variations of headers for sockaddr_in6 struct (c212291 Azat Khuzhin)\n   o be: fix sockaddr_in6 type definition for win32 (c42bc6b Azat Khuzhin)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 38,
                  "endLine": 359,
                  "endColumn": 42,
                  "snippet": {
                    "text": "   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n   o be: include all variations of headers for sockaddr_in6 struct (c212291 Azat Khuzhin)\n   o be: fix sockaddr_in6 type definition for win32 (c42bc6b Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n   o be: include all variations of headers for sockaddr_in6 struct (c212291 Azat Khuzhin)\n   o be: fix sockaddr_in6 type definition for win32 (c42bc6b Azat Khuzhin)\n",
                      "markdown": "`   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n   o be: include all variations of headers for sockaddr_in6 struct (c212291 Azat Khuzhin)\n   o be: fix sockaddr_in6 type definition for win32 (c42bc6b Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 60,
                  "endLine": 357,
                  "endColumn": 64,
                  "snippet": {
                    "text": "   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n",
                    "rendered": {
                      "text": "   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n",
                      "markdown": "`   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n   o Remove BSD-ism: TIMEVAL_TO_TIMESPEC(). (193c7de Ed Schouten)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 82,
                  "endLine": 356,
                  "endColumn": 86,
                  "snippet": {
                    "text": "   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n",
                    "rendered": {
                      "text": "   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n",
                      "markdown": "`   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n   o Don't use BSD u_* types. (fd36647 Ed Schouten)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 52,
                  "endLine": 355,
                  "endColumn": 56,
                  "snippet": {
                    "text": "   o [#372] check for errno.h (3031617 Mark Ellzey)\n   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n",
                    "rendered": {
                      "text": "   o [#372] check for errno.h (3031617 Mark Ellzey)\n   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n",
                      "markdown": "`   o [#372] check for errno.h (3031617 Mark Ellzey)\n   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n   o Always define missing TAILQ functions from sys/queue.h (2828bdb Christopher Wiley)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 66,
                  "endLine": 354,
                  "endColumn": 70,
                  "snippet": {
                    "text": " Portability Fixes\n   o [#372] check for errno.h (3031617 Mark Ellzey)\n   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n",
                    "rendered": {
                      "text": " Portability Fixes\n   o [#372] check for errno.h (3031617 Mark Ellzey)\n   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n",
                      "markdown": "` Portability Fixes\n   o [#372] check for errno.h (3031617 Mark Ellzey)\n   o Fixed Unicode issue in error messages. (e8b7895 Mattes D)\n   o Assume that ke_udata is an integer type on CloudABI. (5602e45 Ed Schouten)\n   o Add missing include of <netinet/in.h>. (b2c68bc Ed Schouten)\n   o Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally. (c1404b5 Ed Schouten)\n   o Test against SO_REUSEADDR (along with _WIN32). (ce1776c Ed Schouten)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 52,
                  "endLine": 269,
                  "endColumn": 61,
                  "snippet": {
                    "text": "ver write during read (3d15aeb Azat Khuzhin)\n   o test/regress_http: verify that closecb will be called without multiple write (4be6c70 Azat Khuzhin)\n   o test/regress: fix bufferevent_pair_release_lock with EVENT_DEBUG_MODE (6ea6655 Azat Khuzhin)\n   o test/regress_ssl: check events fd/pending after timeout triggered (cdafdf0 Azat Khuzhin)\n   o test/regress_ssl: cover case when server didn't up (failed with timeout) (74845f1 Azat Khuzhin)\n   o test/regress_ssl: covert that we can't change fd with underlying (df507af Azat Khuzhin)\n   o test/regress_ssl: cover that events (read/write) at finish not pendi",
                    "rendered": {
                      "text": "ver write during read (3d15aeb Azat Khuzhin)\n   o test/regress_http: verify that closecb will be called without multiple write (4be6c70 Azat Khuzhin)\n   o test/regress: fix bufferevent_pair_release_lock with EVENT_DEBUG_MODE (6ea6655 Azat Khuzhin)\n   o test/regress_ssl: check events fd/pending after timeout triggered (cdafdf0 Azat Khuzhin)\n   o test/regress_ssl: cover case when server didn't up (failed with timeout) (74845f1 Azat Khuzhin)\n   o test/regress_ssl: covert that we can't change fd with underlying (df507af Azat Khuzhin)\n   o test/regress_ssl: cover that events (read/write) at finish not pendi",
                      "markdown": "`ver write during read (3d15aeb Azat Khuzhin)\n   o test/regress_http: verify that closecb will be called without multiple write (4be6c70 Azat Khuzhin)\n   o test/regress: fix bufferevent_pair_release_lock with EVENT_DEBUG_MODE (6ea6655 Azat Khuzhin)\n   o test/regress_ssl: check events fd/pending after timeout triggered (cdafdf0 Azat Khuzhin)\n   o test/regress_ssl: cover case when server didn't up (failed with timeout) (74845f1 Azat Khuzhin)\n   o test/regress_ssl: covert that we can't change fd with underlying (df507af Azat Khuzhin)\n   o test/regress_ssl: cover that events (read/write) at finish not pendi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 31,
                  "endLine": 194,
                  "endColumn": 40,
                  "snippet": {
                    "text": "acklog filling (freebsd) (500b6b7 Azat Khuzhin)\n   o test/bufferevent/iocp: fix test name for \"bufferevent_connect_fail_eventcb\" (4410e9d Azat Khuzhin)\n   o test/ssl: use send()/recv()/EVUTIL_ERR_RW_RETRIABLE()/EVUTIL_SOCKET_ERROR() to fix win32 (a9e8cd6 Azat Khuzhin)\n   o test/https_basic: increase timeout for complete write (fixes win32) (d5a2f2f Azat Khuzhin)\n   o test: fix building with --disable-thread-support under win32 (a487706 Azat Khuzhin)\n   o test/buffer: evbuffer_add_buffer() with empty chains (a272bc4 Azat Khuzhin)\n   o test/buffer: evbuffer_remove_buffer() with empty chains (prepend) (f0",
                    "rendered": {
                      "text": "acklog filling (freebsd) (500b6b7 Azat Khuzhin)\n   o test/bufferevent/iocp: fix test name for \"bufferevent_connect_fail_eventcb\" (4410e9d Azat Khuzhin)\n   o test/ssl: use send()/recv()/EVUTIL_ERR_RW_RETRIABLE()/EVUTIL_SOCKET_ERROR() to fix win32 (a9e8cd6 Azat Khuzhin)\n   o test/https_basic: increase timeout for complete write (fixes win32) (d5a2f2f Azat Khuzhin)\n   o test: fix building with --disable-thread-support under win32 (a487706 Azat Khuzhin)\n   o test/buffer: evbuffer_add_buffer() with empty chains (a272bc4 Azat Khuzhin)\n   o test/buffer: evbuffer_remove_buffer() with empty chains (prepend) (f0",
                      "markdown": "`acklog filling (freebsd) (500b6b7 Azat Khuzhin)\n   o test/bufferevent/iocp: fix test name for \"bufferevent_connect_fail_eventcb\" (4410e9d Azat Khuzhin)\n   o test/ssl: use send()/recv()/EVUTIL_ERR_RW_RETRIABLE()/EVUTIL_SOCKET_ERROR() to fix win32 (a9e8cd6 Azat Khuzhin)\n   o test/https_basic: increase timeout for complete write (fixes win32) (d5a2f2f Azat Khuzhin)\n   o test: fix building with --disable-thread-support under win32 (a487706 Azat Khuzhin)\n   o test/buffer: evbuffer_add_buffer() with empty chains (a272bc4 Azat Khuzhin)\n   o test/buffer: evbuffer_remove_buffer() with empty chains (prepend) (f0`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 18,
                  "endLine": 168,
                  "endColumn": 27,
                  "snippet": {
                    "text": "n)\n   o http: fix \"Expect: 100-continue\" client side (0b46b39 Azat Khuzhin)\n   o http: fix conflicts EVHTTP_CON_AUTOFREE and EVHTTP_CON_REUSE_CONNECTED_ADDR (4dc0979 Azat Khuzhin)\n   o http: avoid epoll_ctl() on already closed fd (triggers by http/chunk_out) (ab3bc69 Azat Khuzhin)\n   o http: install timeout for read too during connect for ssl (040000d Azat Khuzhin)\n   o http: fix evhttp_request_own() by checking EVHTTP_USER_OWNED in more cases (b0d3964 Azat Khuzhin)\n   o http: fix detecting EOF without write (7ed02ac Azat Khuzhin)\n   o evhttp: Fix failure to send all output data for POST/PUT requests (",
                    "rendered": {
                      "text": "n)\n   o http: fix \"Expect: 100-continue\" client side (0b46b39 Azat Khuzhin)\n   o http: fix conflicts EVHTTP_CON_AUTOFREE and EVHTTP_CON_REUSE_CONNECTED_ADDR (4dc0979 Azat Khuzhin)\n   o http: avoid epoll_ctl() on already closed fd (triggers by http/chunk_out) (ab3bc69 Azat Khuzhin)\n   o http: install timeout for read too during connect for ssl (040000d Azat Khuzhin)\n   o http: fix evhttp_request_own() by checking EVHTTP_USER_OWNED in more cases (b0d3964 Azat Khuzhin)\n   o http: fix detecting EOF without write (7ed02ac Azat Khuzhin)\n   o evhttp: Fix failure to send all output data for POST/PUT requests (",
                      "markdown": "`n)\n   o http: fix \"Expect: 100-continue\" client side (0b46b39 Azat Khuzhin)\n   o http: fix conflicts EVHTTP_CON_AUTOFREE and EVHTTP_CON_REUSE_CONNECTED_ADDR (4dc0979 Azat Khuzhin)\n   o http: avoid epoll_ctl() on already closed fd (triggers by http/chunk_out) (ab3bc69 Azat Khuzhin)\n   o http: install timeout for read too during connect for ssl (040000d Azat Khuzhin)\n   o http: fix evhttp_request_own() by checking EVHTTP_USER_OWNED in more cases (b0d3964 Azat Khuzhin)\n   o http: fix detecting EOF without write (7ed02ac Azat Khuzhin)\n   o evhttp: Fix failure to send all output data for POST/PUT requests (`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 14,
                  "endLine": 111,
                  "endColumn": 18,
                  "snippet": {
                    "text": "   o http: read server response even after server closed the connection (680742e Azat Khuzhin)\n   o http: export evhttp_connection_set_family() (714fc70 Azat Khuzhin)\n   o http: reuse connected address only with EVHTTP_CON_REUSE_CONNECTED_ADDR (a50f5f0 Azat Khuzhin)\n   o http: use IP address that we got before (if any) during retrying (54c887d Azat Khuzhin)\n\n Bugfixes (core)\n   o Fix getaddrinfo under solaris (for multiprotocol case) (40730ae Azat Khuzhin)\n",
                    "rendered": {
                      "text": "   o http: read server response even after server closed the connection (680742e Azat Khuzhin)\n   o http: export evhttp_connection_set_family() (714fc70 Azat Khuzhin)\n   o http: reuse connected address only with EVHTTP_CON_REUSE_CONNECTED_ADDR (a50f5f0 Azat Khuzhin)\n   o http: use IP address that we got before (if any) during retrying (54c887d Azat Khuzhin)\n\n Bugfixes (core)\n   o Fix getaddrinfo under solaris (for multiprotocol case) (40730ae Azat Khuzhin)\n",
                      "markdown": "`   o http: read server response even after server closed the connection (680742e Azat Khuzhin)\n   o http: export evhttp_connection_set_family() (714fc70 Azat Khuzhin)\n   o http: reuse connected address only with EVHTTP_CON_REUSE_CONNECTED_ADDR (a50f5f0 Azat Khuzhin)\n   o http: use IP address that we got before (if any) during retrying (54c887d Azat Khuzhin)\n\n Bugfixes (core)\n   o Fix getaddrinfo under solaris (for multiprotocol case) (40730ae Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 23,
                  "endLine": 73,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  o test/regress: cover a polling of invalid fd (cb0df5c Tim Hentenaar)\n\n Code Improvements (bufferevent_openssl)\n  o Make it build using OpenSSL 1.1.0 (3e9e0a0 Kurt Roeckx)\n  o Don't call BIO_number_{read|written} on NULL BIOs. (6702da1 Adam Langley)\n  o Switch from a 512 to 2048-bit RSA key. (f9803a6 Adam Langley)\n\n",
                    "rendered": {
                      "text": "  o test/regress: cover a polling of invalid fd (cb0df5c Tim Hentenaar)\n\n Code Improvements (bufferevent_openssl)\n  o Make it build using OpenSSL 1.1.0 (3e9e0a0 Kurt Roeckx)\n  o Don't call BIO_number_{read|written} on NULL BIOs. (6702da1 Adam Langley)\n  o Switch from a 512 to 2048-bit RSA key. (f9803a6 Adam Langley)\n\n",
                      "markdown": "`  o test/regress: cover a polling of invalid fd (cb0df5c Tim Hentenaar)\n\n Code Improvements (bufferevent_openssl)\n  o Make it build using OpenSSL 1.1.0 (3e9e0a0 Kurt Roeckx)\n  o Don't call BIO_number_{read|written} on NULL BIOs. (6702da1 Adam Langley)\n  o Switch from a 512 to 2048-bit RSA key. (f9803a6 Adam Langley)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 35,
                  "endLine": 61,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  o cmake: fix CheckFunctionExistsEx/CheckPrototypeDefinition (CMP0054) (43b69b2 Azat Khuzhin)\n  o cmake: cleanup (dc624ad Zonr Chang)\n  o cmake/win32: fix running regress, but fixing finding python2 interpreter (bcb990a Azat Khuzhin)\n  o cmake: use PYTHON_EXECUTABLE to find python2 (a4d044c Azat Khuzhin)\n  o Merge branch 'force-disable-clockgettime' (83c7cdf Azat Khuzhin)\n\n Code Improvements (core)\n",
                    "rendered": {
                      "text": "  o cmake: fix CheckFunctionExistsEx/CheckPrototypeDefinition (CMP0054) (43b69b2 Azat Khuzhin)\n  o cmake: cleanup (dc624ad Zonr Chang)\n  o cmake/win32: fix running regress, but fixing finding python2 interpreter (bcb990a Azat Khuzhin)\n  o cmake: use PYTHON_EXECUTABLE to find python2 (a4d044c Azat Khuzhin)\n  o Merge branch 'force-disable-clockgettime' (83c7cdf Azat Khuzhin)\n\n Code Improvements (core)\n",
                      "markdown": "`  o cmake: fix CheckFunctionExistsEx/CheckPrototypeDefinition (CMP0054) (43b69b2 Azat Khuzhin)\n  o cmake: cleanup (dc624ad Zonr Chang)\n  o cmake/win32: fix running regress, but fixing finding python2 interpreter (bcb990a Azat Khuzhin)\n  o cmake: use PYTHON_EXECUTABLE to find python2 (a4d044c Azat Khuzhin)\n  o Merge branch 'force-disable-clockgettime' (83c7cdf Azat Khuzhin)\n\n Code Improvements (core)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 40,
                  "endLine": 48,
                  "endColumn": 49,
                  "snippet": {
                    "text": " Continuous Integration:\n  o Use coveralls.io via travis (9ac000c Azat Khuzhin)\n  o travis-ci: use container-based infrastructure (7e12e96 Azat Khuzhin)\n  o travis-ci/osx: fix compiling/linking openssl libraries (9d2f8d4 Azat Khuzhin)\n  o travis-ci: use gcc-5 (fixes osx|gcc failures) (d7ceae5 Azat Khuzhin)\n  o Testing with vagrant for 6 OS and cmake+autoconf (9585338 Azat Khuzhin)\n  o travis-ci/osx: install lcov (e4e099b Azat Khuzhin)\n",
                    "rendered": {
                      "text": " Continuous Integration:\n  o Use coveralls.io via travis (9ac000c Azat Khuzhin)\n  o travis-ci: use container-based infrastructure (7e12e96 Azat Khuzhin)\n  o travis-ci/osx: fix compiling/linking openssl libraries (9d2f8d4 Azat Khuzhin)\n  o travis-ci: use gcc-5 (fixes osx|gcc failures) (d7ceae5 Azat Khuzhin)\n  o Testing with vagrant for 6 OS and cmake+autoconf (9585338 Azat Khuzhin)\n  o travis-ci/osx: install lcov (e4e099b Azat Khuzhin)\n",
                      "markdown": "` Continuous Integration:\n  o Use coveralls.io via travis (9ac000c Azat Khuzhin)\n  o travis-ci: use container-based infrastructure (7e12e96 Azat Khuzhin)\n  o travis-ci/osx: fix compiling/linking openssl libraries (9d2f8d4 Azat Khuzhin)\n  o travis-ci: use gcc-5 (fixes osx|gcc failures) (d7ceae5 Azat Khuzhin)\n  o Testing with vagrant for 6 OS and cmake+autoconf (9585338 Azat Khuzhin)\n  o travis-ci/osx: install lcov (e4e099b Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 27,
                  "endLine": 41,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nChanges in version 2.1.7-rc (2 Novemer 2016)\n\n Libevent 2.1.7-rc contains openssl 1.1 support, build fixes, CI improvements\n and plus Vagrantfile for testing under multiple OS'es.\n\n\n",
                    "rendered": {
                      "text": "\nChanges in version 2.1.7-rc (2 Novemer 2016)\n\n Libevent 2.1.7-rc contains openssl 1.1 support, build fixes, CI improvements\n and plus Vagrantfile for testing under multiple OS'es.\n\n\n",
                      "markdown": "`\nChanges in version 2.1.7-rc (2 Novemer 2016)\n\n Libevent 2.1.7-rc contains openssl 1.1 support, build fixes, CI improvements\n and plus Vagrantfile for testing under multiple OS'es.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 45,
                  "endLine": 25,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  o vagrant: add centos box (ca591c5b Azat Khuzhin)\n Tests:\n  o test/dns: replace servname since solaris does not have \"http\" (d6bafbbe Azat Khuzhin)\n  o test/thread: netbsd is too slow, increase timeout for conditions_simple (3c7422fc Azat Khuzhin)\n  o test/dns: run async resolving after sync one (to avoid timeouts) (07862531 Azat Khuzhin)\n  o test/http: turn off some tests that based on backlog filling (falky) (26f416c1 Azat Khuzhin)\n Bugfixes:\n",
                    "rendered": {
                      "text": "  o vagrant: add centos box (ca591c5b Azat Khuzhin)\n Tests:\n  o test/dns: replace servname since solaris does not have \"http\" (d6bafbbe Azat Khuzhin)\n  o test/thread: netbsd is too slow, increase timeout for conditions_simple (3c7422fc Azat Khuzhin)\n  o test/dns: run async resolving after sync one (to avoid timeouts) (07862531 Azat Khuzhin)\n  o test/http: turn off some tests that based on backlog filling (falky) (26f416c1 Azat Khuzhin)\n Bugfixes:\n",
                      "markdown": "`  o vagrant: add centos box (ca591c5b Azat Khuzhin)\n Tests:\n  o test/dns: replace servname since solaris does not have \"http\" (d6bafbbe Azat Khuzhin)\n  o test/thread: netbsd is too slow, increase timeout for conditions_simple (3c7422fc Azat Khuzhin)\n  o test/dns: run async resolving after sync one (to avoid timeouts) (07862531 Azat Khuzhin)\n  o test/http: turn off some tests that based on backlog filling (falky) (26f416c1 Azat Khuzhin)\n Bugfixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 8,
                  "endLine": 18,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  o http: fix formatter for pritnf for req->ntoread (osx) (1cbf26f6 Azat Khuzhin)\n Testing environment:\n  o Merge branch 'automake-tests-parallel-v4' (*includes ci bits also*) (59e217df Azat Khuzhin)\n Vagrant env fixes:\n  o vagrant/netbsd: missing libtool (9c9be399 Azat Khuzhin)\n  o vagrant/netbsd: more reliable way of installing packages (36da6877 Azat Khuzhin)\n  o vagrant/osx: use make instead of gmake (there is no gmake) (f7c70aef Azat Khuzhin)\n",
                    "rendered": {
                      "text": "  o http: fix formatter for pritnf for req->ntoread (osx) (1cbf26f6 Azat Khuzhin)\n Testing environment:\n  o Merge branch 'automake-tests-parallel-v4' (*includes ci bits also*) (59e217df Azat Khuzhin)\n Vagrant env fixes:\n  o vagrant/netbsd: missing libtool (9c9be399 Azat Khuzhin)\n  o vagrant/netbsd: more reliable way of installing packages (36da6877 Azat Khuzhin)\n  o vagrant/osx: use make instead of gmake (there is no gmake) (f7c70aef Azat Khuzhin)\n",
                      "markdown": "`  o http: fix formatter for pritnf for req->ntoread (osx) (1cbf26f6 Azat Khuzhin)\n Testing environment:\n  o Merge branch 'automake-tests-parallel-v4' (*includes ci bits also*) (59e217df Azat Khuzhin)\n Vagrant env fixes:\n  o vagrant/netbsd: missing libtool (9c9be399 Azat Khuzhin)\n  o vagrant/netbsd: more reliable way of installing packages (36da6877 Azat Khuzhin)\n  o vagrant/osx: use make instead of gmake (there is no gmake) (f7c70aef Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 5,
                  "endLine": 5,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n Libevent 2.1.8-stable, it contains openssl fixes for resetting fd and using\n bufferevent_openssl_filter_new(). vagrant fixes, some build fixes, increased\n timeout for some tests (to reduce number of failures due to timing issues),\n date in RFC1123 format and running tests in parallel.\n\n There are highlighted changes above.\n",
                    "rendered": {
                      "text": "\n Libevent 2.1.8-stable, it contains openssl fixes for resetting fd and using\n bufferevent_openssl_filter_new(). vagrant fixes, some build fixes, increased\n timeout for some tests (to reduce number of failures due to timing issues),\n date in RFC1123 format and running tests in parallel.\n\n There are highlighted changes above.\n",
                      "markdown": "`\n Libevent 2.1.8-stable, it contains openssl fixes for resetting fd and using\n bufferevent_openssl_filter_new(). vagrant fixes, some build fixes, increased\n timeout for some tests (to reduce number of failures due to timing issues),\n date in RFC1123 format and running tests in parallel.\n\n There are highlighted changes above.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.1"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 35,
                  "endLine": 3,
                  "endColumn": 44,
                  "snippet": {
                    "text": "Changes in version 2.1.8-stable (22 January 2017)\n\n Libevent 2.1.8-stable, it contains openssl fixes for resetting fd and using\n bufferevent_openssl_filter_new(). vagrant fixes, some build fixes, increased\n timeout for some tests (to reduce number of failures due to timing issues),\n date in RFC1123 format and running tests in parallel.\n",
                    "rendered": {
                      "text": "Changes in version 2.1.8-stable (22 January 2017)\n\n Libevent 2.1.8-stable, it contains openssl fixes for resetting fd and using\n bufferevent_openssl_filter_new(). vagrant fixes, some build fixes, increased\n timeout for some tests (to reduce number of failures due to timing issues),\n date in RFC1123 format and running tests in parallel.\n",
                      "markdown": "`Changes in version 2.1.8-stable (22 January 2017)\n\n Libevent 2.1.8-stable, it contains openssl fixes for resetting fd and using\n bufferevent_openssl_filter_new(). vagrant fixes, some build fixes, increased\n timeout for some tests (to reduce number of failures due to timing issues),\n date in RFC1123 format and running tests in parallel.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-eof.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 14,
                  "endLine": 54,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nint test_okay = 1;\nint called = 0;\nstruct timeval timeout = {60, 0};\n\nstatic void\nread_cb(evutil_socket_t fd, short event, void *arg)\n",
                    "rendered": {
                      "text": "\nint test_okay = 1;\nint called = 0;\nstruct timeval timeout = {60, 0};\n\nstatic void\nread_cb(evutil_socket_t fd, short event, void *arg)\n",
                      "markdown": "`\nint test_okay = 1;\nint called = 0;\nstruct timeval timeout = {60, 0};\n\nstatic void\nread_cb(evutil_socket_t fd, short event, void *arg)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_openssl.c"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 20,
                  "endLine": 64,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\tbio = BIO_new_mem_buf((char *)KEY, -1);\n\ttt_assert(bio);\n\n\tkey = PEM_read_bio_PrivateKey(bio, NULL, NULL, NULL);\n\tBIO_free(bio);\n\ttt_assert(key);\n\n",
                    "rendered": {
                      "text": "\tbio = BIO_new_mem_buf((char *)KEY, -1);\n\ttt_assert(bio);\n\n\tkey = PEM_read_bio_PrivateKey(bio, NULL, NULL, NULL);\n\tBIO_free(bio);\n\ttt_assert(key);\n\n",
                      "markdown": "`\tbio = BIO_new_mem_buf((char *)KEY, -1);\n\ttt_assert(bio);\n\n\tkey = PEM_read_bio_PrivateKey(bio, NULL, NULL, NULL);\n\tBIO_free(bio);\n\ttt_assert(key);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_http.c"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 9,
                  "endLine": 160,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tSSL *ssl = SSL_new(get_ssl_ctx());\n\n\tSSL_use_certificate(ssl, ssl_getcert(ssl_getkey()));\n\tSSL_use_PrivateKey(ssl, ssl_getkey());\n\n\treturn bufferevent_openssl_socket_new(\n\t\tbase, -1, ssl, BUFFEREVENT_SSL_ACCEPTING,\n",
                    "rendered": {
                      "text": "\tSSL *ssl = SSL_new(get_ssl_ctx());\n\n\tSSL_use_certificate(ssl, ssl_getcert(ssl_getkey()));\n\tSSL_use_PrivateKey(ssl, ssl_getkey());\n\n\treturn bufferevent_openssl_socket_new(\n\t\tbase, -1, ssl, BUFFEREVENT_SSL_ACCEPTING,\n",
                      "markdown": "`\tSSL *ssl = SSL_new(get_ssl_ctx());\n\n\tSSL_use_certificate(ssl, ssl_getcert(ssl_getkey()));\n\tSSL_use_PrivateKey(ssl, ssl_getkey());\n\n\treturn bufferevent_openssl_socket_new(\n\t\tbase, -1, ssl, BUFFEREVENT_SSL_ACCEPTING,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_http.c"
                },
                "region": {
                  "startLine": 5435,
                  "startColumn": 50,
                  "endLine": 5435,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\tbody = evbuffer_new();\n\tfor (i = 0; i < 10000; ++i)\n\t\tevbuffer_add_printf(body, \"this is the body that HEAD should not have\");\n\n\thttp_run_bev_request(data->base, port,\n\t\t\"HEAD /timeout HTTP/1.1\\r\\n\"\n",
                    "rendered": {
                      "text": "\n\tbody = evbuffer_new();\n\tfor (i = 0; i < 10000; ++i)\n\t\tevbuffer_add_printf(body, \"this is the body that HEAD should not have\");\n\n\thttp_run_bev_request(data->base, port,\n\t\t\"HEAD /timeout HTTP/1.1\\r\\n\"\n",
                      "markdown": "`\n\tbody = evbuffer_new();\n\tfor (i = 0; i < 10000; ++i)\n\t\tevbuffer_add_printf(body, \"this is the body that HEAD should not have\");\n\n\thttp_run_bev_request(data->base, port,\n\t\t\"HEAD /timeout HTTP/1.1\\r\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/tinytest.c"
                },
                "region": {
                  "startLine": 636,
                  "endLine": 636,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\treturn strdup(\"null\");\n\tif (!(result = malloc(len*2+1)))\n\t\treturn strdup(\"<allocation failure>\");\n\tcp = result;\n\tfor (i=0;i<len;++i) {\n\t\t*cp++ = \"0123456789ABCDEF\"[val[i] >> 4];\n\t\t*cp++ = \"0123456789ABCDEF\"[val[i] & 0x0f];\n",
                    "rendered": {
                      "text": "\t\treturn strdup(\"null\");\n\tif (!(result = malloc(len*2+1)))\n\t\treturn strdup(\"<allocation failure>\");\n\tcp = result;\n\tfor (i=0;i<len;++i) {\n\t\t*cp++ = \"0123456789ABCDEF\"[val[i] >> 4];\n\t\t*cp++ = \"0123456789ABCDEF\"[val[i] & 0x0f];\n",
                      "markdown": "`\t\treturn strdup(\"null\");\n\tif (!(result = malloc(len*2+1)))\n\t\treturn strdup(\"<allocation failure>\");\n\tcp = result;\n\tfor (i=0;i<len;++i) {\n\t\t*cp++ = \"0123456789ABCDEF\"[val[i] >> 4];\n\t\t*cp++ = \"0123456789ABCDEF\"[val[i] & 0x0f];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/tinytest.c"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 161,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tvoid *env = NULL;\n\tint outcome;\n\tif (testcase->setup) {\n\t\tenv = testcase->setup->setup_fn(testcase);\n\t\tif (!env)\n\t\t\treturn FAIL;\n\t\telse if (env == (void*)TT_SKIP)\n",
                    "rendered": {
                      "text": "\tvoid *env = NULL;\n\tint outcome;\n\tif (testcase->setup) {\n\t\tenv = testcase->setup->setup_fn(testcase);\n\t\tif (!env)\n\t\t\treturn FAIL;\n\t\telse if (env == (void*)TT_SKIP)\n",
                      "markdown": "`\tvoid *env = NULL;\n\tint outcome;\n\tif (testcase->setup) {\n\t\tenv = testcase->setup->setup_fn(testcase);\n\t\tif (!env)\n\t\t\treturn FAIL;\n\t\telse if (env == (void*)TT_SKIP)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/tinytest.c"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 1,
                  "endLine": 119,
                  "snippet": {
                    "text": "\tHANDLE handle;\n\tstruct timeout_thread_args args = {\n\t\t&(testcase->fn),\n\t\tenv\n\t};\n\n\thandle =CreateThread(NULL, 0, timeout_thread_proc_,\n\t\t(LPVOID)&args, 0, &tid);\n",
                    "rendered": {
                      "text": "\tHANDLE handle;\n\tstruct timeout_thread_args args = {\n\t\t&(testcase->fn),\n\t\tenv\n\t};\n\n\thandle =CreateThread(NULL, 0, timeout_thread_proc_,\n\t\t(LPVOID)&args, 0, &tid);\n",
                      "markdown": "`\tHANDLE handle;\n\tstruct timeout_thread_args args = {\n\t\t&(testcase->fn),\n\t\tenv\n\t};\n\n\thandle =CreateThread(NULL, 0, timeout_thread_proc_,\n\t\t(LPVOID)&args, 0, &tid);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1072,
                  "startColumn": 120,
                  "endLine": 1072,
                  "endColumn": 128,
                  "snippet": {
                    "text": " OpenBSD.\n o Options passed to evdns_set_option() no longer need to end with a colon.\n o Add an evutil_getaddrinfo() function to clone getaddrinfo on platforms that don't have it.\n o Add an evdns_getaddrinfo() function to provide a nonblocking getaddrinfo using evdns, so programs can perform useful hostname lookup.\n o Finally expose the IOCP-based bufferevent backend.  It passes its unit tests, but probably still has some bugs remaining.  Code by Nick Mathewson and Christopher Davis.\n o Numerous other bugfixes.\n o On FreeBSD and other OSes, connect can return ECONREFUSED immediately; instead of failin",
                    "rendered": {
                      "text": " OpenBSD.\n o Options passed to evdns_set_option() no longer need to end with a colon.\n o Add an evutil_getaddrinfo() function to clone getaddrinfo on platforms that don't have it.\n o Add an evdns_getaddrinfo() function to provide a nonblocking getaddrinfo using evdns, so programs can perform useful hostname lookup.\n o Finally expose the IOCP-based bufferevent backend.  It passes its unit tests, but probably still has some bugs remaining.  Code by Nick Mathewson and Christopher Davis.\n o Numerous other bugfixes.\n o On FreeBSD and other OSes, connect can return ECONREFUSED immediately; instead of failin",
                      "markdown": "` OpenBSD.\n o Options passed to evdns_set_option() no longer need to end with a colon.\n o Add an evutil_getaddrinfo() function to clone getaddrinfo on platforms that don't have it.\n o Add an evdns_getaddrinfo() function to provide a nonblocking getaddrinfo using evdns, so programs can perform useful hostname lookup.\n o Finally expose the IOCP-based bufferevent backend.  It passes its unit tests, but probably still has some bugs remaining.  Code by Nick Mathewson and Christopher Davis.\n o Numerous other bugfixes.\n o On FreeBSD and other OSes, connect can return ECONREFUSED immediately; instead of failin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1061,
                  "startColumn": 40,
                  "endLine": 1061,
                  "endColumn": 48,
                  "snippet": {
                    "text": "ever call exit() on failure.  For backward \"compatibility\", event_init() still does, but more consistently.\n o Remove compat/sys/_time.h.  It interfered with system headers on HPUX, and its functionality has been subsumed by event2/util.h and util-internal.h.\n o Add a new bufferevent_socket_connect_hostname() to encapsulate the resolve-then-connect operation.\n o Build kqueue.c correctly on GNU/kFreeBSD platforms. Patch pulled upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disabl",
                    "rendered": {
                      "text": "ever call exit() on failure.  For backward \"compatibility\", event_init() still does, but more consistently.\n o Remove compat/sys/_time.h.  It interfered with system headers on HPUX, and its functionality has been subsumed by event2/util.h and util-internal.h.\n o Add a new bufferevent_socket_connect_hostname() to encapsulate the resolve-then-connect operation.\n o Build kqueue.c correctly on GNU/kFreeBSD platforms. Patch pulled upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disabl",
                      "markdown": "`ever call exit() on failure.  For backward \"compatibility\", event_init() still does, but more consistently.\n o Remove compat/sys/_time.h.  It interfered with system headers on HPUX, and its functionality has been subsumed by event2/util.h and util-internal.h.\n o Add a new bufferevent_socket_connect_hostname() to encapsulate the resolve-then-connect operation.\n o Build kqueue.c correctly on GNU/kFreeBSD platforms. Patch pulled upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disabl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 962,
                  "startColumn": 45,
                  "endLine": 962,
                  "endColumn": 53,
                  "snippet": {
                    "text": " o Add a unit test for secure rng. (48a29b6)\n o Add some headers to fix freebsd compilation (b72be50)\n o When connect() succeeds immediately, don't invoke the callback immediately. (7515de9)\n o Suspend read/write on bufferevents during hostname lookup (db08f64)\n o Make bufferevent_free() clear all callbacks immediately. (b2fbeb3)\n o Fix some race conditions in persistent events and event_reinit (e2642f0)\n o Fix a bug in resetting timeouts on persistent events when IO triggers. (38ec0a7)\n",
                    "rendered": {
                      "text": " o Add a unit test for secure rng. (48a29b6)\n o Add some headers to fix freebsd compilation (b72be50)\n o When connect() succeeds immediately, don't invoke the callback immediately. (7515de9)\n o Suspend read/write on bufferevents during hostname lookup (db08f64)\n o Make bufferevent_free() clear all callbacks immediately. (b2fbeb3)\n o Fix some race conditions in persistent events and event_reinit (e2642f0)\n o Fix a bug in resetting timeouts on persistent events when IO triggers. (38ec0a7)\n",
                      "markdown": "` o Add a unit test for secure rng. (48a29b6)\n o Add some headers to fix freebsd compilation (b72be50)\n o When connect() succeeds immediately, don't invoke the callback immediately. (7515de9)\n o Suspend read/write on bufferevents during hostname lookup (db08f64)\n o Make bufferevent_free() clear all callbacks immediately. (b2fbeb3)\n o Fix some race conditions in persistent events and event_reinit (e2642f0)\n o Fix a bug in resetting timeouts on persistent events when IO triggers. (38ec0a7)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 879,
                  "startColumn": 43,
                  "endLine": 879,
                  "endColumn": 51,
                  "snippet": {
                    "text": " o Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD. (d0939d2 Jardel Weyrich)\n o evdns_getaddrinfo() now supports the /etc/hosts file. (72dd666)\n o Look at the proper /etc/hosts file on windows. (66c02c7)\n o Allow http connections to use evdns for hostname looksups. (c698b77)\n o Changelist code to defer event changes until just before dispatch (27308aa)\n o do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new() which is a new function introduced in 2.0 (5032e52)\n o Functions to access more fields of struct event. (0683950)\n",
                    "rendered": {
                      "text": " o Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD. (d0939d2 Jardel Weyrich)\n o evdns_getaddrinfo() now supports the /etc/hosts file. (72dd666)\n o Look at the proper /etc/hosts file on windows. (66c02c7)\n o Allow http connections to use evdns for hostname looksups. (c698b77)\n o Changelist code to defer event changes until just before dispatch (27308aa)\n o do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new() which is a new function introduced in 2.0 (5032e52)\n o Functions to access more fields of struct event. (0683950)\n",
                      "markdown": "` o Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD. (d0939d2 Jardel Weyrich)\n o evdns_getaddrinfo() now supports the /etc/hosts file. (72dd666)\n o Look at the proper /etc/hosts file on windows. (66c02c7)\n o Allow http connections to use evdns for hostname looksups. (c698b77)\n o Changelist code to defer event changes until just before dispatch (27308aa)\n o do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new() which is a new function introduced in 2.0 (5032e52)\n o Functions to access more fields of struct event. (0683950)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 824,
                  "startColumn": 37,
                  "endLine": 824,
                  "endColumn": 45,
                  "snippet": {
                    "text": " o add more (currently skipped) add_file tests on win32 (05de45d)\n o Fix bench_http build on win32. (384d124)\n o Make unit test for add_file able to tell \"error\" from \"done\" (88a543f)\n o Make test for bufferevent_connect_hostname system-neutral (f89168e)\n o Make test.sh support mingw/msys on win32 (0ee6f6c)\n o Fix test.sh on freebsd (3d9e05b)\n\n",
                    "rendered": {
                      "text": " o add more (currently skipped) add_file tests on win32 (05de45d)\n o Fix bench_http build on win32. (384d124)\n o Make unit test for add_file able to tell \"error\" from \"done\" (88a543f)\n o Make test for bufferevent_connect_hostname system-neutral (f89168e)\n o Make test.sh support mingw/msys on win32 (0ee6f6c)\n o Fix test.sh on freebsd (3d9e05b)\n\n",
                      "markdown": "` o add more (currently skipped) add_file tests on win32 (05de45d)\n o Fix bench_http build on win32. (384d124)\n o Make unit test for add_file able to tell \"error\" from \"done\" (88a543f)\n o Make test for bufferevent_connect_hostname system-neutral (f89168e)\n o Make test.sh support mingw/msys on win32 (0ee6f6c)\n o Fix test.sh on freebsd (3d9e05b)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 72,
                  "endLine": 745,
                  "endColumn": 80,
                  "snippet": {
                    "text": ")\n o Add void* arguments to request_new and reply_new evrpc hooks (755fbf1 Shuo Chen)\n o Seed the RNG using sysctl() as well as /dev/urandom (71fc3eb)\n o Make evutil_secure_rng_init() work even with builtin arc4random (f980716)\n o Report DNS error when lookup fails during bufferevent_socket_connect_hostname. (0ef4070 Christopher Davis)\n o Release locks on bufferevents while executing callbacks (a5208fe Joachim Bauch) o Make debug mode catch mixed ET and non-ET events on an fd (cb67074)\n o Catch attempts to enable debug_mode too late (9ecf0d4)\n o Refuse null keys in evhttp_parse_query() (953e229 Frank ",
                    "rendered": {
                      "text": ")\n o Add void* arguments to request_new and reply_new evrpc hooks (755fbf1 Shuo Chen)\n o Seed the RNG using sysctl() as well as /dev/urandom (71fc3eb)\n o Make evutil_secure_rng_init() work even with builtin arc4random (f980716)\n o Report DNS error when lookup fails during bufferevent_socket_connect_hostname. (0ef4070 Christopher Davis)\n o Release locks on bufferevents while executing callbacks (a5208fe Joachim Bauch) o Make debug mode catch mixed ET and non-ET events on an fd (cb67074)\n o Catch attempts to enable debug_mode too late (9ecf0d4)\n o Refuse null keys in evhttp_parse_query() (953e229 Frank ",
                      "markdown": "`)\n o Add void* arguments to request_new and reply_new evrpc hooks (755fbf1 Shuo Chen)\n o Seed the RNG using sysctl() as well as /dev/urandom (71fc3eb)\n o Make evutil_secure_rng_init() work even with builtin arc4random (f980716)\n o Report DNS error when lookup fails during bufferevent_socket_connect_hostname. (0ef4070 Christopher Davis)\n o Release locks on bufferevents while executing callbacks (a5208fe Joachim Bauch) o Make debug mode catch mixed ET and non-ET events on an fd (cb67074)\n o Catch attempts to enable debug_mode too late (9ecf0d4)\n o Refuse null keys in evhttp_parse_query() (953e229 Frank `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 56,
                  "endLine": 696,
                  "endColumn": 64,
                  "snippet": {
                    "text": " o Add test for behavior on remote socket close (44d57ee)\n o Unit test for event_get_struct_event_size() (7510aac)\n o Make test/test.sh call test-changelist (7c92691)\n o Fix badly-behaved subtest of dns/bufferevent_connect_hostname (840a72f Joachim Bauch)\n o Add option to test-ratelim to test min_share (42f6b62)\n o Fix an assertion bug in test-ratelim (b2c6202)\n o Make tests quieter on local dns resolver failure (e996b3d)\n",
                    "rendered": {
                      "text": " o Add test for behavior on remote socket close (44d57ee)\n o Unit test for event_get_struct_event_size() (7510aac)\n o Make test/test.sh call test-changelist (7c92691)\n o Fix badly-behaved subtest of dns/bufferevent_connect_hostname (840a72f Joachim Bauch)\n o Add option to test-ratelim to test min_share (42f6b62)\n o Fix an assertion bug in test-ratelim (b2c6202)\n o Make tests quieter on local dns resolver failure (e996b3d)\n",
                      "markdown": "` o Add test for behavior on remote socket close (44d57ee)\n o Unit test for event_get_struct_event_size() (7510aac)\n o Make test/test.sh call test-changelist (7c92691)\n o Fix badly-behaved subtest of dns/bufferevent_connect_hostname (840a72f Joachim Bauch)\n o Add option to test-ratelim to test min_share (42f6b62)\n o Fix an assertion bug in test-ratelim (b2c6202)\n o Make tests quieter on local dns resolver failure (e996b3d)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 55,
                  "endLine": 140,
                  "endColumn": 63,
                  "snippet": {
                    "text": " o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n\nTESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n",
                    "rendered": {
                      "text": " o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n\nTESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n",
                      "markdown": "` o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n\nTESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1276,
                  "startColumn": 54,
                  "endLine": 1276,
                  "endColumn": 58,
                  "snippet": {
                    "text": " o sendfile, mmap and memory reference support for evbuffers.\n o New evutil_make_listen_socket_reuseable() to abstract SO_REUSEADDR.\n o New bind-to option to allow DNS clients to bind to an arbitrary port for outgoing requests.\n o evbuffers can now be \"frozen\" to prevent operations at one or both ends.\n o Bufferevents now notice external attempts to add data to an inbuf or remove it from an outbuf, and stop them.\n o Fix parsing of queries where the encoded queries contained \\r, \\n or +\n o Do not allow internal events to starve lower-priority events.\n",
                    "rendered": {
                      "text": " o sendfile, mmap and memory reference support for evbuffers.\n o New evutil_make_listen_socket_reuseable() to abstract SO_REUSEADDR.\n o New bind-to option to allow DNS clients to bind to an arbitrary port for outgoing requests.\n o evbuffers can now be \"frozen\" to prevent operations at one or both ends.\n o Bufferevents now notice external attempts to add data to an inbuf or remove it from an outbuf, and stop them.\n o Fix parsing of queries where the encoded queries contained \\r, \\n or +\n o Do not allow internal events to starve lower-priority events.\n",
                      "markdown": "` o sendfile, mmap and memory reference support for evbuffers.\n o New evutil_make_listen_socket_reuseable() to abstract SO_REUSEADDR.\n o New bind-to option to allow DNS clients to bind to an arbitrary port for outgoing requests.\n o evbuffers can now be \"frozen\" to prevent operations at one or both ends.\n o Bufferevents now notice external attempts to add data to an inbuf or remove it from an outbuf, and stop them.\n o Fix parsing of queries where the encoded queries contained \\r, \\n or +\n o Do not allow internal events to starve lower-priority events.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 25,
                  "endLine": 1247,
                  "endColumn": 29,
                  "snippet": {
                    "text": " o Correct handling of trailing headers in chunked replies; from Scott Lamb.\n o Support multi-line HTTP headers; based on a patch from Moshe Litvin\n o Reject negative Content-Length headers; anonymous bug report\n o Detect CLOCK_MONOTONIC at runtime for evdns; anonymous bug report\t\n o Various HTTP correctness fixes from Scott Lamb\n o Fix a bug where deleting signals with the kqueue backend would cause subsequent adds to fail\n o Support multiple events listening on the same signal; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n",
                    "rendered": {
                      "text": " o Correct handling of trailing headers in chunked replies; from Scott Lamb.\n o Support multi-line HTTP headers; based on a patch from Moshe Litvin\n o Reject negative Content-Length headers; anonymous bug report\n o Detect CLOCK_MONOTONIC at runtime for evdns; anonymous bug report\t\n o Various HTTP correctness fixes from Scott Lamb\n o Fix a bug where deleting signals with the kqueue backend would cause subsequent adds to fail\n o Support multiple events listening on the same signal; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n",
                      "markdown": "` o Correct handling of trailing headers in chunked replies; from Scott Lamb.\n o Support multi-line HTTP headers; based on a patch from Moshe Litvin\n o Reject negative Content-Length headers; anonymous bug report\n o Detect CLOCK_MONOTONIC at runtime for evdns; anonymous bug report\t\n o Various HTTP correctness fixes from Scott Lamb\n o Fix a bug where deleting signals with the kqueue backend would cause subsequent adds to fail\n o Support multiple events listening on the same signal; make signals regular events that go on the same event queue; problem report by Alexander Drozdov.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1108,
                  "startColumn": 39,
                  "endLine": 1108,
                  "endColumn": 43,
                  "snippet": {
                    "text": "on to mirror bufferevent_setfd()\n o Make bufferevent_setfd() return an error code if the operation is not successful.\n o Shave 22 bytes off struct event on 32-bit platforms by shrinking and re-ordering fields.  The savings on 64-bit platforms is likely higher.\n o Cap the maximum number of priorities at 256.\n o Change the semantics of evbuffer_cb_set_flags() to be set-flag only; add a new evbuffer_cb_clear_flags() to remove set flags.\n o Change the interface of evbuffer_add_reference so that the cleanup callback gets more information\n o Revise the new evbuffer_reserve_space/evbuffer_commit_space() ",
                    "rendered": {
                      "text": "on to mirror bufferevent_setfd()\n o Make bufferevent_setfd() return an error code if the operation is not successful.\n o Shave 22 bytes off struct event on 32-bit platforms by shrinking and re-ordering fields.  The savings on 64-bit platforms is likely higher.\n o Cap the maximum number of priorities at 256.\n o Change the semantics of evbuffer_cb_set_flags() to be set-flag only; add a new evbuffer_cb_clear_flags() to remove set flags.\n o Change the interface of evbuffer_add_reference so that the cleanup callback gets more information\n o Revise the new evbuffer_reserve_space/evbuffer_commit_space() ",
                      "markdown": "`on to mirror bufferevent_setfd()\n o Make bufferevent_setfd() return an error code if the operation is not successful.\n o Shave 22 bytes off struct event on 32-bit platforms by shrinking and re-ordering fields.  The savings on 64-bit platforms is likely higher.\n o Cap the maximum number of priorities at 256.\n o Change the semantics of evbuffer_cb_set_flags() to be set-flag only; add a new evbuffer_cb_clear_flags() to remove set flags.\n o Change the interface of evbuffer_add_reference so that the cleanup callback gets more information\n o Revise the new evbuffer_reserve_space/evbuffer_commit_space() `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1043,
                  "startColumn": 116,
                  "endLine": 1043,
                  "endColumn": 120,
                  "snippet": {
                    "text": "; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 374K per epoll-based event_base.  Resolves bug 2839240.\n o Treat an event with a negative fd as valid but untriggerable by Libevent.  This is useful for applications tha",
                    "rendered": {
                      "text": "; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 374K per epoll-based event_base.  Resolves bug 2839240.\n o Treat an event with a negative fd as valid but untriggerable by Libevent.  This is useful for applications tha",
                      "markdown": "`; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 374K per epoll-based event_base.  Resolves bug 2839240.\n o Treat an event with a negative fd as valid but untriggerable by Libevent.  This is useful for applications tha`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1043,
                  "startColumn": 64,
                  "endLine": 1043,
                  "endColumn": 68,
                  "snippet": {
                    "text": "from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 374K per epoll-based event_base.  Resolves bug 2839240.\n o Treat an event with a negative fd as valid but untriggerab",
                    "rendered": {
                      "text": "from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 374K per epoll-based event_base.  Resolves bug 2839240.\n o Treat an event with a negative fd as valid but untriggerab",
                      "markdown": "`from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we're requesting them.  Saves up to 374K per epoll-based event_base.  Resolves bug 2839240.\n o Treat an event with a negative fd as valid but untriggerab`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1014,
                  "startColumn": 2,
                  "endLine": 1014,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Reduce windows header includes in our own headers. (da6135e)\n o clean up terminate_chunked test (e8a9782)\n o Increment the submicro version number. (63e868e)\n o Update event-config.h version number to match configure.in (aae7db5)\n o Clean up formatting: Disallow space-before-tab. (8fdf09c)\n o Clean up formatting: use tabs, not 8-spaces, to indent. (e5bbd40)\n o Clean up formatting: remove trailing spaces (e5cf987)\n",
                    "rendered": {
                      "text": " o Reduce windows header includes in our own headers. (da6135e)\n o clean up terminate_chunked test (e8a9782)\n o Increment the submicro version number. (63e868e)\n o Update event-config.h version number to match configure.in (aae7db5)\n o Clean up formatting: Disallow space-before-tab. (8fdf09c)\n o Clean up formatting: use tabs, not 8-spaces, to indent. (e5bbd40)\n o Clean up formatting: remove trailing spaces (e5cf987)\n",
                      "markdown": "` o Reduce windows header includes in our own headers. (da6135e)\n o clean up terminate_chunked test (e8a9782)\n o Increment the submicro version number. (63e868e)\n o Update event-config.h version number to match configure.in (aae7db5)\n o Clean up formatting: Disallow space-before-tab. (8fdf09c)\n o Clean up formatting: use tabs, not 8-spaces, to indent. (e5bbd40)\n o Clean up formatting: remove trailing spaces (e5cf987)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 2,
                  "endLine": 917,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Fix a snow leopard compile warning in the unit tests. (7ae9445)\n o Fix compile on Snow Leopard with gcc warnings enabled (70cdfe4 Sebastian Hahn)\n o Only define _GNU_SOURCE if it is not already defined. (ea6b1df Joachim Bauch)\n o Update sample/signal-test.c to use newer APIs and not leak. (f6430ac Evan Jones)\n o Fix a segfault when writing a very fragmented evbuffer onto an SSL (a6adeca Joachim Bauch)\n o Fix a segfault when freeing SSL bufferevents in an unusual order (a773df5 Joachim Bauch)\n o Drop install-sh from our git repo: a mismatched version could break \"make dist\" (6799527)\n",
                    "rendered": {
                      "text": " o Fix a snow leopard compile warning in the unit tests. (7ae9445)\n o Fix compile on Snow Leopard with gcc warnings enabled (70cdfe4 Sebastian Hahn)\n o Only define _GNU_SOURCE if it is not already defined. (ea6b1df Joachim Bauch)\n o Update sample/signal-test.c to use newer APIs and not leak. (f6430ac Evan Jones)\n o Fix a segfault when writing a very fragmented evbuffer onto an SSL (a6adeca Joachim Bauch)\n o Fix a segfault when freeing SSL bufferevents in an unusual order (a773df5 Joachim Bauch)\n o Drop install-sh from our git repo: a mismatched version could break \"make dist\" (6799527)\n",
                      "markdown": "` o Fix a snow leopard compile warning in the unit tests. (7ae9445)\n o Fix compile on Snow Leopard with gcc warnings enabled (70cdfe4 Sebastian Hahn)\n o Only define _GNU_SOURCE if it is not already defined. (ea6b1df Joachim Bauch)\n o Update sample/signal-test.c to use newer APIs and not leak. (f6430ac Evan Jones)\n o Fix a segfault when writing a very fragmented evbuffer onto an SSL (a6adeca Joachim Bauch)\n o Fix a segfault when freeing SSL bufferevents in an unusual order (a773df5 Joachim Bauch)\n o Drop install-sh from our git repo: a mismatched version could break \"make dist\" (6799527)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 912,
                  "startColumn": 2,
                  "endLine": 912,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Valgrind fix: Clear struct kevent before checking for OSX bug. (56771a3 William Ahern)\n o Fix up evthread compilation on windows (bd6f1ba Roman Puls)\n o Fix regress_iocp.c usage of old lock allocation macros. (31687b4 unknown)\n o Update nmake makefile to build evthread.c (b62d979 unknown)\n o Fix a crash when reading badly formatted resolve.conf; from Yasuoka Masahiko (6c7c579 Yasuoka Masahiko)\n o Fix a snow leopard compile warning in the unit tests. (7ae9445)\n o Fix compile on Snow Leopard with gcc warnings enabled (70cdfe4 Sebastian Hahn)\n",
                    "rendered": {
                      "text": " o Valgrind fix: Clear struct kevent before checking for OSX bug. (56771a3 William Ahern)\n o Fix up evthread compilation on windows (bd6f1ba Roman Puls)\n o Fix regress_iocp.c usage of old lock allocation macros. (31687b4 unknown)\n o Update nmake makefile to build evthread.c (b62d979 unknown)\n o Fix a crash when reading badly formatted resolve.conf; from Yasuoka Masahiko (6c7c579 Yasuoka Masahiko)\n o Fix a snow leopard compile warning in the unit tests. (7ae9445)\n o Fix compile on Snow Leopard with gcc warnings enabled (70cdfe4 Sebastian Hahn)\n",
                      "markdown": "` o Valgrind fix: Clear struct kevent before checking for OSX bug. (56771a3 William Ahern)\n o Fix up evthread compilation on windows (bd6f1ba Roman Puls)\n o Fix regress_iocp.c usage of old lock allocation macros. (31687b4 unknown)\n o Update nmake makefile to build evthread.c (b62d979 unknown)\n o Fix a crash when reading badly formatted resolve.conf; from Yasuoka Masahiko (6c7c579 Yasuoka Masahiko)\n o Fix a snow leopard compile warning in the unit tests. (7ae9445)\n o Fix compile on Snow Leopard with gcc warnings enabled (70cdfe4 Sebastian Hahn)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 7,
                  "endLine": 878,
                  "endColumn": 11,
                  "snippet": {
                    "text": "le EV_READ and EV_WRITE. (8274379)\n o Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect(). (4a5b534)\n o Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD. (d0939d2 Jardel Weyrich)\n o evdns_getaddrinfo() now supports the /etc/hosts file. (72dd666)\n o Look at the proper /etc/hosts file on windows. (66c02c7)\n o Allow http connections to use evdns for hostname looksups. (c698b77)\n o Changelist code to defer event changes until just before dispatch (27308aa)\n o do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new(",
                    "rendered": {
                      "text": "le EV_READ and EV_WRITE. (8274379)\n o Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect(). (4a5b534)\n o Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD. (d0939d2 Jardel Weyrich)\n o evdns_getaddrinfo() now supports the /etc/hosts file. (72dd666)\n o Look at the proper /etc/hosts file on windows. (66c02c7)\n o Allow http connections to use evdns for hostname looksups. (c698b77)\n o Changelist code to defer event changes until just before dispatch (27308aa)\n o do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new(",
                      "markdown": "`le EV_READ and EV_WRITE. (8274379)\n o Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect(). (4a5b534)\n o Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD. (d0939d2 Jardel Weyrich)\n o evdns_getaddrinfo() now supports the /etc/hosts file. (72dd666)\n o Look at the proper /etc/hosts file on windows. (66c02c7)\n o Allow http connections to use evdns for hostname looksups. (c698b77)\n o Changelist code to defer event changes until just before dispatch (27308aa)\n o do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new(`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 865,
                  "startColumn": 2,
                  "endLine": 865,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Add a LICENSE file so people can find our license easily (7067006)\n o Add a new \"hello world\" sample program (becb9f9)\n o Clarify status of example programs (d60a1bd)\n o Update time-test.c to use event2 (f4190bf)\n o Add the arc4random.c license to the LICENSE file. (e15e1e9)\n\nNEW FEATURES AND INTERFACE CHANGES\n",
                    "rendered": {
                      "text": " o Add a LICENSE file so people can find our license easily (7067006)\n o Add a new \"hello world\" sample program (becb9f9)\n o Clarify status of example programs (d60a1bd)\n o Update time-test.c to use event2 (f4190bf)\n o Add the arc4random.c license to the LICENSE file. (e15e1e9)\n\nNEW FEATURES AND INTERFACE CHANGES\n",
                      "markdown": "` o Add a LICENSE file so people can find our license easily (7067006)\n o Add a new \"hello world\" sample program (becb9f9)\n o Clarify status of example programs (d60a1bd)\n o Update time-test.c to use event2 (f4190bf)\n o Add the arc4random.c license to the LICENSE file. (e15e1e9)\n\nNEW FEATURES AND INTERFACE CHANGES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 25,
                  "endLine": 819,
                  "endColumn": 29,
                  "snippet": {
                    "text": " o Test another case of evbuffer_prepend (1234b95)\n o Fix a possible double-free bug in SSL bufferevents with CLOSE_ON_FREE (7501895) o Add dns/search_cancel unit test. (39b870b Christopher Davis)\n o Make http_base_test stop leaking an event_base. (96730d3)\n o Detect broken unsetenv at unit-test runtime (f37cd4c)\n o Implement regress_make_tempfile on win32 to test evbuffer_add_file (b4f12a1)\n o add more (currently skipped) add_file tests on win32 (05de45d)\n o Fix bench_http build on win32. (384d124)\n",
                    "rendered": {
                      "text": " o Test another case of evbuffer_prepend (1234b95)\n o Fix a possible double-free bug in SSL bufferevents with CLOSE_ON_FREE (7501895) o Add dns/search_cancel unit test. (39b870b Christopher Davis)\n o Make http_base_test stop leaking an event_base. (96730d3)\n o Detect broken unsetenv at unit-test runtime (f37cd4c)\n o Implement regress_make_tempfile on win32 to test evbuffer_add_file (b4f12a1)\n o add more (currently skipped) add_file tests on win32 (05de45d)\n o Fix bench_http build on win32. (384d124)\n",
                      "markdown": "` o Test another case of evbuffer_prepend (1234b95)\n o Fix a possible double-free bug in SSL bufferevents with CLOSE_ON_FREE (7501895) o Add dns/search_cancel unit test. (39b870b Christopher Davis)\n o Make http_base_test stop leaking an event_base. (96730d3)\n o Detect broken unsetenv at unit-test runtime (f37cd4c)\n o Implement regress_make_tempfile on win32 to test evbuffer_add_file (b4f12a1)\n o add more (currently skipped) add_file tests on win32 (05de45d)\n o Fix bench_http build on win32. (384d124)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 723,
                  "startColumn": 2,
                  "endLine": 723,
                  "endColumn": 10,
                  "snippet": {
                    "text": "Changes in 2.0.5-beta (10 May 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Update all our copyright notices to say \"2010\" (17efc1c)\n o Add Christopher Clark and Maxim Yegorushkin to the LICENSE file (38b7b57)\n o Clarify Christopher Clark's status as writer of original ht code. (78772c3)\n o Try to comment some of the event code more (cdd4c49)\n",
                    "rendered": {
                      "text": "Changes in 2.0.5-beta (10 May 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Update all our copyright notices to say \"2010\" (17efc1c)\n o Add Christopher Clark and Maxim Yegorushkin to the LICENSE file (38b7b57)\n o Clarify Christopher Clark's status as writer of original ht code. (78772c3)\n o Try to comment some of the event code more (cdd4c49)\n",
                      "markdown": "`Changes in 2.0.5-beta (10 May 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Update all our copyright notices to say \"2010\" (17efc1c)\n o Add Christopher Clark and Maxim Yegorushkin to the LICENSE file (38b7b57)\n o Clarify Christopher Clark's status as writer of original ht code. (78772c3)\n o Try to comment some of the event code more (cdd4c49)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 35,
                  "endLine": 710,
                  "endColumn": 39,
                  "snippet": {
                    "text": " o Replace (safe) use of strcpy with memcpy to appease OpenBSD (caca2f4)\n o Remove some dead assignments (47c5dfb)\n o Fix a pedantic gcc 4.4 warning in event2/event.h (276e7ee)\n o Drain th_notify_fd[0] more bytes at a time. (a5bc15b)\n o Tidy up the code in evthread_make_base_notifiable a little (61e1eee)\n o Pass flags to fcntl(F_SETFL) and fcntl(F_SETFD) as int, not long (7c2dea1)\n o Remove unused variables in test/test-changelist.c (b00d4c0)\n",
                    "rendered": {
                      "text": " o Replace (safe) use of strcpy with memcpy to appease OpenBSD (caca2f4)\n o Remove some dead assignments (47c5dfb)\n o Fix a pedantic gcc 4.4 warning in event2/event.h (276e7ee)\n o Drain th_notify_fd[0] more bytes at a time. (a5bc15b)\n o Tidy up the code in evthread_make_base_notifiable a little (61e1eee)\n o Pass flags to fcntl(F_SETFL) and fcntl(F_SETFD) as int, not long (7c2dea1)\n o Remove unused variables in test/test-changelist.c (b00d4c0)\n",
                      "markdown": "` o Replace (safe) use of strcpy with memcpy to appease OpenBSD (caca2f4)\n o Remove some dead assignments (47c5dfb)\n o Fix a pedantic gcc 4.4 warning in event2/event.h (276e7ee)\n o Drain th_notify_fd[0] more bytes at a time. (a5bc15b)\n o Tidy up the code in evthread_make_base_notifiable a little (61e1eee)\n o Pass flags to fcntl(F_SETFL) and fcntl(F_SETFD) as int, not long (7c2dea1)\n o Remove unused variables in test/test-changelist.c (b00d4c0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 2,
                  "endLine": 628,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION\n o Document that DNS_NO_SEARCH is an obsolete alias for DNS_QUERY_NO_SEARCH (33200e7)\n o Update the whatsnew-2.0.txt document (4991669)\n\n\n\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION\n o Document that DNS_NO_SEARCH is an obsolete alias for DNS_QUERY_NO_SEARCH (33200e7)\n o Update the whatsnew-2.0.txt document (4991669)\n\n\n\n",
                      "markdown": "`\nDOCUMENTATION\n o Document that DNS_NO_SEARCH is an obsolete alias for DNS_QUERY_NO_SEARCH (33200e7)\n o Update the whatsnew-2.0.txt document (4991669)\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 54,
                  "endLine": 606,
                  "endColumn": 58,
                  "snippet": {
                    "text": "TESTS\n o Make the regress_pthread.c tests work on windows with current test APIs (d74ae38)\n o Add a unit test for conditions (5fb1095)\n o Allow more than one copy of regression tests to run at once (a97320a)\n o Fix event_del(0) instance in bench.c (b0f284c Shuo Chen)\n o Fix a few memory leaks in the tests (1115366)\n o IOCP-related unit test tweaks (499452f Christopher Davis)\n",
                    "rendered": {
                      "text": "TESTS\n o Make the regress_pthread.c tests work on windows with current test APIs (d74ae38)\n o Add a unit test for conditions (5fb1095)\n o Allow more than one copy of regression tests to run at once (a97320a)\n o Fix event_del(0) instance in bench.c (b0f284c Shuo Chen)\n o Fix a few memory leaks in the tests (1115366)\n o IOCP-related unit test tweaks (499452f Christopher Davis)\n",
                      "markdown": "`TESTS\n o Make the regress_pthread.c tests work on windows with current test APIs (d74ae38)\n o Add a unit test for conditions (5fb1095)\n o Allow more than one copy of regression tests to run at once (a97320a)\n o Fix event_del(0) instance in bench.c (b0f284c Shuo Chen)\n o Fix a few memory leaks in the tests (1115366)\n o IOCP-related unit test tweaks (499452f Christopher Davis)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 47,
                  "endLine": 588,
                  "endColumn": 51,
                  "snippet": {
                    "text": " o Close th_notify_fds and open a new pair on reinit (495ed66)\n o Declare signal handler function as \"__cdecl\" on Windows (f0056d0)\n o Use the _func() replacements for open, fstat, etc in evutil.c on win32 (e50c0fc)\n o Only process up to MAX_DEFERRED deferred_cbs at a time (17a14f1 Christopher Davis)\n\nTHREADING BUGFIXES\n o Avoid deadlock when activating signals (970e6ad)\n",
                    "rendered": {
                      "text": " o Close th_notify_fds and open a new pair on reinit (495ed66)\n o Declare signal handler function as \"__cdecl\" on Windows (f0056d0)\n o Use the _func() replacements for open, fstat, etc in evutil.c on win32 (e50c0fc)\n o Only process up to MAX_DEFERRED deferred_cbs at a time (17a14f1 Christopher Davis)\n\nTHREADING BUGFIXES\n o Avoid deadlock when activating signals (970e6ad)\n",
                      "markdown": "` o Close th_notify_fds and open a new pair on reinit (495ed66)\n o Declare signal handler function as \"__cdecl\" on Windows (f0056d0)\n o Use the _func() replacements for open, fstat, etc in evutil.c on win32 (e50c0fc)\n o Only process up to MAX_DEFERRED deferred_cbs at a time (17a14f1 Christopher Davis)\n\nTHREADING BUGFIXES\n o Avoid deadlock when activating signals (970e6ad)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 22,
                  "endLine": 535,
                  "endColumn": 26,
                  "snippet": {
                    "text": " o Obey enabled status when unsuspending (040a019 Simon Perreault)\n o Warn when using the error-prone EV_SIGNAL interface in an error-prone way.  Also, fix a couple of race conditions in signal.c (720bd93)\n O Make default signal backend fully threadsafe (95a7d41)\n o Put internal events at highest priority (90651b3)\n o Fix warnings in the main codebase flagged by -Wsigned-compare (9c8db0, 5e4bafb, 5c214a, 6be589a, e06f514)\n o Fix compile in kqueue.c (b395392 Sebastian Hahn)\n o Do not search outside of the system directory for windows DLLs (d49b5e3)\n",
                    "rendered": {
                      "text": " o Obey enabled status when unsuspending (040a019 Simon Perreault)\n o Warn when using the error-prone EV_SIGNAL interface in an error-prone way.  Also, fix a couple of race conditions in signal.c (720bd93)\n O Make default signal backend fully threadsafe (95a7d41)\n o Put internal events at highest priority (90651b3)\n o Fix warnings in the main codebase flagged by -Wsigned-compare (9c8db0, 5e4bafb, 5c214a, 6be589a, e06f514)\n o Fix compile in kqueue.c (b395392 Sebastian Hahn)\n o Do not search outside of the system directory for windows DLLs (d49b5e3)\n",
                      "markdown": "` o Obey enabled status when unsuspending (040a019 Simon Perreault)\n o Warn when using the error-prone EV_SIGNAL interface in an error-prone way.  Also, fix a couple of race conditions in signal.c (720bd93)\n O Make default signal backend fully threadsafe (95a7d41)\n o Put internal events at highest priority (90651b3)\n o Fix warnings in the main codebase flagged by -Wsigned-compare (9c8db0, 5e4bafb, 5c214a, 6be589a, e06f514)\n o Fix compile in kqueue.c (b395392 Sebastian Hahn)\n o Do not search outside of the system directory for windows DLLs (d49b5e3)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 2,
                  "endLine": 485,
                  "endColumn": 10,
                  "snippet": {
                    "text": " o Stop using Libevent-1 headers in regress_http (1f507d7)\n o Modernize header usage in bench_http.c (e587069)\n o fix signed/unsigned warnings in http.c (74a91e5)\n o Update the HTTP regression tests to use Libevent2 apis for non-http stuff (d9ffa89)\n o Start porting http tests to not use legacy interfaces (8505a74)\n o Convert the rest of the http tests to be non-legacy unit tests. (9bb8239)\n o Rename the confusing \"base\" static variable in regress_http.c (353402a)\n",
                    "rendered": {
                      "text": " o Stop using Libevent-1 headers in regress_http (1f507d7)\n o Modernize header usage in bench_http.c (e587069)\n o fix signed/unsigned warnings in http.c (74a91e5)\n o Update the HTTP regression tests to use Libevent2 apis for non-http stuff (d9ffa89)\n o Start porting http tests to not use legacy interfaces (8505a74)\n o Convert the rest of the http tests to be non-legacy unit tests. (9bb8239)\n o Rename the confusing \"base\" static variable in regress_http.c (353402a)\n",
                      "markdown": "` o Stop using Libevent-1 headers in regress_http (1f507d7)\n o Modernize header usage in bench_http.c (e587069)\n o fix signed/unsigned warnings in http.c (74a91e5)\n o Update the HTTP regression tests to use Libevent2 apis for non-http stuff (d9ffa89)\n o Start porting http tests to not use legacy interfaces (8505a74)\n o Convert the rest of the http tests to be non-legacy unit tests. (9bb8239)\n o Rename the confusing \"base\" static variable in regress_http.c (353402a)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 80,
                  "endLine": 427,
                  "endColumn": 84,
                  "snippet": {
                    "text": "on to include http_struct.h (22e0a9b)\n o Define enumerators for all HTTP methods, including PATCH from RFC5789 (75a7341 Felix Nawothnig)\n o Functions to actually use evhttp_bound_socket with/as evconnlistener. (006efa7)\n o Add evhttp_request_get_command so code can tell GET from POST without peeking at the struct. (49f4bf7)\n o Introduce absolute URI parsing helpers. (86dd720 Pavel Plesov)\n o Revise evhttp_uri_parse implementation to handle more of RFC3986 (eaa5f1d)\n o Add evhttp_connection_get_base() to get the event_base from an http connection (cd00079)\n o Let evhttp_parse_query return -1 on fai",
                    "rendered": {
                      "text": "on to include http_struct.h (22e0a9b)\n o Define enumerators for all HTTP methods, including PATCH from RFC5789 (75a7341 Felix Nawothnig)\n o Functions to actually use evhttp_bound_socket with/as evconnlistener. (006efa7)\n o Add evhttp_request_get_command so code can tell GET from POST without peeking at the struct. (49f4bf7)\n o Introduce absolute URI parsing helpers. (86dd720 Pavel Plesov)\n o Revise evhttp_uri_parse implementation to handle more of RFC3986 (eaa5f1d)\n o Add evhttp_connection_get_base() to get the event_base from an http connection (cd00079)\n o Let evhttp_parse_query return -1 on fai",
                      "markdown": "`on to include http_struct.h (22e0a9b)\n o Define enumerators for all HTTP methods, including PATCH from RFC5789 (75a7341 Felix Nawothnig)\n o Functions to actually use evhttp_bound_socket with/as evconnlistener. (006efa7)\n o Add evhttp_request_get_command so code can tell GET from POST without peeking at the struct. (49f4bf7)\n o Introduce absolute URI parsing helpers. (86dd720 Pavel Plesov)\n o Revise evhttp_uri_parse implementation to handle more of RFC3986 (eaa5f1d)\n o Add evhttp_connection_get_base() to get the event_base from an http connection (cd00079)\n o Let evhttp_parse_query return -1 on fai`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 2,
                  "endLine": 247,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION FIXES AND IMPROVEMENTS\n o Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy (2888fac)\n o Update Doxyfile to produce more useful output (aea0555)\n\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION FIXES AND IMPROVEMENTS\n o Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy (2888fac)\n o Update Doxyfile to produce more useful output (aea0555)\n\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n",
                      "markdown": "`\nDOCUMENTATION FIXES AND IMPROVEMENTS\n o Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy (2888fac)\n o Update Doxyfile to produce more useful output (aea0555)\n\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 2,
                  "endLine": 174,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n o Update copyright dates to 2011. (3c824bd)\n o Fix typo in whatsnew-2.0.txt (674bc6a Mansour Moufid)\n o Improve win32 behavior of dns-sample.c code (a3f320e Gisle Vanem)\n\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n o Update copyright dates to 2011. (3c824bd)\n o Fix typo in whatsnew-2.0.txt (674bc6a Mansour Moufid)\n o Improve win32 behavior of dns-sample.c code (a3f320e Gisle Vanem)\n\n",
                      "markdown": "`\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n o Update copyright dates to 2011. (3c824bd)\n o Fix typo in whatsnew-2.0.txt (674bc6a Mansour Moufid)\n o Improve win32 behavior of dns-sample.c code (a3f320e Gisle Vanem)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 25,
                  "endLine": 170,
                  "endColumn": 29,
                  "snippet": {
                    "text": " o Tests for 94fba5b and f72e8f6 (d58c15e Leonid Evdokimov)\n o Test for commit aff6ba1 (f7841bf Leonid Evdokimov)\n o Style and comment tweaks for dns/leak* tests (5e42202)\n o improve test to remove at least one buffer from src (7eb52eb Greg Hazel)\n\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n",
                    "rendered": {
                      "text": " o Tests for 94fba5b and f72e8f6 (d58c15e Leonid Evdokimov)\n o Test for commit aff6ba1 (f7841bf Leonid Evdokimov)\n o Style and comment tweaks for dns/leak* tests (5e42202)\n o improve test to remove at least one buffer from src (7eb52eb Greg Hazel)\n\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n",
                      "markdown": "` o Tests for 94fba5b and f72e8f6 (d58c15e Leonid Evdokimov)\n o Test for commit aff6ba1 (f7841bf Leonid Evdokimov)\n o Style and comment tweaks for dns/leak* tests (5e42202)\n o improve test to remove at least one buffer from src (7eb52eb Greg Hazel)\n\nDOCUMENTATION:\n o Add note about evhttp_send_reply_end to its doxygen (724bfb5)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 32,
                  "endLine": 149,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Changes in version 2.0.16-stable (18 Nov 2011)\nBUGFIXES (core):\n o More detailed message in case of libevent self-debugging failure. (9e6a4ef Leonid Evdokimov)\n o epoll: close fd on alloc fail at initialization (1aee718 Jamie Iles)\n o Fix compile warning from saying event2/*.h inside a comment (447b0ba)\n o Warn when unable to construct base because of failing make_base_notifiable (4e797f3)\n o Don't try to make notifiable event_base when no threading fns are configured (e787413)\n",
                    "rendered": {
                      "text": "Changes in version 2.0.16-stable (18 Nov 2011)\nBUGFIXES (core):\n o More detailed message in case of libevent self-debugging failure. (9e6a4ef Leonid Evdokimov)\n o epoll: close fd on alloc fail at initialization (1aee718 Jamie Iles)\n o Fix compile warning from saying event2/*.h inside a comment (447b0ba)\n o Warn when unable to construct base because of failing make_base_notifiable (4e797f3)\n o Don't try to make notifiable event_base when no threading fns are configured (e787413)\n",
                      "markdown": "`Changes in version 2.0.16-stable (18 Nov 2011)\nBUGFIXES (core):\n o More detailed message in case of libevent self-debugging failure. (9e6a4ef Leonid Evdokimov)\n o epoll: close fd on alloc fail at initialization (1aee718 Jamie Iles)\n o Fix compile warning from saying event2/*.h inside a comment (447b0ba)\n o Warn when unable to construct base because of failing make_base_notifiable (4e797f3)\n o Don't try to make notifiable event_base when no threading fns are configured (e787413)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 31,
                  "endLine": 142,
                  "endColumn": 35,
                  "snippet": {
                    "text": "TESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n o Better workaround for Linux 3.2 edge-triggered epoll bug (9f9e259)\n\n",
                    "rendered": {
                      "text": "TESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n o Better workaround for Linux 3.2 edge-triggered epoll bug (9f9e259)\n\n",
                      "markdown": "`TESTS AND TEST FIXES:\n o Fix a race condition in the dns/bufferevent_connect_hostname test. (cba48c7)\n o Add function to check referential integrity of an event_base (27737d5)\n o Check event_base correctness at end of each unit test (3312b02)\n o Workaround in the unit tests for an apparent epoll bug in Linux 3.2 (dab9187)\n o Better workaround for Linux 3.2 edge-triggered epoll bug (9f9e259)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 2,
                  "endLine": 134,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nDOCUMENTATION FIXES:\n o Slightly clarify evbuffer_peek documentation (7bbf6ca)\n o Update copyright notices to 2012 (e49e289)\n\nNEW APIS:\n o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n",
                    "rendered": {
                      "text": "\nDOCUMENTATION FIXES:\n o Slightly clarify evbuffer_peek documentation (7bbf6ca)\n o Update copyright notices to 2012 (e49e289)\n\nNEW APIS:\n o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n",
                      "markdown": "`\nDOCUMENTATION FIXES:\n o Slightly clarify evbuffer_peek documentation (7bbf6ca)\n o Update copyright notices to 2012 (e49e289)\n\nNEW APIS:\n o Backport evhttp_connection_get_bufferevent to Libevent 2.0 (da70fa7 Arno Bakker)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 27,
                  "endLine": 31,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\nPORTABILITY FIXES:\n o check for arc4random_buf at runtime, on OS X (bff5f94 Greg Hazel)\n o Correctly check for arc4random_buf (fcec3e8 Sebastian Hahn)\n o Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED) (ca80ea6)\n\n",
                    "rendered": {
                      "text": "\n\nPORTABILITY FIXES:\n o check for arc4random_buf at runtime, on OS X (bff5f94 Greg Hazel)\n o Correctly check for arc4random_buf (fcec3e8 Sebastian Hahn)\n o Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED) (ca80ea6)\n\n",
                      "markdown": "`\n\nPORTABILITY FIXES:\n o check for arc4random_buf at runtime, on OS X (bff5f94 Greg Hazel)\n o Correctly check for arc4random_buf (fcec3e8 Sebastian Hahn)\n o Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED) (ca80ea6)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1229,
                  "startColumn": 17,
                  "endLine": 1229,
                  "endColumn": 25,
                  "snippet": {
                    "text": " o migrate the evhttp header to event2/ but accessors are still missing.\n o deprecate timeout_* event functions by moving them to event_compat.h\n o Move\twindows gettimeofday replacement into a new evutil_gettimeofday().\n o Make configure script work on IRIX.\n o provide a method for canceling ongoing http requests.\n o Make vsnprintf() returns consistent on win32.\n o Fix connection keep-alive behavior for HTTP/1.0\n",
                    "rendered": {
                      "text": " o migrate the evhttp header to event2/ but accessors are still missing.\n o deprecate timeout_* event functions by moving them to event_compat.h\n o Move\twindows gettimeofday replacement into a new evutil_gettimeofday().\n o Make configure script work on IRIX.\n o provide a method for canceling ongoing http requests.\n o Make vsnprintf() returns consistent on win32.\n o Fix connection keep-alive behavior for HTTP/1.0\n",
                      "markdown": "` o migrate the evhttp header to event2/ but accessors are still missing.\n o deprecate timeout_* event functions by moving them to event_compat.h\n o Move\twindows gettimeofday replacement into a new evutil_gettimeofday().\n o Make configure script work on IRIX.\n o provide a method for canceling ongoing http requests.\n o Make vsnprintf() returns consistent on win32.\n o Fix connection keep-alive behavior for HTTP/1.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1218,
                  "startColumn": 42,
                  "endLine": 1218,
                  "endColumn": 48,
                  "snippet": {
                    "text": " o switch internal uses of event_set over to use event_assign.\n o introduce evbuffer_contiguous_space() api that tells a user how much data is available in the first buffer chain\n o introduce evbuffer_reserve_space() and evbuffer_commit_space() to make processing in filters more efficient.\n o reduce system calls for getting current time by caching it.\n o separate signal events from io events; making the code less complex.\n o support for periodic timeouts\n o support for virtual HTTP hosts.\n",
                    "rendered": {
                      "text": " o switch internal uses of event_set over to use event_assign.\n o introduce evbuffer_contiguous_space() api that tells a user how much data is available in the first buffer chain\n o introduce evbuffer_reserve_space() and evbuffer_commit_space() to make processing in filters more efficient.\n o reduce system calls for getting current time by caching it.\n o separate signal events from io events; making the code less complex.\n o support for periodic timeouts\n o support for virtual HTTP hosts.\n",
                      "markdown": "` o switch internal uses of event_set over to use event_assign.\n o introduce evbuffer_contiguous_space() api that tells a user how much data is available in the first buffer chain\n o introduce evbuffer_reserve_space() and evbuffer_commit_space() to make processing in filters more efficient.\n o reduce system calls for getting current time by caching it.\n o separate signal events from io events; making the code less complex.\n o support for periodic timeouts\n o support for virtual HTTP hosts.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1194,
                  "startColumn": 30,
                  "endLine": 1194,
                  "endColumn": 39,
                  "snippet": {
                    "text": "code include event-config.h; reported by Sam Banks.\n o switch thread support so that locks get allocated as they are needed.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n o make RPC replies use application/octet-stream as mime type\n o do not delete uninitialized timeout event in evdns\n o Correct the documentation on buffer printf functions.\n o Don't warn on unimplemented epoll_create(): this isn't a problem, just a reason to fall back to poll or select.\n o Correctly handle timeouts larger than 35 minutes on Linux with epoll.c.  This is probably a kernel defect, but",
                    "rendered": {
                      "text": "code include event-config.h; reported by Sam Banks.\n o switch thread support so that locks get allocated as they are needed.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n o make RPC replies use application/octet-stream as mime type\n o do not delete uninitialized timeout event in evdns\n o Correct the documentation on buffer printf functions.\n o Don't warn on unimplemented epoll_create(): this isn't a problem, just a reason to fall back to poll or select.\n o Correctly handle timeouts larger than 35 minutes on Linux with epoll.c.  This is probably a kernel defect, but",
                      "markdown": "`code include event-config.h; reported by Sam Banks.\n o switch thread support so that locks get allocated as they are needed.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n o make RPC replies use application/octet-stream as mime type\n o do not delete uninitialized timeout event in evdns\n o Correct the documentation on buffer printf functions.\n o Don't warn on unimplemented epoll_create(): this isn't a problem, just a reason to fall back to poll or select.\n o Correctly handle timeouts larger than 35 minutes on Linux with epoll.c.  This is probably a kernel defect, but`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1189,
                  "startColumn": 10,
                  "endLine": 1189,
                  "endColumn": 19,
                  "snippet": {
                    "text": " o rewrite of the evbuffer code to reduce memory copies\n o Some older Solaris versions demand that _REENTRANT be defined to get strtok_r(); do so.\n o Do not free the kqop file descriptor in other processes, also allow it to be 0; from Andrei Nigmatulin\n o Provide OpenSSL style support for multiple threads accessing the same event_base\n o make event_rpcgen.py generate code include event-config.h; reported by Sam Banks.\n o switch thread support so that locks get allocated as they are needed.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n",
                    "rendered": {
                      "text": " o rewrite of the evbuffer code to reduce memory copies\n o Some older Solaris versions demand that _REENTRANT be defined to get strtok_r(); do so.\n o Do not free the kqop file descriptor in other processes, also allow it to be 0; from Andrei Nigmatulin\n o Provide OpenSSL style support for multiple threads accessing the same event_base\n o make event_rpcgen.py generate code include event-config.h; reported by Sam Banks.\n o switch thread support so that locks get allocated as they are needed.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n",
                      "markdown": "` o rewrite of the evbuffer code to reduce memory copies\n o Some older Solaris versions demand that _REENTRANT be defined to get strtok_r(); do so.\n o Do not free the kqop file descriptor in other processes, also allow it to be 0; from Andrei Nigmatulin\n o Provide OpenSSL style support for multiple threads accessing the same event_base\n o make event_rpcgen.py generate code include event-config.h; reported by Sam Banks.\n o switch thread support so that locks get allocated as they are needed.\n o make event methods static so that they are not exported; from Andrei Nigmatulin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1146,
                  "startColumn": 16,
                  "endLine": 1146,
                  "endColumn": 24,
                  "snippet": {
                    "text": "k return value of event_add in signal.c\n o Add a more powerful evbuffer_readln as a replacement for evbuffer_readline.  The new function handles more newline styles, and is more useful with buffers that may contain a nul characters.\n o Do not mangle socket handles on 64-bit windows.\n o The configure script now takes an --enable-gcc-warnings option that turns on many optional gcc warnings.  (Nick has been building with these for a while, but they might be useful to other developers.)\n o move EV_PERSIST handling out of the event backends\n o small improvements to evhttp documentation\n o always generate D",
                    "rendered": {
                      "text": "k return value of event_add in signal.c\n o Add a more powerful evbuffer_readln as a replacement for evbuffer_readline.  The new function handles more newline styles, and is more useful with buffers that may contain a nul characters.\n o Do not mangle socket handles on 64-bit windows.\n o The configure script now takes an --enable-gcc-warnings option that turns on many optional gcc warnings.  (Nick has been building with these for a while, but they might be useful to other developers.)\n o move EV_PERSIST handling out of the event backends\n o small improvements to evhttp documentation\n o always generate D",
                      "markdown": "`k return value of event_add in signal.c\n o Add a more powerful evbuffer_readln as a replacement for evbuffer_readline.  The new function handles more newline styles, and is more useful with buffers that may contain a nul characters.\n o Do not mangle socket handles on 64-bit windows.\n o The configure script now takes an --enable-gcc-warnings option that turns on many optional gcc warnings.  (Nick has been building with these for a while, but they might be useful to other developers.)\n o move EV_PERSIST handling out of the event backends\n o small improvements to evhttp documentation\n o always generate D`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1087,
                  "startColumn": 28,
                  "endLine": 1087,
                  "endColumn": 37,
                  "snippet": {
                    "text": " o Fix a possible free(NULL) when freeing an event_base with no signals.\n o Add a flag to disable checking environment variables when making an event_base\n o Disallow setting less than 1 priority.\n o Fix a bug when removing a timeout from the heap. [Patch from Marko Kreen]\n o Use signal.h, not sys/signal.h. [Patch from mmadia]\n o Try harder to build with certain older c99 compilers.\n o Make sure that an event_config's flags field is always initialized to 0. [Bug report from Victor Goya]\n",
                    "rendered": {
                      "text": " o Fix a possible free(NULL) when freeing an event_base with no signals.\n o Add a flag to disable checking environment variables when making an event_base\n o Disallow setting less than 1 priority.\n o Fix a bug when removing a timeout from the heap. [Patch from Marko Kreen]\n o Use signal.h, not sys/signal.h. [Patch from mmadia]\n o Try harder to build with certain older c99 compilers.\n o Make sure that an event_config's flags field is always initialized to 0. [Bug report from Victor Goya]\n",
                      "markdown": "` o Fix a possible free(NULL) when freeing an event_base with no signals.\n o Add a flag to disable checking environment variables when making an event_base\n o Disallow setting less than 1 priority.\n o Fix a bug when removing a timeout from the heap. [Patch from Marko Kreen]\n o Use signal.h, not sys/signal.h. [Patch from mmadia]\n o Try harder to build with certain older c99 compilers.\n o Make sure that an event_config's flags field is always initialized to 0. [Bug report from Victor Goya]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1065,
                  "startColumn": 89,
                  "endLine": 1065,
                  "endColumn": 95,
                  "snippet": {
                    "text": "ed upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disable the timeval cache entirely.\n o Make EV_PERSIST timeouts more accurate: schedule the next event based on the scheduled time of the previous event, not based on the current time.\n o Allow http.c to handle cases where getaddrinfo returns an IPv6 address.  Patch from Ryan Phillips.\n o Fix a problem with excessive memory allocation when using multiple event priorities.\n o Default to using arc4random for DNS transaction IDs o",
                    "rendered": {
                      "text": "ed upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disable the timeval cache entirely.\n o Make EV_PERSIST timeouts more accurate: schedule the next event based on the scheduled time of the previous event, not based on the current time.\n o Allow http.c to handle cases where getaddrinfo returns an IPv6 address.  Patch from Ryan Phillips.\n o Fix a problem with excessive memory allocation when using multiple event priorities.\n o Default to using arc4random for DNS transaction IDs o",
                      "markdown": "`ed upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disable the timeval cache entirely.\n o Make EV_PERSIST timeouts more accurate: schedule the next event based on the scheduled time of the previous event, not based on the current time.\n o Allow http.c to handle cases where getaddrinfo returns an IPv6 address.  Patch from Ryan Phillips.\n o Fix a problem with excessive memory allocation when using multiple event priorities.\n o Default to using arc4random for DNS transaction IDs o`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 26,
                  "endLine": 1063,
                  "endColumn": 35,
                  "snippet": {
                    "text": "UX, and its functionality has been subsumed by event2/util.h and util-internal.h.\n o Add a new bufferevent_socket_connect_hostname() to encapsulate the resolve-then-connect operation.\n o Build kqueue.c correctly on GNU/kFreeBSD platforms. Patch pulled upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disable the timeval cache entirely.\n o Make EV_PERSIST timeouts more accurate: schedule the next event based on the scheduled time of the previous event, not based on the current time.\n",
                    "rendered": {
                      "text": "UX, and its functionality has been subsumed by event2/util.h and util-internal.h.\n o Add a new bufferevent_socket_connect_hostname() to encapsulate the resolve-then-connect operation.\n o Build kqueue.c correctly on GNU/kFreeBSD platforms. Patch pulled upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disable the timeval cache entirely.\n o Make EV_PERSIST timeouts more accurate: schedule the next event based on the scheduled time of the previous event, not based on the current time.\n",
                      "markdown": "`UX, and its functionality has been subsumed by event2/util.h and util-internal.h.\n o Add a new bufferevent_socket_connect_hostname() to encapsulate the resolve-then-connect operation.\n o Build kqueue.c correctly on GNU/kFreeBSD platforms. Patch pulled upstream from Debian.\n o Alternative queue-based timeout algorithm for programs that use a large number of timeouts with the same value.\n o New event_base_config option to disable the timeval cache entirely.\n o Make EV_PERSIST timeouts more accurate: schedule the next event based on the scheduled time of the previous event, not based on the current time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1042,
                  "startColumn": 62,
                  "endLine": 1042,
                  "endColumn": 68,
                  "snippet": {
                    "text": "longer invoke the write callback as well unless we actually wrote data too.\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we'",
                    "rendered": {
                      "text": "longer invoke the write callback as well unless we actually wrote data too.\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we'",
                      "markdown": "`longer invoke the write callback as well unless we actually wrote data too.\n o If the kernel tells us that there are a negative number of bytes to read from a socket, do not believe it.  Fixes bug 2841177; found by Alexander Pronchenkov.\n o Do not detect whether we have monotonic clock support every time a new event base is created: instead do it only once.  Patch taken from Chromium.\n o Do not allocate the maximum event queue for the epoll backend at startup.  Instead, start out accepting 32 events at a time, and double the queue's size when it seems that the OS is generating events faster than we'`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 1023,
                  "startColumn": 63,
                  "endLine": 1023,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.3-alpha (20 Nov 2009):\n o Add a new code to support SSL/TLS on bufferevents, using the OpenSSL library (where available).\n o Fix a bug where we didn't allocate enough memory in event_get_supported_methods().\n o Avoid segfault during failed allocation of locked evdns_base. (Found by Rocco Carbone.)\n o Export new evutil_ascii_* functions to perform locale-independent character type operations.\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.3-alpha (20 Nov 2009):\n o Add a new code to support SSL/TLS on bufferevents, using the OpenSSL library (where available).\n o Fix a bug where we didn't allocate enough memory in event_get_supported_methods().\n o Avoid segfault during failed allocation of locked evdns_base. (Found by Rocco Carbone.)\n o Export new evutil_ascii_* functions to perform locale-independent character type operations.\n",
                      "markdown": "`\n\nChanges in 2.0.3-alpha (20 Nov 2009):\n o Add a new code to support SSL/TLS on bufferevents, using the OpenSSL library (where available).\n o Fix a bug where we didn't allocate enough memory in event_get_supported_methods().\n o Avoid segfault during failed allocation of locked evdns_base. (Found by Rocco Carbone.)\n o Export new evutil_ascii_* functions to perform locale-independent character type operations.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 984,
                  "startColumn": 20,
                  "endLine": 984,
                  "endColumn": 28,
                  "snippet": {
                    "text": " o Make it compile under gcc --std=c89. (e2ca403)\n o Fix a number of warnings from gcc -pedantic (918e9c5)\n o Add the msvc-generated .lib files to .gitignore. (e244a2e)\n o Add the \"compile\" script to gitignore. (1ba6bed)\n\nINTERNALS AND CODE CLEANUPS\n o Add a .gitignore file. (ba34071)\n",
                    "rendered": {
                      "text": " o Make it compile under gcc --std=c89. (e2ca403)\n o Fix a number of warnings from gcc -pedantic (918e9c5)\n o Add the msvc-generated .lib files to .gitignore. (e244a2e)\n o Add the \"compile\" script to gitignore. (1ba6bed)\n\nINTERNALS AND CODE CLEANUPS\n o Add a .gitignore file. (ba34071)\n",
                      "markdown": "` o Make it compile under gcc --std=c89. (e2ca403)\n o Fix a number of warnings from gcc -pedantic (918e9c5)\n o Add the msvc-generated .lib files to .gitignore. (e244a2e)\n o Add the \"compile\" script to gitignore. (1ba6bed)\n\nINTERNALS AND CODE CLEANUPS\n o Add a .gitignore file. (ba34071)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 968,
                  "startColumn": 18,
                  "endLine": 968,
                  "endColumn": 24,
                  "snippet": {
                    "text": " o Fix a bug in resetting timeouts on persistent events when IO triggers. (38ec0a7)\n o Add a test for timeouts on filtering bufferevents. (c02bfe1)\n o Add test for periodic timers that get activated for other reasons (8fcb7a1)\n o Use new timeval diff comparison function in bufferevent test (f3dfe46)\n o Delete stack-alloced event in new unit test before returning. (7ffd387)\n o Fix mingw compilation (23170a6)\n o Try to define a sane _EVENT_SIZEOF_SIZE_T for msvc compilation (1e14f82)\n",
                    "rendered": {
                      "text": " o Fix a bug in resetting timeouts on persistent events when IO triggers. (38ec0a7)\n o Add a test for timeouts on filtering bufferevents. (c02bfe1)\n o Add test for periodic timers that get activated for other reasons (8fcb7a1)\n o Use new timeval diff comparison function in bufferevent test (f3dfe46)\n o Delete stack-alloced event in new unit test before returning. (7ffd387)\n o Fix mingw compilation (23170a6)\n o Try to define a sane _EVENT_SIZEOF_SIZE_T for msvc compilation (1e14f82)\n",
                      "markdown": "` o Fix a bug in resetting timeouts on persistent events when IO triggers. (38ec0a7)\n o Add a test for timeouts on filtering bufferevents. (c02bfe1)\n o Add test for periodic timers that get activated for other reasons (8fcb7a1)\n o Use new timeval diff comparison function in bufferevent test (f3dfe46)\n o Delete stack-alloced event in new unit test before returning. (7ffd387)\n o Fix mingw compilation (23170a6)\n o Try to define a sane _EVENT_SIZEOF_SIZE_T for msvc compilation (1e14f82)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 920,
                  "startColumn": 27,
                  "endLine": 920,
                  "endColumn": 32,
                  "snippet": {
                    "text": " o Update sample/signal-test.c to use newer APIs and not leak. (f6430ac Evan Jones)\n o Fix a segfault when writing a very fragmented evbuffer onto an SSL (a6adeca Joachim Bauch)\n o Fix a segfault when freeing SSL bufferevents in an unusual order (a773df5 Joachim Bauch)\n o Drop install-sh from our git repo: a mismatched version could break \"make dist\" (6799527)\n o Set all instances of the version number correctly. (5a112d3)\n o Fix a few locking issues on windows. (c51bb3c unknown)\n o Use evutil_socket_t, not int, when logging socket errors. (292467c)\n",
                    "rendered": {
                      "text": " o Update sample/signal-test.c to use newer APIs and not leak. (f6430ac Evan Jones)\n o Fix a segfault when writing a very fragmented evbuffer onto an SSL (a6adeca Joachim Bauch)\n o Fix a segfault when freeing SSL bufferevents in an unusual order (a773df5 Joachim Bauch)\n o Drop install-sh from our git repo: a mismatched version could break \"make dist\" (6799527)\n o Set all instances of the version number correctly. (5a112d3)\n o Fix a few locking issues on windows. (c51bb3c unknown)\n o Use evutil_socket_t, not int, when logging socket errors. (292467c)\n",
                      "markdown": "` o Update sample/signal-test.c to use newer APIs and not leak. (f6430ac Evan Jones)\n o Fix a segfault when writing a very fragmented evbuffer onto an SSL (a6adeca Joachim Bauch)\n o Fix a segfault when freeing SSL bufferevents in an unusual order (a773df5 Joachim Bauch)\n o Drop install-sh from our git repo: a mismatched version could break \"make dist\" (6799527)\n o Set all instances of the version number correctly. (5a112d3)\n o Fix a few locking issues on windows. (c51bb3c unknown)\n o Use evutil_socket_t, not int, when logging socket errors. (292467c)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 36,
                  "endLine": 872,
                  "endColumn": 45,
                  "snippet": {
                    "text": " o Improved optional lock debugging. (0cd3bb9)\n o Rate-limiting for bufferevents; group and individual limits are supported. (737c9cd)\n o Testing code for bufferevent rate-limiting. (f0c0124)\n o Make the initial nameserver probe timeout configurable. (1e56a32)\n o Revise the locking API: deprecate the old locking callbacks and add trylock. (347952f)\n o Do not make bufferevent_setfd implicitly disable EV_READ and EV_WRITE. (8274379)\n o Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect(). (4a5b534)\n",
                    "rendered": {
                      "text": " o Improved optional lock debugging. (0cd3bb9)\n o Rate-limiting for bufferevents; group and individual limits are supported. (737c9cd)\n o Testing code for bufferevent rate-limiting. (f0c0124)\n o Make the initial nameserver probe timeout configurable. (1e56a32)\n o Revise the locking API: deprecate the old locking callbacks and add trylock. (347952f)\n o Do not make bufferevent_setfd implicitly disable EV_READ and EV_WRITE. (8274379)\n o Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect(). (4a5b534)\n",
                      "markdown": "` o Improved optional lock debugging. (0cd3bb9)\n o Rate-limiting for bufferevents; group and individual limits are supported. (737c9cd)\n o Testing code for bufferevent rate-limiting. (f0c0124)\n o Make the initial nameserver probe timeout configurable. (1e56a32)\n o Revise the locking API: deprecate the old locking callbacks and add trylock. (347952f)\n o Do not make bufferevent_setfd implicitly disable EV_READ and EV_WRITE. (8274379)\n o Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect(). (4a5b534)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 862,
                  "startColumn": 35,
                  "endLine": 862,
                  "endColumn": 41,
                  "snippet": {
                    "text": " o Improve the README with more information and links. (0b42726)\n o Add more people who wrote patches to the acknowledgments (0af10d5)\n o Add a warning about the use of event_initialized. (f32b575)\n o Add a LICENSE file so people can find our license easily (7067006)\n o Add a new \"hello world\" sample program (becb9f9)\n o Clarify status of example programs (d60a1bd)\n o Update time-test.c to use event2 (f4190bf)\n",
                    "rendered": {
                      "text": " o Improve the README with more information and links. (0b42726)\n o Add more people who wrote patches to the acknowledgments (0af10d5)\n o Add a warning about the use of event_initialized. (f32b575)\n o Add a LICENSE file so people can find our license easily (7067006)\n o Add a new \"hello world\" sample program (becb9f9)\n o Clarify status of example programs (d60a1bd)\n o Update time-test.c to use event2 (f4190bf)\n",
                      "markdown": "` o Improve the README with more information and links. (0b42726)\n o Add more people who wrote patches to the acknowledgments (0af10d5)\n o Add a warning about the use of event_initialized. (f32b575)\n o Add a LICENSE file so people can find our license easily (7067006)\n o Add a new \"hello world\" sample program (becb9f9)\n o Clarify status of example programs (d60a1bd)\n o Update time-test.c to use event2 (f4190bf)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 24,
                  "endLine": 856,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.4-alpha (28 Feb 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Add stub header for 2.0.4-alpha changelog. (94d0065)\n o Improve the README with more information and links. (0b42726)\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.4-alpha (28 Feb 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Add stub header for 2.0.4-alpha changelog. (94d0065)\n o Improve the README with more information and links. (0b42726)\n",
                      "markdown": "`\n\nChanges in 2.0.4-alpha (28 Feb 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Add stub header for 2.0.4-alpha changelog. (94d0065)\n o Improve the README with more information and links. (0b42726)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 23,
                  "endLine": 775,
                  "endColumn": 32,
                  "snippet": {
                    "text": " o Remove one last bug in last_with_datap logic. Found with valgrind (d49b92a)\n o fix a leak when unpausing evrpc requests (94ee125)\n o Fix a memory leak when unmarshalling RPC object arrays (f6ab2a2)\n o Fix compilation when openssl support is disabled (40c301b)\n o Allow empty reason line in HTTP status (739e688 Pierre Phaneuf)\n o Fix a compile warning introduced in 739e688 (bd1ed5f Sebastian Hahn)\n o Fix nonstandard TAILQ_FOREACH_REVERSE() definition (71afc52 Frank Denis)\n",
                    "rendered": {
                      "text": " o Remove one last bug in last_with_datap logic. Found with valgrind (d49b92a)\n o fix a leak when unpausing evrpc requests (94ee125)\n o Fix a memory leak when unmarshalling RPC object arrays (f6ab2a2)\n o Fix compilation when openssl support is disabled (40c301b)\n o Allow empty reason line in HTTP status (739e688 Pierre Phaneuf)\n o Fix a compile warning introduced in 739e688 (bd1ed5f Sebastian Hahn)\n o Fix nonstandard TAILQ_FOREACH_REVERSE() definition (71afc52 Frank Denis)\n",
                      "markdown": "` o Remove one last bug in last_with_datap logic. Found with valgrind (d49b92a)\n o fix a leak when unpausing evrpc requests (94ee125)\n o Fix a memory leak when unmarshalling RPC object arrays (f6ab2a2)\n o Fix compilation when openssl support is disabled (40c301b)\n o Allow empty reason line in HTTP status (739e688 Pierre Phaneuf)\n o Fix a compile warning introduced in 739e688 (bd1ed5f Sebastian Hahn)\n o Fix nonstandard TAILQ_FOREACH_REVERSE() definition (71afc52 Frank Denis)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 24,
                  "endLine": 721,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.5-beta (10 May 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Update all our copyright notices to say \"2010\" (17efc1c)\n o Add Christopher Clark and Maxim Yegorushkin to the LICENSE file (38b7b57)\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.5-beta (10 May 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Update all our copyright notices to say \"2010\" (17efc1c)\n o Add Christopher Clark and Maxim Yegorushkin to the LICENSE file (38b7b57)\n",
                      "markdown": "`\n\nChanges in 2.0.5-beta (10 May 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Update all our copyright notices to say \"2010\" (17efc1c)\n o Add Christopher Clark and Maxim Yegorushkin to the LICENSE file (38b7b57)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 25,
                  "endLine": 669,
                  "endColumn": 34,
                  "snippet": {
                    "text": " o Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer (c991317 Mike Smellie)\n o Fixed compilation of sample/le-proxy.c on win32 (13b912e Trond Norbye)\n o Fix rate-limit calculation on openssl bufferevents. (009f300)\n o Remember to initialize timeout events for bufferevent_async (de1f5d6 Christopher Davis)\n\nBUILD AND DISTRIBUTION CHANGES\n o Test the unlocked-deferred callback case of bufferevents (dfb75ab)\n",
                    "rendered": {
                      "text": " o Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer (c991317 Mike Smellie)\n o Fixed compilation of sample/le-proxy.c on win32 (13b912e Trond Norbye)\n o Fix rate-limit calculation on openssl bufferevents. (009f300)\n o Remember to initialize timeout events for bufferevent_async (de1f5d6 Christopher Davis)\n\nBUILD AND DISTRIBUTION CHANGES\n o Test the unlocked-deferred callback case of bufferevents (dfb75ab)\n",
                      "markdown": "` o Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer (c991317 Mike Smellie)\n o Fixed compilation of sample/le-proxy.c on win32 (13b912e Trond Norbye)\n o Fix rate-limit calculation on openssl bufferevents. (009f300)\n o Remember to initialize timeout events for bufferevent_async (de1f5d6 Christopher Davis)\n\nBUILD AND DISTRIBUTION CHANGES\n o Test the unlocked-deferred callback case of bufferevents (dfb75ab)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 32,
                  "endLine": 668,
                  "endColumn": 41,
                  "snippet": {
                    "text": " o Fix wrong size calculation of iovec buffers when exact=1 (65abdc2 niks)\n o Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer (c991317 Mike Smellie)\n o Fixed compilation of sample/le-proxy.c on win32 (13b912e Trond Norbye)\n o Fix rate-limit calculation on openssl bufferevents. (009f300)\n o Remember to initialize timeout events for bufferevent_async (de1f5d6 Christopher Davis)\n\nBUILD AND DISTRIBUTION CHANGES\n",
                    "rendered": {
                      "text": " o Fix wrong size calculation of iovec buffers when exact=1 (65abdc2 niks)\n o Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer (c991317 Mike Smellie)\n o Fixed compilation of sample/le-proxy.c on win32 (13b912e Trond Norbye)\n o Fix rate-limit calculation on openssl bufferevents. (009f300)\n o Remember to initialize timeout events for bufferevent_async (de1f5d6 Christopher Davis)\n\nBUILD AND DISTRIBUTION CHANGES\n",
                      "markdown": "` o Fix wrong size calculation of iovec buffers when exact=1 (65abdc2 niks)\n o Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer (c991317 Mike Smellie)\n o Fixed compilation of sample/le-proxy.c on win32 (13b912e Trond Norbye)\n o Fix rate-limit calculation on openssl bufferevents. (009f300)\n o Remember to initialize timeout events for bufferevent_async (de1f5d6 Christopher Davis)\n\nBUILD AND DISTRIBUTION CHANGES\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 48,
                  "endLine": 662,
                  "endColumn": 57,
                  "snippet": {
                    "text": " o never let bufferevent_rlim functions return negative (0859870)\n o Make sample/hello_world work on windows (d89fdba)\n o Fix a deadlock related to event-base notification.  Diagnosed by Zhou Li, Avi Bab, and Scott Lamb. (17522d2)\n o Possible fix to 100% cpu usage with epoll and openssl (cf249e7 Mike Smellie)\n o Don't race when calling event_active/event_add on a running signal event (fc5e0a2)\n o Suppress a spurious EPERM warning in epoll.c (e73cbde)\n o Fix wrong size calculation of iovec buffers when exact=1 (65abdc2 niks)\n",
                    "rendered": {
                      "text": " o never let bufferevent_rlim functions return negative (0859870)\n o Make sample/hello_world work on windows (d89fdba)\n o Fix a deadlock related to event-base notification.  Diagnosed by Zhou Li, Avi Bab, and Scott Lamb. (17522d2)\n o Possible fix to 100% cpu usage with epoll and openssl (cf249e7 Mike Smellie)\n o Don't race when calling event_active/event_add on a running signal event (fc5e0a2)\n o Suppress a spurious EPERM warning in epoll.c (e73cbde)\n o Fix wrong size calculation of iovec buffers when exact=1 (65abdc2 niks)\n",
                      "markdown": "` o never let bufferevent_rlim functions return negative (0859870)\n o Make sample/hello_world work on windows (d89fdba)\n o Fix a deadlock related to event-base notification.  Diagnosed by Zhou Li, Avi Bab, and Scott Lamb. (17522d2)\n o Possible fix to 100% cpu usage with epoll and openssl (cf249e7 Mike Smellie)\n o Don't race when calling event_active/event_add on a running signal event (fc5e0a2)\n o Suppress a spurious EPERM warning in epoll.c (e73cbde)\n o Fix wrong size calculation of iovec buffers when exact=1 (65abdc2 niks)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 633,
                  "startColumn": 24,
                  "endLine": 633,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.6-rc (6 Aug 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Document a change in the semantics of event_get_struct_event_size() (e21f5d1)\n o Add a comment to describe our plan for library versioning (9659ece)\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.6-rc (6 Aug 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Document a change in the semantics of event_get_struct_event_size() (e21f5d1)\n o Add a comment to describe our plan for library versioning (9659ece)\n",
                      "markdown": "`\n\nChanges in 2.0.6-rc (6 Aug 2010):\n [Autogenerated from the Git log, sorted by hand.]\nDOCUMENTATION\n o Document a change in the semantics of event_get_struct_event_size() (e21f5d1)\n o Add a comment to describe our plan for library versioning (9659ece)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 52,
                  "endLine": 588,
                  "endColumn": 58,
                  "snippet": {
                    "text": " o Close th_notify_fds and open a new pair on reinit (495ed66)\n o Declare signal handler function as \"__cdecl\" on Windows (f0056d0)\n o Use the _func() replacements for open, fstat, etc in evutil.c on win32 (e50c0fc)\n o Only process up to MAX_DEFERRED deferred_cbs at a time (17a14f1 Christopher Davis)\n\nTHREADING BUGFIXES\n o Avoid deadlock when activating signals (970e6ad)\n",
                    "rendered": {
                      "text": " o Close th_notify_fds and open a new pair on reinit (495ed66)\n o Declare signal handler function as \"__cdecl\" on Windows (f0056d0)\n o Use the _func() replacements for open, fstat, etc in evutil.c on win32 (e50c0fc)\n o Only process up to MAX_DEFERRED deferred_cbs at a time (17a14f1 Christopher Davis)\n\nTHREADING BUGFIXES\n o Avoid deadlock when activating signals (970e6ad)\n",
                      "markdown": "` o Close th_notify_fds and open a new pair on reinit (495ed66)\n o Declare signal handler function as \"__cdecl\" on Windows (f0056d0)\n o Use the _func() replacements for open, fstat, etc in evutil.c on win32 (e50c0fc)\n o Only process up to MAX_DEFERRED deferred_cbs at a time (17a14f1 Christopher Davis)\n\nTHREADING BUGFIXES\n o Avoid deadlock when activating signals (970e6ad)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 24,
                  "endLine": 569,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.7-rc (9 Sep 2010):\n [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW APIS\n o Expose a evdns_base_nameserver_sockaddr_add() function to add a nameserver by sockaddr (1952143)\n o Add event_config_set_num_cpus_hint() for tuning win32 IOCP thread pools, etc. (2447fe8 Christopher Davis)\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.7-rc (9 Sep 2010):\n [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW APIS\n o Expose a evdns_base_nameserver_sockaddr_add() function to add a nameserver by sockaddr (1952143)\n o Add event_config_set_num_cpus_hint() for tuning win32 IOCP thread pools, etc. (2447fe8 Christopher Davis)\n",
                      "markdown": "`\n\nChanges in 2.0.7-rc (9 Sep 2010):\n [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW APIS\n o Expose a evdns_base_nameserver_sockaddr_add() function to add a nameserver by sockaddr (1952143)\n o Add event_config_set_num_cpus_hint() for tuning win32 IOCP thread pools, etc. (2447fe8 Christopher Davis)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 60,
                  "endLine": 549,
                  "endColumn": 69,
                  "snippet": {
                    "text": " o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n o The corrected bufferevent filter semantics let us fix our openssl tests (34331e4)\n\nTESTING\n o Make SSL tests cover enabling/disabling EV_READ. (a5ce9ad)\n",
                    "rendered": {
                      "text": " o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n o The corrected bufferevent filter semantics let us fix our openssl tests (34331e4)\n\nTESTING\n o Make SSL tests cover enabling/disabling EV_READ. (a5ce9ad)\n",
                      "markdown": "` o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n o The corrected bufferevent filter semantics let us fix our openssl tests (34331e4)\n\nTESTING\n o Make SSL tests cover enabling/disabling EV_READ. (a5ce9ad)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 46,
                  "endLine": 547,
                  "endColumn": 55,
                  "snippet": {
                    "text": " o Make iocp/listener/error work; don't accept again if lev is disabled. (62b429a Christopher Davis)\n o Handle rate-limiting for reading on OpenSSL bufferevents correctly. (819b171)\n o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n o The corrected bufferevent filter semantics let us fix our openssl tests (34331e4)\n\n",
                    "rendered": {
                      "text": " o Make iocp/listener/error work; don't accept again if lev is disabled. (62b429a Christopher Davis)\n o Handle rate-limiting for reading on OpenSSL bufferevents correctly. (819b171)\n o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n o The corrected bufferevent filter semantics let us fix our openssl tests (34331e4)\n\n",
                      "markdown": "` o Make iocp/listener/error work; don't accept again if lev is disabled. (62b429a Christopher Davis)\n o Handle rate-limiting for reading on OpenSSL bufferevents correctly. (819b171)\n o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n o The corrected bufferevent filter semantics let us fix our openssl tests (34331e4)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 38,
                  "endLine": 545,
                  "endColumn": 47,
                  "snippet": {
                    "text": " o Fix an EINVAL on evbuffer_write_iovec on OpenSolaris. (fdc640b)\n o Fix allocation error for IOCP listeners. Probably harmless, since struct event is big (481ef92)\n o Make iocp/listener/error work; don't accept again if lev is disabled. (62b429a Christopher Davis)\n o Handle rate-limiting for reading on OpenSSL bufferevents correctly. (819b171)\n o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n",
                    "rendered": {
                      "text": " o Fix an EINVAL on evbuffer_write_iovec on OpenSolaris. (fdc640b)\n o Fix allocation error for IOCP listeners. Probably harmless, since struct event is big (481ef92)\n o Make iocp/listener/error work; don't accept again if lev is disabled. (62b429a Christopher Davis)\n o Handle rate-limiting for reading on OpenSSL bufferevents correctly. (819b171)\n o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n",
                      "markdown": "` o Fix an EINVAL on evbuffer_write_iovec on OpenSolaris. (fdc640b)\n o Fix allocation error for IOCP listeners. Probably harmless, since struct event is big (481ef92)\n o Make iocp/listener/error work; don't accept again if lev is disabled. (62b429a Christopher Davis)\n o Handle rate-limiting for reading on OpenSSL bufferevents correctly. (819b171)\n o Fix serious bugs in per-bufferevent rate-limiting code (34d64f8)\n o Avoid spurious reads from just-created open openssl bufferevents (223ee40)\n o Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd (93bb7d8)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 24,
                  "endLine": 523,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.8-rc (14 Oct 2010):\n [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW APIS\n o Add error callback to evconnlistener (c4be8d8 Simon Perreault)\n o Add a LEV_OPT_THREADSAFE option for threadsafe evconnlisteners (127d4f2)\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.8-rc (14 Oct 2010):\n [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW APIS\n o Add error callback to evconnlistener (c4be8d8 Simon Perreault)\n o Add a LEV_OPT_THREADSAFE option for threadsafe evconnlisteners (127d4f2)\n",
                      "markdown": "`\n\nChanges in 2.0.8-rc (14 Oct 2010):\n [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW APIS\n o Add error callback to evconnlistener (c4be8d8 Simon Perreault)\n o Add a LEV_OPT_THREADSAFE option for threadsafe evconnlisteners (127d4f2)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 66,
                  "endLine": 479,
                  "endColumn": 75,
                  "snippet": {
                    "text": " o Remove _event_initialized(); make event_initialized() a function(); make it consistent on windows and non-windows (652024b)\n o Do not let EVLOOP_ONCE exit the loop until all deferred callbacks have run (2d5e1bd)\n o Make EVLOOP_ONCE ignore internal events (0617a81)\n o Possible crash fix when freeing an underlying bufferevent of an openssl bufferevent (29f7623)\n\nHTTP CLEANUPS\n o Stop using Libevent-1 headers in regress_http (1f507d7)\n",
                    "rendered": {
                      "text": " o Remove _event_initialized(); make event_initialized() a function(); make it consistent on windows and non-windows (652024b)\n o Do not let EVLOOP_ONCE exit the loop until all deferred callbacks have run (2d5e1bd)\n o Make EVLOOP_ONCE ignore internal events (0617a81)\n o Possible crash fix when freeing an underlying bufferevent of an openssl bufferevent (29f7623)\n\nHTTP CLEANUPS\n o Stop using Libevent-1 headers in regress_http (1f507d7)\n",
                      "markdown": "` o Remove _event_initialized(); make event_initialized() a function(); make it consistent on windows and non-windows (652024b)\n o Do not let EVLOOP_ONCE exit the loop until all deferred callbacks have run (2d5e1bd)\n o Make EVLOOP_ONCE ignore internal events (0617a81)\n o Possible crash fix when freeing an underlying bufferevent of an openssl bufferevent (29f7623)\n\nHTTP CLEANUPS\n o Stop using Libevent-1 headers in regress_http (1f507d7)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 39,
                  "endLine": 466,
                  "endColumn": 48,
                  "snippet": {
                    "text": " o Fix some more cancel-related bugs in getaddrinfo_async (c7cfbcf)\n o Make evdns_getaddrinfo_cancel threadsafe (d51b2fc)\n o Only clear underlying callbacks when the user hasn't reset them. (1ac5b23)\n o Fix bug in bufferevent_connect on an openssl bufferevent that already had an fd (4f228a1)\n o Resolve an evport bug in the thread/forking test (3a67d0b)\n o Make sure the CLOEXEC flag is set on fds we open for base notification (3ab578f)\n o Fix IRIX build.  sa_family collides with a #define in sys/socket.h on IRIX. (e874982 Kevin Bowling)\n",
                    "rendered": {
                      "text": " o Fix some more cancel-related bugs in getaddrinfo_async (c7cfbcf)\n o Make evdns_getaddrinfo_cancel threadsafe (d51b2fc)\n o Only clear underlying callbacks when the user hasn't reset them. (1ac5b23)\n o Fix bug in bufferevent_connect on an openssl bufferevent that already had an fd (4f228a1)\n o Resolve an evport bug in the thread/forking test (3a67d0b)\n o Make sure the CLOEXEC flag is set on fds we open for base notification (3ab578f)\n o Fix IRIX build.  sa_family collides with a #define in sys/socket.h on IRIX. (e874982 Kevin Bowling)\n",
                      "markdown": "` o Fix some more cancel-related bugs in getaddrinfo_async (c7cfbcf)\n o Make evdns_getaddrinfo_cancel threadsafe (d51b2fc)\n o Only clear underlying callbacks when the user hasn't reset them. (1ac5b23)\n o Fix bug in bufferevent_connect on an openssl bufferevent that already had an fd (4f228a1)\n o Resolve an evport bug in the thread/forking test (3a67d0b)\n o Make sure the CLOEXEC flag is set on fds we open for base notification (3ab578f)\n o Fix IRIX build.  sa_family collides with a #define in sys/socket.h on IRIX. (e874982 Kevin Bowling)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 113,
                  "endLine": 447,
                  "endColumn": 119,
                  "snippet": {
                    "text": " o evhttp_encode_uri encodes all reserved characters, including !$'()*+,/:=@ (2e63a60)\n o Replace exact-version checks for HTTP/1.1 with >= or < checks (647e094)\n o evhttp: Return 501 when we get an unrecognized method, not 400. (536311a)\n o Don't disable reading from the HTTP connection after sending the request to be notified of connection-close in time (c76640b Felix Nawothnig)\n o Never call evhttp_readcb while writing. (0512487)\n o Try to fix an assertion failure related to close detection (0faaa39)\n o Correctly detect timeouts during http connects (04861d5)\n",
                    "rendered": {
                      "text": " o evhttp_encode_uri encodes all reserved characters, including !$'()*+,/:=@ (2e63a60)\n o Replace exact-version checks for HTTP/1.1 with >= or < checks (647e094)\n o evhttp: Return 501 when we get an unrecognized method, not 400. (536311a)\n o Don't disable reading from the HTTP connection after sending the request to be notified of connection-close in time (c76640b Felix Nawothnig)\n o Never call evhttp_readcb while writing. (0512487)\n o Try to fix an assertion failure related to close detection (0faaa39)\n o Correctly detect timeouts during http connects (04861d5)\n",
                      "markdown": "` o evhttp_encode_uri encodes all reserved characters, including !$'()*+,/:=@ (2e63a60)\n o Replace exact-version checks for HTTP/1.1 with >= or < checks (647e094)\n o evhttp: Return 501 when we get an unrecognized method, not 400. (536311a)\n o Don't disable reading from the HTTP connection after sending the request to be notified of connection-close in time (c76640b Felix Nawothnig)\n o Never call evhttp_readcb while writing. (0512487)\n o Try to fix an assertion failure related to close detection (0faaa39)\n o Correctly detect timeouts during http connects (04861d5)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 25,
                  "endLine": 404,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\nChanges in 2.0.9-rc (30 Nov 2010):\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW AND MODIFIED APIs\n o Add a function to change a listener's callback. (46ee061)\n o Make evbuffer_add_file take ev_off_t, not off_t (ac7e52d)\n",
                    "rendered": {
                      "text": "\n\nChanges in 2.0.9-rc (30 Nov 2010):\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW AND MODIFIED APIs\n o Add a function to change a listener's callback. (46ee061)\n o Make evbuffer_add_file take ev_off_t, not off_t (ac7e52d)\n",
                      "markdown": "`\n\nChanges in 2.0.9-rc (30 Nov 2010):\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nNEW AND MODIFIED APIs\n o Add a function to change a listener's callback. (46ee061)\n o Make evbuffer_add_file take ev_off_t, not off_t (ac7e52d)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 25,
                  "endLine": 383,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\nChanges in version 2.0.10-stable (16 Dec 2010)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES\n o Minor fix for IOCP shutdown handling fix (2599b2d Kelly Brock)\n o Correctly notify the main thread when activating an event from a subthread (5beeec9)\n",
                    "rendered": {
                      "text": "\n\nChanges in version 2.0.10-stable (16 Dec 2010)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES\n o Minor fix for IOCP shutdown handling fix (2599b2d Kelly Brock)\n o Correctly notify the main thread when activating an event from a subthread (5beeec9)\n",
                      "markdown": "`\n\nChanges in version 2.0.10-stable (16 Dec 2010)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES\n o Minor fix for IOCP shutdown handling fix (2599b2d Kelly Brock)\n o Correctly notify the main thread when activating an event from a subthread (5beeec9)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 5,
                  "endLine": 350,
                  "endColumn": 11,
                  "snippet": {
                    "text": " o Actually send NULL request in http_bad_request_test (b693c32 Sebastian Hahn)\n o add some (void) casts for unused variables (65707d7 Sebastian Hahn)\n o Refactor test_getaddrinfo_async_cancel_stress() (48c44a6 Sebastian Hahn)\n o Be nice and \"handle\" error return values in sample code (4bac793 Sebastian Hahn)\n o Check return value of evbuffer_add_cb in tests (93a1abb Sebastian Hahn)\n o Remote some dead code from dns-example.c (744c745 Sebastian Hahn)\n o Zero a struct sockaddr_in before using it (646f9fe Sebastian Hahn)\n",
                    "rendered": {
                      "text": " o Actually send NULL request in http_bad_request_test (b693c32 Sebastian Hahn)\n o add some (void) casts for unused variables (65707d7 Sebastian Hahn)\n o Refactor test_getaddrinfo_async_cancel_stress() (48c44a6 Sebastian Hahn)\n o Be nice and \"handle\" error return values in sample code (4bac793 Sebastian Hahn)\n o Check return value of evbuffer_add_cb in tests (93a1abb Sebastian Hahn)\n o Remote some dead code from dns-example.c (744c745 Sebastian Hahn)\n o Zero a struct sockaddr_in before using it (646f9fe Sebastian Hahn)\n",
                      "markdown": "` o Actually send NULL request in http_bad_request_test (b693c32 Sebastian Hahn)\n o add some (void) casts for unused variables (65707d7 Sebastian Hahn)\n o Refactor test_getaddrinfo_async_cancel_stress() (48c44a6 Sebastian Hahn)\n o Be nice and \"handle\" error return values in sample code (4bac793 Sebastian Hahn)\n o Check return value of evbuffer_add_cb in tests (93a1abb Sebastian Hahn)\n o Remote some dead code from dns-example.c (744c745 Sebastian Hahn)\n o Zero a struct sockaddr_in before using it (646f9fe Sebastian Hahn)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 28,
                  "endLine": 343,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nBUGS IN TESTS:\n o Fix test.sh output on solaris (b4f89b6 Dave Hart)\n o Make test-eof fail with a timeout if we never get an eof. (05a2c22 Harlan Stenn)\n o Use %s with printf in test.sh (039b9bd)\n o Add an assert to appease clang's static analyzer (b0ff7eb Sebastian Hahn)\n o Add a forgotten return value check in the unit tests (3819b62 Sebastian Hahn)\n",
                    "rendered": {
                      "text": "\nBUGS IN TESTS:\n o Fix test.sh output on solaris (b4f89b6 Dave Hart)\n o Make test-eof fail with a timeout if we never get an eof. (05a2c22 Harlan Stenn)\n o Use %s with printf in test.sh (039b9bd)\n o Add an assert to appease clang's static analyzer (b0ff7eb Sebastian Hahn)\n o Add a forgotten return value check in the unit tests (3819b62 Sebastian Hahn)\n",
                      "markdown": "`\nBUGS IN TESTS:\n o Fix test.sh output on solaris (b4f89b6 Dave Hart)\n o Make test-eof fail with a timeout if we never get an eof. (05a2c22 Harlan Stenn)\n o Use %s with printf in test.sh (039b9bd)\n o Add an assert to appease clang's static analyzer (b0ff7eb Sebastian Hahn)\n o Add a forgotten return value check in the unit tests (3819b62 Sebastian Hahn)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 65,
                  "endLine": 311,
                  "endColumn": 71,
                  "snippet": {
                    "text": " o Make --enable-gcc-warnings a no-op if not using gcc (3267703)\n o Fix a type error in our (unused) arc4random_stir() (f736198)\n o Correctly detect and stop non-chunked http requests when the body is too long (63a715e)\n o Have event_base_gettimeofday_cached() always return wall-clock time (a459ef7)\n o Workaround for http crash bug 3078187 (5dc5662 Tomash Brechko)\n o Fix incorrect assertions and possible use-after-free in evrpc_free() (4b8f02f Christophe Fillot)\n o Reset outgoing http connection when read data in idle state. (272823f Tomash Brechko)\n",
                    "rendered": {
                      "text": " o Make --enable-gcc-warnings a no-op if not using gcc (3267703)\n o Fix a type error in our (unused) arc4random_stir() (f736198)\n o Correctly detect and stop non-chunked http requests when the body is too long (63a715e)\n o Have event_base_gettimeofday_cached() always return wall-clock time (a459ef7)\n o Workaround for http crash bug 3078187 (5dc5662 Tomash Brechko)\n o Fix incorrect assertions and possible use-after-free in evrpc_free() (4b8f02f Christophe Fillot)\n o Reset outgoing http connection when read data in idle state. (272823f Tomash Brechko)\n",
                      "markdown": "` o Make --enable-gcc-warnings a no-op if not using gcc (3267703)\n o Fix a type error in our (unused) arc4random_stir() (f736198)\n o Correctly detect and stop non-chunked http requests when the body is too long (63a715e)\n o Have event_base_gettimeofday_cached() always return wall-clock time (a459ef7)\n o Workaround for http crash bug 3078187 (5dc5662 Tomash Brechko)\n o Fix incorrect assertions and possible use-after-free in evrpc_free() (4b8f02f Christophe Fillot)\n o Reset outgoing http connection when read data in idle state. (272823f Tomash Brechko)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 25,
                  "endLine": 299,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\nChanges in version 2.0.11-stable (27 Apr 2011)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES:\n o Fix evport handling of POLLHUP and POLLERR (b42ce4b)\n o Fix compilation on Windows with NDEBUG (cb8059d)\n",
                    "rendered": {
                      "text": "\n\nChanges in version 2.0.11-stable (27 Apr 2011)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES:\n o Fix evport handling of POLLHUP and POLLERR (b42ce4b)\n o Fix compilation on Windows with NDEBUG (cb8059d)\n",
                      "markdown": "`\n\nChanges in version 2.0.11-stable (27 Apr 2011)\n  [Autogenerated from the Git log, sorted and cleaned by hand.]\nBUGFIXES:\n o Fix evport handling of POLLHUP and POLLERR (b42ce4b)\n o Fix compilation on Windows with NDEBUG (cb8059d)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 23,
                  "endLine": 286,
                  "endColumn": 31,
                  "snippet": {
                    "text": " o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n o Make sure TINYTEST_LOCAL is defined when building tinytest.c (8fa030c Peter Rosin)\n",
                    "rendered": {
                      "text": " o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n o Make sure TINYTEST_LOCAL is defined when building tinytest.c (8fa030c Peter Rosin)\n",
                      "markdown": "` o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n o Make sure TINYTEST_LOCAL is defined when building tinytest.c (8fa030c Peter Rosin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 28,
                  "endLine": 285,
                  "endColumn": 37,
                  "snippet": {
                    "text": " o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n",
                    "rendered": {
                      "text": " o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n",
                      "markdown": "` o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n o Link with -lshell32 and -ladvapi32 on Win32. (86090ee Peter Rosin)\n o Make the tests build when OpenSSL is not available. (07c41be Peter Rosin)\n o Bring in the compile script from automake, if needed. (f3c7a4c Peter Rosin)\n o MSVC does not provide S_ISDIR, so provide it manually. (70be7d1 Peter Rosin)\n o unistd.h and sys/time.h might not exist. (fe93022 Peter Rosin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 19,
                  "endLine": 280,
                  "endColumn": 28,
                  "snippet": {
                    "text": " o Libtool brings in the dependencies of libevent_openssl.la automatically (7b819f2 Peter Rosin)\n o Use OPENSSL_LIBS in Makefile.am (292092e Sebastian Hahn)\n o Move the win32 detection in configure.in (ceb03b9 Sebastian Hahn)\n o Correctly detect openssl on windows (6619385 Sebastian Hahn)\n o Fix a compile warning with zlib 1.2.4 and 1.2.5 (5786b91 Sebastian Hahn)\n o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n",
                    "rendered": {
                      "text": " o Libtool brings in the dependencies of libevent_openssl.la automatically (7b819f2 Peter Rosin)\n o Use OPENSSL_LIBS in Makefile.am (292092e Sebastian Hahn)\n o Move the win32 detection in configure.in (ceb03b9 Sebastian Hahn)\n o Correctly detect openssl on windows (6619385 Sebastian Hahn)\n o Fix a compile warning with zlib 1.2.4 and 1.2.5 (5786b91 Sebastian Hahn)\n o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n",
                      "markdown": "` o Libtool brings in the dependencies of libevent_openssl.la automatically (7b819f2 Peter Rosin)\n o Use OPENSSL_LIBS in Makefile.am (292092e Sebastian Hahn)\n o Move the win32 detection in configure.in (ceb03b9 Sebastian Hahn)\n o Correctly detect openssl on windows (6619385 Sebastian Hahn)\n o Fix a compile warning with zlib 1.2.4 and 1.2.5 (5786b91 Sebastian Hahn)\n o Fix compilation with GCC 2, which had no __builtin_expect (09d39a1 Dave Hart)\n o Fix new warnings from GCC 4.6 (06a714f)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 39,
                  "endLine": 257,
                  "endColumn": 44,
                  "snippet": {
                    "text": " o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n o Fix select.c compilation on systems with no NFDBITS (49d1136)\n o Fix a few warnings on OpenBSD (8ee9f9c Nicholas Marriott)\n o Don't break when building tests from git without python installed (b031adf)\n o Don't install event_rpcgen.py when --disable-libevent-install is used (e23cda3 Harlan Stenn)\n o Fix AIX build issue with TAILQ_FOREACH definition (e934096)\n\n",
                    "rendered": {
                      "text": " o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n o Fix select.c compilation on systems with no NFDBITS (49d1136)\n o Fix a few warnings on OpenBSD (8ee9f9c Nicholas Marriott)\n o Don't break when building tests from git without python installed (b031adf)\n o Don't install event_rpcgen.py when --disable-libevent-install is used (e23cda3 Harlan Stenn)\n o Fix AIX build issue with TAILQ_FOREACH definition (e934096)\n\n",
                      "markdown": "` o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n o Fix select.c compilation on systems with no NFDBITS (49d1136)\n o Fix a few warnings on OpenBSD (8ee9f9c Nicholas Marriott)\n o Don't break when building tests from git without python installed (b031adf)\n o Don't install event_rpcgen.py when --disable-libevent-install is used (e23cda3 Harlan Stenn)\n o Fix AIX build issue with TAILQ_FOREACH definition (e934096)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 54,
                  "endLine": 251,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n o Fix tinytest invocation from windows shell (57def34 Ed Day)\n\nBUILD FIXES\n o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n",
                    "rendered": {
                      "text": "\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n o Fix tinytest invocation from windows shell (57def34 Ed Day)\n\nBUILD FIXES\n o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n",
                      "markdown": "`\nTEST FIXES\n o Fix up test_evutil_snprintf (caf695a)\n o Fix tinytest invocation from windows shell (57def34 Ed Day)\n\nBUILD FIXES\n o Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS (4a5c82d)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 9,
                  "endLine": 208,
                  "endColumn": 18,
                  "snippet": {
                    "text": "Changes in version 2.0.14-stable (31 Aug 2011)\nBUGFIXES (bufferevents and evbuffers):\n o Propagate errors on the underlying bufferevent to the user. (4a34394 Joachim Bauch)\n o Ignore OpenSSL deprecation warnings on OS X (5d1b255 Sebastian Hahn)\n o Fix handling of group rate limits under 64 bytes of burst (6d5440e)\n o Solaris sendfile: correctly detect amount of data sent (643922e Michael Herf)\n o Make rate limiting work with common_timeout logic (5b18f13)\n",
                    "rendered": {
                      "text": "Changes in version 2.0.14-stable (31 Aug 2011)\nBUGFIXES (bufferevents and evbuffers):\n o Propagate errors on the underlying bufferevent to the user. (4a34394 Joachim Bauch)\n o Ignore OpenSSL deprecation warnings on OS X (5d1b255 Sebastian Hahn)\n o Fix handling of group rate limits under 64 bytes of burst (6d5440e)\n o Solaris sendfile: correctly detect amount of data sent (643922e Michael Herf)\n o Make rate limiting work with common_timeout logic (5b18f13)\n",
                      "markdown": "`Changes in version 2.0.14-stable (31 Aug 2011)\nBUGFIXES (bufferevents and evbuffers):\n o Propagate errors on the underlying bufferevent to the user. (4a34394 Joachim Bauch)\n o Ignore OpenSSL deprecation warnings on OS X (5d1b255 Sebastian Hahn)\n o Fix handling of group rate limits under 64 bytes of burst (6d5440e)\n o Solaris sendfile: correctly detect amount of data sent (643922e Michael Herf)\n o Make rate limiting work with common_timeout logic (5b18f13)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 33,
                  "endLine": 197,
                  "endColumn": 42,
                  "snippet": {
                    "text": " o refer to non-deprecated evdns functions in comments (ba5c27d Greg Hazel)\n\nBUILD AND TESTING FIXES:\n o le-proxy and regress depend on openssl directly (9ae061a Sergey Avseyev)\n o Use _SOURCES, not _sources, in sample/Makefile.am (7f82382)\n o Fixed compiler warnings for unchecked read/write calls. (c3b62fd Mark Ellzey)\n o Make write-checking fixes use tt_fail_perror (2b76847)\n",
                    "rendered": {
                      "text": " o refer to non-deprecated evdns functions in comments (ba5c27d Greg Hazel)\n\nBUILD AND TESTING FIXES:\n o le-proxy and regress depend on openssl directly (9ae061a Sergey Avseyev)\n o Use _SOURCES, not _sources, in sample/Makefile.am (7f82382)\n o Fixed compiler warnings for unchecked read/write calls. (c3b62fd Mark Ellzey)\n o Make write-checking fixes use tt_fail_perror (2b76847)\n",
                      "markdown": "` o refer to non-deprecated evdns functions in comments (ba5c27d Greg Hazel)\n\nBUILD AND TESTING FIXES:\n o le-proxy and regress depend on openssl directly (9ae061a Sergey Avseyev)\n o Use _SOURCES, not _sources, in sample/Makefile.am (7f82382)\n o Fixed compiler warnings for unchecked read/write calls. (c3b62fd Mark Ellzey)\n o Make write-checking fixes use tt_fail_perror (2b76847)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 20,
                  "endLine": 161,
                  "endColumn": 29,
                  "snippet": {
                    "text": "BUGFIXES (bufferevent_openssl):\n o Refactor amount-to-read calculations in buffervent_ssl consider_reading() (a186e73 Mark Ellzey)\n o Move SSL rate-limit enforcement into bytes_to_read() (96c562f)\n o Avoid spinning on OpenSSL reads (2aa036f Mark Ellzey)\n\nBUGFIXES (dns)\n o Empty DNS reply with OK status is another way to say NODATA. (21a08d6 Leonid Evdokimov)\n",
                    "rendered": {
                      "text": "BUGFIXES (bufferevent_openssl):\n o Refactor amount-to-read calculations in buffervent_ssl consider_reading() (a186e73 Mark Ellzey)\n o Move SSL rate-limit enforcement into bytes_to_read() (96c562f)\n o Avoid spinning on OpenSSL reads (2aa036f Mark Ellzey)\n\nBUGFIXES (dns)\n o Empty DNS reply with OK status is another way to say NODATA. (21a08d6 Leonid Evdokimov)\n",
                      "markdown": "`BUGFIXES (bufferevent_openssl):\n o Refactor amount-to-read calculations in buffervent_ssl consider_reading() (a186e73 Mark Ellzey)\n o Move SSL rate-limit enforcement into bytes_to_read() (96c562f)\n o Avoid spinning on OpenSSL reads (2aa036f Mark Ellzey)\n\nBUGFIXES (dns)\n o Empty DNS reply with OK status is another way to say NODATA. (21a08d6 Leonid Evdokimov)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 24,
                  "endLine": 96,
                  "endColumn": 29,
                  "snippet": {
                    "text": " o Properly zero the kevent in kq_setup_kevent() (c2c7b39 Sebastian Hahn)\n\nBUILD FIXES:\n o Added OPENSSL_LDFLAGS env variable which is appended to SSL checks. (9278196 Mark Ellzey)\n o Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD (2d67b63 Mark Ellzey)\n o Don't do clang version detection when disabling some flags (083296b Sebastian Hahn)\n\n",
                    "rendered": {
                      "text": " o Properly zero the kevent in kq_setup_kevent() (c2c7b39 Sebastian Hahn)\n\nBUILD FIXES:\n o Added OPENSSL_LDFLAGS env variable which is appended to SSL checks. (9278196 Mark Ellzey)\n o Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD (2d67b63 Mark Ellzey)\n o Don't do clang version detection when disabling some flags (083296b Sebastian Hahn)\n\n",
                      "markdown": "` o Properly zero the kevent in kq_setup_kevent() (c2c7b39 Sebastian Hahn)\n\nBUILD FIXES:\n o Added OPENSSL_LDFLAGS env variable which is appended to SSL checks. (9278196 Mark Ellzey)\n o Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD (2d67b63 Mark Ellzey)\n o Don't do clang version detection when disabling some flags (083296b Sebastian Hahn)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 40,
                  "endLine": 76,
                  "endColumn": 45,
                  "snippet": {
                    "text": "COMPILATION FIXES:\n o Fix a compilation error with MSVC 2005 due to use of mode_t (336dcae)\n o Configure with gcc older than 2.95 (4a6fd43 Sebastian Hahn)\n o Generate event-config.h with a single sed script (30b6f88 Zack Weinberg)\n\nFORWARD-COMPATIBILITY:\n o Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_* (d1a03b2)\n",
                    "rendered": {
                      "text": "COMPILATION FIXES:\n o Fix a compilation error with MSVC 2005 due to use of mode_t (336dcae)\n o Configure with gcc older than 2.95 (4a6fd43 Sebastian Hahn)\n o Generate event-config.h with a single sed script (30b6f88 Zack Weinberg)\n\nFORWARD-COMPATIBILITY:\n o Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_* (d1a03b2)\n",
                      "markdown": "`COMPILATION FIXES:\n o Fix a compilation error with MSVC 2005 due to use of mode_t (336dcae)\n o Configure with gcc older than 2.95 (4a6fd43 Sebastian Hahn)\n o Generate event-config.h with a single sed script (30b6f88 Zack Weinberg)\n\nFORWARD-COMPATIBILITY:\n o Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_* (d1a03b2)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 47,
                  "endLine": 61,
                  "endColumn": 56,
                  "snippet": {
                    "text": " o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n o Fixed potential double-readcb execution with openssl bufferevents. (4e62cd1 Mark Ellzey)\n\nBUGFIXES (DNS):\n o Cancel a probe request when the server is freed, and ignore cancelled probe callbacks (94d2336 Greg Hazel)\n",
                    "rendered": {
                      "text": " o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n o Fixed potential double-readcb execution with openssl bufferevents. (4e62cd1 Mark Ellzey)\n\nBUGFIXES (DNS):\n o Cancel a probe request when the server is freed, and ignore cancelled probe callbacks (94d2336 Greg Hazel)\n",
                      "markdown": "` o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n o Fixed potential double-readcb execution with openssl bufferevents. (4e62cd1 Mark Ellzey)\n\nBUGFIXES (DNS):\n o Cancel a probe request when the server is freed, and ignore cancelled probe callbacks (94d2336 Greg Hazel)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 5,
                  "endLine": 57,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Changes in version 2.0.19-stable (3 May 2012)\nBUGFIXES (CORE):\n o Refactor event_persist_closure: raise and extract some common logic (bec22b4)\n o If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead (dfd808c)\n o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n",
                    "rendered": {
                      "text": "Changes in version 2.0.19-stable (3 May 2012)\nBUGFIXES (CORE):\n o Refactor event_persist_closure: raise and extract some common logic (bec22b4)\n o If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead (dfd808c)\n o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n",
                      "markdown": "`Changes in version 2.0.19-stable (3 May 2012)\nBUGFIXES (CORE):\n o Refactor event_persist_closure: raise and extract some common logic (bec22b4)\n o If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead (dfd808c)\n o If a higher-priority event becomes active, don't continue running events of the current priority. (2bfda40)\n\nBUGFIXES (SSL):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 33,
                  "endLine": 26,
                  "endColumn": 42,
                  "snippet": {
                    "text": " o evbuffer: Avoid possible needless call to writev. Found by coverity. (6a4ec5c)\n o evdns: memset sockaddr_in before using it. Found by coverity. (a1a0e67)\n o evhttp: Check more setsockopt return values when binding sockets. Found by coverity (a0912e3)\n o evdns: Avoid segfault on weird timeout during name lookup. (dc32077 Greg Hazel)\n o bufferevent_ssl: Correctly invoke callbacks when a SSL bufferevent reads some and then blocks. (606ac43)\n\n\n",
                    "rendered": {
                      "text": " o evbuffer: Avoid possible needless call to writev. Found by coverity. (6a4ec5c)\n o evdns: memset sockaddr_in before using it. Found by coverity. (a1a0e67)\n o evhttp: Check more setsockopt return values when binding sockets. Found by coverity (a0912e3)\n o evdns: Avoid segfault on weird timeout during name lookup. (dc32077 Greg Hazel)\n o bufferevent_ssl: Correctly invoke callbacks when a SSL bufferevent reads some and then blocks. (606ac43)\n\n\n",
                      "markdown": "` o evbuffer: Avoid possible needless call to writev. Found by coverity. (6a4ec5c)\n o evdns: memset sockaddr_in before using it. Found by coverity. (a1a0e67)\n o evhttp: Check more setsockopt return values when binding sockets. Found by coverity (a0912e3)\n o evdns: Avoid segfault on weird timeout during name lookup. (dc32077 Greg Hazel)\n o bufferevent_ssl: Correctly invoke callbacks when a SSL bufferevent reads some and then blocks. (606ac43)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endLine": 15,
                  "endColumn": 28,
                  "snippet": {
                    "text": " o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\nChanges in version 2.0.20-stable (23 Aug 2012)\n",
                    "rendered": {
                      "text": " o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\nChanges in version 2.0.20-stable (23 Aug 2012)\n",
                      "markdown": "` o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\nChanges in version 2.0.20-stable (23 Aug 2012)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 47,
                  "endLine": 14,
                  "endColumn": 56,
                  "snippet": {
                    "text": " o iocp: Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set (cb853ea Juan Pablo Fernandez)\n o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\n",
                    "rendered": {
                      "text": " o iocp: Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set (cb853ea Juan Pablo Fernandez)\n o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\n",
                      "markdown": "` o iocp: Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set (cb853ea Juan Pablo Fernandez)\n o core: Avoid crash when event_pending() called with no event_base set on event (e3cccf3)\n o misc: remove stray 'x' so print_err will compile when uncommented (ac35650 Patrick Pelletier)\n o tests: Fix renegotiation test to work around openssl 1.0.1 bug (c2f3086)\n o tests: Warn when openssl version in unit test mismatches compiled version. (ac009f9)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog-2.0"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 41,
                  "endLine": 3,
                  "endColumn": 50,
                  "snippet": {
                    "text": "Changes in version 2.0.21-stable (18 Nov 2012)\nBUGFIXES:\n o ssl: Don't discard SSL read event when timeout and read come close together (576b29f)\n o ssl: Stop looping in \"consider_reading\" if reading is suspended. (f719b8a Joachim Bauch)\n o ssl: No need to reserve space if reading is suspended. (1acf2eb Joachim Bauch)\n o dns: Avoid a memory-leak on OOM in evdns. (73e85dd, f2bff75 George Danchev)\n",
                    "rendered": {
                      "text": "Changes in version 2.0.21-stable (18 Nov 2012)\nBUGFIXES:\n o ssl: Don't discard SSL read event when timeout and read come close together (576b29f)\n o ssl: Stop looping in \"consider_reading\" if reading is suspended. (f719b8a Joachim Bauch)\n o ssl: No need to reserve space if reading is suspended. (1acf2eb Joachim Bauch)\n o dns: Avoid a memory-leak on OOM in evdns. (73e85dd, f2bff75 George Danchev)\n",
                      "markdown": "`Changes in version 2.0.21-stable (18 Nov 2012)\nBUGFIXES:\n o ssl: Don't discard SSL read event when timeout and read come close together (576b29f)\n o ssl: Stop looping in \"consider_reading\" if reading is suspended. (f719b8a Joachim Bauch)\n o ssl: No need to reserve space if reading is suspended. (1acf2eb Joachim Bauch)\n o dns: Avoid a memory-leak on OOM in evdns. (73e85dd, f2bff75 George Danchev)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/epoll.c"
                },
                "region": {
                  "startLine": 506,
                  "startColumn": 2,
                  "endLine": 506,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n\t\t\ttimeout = MAX_EPOLL_TIMEOUT_MSEC;\n\t\t}\n#endif /* EVENT__HAVE_EPOLL_PWAIT2 */\n\t}\n",
                    "rendered": {
                      "text": "\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n\t\t\ttimeout = MAX_EPOLL_TIMEOUT_MSEC;\n\t\t}\n#endif /* EVENT__HAVE_EPOLL_PWAIT2 */\n\t}\n",
                      "markdown": "`\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n\t\t\ttimeout = MAX_EPOLL_TIMEOUT_MSEC;\n\t\t}\n#endif /* EVENT__HAVE_EPOLL_PWAIT2 */\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/epoll.c"
                },
                "region": {
                  "startLine": 503,
                  "startColumn": 20,
                  "endLine": 503,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\tTIMEVAL_TO_TIMESPEC(tv, &ts);\n#else /* no epoll_pwait2() */\n\t\ttimeout = evutil_tv_to_msec_(tv);\n\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n\t\t\ttimeout = MAX_EPOLL_TIMEOUT_MSEC;\n",
                    "rendered": {
                      "text": "\t\tTIMEVAL_TO_TIMESPEC(tv, &ts);\n#else /* no epoll_pwait2() */\n\t\ttimeout = evutil_tv_to_msec_(tv);\n\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n\t\t\ttimeout = MAX_EPOLL_TIMEOUT_MSEC;\n",
                      "markdown": "`\t\tTIMEVAL_TO_TIMESPEC(tv, &ts);\n#else /* no epoll_pwait2() */\n\t\ttimeout = evutil_tv_to_msec_(tv);\n\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n\t\t\ttimeout = MAX_EPOLL_TIMEOUT_MSEC;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/epoll.c"
                },
                "region": {
                  "startLine": 502,
                  "startColumn": 1,
                  "endLine": 502,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#if defined(EVENT__HAVE_EPOLL_PWAIT2)\n\t\tTIMEVAL_TO_TIMESPEC(tv, &ts);\n#else /* no epoll_pwait2() */\n\t\ttimeout = evutil_tv_to_msec_(tv);\n\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n",
                    "rendered": {
                      "text": "#if defined(EVENT__HAVE_EPOLL_PWAIT2)\n\t\tTIMEVAL_TO_TIMESPEC(tv, &ts);\n#else /* no epoll_pwait2() */\n\t\ttimeout = evutil_tv_to_msec_(tv);\n\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n",
                      "markdown": "`#if defined(EVENT__HAVE_EPOLL_PWAIT2)\n\t\tTIMEVAL_TO_TIMESPEC(tv, &ts);\n#else /* no epoll_pwait2() */\n\t\ttimeout = evutil_tv_to_msec_(tv);\n\t\tif (timeout < 0 || timeout > MAX_EPOLL_TIMEOUT_MSEC) {\n\t\t\t/* Linux kernels can wait forever if the timeout is\n\t\t\t * too big; see comment on MAX_EPOLL_TIMEOUT_MSEC. */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/epoll.c"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 3,
                  "endLine": 484,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\tif (tv->tv_sec == 0 && tv->tv_usec == 0) {\n\t\t\t\t/* we need to exit immediately; timerfd can't\n\t\t\t\t * do that. */\n\t\t\t\ttimeout = 0;\n\t\t\t}\n\t\t\tis.it_value.tv_sec = tv->tv_sec;\n\t\t\tis.it_value.tv_nsec = tv->tv_usec * 1000;\n",
                    "rendered": {
                      "text": "\t\t\tif (tv->tv_sec == 0 && tv->tv_usec == 0) {\n\t\t\t\t/* we need to exit immediately; timerfd can't\n\t\t\t\t * do that. */\n\t\t\t\ttimeout = 0;\n\t\t\t}\n\t\t\tis.it_value.tv_sec = tv->tv_sec;\n\t\t\tis.it_value.tv_nsec = tv->tv_usec * 1000;\n",
                      "markdown": "`\t\t\tif (tv->tv_sec == 0 && tv->tv_usec == 0) {\n\t\t\t\t/* we need to exit immediately; timerfd can't\n\t\t\t\t * do that. */\n\t\t\t\ttimeout = 0;\n\t\t\t}\n\t\t\tis.it_value.tv_sec = tv->tv_sec;\n\t\t\tis.it_value.tv_nsec = tv->tv_usec * 1000;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/epoll.c"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 5,
                  "endLine": 468,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#if defined(EVENT__HAVE_EPOLL_PWAIT2)\n\tstruct timespec ts = { 0, 0 };\n#else /* no epoll_pwait2() */\n\tlong timeout = -1;\n#endif /* EVENT__HAVE_EPOLL_PWAIT2 */\n\n#ifdef USING_TIMERFD\n",
                    "rendered": {
                      "text": "#if defined(EVENT__HAVE_EPOLL_PWAIT2)\n\tstruct timespec ts = { 0, 0 };\n#else /* no epoll_pwait2() */\n\tlong timeout = -1;\n#endif /* EVENT__HAVE_EPOLL_PWAIT2 */\n\n#ifdef USING_TIMERFD\n",
                      "markdown": "`#if defined(EVENT__HAVE_EPOLL_PWAIT2)\n\tstruct timespec ts = { 0, 0 };\n#else /* no epoll_pwait2() */\n\tlong timeout = -1;\n#endif /* EVENT__HAVE_EPOLL_PWAIT2 */\n\n#ifdef USING_TIMERFD\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 60,
                  "endLine": 535,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\tbufferevent_suspend_read_(bev, BEV_SUSPEND_LOOKUP);\n\n\tbufferevent_incref_(bev);\n\tbev_p->dns_request = evutil_getaddrinfo_async_(evdns_base, hostname,\n\t    portbuf, hints_in, bufferevent_connect_getaddrinfo_cb, bev);\n\n\tBEV_UNLOCK(bev);\n",
                    "rendered": {
                      "text": "\tbufferevent_suspend_read_(bev, BEV_SUSPEND_LOOKUP);\n\n\tbufferevent_incref_(bev);\n\tbev_p->dns_request = evutil_getaddrinfo_async_(evdns_base, hostname,\n\t    portbuf, hints_in, bufferevent_connect_getaddrinfo_cb, bev);\n\n\tBEV_UNLOCK(bev);\n",
                      "markdown": "`\tbufferevent_suspend_read_(bev, BEV_SUSPEND_LOOKUP);\n\n\tbufferevent_incref_(bev);\n\tbev_p->dns_request = evutil_getaddrinfo_async_(evdns_base, hostname,\n\t    portbuf, hints_in, bufferevent_connect_getaddrinfo_cb, bev);\n\n\tBEV_UNLOCK(bev);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 16,
                  "endLine": 514,
                  "endColumn": 24,
                  "snippet": {
                    "text": "int\nbufferevent_socket_connect_hostname_hints(struct bufferevent *bev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in,\n    const char *hostname, int port)\n{\n\tchar portbuf[10];\n\tstruct bufferevent_private *bev_p =\n",
                    "rendered": {
                      "text": "int\nbufferevent_socket_connect_hostname_hints(struct bufferevent *bev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in,\n    const char *hostname, int port)\n{\n\tchar portbuf[10];\n\tstruct bufferevent_private *bev_p =\n",
                      "markdown": "`int\nbufferevent_socket_connect_hostname_hints(struct bufferevent *bev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in,\n    const char *hostname, int port)\n{\n\tchar portbuf[10];\n\tstruct bufferevent_private *bev_p =\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 27,
                  "endLine": 512,
                  "endColumn": 35,
                  "snippet": {
                    "text": "}\n\nint\nbufferevent_socket_connect_hostname_hints(struct bufferevent *bev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in,\n    const char *hostname, int port)\n{\n",
                    "rendered": {
                      "text": "}\n\nint\nbufferevent_socket_connect_hostname_hints(struct bufferevent *bev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in,\n    const char *hostname, int port)\n{\n",
                      "markdown": "`}\n\nint\nbufferevent_socket_connect_hostname_hints(struct bufferevent *bev,\n    struct evdns_base *evdns_base, const struct evutil_addrinfo *hints_in,\n    const char *hostname, int port)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 74,
                  "endLine": 508,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\thint.ai_protocol = IPPROTO_TCP;\n\thint.ai_socktype = SOCK_STREAM;\n\n\treturn bufferevent_socket_connect_hostname_hints(bev, evdns_base, &hint, hostname, port);\n}\n\nint\n",
                    "rendered": {
                      "text": "\thint.ai_protocol = IPPROTO_TCP;\n\thint.ai_socktype = SOCK_STREAM;\n\n\treturn bufferevent_socket_connect_hostname_hints(bev, evdns_base, &hint, hostname, port);\n}\n\nint\n",
                      "markdown": "`\thint.ai_protocol = IPPROTO_TCP;\n\thint.ai_socktype = SOCK_STREAM;\n\n\treturn bufferevent_socket_connect_hostname_hints(bev, evdns_base, &hint, hostname, port);\n}\n\nint\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 35,
                  "endLine": 508,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\thint.ai_protocol = IPPROTO_TCP;\n\thint.ai_socktype = SOCK_STREAM;\n\n\treturn bufferevent_socket_connect_hostname_hints(bev, evdns_base, &hint, hostname, port);\n}\n\nint\n",
                    "rendered": {
                      "text": "\thint.ai_protocol = IPPROTO_TCP;\n\thint.ai_socktype = SOCK_STREAM;\n\n\treturn bufferevent_socket_connect_hostname_hints(bev, evdns_base, &hint, hostname, port);\n}\n\nint\n",
                      "markdown": "`\thint.ai_protocol = IPPROTO_TCP;\n\thint.ai_socktype = SOCK_STREAM;\n\n\treturn bufferevent_socket_connect_hostname_hints(bev, evdns_base, &hint, hostname, port);\n}\n\nint\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 59,
                  "endLine": 500,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nint\nbufferevent_socket_connect_hostname(struct bufferevent *bev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port)\n{\n\tstruct evutil_addrinfo hint;\n\tmemset(&hint, 0, sizeof(hint));\n",
                    "rendered": {
                      "text": "\nint\nbufferevent_socket_connect_hostname(struct bufferevent *bev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port)\n{\n\tstruct evutil_addrinfo hint;\n\tmemset(&hint, 0, sizeof(hint));\n",
                      "markdown": "`\nint\nbufferevent_socket_connect_hostname(struct bufferevent *bev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port)\n{\n\tstruct evutil_addrinfo hint;\n\tmemset(&hint, 0, sizeof(hint));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_sock.c"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 27,
                  "endLine": 499,
                  "endColumn": 35,
                  "snippet": {
                    "text": "}\n\nint\nbufferevent_socket_connect_hostname(struct bufferevent *bev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port)\n{\n\tstruct evutil_addrinfo hint;\n",
                    "rendered": {
                      "text": "}\n\nint\nbufferevent_socket_connect_hostname(struct bufferevent *bev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port)\n{\n\tstruct evutil_addrinfo hint;\n",
                      "markdown": "`}\n\nint\nbufferevent_socket_connect_hostname(struct bufferevent *bev,\n    struct evdns_base *evdns_base, int family, const char *hostname, int port)\n{\n\tstruct evutil_addrinfo hint;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 33,
                  "endLine": 229,
                  "endColumn": 41,
                  "snippet": {
                    "text": " bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n  o Call underlying bev ctrl GET_FD on filtered bufferevents (40550814 Greg Hazel)\n  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n  o Fix leaks in error path o",
                    "rendered": {
                      "text": " bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n  o Call underlying bev ctrl GET_FD on filtered bufferevents (40550814 Greg Hazel)\n  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n  o Fix leaks in error path o",
                      "markdown": "` bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n  o Call underlying bev ctrl GET_FD on filtered bufferevents (40550814 Greg Hazel)\n  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n  o Fix leaks in error path o`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 41,
                  "endLine": 222,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n Bufferevent:\n  o Adjust evbuffer max read for bufferevents (5357c3d6 Azat Khuzhin)\n  o Implement bufferevent_socket_connect_hostname_hints() (5e137f37 Joseph Spadavecchia)\n  o bufferevent: allow setting priority on socket and openssl type (#1011) (bdc5200a Nicolas J. Bouliane)\n\n Bufferevent bugfixes:\n",
                    "rendered": {
                      "text": "\n Bufferevent:\n  o Adjust evbuffer max read for bufferevents (5357c3d6 Azat Khuzhin)\n  o Implement bufferevent_socket_connect_hostname_hints() (5e137f37 Joseph Spadavecchia)\n  o bufferevent: allow setting priority on socket and openssl type (#1011) (bdc5200a Nicolas J. Bouliane)\n\n Bufferevent bugfixes:\n",
                      "markdown": "`\n Bufferevent:\n  o Adjust evbuffer max read for bufferevents (5357c3d6 Azat Khuzhin)\n  o Implement bufferevent_socket_connect_hostname_hints() (5e137f37 Joseph Spadavecchia)\n  o bufferevent: allow setting priority on socket and openssl type (#1011) (bdc5200a Nicolas J. Bouliane)\n\n Bufferevent bugfixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 22,
                  "endLine": 283,
                  "endColumn": 31,
                  "snippet": {
                    "text": "archive (8d89c212 Azat Khuzhin)\n  o Fix visibility issues (mostly on win32) (fb866645, ce3af533, cd285e42 Azat Khuzhin)\n  o Add configure check for midipix (94e5cc84 Redfoxmoon)\n  o autotools: pass $(OPENSSL_INCS) for samples (FTBFS macOS) (0ec5edde Carlo Marcelo Arenas Belón)\n  o autotools: confirm openssl is working before using (506df426 Carlo Marcelo Arenas Belón)\n  o Port `event_rpcgen.py` and `test/check-dumpevents.py` to Python 3. (8b0aa7b3 Kiyoshi Aman)\n  o Fix generation of LibeventConfig.cmake for the installation tree (#576) (6ee73ea9 Andrey Okoshkin)\n  o Provide Makefile variables LIBEVENT_",
                    "rendered": {
                      "text": "archive (8d89c212 Azat Khuzhin)\n  o Fix visibility issues (mostly on win32) (fb866645, ce3af533, cd285e42 Azat Khuzhin)\n  o Add configure check for midipix (94e5cc84 Redfoxmoon)\n  o autotools: pass $(OPENSSL_INCS) for samples (FTBFS macOS) (0ec5edde Carlo Marcelo Arenas Belón)\n  o autotools: confirm openssl is working before using (506df426 Carlo Marcelo Arenas Belón)\n  o Port `event_rpcgen.py` and `test/check-dumpevents.py` to Python 3. (8b0aa7b3 Kiyoshi Aman)\n  o Fix generation of LibeventConfig.cmake for the installation tree (#576) (6ee73ea9 Andrey Okoshkin)\n  o Provide Makefile variables LIBEVENT_",
                      "markdown": "`archive (8d89c212 Azat Khuzhin)\n  o Fix visibility issues (mostly on win32) (fb866645, ce3af533, cd285e42 Azat Khuzhin)\n  o Add configure check for midipix (94e5cc84 Redfoxmoon)\n  o autotools: pass $(OPENSSL_INCS) for samples (FTBFS macOS) (0ec5edde Carlo Marcelo Arenas Belón)\n  o autotools: confirm openssl is working before using (506df426 Carlo Marcelo Arenas Belón)\n  o Port `event_rpcgen.py` and `test/check-dumpevents.py` to Python 3. (8b0aa7b3 Kiyoshi Aman)\n  o Fix generation of LibeventConfig.cmake for the installation tree (#576) (6ee73ea9 Andrey Okoshkin)\n  o Provide Makefile variables LIBEVENT_`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 37,
                  "endLine": 272,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n Build fixes:\n  o Include openssl-compat.h into dist archive (7bc822ca Azat Khuzhin)\n  o Unbreak build with LibreSSL after openssl 1.1 support added (d057c45e Jan Beich)\n  o Fix RPATH for APPLE (cc0e04d7 Trond Norbye)\n  o Fixes for ERR_remove_*state() (98faf198 Pierce Lopez)\n  o Various cmake fixes (65870949 Shuo Chen)\n",
                    "rendered": {
                      "text": "\n Build fixes:\n  o Include openssl-compat.h into dist archive (7bc822ca Azat Khuzhin)\n  o Unbreak build with LibreSSL after openssl 1.1 support added (d057c45e Jan Beich)\n  o Fix RPATH for APPLE (cc0e04d7 Trond Norbye)\n  o Fixes for ERR_remove_*state() (98faf198 Pierce Lopez)\n  o Various cmake fixes (65870949 Shuo Chen)\n",
                      "markdown": "`\n Build fixes:\n  o Include openssl-compat.h into dist archive (7bc822ca Azat Khuzhin)\n  o Unbreak build with LibreSSL after openssl 1.1 support added (d057c45e Jan Beich)\n  o Fix RPATH for APPLE (cc0e04d7 Trond Norbye)\n  o Fixes for ERR_remove_*state() (98faf198 Pierce Lopez)\n  o Various cmake fixes (65870949 Shuo Chen)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 12,
                  "endLine": 262,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  o Introduce TT_RETRIABLE (4d2f013b Azat Khuzhin)\n  o test-ratelim: calculate timers bias (for slow CPUs) to avoid false-positive (8a348699 Azat Khuzhin)\n  o Merge branch 'osx-clock' (a6f81aa4 Azat Khuzhin)\n  o Fix some OpenSSL 3 test issues (#1291) (29032da6 Peter Edwards)\n\n Fixes for various OS:\n  o Enable kqueue for APPLE targets (#849) (0d7d85c2 Keith Smiley)\n",
                    "rendered": {
                      "text": "  o Introduce TT_RETRIABLE (4d2f013b Azat Khuzhin)\n  o test-ratelim: calculate timers bias (for slow CPUs) to avoid false-positive (8a348699 Azat Khuzhin)\n  o Merge branch 'osx-clock' (a6f81aa4 Azat Khuzhin)\n  o Fix some OpenSSL 3 test issues (#1291) (29032da6 Peter Edwards)\n\n Fixes for various OS:\n  o Enable kqueue for APPLE targets (#849) (0d7d85c2 Keith Smiley)\n",
                      "markdown": "`  o Introduce TT_RETRIABLE (4d2f013b Azat Khuzhin)\n  o test-ratelim: calculate timers bias (for slow CPUs) to avoid false-positive (8a348699 Azat Khuzhin)\n  o Merge branch 'osx-clock' (a6f81aa4 Azat Khuzhin)\n  o Fix some OpenSSL 3 test issues (#1291) (29032da6 Peter Edwards)\n\n Fixes for various OS:\n  o Enable kqueue for APPLE targets (#849) (0d7d85c2 Keith Smiley)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 24,
                  "endLine": 231,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n  o Fix leaks in error path of the bufferevent_init_common_() (6995b9a8 Azat Khuzhin)\n  o Check return value of evbuffer_remove() in bufferevent_read() (#1133) (bc25889f lilei)\n\n",
                    "rendered": {
                      "text": "  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n  o Fix leaks in error path of the bufferevent_init_common_() (6995b9a8 Azat Khuzhin)\n  o Check return value of evbuffer_remove() in bufferevent_read() (#1133) (bc25889f lilei)\n\n",
                      "markdown": "`  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n  o Fix leaks in error path of the bufferevent_init_common_() (6995b9a8 Azat Khuzhin)\n  o Check return value of evbuffer_remove() in bufferevent_read() (#1133) (bc25889f lilei)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 7,
                  "endLine": 228,
                  "endColumn": 16,
                  "snippet": {
                    "text": " Bufferevent bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n  o Call underlying bev ctrl GET_FD on filtered bufferevents (40550814 Greg Hazel)\n  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n",
                    "rendered": {
                      "text": " Bufferevent bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n  o Call underlying bev ctrl GET_FD on filtered bufferevents (40550814 Greg Hazel)\n  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n",
                      "markdown": "` Bufferevent bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n  o Call underlying bev ctrl GET_FD on filtered bufferevents (40550814 Greg Hazel)\n  o Fix timeout resets for filters (4ba48739 Greg Hazel)\n  o bufferevent_socket_connect{,_hostname}() missing event callback and use ret code (f7bc1337 Jesse Fang)\n  o Fix hangs due to watermarks overruns in bufferevents implementations (878bb2d3 Azat Khuzhin)\n  o Simplify bufferevent timeout tests to reduce CPU usage in between start/compare (6ac8e775 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 53,
                  "endLine": 223,
                  "endColumn": 62,
                  "snippet": {
                    "text": " Bufferevent:\n  o Adjust evbuffer max read for bufferevents (5357c3d6 Azat Khuzhin)\n  o Implement bufferevent_socket_connect_hostname_hints() (5e137f37 Joseph Spadavecchia)\n  o bufferevent: allow setting priority on socket and openssl type (#1011) (bdc5200a Nicolas J. Bouliane)\n\n Bufferevent bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n",
                    "rendered": {
                      "text": " Bufferevent:\n  o Adjust evbuffer max read for bufferevents (5357c3d6 Azat Khuzhin)\n  o Implement bufferevent_socket_connect_hostname_hints() (5e137f37 Joseph Spadavecchia)\n  o bufferevent: allow setting priority on socket and openssl type (#1011) (bdc5200a Nicolas J. Bouliane)\n\n Bufferevent bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n",
                      "markdown": "` Bufferevent:\n  o Adjust evbuffer max read for bufferevents (5357c3d6 Azat Khuzhin)\n  o Implement bufferevent_socket_connect_hostname_hints() (5e137f37 Joseph Spadavecchia)\n  o bufferevent: allow setting priority on socket and openssl type (#1011) (bdc5200a Nicolas J. Bouliane)\n\n Bufferevent bugfixes:\n  o Remove check against passed bufferevent in bufferevent_socket_connect() (a10a6f4e Ivan Maidanski, Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 44,
                  "endLine": 118,
                  "endColumn": 53,
                  "snippet": {
                    "text": "ized value for AF_UNIX/AF_LOCAL sockaddr (76eded24 Azat Khuzhin)\n  o http: make sure the other fields in ext_method are not changed by the callback (1c78451f yuangongji)\n  o http: fix EVHTTP_CON_AUTOFREE in case of connection error (083c6d54 Azat Khuzhin)\n  o http: fix EVHTTP_CON_AUTOFREE in case of timeout (and some else) (eee26dee Azat Khuzhin)\n  o Check error code of evhttp_add_header_internal() in evhttp_parse_query_impl() (4528d8e9 Azat Khuzhin)\n  o http: fix undefined-shift in EVUTIL_IS*_ helpers (37dbb350 Azat Khuzhin)\n  o http: fix invalid unsigned arithmetic (#1134) (d13b7bbf ihsinme)\n  o Fix ",
                    "rendered": {
                      "text": "ized value for AF_UNIX/AF_LOCAL sockaddr (76eded24 Azat Khuzhin)\n  o http: make sure the other fields in ext_method are not changed by the callback (1c78451f yuangongji)\n  o http: fix EVHTTP_CON_AUTOFREE in case of connection error (083c6d54 Azat Khuzhin)\n  o http: fix EVHTTP_CON_AUTOFREE in case of timeout (and some else) (eee26dee Azat Khuzhin)\n  o Check error code of evhttp_add_header_internal() in evhttp_parse_query_impl() (4528d8e9 Azat Khuzhin)\n  o http: fix undefined-shift in EVUTIL_IS*_ helpers (37dbb350 Azat Khuzhin)\n  o http: fix invalid unsigned arithmetic (#1134) (d13b7bbf ihsinme)\n  o Fix ",
                      "markdown": "`ized value for AF_UNIX/AF_LOCAL sockaddr (76eded24 Azat Khuzhin)\n  o http: make sure the other fields in ext_method are not changed by the callback (1c78451f yuangongji)\n  o http: fix EVHTTP_CON_AUTOFREE in case of connection error (083c6d54 Azat Khuzhin)\n  o http: fix EVHTTP_CON_AUTOFREE in case of timeout (and some else) (eee26dee Azat Khuzhin)\n  o Check error code of evhttp_add_header_internal() in evhttp_parse_query_impl() (4528d8e9 Azat Khuzhin)\n  o http: fix undefined-shift in EVUTIL_IS*_ helpers (37dbb350 Azat Khuzhin)\n  o http: fix invalid unsigned arithmetic (#1134) (d13b7bbf ihsinme)\n  o Fix `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 15,
                  "endLine": 81,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  o fix handling of close_notify (ssl) in http with openssl bufferevents (da3f2ba2 Azat Khuzhin)\n  o be_openssl: avoid leaking of SSL structure (acf09c00 Azat Khuzhin)\n  o Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break (9d93fbe7 Azat Khuzhin)\n  o Don't loose top error in SSL (a30d6d85 Yury Korzhetsky)\n  o Use heap-bases contexts for MbedTLS handles (#1355) (285fc7cc Dmitry Ilyin)\n  o Deal with partial writes on SSL write (fc568ff0 zhenhaonong)\n  o Avoid EOF in rare (or not that rare) cases - #1451 (e8cbe7b6 Azat Khuzhin)\n",
                    "rendered": {
                      "text": "  o fix handling of close_notify (ssl) in http with openssl bufferevents (da3f2ba2 Azat Khuzhin)\n  o be_openssl: avoid leaking of SSL structure (acf09c00 Azat Khuzhin)\n  o Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break (9d93fbe7 Azat Khuzhin)\n  o Don't loose top error in SSL (a30d6d85 Yury Korzhetsky)\n  o Use heap-bases contexts for MbedTLS handles (#1355) (285fc7cc Dmitry Ilyin)\n  o Deal with partial writes on SSL write (fc568ff0 zhenhaonong)\n  o Avoid EOF in rare (or not that rare) cases - #1451 (e8cbe7b6 Azat Khuzhin)\n",
                      "markdown": "`  o fix handling of close_notify (ssl) in http with openssl bufferevents (da3f2ba2 Azat Khuzhin)\n  o be_openssl: avoid leaking of SSL structure (acf09c00 Azat Khuzhin)\n  o Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break (9d93fbe7 Azat Khuzhin)\n  o Don't loose top error in SSL (a30d6d85 Yury Korzhetsky)\n  o Use heap-bases contexts for MbedTLS handles (#1355) (285fc7cc Dmitry Ilyin)\n  o Deal with partial writes on SSL write (fc568ff0 zhenhaonong)\n  o Avoid EOF in rare (or not that rare) cases - #1451 (e8cbe7b6 Azat Khuzhin)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 51,
                  "endLine": 78,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n SSL bugfixes:\n  o Explicitly call SSL_clear when reseting the fd. (#498) (c6c74ce2 David Benjamin)\n  o fix handling of close_notify (ssl) in http with openssl bufferevents (da3f2ba2 Azat Khuzhin)\n  o be_openssl: avoid leaking of SSL structure (acf09c00 Azat Khuzhin)\n  o Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break (9d93fbe7 Azat Khuzhin)\n  o Don't loose top error in SSL (a30d6d85 Yury Korzhetsky)\n",
                    "rendered": {
                      "text": "\n SSL bugfixes:\n  o Explicitly call SSL_clear when reseting the fd. (#498) (c6c74ce2 David Benjamin)\n  o fix handling of close_notify (ssl) in http with openssl bufferevents (da3f2ba2 Azat Khuzhin)\n  o be_openssl: avoid leaking of SSL structure (acf09c00 Azat Khuzhin)\n  o Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break (9d93fbe7 Azat Khuzhin)\n  o Don't loose top error in SSL (a30d6d85 Yury Korzhetsky)\n",
                      "markdown": "`\n SSL bugfixes:\n  o Explicitly call SSL_clear when reseting the fd. (#498) (c6c74ce2 David Benjamin)\n  o fix handling of close_notify (ssl) in http with openssl bufferevents (da3f2ba2 Azat Khuzhin)\n  o be_openssl: avoid leaking of SSL structure (acf09c00 Azat Khuzhin)\n  o Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break (9d93fbe7 Azat Khuzhin)\n  o Don't loose top error in SSL (a30d6d85 Yury Korzhetsky)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 11,
                  "endLine": 72,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  o Do not try to do SSL handshake if the connect() fails (59e31c96 Azat Khuzhin)\n  o Support disabled renegotiation in mbedTLS (f02fa339 Azat Khuzhin)\n  o Merge branch 'mbedtls-3' (#1299) (20977eae William Marlow, Azat Khuzhin)\n  o Initial OpenSSL 3.0 support (#1288) (69e9f7ee William Marlow, Azat Khuzhin)\n  o More SSL_read() to fill big buffer (ef51444f Thuan Tran)\n  o Make bufferevent_set_max_single_read() effect (4ab3242d Thuan Tran)\n\n",
                    "rendered": {
                      "text": "  o Do not try to do SSL handshake if the connect() fails (59e31c96 Azat Khuzhin)\n  o Support disabled renegotiation in mbedTLS (f02fa339 Azat Khuzhin)\n  o Merge branch 'mbedtls-3' (#1299) (20977eae William Marlow, Azat Khuzhin)\n  o Initial OpenSSL 3.0 support (#1288) (69e9f7ee William Marlow, Azat Khuzhin)\n  o More SSL_read() to fill big buffer (ef51444f Thuan Tran)\n  o Make bufferevent_set_max_single_read() effect (4ab3242d Thuan Tran)\n\n",
                      "markdown": "`  o Do not try to do SSL handshake if the connect() fails (59e31c96 Azat Khuzhin)\n  o Support disabled renegotiation in mbedTLS (f02fa339 Azat Khuzhin)\n  o Merge branch 'mbedtls-3' (#1299) (20977eae William Marlow, Azat Khuzhin)\n  o Initial OpenSSL 3.0 support (#1288) (69e9f7ee William Marlow, Azat Khuzhin)\n  o More SSL_read() to fill big buffer (ef51444f Thuan Tran)\n  o Make bufferevent_set_max_single_read() effect (4ab3242d Thuan Tran)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 15,
                  "endLine": 30,
                  "endColumn": 24,
                  "snippet": {
                    "text": " distribution.\n\n SSL layer gains MbedTLS support, and had been tested with LibreSSL too. And\n of course with OpenSSL 1.1/3.0.\n\n From now on, the autotools is considered as deprecated, and you should use\n cmake instead.\n",
                    "rendered": {
                      "text": " distribution.\n\n SSL layer gains MbedTLS support, and had been tested with LibreSSL too. And\n of course with OpenSSL 1.1/3.0.\n\n From now on, the autotools is considered as deprecated, and you should use\n cmake instead.\n",
                      "markdown": "` distribution.\n\n SSL layer gains MbedTLS support, and had been tested with LibreSSL too. And\n of course with OpenSSL 1.1/3.0.\n\n From now on, the autotools is considered as deprecated, and you should use\n cmake instead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/ChangeLog"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 25,
                  "endLine": 25,
                  "endColumn": 30,
                  "snippet": {
                    "text": " - cmake over autotools/automake\n - extensive CI\n\n For more detail, see the git changelogs. For more insight, see the\n \"whatsnew-2.2.txt\" document included in the Libevent 2.2.1-alpha\n distribution.\n\n",
                    "rendered": {
                      "text": " - cmake over autotools/automake\n - extensive CI\n\n For more detail, see the git changelogs. For more insight, see the\n \"whatsnew-2.2.txt\" document included in the Libevent 2.2.1-alpha\n distribution.\n\n",
                      "markdown": "` - cmake over autotools/automake\n - extensive CI\n\n For more detail, see the git changelogs. For more insight, see the\n \"whatsnew-2.2.txt\" document included in the Libevent 2.2.1-alpha\n distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 44,
                  "endLine": 87,
                  "endColumn": 48,
                  "snippet": {
                    "text": "# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n#\n# Eventually, when we get to the point where the structures in the\n# headers are all non-changing (or not there at all!), we can shift to\n# a more normal worldview where backward-incompatible ABI changes are\n# nice and rare.  For the next couple of years, though, 'struct event'\n# is user-visible, and so we can pretty much guarantee that release\n",
                    "rendered": {
                      "text": "# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n#\n# Eventually, when we get to the point where the structures in the\n# headers are all non-changing (or not there at all!), we can shift to\n# a more normal worldview where backward-incompatible ABI changes are\n# nice and rare.  For the next couple of years, though, 'struct event'\n# is user-visible, and so we can pretty much guarantee that release\n",
                      "markdown": "`# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n#\n# Eventually, when we get to the point where the structures in the\n# headers are all non-changing (or not there at all!), we can shift to\n# a more normal worldview where backward-incompatible ABI changes are\n# nice and rare.  For the next couple of years, though, 'struct event'\n# is user-visible, and so we can pretty much guarantee that release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 40,
                  "endLine": 78,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# ABI version history for this package effectively restarts every time\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n#\n# Ideally, we would not be using RELEASE at all; instead we could just\n# use the VERSION_INFO field to label our backward-incompatible ABI\n# changes, and those would be few and far between.  Unfortunately,\n# Libevent still exposes far too many volatile structures in its\n",
                    "rendered": {
                      "text": "# ABI version history for this package effectively restarts every time\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n#\n# Ideally, we would not be using RELEASE at all; instead we could just\n# use the VERSION_INFO field to label our backward-incompatible ABI\n# changes, and those would be few and far between.  Unfortunately,\n# Libevent still exposes far too many volatile structures in its\n",
                      "markdown": "`# ABI version history for this package effectively restarts every time\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n#\n# Ideally, we would not be using RELEASE at all; instead we could just\n# use the VERSION_INFO field to label our backward-incompatible ABI\n# changes, and those would be few and far between.  Unfortunately,\n# Libevent still exposes far too many volatile structures in its\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 49,
                  "endLine": 54,
                  "endColumn": 57,
                  "snippet": {
                    "text": "#  2.0.12-stable--    2.0        6:1:1 (No ABI change)\n#  2.0.13-stable--    2.0        6:2:1 (No ABI change)\n#  2.0.14-stable--    2.0        6:3:1 (No ABI change)\n#  2.0.15-stable--    2.0        6:3:1 (Forgot to update :( )\n#  2.0.16-stable--    2.0        6:4:1 (No ABI change)\n#  2.0.17-stable--    2.0        6:5:1 (No ABI change)\n#  2.0.18-stable--    2.0        6:6:1 (No ABI change)\n",
                    "rendered": {
                      "text": "#  2.0.12-stable--    2.0        6:1:1 (No ABI change)\n#  2.0.13-stable--    2.0        6:2:1 (No ABI change)\n#  2.0.14-stable--    2.0        6:3:1 (No ABI change)\n#  2.0.15-stable--    2.0        6:3:1 (Forgot to update :( )\n#  2.0.16-stable--    2.0        6:4:1 (No ABI change)\n#  2.0.17-stable--    2.0        6:5:1 (No ABI change)\n#  2.0.18-stable--    2.0        6:6:1 (No ABI change)\n",
                      "markdown": "`#  2.0.12-stable--    2.0        6:1:1 (No ABI change)\n#  2.0.13-stable--    2.0        6:2:1 (No ABI change)\n#  2.0.14-stable--    2.0        6:3:1 (No ABI change)\n#  2.0.15-stable--    2.0        6:3:1 (Forgot to update :( )\n#  2.0.16-stable--    2.0        6:4:1 (No ABI change)\n#  2.0.17-stable--    2.0        6:5:1 (No ABI change)\n#  2.0.18-stable--    2.0        6:6:1 (No ABI change)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 2,
                  "endLine": 305,
                  "snippet": {
                    "text": "libevent_extra_la_LIBADD = $(MAYBE_CORE) $(SYS_LIBS)\nlibevent_extra_la_LDFLAGS = $(GENERIC_LDFLAGS)\n\nif OPENSSL\nlibevent_openssl_la_SOURCES = bufferevent_openssl.c bufferevent_ssl.c\nlibevent_openssl_la_LIBADD = $(MAYBE_CORE) $(OPENSSL_LIBS)\nlibevent_openssl_la_LDFLAGS = $(GENERIC_LDFLAGS)\nlibevent_openssl_la_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\n",
                    "rendered": {
                      "text": "libevent_extra_la_LIBADD = $(MAYBE_CORE) $(SYS_LIBS)\nlibevent_extra_la_LDFLAGS = $(GENERIC_LDFLAGS)\n\nif OPENSSL\nlibevent_openssl_la_SOURCES = bufferevent_openssl.c bufferevent_ssl.c\nlibevent_openssl_la_LIBADD = $(MAYBE_CORE) $(OPENSSL_LIBS)\nlibevent_openssl_la_LDFLAGS = $(GENERIC_LDFLAGS)\nlibevent_openssl_la_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\n",
                      "markdown": "`libevent_extra_la_LIBADD = $(MAYBE_CORE) $(SYS_LIBS)\nlibevent_extra_la_LDFLAGS = $(GENERIC_LDFLAGS)\n\nif OPENSSL\nlibevent_openssl_la_SOURCES = bufferevent_openssl.c bufferevent_ssl.c\nlibevent_openssl_la_LIBADD = $(MAYBE_CORE) $(OPENSSL_LIBS)\nlibevent_openssl_la_LDFLAGS = $(GENERIC_LDFLAGS)\nlibevent_openssl_la_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 2,
                  "endLine": 160,
                  "snippet": {
                    "text": "LIBEVENT_LIBS_LA += libevent_pthreads.la\nLIBEVENT_PKGCONFIG += libevent_pthreads.pc\nendif\nif OPENSSL\nLIBEVENT_LIBS_LA += libevent_openssl.la\nLIBEVENT_PKGCONFIG += libevent_openssl.pc\nendif\nif MBEDTLS\n",
                    "rendered": {
                      "text": "LIBEVENT_LIBS_LA += libevent_pthreads.la\nLIBEVENT_PKGCONFIG += libevent_pthreads.pc\nendif\nif OPENSSL\nLIBEVENT_LIBS_LA += libevent_openssl.la\nLIBEVENT_PKGCONFIG += libevent_openssl.pc\nendif\nif MBEDTLS\n",
                      "markdown": "`LIBEVENT_LIBS_LA += libevent_pthreads.la\nLIBEVENT_PKGCONFIG += libevent_pthreads.pc\nendif\nif OPENSSL\nLIBEVENT_LIBS_LA += libevent_openssl.la\nLIBEVENT_PKGCONFIG += libevent_openssl.pc\nendif\nif MBEDTLS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 89,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Eventually, when we get to the point where the structures in the\n# headers are all non-changing (or not there at all!), we can shift to\n# a more normal worldview where backward-incompatible ABI changes are\n# nice and rare.  For the next couple of years, though, 'struct event'\n# is user-visible, and so we can pretty much guarantee that release\n# series won't be binary-compatible.\n\n",
                    "rendered": {
                      "text": "# Eventually, when we get to the point where the structures in the\n# headers are all non-changing (or not there at all!), we can shift to\n# a more normal worldview where backward-incompatible ABI changes are\n# nice and rare.  For the next couple of years, though, 'struct event'\n# is user-visible, and so we can pretty much guarantee that release\n# series won't be binary-compatible.\n\n",
                      "markdown": "`# Eventually, when we get to the point where the structures in the\n# headers are all non-changing (or not there at all!), we can shift to\n# a more normal worldview where backward-incompatible ABI changes are\n# nice and rare.  For the next couple of years, though, 'struct event'\n# is user-visible, and so we can pretty much guarantee that release\n# series won't be binary-compatible.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 65,
                  "endLine": 76,
                  "snippet": {
                    "text": "# For Libevent 2.2:\n#  2.2.1-alpha --     2.2        1:0:0\n\n# ABI version history for this package effectively restarts every time\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n#\n# Ideally, we would not be using RELEASE at all; instead we could just\n# use the VERSION_INFO field to label our backward-incompatible ABI\n",
                    "rendered": {
                      "text": "# For Libevent 2.2:\n#  2.2.1-alpha --     2.2        1:0:0\n\n# ABI version history for this package effectively restarts every time\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n#\n# Ideally, we would not be using RELEASE at all; instead we could just\n# use the VERSION_INFO field to label our backward-incompatible ABI\n",
                      "markdown": "`# For Libevent 2.2:\n#  2.2.1-alpha --     2.2        1:0:0\n\n# ABI version history for this package effectively restarts every time\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n#\n# Ideally, we would not be using RELEASE at all; instead we could just\n# use the VERSION_INFO field to label our backward-incompatible ABI\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Makefile.am"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# This number incremented once for the 2.0 release candidate, and\n# will increment for each series until we revise our interfaces enough\n# that we can seriously expect ABI compatibility between series.\n#\nRELEASE = -release 2.2\n\n",
                    "rendered": {
                      "text": "#\n# This number incremented once for the 2.0 release candidate, and\n# will increment for each series until we revise our interfaces enough\n# that we can seriously expect ABI compatibility between series.\n#\nRELEASE = -release 2.2\n\n",
                      "markdown": "`#\n# This number incremented once for the 2.0 release candidate, and\n# will increment for each series until we revise our interfaces enough\n# that we can seriously expect ABI compatibility between series.\n#\nRELEASE = -release 2.2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1738,
                  "startColumn": 19,
                  "endLine": 1738,
                  "endColumn": 125,
                  "snippet": {
                    "text": "test_evbuffer_iterative(void *ptr)\n{\n\tstruct evbuffer *buf = evbuffer_new();\n\tconst char *abc = \"abcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyz\";\n\tunsigned i, j, sum, n;\n\n\tsum = 0;\n",
                    "rendered": {
                      "text": "test_evbuffer_iterative(void *ptr)\n{\n\tstruct evbuffer *buf = evbuffer_new();\n\tconst char *abc = \"abcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyz\";\n\tunsigned i, j, sum, n;\n\n\tsum = 0;\n",
                      "markdown": "`test_evbuffer_iterative(void *ptr)\n{\n\tstruct evbuffer *buf = evbuffer_new();\n\tconst char *abc = \"abcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyz\";\n\tunsigned i, j, sum, n;\n\n\tsum = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 44,
                  "endLine": 2839,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t    \"Still they skirmish to and fro, men my messmates on the snow \"\n\t    \"When we headed off the aurochs turn for turn; \"\n\t    \"When the rich Allobrogenses never kept amanuenses, \"\n\t    \"And our only plots were piled in lakes at Berne.\";\n\t/* -- Kipling, \"In The Neolithic Age\" */\n\tchar tmp[1024];\n\tstruct evbuffer_ptr ptr;\n",
                    "rendered": {
                      "text": "\t    \"Still they skirmish to and fro, men my messmates on the snow \"\n\t    \"When we headed off the aurochs turn for turn; \"\n\t    \"When the rich Allobrogenses never kept amanuenses, \"\n\t    \"And our only plots were piled in lakes at Berne.\";\n\t/* -- Kipling, \"In The Neolithic Age\" */\n\tchar tmp[1024];\n\tstruct evbuffer_ptr ptr;\n",
                      "markdown": "`\t    \"Still they skirmish to and fro, men my messmates on the snow \"\n\t    \"When we headed off the aurochs turn for turn; \"\n\t    \"When the rich Allobrogenses never kept amanuenses, \"\n\t    \"And our only plots were piled in lakes at Berne.\";\n\t/* -- Kipling, \"In The Neolithic Age\" */\n\tchar tmp[1024];\n\tstruct evbuffer_ptr ptr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 2744,
                  "endLine": 2744,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tFREEZE_EQ(r, -1, 0);\n\tr = evbuffer_prepend(buf, \"dummy\", 5);\n\tFREEZE_EQ(r, -1, 0);\n\tcp = evbuffer_readln(buf, NULL, EVBUFFER_EOL_LF);\n\tFREEZE_EQ(cp==NULL, 1, 0);\n\tif (cp)\n\t\tfree(cp);\n",
                    "rendered": {
                      "text": "\tFREEZE_EQ(r, -1, 0);\n\tr = evbuffer_prepend(buf, \"dummy\", 5);\n\tFREEZE_EQ(r, -1, 0);\n\tcp = evbuffer_readln(buf, NULL, EVBUFFER_EOL_LF);\n\tFREEZE_EQ(cp==NULL, 1, 0);\n\tif (cp)\n\t\tfree(cp);\n",
                      "markdown": "`\tFREEZE_EQ(r, -1, 0);\n\tr = evbuffer_prepend(buf, \"dummy\", 5);\n\tFREEZE_EQ(r, -1, 0);\n\tcp = evbuffer_readln(buf, NULL, EVBUFFER_EOL_LF);\n\tFREEZE_EQ(cp==NULL, 1, 0);\n\tif (cp)\n\t\tfree(cp);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1668,
                  "startColumn": 10,
                  "endLine": 1668,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#endif\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"two line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\n end:\n",
                    "rendered": {
                      "text": "#endif\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"two line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\n end:\n",
                      "markdown": "`#endif\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"two line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\n end:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1666,
                  "endLine": 1666,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t/* now we should get the next line back */\n\tevent_set_mem_functions(malloc, realloc, free);\n#endif\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"two line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\t/* now we should get the next line back */\n\tevent_set_mem_functions(malloc, realloc, free);\n#endif\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"two line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\t/* now we should get the next line back */\n\tevent_set_mem_functions(malloc, realloc, free);\n#endif\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"two line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1659,
                  "endLine": 1659,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t/* the next call to readline should fail */\n#ifndef EVENT__DISABLE_MM_REPLACEMENT\n\tevent_set_mem_functions(failing_malloc, realloc, free);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_assert(cp == NULL);\n\tevbuffer_validate(evb);\n\n",
                    "rendered": {
                      "text": "\t/* the next call to readline should fail */\n#ifndef EVENT__DISABLE_MM_REPLACEMENT\n\tevent_set_mem_functions(failing_malloc, realloc, free);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_assert(cp == NULL);\n\tevbuffer_validate(evb);\n\n",
                      "markdown": "`\t/* the next call to readline should fail */\n#ifndef EVENT__DISABLE_MM_REPLACEMENT\n\tevent_set_mem_functions(failing_malloc, realloc, free);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_assert(cp == NULL);\n\tevbuffer_validate(evb);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1653,
                  "startColumn": 10,
                  "endLine": 1653,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"one line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\n\t/* the next call to readline should fail */\n",
                    "rendered": {
                      "text": "\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"one line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\n\t/* the next call to readline should fail */\n",
                      "markdown": "`\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"one line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\n\t/* the next call to readline should fail */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1651,
                  "endLine": 1651,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_add_buffer(evb, evb_tmp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"one line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tevbuffer_add_buffer(evb, evb_tmp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"one line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tevbuffer_add_buffer(evb, evb_tmp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"one line\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1640,
                  "startColumn": 10,
                  "endLine": 1640,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n\n",
                    "rendered": {
                      "text": "\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n\n",
                      "markdown": "`\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1638,
                  "endLine": 1638,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_validate(evb);\n\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tevbuffer_validate(evb);\n\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tevbuffer_validate(evb);\n\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp); cp = NULL;\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1632,
                  "endLine": 1632,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1627,
                  "endLine": 1627,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1622,
                  "endLine": 1622,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_add_buffer(evb, evb_tmp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\" and a bad crlf\\nand a good one\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tevbuffer_add_buffer(evb, evb_tmp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\" and a bad crlf\\nand a good one\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tevbuffer_add_buffer(evb, evb_tmp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\" and a bad crlf\\nand a good one\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1601,
                  "endLine": 1601,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_ptr_op(cp, ==, NULL);\n\tevbuffer_drain(evb, -1);\n\n",
                    "rendered": {
                      "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_ptr_op(cp, ==, NULL);\n\tevbuffer_drain(evb, -1);\n\n",
                      "markdown": "`\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_ptr_op(cp, ==, NULL);\n\tevbuffer_drain(evb, -1);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1599,
                  "startColumn": 26,
                  "endLine": 1599,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_ptr_op(cp, ==, NULL);\n",
                    "rendered": {
                      "text": "\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_ptr_op(cp, ==, NULL);\n",
                      "markdown": "`\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_ptr_op(cp, ==, NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1598,
                  "endLine": 1598,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                    "rendered": {
                      "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                      "markdown": "`\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"to accomplish time fill\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1595,
                  "endLine": 1595,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                    "rendered": {
                      "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                      "markdown": "`\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"The all-zeros character which may serve\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1592,
                  "endLine": 1592,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"NUL\\n\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                    "rendered": {
                      "text": "\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"NUL\\n\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                      "markdown": "`\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"NUL\\n\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1589,
                  "endLine": 1589,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\t/* Add all but the final NUL of x. */\n\t\tevbuffer_add(evb, x, sizeof(x)-1);\n\t}\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"NUL\\n\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                    "rendered": {
                      "text": "\t\t/* Add all but the final NUL of x. */\n\t\tevbuffer_add(evb, x, sizeof(x)-1);\n\t}\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"NUL\\n\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n",
                      "markdown": "`\t\t/* Add all but the final NUL of x. */\n\t\tevbuffer_add(evb, x, sizeof(x)-1);\n\t}\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n\ttt_line_eq(\"NUL\\n\");\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_NUL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1585,
                  "startColumn": 20,
                  "endLine": 1585,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tchar x[] =\n\t\t    \"NUL\\n\\0\\0\"\n\t\t    \"The all-zeros character which may serve\\0\"\n\t\t    \"to accomplish time fill\\0and media fill\";\n\t\t/* Add all but the final NUL of x. */\n\t\tevbuffer_add(evb, x, sizeof(x)-1);\n\t}\n",
                    "rendered": {
                      "text": "\t\tchar x[] =\n\t\t    \"NUL\\n\\0\\0\"\n\t\t    \"The all-zeros character which may serve\\0\"\n\t\t    \"to accomplish time fill\\0and media fill\";\n\t\t/* Add all but the final NUL of x. */\n\t\tevbuffer_add(evb, x, sizeof(x)-1);\n\t}\n",
                      "markdown": "`\t\tchar x[] =\n\t\t    \"NUL\\n\\0\\0\"\n\t\t    \"The all-zeros character which may serve\\0\"\n\t\t    \"to accomplish time fill\\0and media fill\";\n\t\t/* Add all but the final NUL of x. */\n\t\tevbuffer_add(evb, x, sizeof(x)-1);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1574,
                  "endLine": 1574,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"Text\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"Text\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"Text\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1569,
                  "endLine": 1569,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_assert(!cp);\n\tfree(cp);\n\tevbuffer_add(evb, \"\\n\", 1);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_assert(!cp);\n\tfree(cp);\n\tevbuffer_add(evb, \"\\n\", 1);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_assert(!cp);\n\tfree(cp);\n\tevbuffer_add(evb, \"\\n\", 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1564,
                  "endLine": 1564,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1559,
                  "endLine": 1559,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"An\\rand a nl\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"An\\rand a nl\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_LF);\n\ttt_line_eq(\"An\\rand a nl\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1548,
                  "endLine": 1548,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\tevbuffer_add(evb, \"\\r\\n\", 2);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"Nor is a lack of one\");\n\tfree(cp);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n",
                    "rendered": {
                      "text": "\n\tevbuffer_add(evb, \"\\r\\n\", 2);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"Nor is a lack of one\");\n\tfree(cp);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n",
                      "markdown": "`\n\tevbuffer_add(evb, \"\\r\\n\", 2);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"Nor is a lack of one\");\n\tfree(cp);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1542,
                  "endLine": 1542,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1537,
                  "endLine": 1537,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\ts = \"An internal CR\\r is not an eol\\r\\nNor is a lack of one\";\n\tevbuffer_add(evb, s, strlen(s));\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"An internal CR\\r is not an eol\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\n\ts = \"An internal CR\\r is not an eol\\r\\nNor is a lack of one\";\n\tevbuffer_add(evb, s, strlen(s));\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"An internal CR\\r is not an eol\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\n\ts = \"An internal CR\\r is not an eol\\r\\nNor is a lack of one\";\n\tevbuffer_add(evb, s, strlen(s));\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"An internal CR\\r is not an eol\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1529,
                  "endLine": 1529,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n",
                    "rendered": {
                      "text": "\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n",
                      "markdown": "`\tevbuffer_add(evb, \"\\n\", 1);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"More\");\n\tfree(cp);\n\ttt_assert(evbuffer_get_length(evb) == 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1523,
                  "endLine": 1523,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\tevbuffer_add(evb, \"\\n\", 1);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\tevbuffer_add(evb, \"\\n\", 1);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\tevbuffer_add(evb, \"\\n\", 1);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1518,
                  "endLine": 1518,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1513,
                  "endLine": 1513,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ts = \" and a bad crlf\\nand a good one\\r\\n\\r\\nMore\\r\";\n\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"x and a bad crlf\\nand a good one\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\ts = \" and a bad crlf\\nand a good one\\r\\n\\r\\nMore\\r\";\n\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"x and a bad crlf\\nand a good one\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\ts = \" and a bad crlf\\nand a good one\\r\\n\\r\\nMore\\r\";\n\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF_STRICT);\n\ttt_line_eq(\"x and a bad crlf\\nand a good one\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1505,
                  "endLine": 1505,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_add(evb, s, 1);\n\tevbuffer_validate(evb);\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\n",
                    "rendered": {
                      "text": "\tevbuffer_add(evb, s, 1);\n\tevbuffer_validate(evb);\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\n",
                      "markdown": "`\tevbuffer_add(evb, s, 1);\n\tevbuffer_validate(evb);\n\tfree(cp);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1498,
                  "endLine": 1498,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"final\");\n\ts = \"x\";\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"final\");\n\ts = \"x\";\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"final\");\n\ts = \"x\";\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1493,
                  "endLine": 1493,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1488,
                  "endLine": 1488,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"Line with good crlf\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"Line with good crlf\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tfree(cp);\n\tevbuffer_validate(evb);\n\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"Line with good crlf\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1483,
                  "endLine": 1483,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ts = \"Line with\\rin the middle\\nLine with good crlf\\r\\n\\nfinal\\n\";\n\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"Line with\\rin the middle\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\ts = \"Line with\\rin the middle\\nLine with good crlf\\r\\n\\nfinal\\n\";\n\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"Line with\\rin the middle\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\ts = \"Line with\\rin the middle\\nLine with good crlf\\r\\n\\nfinal\\n\";\n\tevbuffer_add(evb, s, strlen(s));\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_CRLF);\n\ttt_line_eq(\"Line with\\rin the middle\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1472,
                  "endLine": 1472,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\tevbuffer_drain(evb, evbuffer_get_length(evb));\n",
                    "rendered": {
                      "text": "\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\tevbuffer_drain(evb, evbuffer_get_length(evb));\n",
                      "markdown": "`\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_assert(!cp);\n\tevbuffer_validate(evb);\n\tevbuffer_drain(evb, evbuffer_get_length(evb));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1468,
                  "endLine": 1468,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tevbuffer_add(evb, s, strlen(s));\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\tevbuffer_add(evb, s, strlen(s));\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\tevbuffer_add(evb, s, strlen(s));\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_line_eq(\"\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1459,
                  "endLine": 1459,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ttt_line_eq(\"complex silly newline\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\tif (!cp || sz != 5 || memcmp(cp, \"more\\0\\0\", 6))\n\t\ttt_abort_msg(\"Not as expected\");\n\ttt_uint_op(evbuffer_get_length(evb), ==, 0);\n",
                    "rendered": {
                      "text": "\ttt_line_eq(\"complex silly newline\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\tif (!cp || sz != 5 || memcmp(cp, \"more\\0\\0\", 6))\n\t\ttt_abort_msg(\"Not as expected\");\n\ttt_uint_op(evbuffer_get_length(evb), ==, 0);\n",
                      "markdown": "`\ttt_line_eq(\"complex silly newline\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\tif (!cp || sz != 5 || memcmp(cp, \"more\\0\\0\", 6))\n\t\ttt_abort_msg(\"Not as expected\");\n\ttt_uint_op(evbuffer_get_length(evb), ==, 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 1455,
                  "endLine": 1455,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ts = \"complex silly newline\\r\\n\\n\\r\\n\\n\\rmore\\0\\n\";\n\tevbuffer_add(evb, s, strlen(s)+2);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_line_eq(\"complex silly newline\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                    "rendered": {
                      "text": "\ts = \"complex silly newline\\r\\n\\n\\r\\n\\n\\rmore\\0\\n\";\n\tevbuffer_add(evb, s, strlen(s)+2);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_line_eq(\"complex silly newline\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n",
                      "markdown": "`\ts = \"complex silly newline\\r\\n\\n\\r\\n\\n\\rmore\\0\\n\";\n\tevbuffer_add(evb, s, strlen(s)+2);\n\tevbuffer_validate(evb);\n\tcp = evbuffer_readln(evb, &sz, EVBUFFER_EOL_ANY);\n\ttt_line_eq(\"complex silly newline\");\n\tfree(cp);\n\tevbuffer_validate(evb);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 685,
                  "endLine": 685,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tfor (i=521; i<921; ++i)\n\t\ttt_int_op(cp[i], ==, 'W');\n\n\tcp = v[1].iov_base;\n\tfor (i=0; i<60; ++i)\n\t\ttt_int_op(cp[i], ==, 'x');\n\n",
                    "rendered": {
                      "text": "\tfor (i=521; i<921; ++i)\n\t\ttt_int_op(cp[i], ==, 'W');\n\n\tcp = v[1].iov_base;\n\tfor (i=0; i<60; ++i)\n\t\ttt_int_op(cp[i], ==, 'x');\n\n",
                      "markdown": "`\tfor (i=521; i<921; ++i)\n\t\ttt_int_op(cp[i], ==, 'W');\n\n\tcp = v[1].iov_base;\n\tfor (i=0; i<60; ++i)\n\t\ttt_int_op(cp[i], ==, 'x');\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 675,
                  "endLine": 675,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ttt_int_op(v[0].iov_len, ==, 921);\n\ttt_int_op(v[1].iov_len, ==, 60);\n\n\tcp = v[0].iov_base;\n\tfor (i=0; i<512; ++i)\n\t\ttt_int_op(cp[i], ==, 'X');\n\tfor (i=512; i<520; ++i)\n",
                    "rendered": {
                      "text": "\ttt_int_op(v[0].iov_len, ==, 921);\n\ttt_int_op(v[1].iov_len, ==, 60);\n\n\tcp = v[0].iov_base;\n\tfor (i=0; i<512; ++i)\n\t\ttt_int_op(cp[i], ==, 'X');\n\tfor (i=512; i<520; ++i)\n",
                      "markdown": "`\ttt_int_op(v[0].iov_len, ==, 921);\n\ttt_int_op(v[1].iov_len, ==, 60);\n\n\tcp = v[0].iov_base;\n\tfor (i=0; i<512; ++i)\n\t\ttt_int_op(cp[i], ==, 'X');\n\tfor (i=512; i<520; ++i)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_buffer.c"
                },
                "region": {
                  "startLine": 614,
                  "endLine": 614,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ttt_assert(v[0].iov_base != NULL);\n\ttt_int_op(v[0].iov_len, >=, 1024);\n\tmemset(v[0].iov_base, 'X', 512);\n\tcp = v[0].iov_base;\n\tremaining = v[0].iov_len - 512;\n\tv[0].iov_len = 512;\n\tevbuffer_validate(buf);\n",
                    "rendered": {
                      "text": "\ttt_assert(v[0].iov_base != NULL);\n\ttt_int_op(v[0].iov_len, >=, 1024);\n\tmemset(v[0].iov_base, 'X', 512);\n\tcp = v[0].iov_base;\n\tremaining = v[0].iov_len - 512;\n\tv[0].iov_len = 512;\n\tevbuffer_validate(buf);\n",
                      "markdown": "`\ttt_assert(v[0].iov_base != NULL);\n\ttt_int_op(v[0].iov_len, >=, 1024);\n\tmemset(v[0].iov_base, 'X', 512);\n\tcp = v[0].iov_base;\n\tremaining = v[0].iov_len - 512;\n\tv[0].iov_len = 512;\n\tevbuffer_validate(buf);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 1193,
                  "startColumn": 1,
                  "endLine": 1193,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tsin6 = (struct sockaddr_in6*)ai->ai_addr;\n\t\ttt_int_op(sin6->sin6_port, ==, htons(80));\n\n\t\tcp = evutil_inet_ntop(AF_INET6, &sin6->sin6_addr, buf,\n\t\t    sizeof(buf));\n\t\tTT_BLATHER((\"ipv6.google.com resolved to %s\",\n\t\t\tcp?cp:\"<unwriteable>\"));\n",
                    "rendered": {
                      "text": "\t\tsin6 = (struct sockaddr_in6*)ai->ai_addr;\n\t\ttt_int_op(sin6->sin6_port, ==, htons(80));\n\n\t\tcp = evutil_inet_ntop(AF_INET6, &sin6->sin6_addr, buf,\n\t\t    sizeof(buf));\n\t\tTT_BLATHER((\"ipv6.google.com resolved to %s\",\n\t\t\tcp?cp:\"<unwriteable>\"));\n",
                      "markdown": "`\t\tsin6 = (struct sockaddr_in6*)ai->ai_addr;\n\t\ttt_int_op(sin6->sin6_port, ==, htons(80));\n\n\t\tcp = evutil_inet_ntop(AF_INET6, &sin6->sin6_addr, buf,\n\t\t    sizeof(buf));\n\t\tTT_BLATHER((\"ipv6.google.com resolved to %s\",\n\t\t\tcp?cp:\"<unwriteable>\"));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 1175,
                  "startColumn": 1,
                  "endLine": 1175,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\ttt_int_op(sin->sin_port, ==, htons(80));\n\t\ttt_int_op(sin->sin_addr.s_addr, !=, 0xffffffff);\n\n\t\tcp = evutil_inet_ntop(AF_INET, &sin->sin_addr, buf, sizeof(buf));\n\t\tTT_BLATHER((\"www.google.com resolved to %s\",\n\t\t\tcp?cp:\"<unwriteable>\"));\n\t\tevutil_freeaddrinfo(ai);\n",
                    "rendered": {
                      "text": "\t\ttt_int_op(sin->sin_port, ==, htons(80));\n\t\ttt_int_op(sin->sin_addr.s_addr, !=, 0xffffffff);\n\n\t\tcp = evutil_inet_ntop(AF_INET, &sin->sin_addr, buf, sizeof(buf));\n\t\tTT_BLATHER((\"www.google.com resolved to %s\",\n\t\t\tcp?cp:\"<unwriteable>\"));\n\t\tevutil_freeaddrinfo(ai);\n",
                      "markdown": "`\t\ttt_int_op(sin->sin_port, ==, htons(80));\n\t\ttt_int_op(sin->sin_addr.s_addr, !=, 0xffffffff);\n\n\t\tcp = evutil_inet_ntop(AF_INET, &sin->sin_addr, buf, sizeof(buf));\n\t\tTT_BLATHER((\"www.google.com resolved to %s\",\n\t\t\tcp?cp:\"<unwriteable>\"));\n\t\tevutil_freeaddrinfo(ai);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 31,
                  "endLine": 1131,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\thints.ai_socktype = SOCK_STREAM;\n\tr = evutil_getaddrinfo(\"1.2.3.4\", \"http\", &hints, &ai);\n\tif (r!=0) {\n\t\tTT_DECLARE(\"SKIP\", (\"Symbolic service names seem broken.\"));\n\t} else {\n\t\ttt_assert(ai);\n\t\ttest_ai_eq(ai, \"1.2.3.4:80\", SOCK_STREAM, IPPROTO_TCP);\n",
                    "rendered": {
                      "text": "\thints.ai_socktype = SOCK_STREAM;\n\tr = evutil_getaddrinfo(\"1.2.3.4\", \"http\", &hints, &ai);\n\tif (r!=0) {\n\t\tTT_DECLARE(\"SKIP\", (\"Symbolic service names seem broken.\"));\n\t} else {\n\t\ttt_assert(ai);\n\t\ttest_ai_eq(ai, \"1.2.3.4:80\", SOCK_STREAM, IPPROTO_TCP);\n",
                      "markdown": "`\thints.ai_socktype = SOCK_STREAM;\n\tr = evutil_getaddrinfo(\"1.2.3.4\", \"http\", &hints, &ai);\n\tif (r!=0) {\n\t\tTT_DECLARE(\"SKIP\", (\"Symbolic service names seem broken.\"));\n\t} else {\n\t\ttt_assert(ai);\n\t\ttest_ai_eq(ai, \"1.2.3.4:80\", SOCK_STREAM, IPPROTO_TCP);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 746,
                  "endLine": 746,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\ttt_int_op(evutil_offsetof(struct example_struct, b), ==, sizeof(char*));\n\n\tcp = &es1.b;\n\ttt_ptr_op(EVUTIL_UPCAST(cp, struct example_struct, b), ==, &es1);\n\nend:\n",
                    "rendered": {
                      "text": "\n\ttt_int_op(evutil_offsetof(struct example_struct, b), ==, sizeof(char*));\n\n\tcp = &es1.b;\n\ttt_ptr_op(EVUTIL_UPCAST(cp, struct example_struct, b), ==, &es1);\n\nend:\n",
                      "markdown": "`\n\ttt_int_op(evutil_offsetof(struct example_struct, b), ==, sizeof(char*));\n\n\tcp = &es1.b;\n\ttt_ptr_op(EVUTIL_UPCAST(cp, struct example_struct, b), ==, &es1);\n\nend:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 4,
                  "endLine": 510,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#define TEST_TRIM(s, result) \\\n\tdo {\t\t\t\t\t\t\\\n\t    if (cp) mm_free(cp);\t\t\t\\\n\t    cp = mm_strdup(s);\t\t\t\t\\\n\t    tt_assert(cp);\t\t\t\t\\\n\t    evutil_rtrim_lws_(cp);\t\t\t\\\n\t    tt_str_op(cp, ==, result);\t\t\t\\\n",
                    "rendered": {
                      "text": "#define TEST_TRIM(s, result) \\\n\tdo {\t\t\t\t\t\t\\\n\t    if (cp) mm_free(cp);\t\t\t\\\n\t    cp = mm_strdup(s);\t\t\t\t\\\n\t    tt_assert(cp);\t\t\t\t\\\n\t    evutil_rtrim_lws_(cp);\t\t\t\\\n\t    tt_str_op(cp, ==, result);\t\t\t\\\n",
                      "markdown": "`#define TEST_TRIM(s, result) \\\n\tdo {\t\t\t\t\t\t\\\n\t    if (cp) mm_free(cp);\t\t\t\\\n\t    cp = mm_strdup(s);\t\t\t\t\\\n\t    tt_assert(cp);\t\t\t\t\\\n\t    evutil_rtrim_lws_(cp);\t\t\t\\\n\t    tt_str_op(cp, ==, result);\t\t\t\\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 380,
                  "endLine": 380,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\ttt_str_op(cp,==,\"[ff00::8010]:999\");\n\n\tss.ss_family=99;\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"<addr with socktype 99>\");\n",
                    "rendered": {
                      "text": "\ttt_str_op(cp,==,\"[ff00::8010]:999\");\n\n\tss.ss_family=99;\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"<addr with socktype 99>\");\n",
                      "markdown": "`\ttt_str_op(cp,==,\"[ff00::8010]:999\");\n\n\tss.ss_family=99;\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"<addr with socktype 99>\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 374,
                  "endLine": 374,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tr = evutil_parse_sockaddr_port(\"[ff00::8010]:999\",\n\t    (struct sockaddr*)&ss, &len);\n\ttt_int_op(r,==,0);\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"[ff00::8010]:999\");\n",
                    "rendered": {
                      "text": "\tr = evutil_parse_sockaddr_port(\"[ff00::8010]:999\",\n\t    (struct sockaddr*)&ss, &len);\n\ttt_int_op(r,==,0);\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"[ff00::8010]:999\");\n",
                      "markdown": "`\tr = evutil_parse_sockaddr_port(\"[ff00::8010]:999\",\n\t    (struct sockaddr*)&ss, &len);\n\ttt_int_op(r,==,0);\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"[ff00::8010]:999\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_util.c"
                },
                "region": {
                  "startLine": 365,
                  "endLine": 365,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tr = evutil_parse_sockaddr_port(\"192.168.1.1:80\",\n\t    (struct sockaddr*)&ss, &len);\n\ttt_int_op(r,==,0);\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"192.168.1.1:80\");\n",
                    "rendered": {
                      "text": "\tr = evutil_parse_sockaddr_port(\"192.168.1.1:80\",\n\t    (struct sockaddr*)&ss, &len);\n\ttt_int_op(r,==,0);\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"192.168.1.1:80\");\n",
                      "markdown": "`\tr = evutil_parse_sockaddr_port(\"192.168.1.1:80\",\n\t    (struct sockaddr*)&ss, &len);\n\ttt_int_op(r,==,0);\n\tcp = evutil_format_sockaddr_port_(\n\t\t(struct sockaddr*)&ss, cbuf, sizeof(cbuf));\n\ttt_ptr_op(cp,==,cbuf);\n\ttt_str_op(cp,==,\"192.168.1.1:80\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-kq-collision.c"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 14,
                  "endLine": 45,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#include <event2/thread.h>\n#include \"event-internal.h\"\n\nstruct timeval timeout = {3, 0};\nchar data[] = \"Hello, World!\";\nint read_called = 0;\n\n",
                    "rendered": {
                      "text": "#include <event2/thread.h>\n#include \"event-internal.h\"\n\nstruct timeval timeout = {3, 0};\nchar data[] = \"Hello, World!\";\nint read_called = 0;\n\n",
                      "markdown": "`#include <event2/thread.h>\n#include \"event-internal.h\"\n\nstruct timeval timeout = {3, 0};\nchar data[] = \"Hello, World!\";\nint read_called = 0;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_ws.c"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 34,
                  "endLine": 279,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t\t\t\ttest_ok--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (len == 5 && !memcmp(msg, \"\\xde\\xad\\xbe\\xef\\x55\", 5)) {\n\t\t\t\t\tsend_ws_msg(\n\t\t\t\t\t\toutput, \"Close\", strlen(\"Close\"), WS_TEXT | WS_FIN);\n\t\t\t\t\ttest_ok++;\n",
                    "rendered": {
                      "text": "\t\t\t\t\ttest_ok--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (len == 5 && !memcmp(msg, \"\\xde\\xad\\xbe\\xef\\x55\", 5)) {\n\t\t\t\t\tsend_ws_msg(\n\t\t\t\t\t\toutput, \"Close\", strlen(\"Close\"), WS_TEXT | WS_FIN);\n\t\t\t\t\ttest_ok++;\n",
                      "markdown": "`\t\t\t\t\ttest_ok--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (len == 5 && !memcmp(msg, \"\\xde\\xad\\xbe\\xef\\x55\", 5)) {\n\t\t\t\t\tsend_ws_msg(\n\t\t\t\t\t\toutput, \"Close\", strlen(\"Close\"), WS_TEXT | WS_FIN);\n\t\t\t\t\ttest_ok++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_ws.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 26,
                  "endLine": 97,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t} else if (!strcmp(msg, \"Client: hello\")) {\n\t\ttest_ok++;\n\t} else if (!strcmp(msg, \"Bye\")) {\n\t\tevws_send_binary(evws, \"\\xde\\xad\\xbe\\xef\\x55\", 5);\n\t\ttest_ok++;\n\t} else if (!strcmp(msg, \"Close\")) {\n\t\tevws_close(evws, 0);\n",
                    "rendered": {
                      "text": "\t} else if (!strcmp(msg, \"Client: hello\")) {\n\t\ttest_ok++;\n\t} else if (!strcmp(msg, \"Bye\")) {\n\t\tevws_send_binary(evws, \"\\xde\\xad\\xbe\\xef\\x55\", 5);\n\t\ttest_ok++;\n\t} else if (!strcmp(msg, \"Close\")) {\n\t\tevws_close(evws, 0);\n",
                      "markdown": "`\t} else if (!strcmp(msg, \"Client: hello\")) {\n\t\ttest_ok++;\n\t} else if (!strcmp(msg, \"Bye\")) {\n\t\tevws_send_binary(evws, \"\\xde\\xad\\xbe\\xef\\x55\", 5);\n\t\ttest_ok++;\n\t} else if (!strcmp(msg, \"Close\")) {\n\t\tevws_close(evws, 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-dumpevents.c"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 45,
                  "endLine": 166,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n\tputs(\"Active:\");\n\tprintf(\"  %p [fd  -1, priority=0] Read active\\n\", ev[10]);\n\tprintf(\"  %p [fd  -1, priority=0] Read Write Timeout active\\n\", ev[11]);\n\tprintf(\"  %p [fd  %ld, priority=0] Read active\\n\", ev[1], (long)pair1[1]);\n\n\tputs(\"======received\");\n",
                    "rendered": {
                      "text": "\n\tputs(\"Active:\");\n\tprintf(\"  %p [fd  -1, priority=0] Read active\\n\", ev[10]);\n\tprintf(\"  %p [fd  -1, priority=0] Read Write Timeout active\\n\", ev[11]);\n\tprintf(\"  %p [fd  %ld, priority=0] Read active\\n\", ev[1], (long)pair1[1]);\n\n\tputs(\"======received\");\n",
                      "markdown": "`\n\tputs(\"Active:\");\n\tprintf(\"  %p [fd  -1, priority=0] Read active\\n\", ev[10]);\n\tprintf(\"  %p [fd  -1, priority=0] Read Write Timeout active\\n\", ev[11]);\n\tprintf(\"  %p [fd  %ld, priority=0] Read active\\n\", ev[1], (long)pair1[1]);\n\n\tputs(\"======received\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/bench.c"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 44,
                  "endLine": 215,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t} else\n\t\tbase = event_base_new();\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n#ifdef USE_PIPES\n\t\tif (pipe(cp) == -1) {\n#else\n",
                    "rendered": {
                      "text": "\t} else\n\t\tbase = event_base_new();\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n#ifdef USE_PIPES\n\t\tif (pipe(cp) == -1) {\n#else\n",
                      "markdown": "`\t} else\n\t\tbase = event_base_new();\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n#ifdef USE_PIPES\n\t\tif (pipe(cp) == -1) {\n#else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/bench.c"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 44,
                  "endLine": 106,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tlong i;\n\tstatic struct timeval ts, te;\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tif (event_initialized(&events[i]))\n\t\t\tevent_del(&events[i]);\n\t\tevent_assign(&events[i], base, cp[0], EV_READ | EV_PERSIST, read_cb, (void *)(ev_intptr_t) i);\n",
                    "rendered": {
                      "text": "\tlong i;\n\tstatic struct timeval ts, te;\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tif (event_initialized(&events[i]))\n\t\t\tevent_del(&events[i]);\n\t\tevent_assign(&events[i], base, cp[0], EV_READ | EV_PERSIST, read_cb, (void *)(ev_intptr_t) i);\n",
                      "markdown": "`\tlong i;\n\tstatic struct timeval ts, te;\n\n\tfor (cp = pipes, i = 0; i < num_pipes; i++, cp += 2) {\n\t\tif (event_initialized(&events[i]))\n\t\t\tevent_del(&events[i]);\n\t\tevent_assign(&events[i], base, cp[0], EV_READ | EV_PERSIST, read_cb, (void *)(ev_intptr_t) i);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_ssl.c"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 9,
                  "endLine": 626,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tSSL *ssl = SSL_new(get_ssl_ctx(SSL_IS_SERVER));\n\n\tSSL_use_certificate(ssl, the_cert);\n\tSSL_use_PrivateKey(ssl, the_key);\n\n\tbev = bufferevent_ssl_socket_new(\n\t\tbase, fd, ssl, BUFFEREVENT_SSL_ACCEPTING, ctx->flags);\n",
                    "rendered": {
                      "text": "\tSSL *ssl = SSL_new(get_ssl_ctx(SSL_IS_SERVER));\n\n\tSSL_use_certificate(ssl, the_cert);\n\tSSL_use_PrivateKey(ssl, the_key);\n\n\tbev = bufferevent_ssl_socket_new(\n\t\tbase, fd, ssl, BUFFEREVENT_SSL_ACCEPTING, ctx->flags);\n",
                      "markdown": "`\tSSL *ssl = SSL_new(get_ssl_ctx(SSL_IS_SERVER));\n\n\tSSL_use_certificate(ssl, the_cert);\n\tSSL_use_PrivateKey(ssl, the_key);\n\n\tbev = bufferevent_ssl_socket_new(\n\t\tbase, fd, ssl, BUFFEREVENT_SSL_ACCEPTING, ctx->flags);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_ssl.c"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 9,
                  "endLine": 459,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\ttype = (enum regress_openssl_type)data->setup_data;\n\n\tSSL_use_certificate(ssl, the_cert);\n\tSSL_use_PrivateKey(ssl, the_key);\n\n\tbev = bufferevent_ssl_socket_new(\n\t\tdata->base, fd, ssl, BUFFEREVENT_SSL_ACCEPTING,\n",
                    "rendered": {
                      "text": "\ttype = (enum regress_openssl_type)data->setup_data;\n\n\tSSL_use_certificate(ssl, the_cert);\n\tSSL_use_PrivateKey(ssl, the_key);\n\n\tbev = bufferevent_ssl_socket_new(\n\t\tdata->base, fd, ssl, BUFFEREVENT_SSL_ACCEPTING,\n",
                      "markdown": "`\ttype = (enum regress_openssl_type)data->setup_data;\n\n\tSSL_use_certificate(ssl, the_cert);\n\tSSL_use_PrivateKey(ssl, the_key);\n\n\tbev = bufferevent_ssl_socket_new(\n\t\tdata->base, fd, ssl, BUFFEREVENT_SSL_ACCEPTING,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/regress_ssl.c"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 9,
                  "endLine": 355,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tssl2 = SSL_new(get_ssl_ctx(SSL_IS_SERVER));\n\n\tSSL_use_certificate(ssl2, the_cert);\n\tSSL_use_PrivateKey(ssl2, the_key);\n\n\tif (!(type & REGRESS_OPENSSL_OPEN))\n\t\tflags |= BEV_OPT_CLOSE_ON_FREE;\n",
                    "rendered": {
                      "text": "\tssl2 = SSL_new(get_ssl_ctx(SSL_IS_SERVER));\n\n\tSSL_use_certificate(ssl2, the_cert);\n\tSSL_use_PrivateKey(ssl2, the_key);\n\n\tif (!(type & REGRESS_OPENSSL_OPEN))\n\t\tflags |= BEV_OPT_CLOSE_ON_FREE;\n",
                      "markdown": "`\tssl2 = SSL_new(get_ssl_ctx(SSL_IS_SERVER));\n\n\tSSL_use_certificate(ssl2, the_cert);\n\tSSL_use_PrivateKey(ssl2, the_key);\n\n\tif (!(type & REGRESS_OPENSSL_OPEN))\n\t\tflags |= BEV_OPT_CLOSE_ON_FREE;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/test-closed.c"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 14,
                  "endLine": 53,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#include <event.h>\n#include <evutil.h>\n\nstruct timeval timeout = {3, 0};\n\nstatic void\nclosed_cb(evutil_socket_t fd, short event, void *arg)\n",
                    "rendered": {
                      "text": "#include <event.h>\n#include <evutil.h>\n\nstruct timeval timeout = {3, 0};\n\nstatic void\nclosed_cb(evutil_socket_t fd, short event, void *arg)\n",
                      "markdown": "`#include <event.h>\n#include <evutil.h>\n\nstruct timeval timeout = {3, 0};\n\nstatic void\nclosed_cb(evutil_socket_t fd, short event, void *arg)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/test/tinytest_demo.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 40,
                  "endLine": 97,
                  "endColumn": 66,
                  "snippet": {
                    "text": "   you have a bunch of tests that all need a similar environment, and you\n   want to reconstruct that environment freshly for each one. */\n\n/* First you declare a type to hold the environment info, and functions to\n   set it up and tear it down. */\nstruct data_buffer {\n\t/* We're just going to have couple of character buffer.\t Using\n",
                    "rendered": {
                      "text": "   you have a bunch of tests that all need a similar environment, and you\n   want to reconstruct that environment freshly for each one. */\n\n/* First you declare a type to hold the environment info, and functions to\n   set it up and tear it down. */\nstruct data_buffer {\n\t/* We're just going to have couple of character buffer.\t Using\n",
                      "markdown": "`   you have a bunch of tests that all need a similar environment, and you\n   want to reconstruct that environment freshly for each one. */\n\n/* First you declare a type to hold the environment info, and functions to\n   set it up and tear it down. */\nstruct data_buffer {\n\t/* We're just going to have couple of character buffer.\t Using\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 8,
                  "endLine": 229,
                  "endColumn": 13,
                  "snippet": {
                    "text": "```\n__More variables can be found by running `cmake -LAH <sourcedir_path>`__\n\n[Back to top &uarr;](#jump-to)\n",
                    "rendered": {
                      "text": "```\n__More variables can be found by running `cmake -LAH <sourcedir_path>`__\n\n[Back to top &uarr;](#jump-to)\n",
                      "markdown": "````\n__More variables can be found by running `cmake -LAH <sourcedir_path>`__\n\n[Back to top &uarr;](#jump-to)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 53,
                  "endLine": 180,
                  "endColumn": 62,
                  "snippet": {
                    "text": "# Define if Libevent should not allow replacing the mm functions\nEVENT__DISABLE_MM_REPLACEMENT:BOOL=OFF\n\n# Define if Libevent should build without support for OpenSSL encryption\nEVENT__DISABLE_OPENSSL:BOOL=OFF\n\n# Disable the regress tests\n",
                    "rendered": {
                      "text": "# Define if Libevent should not allow replacing the mm functions\nEVENT__DISABLE_MM_REPLACEMENT:BOOL=OFF\n\n# Define if Libevent should build without support for OpenSSL encryption\nEVENT__DISABLE_OPENSSL:BOOL=OFF\n\n# Disable the regress tests\n",
                      "markdown": "`# Define if Libevent should not allow replacing the mm functions\nEVENT__DISABLE_MM_REPLACEMENT:BOOL=OFF\n\n# Define if Libevent should build without support for OpenSSL encryption\nEVENT__DISABLE_OPENSSL:BOOL=OFF\n\n# Disable the regress tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 133,
                  "endLine": 148,
                  "endColumn": 139,
                  "snippet": {
                    "text": "cmake -G \"Visual Studio 10\" ..   # Or use any generator you want to use. Run cmake --help for a list\ncmake --build . --config Release # Or \"start libevent.sln\" and build with menu in Visual Studio.\n```\nIn the above, the \"..\" refers to the dir containing the Libevent source code. You can build multiple versions (with different compile time settings) from the same source tree by creating other build directories.\n\nIt is highly recommended to build \"out of source\" when using CMake instead of \"in source\" like the normal behaviour of autoconf for this reason.\n\n",
                    "rendered": {
                      "text": "cmake -G \"Visual Studio 10\" ..   # Or use any generator you want to use. Run cmake --help for a list\ncmake --build . --config Release # Or \"start libevent.sln\" and build with menu in Visual Studio.\n```\nIn the above, the \"..\" refers to the dir containing the Libevent source code. You can build multiple versions (with different compile time settings) from the same source tree by creating other build directories.\n\nIt is highly recommended to build \"out of source\" when using CMake instead of \"in source\" like the normal behaviour of autoconf for this reason.\n\n",
                      "markdown": "`cmake -G \"Visual Studio 10\" ..   # Or use any generator you want to use. Run cmake --help for a list\ncmake --build . --config Release # Or \"start libevent.sln\" and build with menu in Visual Studio.\n```\nIn the above, the \"..\" refers to the dir containing the Libevent source code. You can build multiple versions (with different compile time settings) from the same source tree by creating other build directories.\n\nIt is highly recommended to build \"out of source\" when using CMake instead of \"in source\" like the normal behaviour of autoconf for this reason.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 46,
                  "endLine": 136,
                  "endColumn": 55,
                  "snippet": {
                    "text": " --disable-malloc-replacement\n                           Don't let applications replace our memory\n                           management functions.\n --disable-openssl         Disable support for OpenSSL encryption.\n --disable-thread-support  Don't support multithreaded environments.\n --enable-doxygen-doc      Build doxygen documentation\n```\n",
                    "rendered": {
                      "text": " --disable-malloc-replacement\n                           Don't let applications replace our memory\n                           management functions.\n --disable-openssl         Disable support for OpenSSL encryption.\n --disable-thread-support  Don't support multithreaded environments.\n --enable-doxygen-doc      Build doxygen documentation\n```\n",
                      "markdown": "` --disable-malloc-replacement\n                           Don't let applications replace our memory\n                           management functions.\n --disable-openssl         Disable support for OpenSSL encryption.\n --disable-thread-support  Don't support multithreaded environments.\n --enable-doxygen-doc      Build doxygen documentation\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 13,
                  "endLine": 130,
                  "endColumn": 21,
                  "snippet": {
                    "text": " --prefix                  Install all files relative to this directory.\n```\n\nThe configure script also supports the following flags:\n```sh\n --enable-gcc-warnings     Enable extra compiler checking with GCC.\n --disable-malloc-replacement\n",
                    "rendered": {
                      "text": " --prefix                  Install all files relative to this directory.\n```\n\nThe configure script also supports the following flags:\n```sh\n --enable-gcc-warnings     Enable extra compiler checking with GCC.\n --disable-malloc-replacement\n",
                      "markdown": "` --prefix                  Install all files relative to this directory.\n```\n\nThe configure script also supports the following flags:\n```sh\n --enable-gcc-warnings     Enable extra compiler checking with GCC.\n --disable-malloc-replacement\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 47,
                  "endLine": 104,
                  "endColumn": 52,
                  "snippet": {
                    "text": "make\n```\n\n**Note: If you had downloaded libevent from the Git repository, then you have to run `./autogen.sh` first!**\n\nYou can run the regression tests by running\n```sh\n",
                    "rendered": {
                      "text": "make\n```\n\n**Note: If you had downloaded libevent from the Git repository, then you have to run `./autogen.sh` first!**\n\nYou can run the regression tests by running\n```sh\n",
                      "markdown": "`make\n```\n\n**Note: If you had downloaded libevent from the Git repository, then you have to run `./autogen.sh` first!**\n\nYou can run the regression tests by running\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "endLine": 76,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nInstall Visual Studio which is the true compiler that will be used.\n\nInstall OpenSSL to support for encryption, then add the installation path into the PATH variable in the Environment Variables,\nor set OPENSSL_ROOT_DIR in command prompt:\n\n```sh\n",
                    "rendered": {
                      "text": "\nInstall Visual Studio which is the true compiler that will be used.\n\nInstall OpenSSL to support for encryption, then add the installation path into the PATH variable in the Environment Variables,\nor set OPENSSL_ROOT_DIR in command prompt:\n\n```sh\n",
                      "markdown": "`\nInstall Visual Studio which is the true compiler that will be used.\n\nInstall OpenSSL to support for encryption, then add the installation path into the PATH variable in the Environment Variables,\nor set OPENSSL_ROOT_DIR in command prompt:\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 12,
                  "endLine": 64,
                  "endColumn": 21,
                  "snippet": {
                    "text": "the difference is installation of openssl and zlib:\n\n```sh\nbrew install openssl zlib\n```\n\n### Windows\n",
                    "rendered": {
                      "text": "the difference is installation of openssl and zlib:\n\n```sh\nbrew install openssl zlib\n```\n\n### Windows\n",
                      "markdown": "`the difference is installation of openssl and zlib:\n\n```sh\nbrew install openssl zlib\n```\n\n### Windows\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 33,
                  "endLine": 61,
                  "endColumn": 42,
                  "snippet": {
                    "text": "On MacOS you can use `brew` to manage packages.\n\nThe installation process on MacOS is roughly the same as on Linux,\nthe difference is installation of openssl and zlib:\n\n```sh\nbrew install openssl zlib\n",
                    "rendered": {
                      "text": "On MacOS you can use `brew` to manage packages.\n\nThe installation process on MacOS is roughly the same as on Linux,\nthe difference is installation of openssl and zlib:\n\n```sh\nbrew install openssl zlib\n",
                      "markdown": "`On MacOS you can use `brew` to manage packages.\n\nThe installation process on MacOS is roughly the same as on Linux,\nthe difference is installation of openssl and zlib:\n\n```sh\nbrew install openssl zlib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 4,
                  "endLine": 53,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nFinally, a python interpreter should be installed if you want to run regression tests:\n```sh\nsudo apt-get install python3\n```\n\n### MacOS\n",
                    "rendered": {
                      "text": "\nFinally, a python interpreter should be installed if you want to run regression tests:\n```sh\nsudo apt-get install python3\n```\n\n### MacOS\n",
                      "markdown": "`\nFinally, a python interpreter should be installed if you want to run regression tests:\n```sh\nsudo apt-get install python3\n```\n\n### MacOS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 4,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "To run the tests, you should install zlib:\n\n```sh\nsudo apt-get install zlib1g-dev\n```\n\nFinally, a python interpreter should be installed if you want to run regression tests:\n",
                    "rendered": {
                      "text": "To run the tests, you should install zlib:\n\n```sh\nsudo apt-get install zlib1g-dev\n```\n\nFinally, a python interpreter should be installed if you want to run regression tests:\n",
                      "markdown": "`To run the tests, you should install zlib:\n\n```sh\nsudo apt-get install zlib1g-dev\n```\n\nFinally, a python interpreter should be installed if you want to run regression tests:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 13,
                  "snippet": {
                    "text": "install one of this using:\n\n```sh\nsudo apt-get install libssl-dev libmbedtls-dev\n```\n\nTo support multithreaded environments, libpthread is a must, and it already exists in the system.\n",
                    "rendered": {
                      "text": "install one of this using:\n\n```sh\nsudo apt-get install libssl-dev libmbedtls-dev\n```\n\nTo support multithreaded environments, libpthread is a must, and it already exists in the system.\n",
                      "markdown": "`install one of this using:\n\n```sh\nsudo apt-get install libssl-dev libmbedtls-dev\n```\n\nTo support multithreaded environments, libpthread is a must, and it already exists in the system.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 39,
                  "endLine": 36,
                  "endColumn": 48,
                  "snippet": {
                    "text": "sudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\ninstall one of this using:\n\n```sh\n",
                    "rendered": {
                      "text": "sudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\ninstall one of this using:\n\n```sh\n",
                      "markdown": "`sudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\ninstall one of this using:\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 28,
                  "endLine": 34,
                  "snippet": {
                    "text": "Install them if needed:\n\n```sh\nsudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\ninstall one of this using:\n",
                    "rendered": {
                      "text": "Install them if needed:\n\n```sh\nsudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\ninstall one of this using:\n",
                      "markdown": "`Install them if needed:\n\n```sh\nsudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\ninstall one of this using:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 4,
                  "endLine": 33,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Install them if needed:\n\n```sh\nsudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\n",
                    "rendered": {
                      "text": "Install them if needed:\n\n```sh\nsudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\n",
                      "markdown": "`Install them if needed:\n\n```sh\nsudo apt-get install doxygen git\n```\n\nlibevent has encryption layer, you need OpenSSL or MbedTLS for it, you can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 45,
                  "endLine": 29,
                  "endColumn": 4,
                  "snippet": {
                    "text": "sudo apt-get install automake autoconf libtool pkg-config\n```\n\nDoxygen is used for generating documentation.\nGit is used to fetch the package version.\nInstall them if needed:\n\n```sh\n",
                    "rendered": {
                      "text": "sudo apt-get install automake autoconf libtool pkg-config\n```\n\nDoxygen is used for generating documentation.\nGit is used to fetch the package version.\nInstall them if needed:\n\n```sh\n",
                      "markdown": "`sudo apt-get install automake autoconf libtool pkg-config\n```\n\nDoxygen is used for generating documentation.\nGit is used to fetch the package version.\nInstall them if needed:\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 4,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "or using Autotools (deprecated):\n\n```sh\nsudo apt-get install automake autoconf libtool pkg-config\n```\n\nDoxygen is used for generating documentation.\n",
                    "rendered": {
                      "text": "or using Autotools (deprecated):\n\n```sh\nsudo apt-get install automake autoconf libtool pkg-config\n```\n\nDoxygen is used for generating documentation.\n",
                      "markdown": "`or using Autotools (deprecated):\n\n```sh\nsudo apt-get install automake autoconf libtool pkg-config\n```\n\nDoxygen is used for generating documentation.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/Documentation/Building.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Install build tools using your preferred package manager. For CMake:\n\n```sh\nsudo apt-get install cmake\n```\n\nor using Autotools (deprecated):\n",
                    "rendered": {
                      "text": "Install build tools using your preferred package manager. For CMake:\n\n```sh\nsudo apt-get install cmake\n```\n\nor using Autotools (deprecated):\n",
                      "markdown": "`Install build tools using your preferred package manager. For CMake:\n\n```sh\nsudo apt-get install cmake\n```\n\nor using Autotools (deprecated):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil_time.c"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 24,
                  "endLine": 342,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\n\tif (CLOCK_MONOTONIC < 0) {\n\t\tevent_errx(1,\"I didn't expect CLOCK_MONOTONIC to be < 0\");\n\t}\n\n\tbase->monotonic_clock = -1;\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (CLOCK_MONOTONIC < 0) {\n\t\tevent_errx(1,\"I didn't expect CLOCK_MONOTONIC to be < 0\");\n\t}\n\n\tbase->monotonic_clock = -1;\n",
                      "markdown": "`\t}\n\n\tif (CLOCK_MONOTONIC < 0) {\n\t\tevent_errx(1,\"I didn't expect CLOCK_MONOTONIC to be < 0\");\n\t}\n\n\tbase->monotonic_clock = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil_time.c"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 24,
                  "endLine": 327,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t * negative (as far as I know). This check and the one below\n\t\t * make sure that it's safe for us to use -1 as an \"unset\"\n\t\t * value. */\n\t\tevent_errx(1,\"I didn't expect CLOCK_MONOTONIC_COARSE to be < 0\");\n\t}\n\tif (! precise && ! fallback) {\n\t\tif (clock_gettime(CLOCK_MONOTONIC_COARSE, &ts) == 0) {\n",
                    "rendered": {
                      "text": "\t\t * negative (as far as I know). This check and the one below\n\t\t * make sure that it's safe for us to use -1 as an \"unset\"\n\t\t * value. */\n\t\tevent_errx(1,\"I didn't expect CLOCK_MONOTONIC_COARSE to be < 0\");\n\t}\n\tif (! precise && ! fallback) {\n\t\tif (clock_gettime(CLOCK_MONOTONIC_COARSE, &ts) == 0) {\n",
                      "markdown": "`\t\t * negative (as far as I know). This check and the one below\n\t\t * make sure that it's safe for us to use -1 as an \"unset\"\n\t\t * value. */\n\t\tevent_errx(1,\"I didn't expect CLOCK_MONOTONIC_COARSE to be < 0\");\n\t}\n\tif (! precise && ! fallback) {\n\t\tif (clock_gettime(CLOCK_MONOTONIC_COARSE, &ts) == 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 3,
                  "endLine": 799,
                  "endColumn": 35,
                  "snippet": {
                    "text": "{\n\tstatic const char ZEROES[] =\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\n\tconst unsigned char *addr = (const unsigned char *)in->s6_addr;\n\treturn !memcmp(addr, ZEROES, 8) ||\n",
                    "rendered": {
                      "text": "{\n\tstatic const char ZEROES[] =\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\n\tconst unsigned char *addr = (const unsigned char *)in->s6_addr;\n\treturn !memcmp(addr, ZEROES, 8) ||\n",
                      "markdown": "`{\n\tstatic const char ZEROES[] =\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\n\tconst unsigned char *addr = (const unsigned char *)in->s6_addr;\n\treturn !memcmp(addr, ZEROES, 8) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 798,
                  "startColumn": 3,
                  "endLine": 798,
                  "endColumn": 35,
                  "snippet": {
                    "text": "evutil_v6addr_is_local_(const struct in6_addr *in)\n{\n\tstatic const char ZEROES[] =\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\n\tconst unsigned char *addr = (const unsigned char *)in->s6_addr;\n",
                    "rendered": {
                      "text": "evutil_v6addr_is_local_(const struct in6_addr *in)\n{\n\tstatic const char ZEROES[] =\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\n\tconst unsigned char *addr = (const unsigned char *)in->s6_addr;\n",
                      "markdown": "`evutil_v6addr_is_local_(const struct in6_addr *in)\n{\n\tstatic const char ZEROES[] =\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\t\t\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\n\tconst unsigned char *addr = (const unsigned char *)in->s6_addr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 2362,
                  "endLine": 2362,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t * ipv4\n\t */\n\n\tcp = strchr(ip_as_string, ':');\n\tif (*ip_as_string == '[') {\n\t\tsize_t len;\n\t\tif (!(cp = strchr(ip_as_string, ']'))) {\n",
                    "rendered": {
                      "text": "\t * ipv4\n\t */\n\n\tcp = strchr(ip_as_string, ':');\n\tif (*ip_as_string == '[') {\n\t\tsize_t len;\n\t\tif (!(cp = strchr(ip_as_string, ']'))) {\n",
                      "markdown": "`\t * ipv4\n\t */\n\n\tcp = strchr(ip_as_string, ':');\n\tif (*ip_as_string == '[') {\n\t\tsize_t len;\n\t\tif (!(cp = strchr(ip_as_string, ']'))) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 2226,
                  "endLine": 2226,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tif (!(tmp_src = mm_strdup(src))) {\n\t\treturn -1;\n\t}\n\tcp = strchr(tmp_src, '%');\n\t// The check had been already done above against original src\n\t*cp = '\\0';\n\tr = evutil_inet_pton(af, tmp_src, dst);\n",
                    "rendered": {
                      "text": "\tif (!(tmp_src = mm_strdup(src))) {\n\t\treturn -1;\n\t}\n\tcp = strchr(tmp_src, '%');\n\t// The check had been already done above against original src\n\t*cp = '\\0';\n\tr = evutil_inet_pton(af, tmp_src, dst);\n",
                      "markdown": "`\tif (!(tmp_src = mm_strdup(src))) {\n\t\treturn -1;\n\t}\n\tcp = strchr(tmp_src, '%');\n\t// The check had been already done above against original src\n\t*cp = '\\0';\n\tr = evutil_inet_pton(af, tmp_src, dst);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 2209,
                  "endLine": 2209,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tif (af != AF_INET6)\n\t\treturn evutil_inet_pton(af, src, dst);\n\n\tcp = strchr(src, '%');\n\n\t/* Bail out if no zone ID */\n\tif (cp == NULL)\n",
                    "rendered": {
                      "text": "\tif (af != AF_INET6)\n\t\treturn evutil_inet_pton(af, src, dst);\n\n\tcp = strchr(src, '%');\n\n\t/* Bail out if no zone ID */\n\tif (cp == NULL)\n",
                      "markdown": "`\tif (af != AF_INET6)\n\t\treturn evutil_inet_pton(af, src, dst);\n\n\tcp = strchr(src, '%');\n\n\t/* Bail out if no zone ID */\n\tif (cp == NULL)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 2179,
                  "startColumn": 3,
                  "endLine": 2179,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t} else {\n\t\t\t\tevutil_snprintf(cp,\n\t\t\t\t\t\t\t\tsizeof(buf)-(cp-buf), \"%x\", (unsigned)words[i]);\n\t\t\t\tcp += strlen(cp);\n\t\t\t\tif (i != 7)\n\t\t\t\t\t*cp++ = ':';\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t} else {\n\t\t\t\tevutil_snprintf(cp,\n\t\t\t\t\t\t\t\tsizeof(buf)-(cp-buf), \"%x\", (unsigned)words[i]);\n\t\t\t\tcp += strlen(cp);\n\t\t\t\tif (i != 7)\n\t\t\t\t\t*cp++ = ':';\n\t\t\t}\n",
                      "markdown": "`\t\t\t} else {\n\t\t\t\tevutil_snprintf(cp,\n\t\t\t\t\t\t\t\tsizeof(buf)-(cp-buf), \"%x\", (unsigned)words[i]);\n\t\t\t\tcp += strlen(cp);\n\t\t\t\tif (i != 7)\n\t\t\t\t\t*cp++ = ':';\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/evutil.c"
                },
                "region": {
                  "startLine": 2167,
                  "startColumn": 1,
                  "endLine": 2167,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\tif (longestGapLen<=1)\n\t\t\tlongestGapPos = -1;\n\n\t\tcp = buf;\n\t\tfor (i = 0; i < 8; ++i) {\n\t\t\tif (words[i] == 0 && longestGapPos == i) {\n\t\t\t\tif (i == 0)\n",
                    "rendered": {
                      "text": "\t\tif (longestGapLen<=1)\n\t\t\tlongestGapPos = -1;\n\n\t\tcp = buf;\n\t\tfor (i = 0; i < 8; ++i) {\n\t\t\tif (words[i] == 0 && longestGapPos == i) {\n\t\t\t\tif (i == 0)\n",
                      "markdown": "`\t\tif (longestGapLen<=1)\n\t\t\tlongestGapPos = -1;\n\n\t\tcp = buf;\n\t\tfor (i = 0; i < 8; ++i) {\n\t\t\tif (words[i] == 0 && longestGapPos == i) {\n\t\t\t\tif (i == 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/signal.c"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 14,
                  "endLine": 301,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tif (evsig_base != base && evsig_base_n_signals_added) {\n\t\tevent_warnx(\"Added a signal to event base %p with signals \"\n\t\t    \"already added to event_base %p.  Only one can have \"\n\t\t    \"signals at a time with the %s backend.  The base with \"\n\t\t    \"the most recently added signal or the most recent \"\n\t\t    \"event_base_loop() call gets preference; do \"\n\t\t    \"not rely on this behavior in future Libevent versions.\",\n",
                    "rendered": {
                      "text": "\tif (evsig_base != base && evsig_base_n_signals_added) {\n\t\tevent_warnx(\"Added a signal to event base %p with signals \"\n\t\t    \"already added to event_base %p.  Only one can have \"\n\t\t    \"signals at a time with the %s backend.  The base with \"\n\t\t    \"the most recently added signal or the most recent \"\n\t\t    \"event_base_loop() call gets preference; do \"\n\t\t    \"not rely on this behavior in future Libevent versions.\",\n",
                      "markdown": "`\tif (evsig_base != base && evsig_base_n_signals_added) {\n\t\tevent_warnx(\"Added a signal to event base %p with signals \"\n\t\t    \"already added to event_base %p.  Only one can have \"\n\t\t    \"signals at a time with the %s backend.  The base with \"\n\t\t    \"the most recently added signal or the most recent \"\n\t\t    \"event_base_loop() call gets preference; do \"\n\t\t    \"not rely on this behavior in future Libevent versions.\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/signal.c"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 19,
                  "endLine": 301,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tif (evsig_base != base && evsig_base_n_signals_added) {\n\t\tevent_warnx(\"Added a signal to event base %p with signals \"\n\t\t    \"already added to event_base %p.  Only one can have \"\n\t\t    \"signals at a time with the %s backend.  The base with \"\n\t\t    \"the most recently added signal or the most recent \"\n\t\t    \"event_base_loop() call gets preference; do \"\n\t\t    \"not rely on this behavior in future Libevent versions.\",\n",
                    "rendered": {
                      "text": "\tif (evsig_base != base && evsig_base_n_signals_added) {\n\t\tevent_warnx(\"Added a signal to event base %p with signals \"\n\t\t    \"already added to event_base %p.  Only one can have \"\n\t\t    \"signals at a time with the %s backend.  The base with \"\n\t\t    \"the most recently added signal or the most recent \"\n\t\t    \"event_base_loop() call gets preference; do \"\n\t\t    \"not rely on this behavior in future Libevent versions.\",\n",
                      "markdown": "`\tif (evsig_base != base && evsig_base_n_signals_added) {\n\t\tevent_warnx(\"Added a signal to event base %p with signals \"\n\t\t    \"already added to event_base %p.  Only one can have \"\n\t\t    \"signals at a time with the %s backend.  The base with \"\n\t\t    \"the most recently added signal or the most recent \"\n\t\t    \"event_base_loop() call gets preference; do \"\n\t\t    \"not rely on this behavior in future Libevent versions.\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 42,
                  "endLine": 188,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    local start=$1 end=$2\n    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n",
                    "rendered": {
                      "text": "    local start=$1 end=$2\n    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n",
                      "markdown": "`    local start=$1 end=$2\n    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# TODO:\n# - inline replace\n# - clang-format-diff replacement\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# TODO:\n# - inline replace\n# - clang-format-diff replacement\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# TODO:\n# - inline replace\n# - clang-format-diff replacement\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 7,
                  "endLine": 279,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        return\n    }\n    [ \"${options[file_diff]}\" -eq 0 ] || {\n        diff -u \"$@\" <(check_file \"$@\") | diff_substitute \"$@\"\n        return\n    }\n    [ \"${options[ref]}\" -eq 0 ] || {\n",
                    "rendered": {
                      "text": "        return\n    }\n    [ \"${options[file_diff]}\" -eq 0 ] || {\n        diff -u \"$@\" <(check_file \"$@\") | diff_substitute \"$@\"\n        return\n    }\n    [ \"${options[ref]}\" -eq 0 ] || {\n",
                      "markdown": "`        return\n    }\n    [ \"${options[file_diff]}\" -eq 0 ] || {\n        diff -u \"$@\" <(check_file \"$@\") | diff_substitute \"$@\"\n        return\n    }\n    [ \"${options[ref]}\" -eq 0 ] || {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 11,
                  "endLine": 240,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            end=$((start + length))\n            echo \"Range: $start:$end ($length)\" >&2\n\n            diff -u \\\n                <(uncrustify_git_indent_hunk $start $end $ref \"$f\" | strip $start $end) \\\n                <(uncrustify_git_indent_hunk $start $end $ref \"$f\" | uncrustify_frag | strip $start $end) \\\n            | diff_substitute \"$f\"\n",
                    "rendered": {
                      "text": "            end=$((start + length))\n            echo \"Range: $start:$end ($length)\" >&2\n\n            diff -u \\\n                <(uncrustify_git_indent_hunk $start $end $ref \"$f\" | strip $start $end) \\\n                <(uncrustify_git_indent_hunk $start $end $ref \"$f\" | uncrustify_frag | strip $start $end) \\\n            | diff_substitute \"$f\"\n",
                      "markdown": "`            end=$((start + length))\n            echo \"Range: $start:$end ($length)\" >&2\n\n            diff -u \\\n                <(uncrustify_git_indent_hunk $start $end $ref \"$f\" | strip $start $end) \\\n                <(uncrustify_git_indent_hunk $start $end $ref \"$f\" | uncrustify_frag | strip $start $end) \\\n            | diff_substitute \"$f\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 23,
                  "endLine": 228,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    local ref=$1 r f start end length\n    shift\n\n    local files=( $(git diff --name-only $ref^..$ref | egrep \"\\.(c|h)$\") )\n    for f in \"${files[@]}\"; do\n        local ranges=( $(git_ranges $ref \"$f\") )\n        for r in \"${ranges[@]}\"; do\n",
                    "rendered": {
                      "text": "    local ref=$1 r f start end length\n    shift\n\n    local files=( $(git diff --name-only $ref^..$ref | egrep \"\\.(c|h)$\") )\n    for f in \"${files[@]}\"; do\n        local ranges=( $(git_ranges $ref \"$f\") )\n        for r in \"${ranges[@]}\"; do\n",
                      "markdown": "`    local ref=$1 r f start end length\n    shift\n\n    local files=( $(git diff --name-only $ref^..$ref | egrep \"\\.(c|h)$\") )\n    for f in \"${files[@]}\"; do\n        local ranges=( $(git_ranges $ref \"$f\") )\n        for r in \"${ranges[@]}\"; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 3,
                  "endLine": 219,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    local f=\"$1\"\n    shift\n\n    sed \\\n        -e \"s#^--- /dev/fd.*\\$#--- a/$f#\" \\\n        -e \"s#^+++ /dev/fd.*\\$#+++ b/$f#\"\n}\n",
                    "rendered": {
                      "text": "    local f=\"$1\"\n    shift\n\n    sed \\\n        -e \"s#^--- /dev/fd.*\\$#--- a/$f#\" \\\n        -e \"s#^+++ /dev/fd.*\\$#+++ b/$f#\"\n}\n",
                      "markdown": "`    local f=\"$1\"\n    shift\n\n    sed \\\n        -e \"s#^--- /dev/fd.*\\$#--- a/$f#\" \\\n        -e \"s#^+++ /dev/fd.*\\$#+++ b/$f#\"\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 3,
                  "endLine": 212,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    local ref=$1 f=$2\n    shift 2\n\n    git diff -W $ref^..$ref -- $f | patch_ranges\n}\nfunction diff_substitute()\n{\n",
                    "rendered": {
                      "text": "    local ref=$1 f=$2\n    shift 2\n\n    git diff -W $ref^..$ref -- $f | patch_ranges\n}\nfunction diff_substitute()\n{\n",
                      "markdown": "`    local ref=$1 f=$2\n    shift 2\n\n    git diff -W $ref^..$ref -- $f | patch_ranges\n}\nfunction diff_substitute()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 7,
                  "endLine": 205,
                  "endColumn": 12,
                  "snippet": {
                    "text": "function patch_ranges()\n{\n    egrep -o '^@@ -[0-9]+(,[0-9]+|) \\+[0-9]+(,[0-9]+|) @@' | \\\n        cut -d' ' -f3\n}\nfunction git_ranges()\n{\n",
                    "rendered": {
                      "text": "function patch_ranges()\n{\n    egrep -o '^@@ -[0-9]+(,[0-9]+|) \\+[0-9]+(,[0-9]+|) @@' | \\\n        cut -d' ' -f3\n}\nfunction git_ranges()\n{\n",
                      "markdown": "`function patch_ranges()\n{\n    egrep -o '^@@ -[0-9]+(,[0-9]+|) \\+[0-9]+(,[0-9]+|) @@' | \\\n        cut -d' ' -f3\n}\nfunction git_ranges()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 17,
                  "endLine": 200,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n    # seek indent_{on,off}()\n    let start+=2\n    head -n$end | tail -n+$start\n}\nfunction patch_ranges()\n{\n",
                    "rendered": {
                      "text": "\n    # seek indent_{on,off}()\n    let start+=2\n    head -n$end | tail -n+$start\n}\nfunction patch_ranges()\n{\n",
                      "markdown": "`\n    # seek indent_{on,off}()\n    let start+=2\n    head -n$end | tail -n+$start\n}\nfunction patch_ranges()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 3,
                  "endLine": 200,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    # seek indent_{on,off}()\n    let start+=2\n    head -n$end | tail -n+$start\n}\nfunction patch_ranges()\n{\n",
                    "rendered": {
                      "text": "\n    # seek indent_{on,off}()\n    let start+=2\n    head -n$end | tail -n+$start\n}\nfunction patch_ranges()\n{\n",
                      "markdown": "`\n    # seek indent_{on,off}()\n    let start+=2\n    head -n$end | tail -n+$start\n}\nfunction patch_ranges()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 44,
                  "endLine": 191,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n{\n",
                    "rendered": {
                      "text": "    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n{\n",
                      "markdown": "`    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 66,
                  "endLine": 190,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n",
                    "rendered": {
                      "text": "\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n",
                      "markdown": "`\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 44,
                  "endLine": 190,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n",
                    "rendered": {
                      "text": "\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n",
                      "markdown": "`\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\nfunction strip()\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 44,
                  "endLine": 189,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\n",
                    "rendered": {
                      "text": "    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\n",
                      "markdown": "`    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 42,
                  "endLine": 188,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    local start=$1 end=$2\n    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n",
                    "rendered": {
                      "text": "    local start=$1 end=$2\n    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n",
                      "markdown": "`    local start=$1 end=$2\n    shift 2\n\n    # Will be beatier with tee(1), but doh bash async substitution\n    { uncrustify_indent_off; git_hunk \"$@\" | head -n$((start - 1)); }\n    { uncrustify_indent_on;  git_hunk \"$@\" | head -n$((end - 1)) | tail -n+$start; }\n    { uncrustify_indent_off; git_hunk \"$@\" | tail -n+$((end + 1)); }\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 3,
                  "endLine": 181,
                  "endColumn": 8,
                  "snippet": {
                    "text": "{\n    local ref=$1 f=$2\n    shift 2\n    git cat-file -p $ref:$f\n}\nfunction uncrustify_git_indent_hunk()\n{\n",
                    "rendered": {
                      "text": "{\n    local ref=$1 f=$2\n    shift 2\n    git cat-file -p $ref:$f\n}\nfunction uncrustify_git_indent_hunk()\n{\n",
                      "markdown": "`{\n    local ref=$1 f=$2\n    shift 2\n    git cat-file -p $ref:$f\n}\nfunction uncrustify_git_indent_hunk()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 1,
                  "endLine": 171,
                  "endColumn": 6,
                  "snippet": {
                    "text": "function clang_format_diff() { cat \"$@\" | clang-format-diff -p1 -style=\"$(clang_style)\"; }\n# for non-bare repo will work\nfunction clang_format_git()\n{ git format-patch --stdout \"$@\" -1 | clang_format_diff; }\n\nfunction uncrustify() { command uncrustify -c \"${options[cfg]}\" \"$@\"; }\nfunction uncrustify_frag() { uncrustify -l C --frag \"$@\"; }\n",
                    "rendered": {
                      "text": "function clang_format_diff() { cat \"$@\" | clang-format-diff -p1 -style=\"$(clang_style)\"; }\n# for non-bare repo will work\nfunction clang_format_git()\n{ git format-patch --stdout \"$@\" -1 | clang_format_diff; }\n\nfunction uncrustify() { command uncrustify -c \"${options[cfg]}\" \"$@\"; }\nfunction uncrustify_frag() { uncrustify -l C --frag \"$@\"; }\n",
                      "markdown": "`function clang_format_diff() { cat \"$@\" | clang-format-diff -p1 -style=\"$(clang_style)\"; }\n# for non-bare repo will work\nfunction clang_format_git()\n{ git format-patch --stdout \"$@\" -1 | clang_format_diff; }\n\nfunction uncrustify() { command uncrustify -c \"${options[cfg]}\" \"$@\"; }\nfunction uncrustify_frag() { uncrustify -l C --frag \"$@\"; }\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 30,
                  "endLine": 168,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    echo \"{ $(sed -e 's/#.*//' -e '/---/d' -e '/\\.\\.\\./d' \"$c\" | tr $'\\n' ,) }\"\n}\nfunction clang_format() { clang-format -style=\"$(clang_style)\" \"$@\"; }\nfunction clang_format_diff() { cat \"$@\" | clang-format-diff -p1 -style=\"$(clang_style)\"; }\n# for non-bare repo will work\nfunction clang_format_git()\n{ git format-patch --stdout \"$@\" -1 | clang_format_diff; }\n",
                    "rendered": {
                      "text": "    echo \"{ $(sed -e 's/#.*//' -e '/---/d' -e '/\\.\\.\\./d' \"$c\" | tr $'\\n' ,) }\"\n}\nfunction clang_format() { clang-format -style=\"$(clang_style)\" \"$@\"; }\nfunction clang_format_diff() { cat \"$@\" | clang-format-diff -p1 -style=\"$(clang_style)\"; }\n# for non-bare repo will work\nfunction clang_format_git()\n{ git format-patch --stdout \"$@\" -1 | clang_format_diff; }\n",
                      "markdown": "`    echo \"{ $(sed -e 's/#.*//' -e '/---/d' -e '/\\.\\.\\./d' \"$c\" | tr $'\\n' ,) }\"\n}\nfunction clang_format() { clang-format -style=\"$(clang_style)\" \"$@\"; }\nfunction clang_format_diff() { cat \"$@\" | clang-format-diff -p1 -style=\"$(clang_style)\"; }\n# for non-bare repo will work\nfunction clang_format_git()\n{ git format-patch --stdout \"$@\" -1 | clang_format_diff; }\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 25,
                  "endLine": 160,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    fi\n}\n\nfunction diff() { command diff --color=always \"$@\"; }\n\nfunction clang_style()\n{\n",
                    "rendered": {
                      "text": "    fi\n}\n\nfunction diff() { command diff --color=always \"$@\"; }\n\nfunction clang_style()\n{\n",
                      "markdown": "`    fi\n}\n\nfunction diff() { command diff --color=always \"$@\"; }\n\nfunction clang_style()\n{\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 7,
                  "endLine": 153,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n    if [ \"${args[0]}\" = \"/dev/stdin\" ]; then\n        TMP_FILE=\"/tmp/libevent.checkpatch.$RANDOM\"\n        cat > \"$TMP_FILE\"\n        trap \"rm '$TMP_FILE'\" EXIT\n\n        args[0]=\"$TMP_FILE\"\n",
                    "rendered": {
                      "text": "\n    if [ \"${args[0]}\" = \"/dev/stdin\" ]; then\n        TMP_FILE=\"/tmp/libevent.checkpatch.$RANDOM\"\n        cat > \"$TMP_FILE\"\n        trap \"rm '$TMP_FILE'\" EXIT\n\n        args[0]=\"$TMP_FILE\"\n",
                      "markdown": "`\n    if [ \"${args[0]}\" = \"/dev/stdin\" ]; then\n        TMP_FILE=\"/tmp/libevent.checkpatch.$RANDOM\"\n        cat > \"$TMP_FILE\"\n        trap \"rm '$TMP_FILE'\" EXIT\n\n        args[0]=\"$TMP_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  -p   - treat as patch\n  -f   - treat as regular file\n  -d   - treat as regular file and print diff\n  -r   - treat as git revision (default)\n  -C   - check using clang-format (default)\n  -U   - check with uncrustify\n  -c   - config for clang-format/uncrustify\n",
                    "rendered": {
                      "text": "  -p   - treat as patch\n  -f   - treat as regular file\n  -d   - treat as regular file and print diff\n  -r   - treat as git revision (default)\n  -C   - check using clang-format (default)\n  -U   - check with uncrustify\n  -c   - config for clang-format/uncrustify\n",
                      "markdown": "`  -p   - treat as patch\n  -f   - treat as regular file\n  -d   - treat as regular file and print diff\n  -r   - treat as git revision (default)\n  -C   - check using clang-format (default)\n  -U   - check with uncrustify\n  -c   - config for clang-format/uncrustify\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 40,
                  "endLine": 39,
                  "snippet": {
                    "text": "OPTS:\n  -p   - treat as patch\n  -f   - treat as regular file\n  -d   - treat as regular file and print diff\n  -r   - treat as git revision (default)\n  -C   - check using clang-format (default)\n  -U   - check with uncrustify\n  -c   - config for clang-format/uncrustify\n",
                    "rendered": {
                      "text": "OPTS:\n  -p   - treat as patch\n  -f   - treat as regular file\n  -d   - treat as regular file and print diff\n  -r   - treat as git revision (default)\n  -C   - check using clang-format (default)\n  -U   - check with uncrustify\n  -c   - config for clang-format/uncrustify\n",
                      "markdown": "`OPTS:\n  -p   - treat as patch\n  -f   - treat as regular file\n  -d   - treat as regular file and print diff\n  -r   - treat as git revision (default)\n  -C   - check using clang-format (default)\n  -U   - check with uncrustify\n  -c   - config for clang-format/uncrustify\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 24,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  $ git show -1 | $0 -p\n\n  # Or via regular files\n  $ git format-patch --stdout -2\n  $ $0 *.patch\n\n  # Over a file\n",
                    "rendered": {
                      "text": "  $ git show -1 | $0 -p\n\n  # Or via regular files\n  $ git format-patch --stdout -2\n  $ $0 *.patch\n\n  # Over a file\n",
                      "markdown": "`  $ git show -1 | $0 -p\n\n  # Or via regular files\n  $ git format-patch --stdout -2\n  $ $0 *.patch\n\n  # Over a file\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n\n  # Or via regular files\n  $ git format-patch --stdout -2\n",
                    "rendered": {
                      "text": "\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n\n  # Or via regular files\n  $ git format-patch --stdout -2\n",
                      "markdown": "`\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n\n  # Or via regular files\n  $ git format-patch --stdout -2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  $ $0 -r HEAD\n\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n\n  # Or via regular files\n",
                    "rendered": {
                      "text": "  $ $0 -r HEAD\n\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n\n  # Or via regular files\n",
                      "markdown": "`  $ $0 -r HEAD\n\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n\n  # Or via regular files\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 18,
                  "snippet": {
                    "text": "Example:\n  # Chech HEAD git ref\n  $ $0 -r\n  $ $0 -r HEAD\n\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n",
                    "rendered": {
                      "text": "Example:\n  # Chech HEAD git ref\n  $ $0 -r\n  $ $0 -r HEAD\n\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n",
                      "markdown": "`Example:\n  # Chech HEAD git ref\n  $ $0 -r\n  $ $0 -r HEAD\n\n  # Check patch\n  $ git format-patch --stdout -1 | $0 -p\n  $ git show -1 | $0 -p\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 15,
                  "snippet": {
                    "text": "$0 [ OPTS ] [ file-or-gitref [ ... ] ]\n\nExample:\n  # Chech HEAD git ref\n  $ $0 -r\n  $ $0 -r HEAD\n\n",
                    "rendered": {
                      "text": "$0 [ OPTS ] [ file-or-gitref [ ... ] ]\n\nExample:\n  # Chech HEAD git ref\n  $ $0 -r\n  $ $0 -r HEAD\n\n",
                      "markdown": "`$0 [ OPTS ] [ file-or-gitref [ ... ] ]\n\nExample:\n  # Chech HEAD git ref\n  $ $0 -r\n  $ $0 -r HEAD\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nfunction usage()\n{\n    cat <<EOL\n$0 [ OPTS ] [ file-or-gitref [ ... ] ]\n\nExample:\n",
                    "rendered": {
                      "text": "\nfunction usage()\n{\n    cat <<EOL\n$0 [ OPTS ] [ file-or-gitref [ ... ] ]\n\nExample:\n",
                      "markdown": "`\nfunction usage()\n{\n    cat <<EOL\n$0 [ OPTS ] [ file-or-gitref [ ... ] ]\n\nExample:\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 31,
                  "endLine": 6,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# TODO:\n# - inline replace\n# - clang-format-diff replacement\n# - uncrustify for patches (not git refs)\n# - maybe integrate into travis-ci?\n\nfunction usage()\n",
                    "rendered": {
                      "text": "# TODO:\n# - inline replace\n# - clang-format-diff replacement\n# - uncrustify for patches (not git refs)\n# - maybe integrate into travis-ci?\n\nfunction usage()\n",
                      "markdown": "`# TODO:\n# - inline replace\n# - clang-format-diff replacement\n# - uncrustify for patches (not git refs)\n# - maybe integrate into travis-ci?\n\nfunction usage()\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/checkpatch.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# TODO:\n# - inline replace\n# - clang-format-diff replacement\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# TODO:\n# - inline replace\n# - clang-format-diff replacement\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# TODO:\n# - inline replace\n# - clang-format-diff replacement\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/buffer.c"
                },
                "region": {
                  "startLine": 1558,
                  "startColumn": 31,
                  "endLine": 1558,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tchar *cp = find_eol_char(buffer+i, chain->off-i);\n\t\tif (cp) {\n\t\t\tit->internal_.chain = chain;\n\t\t\tit->internal_.pos_in_chain = cp - buffer;\n\t\t\tit->pos += (cp - buffer) - i;\n\t\t\treturn it->pos;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tchar *cp = find_eol_char(buffer+i, chain->off-i);\n\t\tif (cp) {\n\t\t\tit->internal_.chain = chain;\n\t\t\tit->internal_.pos_in_chain = cp - buffer;\n\t\t\tit->pos += (cp - buffer) - i;\n\t\t\treturn it->pos;\n\t\t}\n",
                      "markdown": "`\t\tchar *cp = find_eol_char(buffer+i, chain->off-i);\n\t\tif (cp) {\n\t\t\tit->internal_.chain = chain;\n\t\t\tit->internal_.pos_in_chain = cp - buffer;\n\t\t\tit->pos += (cp - buffer) - i;\n\t\t\treturn it->pos;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/buffer.c"
                },
                "region": {
                  "startLine": 1509,
                  "startColumn": 31,
                  "endLine": 1509,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tchar *cp = memchr(buffer+i, chr, chain->off-i);\n\t\tif (cp) {\n\t\t\tit->internal_.chain = chain;\n\t\t\tit->internal_.pos_in_chain = cp - buffer;\n\t\t\tit->pos += (cp - buffer - i);\n\t\t\treturn it->pos;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tchar *cp = memchr(buffer+i, chr, chain->off-i);\n\t\tif (cp) {\n\t\t\tit->internal_.chain = chain;\n\t\t\tit->internal_.pos_in_chain = cp - buffer;\n\t\t\tit->pos += (cp - buffer - i);\n\t\t\treturn it->pos;\n\t\t}\n",
                      "markdown": "`\t\tchar *cp = memchr(buffer+i, chr, chain->off-i);\n\t\tif (cp) {\n\t\t\tit->internal_.chain = chain;\n\t\t\tit->internal_.pos_in_chain = cp - buffer;\n\t\t\tit->pos += (cp - buffer - i);\n\t\t\treturn it->pos;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/bufferevent_openssl.c"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 30,
                  "endLine": 285,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tcase SSL_ERROR_WANT_ACCEPT:\n\tdefault:\n\t\t/* should be impossible; treat as normal error. */\n\t\tevent_warnx(\"BUG: Unexpected OpenSSL error code %d\", errcode);\n\t\tbreak;\n\t}\n\n",
                    "rendered": {
                      "text": "\tcase SSL_ERROR_WANT_ACCEPT:\n\tdefault:\n\t\t/* should be impossible; treat as normal error. */\n\t\tevent_warnx(\"BUG: Unexpected OpenSSL error code %d\", errcode);\n\t\tbreak;\n\t}\n\n",
                      "markdown": "`\tcase SSL_ERROR_WANT_ACCEPT:\n\tdefault:\n\t\t/* should be impossible; treat as normal error. */\n\t\tevent_warnx(\"BUG: Unexpected OpenSSL error code %d\", errcode);\n\t\tbreak;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 18,
                  "endLine": 9,
                  "endColumn": 22,
                  "snippet": {
                    "text": "## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/libevent/libevent/security/advisories/new).\n\nThis project is maintained by a team of volunteers on a reasonable-effort basis. As such, vulnerabilities will be disclosed in a best effort base.\n",
                    "rendered": {
                      "text": "## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/libevent/libevent/security/advisories/new).\n\nThis project is maintained by a team of volunteers on a reasonable-effort basis. As such, vulnerabilities will be disclosed in a best effort base.\n",
                      "markdown": "`## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/libevent/libevent/security/advisories/new).\n\nThis project is maintained by a team of volunteers on a reasonable-effort basis. As such, vulnerabilities will be disclosed in a best effort base.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/SECURITY.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 148,
                  "endLine": 7,
                  "endColumn": 154,
                  "snippet": {
                    "text": "Security updates are applied only to 2.1 and 2.2 latest stable releases.\n\n## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/libevent/libevent/security/advisories/new).\n\n",
                    "rendered": {
                      "text": "Security updates are applied only to 2.1 and 2.2 latest stable releases.\n\n## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/libevent/libevent/security/advisories/new).\n\n",
                      "markdown": "`Security updates are applied only to 2.1 and 2.2 latest stable releases.\n\n## Reporting a Vulnerability\nIf you have discovered a security vulnerability in this project, please report it privately. **Do not disclose it as a public issue.** This gives us time to work with you to fix the issue before public exposure, reducing the chance that the exploit will be used before a patch is released.\n\nPlease disclose it at [security advisory](https://github.com/libevent/libevent/security/advisories/new).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/configure.ac"
                },
                "region": {
                  "startLine": 814,
                  "startColumn": 43,
                  "endLine": 814,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    dnl We have to do this invocation manually so that we can\n                    dnl get the output of conftest.err to make sure it doesn't\n                    dnl mention gc-sections.\n\t\t    if test \"$cross_compiling\" = \"yes\" || grep gc-sections conftest.err ; then\n\t\t\tlibevent_cv_gc_sections_runs=no\n\t\t    else\n\t\t\tlibevent_cv_gc_sections_runs=no\n",
                    "rendered": {
                      "text": "                    dnl We have to do this invocation manually so that we can\n                    dnl get the output of conftest.err to make sure it doesn't\n                    dnl mention gc-sections.\n\t\t    if test \"$cross_compiling\" = \"yes\" || grep gc-sections conftest.err ; then\n\t\t\tlibevent_cv_gc_sections_runs=no\n\t\t    else\n\t\t\tlibevent_cv_gc_sections_runs=no\n",
                      "markdown": "`                    dnl We have to do this invocation manually so that we can\n                    dnl get the output of conftest.err to make sure it doesn't\n                    dnl mention gc-sections.\n\t\t    if test \"$cross_compiling\" = \"yes\" || grep gc-sections conftest.err ; then\n\t\t\tlibevent_cv_gc_sections_runs=no\n\t\t    else\n\t\t\tlibevent_cv_gc_sections_runs=no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/configure.ac"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 59,
                  "endLine": 58,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    AS_HELP_STRING([--disable-malloc-replacement, disable support for replacing the memory mgt functions]),\n    [], [enable_malloc_replacement=yes])\nAC_ARG_ENABLE([openssl],\n     AS_HELP_STRING([--disable-openssl, disable support for openssl encryption]),\n    [], [enable_openssl=auto])\nAC_ARG_ENABLE([mbedtls],\n     AS_HELP_STRING([--disable-mbedtls, disable support for mbedtls encryption]),\n",
                    "rendered": {
                      "text": "    AS_HELP_STRING([--disable-malloc-replacement, disable support for replacing the memory mgt functions]),\n    [], [enable_malloc_replacement=yes])\nAC_ARG_ENABLE([openssl],\n     AS_HELP_STRING([--disable-openssl, disable support for openssl encryption]),\n    [], [enable_openssl=auto])\nAC_ARG_ENABLE([mbedtls],\n     AS_HELP_STRING([--disable-mbedtls, disable support for mbedtls encryption]),\n",
                      "markdown": "`    AS_HELP_STRING([--disable-malloc-replacement, disable support for replacing the memory mgt functions]),\n    [], [enable_malloc_replacement=yes])\nAC_ARG_ENABLE([openssl],\n     AS_HELP_STRING([--disable-openssl, disable support for openssl encryption]),\n    [], [enable_openssl=auto])\nAC_ARG_ENABLE([mbedtls],\n     AS_HELP_STRING([--disable-mbedtls, disable support for mbedtls encryption]),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 48,
                  "endLine": 72,
                  "snippet": {
                    "text": "For the latest released version of Libevent, see the official website at\n<https://libevent.org/> .\n\nThere's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n\nFor the latest development versions of Libevent, access our Git repository\nvia\n",
                    "rendered": {
                      "text": "For the latest released version of Libevent, see the official website at\n<https://libevent.org/> .\n\nThere's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n\nFor the latest development versions of Libevent, access our Git repository\nvia\n",
                      "markdown": "`For the latest released version of Libevent, see the official website at\n<https://libevent.org/> .\n\nThere's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n\nFor the latest development versions of Libevent, access our Git repository\nvia\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 69,
                  "endLine": 69,
                  "snippet": {
                    "text": "\n# 2. USEFUL LINKS:\n\nFor the latest released version of Libevent, see the official website at\n<https://libevent.org/> .\n\nThere's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n",
                    "rendered": {
                      "text": "\n# 2. USEFUL LINKS:\n\nFor the latest released version of Libevent, see the official website at\n<https://libevent.org/> .\n\nThere's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n",
                      "markdown": "`\n# 2. USEFUL LINKS:\n\nFor the latest released version of Libevent, see the official website at\n<https://libevent.org/> .\n\nThere's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\n\n[![CI](https://github.com/libevent/libevent/actions/workflows/build.yml/badge.svg)](https://github.com/libevent/libevent/actions/workflows/build.yml)\n[![Coverage Status](https://coveralls.io/repos/github/libevent/libevent/badge.svg)](https://coveralls.io/github/libevent/libevent)\n[![Join the chat at https://gitter.im/libevent/libevent](https://badges.gitter.im/libevent/libevent.svg)](https://gitter.im/libevent/libevent?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![doxygen](https://img.shields.io/badge/doxygen-documentation-blue.svg)](https://libevent.org/doc)\n[![",
                    "rendered": {
                      "text": "\n\n\n[![CI](https://github.com/libevent/libevent/actions/workflows/build.yml/badge.svg)](https://github.com/libevent/libevent/actions/workflows/build.yml)\n[![Coverage Status](https://coveralls.io/repos/github/libevent/libevent/badge.svg)](https://coveralls.io/github/libevent/libevent)\n[![Join the chat at https://gitter.im/libevent/libevent](https://badges.gitter.im/libevent/libevent.svg)](https://gitter.im/libevent/libevent?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![doxygen](https://img.shields.io/badge/doxygen-documentation-blue.svg)](https://libevent.org/doc)\n[![",
                      "markdown": "`\n\n\n[![CI](https://github.com/libevent/libevent/actions/workflows/build.yml/badge.svg)](https://github.com/libevent/libevent/actions/workflows/build.yml)\n[![Coverage Status](https://coveralls.io/repos/github/libevent/libevent/badge.svg)](https://coveralls.io/github/libevent/libevent)\n[![Join the chat at https://gitter.im/libevent/libevent](https://badges.gitter.im/libevent/libevent.svg)](https://gitter.im/libevent/libevent?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![doxygen](https://img.shields.io/badge/doxygen-documentation-blue.svg)](https://libevent.org/doc)\n[![`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 29,
                  "endLine": 89,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n__Patches__: https://github.com/libevent/libevent/pulls\n> OK, those are not really _patches_. You fork, modify, and hit the \"Create Pull Request\" button.\n> You can still submit normal git patches via the mailing list.\n\n__Bugs, Features [RFC], and Issues__: https://github.com/libevent/libevent/issues\n> Or you can do it via the mailing list.\n",
                    "rendered": {
                      "text": "\n__Patches__: https://github.com/libevent/libevent/pulls\n> OK, those are not really _patches_. You fork, modify, and hit the \"Create Pull Request\" button.\n> You can still submit normal git patches via the mailing list.\n\n__Bugs, Features [RFC], and Issues__: https://github.com/libevent/libevent/issues\n> Or you can do it via the mailing list.\n",
                      "markdown": "`\n__Patches__: https://github.com/libevent/libevent/pulls\n> OK, those are not really _patches_. You fork, modify, and hit the \"Create Pull Request\" button.\n> You can still submit normal git patches via the mailing list.\n\n__Bugs, Features [RFC], and Issues__: https://github.com/libevent/libevent/issues\n> Or you can do it via the mailing list.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 18,
                  "endLine": 81,
                  "endColumn": 23,
                  "snippet": {
                    "text": "$ git clone https://github.com/libevent/libevent.git\n```\n\nYou can browse the git repository online at:\n\n<https://github.com/libevent/libevent>\n\n",
                    "rendered": {
                      "text": "$ git clone https://github.com/libevent/libevent.git\n```\n\nYou can browse the git repository online at:\n\n<https://github.com/libevent/libevent>\n\n",
                      "markdown": "`$ git clone https://github.com/libevent/libevent.git\n```\n\nYou can browse the git repository online at:\n\n<https://github.com/libevent/libevent>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 6,
                  "snippet": {
                    "text": "via\n\n```sh\n$ git clone https://github.com/libevent/libevent.git\n```\n\nYou can browse the git repository online at:\n",
                    "rendered": {
                      "text": "via\n\n```sh\n$ git clone https://github.com/libevent/libevent.git\n```\n\nYou can browse the git repository online at:\n",
                      "markdown": "`via\n\n```sh\n$ git clone https://github.com/libevent/libevent.git\n```\n\nYou can browse the git repository online at:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 59,
                  "endLine": 74,
                  "endColumn": 64,
                  "snippet": {
                    "text": "There's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n\nFor the latest development versions of Libevent, access our Git repository\nvia\n\n```sh\n",
                    "rendered": {
                      "text": "There's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n\nFor the latest development versions of Libevent, access our Git repository\nvia\n\n```sh\n",
                      "markdown": "`There's a pretty good work-in-progress manual up at\n   <http://www.wangafu.net/~nickm/libevent-book/> .\n\nFor the latest development versions of Libevent, access our Git repository\nvia\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/README.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "endLine": 44,
                  "endColumn": 4,
                  "snippet": {
                    "text": "## Package Managers\n\nYou can download and install libevent using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n```sh\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.sh\n./vcpkg integrate install\n",
                    "rendered": {
                      "text": "## Package Managers\n\nYou can download and install libevent using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n```sh\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.sh\n./vcpkg integrate install\n",
                      "markdown": "`## Package Managers\n\nYou can download and install libevent using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n```sh\ngit clone https://github.com/Microsoft/vcpkg.git\ncd vcpkg\n./bootstrap-vcpkg.sh\n./vcpkg integrate install\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 22,
                  "endLine": 18,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\ngit format-patch --stdout -2\n./checkpatch.sh *.patch\n\n# Over a file\n",
                    "rendered": {
                      "text": "git format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\ngit format-patch --stdout -2\n./checkpatch.sh *.patch\n\n# Over a file\n",
                      "markdown": "`git format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\ngit format-patch --stdout -2\n./checkpatch.sh *.patch\n\n# Over a file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 49,
                  "endLine": 15,
                  "endColumn": 4,
                  "snippet": {
                    "text": "./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\ngit format-patch --stdout -2\n",
                    "rendered": {
                      "text": "./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\ngit format-patch --stdout -2\n",
                      "markdown": "`./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\ngit format-patch --stdout -2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\n",
                    "rendered": {
                      "text": "./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\n",
                      "markdown": "`./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n\n# Or via regular files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 18,
                  "endLine": 12,
                  "snippet": {
                    "text": "```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n",
                    "rendered": {
                      "text": "```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n",
                      "markdown": "````shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n# Check patch\ngit format-patch --stdout -1 | ./checkpatch.sh -p\ngit show -1 | ./checkpatch.sh -p\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nBut, we have a script for checking patches/files/git-refs:\n```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n",
                    "rendered": {
                      "text": "\nBut, we have a script for checking patches/files/git-refs:\n```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n",
                      "markdown": "`\nBut, we have a script for checking patches/files/git-refs:\n```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n./checkpatch.sh -r HEAD\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libevent.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nFirst and most generic rule: **just look around**.\n\nBut, we have a script for checking patches/files/git-refs:\n```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n",
                    "rendered": {
                      "text": "\nFirst and most generic rule: **just look around**.\n\nBut, we have a script for checking patches/files/git-refs:\n```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n",
                      "markdown": "`\nFirst and most generic rule: **just look around**.\n\nBut, we have a script for checking patches/files/git-refs:\n```shell\n# Chech HEAD git ref\n./checkpatch.sh -r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}