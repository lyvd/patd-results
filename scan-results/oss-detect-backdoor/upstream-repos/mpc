{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/mul.dat"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 47,
                  "endLine": 119,
                  "endColumn": 51,
                  "snippet": {
                    "text": "# big precision uses Karatsuba method\n0 0 4096 0x1420176785BD601FC018AD36471p-96 4096 -0x1ECCDBDA38B2611A32848E7ADF43p-100    53  0x6B2E363676587p-44 53  0x1AC20AAC49ED37p-47 53  0x12264C57B44C6Bp-53 53 -0x138639A4B8D8B3p-50 N N\n\n# Karatsuba case where x=0 since ad=bc: (1+i)^2 at artificially high\n# precision so that Karatsuba is actually used.\n0 0 4096 0 4096 2    4096 1 4096 1  4096 1 4096 1  N N\n# trigger the line reducing prec_x to prec_u\n",
                    "rendered": {
                      "text": "# big precision uses Karatsuba method\n0 0 4096 0x1420176785BD601FC018AD36471p-96 4096 -0x1ECCDBDA38B2611A32848E7ADF43p-100    53  0x6B2E363676587p-44 53  0x1AC20AAC49ED37p-47 53  0x12264C57B44C6Bp-53 53 -0x138639A4B8D8B3p-50 N N\n\n# Karatsuba case where x=0 since ad=bc: (1+i)^2 at artificially high\n# precision so that Karatsuba is actually used.\n0 0 4096 0 4096 2    4096 1 4096 1  4096 1 4096 1  N N\n# trigger the line reducing prec_x to prec_u\n",
                      "markdown": "`# big precision uses Karatsuba method\n0 0 4096 0x1420176785BD601FC018AD36471p-96 4096 -0x1ECCDBDA38B2611A32848E7ADF43p-100    53  0x6B2E363676587p-44 53  0x1AC20AAC49ED37p-47 53  0x12264C57B44C6Bp-53 53 -0x138639A4B8D8B3p-50 N N\n\n# Karatsuba case where x=0 since ad=bc: (1+i)^2 at artificially high\n# precision so that Karatsuba is actually used.\n0 0 4096 0 4096 2    4096 1 4096 1  4096 1 4096 1  N N\n# trigger the line reducing prec_x to prec_u\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/mpc-impl.h.in"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 50,
                  "endLine": 112,
                  "endColumn": 54,
                  "snippet": {
                    "text": "#define mpc_fin_p(z) (mpfr_number_p(mpc_realref(z))&&mpfr_number_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as finite if both its parts are */\n#define mpc_nan_p(z) ((mpfr_nan_p(mpc_realref(z)) && !mpfr_inf_p(mpc_imagref(z))) || (mpfr_nan_p(mpc_imagref(z)) && !mpfr_inf_p(mpc_realref(z))))\n   /* Consider as NaN all other numbers containing at least one NaN */\n\n\n/*\n",
                    "rendered": {
                      "text": "#define mpc_fin_p(z) (mpfr_number_p(mpc_realref(z))&&mpfr_number_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as finite if both its parts are */\n#define mpc_nan_p(z) ((mpfr_nan_p(mpc_realref(z)) && !mpfr_inf_p(mpc_imagref(z))) || (mpfr_nan_p(mpc_imagref(z)) && !mpfr_inf_p(mpc_realref(z))))\n   /* Consider as NaN all other numbers containing at least one NaN */\n\n\n/*\n",
                      "markdown": "`#define mpc_fin_p(z) (mpfr_number_p(mpc_realref(z))&&mpfr_number_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as finite if both its parts are */\n#define mpc_nan_p(z) ((mpfr_nan_p(mpc_realref(z)) && !mpfr_inf_p(mpc_imagref(z))) || (mpfr_nan_p(mpc_imagref(z)) && !mpfr_inf_p(mpc_realref(z))))\n   /* Consider as NaN all other numbers containing at least one NaN */\n\n\n/*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/mpc-impl.h.in"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 62,
                  "endLine": 104,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  ((sgn<0 && rnd==MPFR_RNDD) || (sgn>0 && rnd==MPFR_RNDU))\n\n#define mpc_inf_p(z) (mpfr_inf_p(mpc_realref(z))||mpfr_inf_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as an infinity if at least one of\n      its parts is infinite */\n#define mpc_zero_p(z) (mpfr_zero_p(mpc_realref(z))&&mpfr_zero_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as a zero if each of its parts is\n",
                    "rendered": {
                      "text": "  ((sgn<0 && rnd==MPFR_RNDD) || (sgn>0 && rnd==MPFR_RNDU))\n\n#define mpc_inf_p(z) (mpfr_inf_p(mpc_realref(z))||mpfr_inf_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as an infinity if at least one of\n      its parts is infinite */\n#define mpc_zero_p(z) (mpfr_zero_p(mpc_realref(z))&&mpfr_zero_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as a zero if each of its parts is\n",
                      "markdown": "`  ((sgn<0 && rnd==MPFR_RNDD) || (sgn>0 && rnd==MPFR_RNDU))\n\n#define mpc_inf_p(z) (mpfr_inf_p(mpc_realref(z))||mpfr_inf_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as an infinity if at least one of\n      its parts is infinite */\n#define mpc_zero_p(z) (mpfr_zero_p(mpc_realref(z))&&mpfr_zero_p(mpc_imagref(z)))\n   /* Convention in C99 (G.3): z is regarded as a zero if each of its parts is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/TODO"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 30,
                  "endLine": 85,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html\n\nNew functions to implement:\n- from Joseph S. Myers <joseph at codesourcery dot com> 19 Mar 2012: mpc_erf,\n  mpc_erfc, mpc_exp2, mpc_expm1, mpc_log1p, mpc_log2, mpc_lgamma, mpc_tgamma\n  https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-03/msg00009.html\n  See the article by Pascal Molin (hal.archives-ouvertes.fr/hal-00580855).\n",
                    "rendered": {
                      "text": "  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html\n\nNew functions to implement:\n- from Joseph S. Myers <joseph at codesourcery dot com> 19 Mar 2012: mpc_erf,\n  mpc_erfc, mpc_exp2, mpc_expm1, mpc_log1p, mpc_log2, mpc_lgamma, mpc_tgamma\n  https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-03/msg00009.html\n  See the article by Pascal Molin (hal.archives-ouvertes.fr/hal-00580855).\n",
                      "markdown": "`  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html\n\nNew functions to implement:\n- from Joseph S. Myers <joseph at codesourcery dot com> 19 Mar 2012: mpc_erf,\n  mpc_erfc, mpc_exp2, mpc_expm1, mpc_log1p, mpc_log2, mpc_lgamma, mpc_tgamma\n  https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-03/msg00009.html\n  See the article by Pascal Molin (hal.archives-ouvertes.fr/hal-00580855).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/TODO"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 18,
                  "endLine": 82,
                  "endColumn": 22,
                  "snippet": {
                    "text": "Bench:\n- from Andreas Enge 9 June 2009:\n  Scripts and web page comparing timings with different systems,\n  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html\n\nNew functions to implement:\n- from Joseph S. Myers <joseph at codesourcery dot com> 19 Mar 2012: mpc_erf,\n",
                    "rendered": {
                      "text": "Bench:\n- from Andreas Enge 9 June 2009:\n  Scripts and web page comparing timings with different systems,\n  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html\n\nNew functions to implement:\n- from Joseph S. Myers <joseph at codesourcery dot com> 19 Mar 2012: mpc_erf,\n",
                      "markdown": "`Bench:\n- from Andreas Enge 9 June 2009:\n  Scripts and web page comparing timings with different systems,\n  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html\n\nNew functions to implement:\n- from Joseph S. Myers <joseph at codesourcery dot com> 19 Mar 2012: mpc_erf,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/TODO"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 39,
                  "endLine": 27,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\nFrom Andreas Enge 1 December 2022:\n",
                    "rendered": {
                      "text": "\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\nFrom Andreas Enge 1 December 2022:\n",
                      "markdown": "`\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\nFrom Andreas Enge 1 December 2022:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/TODO"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 14,
                  "endLine": 27,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\nFrom Andreas Enge 1 December 2022:\n",
                    "rendered": {
                      "text": "\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\nFrom Andreas Enge 1 December 2022:\n",
                      "markdown": "`\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\nFrom Andreas Enge 1 December 2022:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/TODO"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 50,
                  "endLine": 26,
                  "endColumn": 54,
                  "snippet": {
                    "text": "(see, for instance, tcos.c)\n\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\n",
                    "rendered": {
                      "text": "(see, for instance, tcos.c)\n\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\n",
                      "markdown": "`(see, for instance, tcos.c)\n\nFrom Andreas Enge 31 August 2011:\nimplement mul_karatsuba with three multiplications at precision around p,\ninstead of two at precision 2*p and one at precision p\nrequires analysis of error propagation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1572,
                  "startColumn": 71,
                  "endLine": 1573,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nNotice that when the precision of @var{z} is larger than @var{prec_re}\nor @var{prec_im}, the centre need not be representable at the desired\nprecision, and in fact the ball need not contain a representable number\nat all to be ``roundable''. Even worse, when @var{rnd} is a directed\nrounding mode for the real or the imaginary part and the ball of\nnon-zero radius contains\na representable number, the return value is necessarily @code{false}.\n",
                    "rendered": {
                      "text": "\nNotice that when the precision of @var{z} is larger than @var{prec_re}\nor @var{prec_im}, the centre need not be representable at the desired\nprecision, and in fact the ball need not contain a representable number\nat all to be ``roundable''. Even worse, when @var{rnd} is a directed\nrounding mode for the real or the imaginary part and the ball of\nnon-zero radius contains\na representable number, the return value is necessarily @code{false}.\n",
                      "markdown": "`\nNotice that when the precision of @var{z} is larger than @var{prec_re}\nor @var{prec_im}, the centre need not be representable at the desired\nprecision, and in fact the ball need not contain a representable number\nat all to be ``roundable''. Even worse, when @var{rnd} is a directed\nrounding mode for the real or the imaginary part and the ball of\nnon-zero radius contains\na representable number, the return value is necessarily @code{false}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1571,
                  "startColumn": 54,
                  "endLine": 1571,
                  "endColumn": 58,
                  "snippet": {
                    "text": "MPC semantics.\n\nNotice that when the precision of @var{z} is larger than @var{prec_re}\nor @var{prec_im}, the centre need not be representable at the desired\nprecision, and in fact the ball need not contain a representable number\nat all to be ``roundable''. Even worse, when @var{rnd} is a directed\nrounding mode for the real or the imaginary part and the ball of\n",
                    "rendered": {
                      "text": "MPC semantics.\n\nNotice that when the precision of @var{z} is larger than @var{prec_re}\nor @var{prec_im}, the centre need not be representable at the desired\nprecision, and in fact the ball need not contain a representable number\nat all to be ``roundable''. Even worse, when @var{rnd} is a directed\nrounding mode for the real or the imaginary part and the ball of\n",
                      "markdown": "`MPC semantics.\n\nNotice that when the precision of @var{z} is larger than @var{prec_re}\nor @var{prec_im}, the centre need not be representable at the desired\nprecision, and in fact the ball need not contain a representable number\nat all to be ``roundable''. Even worse, when @var{rnd} is a directed\nrounding mode for the real or the imaginary part and the ball of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1522,
                  "startColumn": 53,
                  "endLine": 1522,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n\n@deftypefun void mpcb_set_ui_ui (mpcb_ptr @var{z}, unsigned long int @var{re}, unsigned long int @var {im}, mpfr_prec_t @var{prec})\nSet @var{z} to a ball with centre @var{re}+I*@var{im} at precision\n@var{prec} or the size of an @code{unsigned long int}, whatever is larger.\n@end deftypefun\n\n",
                    "rendered": {
                      "text": "\n\n@deftypefun void mpcb_set_ui_ui (mpcb_ptr @var{z}, unsigned long int @var{re}, unsigned long int @var {im}, mpfr_prec_t @var{prec})\nSet @var{z} to a ball with centre @var{re}+I*@var{im} at precision\n@var{prec} or the size of an @code{unsigned long int}, whatever is larger.\n@end deftypefun\n\n",
                      "markdown": "`\n\n@deftypefun void mpcb_set_ui_ui (mpcb_ptr @var{z}, unsigned long int @var{re}, unsigned long int @var {im}, mpfr_prec_t @var{prec})\nSet @var{z} to a ball with centre @var{re}+I*@var{im} at precision\n@var{prec} or the size of an @code{unsigned long int}, whatever is larger.\n@end deftypefun\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1507,
                  "startColumn": 65,
                  "endLine": 1507,
                  "endColumn": 69,
                  "snippet": {
                    "text": "Using @var{err_re} and @var{err_im} different from 0 is particularly\nuseful in two settings: If @var{c} is itself the result of a call to an\n@code{mpc_} function with exact input and rounding mode @code{MPC_RNDNN}\nof both parts to nearest, then its parts are known with errors of at most\n1/2 ulp, and setting @var{err_re} and @var{err_im} to 1 yields a ball\nwhich is known to contain the exact result (this motivates the strange\nunit of 1/2 ulp); if directed rounding was used, @var{err_re} and\n",
                    "rendered": {
                      "text": "Using @var{err_re} and @var{err_im} different from 0 is particularly\nuseful in two settings: If @var{c} is itself the result of a call to an\n@code{mpc_} function with exact input and rounding mode @code{MPC_RNDNN}\nof both parts to nearest, then its parts are known with errors of at most\n1/2 ulp, and setting @var{err_re} and @var{err_im} to 1 yields a ball\nwhich is known to contain the exact result (this motivates the strange\nunit of 1/2 ulp); if directed rounding was used, @var{err_re} and\n",
                      "markdown": "`Using @var{err_re} and @var{err_im} different from 0 is particularly\nuseful in two settings: If @var{c} is itself the result of a call to an\n@code{mpc_} function with exact input and rounding mode @code{MPC_RNDNN}\nof both parts to nearest, then its parts are known with errors of at most\n1/2 ulp, and setting @var{err_re} and @var{err_im} to 1 yields a ball\nwhich is known to contain the exact result (this motivates the strange\nunit of 1/2 ulp); if directed rounding was used, @var{err_re} and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1480,
                  "startColumn": 16,
                  "endLine": 1480,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n@deftypefun void mpcb_set_c (mpcb_ptr @var{z}, mpc_srcptr @var{c}, mpfr_prec_t @var{prec}, unsigned long int @var{err_re}, unsigned long int @var {err_im})\nSet @var{z} to a ball with centre @var{c} at precision @var{prec}.\nIf @var{prec} is at least the maximum of the precisions of the real and the\nimaginary parts of @var{c} and @var{err_re} and @var{err_im} are 0, then\nthe resulting ball is exact with radius zero. Using a larger value for\n@var{prec} makes sense if @var{c} is considered exact and a larger target\n",
                    "rendered": {
                      "text": "\n@deftypefun void mpcb_set_c (mpcb_ptr @var{z}, mpc_srcptr @var{c}, mpfr_prec_t @var{prec}, unsigned long int @var{err_re}, unsigned long int @var {err_im})\nSet @var{z} to a ball with centre @var{c} at precision @var{prec}.\nIf @var{prec} is at least the maximum of the precisions of the real and the\nimaginary parts of @var{c} and @var{err_re} and @var{err_im} are 0, then\nthe resulting ball is exact with radius zero. Using a larger value for\n@var{prec} makes sense if @var{c} is considered exact and a larger target\n",
                      "markdown": "`\n@deftypefun void mpcb_set_c (mpcb_ptr @var{z}, mpc_srcptr @var{c}, mpfr_prec_t @var{prec}, unsigned long int @var{err_re}, unsigned long int @var {err_im})\nSet @var{z} to a ball with centre @var{c} at precision @var{prec}.\nIf @var{prec} is at least the maximum of the precisions of the real and the\nimaginary parts of @var{c} and @var{err_re} and @var{err_im} are 0, then\nthe resulting ball is exact with radius zero. Using a larger value for\n@var{prec} makes sense if @var{c} is considered exact and a larger target\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1479,
                  "startColumn": 41,
                  "endLine": 1479,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n\n@deftypefun void mpcb_set_c (mpcb_ptr @var{z}, mpc_srcptr @var{c}, mpfr_prec_t @var{prec}, unsigned long int @var{err_re}, unsigned long int @var {err_im})\nSet @var{z} to a ball with centre @var{c} at precision @var{prec}.\nIf @var{prec} is at least the maximum of the precisions of the real and the\nimaginary parts of @var{c} and @var{err_re} and @var{err_im} are 0, then\nthe resulting ball is exact with radius zero. Using a larger value for\n",
                    "rendered": {
                      "text": "\n\n@deftypefun void mpcb_set_c (mpcb_ptr @var{z}, mpc_srcptr @var{c}, mpfr_prec_t @var{prec}, unsigned long int @var{err_re}, unsigned long int @var {err_im})\nSet @var{z} to a ball with centre @var{c} at precision @var{prec}.\nIf @var{prec} is at least the maximum of the precisions of the real and the\nimaginary parts of @var{c} and @var{err_re} and @var{err_im} are 0, then\nthe resulting ball is exact with radius zero. Using a larger value for\n",
                      "markdown": "`\n\n@deftypefun void mpcb_set_c (mpcb_ptr @var{z}, mpc_srcptr @var{c}, mpfr_prec_t @var{prec}, unsigned long int @var{err_re}, unsigned long int @var {err_im})\nSet @var{z} to a ball with centre @var{c} at precision @var{prec}.\nIf @var{prec} is at least the maximum of the precisions of the real and the\nimaginary parts of @var{c} and @var{err_re} and @var{err_im} are 0, then\nthe resulting ball is exact with radius zero. Using a larger value for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1422,
                  "startColumn": 17,
                  "endLine": 1422,
                  "endColumn": 21,
                  "snippet": {
                    "text": "complex plane, whatever the value of the centre is.\n\nUnlike for variables of @code{mpc_t} type, where the precision needs to\nbe set explicitly at initialisation, variables of type @code{mpcb_t}\nhandle their precision dynamically. Ball centres always have the same\nprecision for their real and their imaginary parts (again this is a\nchoice of the implementation; if they are of very different sizes, one\n",
                    "rendered": {
                      "text": "complex plane, whatever the value of the centre is.\n\nUnlike for variables of @code{mpc_t} type, where the precision needs to\nbe set explicitly at initialisation, variables of type @code{mpcb_t}\nhandle their precision dynamically. Ball centres always have the same\nprecision for their real and their imaginary parts (again this is a\nchoice of the implementation; if they are of very different sizes, one\n",
                      "markdown": "`complex plane, whatever the value of the centre is.\n\nUnlike for variables of @code{mpc_t} type, where the precision needs to\nbe set explicitly at initialisation, variables of type @code{mpcb_t}\nhandle their precision dynamically. Ball centres always have the same\nprecision for their real and their imaginary parts (again this is a\nchoice of the implementation; if they are of very different sizes, one\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1381,
                  "startColumn": 47,
                  "endLine": 1381,
                  "endColumn": 51,
                  "snippet": {
                    "text": "number at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\noperation with complex balls to account for the error made by rounding\nthe centre.\n@end deftypefun\n",
                    "rendered": {
                      "text": "number at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\noperation with complex balls to account for the error made by rounding\nthe centre.\n@end deftypefun\n",
                      "markdown": "`number at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\noperation with complex balls to account for the error made by rounding\nthe centre.\n@end deftypefun\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1379,
                  "startColumn": 60,
                  "endLine": 1379,
                  "endColumn": 64,
                  "snippet": {
                    "text": "The idea is that if a (potentially not representable) centre of an ideal\ncomplex ball of radius @var{r} is rounded to a representable complex\nnumber at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\noperation with complex balls to account for the error made by rounding\n",
                    "rendered": {
                      "text": "The idea is that if a (potentially not representable) centre of an ideal\ncomplex ball of radius @var{r} is rounded to a representable complex\nnumber at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\noperation with complex balls to account for the error made by rounding\n",
                      "markdown": "`The idea is that if a (potentially not representable) centre of an ideal\ncomplex ball of radius @var{r} is rounded to a representable complex\nnumber at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\noperation with complex balls to account for the error made by rounding\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1378,
                  "startColumn": 6,
                  "endLine": 1378,
                  "endColumn": 10,
                  "snippet": {
                    "text": "@code{MPFR_RNDN}, and to @math{r + (1 + r) 2@sup{1-p}} otherwise.\nThe idea is that if a (potentially not representable) centre of an ideal\ncomplex ball of radius @var{r} is rounded to a representable complex\nnumber at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\n",
                    "rendered": {
                      "text": "@code{MPFR_RNDN}, and to @math{r + (1 + r) 2@sup{1-p}} otherwise.\nThe idea is that if a (potentially not representable) centre of an ideal\ncomplex ball of radius @var{r} is rounded to a representable complex\nnumber at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\n",
                      "markdown": "`@code{MPFR_RNDN}, and to @math{r + (1 + r) 2@sup{1-p}} otherwise.\nThe idea is that if a (potentially not representable) centre of an ideal\ncomplex ball of radius @var{r} is rounded to a representable complex\nnumber at precision @var{p}, this shifts the centre by up to 1/2 ulp\n(for rounding to nearest) or 1 ulp (for directed rounding of at least one\nof the real or imaginary parts), which increases the radius accordingly.\nSo this function is typically called internally at the end of each\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1241,
                  "startColumn": 30,
                  "endLine": 1241,
                  "endColumn": 34,
                  "snippet": {
                    "text": "complicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\nresult, which could be handled at a higher, application level. For more\ndiscussion on these issues, see the file @code{algorithms.tex}.\n\n\n",
                    "rendered": {
                      "text": "complicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\nresult, which could be handled at a higher, application level. For more\ndiscussion on these issues, see the file @code{algorithms.tex}.\n\n\n",
                      "markdown": "`complicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\nresult, which could be handled at a higher, application level. For more\ndiscussion on these issues, see the file @code{algorithms.tex}.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1239,
                  "startColumn": 31,
                  "endLine": 1239,
                  "endColumn": 35,
                  "snippet": {
                    "text": "one simplifies error analyses for multiplicative operations (multiplication,\ndivision, square roots, and the AGM), at the expense of making them more\ncomplicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\nresult, which could be handled at a higher, application level. For more\ndiscussion on these issues, see the file @code{algorithms.tex}.\n",
                    "rendered": {
                      "text": "one simplifies error analyses for multiplicative operations (multiplication,\ndivision, square roots, and the AGM), at the expense of making them more\ncomplicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\nresult, which could be handled at a higher, application level. For more\ndiscussion on these issues, see the file @code{algorithms.tex}.\n",
                      "markdown": "`one simplifies error analyses for multiplicative operations (multiplication,\ndivision, square roots, and the AGM), at the expense of making them more\ncomplicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\nresult, which could be handled at a higher, application level. For more\ndiscussion on these issues, see the file @code{algorithms.tex}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1237,
                  "startColumn": 37,
                  "endLine": 1237,
                  "endColumn": 41,
                  "snippet": {
                    "text": "the closed circle with centre @math{c} and radius @math{r |c|}.\nThe approach of using a relative error (or radius) instead of an absolute\none simplifies error analyses for multiplicative operations (multiplication,\ndivision, square roots, and the AGM), at the expense of making them more\ncomplicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\n",
                    "rendered": {
                      "text": "the closed circle with centre @math{c} and radius @math{r |c|}.\nThe approach of using a relative error (or radius) instead of an absolute\none simplifies error analyses for multiplicative operations (multiplication,\ndivision, square roots, and the AGM), at the expense of making them more\ncomplicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\n",
                      "markdown": "`the closed circle with centre @math{c} and radius @math{r |c|}.\nThe approach of using a relative error (or radius) instead of an absolute\none simplifies error analyses for multiplicative operations (multiplication,\ndivision, square roots, and the AGM), at the expense of making them more\ncomplicated for additive operations. It has the major drawback of not being\nable to represent balls centred at 0; in floating point arithmetic, however,\n0 is never reached by rounding, but only through operations with exact\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1174,
                  "startColumn": 54,
                  "endLine": 1174,
                  "endColumn": 58,
                  "snippet": {
                    "text": "@deftypefn Macro long MPC_VERSION_NUM (@var{major}, @var{minor}, @var{patchlevel})\nCreate an integer in the same format as used by @code{MPC_VERSION} from the\ngiven @var{major}, @var{minor} and @var{patchlevel}.\nHere is an example of how to check the GNU MPC version at compile time:\n@example\n#if (!defined(MPC_VERSION) || (MPC_VERSION<MPC_VERSION_NUM(2,1,0)))\n# error \"Wrong GNU MPC version.\"\n",
                    "rendered": {
                      "text": "@deftypefn Macro long MPC_VERSION_NUM (@var{major}, @var{minor}, @var{patchlevel})\nCreate an integer in the same format as used by @code{MPC_VERSION} from the\ngiven @var{major}, @var{minor} and @var{patchlevel}.\nHere is an example of how to check the GNU MPC version at compile time:\n@example\n#if (!defined(MPC_VERSION) || (MPC_VERSION<MPC_VERSION_NUM(2,1,0)))\n# error \"Wrong GNU MPC version.\"\n",
                      "markdown": "`@deftypefn Macro long MPC_VERSION_NUM (@var{major}, @var{minor}, @var{patchlevel})\nCreate an integer in the same format as used by @code{MPC_VERSION} from the\ngiven @var{major}, @var{minor} and @var{patchlevel}.\nHere is an example of how to check the GNU MPC version at compile time:\n@example\n#if (!defined(MPC_VERSION) || (MPC_VERSION<MPC_VERSION_NUM(2,1,0)))\n# error \"Wrong GNU MPC version.\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1159,
                  "startColumn": 64,
                  "endLine": 1160,
                  "snippet": {
                    "text": "@code{MPC_VERSION_PATCHLEVEL} are respectively the major, minor and\npatch level of GNU MPC version, as preprocessing constants.\n@code{MPC_VERSION_STRING} is the version as a string constant, which\ncan be compared to the result of @code{mpc_get_version} to check at\nrun time the header file and library used match:\n@example\nif (strcmp (mpc_get_version (), MPC_VERSION_STRING))\n  fprintf (stderr, \"Warning: header and library do not match\\n\");\n",
                    "rendered": {
                      "text": "@code{MPC_VERSION_PATCHLEVEL} are respectively the major, minor and\npatch level of GNU MPC version, as preprocessing constants.\n@code{MPC_VERSION_STRING} is the version as a string constant, which\ncan be compared to the result of @code{mpc_get_version} to check at\nrun time the header file and library used match:\n@example\nif (strcmp (mpc_get_version (), MPC_VERSION_STRING))\n  fprintf (stderr, \"Warning: header and library do not match\\n\");\n",
                      "markdown": "`@code{MPC_VERSION_PATCHLEVEL} are respectively the major, minor and\npatch level of GNU MPC version, as preprocessing constants.\n@code{MPC_VERSION_STRING} is the version as a string constant, which\ncan be compared to the result of @code{mpc_get_version} to check at\nrun time the header file and library used match:\n@example\nif (strcmp (mpc_get_version (), MPC_VERSION_STRING))\n  fprintf (stderr, \"Warning: header and library do not match\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1125,
                  "startColumn": 40,
                  "endLine": 1125,
                  "endColumn": 44,
                  "snippet": {
                    "text": "@deftypefun int mpc_eta_fund (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nAssuming that the argument @var{op} lies in the fundamental domain for\n@math{Sl_2(Z)}, that is, it has real part not below @math{-1/2} and\nnot above @math{+1/2} and absolute value at least 1,\nreturn the value of the Dedekind eta-function in @var{rop}.\nFor arguments outside the fundamental domain the function is expected to\nloop indefinitely.\n",
                    "rendered": {
                      "text": "@deftypefun int mpc_eta_fund (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nAssuming that the argument @var{op} lies in the fundamental domain for\n@math{Sl_2(Z)}, that is, it has real part not below @math{-1/2} and\nnot above @math{+1/2} and absolute value at least 1,\nreturn the value of the Dedekind eta-function in @var{rop}.\nFor arguments outside the fundamental domain the function is expected to\nloop indefinitely.\n",
                      "markdown": "`@deftypefun int mpc_eta_fund (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nAssuming that the argument @var{op} lies in the fundamental domain for\n@math{Sl_2(Z)}, that is, it has real part not below @math{-1/2} and\nnot above @math{+1/2} and absolute value at least 1,\nreturn the value of the Dedekind eta-function in @var{rop}.\nFor arguments outside the fundamental domain the function is expected to\nloop indefinitely.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 867,
                  "startColumn": 56,
                  "endLine": 867,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n@deftypefn Function int mpc_proj (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nCompute a projection of @var{op} onto the Riemann sphere. Set @var{rop} to\n@var{op} rounded in the direction @var{rnd}, except when at least one part of\n@var{op} is infinite (even if the other part is a NaN) in which case the real\npart of @var{rop} is set to plus infinity and its imaginary part to a signed\nzero with the same sign as the imaginary part of @var{op}.\n",
                    "rendered": {
                      "text": "\n@deftypefn Function int mpc_proj (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nCompute a projection of @var{op} onto the Riemann sphere. Set @var{rop} to\n@var{op} rounded in the direction @var{rnd}, except when at least one part of\n@var{op} is infinite (even if the other part is a NaN) in which case the real\npart of @var{rop} is set to plus infinity and its imaginary part to a signed\nzero with the same sign as the imaginary part of @var{op}.\n",
                      "markdown": "`\n@deftypefn Function int mpc_proj (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nCompute a projection of @var{op} onto the Riemann sphere. Set @var{rop} to\n@var{op} rounded in the direction @var{rnd}, except when at least one part of\n@var{op} is infinite (even if the other part is a NaN) in which case the real\npart of @var{rop} is set to plus infinity and its imaginary part to a signed\nzero with the same sign as the imaginary part of @var{op}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 834,
                  "startColumn": 70,
                  "endLine": 834,
                  "endColumn": 74,
                  "snippet": {
                    "text": "positive if the absolute value of @var{op1} is greater than that of @var{op2},\nand negative if it is smaller.\nIf @var{op1} or @var{op2} has a real or imaginary part which is NaN,\nthe function behaves like @code{mpfr_cmp} on two real numbers of which at least\none is NaN.\n@end deftypefn\n\n",
                    "rendered": {
                      "text": "positive if the absolute value of @var{op1} is greater than that of @var{op2},\nand negative if it is smaller.\nIf @var{op1} or @var{op2} has a real or imaginary part which is NaN,\nthe function behaves like @code{mpfr_cmp} on two real numbers of which at least\none is NaN.\n@end deftypefn\n\n",
                      "markdown": "`positive if the absolute value of @var{op1} is greater than that of @var{op2},\nand negative if it is smaller.\nIf @var{op1} or @var{op2} has a real or imaginary part which is NaN,\nthe function behaves like @code{mpfr_cmp} on two real numbers of which at least\none is NaN.\n@end deftypefn\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 65,
                  "endLine": 732,
                  "endColumn": 69,
                  "snippet": {
                    "text": "Convert @var{op} to a string containing its real and imaginary parts,\nseparated by a space and enclosed in a pair of parentheses.\nThe numbers are written in base @var{b} (which may vary from 2 to 36) and\nrounded according to @var{rnd}. The number of significant digits, at least 2,\nis given by @var{n}. It is also possible to let\n@var{n} be zero, in which case the number of digits is chosen large\nenough so that re-reading the printed value with the same precision, assuming\n",
                    "rendered": {
                      "text": "Convert @var{op} to a string containing its real and imaginary parts,\nseparated by a space and enclosed in a pair of parentheses.\nThe numbers are written in base @var{b} (which may vary from 2 to 36) and\nrounded according to @var{rnd}. The number of significant digits, at least 2,\nis given by @var{n}. It is also possible to let\n@var{n} be zero, in which case the number of digits is chosen large\nenough so that re-reading the printed value with the same precision, assuming\n",
                      "markdown": "`Convert @var{op} to a string containing its real and imaginary parts,\nseparated by a space and enclosed in a pair of parentheses.\nThe numbers are written in base @var{b} (which may vary from 2 to 36) and\nrounded according to @var{rnd}. The number of significant digits, at least 2,\nis given by @var{n}. It is also possible to let\n@var{n} be zero, in which case the number of digits is chosen large\nenough so that re-reading the printed value with the same precision, assuming\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 2,
                  "endLine": 517,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Initialise @var{z} to precision @var{prec} bits\nand set its real and imaginary parts to NaN.\nNormally, a variable should be initialised once only\nor at least be cleared, using @code{mpc_clear}, between initializations.\n@end deftypefun\n\n@deftypefun void mpc_init3 (mpc_t @var{z}, mpfr_prec_t @var{prec_r}, mpfr_prec_t @var{prec_i})\n",
                    "rendered": {
                      "text": "Initialise @var{z} to precision @var{prec} bits\nand set its real and imaginary parts to NaN.\nNormally, a variable should be initialised once only\nor at least be cleared, using @code{mpc_clear}, between initializations.\n@end deftypefun\n\n@deftypefun void mpc_init3 (mpc_t @var{z}, mpfr_prec_t @var{prec_r}, mpfr_prec_t @var{prec_i})\n",
                      "markdown": "`Initialise @var{z} to precision @var{prec} bits\nand set its real and imaginary parts to NaN.\nNormally, a variable should be initialised once only\nor at least be cleared, using @code{mpc_clear}, between initializations.\n@end deftypefun\n\n@deftypefun void mpc_init3 (mpc_t @var{z}, mpfr_prec_t @var{prec_r}, mpfr_prec_t @var{prec_i})\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 24,
                  "endLine": 462,
                  "endColumn": 28,
                  "snippet": {
                    "text": "discontinous. In GNU MPC, the branch cuts chosen are the same as those\nspecified for the corresponding functions in the ISO C99 standard.\n\nLikewise, when evaluated at a point whose real or imaginary part is\neither infinite or a NaN or a signed zero, a function returns the same\nvalue as those specified for the corresponding function in the ISO C99\nstandard.\n",
                    "rendered": {
                      "text": "discontinous. In GNU MPC, the branch cuts chosen are the same as those\nspecified for the corresponding functions in the ISO C99 standard.\n\nLikewise, when evaluated at a point whose real or imaginary part is\neither infinite or a NaN or a signed zero, a function returns the same\nvalue as those specified for the corresponding function in the ISO C99\nstandard.\n",
                      "markdown": "`discontinous. In GNU MPC, the branch cuts chosen are the same as those\nspecified for the corresponding functions in the ISO C99 standard.\n\nLikewise, when evaluated at a point whose real or imaginary part is\neither infinite or a NaN or a signed zero, a function returns the same\nvalue as those specified for the corresponding function in the ISO C99\nstandard.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 46,
                  "endLine": 400,
                  "endColumn": 50,
                  "snippet": {
                    "text": "variable, you need to clear it out, using one of the functions for that\npurpose.\n\nA variable should only be initialised once, or at least cleared out between\neach initialization.  After a variable has been initialised, it may be\nassigned to any number of times.\n\n",
                    "rendered": {
                      "text": "variable, you need to clear it out, using one of the functions for that\npurpose.\n\nA variable should only be initialised once, or at least cleared out between\neach initialization.  After a variable has been initialised, it may be\nassigned to any number of times.\n\n",
                      "markdown": "`variable, you need to clear it out, using one of the functions for that\npurpose.\n\nA variable should only be initialised once, or at least cleared out between\neach initialization.  After a variable has been initialised, it may be\nassigned to any number of times.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 24,
                  "endLine": 142,
                  "snippet": {
                    "text": "To build GNU MPC, you first have to install GNU MP (version @value{MINGMP} or higher) and\nGNU MPFR (version @value{MINMPFR} or higher) on your computer.  You need a C compiler;\nGCC version 4.4 or higher is recommended, since GNU MPC may trigger a bug in previous\nversions, see the thread at\n@uref{https://sympa.inria.fr/sympa/arc/mpc-discuss/2011-02/msg00024.html}.\nAnd you need a\nstandard Unix @samp{make} program, plus some other standard Unix utility\nprograms.\n",
                    "rendered": {
                      "text": "To build GNU MPC, you first have to install GNU MP (version @value{MINGMP} or higher) and\nGNU MPFR (version @value{MINMPFR} or higher) on your computer.  You need a C compiler;\nGCC version 4.4 or higher is recommended, since GNU MPC may trigger a bug in previous\nversions, see the thread at\n@uref{https://sympa.inria.fr/sympa/arc/mpc-discuss/2011-02/msg00024.html}.\nAnd you need a\nstandard Unix @samp{make} program, plus some other standard Unix utility\nprograms.\n",
                      "markdown": "`To build GNU MPC, you first have to install GNU MP (version @value{MINGMP} or higher) and\nGNU MPFR (version @value{MINMPFR} or higher) on your computer.  You need a C compiler;\nGCC version 4.4 or higher is recommended, since GNU MPC may trigger a bug in previous\nversions, see the thread at\n@uref{https://sympa.inria.fr/sympa/arc/mpc-discuss/2011-02/msg00024.html}.\nAnd you need a\nstandard Unix @samp{make} program, plus some other standard Unix utility\nprograms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1630,
                  "startColumn": 11,
                  "endLine": 1631,
                  "snippet": {
                    "text": "\n@node Concept Index\n@unnumbered Concept Index\n@printindex cp\n\n@node Function Index\n@unnumbered Function Index\n@printindex fn\n",
                    "rendered": {
                      "text": "\n@node Concept Index\n@unnumbered Concept Index\n@printindex cp\n\n@node Function Index\n@unnumbered Function Index\n@printindex fn\n",
                      "markdown": "`\n@node Concept Index\n@unnumbered Concept Index\n@printindex cp\n\n@node Function Index\n@unnumbered Function Index\n@printindex fn\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1278,
                  "startColumn": 59,
                  "endLine": 1278,
                  "endColumn": 65,
                  "snippet": {
                    "text": "computation. For instance, when a 32-bit mantissa is normalised, an even\nmantissa should be divided by 2, an odd mantissa should be divided by 2\nand 1 should be added, and then in both cases the exponent must be\nincreased by 1. It might be more efficient to add 1 all the time instead\nof testing the last bit of the mantissa.)\n\n@deftypefun int mpcr_inf_p (mpcr_srcptr @var{r})\n",
                    "rendered": {
                      "text": "computation. For instance, when a 32-bit mantissa is normalised, an even\nmantissa should be divided by 2, an odd mantissa should be divided by 2\nand 1 should be added, and then in both cases the exponent must be\nincreased by 1. It might be more efficient to add 1 all the time instead\nof testing the last bit of the mantissa.)\n\n@deftypefun int mpcr_inf_p (mpcr_srcptr @var{r})\n",
                      "markdown": "`computation. For instance, when a 32-bit mantissa is normalised, an even\nmantissa should be divided by 2, an odd mantissa should be divided by 2\nand 1 should be added, and then in both cases the exponent must be\nincreased by 1. It might be more efficient to add 1 all the time instead\nof testing the last bit of the mantissa.)\n\n@deftypefun int mpcr_inf_p (mpcr_srcptr @var{r})\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1160,
                  "startColumn": 3,
                  "endLine": 1160,
                  "endColumn": 9,
                  "snippet": {
                    "text": "patch level of GNU MPC version, as preprocessing constants.\n@code{MPC_VERSION_STRING} is the version as a string constant, which\ncan be compared to the result of @code{mpc_get_version} to check at\nrun time the header file and library used match:\n@example\nif (strcmp (mpc_get_version (), MPC_VERSION_STRING))\n  fprintf (stderr, \"Warning: header and library do not match\\n\");\n",
                    "rendered": {
                      "text": "patch level of GNU MPC version, as preprocessing constants.\n@code{MPC_VERSION_STRING} is the version as a string constant, which\ncan be compared to the result of @code{mpc_get_version} to check at\nrun time the header file and library used match:\n@example\nif (strcmp (mpc_get_version (), MPC_VERSION_STRING))\n  fprintf (stderr, \"Warning: header and library do not match\\n\");\n",
                      "markdown": "`patch level of GNU MPC version, as preprocessing constants.\n@code{MPC_VERSION_STRING} is the version as a string constant, which\ncan be compared to the result of @code{mpc_get_version} to check at\nrun time the header file and library used match:\n@example\nif (strcmp (mpc_get_version (), MPC_VERSION_STRING))\n  fprintf (stderr, \"Warning: header and library do not match\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1103,
                  "startColumn": 10,
                  "endLine": 1103,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Set @var{rop} to the inverse hyperbolic sine, inverse hyperbolic cosine,\ninverse hyperbolic tangent of @var{op},\nrounded according to @var{rnd} with the precision of @var{rop}.\nThe branch cut of @code{mpc_acosh} is\n@iftex\n@math{(-\\infty, 1)}.\n@end iftex\n",
                    "rendered": {
                      "text": "Set @var{rop} to the inverse hyperbolic sine, inverse hyperbolic cosine,\ninverse hyperbolic tangent of @var{op},\nrounded according to @var{rnd} with the precision of @var{rop}.\nThe branch cut of @code{mpc_acosh} is\n@iftex\n@math{(-\\infty, 1)}.\n@end iftex\n",
                      "markdown": "`Set @var{rop} to the inverse hyperbolic sine, inverse hyperbolic cosine,\ninverse hyperbolic tangent of @var{op},\nrounded according to @var{rnd} with the precision of @var{rop}.\nThe branch cut of @code{mpc_acosh} is\n@iftex\n@math{(-\\infty, 1)}.\n@end iftex\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 1030,
                  "startColumn": 47,
                  "endLine": 1030,
                  "endColumn": 52,
                  "snippet": {
                    "text": "@deftypefunx int mpc_log10 (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nSet @var{rop} to the natural and base-10 logarithm of @var{op} respectively,\nrounded according to @var{rnd} with the precision of @var{rop}.\nThe principal branch is chosen, with the branch cut on the negative real axis,\nso that the imaginary part of the result lies in\n@iftex\n@math{]-\\pi , \\pi]}\n",
                    "rendered": {
                      "text": "@deftypefunx int mpc_log10 (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nSet @var{rop} to the natural and base-10 logarithm of @var{op} respectively,\nrounded according to @var{rnd} with the precision of @var{rop}.\nThe principal branch is chosen, with the branch cut on the negative real axis,\nso that the imaginary part of the result lies in\n@iftex\n@math{]-\\pi , \\pi]}\n",
                      "markdown": "`@deftypefunx int mpc_log10 (mpc_t @var{rop}, const mpc_t @var{op}, mpc_rnd_t @var{rnd})\nSet @var{rop} to the natural and base-10 logarithm of @var{op} respectively,\nrounded according to @var{rnd} with the precision of @var{rop}.\nThe principal branch is chosen, with the branch cut on the negative real axis,\nso that the imaginary part of the result lies in\n@iftex\n@math{]-\\pi , \\pi]}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 56,
                  "endLine": 861,
                  "endColumn": 61,
                  "snippet": {
                    "text": "@end deftypefn\n\n@deftypefn Function int mpc_arg (mpfr_t @var{rop}, const mpc_t @var{op}, mpfr_rnd_t @var{rnd})\nSet @var{rop} to the argument of @var{op}, with a branch cut along the\nnegative real axis.\n@end deftypefn\n\n",
                    "rendered": {
                      "text": "@end deftypefn\n\n@deftypefn Function int mpc_arg (mpfr_t @var{rop}, const mpc_t @var{op}, mpfr_rnd_t @var{rnd})\nSet @var{rop} to the argument of @var{op}, with a branch cut along the\nnegative real axis.\n@end deftypefn\n\n",
                      "markdown": "`@end deftypefn\n\n@deftypefn Function int mpc_arg (mpfr_t @var{rop}, const mpc_t @var{op}, mpfr_rnd_t @var{rnd})\nSet @var{rop} to the argument of @var{op}, with a branch cut along the\nnegative real axis.\n@end deftypefn\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 21,
                  "endLine": 472,
                  "endColumn": 29,
                  "snippet": {
                    "text": "@chapter Complex Functions\n@cindex Complex functions\n\nThe complex functions expect arguments of type @code{mpc_t}.\n\nThe GNU MPC floating-point functions have an interface that is similar to the\nGNU MP\n",
                    "rendered": {
                      "text": "@chapter Complex Functions\n@cindex Complex functions\n\nThe complex functions expect arguments of type @code{mpc_t}.\n\nThe GNU MPC floating-point functions have an interface that is similar to the\nGNU MP\n",
                      "markdown": "`@chapter Complex Functions\n@cindex Complex functions\n\nThe complex functions expect arguments of type @code{mpc_t}.\n\nThe GNU MPC floating-point functions have an interface that is similar to the\nGNU MP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 40,
                  "endLine": 385,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n@section GNU MPC Variable Conventions\n\nAs a general rule, all GNU MPC functions expect output arguments before input\narguments.  This notation is based on an analogy with the assignment operator.\n\nGNU MPC allows you to use the same variable for both input and output in the same\n",
                    "rendered": {
                      "text": "\n@section GNU MPC Variable Conventions\n\nAs a general rule, all GNU MPC functions expect output arguments before input\narguments.  This notation is based on an analogy with the assignment operator.\n\nGNU MPC allows you to use the same variable for both input and output in the same\n",
                      "markdown": "`\n@section GNU MPC Variable Conventions\n\nAs a general rule, all GNU MPC functions expect output arguments before input\narguments.  This notation is based on an analogy with the assignment operator.\n\nGNU MPC allows you to use the same variable for both input and output in the same\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 29,
                  "endLine": 183,
                  "endColumn": 35,
                  "snippet": {
                    "text": "To enable checking for memory leaks using @command{valgrind} during\n@code{make check}, add the parameter @code{--enable-valgrind-tests}.\n\nIf for debugging purposes you wish to log calls to GNU MPC functions from\nwithin your code, add the parameter @samp{--enable-logging}.\nIn your code, replace the inclusion of @file{mpc.h} by @file{mpc-log.h}\nand link the executable dynamically.\n",
                    "rendered": {
                      "text": "To enable checking for memory leaks using @command{valgrind} during\n@code{make check}, add the parameter @code{--enable-valgrind-tests}.\n\nIf for debugging purposes you wish to log calls to GNU MPC functions from\nwithin your code, add the parameter @samp{--enable-logging}.\nIn your code, replace the inclusion of @file{mpc.h} by @file{mpc-log.h}\nand link the executable dynamically.\n",
                      "markdown": "`To enable checking for memory leaks using @command{valgrind} during\n@code{make check}, add the parameter @code{--enable-valgrind-tests}.\n\nIf for debugging purposes you wish to log calls to GNU MPC functions from\nwithin your code, add the parameter @samp{--enable-logging}.\nIn your code, replace the inclusion of @file{mpc.h} by @file{mpc-log.h}\nand link the executable dynamically.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/mpc.texi"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 5,
                  "endLine": 55,
                  "snippet": {
                    "text": "\n\n@ifnottex\n@node Top\n@top GNU MPC\n\nThis manual documents how to install and use the GNU Multiple Precision\nComplex Library, version @value{VERSION}\n",
                    "rendered": {
                      "text": "\n\n@ifnottex\n@node Top\n@top GNU MPC\n\nThis manual documents how to install and use the GNU Multiple Precision\nComplex Library, version @value{VERSION}\n",
                      "markdown": "`\n\n@ifnottex\n@node Top\n@top GNU MPC\n\nThis manual documents how to install and use the GNU Multiple Precision\nComplex Library, version @value{VERSION}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/cmp_abs.dat"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 48,
                  "endLine": 114,
                  "endColumn": 52,
                  "snippet": {
                    "text": "-1  53 +0 53 0x10000000000001p-52 53 -3 53 -3\n-1  53 -0 53 0x10000000000001p-52 53 -4 53 -1\n\n# some finite numbers with different signs, also at higher precision\n 0  53  1 53  8 53  4 53  7\n 0  53  1 53  8 53  4 53 -7\n 0  53  1 53  8 53 -4 53  7\n",
                    "rendered": {
                      "text": "-1  53 +0 53 0x10000000000001p-52 53 -3 53 -3\n-1  53 -0 53 0x10000000000001p-52 53 -4 53 -1\n\n# some finite numbers with different signs, also at higher precision\n 0  53  1 53  8 53  4 53  7\n 0  53  1 53  8 53  4 53 -7\n 0  53  1 53  8 53 -4 53  7\n",
                      "markdown": "`-1  53 +0 53 0x10000000000001p-52 53 -3 53 -3\n-1  53 -0 53 0x10000000000001p-52 53 -4 53 -1\n\n# some finite numbers with different signs, also at higher precision\n 0  53  1 53  8 53  4 53  7\n 0  53  1 53  8 53  4 53 -7\n 0  53  1 53  8 53 -4 53  7\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 36,
                  "endLine": 122,
                  "endColumn": 40,
                  "snippet": {
                    "text": "genhtml --branch-coverage -o coverage all.info || exit 1\n\necho \"Coverage summary saved in file    /tmp/ompc-gcov/coverage.mpc\"\necho \"Detailed coverage is available at /tmp/ompc-gcov/coverage/index.html\"\n",
                    "rendered": {
                      "text": "genhtml --branch-coverage -o coverage all.info || exit 1\n\necho \"Coverage summary saved in file    /tmp/ompc-gcov/coverage.mpc\"\necho \"Detailed coverage is available at /tmp/ompc-gcov/coverage/index.html\"\n",
                      "markdown": "`genhtml --branch-coverage -o coverage all.info || exit 1\n\necho \"Coverage summary saved in file    /tmp/ompc-gcov/coverage.mpc\"\necho \"Detailed coverage is available at /tmp/ompc-gcov/coverage/index.html\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 6,
                  "endLine": 113,
                  "endColumn": 12,
                  "snippet": {
                    "text": "for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n",
                    "rendered": {
                      "text": "for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n",
                      "markdown": "`for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 35,
                  "endLine": 113,
                  "endColumn": 41,
                  "snippet": {
                    "text": "for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n",
                    "rendered": {
                      "text": "for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n",
                      "markdown": "`for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 6,
                  "endLine": 113,
                  "endColumn": 12,
                  "snippet": {
                    "text": "for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n",
                    "rendered": {
                      "text": "for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n",
                      "markdown": "`for i in $(find . -name '*.c')\ndo\n    gcov -f $i -o $(dirname $i) 2> /dev/null || exit 1\ndone | bash ../coverage.subscript | grep -v '__gmp' > ../coverage.mpc\n\nrm -f coverage.subscript coverage-tmp || exit 1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 72,
                  "endLine": 68,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\nwhile true ; do\n",
                    "rendered": {
                      "text": "\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\nwhile true ; do\n",
                      "markdown": "`\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\nwhile true ; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 31,
                  "endLine": 68,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\nwhile true ; do\n",
                    "rendered": {
                      "text": "\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\nwhile true ; do\n",
                      "markdown": "`\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\nwhile true ; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 36,
                  "endLine": 67,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# It supports gcov *.c\n\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\n",
                    "rendered": {
                      "text": "# It supports gcov *.c\n\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\n",
                      "markdown": "`# It supports gcov *.c\n\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 26,
                  "endLine": 67,
                  "endColumn": 32,
                  "snippet": {
                    "text": "# It supports gcov *.c\n\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\n",
                    "rendered": {
                      "text": "# It supports gcov *.c\n\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\n",
                      "markdown": "`# It supports gcov *.c\n\n# Setup the parser depending on gcov\nversion=$(gcov --version | head -1 | cut -f2 -d')')\nversion=$(( $(echo \"$version\" | cut -f1 -d'.')*100 + $(echo \"$version\" | cut -f1 -d'.')*10 ))\nif test \"$version\" -ge 340 ; then\n echo \"#!/bin/bash\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 44,
                  "endLine": 32,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -rf /tmp/ompc-gcov\nmkdir /tmp/ompc-gcov || exit 1\n\necho \"Copying MPC sources to /tmp/ompc-gcov\"\ncp -r . /tmp/ompc-gcov || exit 1\ncd /tmp/ompc-gcov || exit 1\n\necho \"Remove previous coverage information.\"\n",
                    "rendered": {
                      "text": "rm -rf /tmp/ompc-gcov\nmkdir /tmp/ompc-gcov || exit 1\n\necho \"Copying MPC sources to /tmp/ompc-gcov\"\ncp -r . /tmp/ompc-gcov || exit 1\ncd /tmp/ompc-gcov || exit 1\n\necho \"Remove previous coverage information.\"\n",
                      "markdown": "`rm -rf /tmp/ompc-gcov\nmkdir /tmp/ompc-gcov || exit 1\n\necho \"Copying MPC sources to /tmp/ompc-gcov\"\ncp -r . /tmp/ompc-gcov || exit 1\ncd /tmp/ompc-gcov || exit 1\n\necho \"Remove previous coverage information.\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tools/coverage"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 54,
                  "endLine": 21,
                  "snippet": {
                    "text": "\n#!/bin/bash\n\n# to compute the coverage of mpc-x.y.z, just copy this script\n# into mpc-x.y.z/tools and run it\n\n# Set up the right directoy\ncd $(dirname $0)/..\n",
                    "rendered": {
                      "text": "\n#!/bin/bash\n\n# to compute the coverage of mpc-x.y.z, just copy this script\n# into mpc-x.y.z/tools and run it\n\n# Set up the right directoy\ncd $(dirname $0)/..\n",
                      "markdown": "`\n#!/bin/bash\n\n# to compute the coverage of mpc-x.y.z, just copy this script\n# into mpc-x.y.z/tools and run it\n\n# Set up the right directoy\ncd $(dirname $0)/..\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/README.dev"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 21,
                  "snippet": {
                    "text": "prototype.\n\n\n3. Second, define at least the MPC_FUNCTION_CALL macro.\n\nBecause the framework is common to all MPC function (or so), the\ndata_check_template() and the tgeneric_template() functions are written in a\n",
                    "rendered": {
                      "text": "prototype.\n\n\n3. Second, define at least the MPC_FUNCTION_CALL macro.\n\nBecause the framework is common to all MPC function (or so), the\ndata_check_template() and the tgeneric_template() functions are written in a\n",
                      "markdown": "`prototype.\n\n\n3. Second, define at least the MPC_FUNCTION_CALL macro.\n\nBecause the framework is common to all MPC function (or so), the\ndata_check_template() and the tgeneric_template() functions are written in a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/m4/mpc.m4"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 37,
                  "endLine": 191,
                  "endColumn": 42,
                  "snippet": {
                    "text": "   if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then\n      AC_CHECK_PROG([HASGIT], [git], [yes], [no])\n      AS_IF([test \"x$HASGIT\" = \"xyes\"], [\n         AC_MSG_CHECKING([for current git version])\n         GITVERSION=esyscmd([git rev-parse --short HEAD])\n         AC_SUBST([GITVERSION])\n         AC_MSG_RESULT([$GITVERSION])\n",
                    "rendered": {
                      "text": "   if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then\n      AC_CHECK_PROG([HASGIT], [git], [yes], [no])\n      AS_IF([test \"x$HASGIT\" = \"xyes\"], [\n         AC_MSG_CHECKING([for current git version])\n         GITVERSION=esyscmd([git rev-parse --short HEAD])\n         AC_SUBST([GITVERSION])\n         AC_MSG_RESULT([$GITVERSION])\n",
                      "markdown": "`   if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then\n      AC_CHECK_PROG([HASGIT], [git], [yes], [no])\n      AS_IF([test \"x$HASGIT\" = \"xyes\"], [\n         AC_MSG_CHECKING([for current git version])\n         GITVERSION=esyscmd([git rev-parse --short HEAD])\n         AC_SUBST([GITVERSION])\n         AC_MSG_RESULT([$GITVERSION])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/m4/mpc.m4"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 21,
                  "endLine": 188,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# into GITVERSION\n#\nAC_DEFUN([MPC_GITVERSION], [\n   if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then\n      AC_CHECK_PROG([HASGIT], [git], [yes], [no])\n      AS_IF([test \"x$HASGIT\" = \"xyes\"], [\n         AC_MSG_CHECKING([for current git version])\n",
                    "rendered": {
                      "text": "# into GITVERSION\n#\nAC_DEFUN([MPC_GITVERSION], [\n   if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then\n      AC_CHECK_PROG([HASGIT], [git], [yes], [no])\n      AS_IF([test \"x$HASGIT\" = \"xyes\"], [\n         AC_MSG_CHECKING([for current git version])\n",
                      "markdown": "`# into GITVERSION\n#\nAC_DEFUN([MPC_GITVERSION], [\n   if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then\n      AC_CHECK_PROG([HASGIT], [git], [yes], [no])\n      AS_IF([test \"x$HASGIT\" = \"xyes\"], [\n         AC_MSG_CHECKING([for current git version])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/m4/mpc.m4"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 65,
                  "endLine": 184,
                  "endColumn": 70,
                  "snippet": {
                    "text": "#\n# DESCRIPTION\n#\n# If current version string contains \"dev\", substitutes the short git hash\n# into GITVERSION\n#\nAC_DEFUN([MPC_GITVERSION], [\n",
                    "rendered": {
                      "text": "#\n# DESCRIPTION\n#\n# If current version string contains \"dev\", substitutes the short git hash\n# into GITVERSION\n#\nAC_DEFUN([MPC_GITVERSION], [\n",
                      "markdown": "`#\n# DESCRIPTION\n#\n# If current version string contains \"dev\", substitutes the short git hash\n# into GITVERSION\n#\nAC_DEFUN([MPC_GITVERSION], [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/m4/ax_gcc_option.m4"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 3,
                  "endLine": 113,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    ])\n\n    # Dump the test program to file\n    cat <<EOF > conftest.c\n$ax_gcc_option_test\nEOF\n\n",
                    "rendered": {
                      "text": "    ])\n\n    # Dump the test program to file\n    cat <<EOF > conftest.c\n$ax_gcc_option_test\nEOF\n\n",
                      "markdown": "`    ])\n\n    # Dump the test program to file\n    cat <<EOF > conftest.c\n$ax_gcc_option_test\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow_ui.c"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 42,
                  "endLine": 133,
                  "endColumn": 48,
                  "snippet": {
                    "text": "         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;\n         /* the factor on the imaginary part is 2+2^(diff+2) <= 4 for diff <= -1\n            and < 2^(diff+3) for diff >= 0 */\n         ei = (diff <= -1) ? l0 + 3 : l0 + diff + 3;\n         if (mpfr_can_round (mpc_realref(t), p - er, MPFR_RNDN, MPFR_RNDZ,\n                              MPC_PREC_RE(z) + (MPC_RND_RE(rnd) == MPFR_RNDN))\n               && mpfr_can_round (mpc_imagref(t), p - ei, MPFR_RNDN, MPFR_RNDZ,\n",
                    "rendered": {
                      "text": "         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;\n         /* the factor on the imaginary part is 2+2^(diff+2) <= 4 for diff <= -1\n            and < 2^(diff+3) for diff >= 0 */\n         ei = (diff <= -1) ? l0 + 3 : l0 + diff + 3;\n         if (mpfr_can_round (mpc_realref(t), p - er, MPFR_RNDN, MPFR_RNDZ,\n                              MPC_PREC_RE(z) + (MPC_RND_RE(rnd) == MPFR_RNDN))\n               && mpfr_can_round (mpc_imagref(t), p - ei, MPFR_RNDN, MPFR_RNDZ,\n",
                      "markdown": "`         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;\n         /* the factor on the imaginary part is 2+2^(diff+2) <= 4 for diff <= -1\n            and < 2^(diff+3) for diff >= 0 */\n         ei = (diff <= -1) ? l0 + 3 : l0 + diff + 3;\n         if (mpfr_can_round (mpc_realref(t), p - er, MPFR_RNDN, MPFR_RNDZ,\n                              MPC_PREC_RE(z) + (MPC_RND_RE(rnd) == MPFR_RNDN))\n               && mpfr_can_round (mpc_imagref(t), p - ei, MPFR_RNDN, MPFR_RNDZ,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow_ui.c"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 8,
                  "endLine": 127,
                  "endColumn": 14,
                  "snippet": {
                    "text": "         mpfr_exp_t diff;\n         mpfr_prec_t er, ei;\n\n         diff = mpfr_get_exp (mpc_realref(t)) - mpfr_get_exp (mpc_imagref(t));\n         /* the factor on the real part is 2+2^(-diff+2) <= 4 for diff >= 1\n            and < 2^(-diff+3) for diff <= 0 */\n         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;\n",
                    "rendered": {
                      "text": "         mpfr_exp_t diff;\n         mpfr_prec_t er, ei;\n\n         diff = mpfr_get_exp (mpc_realref(t)) - mpfr_get_exp (mpc_imagref(t));\n         /* the factor on the real part is 2+2^(-diff+2) <= 4 for diff >= 1\n            and < 2^(-diff+3) for diff <= 0 */\n         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;\n",
                      "markdown": "`         mpfr_exp_t diff;\n         mpfr_prec_t er, ei;\n\n         diff = mpfr_get_exp (mpc_realref(t)) - mpfr_get_exp (mpc_imagref(t));\n         /* the factor on the real part is 2+2^(-diff+2) <= 4 for diff >= 1\n            and < 2^(-diff+3) for diff <= 0 */\n         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 72,
                  "endLine": 103,
                  "snippet": {
                    "text": "\n(reported by Sisyphus)\n\nA project for Visual Studio is maintained independently by Brian Gladman at\nhttps://github.com/BrianGladman/mpc\n\n",
                    "rendered": {
                      "text": "\n(reported by Sisyphus)\n\nA project for Visual Studio is maintained independently by Brian Gladman at\nhttps://github.com/BrianGladman/mpc\n\n",
                      "markdown": "`\n(reported by Sisyphus)\n\nA project for Visual Studio is maintained independently by Brian Gladman at\nhttps://github.com/BrianGladman/mpc\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 49,
                  "endLine": 59,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n      make ps\n\n   This requires the Texinfo package (version 4.2 at least).\n\nIn case of difficulties, please send a description of the problem to\n<mpc-discuss@inria.fr>.\n",
                    "rendered": {
                      "text": "\n      make ps\n\n   This requires the Texinfo package (version 4.2 at least).\n\nIn case of difficulties, please send a description of the problem to\n<mpc-discuss@inria.fr>.\n",
                      "markdown": "`\n      make ps\n\n   This requires the Texinfo package (version 4.2 at least).\n\nIn case of difficulties, please send a description of the problem to\n<mpc-discuss@inria.fr>.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 5,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n1. In the directory of the GNU MPC archive, type\n\n      tar xzf mpc-1.3.2.tar.gz\n      cd mpc-1.3.2\n      ./configure\n      make\n",
                    "rendered": {
                      "text": "\n1. In the directory of the GNU MPC archive, type\n\n      tar xzf mpc-1.3.2.tar.gz\n      cd mpc-1.3.2\n      ./configure\n      make\n",
                      "markdown": "`\n1. In the directory of the GNU MPC archive, type\n\n      tar xzf mpc-1.3.2.tar.gz\n      cd mpc-1.3.2\n      ./configure\n      make\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 12,
                  "endLine": 460,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n\n",
                    "rendered": {
                      "text": "\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n\n",
                      "markdown": "`\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 31,
                  "endLine": 459,
                  "endColumn": 35,
                  "snippet": {
                    "text": "and (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n",
                    "rendered": {
                      "text": "and (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n",
                      "markdown": "`and (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 44,
                  "endLine": 458,
                  "endColumn": 49,
                  "snippet": {
                    "text": "or in part into the MMC, (1) had no cover texts or invariant sections,\nand (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n",
                    "rendered": {
                      "text": "or in part into the MMC, (1) had no cover texts or invariant sections,\nand (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n",
                      "markdown": "`or in part into the MMC, (1) had no cover texts or invariant sections,\nand (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 18,
                  "endLine": 458,
                  "endColumn": 23,
                  "snippet": {
                    "text": "or in part into the MMC, (1) had no cover texts or invariant sections,\nand (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n",
                    "rendered": {
                      "text": "or in part into the MMC, (1) had no cover texts or invariant sections,\nand (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n",
                      "markdown": "`or in part into the MMC, (1) had no cover texts or invariant sections,\nand (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 2,
                  "endLine": 452,
                  "endColumn": 7,
                  "snippet": {
                    "text": "``Incorporate'' means to publish or republish a Document, in whole or\nin part, as part of another Document.\n\nAn MMC is ``eligible for relicensing'' if it is licensed under this\nLicense, and if all works that were first published under this License\nsomewhere other than this MMC, and subsequently incorporated in whole\nor in part into the MMC, (1) had no cover texts or invariant sections,\n",
                    "rendered": {
                      "text": "``Incorporate'' means to publish or republish a Document, in whole or\nin part, as part of another Document.\n\nAn MMC is ``eligible for relicensing'' if it is licensed under this\nLicense, and if all works that were first published under this License\nsomewhere other than this MMC, and subsequently incorporated in whole\nor in part into the MMC, (1) had no cover texts or invariant sections,\n",
                      "markdown": "```Incorporate'' means to publish or republish a Document, in whole or\nin part, as part of another Document.\n\nAn MMC is ``eligible for relicensing'' if it is licensed under this\nLicense, and if all works that were first published under this License\nsomewhere other than this MMC, and subsequently incorporated in whole\nor in part into the MMC, (1) had no cover texts or invariant sections,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 63,
                  "endLine": 441,
                  "snippet": {
                    "text": "provides prominent facilities for anybody to edit those works.  A\npublic wiki that anybody can edit is an example of such a server.  A\n``Massive Multiauthor Collaboration'' (or ``MMC'') contained in the\nsite means any set of copyrightable works thus published on the MMC\nsite.\n\n``CC-BY-SA'' means the Creative Commons Attribution-Share Alike 3.0\nlicense published by Creative Commons Corporation, a not-for-profit\n",
                    "rendered": {
                      "text": "provides prominent facilities for anybody to edit those works.  A\npublic wiki that anybody can edit is an example of such a server.  A\n``Massive Multiauthor Collaboration'' (or ``MMC'') contained in the\nsite means any set of copyrightable works thus published on the MMC\nsite.\n\n``CC-BY-SA'' means the Creative Commons Attribution-Share Alike 3.0\nlicense published by Creative Commons Corporation, a not-for-profit\n",
                      "markdown": "`provides prominent facilities for anybody to edit those works.  A\npublic wiki that anybody can edit is an example of such a server.  A\n``Massive Multiauthor Collaboration'' (or ``MMC'') contained in the\nsite means any set of copyrightable works thus published on the MMC\nsite.\n\n``CC-BY-SA'' means the Creative Commons Attribution-Share Alike 3.0\nlicense published by Creative Commons Corporation, a not-for-profit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 6,
                  "endLine": 316,
                  "endColumn": 10,
                  "snippet": {
                    "text": "multiple identical Invariant Sections may be replaced with a single\ncopy.  If there are multiple Invariant Sections with the same name but\ndifferent contents, make the title of each such section unique by\nadding at the end of it, in parentheses, the name of the original\nauthor or publisher of that section if known, or else a unique number.\nMake the same adjustment to the section titles in the list of\nInvariant Sections in the license notice of the combined work.\n",
                    "rendered": {
                      "text": "multiple identical Invariant Sections may be replaced with a single\ncopy.  If there are multiple Invariant Sections with the same name but\ndifferent contents, make the title of each such section unique by\nadding at the end of it, in parentheses, the name of the original\nauthor or publisher of that section if known, or else a unique number.\nMake the same adjustment to the section titles in the list of\nInvariant Sections in the license notice of the combined work.\n",
                      "markdown": "`multiple identical Invariant Sections may be replaced with a single\ncopy.  If there are multiple Invariant Sections with the same name but\ndifferent contents, make the title of each such section unique by\nadding at the end of it, in parentheses, the name of the original\nauthor or publisher of that section if known, or else a unique number.\nMake the same adjustment to the section titles in the list of\nInvariant Sections in the license notice of the combined work.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 33,
                  "endLine": 277,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nIf the Modified Version includes new front-matter sections or\nappendices that qualify as Secondary Sections and contain no material\ncopied from the Document, you may at your option designate some or all\nof these sections as invariant.  To do this, add their titles to the\nlist of Invariant Sections in the Modified Version's license notice.\nThese titles must be distinct from any other section titles.\n",
                    "rendered": {
                      "text": "\nIf the Modified Version includes new front-matter sections or\nappendices that qualify as Secondary Sections and contain no material\ncopied from the Document, you may at your option designate some or all\nof these sections as invariant.  To do this, add their titles to the\nlist of Invariant Sections in the Modified Version's license notice.\nThese titles must be distinct from any other section titles.\n",
                      "markdown": "`\nIf the Modified Version includes new front-matter sections or\nappendices that qualify as Secondary Sections and contain no material\ncopied from the Document, you may at your option designate some or all\nof these sections as invariant.  To do this, add their titles to the\nlist of Invariant Sections in the Modified Version's license notice.\nThese titles must be distinct from any other section titles.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 61,
                  "endLine": 249,
                  "snippet": {
                    "text": "public access to a Transparent copy of the Document, and likewise\nthe network locations given in the Document for previous versions\nit was based on.  These may be placed in the ``History'' section.\nYou may omit a network location for a work that was published at\nleast four years before the Document itself, or if the original\npublisher of the version it refers to gives permission.\n\n@item\n",
                    "rendered": {
                      "text": "public access to a Transparent copy of the Document, and likewise\nthe network locations given in the Document for previous versions\nit was based on.  These may be placed in the ``History'' section.\nYou may omit a network location for a work that was published at\nleast four years before the Document itself, or if the original\npublisher of the version it refers to gives permission.\n\n@item\n",
                      "markdown": "`public access to a Transparent copy of the Document, and likewise\nthe network locations given in the Document for previous versions\nit was based on.  These may be placed in the ``History'' section.\nYou may omit a network location for a work that was published at\nleast four years before the Document itself, or if the original\npublisher of the version it refers to gives permission.\n\n@item\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 21,
                  "endLine": 236,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n@item\nPreserve the section Entitled ``History'', Preserve its Title, and add\nto it an item stating at least the title, year, new authors, and\npublisher of the Modified Version as given on the Title Page.  If\nthere is no section Entitled ``History'' in the Document, create one\nstating the title, year, authors, and publisher of the Document as\n",
                    "rendered": {
                      "text": "\n@item\nPreserve the section Entitled ``History'', Preserve its Title, and add\nto it an item stating at least the title, year, new authors, and\npublisher of the Modified Version as given on the Title Page.  If\nthere is no section Entitled ``History'' in the Document, create one\nstating the title, year, authors, and publisher of the Document as\n",
                      "markdown": "`\n@item\nPreserve the section Entitled ``History'', Preserve its Title, and add\nto it an item stating at least the title, year, new authors, and\npublisher of the Modified Version as given on the Title Page.  If\nthere is no section Entitled ``History'' in the Document, create one\nstating the title, year, authors, and publisher of the Document as\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 22,
                  "endLine": 207,
                  "endColumn": 26,
                  "snippet": {
                    "text": "@item\nList on the Title Page, as authors, one or more persons or entities\nresponsible for authorship of the modifications in the Modified\nVersion, together with at least five of the principal authors of the\nDocument (all of its principal authors, if it has fewer than five),\nunless they release you from this requirement.\n\n",
                    "rendered": {
                      "text": "@item\nList on the Title Page, as authors, one or more persons or entities\nresponsible for authorship of the modifications in the Modified\nVersion, together with at least five of the principal authors of the\nDocument (all of its principal authors, if it has fewer than five),\nunless they release you from this requirement.\n\n",
                      "markdown": "`@item\nList on the Title Page, as authors, one or more persons or entities\nresponsible for authorship of the modifications in the Modified\nVersion, together with at least five of the principal authors of the\nDocument (all of its principal authors, if it has fewer than five),\nunless they release you from this requirement.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 14,
                  "endLine": 178,
                  "endColumn": 18,
                  "snippet": {
                    "text": "If you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\n",
                    "rendered": {
                      "text": "If you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\n",
                      "markdown": "`If you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 54,
                  "endLine": 177,
                  "endColumn": 58,
                  "snippet": {
                    "text": "a complete Transparent copy of the Document, free of added material.\nIf you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n",
                    "rendered": {
                      "text": "a complete Transparent copy of the Document, free of added material.\nIf you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n",
                      "markdown": "`a complete Transparent copy of the Document, free of added material.\nIf you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 33,
                  "endLine": 140,
                  "endColumn": 42,
                  "snippet": {
                    "text": "copyright notices, and the license notice saying this License applies\nto the Document are reproduced in all copies, and that you add no other\nconditions whatsoever to those of this License.  You may not use\ntechnical measures to obstruct or control the reading or further\ncopying of the copies you make or distribute.  However, you may accept\ncompensation in exchange for copies.  If you distribute a large enough\nnumber of copies you must also follow the conditions in section 3.\n",
                    "rendered": {
                      "text": "copyright notices, and the license notice saying this License applies\nto the Document are reproduced in all copies, and that you add no other\nconditions whatsoever to those of this License.  You may not use\ntechnical measures to obstruct or control the reading or further\ncopying of the copies you make or distribute.  However, you may accept\ncompensation in exchange for copies.  If you distribute a large enough\nnumber of copies you must also follow the conditions in section 3.\n",
                      "markdown": "`copyright notices, and the license notice saying this License applies\nto the Document are reproduced in all copies, and that you add no other\nconditions whatsoever to those of this License.  You may not use\ntechnical measures to obstruct or control the reading or further\ncopying of the copies you make or distribute.  However, you may accept\ncompensation in exchange for copies.  If you distribute a large enough\nnumber of copies you must also follow the conditions in section 3.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 48,
                  "endLine": 79,
                  "endColumn": 52,
                  "snippet": {
                    "text": "The ``Cover Texts'' are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA ``Transparent'' copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\n",
                    "rendered": {
                      "text": "The ``Cover Texts'' are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA ``Transparent'' copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\n",
                      "markdown": "`The ``Cover Texts'' are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA ``Transparent'' copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 2,
                  "endLine": 79,
                  "endColumn": 6,
                  "snippet": {
                    "text": "The ``Cover Texts'' are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA ``Transparent'' copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\n",
                    "rendered": {
                      "text": "The ``Cover Texts'' are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA ``Transparent'' copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\n",
                      "markdown": "`The ``Cover Texts'' are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA ``Transparent'' copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 38,
                  "endLine": 459,
                  "endColumn": 44,
                  "snippet": {
                    "text": "and (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n",
                    "rendered": {
                      "text": "and (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n",
                      "markdown": "`and (2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n@end enumerate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 42,
                  "endLine": 414,
                  "endColumn": 48,
                  "snippet": {
                    "text": "FUTURE REVISIONS OF THIS LICENSE\n\nThe Free Software Foundation may publish new, revised versions\nof the GNU Free Documentation License from time to time.  Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.  See\n@uref{http://www.gnu.org/copyleft/}.\n",
                    "rendered": {
                      "text": "FUTURE REVISIONS OF THIS LICENSE\n\nThe Free Software Foundation may publish new, revised versions\nof the GNU Free Documentation License from time to time.  Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.  See\n@uref{http://www.gnu.org/copyleft/}.\n",
                      "markdown": "`FUTURE REVISIONS OF THIS LICENSE\n\nThe Free Software Foundation may publish new, revised versions\nof the GNU Free Documentation License from time to time.  Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.  See\n@uref{http://www.gnu.org/copyleft/}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 53,
                  "endLine": 399,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n",
                    "rendered": {
                      "text": "\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n",
                      "markdown": "`\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/fdl-1.3.texi"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 47,
                  "endLine": 178,
                  "endColumn": 53,
                  "snippet": {
                    "text": "If you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\n",
                    "rendered": {
                      "text": "If you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\n",
                      "markdown": "`If you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/Makefile.am"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 53,
                  "endLine": 23,
                  "snippet": {
                    "text": "\nAM_CPPFLAGS = -I$(top_srcdir)/src -I$(top_srcdir)\nLDADD = libmpc-tests.la $(top_builddir)/src/libmpc.la\n# let libtool create an executable instead of a shell script\n# useful for tests with valgrind\n# The -L$(top_builddir)/src/.libs option is necessary for some platforms,\n# such as HP-UX, when --with-gmp or --with-mpfr is used and an old MPC\n# library is already installed in the corresponding lib directories: its\n",
                    "rendered": {
                      "text": "\nAM_CPPFLAGS = -I$(top_srcdir)/src -I$(top_srcdir)\nLDADD = libmpc-tests.la $(top_builddir)/src/libmpc.la\n# let libtool create an executable instead of a shell script\n# useful for tests with valgrind\n# The -L$(top_builddir)/src/.libs option is necessary for some platforms,\n# such as HP-UX, when --with-gmp or --with-mpfr is used and an old MPC\n# library is already installed in the corresponding lib directories: its\n",
                      "markdown": "`\nAM_CPPFLAGS = -I$(top_srcdir)/src -I$(top_srcdir)\nLDADD = libmpc-tests.la $(top_builddir)/src/libmpc.la\n# let libtool create an executable instead of a shell script\n# useful for tests with valgrind\n# The -L$(top_builddir)/src/.libs option is necessary for some platforms,\n# such as HP-UX, when --with-gmp or --with-mpfr is used and an old MPC\n# library is already installed in the corresponding lib directories: its\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 21,
                  "endLine": 50,
                  "endColumn": 29,
                  "snippet": {
                    "text": "8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n10) Commit the changes to git.\n\n",
                    "rendered": {
                      "text": "8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n10) Commit the changes to git.\n\n",
                      "markdown": "`8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n10) Commit the changes to git.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 2,
                  "endLine": 46,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n",
                    "rendered": {
                      "text": "   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n",
                      "markdown": "`   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 21,
                  "snippet": {
                    "text": "5) Execute\n      touch doc/mpc.texi; make distcheck\n   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n",
                    "rendered": {
                      "text": "5) Execute\n      touch doc/mpc.texi; make distcheck\n   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n",
                      "markdown": "`5) Execute\n      touch doc/mpc.texi; make distcheck\n   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 2,
                  "endLine": 34,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   version numbers of gmp and mpfr in configure.ac, README and\n   doc/mpc.texi are correct (and check that make and make check work\n   with these minimal versions).\n3) Update the ABI version in src/Makefile.am, see\n      https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n4) Execute\n      autoreconf -vfi\n",
                    "rendered": {
                      "text": "   version numbers of gmp and mpfr in configure.ac, README and\n   doc/mpc.texi are correct (and check that make and make check work\n   with these minimal versions).\n3) Update the ABI version in src/Makefile.am, see\n      https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n4) Execute\n      autoreconf -vfi\n",
                      "markdown": "`   version numbers of gmp and mpfr in configure.ac, README and\n   doc/mpc.texi are correct (and check that make and make check work\n   with these minimal versions).\n3) Update the ABI version in src/Makefile.am, see\n      https://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html\n4) Execute\n      autoreconf -vfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 2,
                  "endLine": 49,
                  "endColumn": 7,
                  "snippet": {
                    "text": "7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n10) Commit the changes to git.\n",
                    "rendered": {
                      "text": "7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n10) Commit the changes to git.\n",
                      "markdown": "`7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n10) Commit the changes to git.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 2,
                  "endLine": 48,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n",
                    "rendered": {
                      "text": "      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n",
                      "markdown": "`      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n   src/get_version.c and src/mpc.h.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 11,
                  "endLine": 47,
                  "endColumn": 16,
                  "snippet": {
                    "text": "6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n",
                    "rendered": {
                      "text": "6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n",
                      "markdown": "`6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n   git tag VERSION\n   git push --tags\n9) After the release, update the version number in configure.ac, README,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 16,
                  "endLine": 44,
                  "endColumn": 21,
                  "snippet": {
                    "text": "5) Execute\n      touch doc/mpc.texi; make distcheck\n   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n",
                    "rendered": {
                      "text": "5) Execute\n      touch doc/mpc.texi; make distcheck\n   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n",
                      "markdown": "`5) Execute\n      touch doc/mpc.texi; make distcheck\n   This updates doc/version.texi and creates the tarball for distribution.\n6) Upload to GNU ftp server, see\n      https://www.gnu.org/prep/maintain/html_node/Automated-Upload-Procedure.html\n7) Update the web page on the server.\n8) Create a git tag:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 40,
                  "endLine": 4,
                  "endColumn": 45,
                  "snippet": {
                    "text": "Source code from the git repository\n-----------------------------------\n\nTo compile source code obtained from the git repository,\nmake sure you have installed the autoconf, automake and libtool packages.\nExecute:\n\n",
                    "rendered": {
                      "text": "Source code from the git repository\n-----------------------------------\n\nTo compile source code obtained from the git repository,\nmake sure you have installed the autoconf, automake and libtool packages.\nExecute:\n\n",
                      "markdown": "`Source code from the git repository\n-----------------------------------\n\nTo compile source code obtained from the git repository,\nmake sure you have installed the autoconf, automake and libtool packages.\nExecute:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/README.dev"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 20,
                  "endLine": 1,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Source code from the git repository\n-----------------------------------\n\nTo compile source code obtained from the git repository,\n",
                    "rendered": {
                      "text": "Source code from the git repository\n-----------------------------------\n\nTo compile source code obtained from the git repository,\n",
                      "markdown": "`Source code from the git repository\n-----------------------------------\n\nTo compile source code obtained from the git repository,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3777,
                  "startColumn": 30,
                  "endLine": 3777,
                  "endColumn": 34,
                  "snippet": {
                    "text": "For $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\nPlugging $k_x = 1/2$ and $k_y = 3$ into~\\eqref {eq:qfromz}, the error\nwhen computing~$\\appro {q^{1/24}}$ from this $\\appro z$ is bounded by\n",
                    "rendered": {
                      "text": "For $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\nPlugging $k_x = 1/2$ and $k_y = 3$ into~\\eqref {eq:qfromz}, the error\nwhen computing~$\\appro {q^{1/24}}$ from this $\\appro z$ is bounded by\n",
                      "markdown": "`For $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\nPlugging $k_x = 1/2$ and $k_y = 3$ into~\\eqref {eq:qfromz}, the error\nwhen computing~$\\appro {q^{1/24}}$ from this $\\appro z$ is bounded by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3775,
                  "startColumn": 68,
                  "endLine": 3776,
                  "snippet": {
                    "text": "nearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\nPlugging $k_x = 1/2$ and $k_y = 3$ into~\\eqref {eq:qfromz}, the error\n",
                    "rendered": {
                      "text": "nearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\nPlugging $k_x = 1/2$ and $k_y = 3$ into~\\eqref {eq:qfromz}, the error\n",
                      "markdown": "`nearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\nPlugging $k_x = 1/2$ and $k_y = 3$ into~\\eqref {eq:qfromz}, the error\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3775,
                  "startColumn": 22,
                  "endLine": 3775,
                  "endColumn": 26,
                  "snippet": {
                    "text": "nearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\n",
                    "rendered": {
                      "text": "nearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\n",
                      "markdown": "`nearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\nmost doubles the error by~\\eqref {eq:proprealdiv}, and rounding down we\nend up with an error in ulp of at most $k_y = 3$.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3772,
                  "startColumn": 21,
                  "endLine": 3772,
                  "endColumn": 25,
                  "snippet": {
                    "text": "exactly.\nWe compute $\\appro x = \\round (B / (2A))$ by dividing two representable\nnumbers with an error in ulp of at most $k_x = 1/2$ when rounding to\nnearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\n",
                    "rendered": {
                      "text": "exactly.\nWe compute $\\appro x = \\round (B / (2A))$ by dividing two representable\nnumbers with an error in ulp of at most $k_x = 1/2$ when rounding to\nnearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\n",
                      "markdown": "`exactly.\nWe compute $\\appro x = \\round (B / (2A))$ by dividing two representable\nnumbers with an error in ulp of at most $k_x = 1/2$ when rounding to\nnearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\ndown, with an error of at most \\ulp {1}. Dividing by the exact $2 A$ at\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3771,
                  "startColumn": 31,
                  "endLine": 3771,
                  "endColumn": 35,
                  "snippet": {
                    "text": "precision is large enough so that all occurring integers are represented\nexactly.\nWe compute $\\appro x = \\round (B / (2A))$ by dividing two representable\nnumbers with an error in ulp of at most $k_x = 1/2$ when rounding to\nnearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\n",
                    "rendered": {
                      "text": "precision is large enough so that all occurring integers are represented\nexactly.\nWe compute $\\appro x = \\round (B / (2A))$ by dividing two representable\nnumbers with an error in ulp of at most $k_x = 1/2$ when rounding to\nnearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\n",
                      "markdown": "`precision is large enough so that all occurring integers are represented\nexactly.\nWe compute $\\appro x = \\round (B / (2A))$ by dividing two representable\nnumbers with an error in ulp of at most $k_x = 1/2$ when rounding to\nnearest; in precision at least~$3$ the condition $|x| \\leq 5/8$ required\nin the previous section is satisfied automatically.\nFor $\\appro y$, first compute $\\round \\left( \\sqrt {|D|} \\right)$, rounded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3747,
                  "startColumn": 38,
                  "endLine": 3747,
                  "endColumn": 42,
                  "snippet": {
                    "text": "is up to a small constant factor about $\\appro y$, the value of\n$\\appro y$ is bounded by roughly the maximal admissible exponent, which\nis around $2^{64}$; so every multiple of $2^{\\Exp (\\appro y)}$ in the\nformul{\\ae} above amounts to a loss of at most $64$~bits of precision.\nIn this case, the series for $\\eta$ is essentially~$1$ and the value\nof~$\\eta$ is essentially $q^{1/24}$, which is almost indistinguishable\nfrom~$0$.\n",
                    "rendered": {
                      "text": "is up to a small constant factor about $\\appro y$, the value of\n$\\appro y$ is bounded by roughly the maximal admissible exponent, which\nis around $2^{64}$; so every multiple of $2^{\\Exp (\\appro y)}$ in the\nformul{\\ae} above amounts to a loss of at most $64$~bits of precision.\nIn this case, the series for $\\eta$ is essentially~$1$ and the value\nof~$\\eta$ is essentially $q^{1/24}$, which is almost indistinguishable\nfrom~$0$.\n",
                      "markdown": "`is up to a small constant factor about $\\appro y$, the value of\n$\\appro y$ is bounded by roughly the maximal admissible exponent, which\nis around $2^{64}$; so every multiple of $2^{\\Exp (\\appro y)}$ in the\nformul{\\ae} above amounts to a loss of at most $64$~bits of precision.\nIn this case, the series for $\\eta$ is essentially~$1$ and the value\nof~$\\eta$ is essentially $q^{1/24}$, which is almost indistinguishable\nfrom~$0$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3628,
                  "startColumn": 62,
                  "endLine": 3629,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This implies that\n$\\Exp (\\appro u) - \\Exp (\\appro y) \\in \\{ -2, -1 \\}$.\nAlso $|\\appro x| \\leq 5/8$ and $\\round (\\round (\\pi) / 12) \\leq 5/16$\nimply that $|\\appro v| \\leq \\round (25/128) \\leq 28/128 < 1/4$\nat precision~$3$ or higher (where $28$ is a representable floating point\nnumber above~$25$), or equivalently $\\Exp (\\appro v) \\leq -2$.\n\nWorking with an upper bound $\\appro u \\geq u$ and rounding $\\appro t$ up\n",
                    "rendered": {
                      "text": "This implies that\n$\\Exp (\\appro u) - \\Exp (\\appro y) \\in \\{ -2, -1 \\}$.\nAlso $|\\appro x| \\leq 5/8$ and $\\round (\\round (\\pi) / 12) \\leq 5/16$\nimply that $|\\appro v| \\leq \\round (25/128) \\leq 28/128 < 1/4$\nat precision~$3$ or higher (where $28$ is a representable floating point\nnumber above~$25$), or equivalently $\\Exp (\\appro v) \\leq -2$.\n\nWorking with an upper bound $\\appro u \\geq u$ and rounding $\\appro t$ up\n",
                      "markdown": "`This implies that\n$\\Exp (\\appro u) - \\Exp (\\appro y) \\in \\{ -2, -1 \\}$.\nAlso $|\\appro x| \\leq 5/8$ and $\\round (\\round (\\pi) / 12) \\leq 5/16$\nimply that $|\\appro v| \\leq \\round (25/128) \\leq 28/128 < 1/4$\nat precision~$3$ or higher (where $28$ is a representable floating point\nnumber above~$25$), or equivalently $\\Exp (\\appro v) \\leq -2$.\n\nWorking with an upper bound $\\appro u \\geq u$ and rounding $\\appro t$ up\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3624,
                  "startColumn": 40,
                  "endLine": 3624,
                  "endColumn": 44,
                  "snippet": {
                    "text": "as follows:\n$3 \\leq \\round (\\pi) \\leq 7/2$, so that\n$1/4 \\leq \\round (\\round (\\pi) / 12) \\leq 5/16 < 1/2$,\nand these bounds can only become tighter at higher precision.\nThis implies that\n$\\Exp (\\appro u) - \\Exp (\\appro y) \\in \\{ -2, -1 \\}$.\nAlso $|\\appro x| \\leq 5/8$ and $\\round (\\round (\\pi) / 12) \\leq 5/16$\n",
                    "rendered": {
                      "text": "as follows:\n$3 \\leq \\round (\\pi) \\leq 7/2$, so that\n$1/4 \\leq \\round (\\round (\\pi) / 12) \\leq 5/16 < 1/2$,\nand these bounds can only become tighter at higher precision.\nThis implies that\n$\\Exp (\\appro u) - \\Exp (\\appro y) \\in \\{ -2, -1 \\}$.\nAlso $|\\appro x| \\leq 5/8$ and $\\round (\\round (\\pi) / 12) \\leq 5/16$\n",
                      "markdown": "`as follows:\n$3 \\leq \\round (\\pi) \\leq 7/2$, so that\n$1/4 \\leq \\round (\\round (\\pi) / 12) \\leq 5/16 < 1/2$,\nand these bounds can only become tighter at higher precision.\nThis implies that\n$\\Exp (\\appro u) - \\Exp (\\appro y) \\in \\{ -2, -1 \\}$.\nAlso $|\\appro x| \\leq 5/8$ and $\\round (\\round (\\pi) / 12) \\leq 5/16$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3619,
                  "startColumn": 26,
                  "endLine": 3619,
                  "endColumn": 30,
                  "snippet": {
                    "text": "the analysis.)\n\nFor the next step we will want to express $\\Exp (\\appro u)$ in terms of\n$\\Exp (\\appro y)$. Already at precision~$3$ (and independently of the\nrounding mode), the constant $\\pi$ is bounded by representable numbers\nas follows:\n$3 \\leq \\round (\\pi) \\leq 7/2$, so that\n",
                    "rendered": {
                      "text": "the analysis.)\n\nFor the next step we will want to express $\\Exp (\\appro u)$ in terms of\n$\\Exp (\\appro y)$. Already at precision~$3$ (and independently of the\nrounding mode), the constant $\\pi$ is bounded by representable numbers\nas follows:\n$3 \\leq \\round (\\pi) \\leq 7/2$, so that\n",
                      "markdown": "`the analysis.)\n\nFor the next step we will want to express $\\Exp (\\appro u)$ in terms of\n$\\Exp (\\appro y)$. Already at precision~$3$ (and independently of the\nrounding mode), the constant $\\pi$ is bounded by representable numbers\nas follows:\n$3 \\leq \\round (\\pi) \\leq 7/2$, so that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3603,
                  "startColumn": 8,
                  "endLine": 3603,
                  "endColumn": 12,
                  "snippet": {
                    "text": "The rounded-down value of $\\pi$ is obtained with an error of \\ulp{1}.\nDivision by the exact constant~$12$ at most doubles the error in ulp\nby~\\eqref {eq:proprealdiv}, and the final rounding down results in an\nerror of at most \\ulp{3}. Multiplication by~$\\appro y$ and rounding down\nleads by~\\eqref {eq:proprealmul} to a total error of\n\\[\n\\error (\\appro u)\n",
                    "rendered": {
                      "text": "The rounded-down value of $\\pi$ is obtained with an error of \\ulp{1}.\nDivision by the exact constant~$12$ at most doubles the error in ulp\nby~\\eqref {eq:proprealdiv}, and the final rounding down results in an\nerror of at most \\ulp{3}. Multiplication by~$\\appro y$ and rounding down\nleads by~\\eqref {eq:proprealmul} to a total error of\n\\[\n\\error (\\appro u)\n",
                      "markdown": "`The rounded-down value of $\\pi$ is obtained with an error of \\ulp{1}.\nDivision by the exact constant~$12$ at most doubles the error in ulp\nby~\\eqref {eq:proprealdiv}, and the final rounding down results in an\nerror of at most \\ulp{3}. Multiplication by~$\\appro y$ and rounding down\nleads by~\\eqref {eq:proprealmul} to a total error of\n\\[\n\\error (\\appro u)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3601,
                  "startColumn": 35,
                  "endLine": 3601,
                  "endColumn": 39,
                  "snippet": {
                    "text": "$q^{1/24}$ is not, so it has to be computed by the generic algorithm.)\n\nThe rounded-down value of $\\pi$ is obtained with an error of \\ulp{1}.\nDivision by the exact constant~$12$ at most doubles the error in ulp\nby~\\eqref {eq:proprealdiv}, and the final rounding down results in an\nerror of at most \\ulp{3}. Multiplication by~$\\appro y$ and rounding down\nleads by~\\eqref {eq:proprealmul} to a total error of\n",
                    "rendered": {
                      "text": "$q^{1/24}$ is not, so it has to be computed by the generic algorithm.)\n\nThe rounded-down value of $\\pi$ is obtained with an error of \\ulp{1}.\nDivision by the exact constant~$12$ at most doubles the error in ulp\nby~\\eqref {eq:proprealdiv}, and the final rounding down results in an\nerror of at most \\ulp{3}. Multiplication by~$\\appro y$ and rounding down\nleads by~\\eqref {eq:proprealmul} to a total error of\n",
                      "markdown": "`$q^{1/24}$ is not, so it has to be computed by the generic algorithm.)\n\nThe rounded-down value of $\\pi$ is obtained with an error of \\ulp{1}.\nDivision by the exact constant~$12$ at most doubles the error in ulp\nby~\\eqref {eq:proprealdiv}, and the final rounding down results in an\nerror of at most \\ulp{3}. Multiplication by~$\\appro y$ and rounding down\nleads by~\\eqref {eq:proprealmul} to a total error of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3578,
                  "startColumn": 46,
                  "endLine": 3578,
                  "endColumn": 50,
                  "snippet": {
                    "text": "Since we are eventually interested in $z$ lying in the fundamental domain\nfor $\\Sl_2 (\\Z)$, we may assume $|x| \\leq 1/2$.\nAt precision larger than~$3$, it is reasonable to assume that\n$|\\appro x| \\leq 5/8$, which should be checked at the beginning of the\nalgorithm.\nSo that the algorithm really obtains an upper bound\n$\\appro u \\geq u$, we also need to assume that $\\appro y$ has been\n",
                    "rendered": {
                      "text": "Since we are eventually interested in $z$ lying in the fundamental domain\nfor $\\Sl_2 (\\Z)$, we may assume $|x| \\leq 1/2$.\nAt precision larger than~$3$, it is reasonable to assume that\n$|\\appro x| \\leq 5/8$, which should be checked at the beginning of the\nalgorithm.\nSo that the algorithm really obtains an upper bound\n$\\appro u \\geq u$, we also need to assume that $\\appro y$ has been\n",
                      "markdown": "`Since we are eventually interested in $z$ lying in the fundamental domain\nfor $\\Sl_2 (\\Z)$, we may assume $|x| \\leq 1/2$.\nAt precision larger than~$3$, it is reasonable to assume that\n$|\\appro x| \\leq 5/8$, which should be checked at the beginning of the\nalgorithm.\nSo that the algorithm really obtains an upper bound\n$\\appro u \\geq u$, we also need to assume that $\\appro y$ has been\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3576,
                  "startColumn": 47,
                  "endLine": 3577,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\\]\n\nSince we are eventually interested in $z$ lying in the fundamental domain\nfor $\\Sl_2 (\\Z)$, we may assume $|x| \\leq 1/2$.\nAt precision larger than~$3$, it is reasonable to assume that\n$|\\appro x| \\leq 5/8$, which should be checked at the beginning of the\nalgorithm.\nSo that the algorithm really obtains an upper bound\n",
                    "rendered": {
                      "text": "\\]\n\nSince we are eventually interested in $z$ lying in the fundamental domain\nfor $\\Sl_2 (\\Z)$, we may assume $|x| \\leq 1/2$.\nAt precision larger than~$3$, it is reasonable to assume that\n$|\\appro x| \\leq 5/8$, which should be checked at the beginning of the\nalgorithm.\nSo that the algorithm really obtains an upper bound\n",
                      "markdown": "`\\]\n\nSince we are eventually interested in $z$ lying in the fundamental domain\nfor $\\Sl_2 (\\Z)$, we may assume $|x| \\leq 1/2$.\nAt precision larger than~$3$, it is reasonable to assume that\n$|\\appro x| \\leq 5/8$, which should be checked at the beginning of the\nalgorithm.\nSo that the algorithm really obtains an upper bound\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3546,
                  "startColumn": 10,
                  "endLine": 3546,
                  "endColumn": 14,
                  "snippet": {
                    "text": "the next section) the argument~$z$ may itself be the result of a\ncomputation, we analyse more generally the case that $z = x + i y$ is given\nby an approximation $\\appro z = \\appro x + i \\appro y$ with $\\appro x$,\n$\\appro y$ at the same precision~$p$ and with respective errors of\n$k_x \\Ulp (\\appro x)$ and $k_y \\Ulp (\\appro y)$.\n\nSince deriving error bounds for even the rather simple formula\n",
                    "rendered": {
                      "text": "the next section) the argument~$z$ may itself be the result of a\ncomputation, we analyse more generally the case that $z = x + i y$ is given\nby an approximation $\\appro z = \\appro x + i \\appro y$ with $\\appro x$,\n$\\appro y$ at the same precision~$p$ and with respective errors of\n$k_x \\Ulp (\\appro x)$ and $k_y \\Ulp (\\appro y)$.\n\nSince deriving error bounds for even the rather simple formula\n",
                      "markdown": "`the next section) the argument~$z$ may itself be the result of a\ncomputation, we analyse more generally the case that $z = x + i y$ is given\nby an approximation $\\appro z = \\appro x + i \\appro y$ with $\\appro x$,\n$\\appro y$ at the same precision~$p$ and with respective errors of\n$k_x \\Ulp (\\appro x)$ and $k_y \\Ulp (\\appro y)$.\n\nSince deriving error bounds for even the rather simple formula\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3430,
                  "startColumn": 31,
                  "endLine": 3430,
                  "endColumn": 35,
                  "snippet": {
                    "text": "this with the ball $(a, 0)$ we obtain a ball containing $\\AGM (a, b)$.\nIf this can be rounded to a unique MPC number with the desired rounding\nmode, then we have correctly computed $\\texttt {mpc\\_agm}$; otherwise we\nneed to repeat the computations at a higher precision, and the exponent\nof the radius gives an indication on the necessary precision increase.\n\nIn practice convergence of the sequences of $\\appro {a_n}$ and\n",
                    "rendered": {
                      "text": "this with the ball $(a, 0)$ we obtain a ball containing $\\AGM (a, b)$.\nIf this can be rounded to a unique MPC number with the desired rounding\nmode, then we have correctly computed $\\texttt {mpc\\_agm}$; otherwise we\nneed to repeat the computations at a higher precision, and the exponent\nof the radius gives an indication on the necessary precision increase.\n\nIn practice convergence of the sequences of $\\appro {a_n}$ and\n",
                      "markdown": "`this with the ball $(a, 0)$ we obtain a ball containing $\\AGM (a, b)$.\nIf this can be rounded to a unique MPC number with the desired rounding\nmode, then we have correctly computed $\\texttt {mpc\\_agm}$; otherwise we\nneed to repeat the computations at a higher precision, and the exponent\nof the radius gives an indication on the necessary precision increase.\n\nIn practice convergence of the sequences of $\\appro {a_n}$ and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3386,
                  "startColumn": 24,
                  "endLine": 3386,
                  "endColumn": 28,
                  "snippet": {
                    "text": "would end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\nand then continue with the AGM iterations.\n\nAfter~$n$ iterations starting from~$1$ and a ball around $b_0$, we end\n",
                    "rendered": {
                      "text": "would end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\nand then continue with the AGM iterations.\n\nAfter~$n$ iterations starting from~$1$ and a ball around $b_0$, we end\n",
                      "markdown": "`would end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\nand then continue with the AGM iterations.\n\nAfter~$n$ iterations starting from~$1$ and a ball around $b_0$, we end\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3319,
                  "startColumn": 31,
                  "endLine": 3319,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\end {tikzpicture}\n\\end {center}\n\nTo correctly evaluate functions at branch cuts, it may be useful to examine\nhow complex balls are positioned with respect to the axes.\nAs already mentioned above, a ball $(c, r)$ contains the origin if and only\nif $r \\geq 1$.\n",
                    "rendered": {
                      "text": "\\end {tikzpicture}\n\\end {center}\n\nTo correctly evaluate functions at branch cuts, it may be useful to examine\nhow complex balls are positioned with respect to the axes.\nAs already mentioned above, a ball $(c, r)$ contains the origin if and only\nif $r \\geq 1$.\n",
                      "markdown": "`\\end {tikzpicture}\n\\end {center}\n\nTo correctly evaluate functions at branch cuts, it may be useful to examine\nhow complex balls are positioned with respect to the axes.\nAs already mentioned above, a ball $(c, r)$ contains the origin if and only\nif $r \\geq 1$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3301,
                  "startColumn": 11,
                  "endLine": 3301,
                  "endColumn": 15,
                  "snippet": {
                    "text": "which often depend on the decomposition of a complex number into real and\nimaginary parts, are probably also made more complicated.\nThe biggest drawback is that intervals centred in~$0$ may not be\nrepresented at all. More generally, intervals containing~$0$ are also\nnot meaningful: They correspond to balls with $r \\geq 1$, which means that\neven the most significant digit of the centre is uncertain.\n\n",
                    "rendered": {
                      "text": "which often depend on the decomposition of a complex number into real and\nimaginary parts, are probably also made more complicated.\nThe biggest drawback is that intervals centred in~$0$ may not be\nrepresented at all. More generally, intervals containing~$0$ are also\nnot meaningful: They correspond to balls with $r \\geq 1$, which means that\neven the most significant digit of the centre is uncertain.\n\n",
                      "markdown": "`which often depend on the decomposition of a complex number into real and\nimaginary parts, are probably also made more complicated.\nThe biggest drawback is that intervals centred in~$0$ may not be\nrepresented at all. More generally, intervals containing~$0$ are also\nnot meaningful: They correspond to balls with $r \\geq 1$, which means that\neven the most significant digit of the centre is uncertain.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3208,
                  "startColumn": 36,
                  "endLine": 3208,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\\]\nof~\\eqref {eq:agmk1}, which in turn depends not only on the input data,\nbut also on the working precision of the first AGM iteration. It is not\nenough to carry out this computation at arbitrarily low precision:\nSince $\\appro {b_0}$ is computed as $a / b$ or $b / a$ depending on the\nrespective sizes of the numbers and it is rounded, the computation\nof $\\Re (\\appro {a_1})$ requires double rounding, which may even lead to a\n",
                    "rendered": {
                      "text": "\\]\nof~\\eqref {eq:agmk1}, which in turn depends not only on the input data,\nbut also on the working precision of the first AGM iteration. It is not\nenough to carry out this computation at arbitrarily low precision:\nSince $\\appro {b_0}$ is computed as $a / b$ or $b / a$ depending on the\nrespective sizes of the numbers and it is rounded, the computation\nof $\\Re (\\appro {a_1})$ requires double rounding, which may even lead to a\n",
                      "markdown": "`\\]\nof~\\eqref {eq:agmk1}, which in turn depends not only on the input data,\nbut also on the working precision of the first AGM iteration. It is not\nenough to carry out this computation at arbitrarily low precision:\nSince $\\appro {b_0}$ is computed as $a / b$ or $b / a$ depending on the\nrespective sizes of the numbers and it is rounded, the computation\nof $\\Re (\\appro {a_1})$ requires double rounding, which may even lead to a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3184,
                  "startColumn": 75,
                  "endLine": 3185,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\\leq \\frac {4}{3} \\, \\left( 2^{\\frac {n+k_1+3}{2}-p} + 2^{-(N+2)} \\right)\n\\]\nfor $N \\geq 2$.\nSo after $n = B (N, \\appro {b_0}, \\appro {a_1})$ steps of the AGM iteration\nat a working precision of\n$p \\geq N + \\frac {n + k_1 + 7}{2} \\geq \\frac {n + k_1 + 10}{2}$,\nwe obtain $\\appro {a_n}$ which approximates $\\AGM (1, b_0)$ with a\nrelative error bounded by $\\frac {2}{3} \\cdot 2^{-N}$.\n",
                    "rendered": {
                      "text": "\\leq \\frac {4}{3} \\, \\left( 2^{\\frac {n+k_1+3}{2}-p} + 2^{-(N+2)} \\right)\n\\]\nfor $N \\geq 2$.\nSo after $n = B (N, \\appro {b_0}, \\appro {a_1})$ steps of the AGM iteration\nat a working precision of\n$p \\geq N + \\frac {n + k_1 + 7}{2} \\geq \\frac {n + k_1 + 10}{2}$,\nwe obtain $\\appro {a_n}$ which approximates $\\AGM (1, b_0)$ with a\nrelative error bounded by $\\frac {2}{3} \\cdot 2^{-N}$.\n",
                      "markdown": "`\\leq \\frac {4}{3} \\, \\left( 2^{\\frac {n+k_1+3}{2}-p} + 2^{-(N+2)} \\right)\n\\]\nfor $N \\geq 2$.\nSo after $n = B (N, \\appro {b_0}, \\appro {a_1})$ steps of the AGM iteration\nat a working precision of\n$p \\geq N + \\frac {n + k_1 + 7}{2} \\geq \\frac {n + k_1 + 10}{2}$,\nwe obtain $\\appro {a_n}$ which approximates $\\AGM (1, b_0)$ with a\nrelative error bounded by $\\frac {2}{3} \\cdot 2^{-N}$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3131,
                  "startColumn": 12,
                  "endLine": 3131,
                  "endColumn": 16,
                  "snippet": {
                    "text": "to $\\Re (\\appro {a_1})$ satisfies\n$(1 + \\Re (\\appro {b_0})) / 2 > 31/128$ and\n$\\Re (\\appro {b_0}) > -33/64$.\nIn precision at least~$5$, the value $-34/64$\nis representable and smaller than~$-33/64$ so that the unrounded\nvalue satisfies\n$\\Re (b_0) > -17/32$,\n",
                    "rendered": {
                      "text": "to $\\Re (\\appro {a_1})$ satisfies\n$(1 + \\Re (\\appro {b_0})) / 2 > 31/128$ and\n$\\Re (\\appro {b_0}) > -33/64$.\nIn precision at least~$5$, the value $-34/64$\nis representable and smaller than~$-33/64$ so that the unrounded\nvalue satisfies\n$\\Re (b_0) > -17/32$,\n",
                      "markdown": "`to $\\Re (\\appro {a_1})$ satisfies\n$(1 + \\Re (\\appro {b_0})) / 2 > 31/128$ and\n$\\Re (\\appro {b_0}) > -33/64$.\nIn precision at least~$5$, the value $-34/64$\nis representable and smaller than~$-33/64$ so that the unrounded\nvalue satisfies\n$\\Re (b_0) > -17/32$,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3126,
                  "startColumn": 12,
                  "endLine": 3126,
                  "endColumn": 16,
                  "snippet": {
                    "text": "$|\\Re (\\appro {a_1})| \\geq 1/4$;\nas it is known to be positive in fact\n$\\Re (\\appro {a_1}) \\geq 1/4$.\nIn precision at least~$5$, the value $1/4 \\cdot 31/32$\nis representable and smaller than~$1/4$ so that the value rounded\nto $\\Re (\\appro {a_1})$ satisfies\n$(1 + \\Re (\\appro {b_0})) / 2 > 31/128$ and\n",
                    "rendered": {
                      "text": "$|\\Re (\\appro {a_1})| \\geq 1/4$;\nas it is known to be positive in fact\n$\\Re (\\appro {a_1}) \\geq 1/4$.\nIn precision at least~$5$, the value $1/4 \\cdot 31/32$\nis representable and smaller than~$1/4$ so that the value rounded\nto $\\Re (\\appro {a_1})$ satisfies\n$(1 + \\Re (\\appro {b_0})) / 2 > 31/128$ and\n",
                      "markdown": "`$|\\Re (\\appro {a_1})| \\geq 1/4$;\nas it is known to be positive in fact\n$\\Re (\\appro {a_1}) \\geq 1/4$.\nIn precision at least~$5$, the value $1/4 \\cdot 31/32$\nis representable and smaller than~$1/4$ so that the value rounded\nto $\\Re (\\appro {a_1})$ satisfies\n$(1 + \\Re (\\appro {b_0})) / 2 > 31/128$ and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3107,
                  "startColumn": 39,
                  "endLine": 3107,
                  "endColumn": 43,
                  "snippet": {
                    "text": "In the remaining case, since we are not in~(a), at least one of\n$\\Exp \\left( \\Re (\\appro {b_0}) \\right)$ and\n$\\Exp \\left( \\Im (\\appro {b_0}) \\right)$,\nor equivalently by~\\eqref {eq:agmexpb0} at least one of\n$\\Exp (\\Re (b_0))$ and $\\Exp (\\Im (b_0))$\nis~$0$ or larger, so that\n\\[\n",
                    "rendered": {
                      "text": "In the remaining case, since we are not in~(a), at least one of\n$\\Exp \\left( \\Re (\\appro {b_0}) \\right)$ and\n$\\Exp \\left( \\Im (\\appro {b_0}) \\right)$,\nor equivalently by~\\eqref {eq:agmexpb0} at least one of\n$\\Exp (\\Re (b_0))$ and $\\Exp (\\Im (b_0))$\nis~$0$ or larger, so that\n\\[\n",
                      "markdown": "`In the remaining case, since we are not in~(a), at least one of\n$\\Exp \\left( \\Re (\\appro {b_0}) \\right)$ and\n$\\Exp \\left( \\Im (\\appro {b_0}) \\right)$,\nor equivalently by~\\eqref {eq:agmexpb0} at least one of\n$\\Exp (\\Re (b_0))$ and $\\Exp (\\Im (b_0))$\nis~$0$ or larger, so that\n\\[\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3104,
                  "startColumn": 47,
                  "endLine": 3104,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\\end {equation}\n\n\\item\nIn the remaining case, since we are not in~(a), at least one of\n$\\Exp \\left( \\Re (\\appro {b_0}) \\right)$ and\n$\\Exp \\left( \\Im (\\appro {b_0}) \\right)$,\nor equivalently by~\\eqref {eq:agmexpb0} at least one of\n",
                    "rendered": {
                      "text": "\\end {equation}\n\n\\item\nIn the remaining case, since we are not in~(a), at least one of\n$\\Exp \\left( \\Re (\\appro {b_0}) \\right)$ and\n$\\Exp \\left( \\Im (\\appro {b_0}) \\right)$,\nor equivalently by~\\eqref {eq:agmexpb0} at least one of\n",
                      "markdown": "`\\end {equation}\n\n\\item\nIn the remaining case, since we are not in~(a), at least one of\n$\\Exp \\left( \\Re (\\appro {b_0}) \\right)$ and\n$\\Exp \\left( \\Im (\\appro {b_0}) \\right)$,\nor equivalently by~\\eqref {eq:agmexpb0} at least one of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2758,
                  "startColumn": 12,
                  "endLine": 2758,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Unlike Newton iterations, AGM iterations are not auto-correcting:\ndue to rounding errors, we lose a constant number of bits per iteration;\nso to reach the desired precision of $N$ bits, we need to carry out all\ncomputations at a working precision of\n$p \\in N + O \\left( B (N, \\appro {b_0}, \\appro {a_1}) \\right)$.\nThe following discussion provides explicit bounds for all these quantities.\n\n",
                    "rendered": {
                      "text": "Unlike Newton iterations, AGM iterations are not auto-correcting:\ndue to rounding errors, we lose a constant number of bits per iteration;\nso to reach the desired precision of $N$ bits, we need to carry out all\ncomputations at a working precision of\n$p \\in N + O \\left( B (N, \\appro {b_0}, \\appro {a_1}) \\right)$.\nThe following discussion provides explicit bounds for all these quantities.\n\n",
                      "markdown": "`Unlike Newton iterations, AGM iterations are not auto-correcting:\ndue to rounding errors, we lose a constant number of bits per iteration;\nso to reach the desired precision of $N$ bits, we need to carry out all\ncomputations at a working precision of\n$p \\in N + O \\left( B (N, \\appro {b_0}, \\appro {a_1}) \\right)$.\nThe following discussion provides explicit bounds for all these quantities.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2679,
                  "startColumn": 41,
                  "endLine": 2679,
                  "endColumn": 45,
                  "snippet": {
                    "text": "we have $y = \\round (1/2 + x/2)$.\nRemember that $-1 < x < 1$. If $-1/2 \\leq x < 1$, then $x/2 \\geq -1/4$ and\n$y \\geq 1/4$, and $\\Exp (y) \\geq \\Exp (x/2)$, and from\n\\S\\ref{sssec:propadd} the error on $y$ is at most 2 ulp (one from the\nerror on $x/2$, and one from the addition).\nIf on the other hand $-1 < x < -1/2$, then $1/2 + x/2$ is exact by\nSterbenz's lemma, and the only error\n",
                    "rendered": {
                      "text": "we have $y = \\round (1/2 + x/2)$.\nRemember that $-1 < x < 1$. If $-1/2 \\leq x < 1$, then $x/2 \\geq -1/4$ and\n$y \\geq 1/4$, and $\\Exp (y) \\geq \\Exp (x/2)$, and from\n\\S\\ref{sssec:propadd} the error on $y$ is at most 2 ulp (one from the\nerror on $x/2$, and one from the addition).\nIf on the other hand $-1 < x < -1/2$, then $1/2 + x/2$ is exact by\nSterbenz's lemma, and the only error\n",
                      "markdown": "`we have $y = \\round (1/2 + x/2)$.\nRemember that $-1 < x < 1$. If $-1/2 \\leq x < 1$, then $x/2 \\geq -1/4$ and\n$y \\geq 1/4$, and $\\Exp (y) \\geq \\Exp (x/2)$, and from\n\\S\\ref{sssec:propadd} the error on $y$ is at most 2 ulp (one from the\nerror on $x/2$, and one from the addition).\nIf on the other hand $-1 < x < -1/2$, then $1/2 + x/2$ is exact by\nSterbenz's lemma, and the only error\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2666,
                  "startColumn": 52,
                  "endLine": 2666,
                  "endColumn": 56,
                  "snippet": {
                    "text": "by $(\\sqrt 2)^3 \\approx 2.83$.\nWe let $\\corr {a_1} = 1/2 + \\corr {b_0}/2$ and\n$\\appro {a_1} = \\round ( 1/2 + \\appro{b_0}/2 )$.\nThe imaginary part of $\\appro {a_1}$ has an error of at most \\ulp{1},\nand the same holds for the real part if $\\Re (\\appro {b_0}) = 0$\nor equivalently $\\Re (b_0) = 0$;\nthe real part of $\\appro {a_1}$\n",
                    "rendered": {
                      "text": "by $(\\sqrt 2)^3 \\approx 2.83$.\nWe let $\\corr {a_1} = 1/2 + \\corr {b_0}/2$ and\n$\\appro {a_1} = \\round ( 1/2 + \\appro{b_0}/2 )$.\nThe imaginary part of $\\appro {a_1}$ has an error of at most \\ulp{1},\nand the same holds for the real part if $\\Re (\\appro {b_0}) = 0$\nor equivalently $\\Re (b_0) = 0$;\nthe real part of $\\appro {a_1}$\n",
                      "markdown": "`by $(\\sqrt 2)^3 \\approx 2.83$.\nWe let $\\corr {a_1} = 1/2 + \\corr {b_0}/2$ and\n$\\appro {a_1} = \\round ( 1/2 + \\appro{b_0}/2 )$.\nThe imaginary part of $\\appro {a_1}$ has an error of at most \\ulp{1},\nand the same holds for the real part if $\\Re (\\appro {b_0}) = 0$\nor equivalently $\\Re (b_0) = 0$;\nthe real part of $\\appro {a_1}$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2640,
                  "startColumn": 20,
                  "endLine": 2640,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\nWe multiply this value by the exact~$a$; applying \\eqref {eq:proprealmul}\nwith $k_1 = 3$ and $k_2 = 0$ and taking the final rounding into account\nleads to an error of at most~\\ulp {7} for the real and for the imaginary\nparts of the complex AGM.\n\n\n",
                    "rendered": {
                      "text": "\nWe multiply this value by the exact~$a$; applying \\eqref {eq:proprealmul}\nwith $k_1 = 3$ and $k_2 = 0$ and taking the final rounding into account\nleads to an error of at most~\\ulp {7} for the real and for the imaginary\nparts of the complex AGM.\n\n\n",
                      "markdown": "`\nWe multiply this value by the exact~$a$; applying \\eqref {eq:proprealmul}\nwith $k_1 = 3$ and $k_2 = 0$ and taking the final rounding into account\nleads to an error of at most~\\ulp {7} for the real and for the imaginary\nparts of the complex AGM.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2635,
                  "startColumn": 2,
                  "endLine": 2635,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\\leq 2 \\cdot 2^{\\Exp \\left( \\round \\left(\n   \\AGM \\left( 1, \\appro {b_0} \\right) \\right) \\right) - p}\n\\]\nof at most~\\ulp {2} of the rounded value, and the final rounding of the\n\\texttt {mpfr\\_agm} function leads to a total error bounded by~\\ulp {3}.\n\nWe multiply this value by the exact~$a$; applying \\eqref {eq:proprealmul}\n",
                    "rendered": {
                      "text": "\\leq 2 \\cdot 2^{\\Exp \\left( \\round \\left(\n   \\AGM \\left( 1, \\appro {b_0} \\right) \\right) \\right) - p}\n\\]\nof at most~\\ulp {2} of the rounded value, and the final rounding of the\n\\texttt {mpfr\\_agm} function leads to a total error bounded by~\\ulp {3}.\n\nWe multiply this value by the exact~$a$; applying \\eqref {eq:proprealmul}\n",
                      "markdown": "`\\leq 2 \\cdot 2^{\\Exp \\left( \\round \\left(\n   \\AGM \\left( 1, \\appro {b_0} \\right) \\right) \\right) - p}\n\\]\nof at most~\\ulp {2} of the rounded value, and the final rounding of the\n\\texttt {mpfr\\_agm} function leads to a total error bounded by~\\ulp {3}.\n\nWe multiply this value by the exact~$a$; applying \\eqref {eq:proprealmul}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2622,
                  "startColumn": 24,
                  "endLine": 2622,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\\[\n\\AGM (1, b_0) \\geq (1 - \\epsilon) \\AGM \\left( 1, \\appro {b_0} \\right).\n\\]\nSo the relative error of at most $\\epsilon$ in the input $\\appro {b_0}$\nis preserved by the AGM.\n\nBy Proposition~\\ref {prop:relerror} applied to non-representable numbers\n",
                    "rendered": {
                      "text": "\\[\n\\AGM (1, b_0) \\geq (1 - \\epsilon) \\AGM \\left( 1, \\appro {b_0} \\right).\n\\]\nSo the relative error of at most $\\epsilon$ in the input $\\appro {b_0}$\nis preserved by the AGM.\n\nBy Proposition~\\ref {prop:relerror} applied to non-representable numbers\n",
                      "markdown": "`\\[\n\\AGM (1, b_0) \\geq (1 - \\epsilon) \\AGM \\left( 1, \\appro {b_0} \\right).\n\\]\nSo the relative error of at most $\\epsilon$ in the input $\\appro {b_0}$\nis preserved by the AGM.\n\nBy Proposition~\\ref {prop:relerror} applied to non-representable numbers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2602,
                  "startColumn": 48,
                  "endLine": 2602,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\\paragraph {Warm-up --- a note on angle~$0$.}\n\nAs said, when the angle between $a$ and $b$ is~$0$, which is immediately\ndetected from $\\Im (\\appro {b_0}) = 0$ (computed at any precision),\nthen $\\AGM (a, b) = a \\AGM (1, b_0)$ with a real number $0 < b_0 < 1$.\nWe need to consider the error induced by computing\n$\\round \\left( a \\cdot \\round \\left( \\AGM (1, \\appro {b_0}) \\right) \\right)$\n",
                    "rendered": {
                      "text": "\\paragraph {Warm-up --- a note on angle~$0$.}\n\nAs said, when the angle between $a$ and $b$ is~$0$, which is immediately\ndetected from $\\Im (\\appro {b_0}) = 0$ (computed at any precision),\nthen $\\AGM (a, b) = a \\AGM (1, b_0)$ with a real number $0 < b_0 < 1$.\nWe need to consider the error induced by computing\n$\\round \\left( a \\cdot \\round \\left( \\AGM (1, \\appro {b_0}) \\right) \\right)$\n",
                      "markdown": "`\\paragraph {Warm-up --- a note on angle~$0$.}\n\nAs said, when the angle between $a$ and $b$ is~$0$, which is immediately\ndetected from $\\Im (\\appro {b_0}) = 0$ (computed at any precision),\nthen $\\AGM (a, b) = a \\AGM (1, b_0)$ with a real number $0 < b_0 < 1$.\nWe need to consider the error induced by computing\n$\\round \\left( a \\cdot \\round \\left( \\AGM (1, \\appro {b_0}) \\right) \\right)$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2593,
                  "startColumn": 52,
                  "endLine": 2593,
                  "endColumn": 56,
                  "snippet": {
                    "text": "towards~$0$,\nwhich ensures $\\left| \\Re (\\appro {b_0}) \\right| < 1$\nand $| \\appro {b_0} | \\leq 1$\nwith absolute errors of the real and imaginary parts at most \\ulp {1}.\nIn the following, relative errors will be most convenient to work with;\nby Proposition~\\ref {prop:comabstorelerror} we have\n$\\relerror (\\appro {b_0}) \\leq 2^{1-p}$, where $p \\geq 2$ is the working precision.\n",
                    "rendered": {
                      "text": "towards~$0$,\nwhich ensures $\\left| \\Re (\\appro {b_0}) \\right| < 1$\nand $| \\appro {b_0} | \\leq 1$\nwith absolute errors of the real and imaginary parts at most \\ulp {1}.\nIn the following, relative errors will be most convenient to work with;\nby Proposition~\\ref {prop:comabstorelerror} we have\n$\\relerror (\\appro {b_0}) \\leq 2^{1-p}$, where $p \\geq 2$ is the working precision.\n",
                      "markdown": "`towards~$0$,\nwhich ensures $\\left| \\Re (\\appro {b_0}) \\right| < 1$\nand $| \\appro {b_0} | \\leq 1$\nwith absolute errors of the real and imaginary parts at most \\ulp {1}.\nIn the following, relative errors will be most convenient to work with;\nby Proposition~\\ref {prop:comabstorelerror} we have\n$\\relerror (\\appro {b_0}) \\leq 2^{1-p}$, where $p \\geq 2$ is the working precision.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2588,
                  "startColumn": 35,
                  "endLine": 2588,
                  "endColumn": 39,
                  "snippet": {
                    "text": "So in the following, we analyse the computation of $\\AGM (1, \\appro {b_0})$\nwith\n$\\appro {b_0} = \\round (\\corr {b_0})$\nfor $b_0$ in the unit disk centered at the origin (except $-1$ and $1$),\nwhere the real and imaginary parts of $\\appro {b_0}$ are rounded\ntowards~$0$,\nwhich ensures $\\left| \\Re (\\appro {b_0}) \\right| < 1$\n",
                    "rendered": {
                      "text": "So in the following, we analyse the computation of $\\AGM (1, \\appro {b_0})$\nwith\n$\\appro {b_0} = \\round (\\corr {b_0})$\nfor $b_0$ in the unit disk centered at the origin (except $-1$ and $1$),\nwhere the real and imaginary parts of $\\appro {b_0}$ are rounded\ntowards~$0$,\nwhich ensures $\\left| \\Re (\\appro {b_0}) \\right| < 1$\n",
                      "markdown": "`So in the following, we analyse the computation of $\\AGM (1, \\appro {b_0})$\nwith\n$\\appro {b_0} = \\round (\\corr {b_0})$\nfor $b_0$ in the unit disk centered at the origin (except $-1$ and $1$),\nwhere the real and imaginary parts of $\\appro {b_0}$ are rounded\ntowards~$0$,\nwhich ensures $\\left| \\Re (\\appro {b_0}) \\right| < 1$\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2548,
                  "startColumn": 52,
                  "endLine": 2549,
                  "endColumn": 3,
                  "snippet": {
                    "text": "and geometric means $(b_n)$\nby $\\corr {a_0} = a$, $\\corr {b_0} = b$,\n$\\corr {a_{n+1}} = \\frac {\\corr {a_n} + \\corr {b_n}}{2}$ and\n$\\corr {b_{n+1}} = \\sqrt {\\corr {a_n} \\corr {b_n}}$.\nAt each step, there is a choice of sign for the square root.\nIf $\\corr {a_n}$ and $\\corr {b_n}$ form an (unoriented) angle\ndifferent from $0$ and $\\pi$, then\nthey define a two-dimensional pointed cone in the complex plane.\n",
                    "rendered": {
                      "text": "and geometric means $(b_n)$\nby $\\corr {a_0} = a$, $\\corr {b_0} = b$,\n$\\corr {a_{n+1}} = \\frac {\\corr {a_n} + \\corr {b_n}}{2}$ and\n$\\corr {b_{n+1}} = \\sqrt {\\corr {a_n} \\corr {b_n}}$.\nAt each step, there is a choice of sign for the square root.\nIf $\\corr {a_n}$ and $\\corr {b_n}$ form an (unoriented) angle\ndifferent from $0$ and $\\pi$, then\nthey define a two-dimensional pointed cone in the complex plane.\n",
                      "markdown": "`and geometric means $(b_n)$\nby $\\corr {a_0} = a$, $\\corr {b_0} = b$,\n$\\corr {a_{n+1}} = \\frac {\\corr {a_n} + \\corr {b_n}}{2}$ and\n$\\corr {b_{n+1}} = \\sqrt {\\corr {a_n} \\corr {b_n}}$.\nAt each step, there is a choice of sign for the square root.\nIf $\\corr {a_n}$ and $\\corr {b_n}$ form an (unoriented) angle\ndifferent from $0$ and $\\pi$, then\nthey define a two-dimensional pointed cone in the complex plane.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2514,
                  "startColumn": 58,
                  "endLine": 2514,
                  "endColumn": 62,
                  "snippet": {
                    "text": "$n_k = 2^{2 e_k} \\round (m_k)$ with the integer\n$m_k = (x_k')^2 + 2^{2 d_k} (y_k')^2$.\nIf any of the exponent differences satisfies $d_k \\leq p$, then\n$m_k < 2^{4 p} \\leq 2^{p'}$, and $n_k$ is computed exactly at precision~$p'$,\na contradiction.\n\nSo $d_1$, $d_2 > p$. The integer $m_k$, read from the lowest to the most\n",
                    "rendered": {
                      "text": "$n_k = 2^{2 e_k} \\round (m_k)$ with the integer\n$m_k = (x_k')^2 + 2^{2 d_k} (y_k')^2$.\nIf any of the exponent differences satisfies $d_k \\leq p$, then\n$m_k < 2^{4 p} \\leq 2^{p'}$, and $n_k$ is computed exactly at precision~$p'$,\na contradiction.\n\nSo $d_1$, $d_2 > p$. The integer $m_k$, read from the lowest to the most\n",
                      "markdown": "`$n_k = 2^{2 e_k} \\round (m_k)$ with the integer\n$m_k = (x_k')^2 + 2^{2 d_k} (y_k')^2$.\nIf any of the exponent differences satisfies $d_k \\leq p$, then\n$m_k < 2^{4 p} \\leq 2^{p'}$, and $n_k$ is computed exactly at precision~$p'$,\na contradiction.\n\nSo $d_1$, $d_2 > p$. The integer $m_k$, read from the lowest to the most\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2505,
                  "startColumn": 15,
                  "endLine": 2505,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nIf any of $x_1$, $y_1$, $x_2$ or $y_2$ equals~$0$, then the algorithm has\neither finished in the second step, or the corresponding norm is computed\nexactly already at precision $2p < p'$, a contradiction.\nSo the case of interest is that these four input values are non-zero.\nThen write $z_k = 2^{e_k} (x_k' + i 2^{d_k} y_k')$ with integers\n$x_k'$ and $y_k'$ satisfying $2^{p-1} \\leq x_k', y_k' < 2^p$, and\n",
                    "rendered": {
                      "text": "\nIf any of $x_1$, $y_1$, $x_2$ or $y_2$ equals~$0$, then the algorithm has\neither finished in the second step, or the corresponding norm is computed\nexactly already at precision $2p < p'$, a contradiction.\nSo the case of interest is that these four input values are non-zero.\nThen write $z_k = 2^{e_k} (x_k' + i 2^{d_k} y_k')$ with integers\n$x_k'$ and $y_k'$ satisfying $2^{p-1} \\leq x_k', y_k' < 2^p$, and\n",
                      "markdown": "`\nIf any of $x_1$, $y_1$, $x_2$ or $y_2$ equals~$0$, then the algorithm has\neither finished in the second step, or the corresponding norm is computed\nexactly already at precision $2p < p'$, a contradiction.\nSo the case of interest is that these four input values are non-zero.\nThen write $z_k = 2^{e_k} (x_k' + i 2^{d_k} y_k')$ with integers\n$x_k'$ and $y_k'$ satisfying $2^{p-1} \\leq x_k', y_k' < 2^p$, and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2478,
                  "startColumn": 45,
                  "endLine": 2478,
                  "endColumn": 49,
                  "snippet": {
                    "text": "$x_1$ and $x_2$, and analogously if $x_1 = x_2$.\n\\item\nOtherwise, compute $n_1 = \\round (x_1^2 + y_1^2)$ and\n$n_2 = \\round (x_2^2 + y_2^2)$, rounded down, at low precision.\nIf $n_1 < n_2$, then $|z_1| < |z_2|$;\nif $n_1 > n_2$, then $|z_1| > |z_2|$.\nThe remaining case is $n_1 = n_2$.\n",
                    "rendered": {
                      "text": "$x_1$ and $x_2$, and analogously if $x_1 = x_2$.\n\\item\nOtherwise, compute $n_1 = \\round (x_1^2 + y_1^2)$ and\n$n_2 = \\round (x_2^2 + y_2^2)$, rounded down, at low precision.\nIf $n_1 < n_2$, then $|z_1| < |z_2|$;\nif $n_1 > n_2$, then $|z_1| > |z_2|$.\nThe remaining case is $n_1 = n_2$.\n",
                      "markdown": "`$x_1$ and $x_2$, and analogously if $x_1 = x_2$.\n\\item\nOtherwise, compute $n_1 = \\round (x_1^2 + y_1^2)$ and\n$n_2 = \\round (x_2^2 + y_2^2)$, rounded down, at low precision.\nIf $n_1 < n_2$, then $|z_1| < |z_2|$;\nif $n_1 > n_2$, then $|z_1| > |z_2|$.\nThe remaining case is $n_1 = n_2$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2457,
                  "startColumn": 20,
                  "endLine": 2457,
                  "endColumn": 24,
                  "snippet": {
                    "text": "$\\sin (2 \\pi / (4 n))$. Using $\\sin (x) > x - x^3 / 6$ for $x > 0$\nwe obtain $\\Exp (\\appro {s}) \\geq -63$ for $n < 2^{64}$; otherwise said,\nthe number of bits lost during the computation is at most $67$ in this\ncase, and in general at most $3$ more than the number of bits in~$n$.\n\n\n\\subsection {\\texttt {mpc\\_cmp\\_abs}}\n",
                    "rendered": {
                      "text": "$\\sin (2 \\pi / (4 n))$. Using $\\sin (x) > x - x^3 / 6$ for $x > 0$\nwe obtain $\\Exp (\\appro {s}) \\geq -63$ for $n < 2^{64}$; otherwise said,\nthe number of bits lost during the computation is at most $67$ in this\ncase, and in general at most $3$ more than the number of bits in~$n$.\n\n\n\\subsection {\\texttt {mpc\\_cmp\\_abs}}\n",
                      "markdown": "`$\\sin (2 \\pi / (4 n))$. Using $\\sin (x) > x - x^3 / 6$ for $x > 0$\nwe obtain $\\Exp (\\appro {s}) \\geq -63$ for $n < 2^{64}$; otherwise said,\nthe number of bits lost during the computation is at most $67$ in this\ncase, and in general at most $3$ more than the number of bits in~$n$.\n\n\n\\subsection {\\texttt {mpc\\_cmp\\_abs}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2456,
                  "startColumn": 49,
                  "endLine": 2456,
                  "endColumn": 53,
                  "snippet": {
                    "text": "absolute value of the real or imaginary part is given by\n$\\sin (2 \\pi / (4 n))$. Using $\\sin (x) > x - x^3 / 6$ for $x > 0$\nwe obtain $\\Exp (\\appro {s}) \\geq -63$ for $n < 2^{64}$; otherwise said,\nthe number of bits lost during the computation is at most $67$ in this\ncase, and in general at most $3$ more than the number of bits in~$n$.\n\n\n",
                    "rendered": {
                      "text": "absolute value of the real or imaginary part is given by\n$\\sin (2 \\pi / (4 n))$. Using $\\sin (x) > x - x^3 / 6$ for $x > 0$\nwe obtain $\\Exp (\\appro {s}) \\geq -63$ for $n < 2^{64}$; otherwise said,\nthe number of bits lost during the computation is at most $67$ in this\ncase, and in general at most $3$ more than the number of bits in~$n$.\n\n\n",
                      "markdown": "`absolute value of the real or imaginary part is given by\n$\\sin (2 \\pi / (4 n))$. Using $\\sin (x) > x - x^3 / 6$ for $x > 0$\nwe obtain $\\Exp (\\appro {s}) \\geq -63$ for $n < 2^{64}$; otherwise said,\nthe number of bits lost during the computation is at most $67$ in this\ncase, and in general at most $3$ more than the number of bits in~$n$.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2422,
                  "startColumn": 48,
                  "endLine": 2422,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  \\text { by Definition~\\ref {def:ulp}}.\n\\end {align*}\nThe factor $|r \\appro {\\pi} / \\appro {t}|$ is larger than~$1$ only if\nrounding down has occurred for $|\\appro {t}|$ by at most \\ulp {0.5};\nwith $p \\geq 7$, the worst case bound is then $64.5/64$,\nand the absolute error is bounded by $1.15 \\, \\Ulp (\\appro {t})$.\n\n",
                    "rendered": {
                      "text": "  \\text { by Definition~\\ref {def:ulp}}.\n\\end {align*}\nThe factor $|r \\appro {\\pi} / \\appro {t}|$ is larger than~$1$ only if\nrounding down has occurred for $|\\appro {t}|$ by at most \\ulp {0.5};\nwith $p \\geq 7$, the worst case bound is then $64.5/64$,\nand the absolute error is bounded by $1.15 \\, \\Ulp (\\appro {t})$.\n\n",
                      "markdown": "`  \\text { by Definition~\\ref {def:ulp}}.\n\\end {align*}\nThe factor $|r \\appro {\\pi} / \\appro {t}|$ is larger than~$1$ only if\nrounding down has occurred for $|\\appro {t}|$ by at most \\ulp {0.5};\nwith $p \\geq 7$, the worst case bound is then $64.5/64$,\nand the absolute error is bounded by $1.15 \\, \\Ulp (\\appro {t})$.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2394,
                  "startColumn": 47,
                  "endLine": 2394,
                  "endColumn": 51,
                  "snippet": {
                    "text": "the primitive $n$-th root of unity $e^{2 \\pi i k / n}$.\nFirst, we compute $\\pi$ with rounding to nearest and an absolute error\nof \\ulp{0.5}. Using Proposition~\\ref {prop:relerror} we obtain a relative\nerror of $\\relerror (\\appro {\\pi}) \\leq 2^{-p}$ at precision~$p$, which\nwould be enough for the following analysis. However, we can be a bit more\nprecise, knowing the first few binary digits of $\\pi$: As soon as $p \\geq 7$,\n% for p=6, we get 25/8 < 201/2^6, for p=7 we get 101/32 > 201/2^6\n",
                    "rendered": {
                      "text": "the primitive $n$-th root of unity $e^{2 \\pi i k / n}$.\nFirst, we compute $\\pi$ with rounding to nearest and an absolute error\nof \\ulp{0.5}. Using Proposition~\\ref {prop:relerror} we obtain a relative\nerror of $\\relerror (\\appro {\\pi}) \\leq 2^{-p}$ at precision~$p$, which\nwould be enough for the following analysis. However, we can be a bit more\nprecise, knowing the first few binary digits of $\\pi$: As soon as $p \\geq 7$,\n% for p=6, we get 25/8 < 201/2^6, for p=7 we get 101/32 > 201/2^6\n",
                      "markdown": "`the primitive $n$-th root of unity $e^{2 \\pi i k / n}$.\nFirst, we compute $\\pi$ with rounding to nearest and an absolute error\nof \\ulp{0.5}. Using Proposition~\\ref {prop:relerror} we obtain a relative\nerror of $\\relerror (\\appro {\\pi}) \\leq 2^{-p}$ at precision~$p$, which\nwould be enough for the following analysis. However, we can be a bit more\nprecise, knowing the first few binary digits of $\\pi$: As soon as $p \\geq 7$,\n% for p=6, we get 25/8 < 201/2^6, for p=7 we get 101/32 > 201/2^6\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2290,
                  "startColumn": 45,
                  "endLine": 2291,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nInstead of the correct sequence $\\corr x_r$, we compute during the algorithm\napproximations $\\appro x_1 = x = \\corr x_1$ and\n$\\appro x_r = \\round (\\appro x_s \\appro x_t)$\nat some precision~$p$.\nLet $\\theta_r$ be such that $\\corr x_r = \\appro x_r (1 + \\theta_r)$, so that\nthe relative error of $\\appro x_r$ is given by $\\epsilon_r = |\\theta_r|$.\nWrite $z_r = \\appro x_s \\appro x_t$.\n",
                    "rendered": {
                      "text": "\nInstead of the correct sequence $\\corr x_r$, we compute during the algorithm\napproximations $\\appro x_1 = x = \\corr x_1$ and\n$\\appro x_r = \\round (\\appro x_s \\appro x_t)$\nat some precision~$p$.\nLet $\\theta_r$ be such that $\\corr x_r = \\appro x_r (1 + \\theta_r)$, so that\nthe relative error of $\\appro x_r$ is given by $\\epsilon_r = |\\theta_r|$.\nWrite $z_r = \\appro x_s \\appro x_t$.\n",
                      "markdown": "`\nInstead of the correct sequence $\\corr x_r$, we compute during the algorithm\napproximations $\\appro x_1 = x = \\corr x_1$ and\n$\\appro x_r = \\round (\\appro x_s \\appro x_t)$\nat some precision~$p$.\nLet $\\theta_r$ be such that $\\corr x_r = \\appro x_r (1 + \\theta_r)$, so that\nthe relative error of $\\appro x_r$ is given by $\\epsilon_r = |\\theta_r|$.\nWrite $z_r = \\appro x_s \\appro x_t$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1830,
                  "startColumn": 25,
                  "endLine": 1830,
                  "endColumn": 29,
                  "snippet": {
                    "text": "Moreover,\n$\\alpha^2 = \\alpha^2 (\\zeta_r^2 + \\zeta_i^2) =\n(\\alpha \\zeta_r)^2 + (\\alpha \\zeta_i)^2 \\in \\Q (i)$, so that $\\Q (i, \\alpha)$\nis an extension of degree at most~$4$ of $\\Q$ containing $\\Q (\\zeta)$\nand thus a primitive $16$-th root of unity, which is impossible.\n\\item\n\\item\n",
                    "rendered": {
                      "text": "Moreover,\n$\\alpha^2 = \\alpha^2 (\\zeta_r^2 + \\zeta_i^2) =\n(\\alpha \\zeta_r)^2 + (\\alpha \\zeta_i)^2 \\in \\Q (i)$, so that $\\Q (i, \\alpha)$\nis an extension of degree at most~$4$ of $\\Q$ containing $\\Q (\\zeta)$\nand thus a primitive $16$-th root of unity, which is impossible.\n\\item\n\\item\n",
                      "markdown": "`Moreover,\n$\\alpha^2 = \\alpha^2 (\\zeta_r^2 + \\zeta_i^2) =\n(\\alpha \\zeta_r)^2 + (\\alpha \\zeta_i)^2 \\in \\Q (i)$, so that $\\Q (i, \\alpha)$\nis an extension of degree at most~$4$ of $\\Q$ containing $\\Q (\\zeta)$\nand thus a primitive $16$-th root of unity, which is impossible.\n\\item\n\\item\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1762,
                  "startColumn": 62,
                  "endLine": 1762,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n\\begin {theorem}\nLet $x = m 2^e$ and $y = n 2^f$ be dyadic complex numbers with $m$ and $n$ odd,\nand let $z = x^y$. Call the pair $(x, y)$ {\\em exceptional} if at least\none of $\\Re z$ or $\\Im z$ is a dyadic real. Exceptional pairs occur\nonly in the following cases:\n\\begin {enumerate}\n",
                    "rendered": {
                      "text": "\n\\begin {theorem}\nLet $x = m 2^e$ and $y = n 2^f$ be dyadic complex numbers with $m$ and $n$ odd,\nand let $z = x^y$. Call the pair $(x, y)$ {\\em exceptional} if at least\none of $\\Re z$ or $\\Im z$ is a dyadic real. Exceptional pairs occur\nonly in the following cases:\n\\begin {enumerate}\n",
                      "markdown": "`\n\\begin {theorem}\nLet $x = m 2^e$ and $y = n 2^f$ be dyadic complex numbers with $m$ and $n$ odd,\nand let $z = x^y$. Call the pair $(x, y)$ {\\em exceptional} if at least\none of $\\Re z$ or $\\Im z$ is a dyadic real. Exceptional pairs occur\nonly in the following cases:\n\\begin {enumerate}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1650,
                  "startColumn": 62,
                  "endLine": 1651,
                  "snippet": {
                    "text": "x^y \\exp(2.5 \\cdot 2^{-p}) (1 + \\theta_4) = x^y (1 + 4 \\theta_5)$,\nwith $\\theta_4, \\theta_5$ complex numbers of norm $\\leq 2^{-p}$.\n\nIn the remainder of this section, we determine the cases where at\nleast one part of $x^y$ is exact, and for that, we assume $x$ to be\ndifferent from the trivial cases $0$ and $1$.\n\n\\begin {definition}\n",
                    "rendered": {
                      "text": "x^y \\exp(2.5 \\cdot 2^{-p}) (1 + \\theta_4) = x^y (1 + 4 \\theta_5)$,\nwith $\\theta_4, \\theta_5$ complex numbers of norm $\\leq 2^{-p}$.\n\nIn the remainder of this section, we determine the cases where at\nleast one part of $x^y$ is exact, and for that, we assume $x$ to be\ndifferent from the trivial cases $0$ and $1$.\n\n\\begin {definition}\n",
                      "markdown": "`x^y \\exp(2.5 \\cdot 2^{-p}) (1 + \\theta_4) = x^y (1 + 4 \\theta_5)$,\nwith $\\theta_4, \\theta_5$ complex numbers of norm $\\leq 2^{-p}$.\n\nIn the remainder of this section, we determine the cases where at\nleast one part of $x^y$ is exact, and for that, we assume $x$ to be\ndifferent from the trivial cases $0$ and $1$.\n\n\\begin {definition}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1619,
                  "startColumn": 12,
                  "endLine": 1619,
                  "endColumn": 16,
                  "snippet": {
                    "text": "$|\\Im w| \\leq 2^{1-2e-\\delta}$, and the bound on the imaginary part of $t$\nbecomes $|\\Im t| \\leq 2^{2k-(2k+1)e-\\delta}$.\nNow consider that $\\varepsilon_k$ is the maximal absolute error on\n$\\Im t$ only at the end of the loop with index~$k$.\nThe initial value $\\varepsilon_0$\nis multiplied by $2^{-\\delta}$ compared to above,\nand since all the bounds on the imaginary\n",
                    "rendered": {
                      "text": "$|\\Im w| \\leq 2^{1-2e-\\delta}$, and the bound on the imaginary part of $t$\nbecomes $|\\Im t| \\leq 2^{2k-(2k+1)e-\\delta}$.\nNow consider that $\\varepsilon_k$ is the maximal absolute error on\n$\\Im t$ only at the end of the loop with index~$k$.\nThe initial value $\\varepsilon_0$\nis multiplied by $2^{-\\delta}$ compared to above,\nand since all the bounds on the imaginary\n",
                      "markdown": "`$|\\Im w| \\leq 2^{1-2e-\\delta}$, and the bound on the imaginary part of $t$\nbecomes $|\\Im t| \\leq 2^{2k-(2k+1)e-\\delta}$.\nNow consider that $\\varepsilon_k$ is the maximal absolute error on\n$\\Im t$ only at the end of the loop with index~$k$.\nThe initial value $\\varepsilon_0$\nis multiplied by $2^{-\\delta}$ compared to above,\nand since all the bounds on the imaginary\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1605,
                  "startColumn": 29,
                  "endLine": 1605,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\\[ \\varepsilon_k \\leq 5 \\cdot 2^{-2-e-p} + \\frac{1}{4} \\varepsilon_{k-1}, \\]\nand it follows easily $\\varepsilon_k \\leq \\frac{5}{3} \\cdot 2^{-e-p}$.\n\nNow the absolute error on $s$ at the end of the for loop --- not taking into\naccount the mathematical error when truncating the Taylor series ---\nis bounded for $e=1$ by:\n\\[ {\\rm err}(s) \\leq \\sum_{k=0}^{K-1} (5k+1) 2^{-1-p} = \\frac{(5K-3)K}{2} 2^{-1-p}, \\]\n",
                    "rendered": {
                      "text": "\\[ \\varepsilon_k \\leq 5 \\cdot 2^{-2-e-p} + \\frac{1}{4} \\varepsilon_{k-1}, \\]\nand it follows easily $\\varepsilon_k \\leq \\frac{5}{3} \\cdot 2^{-e-p}$.\n\nNow the absolute error on $s$ at the end of the for loop --- not taking into\naccount the mathematical error when truncating the Taylor series ---\nis bounded for $e=1$ by:\n\\[ {\\rm err}(s) \\leq \\sum_{k=0}^{K-1} (5k+1) 2^{-1-p} = \\frac{(5K-3)K}{2} 2^{-1-p}, \\]\n",
                      "markdown": "`\\[ \\varepsilon_k \\leq 5 \\cdot 2^{-2-e-p} + \\frac{1}{4} \\varepsilon_{k-1}, \\]\nand it follows easily $\\varepsilon_k \\leq \\frac{5}{3} \\cdot 2^{-e-p}$.\n\nNow the absolute error on $s$ at the end of the for loop --- not taking into\naccount the mathematical error when truncating the Taylor series ---\nis bounded for $e=1$ by:\n\\[ {\\rm err}(s) \\leq \\sum_{k=0}^{K-1} (5k+1) 2^{-1-p} = \\frac{(5K-3)K}{2} 2^{-1-p}, \\]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1563,
                  "startColumn": 62,
                  "endLine": 1563,
                  "endColumn": 66,
                  "snippet": {
                    "text": "Now let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n$\\frac{1}{2} \\Ulp(z) \\leq \\frac{1}{2} \\Ulp(2^{-e}) = 2^{-e-p}$.\nNow the absolute error on $u$ is bounded by:\n\\[ {\\rm err}(u) \\leq \\frac{1}{2} \\Ulp(u) + 2 \\varepsilon_{k-1} |w| + 2 |t| {\\rm err}(w), \\]\n",
                    "rendered": {
                      "text": "Now let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n$\\frac{1}{2} \\Ulp(z) \\leq \\frac{1}{2} \\Ulp(2^{-e}) = 2^{-e-p}$.\nNow the absolute error on $u$ is bounded by:\n\\[ {\\rm err}(u) \\leq \\frac{1}{2} \\Ulp(u) + 2 \\varepsilon_{k-1} |w| + 2 |t| {\\rm err}(w), \\]\n",
                      "markdown": "`Now let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n$\\frac{1}{2} \\Ulp(z) \\leq \\frac{1}{2} \\Ulp(2^{-e}) = 2^{-e-p}$.\nNow the absolute error on $u$ is bounded by:\n\\[ {\\rm err}(u) \\leq \\frac{1}{2} \\Ulp(u) + 2 \\varepsilon_{k-1} |w| + 2 |t| {\\rm err}(w), \\]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1562,
                  "startColumn": 16,
                  "endLine": 1562,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n$\\frac{1}{2} \\Ulp(z) \\leq \\frac{1}{2} \\Ulp(2^{-e}) = 2^{-e-p}$.\nNow the absolute error on $u$ is bounded by:\n",
                    "rendered": {
                      "text": "\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n$\\frac{1}{2} \\Ulp(z) \\leq \\frac{1}{2} \\Ulp(2^{-e}) = 2^{-e-p}$.\nNow the absolute error on $u$ is bounded by:\n",
                      "markdown": "`\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n$\\frac{1}{2} \\Ulp(z) \\leq \\frac{1}{2} \\Ulp(2^{-e}) = 2^{-e-p}$.\nNow the absolute error on $u$ is bounded by:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1560,
                  "startColumn": 71,
                  "endLine": 1560,
                  "endColumn": 75,
                  "snippet": {
                    "text": "which is larger than $(2k-1)^2$, we get at the end of the loop with index $k$:\n$|\\Re(t)|, |\\Im(t)| \\leq 2^{2k-(2k+1)e}$ as claimed.\n\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n",
                    "rendered": {
                      "text": "which is larger than $(2k-1)^2$, we get at the end of the loop with index $k$:\n$|\\Re(t)|, |\\Im(t)| \\leq 2^{2k-(2k+1)e}$ as claimed.\n\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n",
                      "markdown": "`which is larger than $(2k-1)^2$, we get at the end of the loop with index $k$:\n$|\\Re(t)|, |\\Im(t)| \\leq 2^{2k-(2k+1)e}$ as claimed.\n\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\nend of the loop with index~$k$.\nFor $k=0$, i.e., at the beginning of the loop with $k=1$, we have\n$\\varepsilon_0 = 2^{-e-p}$, since $t = o(z)$, and the error is at most\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1557,
                  "startColumn": 39,
                  "endLine": 1557,
                  "endColumn": 43,
                  "snippet": {
                    "text": "instruction, we get $|\\Re(v)|, |\\Im(v)| \\leq (2k-1)^2 \\cdot 2^{2k-(2k+1)e}$,\nassuming $(2k-1)^2$ is exactly representable, which can be checked a\nposteriori. Since in the third instruction we divide by $(2k)(2k+1)$\nwhich is larger than $(2k-1)^2$, we get at the end of the loop with index $k$:\n$|\\Re(t)|, |\\Im(t)| \\leq 2^{2k-(2k+1)e}$ as claimed.\n\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\n",
                    "rendered": {
                      "text": "instruction, we get $|\\Re(v)|, |\\Im(v)| \\leq (2k-1)^2 \\cdot 2^{2k-(2k+1)e}$,\nassuming $(2k-1)^2$ is exactly representable, which can be checked a\nposteriori. Since in the third instruction we divide by $(2k)(2k+1)$\nwhich is larger than $(2k-1)^2$, we get at the end of the loop with index $k$:\n$|\\Re(t)|, |\\Im(t)| \\leq 2^{2k-(2k+1)e}$ as claimed.\n\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\n",
                      "markdown": "`instruction, we get $|\\Re(v)|, |\\Im(v)| \\leq (2k-1)^2 \\cdot 2^{2k-(2k+1)e}$,\nassuming $(2k-1)^2$ is exactly representable, which can be checked a\nposteriori. Since in the third instruction we divide by $(2k)(2k+1)$\nwhich is larger than $(2k-1)^2$, we get at the end of the loop with index $k$:\n$|\\Re(t)|, |\\Im(t)| \\leq 2^{2k-(2k+1)e}$ as claimed.\n\nNow let $\\varepsilon_k$ be the maximal absolute error on $\\Re t, \\Im t$ at the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1550,
                  "startColumn": 52,
                  "endLine": 1550,
                  "endColumn": 56,
                  "snippet": {
                    "text": "since then $t$ is the rounding of $z$,\nthus $|\\Re t|,|\\Im t| \\leq o(2^{-e}) = 2^{-e}$,\nsince $2^{-e}$ is exactly representable.\nNow assume $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-2-(2k-1)e}$ at the beginning of the\nloop with index $k$.\nSince $|\\Re(w)|,|\\Im(w)| \\leq 2^{1-2e}$, we have after the first instruction\nin the loop: $|\\Re(u)|, |\\Im(u)| \\leq 2^{2k-(2k+1)e}$. After the second\n",
                    "rendered": {
                      "text": "since then $t$ is the rounding of $z$,\nthus $|\\Re t|,|\\Im t| \\leq o(2^{-e}) = 2^{-e}$,\nsince $2^{-e}$ is exactly representable.\nNow assume $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-2-(2k-1)e}$ at the beginning of the\nloop with index $k$.\nSince $|\\Re(w)|,|\\Im(w)| \\leq 2^{1-2e}$, we have after the first instruction\nin the loop: $|\\Re(u)|, |\\Im(u)| \\leq 2^{2k-(2k+1)e}$. After the second\n",
                      "markdown": "`since then $t$ is the rounding of $z$,\nthus $|\\Re t|,|\\Im t| \\leq o(2^{-e}) = 2^{-e}$,\nsince $2^{-e}$ is exactly representable.\nNow assume $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-2-(2k-1)e}$ at the beginning of the\nloop with index $k$.\nSince $|\\Re(w)|,|\\Im(w)| \\leq 2^{1-2e}$, we have after the first instruction\nin the loop: $|\\Re(u)|, |\\Im(u)| \\leq 2^{2k-(2k+1)e}$. After the second\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1546,
                  "startColumn": 27,
                  "endLine": 1546,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\nThen we prove, still by induction, that at the end of the for loop with index\n$k$, we have $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-(2k+1)e}$.\nThis holds for $k=0$, i.e., at the beginning of the loop with $k=1$,\nsince then $t$ is the rounding of $z$,\nthus $|\\Re t|,|\\Im t| \\leq o(2^{-e}) = 2^{-e}$,\nsince $2^{-e}$ is exactly representable.\n",
                    "rendered": {
                      "text": "\nThen we prove, still by induction, that at the end of the for loop with index\n$k$, we have $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-(2k+1)e}$.\nThis holds for $k=0$, i.e., at the beginning of the loop with $k=1$,\nsince then $t$ is the rounding of $z$,\nthus $|\\Re t|,|\\Im t| \\leq o(2^{-e}) = 2^{-e}$,\nsince $2^{-e}$ is exactly representable.\n",
                      "markdown": "`\nThen we prove, still by induction, that at the end of the for loop with index\n$k$, we have $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-(2k+1)e}$.\nThis holds for $k=0$, i.e., at the beginning of the loop with $k=1$,\nsince then $t$ is the rounding of $z$,\nthus $|\\Re t|,|\\Im t| \\leq o(2^{-e}) = 2^{-e}$,\nsince $2^{-e}$ is exactly representable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1544,
                  "startColumn": 39,
                  "endLine": 1544,
                  "endColumn": 43,
                  "snippet": {
                    "text": "Then since $|\\Re z|,|\\Im z| \\leq 2^{-e}$,\nwe have $|\\Re(w)|,|\\Im(w)| \\leq o(2^{1-2e}) = 2^{1-2e}$.\n\nThen we prove, still by induction, that at the end of the for loop with index\n$k$, we have $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-(2k+1)e}$.\nThis holds for $k=0$, i.e., at the beginning of the loop with $k=1$,\nsince then $t$ is the rounding of $z$,\n",
                    "rendered": {
                      "text": "Then since $|\\Re z|,|\\Im z| \\leq 2^{-e}$,\nwe have $|\\Re(w)|,|\\Im(w)| \\leq o(2^{1-2e}) = 2^{1-2e}$.\n\nThen we prove, still by induction, that at the end of the for loop with index\n$k$, we have $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-(2k+1)e}$.\nThis holds for $k=0$, i.e., at the beginning of the loop with $k=1$,\nsince then $t$ is the rounding of $z$,\n",
                      "markdown": "`Then since $|\\Re z|,|\\Im z| \\leq 2^{-e}$,\nwe have $|\\Re(w)|,|\\Im(w)| \\leq o(2^{1-2e}) = 2^{1-2e}$.\n\nThen we prove, still by induction, that at the end of the for loop with index\n$k$, we have $|\\Re(t)|,|\\Im(t)| \\leq 2^{2k-(2k+1)e}$.\nThis holds for $k=0$, i.e., at the beginning of the loop with $k=1$,\nsince then $t$ is the rounding of $z$,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1536,
                  "startColumn": 32,
                  "endLine": 1536,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      t = o(v / ((2*k) * (2*k+1))\n      s = s + t\n\\end{verbatim}\nWe first prove by induction that at the end of the for loop with index $k$,\nwe have (up to rounding errors):\n\\[ t = \\frac{1  \\times 3 \\times \\cdots \\times (2k-1)}\n  {2 \\times 4 \\times \\cdots \\times (2k)} \\frac{z^{2k+1}}{2k+1}. \\]\n",
                    "rendered": {
                      "text": "      t = o(v / ((2*k) * (2*k+1))\n      s = s + t\n\\end{verbatim}\nWe first prove by induction that at the end of the for loop with index $k$,\nwe have (up to rounding errors):\n\\[ t = \\frac{1  \\times 3 \\times \\cdots \\times (2k-1)}\n  {2 \\times 4 \\times \\cdots \\times (2k)} \\frac{z^{2k+1}}{2k+1}. \\]\n",
                      "markdown": "`      t = o(v / ((2*k) * (2*k+1))\n      s = s + t\n\\end{verbatim}\nWe first prove by induction that at the end of the for loop with index $k$,\nwe have (up to rounding errors):\n\\[ t = \\frac{1  \\times 3 \\times \\cdots \\times (2k-1)}\n  {2 \\times 4 \\times \\cdots \\times (2k)} \\frac{z^{2k+1}}{2k+1}. \\]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1409,
                  "startColumn": 32,
                  "endLine": 1409,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\nThus the total error on $w$ is at most \\ulp{10}.\nFor the computation of $t$, assuming $y > 0$, we round upwards the division $y/(2w)$,\nwhich yields a relative error of at most $2u$, and thus:\n\\[ \\hat{t}/t \\leq \\frac{1 + \\delta_u}{(1 - \\delta_d)^{5/2}} = 1 + 7u + \\frac{35}{2} u^2 + O(u^3), \\]\nwith $\\delta_u = 2u$,\nwhich implies $\\hat{t}/t \\leq 1 + 8u$ for $p \\geq 5$.\n",
                    "rendered": {
                      "text": "\nThus the total error on $w$ is at most \\ulp{10}.\nFor the computation of $t$, assuming $y > 0$, we round upwards the division $y/(2w)$,\nwhich yields a relative error of at most $2u$, and thus:\n\\[ \\hat{t}/t \\leq \\frac{1 + \\delta_u}{(1 - \\delta_d)^{5/2}} = 1 + 7u + \\frac{35}{2} u^2 + O(u^3), \\]\nwith $\\delta_u = 2u$,\nwhich implies $\\hat{t}/t \\leq 1 + 8u$ for $p \\geq 5$.\n",
                      "markdown": "`\nThus the total error on $w$ is at most \\ulp{10}.\nFor the computation of $t$, assuming $y > 0$, we round upwards the division $y/(2w)$,\nwhich yields a relative error of at most $2u$, and thus:\n\\[ \\hat{t}/t \\leq \\frac{1 + \\delta_u}{(1 - \\delta_d)^{5/2}} = 1 + 7u + \\frac{35}{2} u^2 + O(u^3), \\]\nwith $\\delta_u = 2u$,\nwhich implies $\\hat{t}/t \\leq 1 + 8u$ for $p \\geq 5$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1407,
                  "startColumn": 30,
                  "endLine": 1407,
                  "endColumn": 34,
                  "snippet": {
                    "text": "Since $\\ulp(w) = 2^{k+1} \\cdot u$, we thus have $\\ulp(\\hat{w}) \\geq 2^k \\cdot u$ in\nall cases, which yields $w - \\hat(w) \\leq 5 (w/2^k) \\ulp(\\hat{w}) \\leq 10 \\ulp(\\hat{w})$.\n\nThus the total error on $w$ is at most \\ulp{10}.\nFor the computation of $t$, assuming $y > 0$, we round upwards the division $y/(2w)$,\nwhich yields a relative error of at most $2u$, and thus:\n\\[ \\hat{t}/t \\leq \\frac{1 + \\delta_u}{(1 - \\delta_d)^{5/2}} = 1 + 7u + \\frac{35}{2} u^2 + O(u^3), \\]\n",
                    "rendered": {
                      "text": "Since $\\ulp(w) = 2^{k+1} \\cdot u$, we thus have $\\ulp(\\hat{w}) \\geq 2^k \\cdot u$ in\nall cases, which yields $w - \\hat(w) \\leq 5 (w/2^k) \\ulp(\\hat{w}) \\leq 10 \\ulp(\\hat{w})$.\n\nThus the total error on $w$ is at most \\ulp{10}.\nFor the computation of $t$, assuming $y > 0$, we round upwards the division $y/(2w)$,\nwhich yields a relative error of at most $2u$, and thus:\n\\[ \\hat{t}/t \\leq \\frac{1 + \\delta_u}{(1 - \\delta_d)^{5/2}} = 1 + 7u + \\frac{35}{2} u^2 + O(u^3), \\]\n",
                      "markdown": "`Since $\\ulp(w) = 2^{k+1} \\cdot u$, we thus have $\\ulp(\\hat{w}) \\geq 2^k \\cdot u$ in\nall cases, which yields $w - \\hat(w) \\leq 5 (w/2^k) \\ulp(\\hat{w}) \\leq 10 \\ulp(\\hat{w})$.\n\nThus the total error on $w$ is at most \\ulp{10}.\nFor the computation of $t$, assuming $y > 0$, we round upwards the division $y/(2w)$,\nwhich yields a relative error of at most $2u$, and thus:\n\\[ \\hat{t}/t \\leq \\frac{1 + \\delta_u}{(1 - \\delta_d)^{5/2}} = 1 + 7u + \\frac{35}{2} u^2 + O(u^3), \\]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1365,
                  "startColumn": 2,
                  "endLine": 1365,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nJeannerod and Muller prove in \\cite{jeannerod:ensl-01780265} that the relative\nerror of this algorithm --- with rounding to nearest ---\nis at most $\\frac{5}{2} u$ for the real part, denoted\n$w$ here, and\n$\\frac{7}{2} u$ for the imaginary part, denoted $t$ here,\nwhere $u = 2^{-p}$ and $p$ is the\n",
                    "rendered": {
                      "text": "\nJeannerod and Muller prove in \\cite{jeannerod:ensl-01780265} that the relative\nerror of this algorithm --- with rounding to nearest ---\nis at most $\\frac{5}{2} u$ for the real part, denoted\n$w$ here, and\n$\\frac{7}{2} u$ for the imaginary part, denoted $t$ here,\nwhere $u = 2^{-p}$ and $p$ is the\n",
                      "markdown": "`\nJeannerod and Muller prove in \\cite{jeannerod:ensl-01780265} that the relative\nerror of this algorithm --- with rounding to nearest ---\nis at most $\\frac{5}{2} u$ for the real part, denoted\n$w$ here, and\n$\\frac{7}{2} u$ for the imaginary part, denoted $t$ here,\nwhere $u = 2^{-p}$ and $p$ is the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1283,
                  "startColumn": 67,
                  "endLine": 1284,
                  "snippet": {
                    "text": "\n\\begin {remark}\nThe result probably still holds when $f$ is holomorphic only\non~$B \\subseteq U$ instead of on $\\overline B$, assuming that it is at\nleast continuous on $\\partial B$ (in particular, it is not allowed to have\na singularity on the boundary); a proof idea would be to apply the theorem\nfor $r' < r$ and to take the limit $r' \\to r$.\nWe do not need such a result, and instead can apply this approach to upper\n",
                    "rendered": {
                      "text": "\n\\begin {remark}\nThe result probably still holds when $f$ is holomorphic only\non~$B \\subseteq U$ instead of on $\\overline B$, assuming that it is at\nleast continuous on $\\partial B$ (in particular, it is not allowed to have\na singularity on the boundary); a proof idea would be to apply the theorem\nfor $r' < r$ and to take the limit $r' \\to r$.\nWe do not need such a result, and instead can apply this approach to upper\n",
                      "markdown": "`\n\\begin {remark}\nThe result probably still holds when $f$ is holomorphic only\non~$B \\subseteq U$ instead of on $\\overline B$, assuming that it is at\nleast continuous on $\\partial B$ (in particular, it is not allowed to have\na singularity on the boundary); a proof idea would be to apply the theorem\nfor $r' < r$ and to take the limit $r' \\to r$.\nWe do not need such a result, and instead can apply this approach to upper\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1102,
                  "startColumn": 42,
                  "endLine": 1102,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\\text { and }\n\\epsilon \\leq (|\\theta_1| + |\\theta_2|) \\sum_{k = 0}^\\infty |\\theta_2|^k.\n\\]\nUsing the same notation and assumptions as at the end of\n\\S\\ref {sssec:propmul}, in particular that all higher order error terms\n(involving $\\epsilon_1^2$, $\\epsilon_2^2$, $\\epsilon_1 \\epsilon_2$\nor higher powers) are absorbed by $2^{\\Exp (\\appro x) - p}$,\n",
                    "rendered": {
                      "text": "\\text { and }\n\\epsilon \\leq (|\\theta_1| + |\\theta_2|) \\sum_{k = 0}^\\infty |\\theta_2|^k.\n\\]\nUsing the same notation and assumptions as at the end of\n\\S\\ref {sssec:propmul}, in particular that all higher order error terms\n(involving $\\epsilon_1^2$, $\\epsilon_2^2$, $\\epsilon_1 \\epsilon_2$\nor higher powers) are absorbed by $2^{\\Exp (\\appro x) - p}$,\n",
                      "markdown": "`\\text { and }\n\\epsilon \\leq (|\\theta_1| + |\\theta_2|) \\sum_{k = 0}^\\infty |\\theta_2|^k.\n\\]\nUsing the same notation and assumptions as at the end of\n\\S\\ref {sssec:propmul}, in particular that all higher order error terms\n(involving $\\epsilon_1^2$, $\\epsilon_2^2$, $\\epsilon_1 \\epsilon_2$\nor higher powers) are absorbed by $2^{\\Exp (\\appro x) - p}$,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 60,
                  "endLine": 935,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\\right)\n2^{\\Exp (\\appro x) - p}\n\\end {equation}\nThe values $\\epsilon_{X, 1}^+$ may be estimated as explained at the end\nof \\S\\ref {sssec:propmul}.\n\nWe also need the relative lower error in the following. This can be obtained\n",
                    "rendered": {
                      "text": "\\right)\n2^{\\Exp (\\appro x) - p}\n\\end {equation}\nThe values $\\epsilon_{X, 1}^+$ may be estimated as explained at the end\nof \\S\\ref {sssec:propmul}.\n\nWe also need the relative lower error in the following. This can be obtained\n",
                      "markdown": "`\\right)\n2^{\\Exp (\\appro x) - p}\n\\end {equation}\nThe values $\\epsilon_{X, 1}^+$ may be estimated as explained at the end\nof \\S\\ref {sssec:propmul}.\n\nWe also need the relative lower error in the following. This can be obtained\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 34,
                  "endLine": 394,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\\relerror (\\appro z) \\leq k \\, 2^{1-p}.\n\\]\nAs in Proposition~\\ref {prop:relerror}, there is an immediate generalisation\nif $\\appro z$ is not representable at precision~$p$.\n\\end {prop}\n\nAdding the improbable cases that $\\appro x = \\corr x$ and\n",
                    "rendered": {
                      "text": "\\relerror (\\appro z) \\leq k \\, 2^{1-p}.\n\\]\nAs in Proposition~\\ref {prop:relerror}, there is an immediate generalisation\nif $\\appro z$ is not representable at precision~$p$.\n\\end {prop}\n\nAdding the improbable cases that $\\appro x = \\corr x$ and\n",
                      "markdown": "`\\relerror (\\appro z) \\leq k \\, 2^{1-p}.\n\\]\nAs in Proposition~\\ref {prop:relerror}, there is an immediate generalisation\nif $\\appro z$ is not representable at precision~$p$.\n\\end {prop}\n\nAdding the improbable cases that $\\appro x = \\corr x$ and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 62,
                  "endLine": 378,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n\\begin {prop}\n\\label {prop:comabstorelerror}\nLet $\\appro z = \\appro x + i \\appro y \\neq 0$ be representable\nat precision~$p$.\nAssume that there is a non-negative integer~$k$ such that the following\ntwo assertions hold:\n\\begin {itemize}\n",
                    "rendered": {
                      "text": "\n\\begin {prop}\n\\label {prop:comabstorelerror}\nLet $\\appro z = \\appro x + i \\appro y \\neq 0$ be representable\nat precision~$p$.\nAssume that there is a non-negative integer~$k$ such that the following\ntwo assertions hold:\n\\begin {itemize}\n",
                      "markdown": "`\n\\begin {prop}\n\\label {prop:comabstorelerror}\nLet $\\appro z = \\appro x + i \\appro y \\neq 0$ be representable\nat precision~$p$.\nAssume that there is a non-negative integer~$k$ such that the following\ntwo assertions hold:\n\\begin {itemize}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 64,
                  "endLine": 273,
                  "snippet": {
                    "text": "If $\\relerror (\\appro x) \\leq k 2^{-p}$,\nthen $\\error (\\appro x) \\leq k \\Ulp (\\appro x)$.\n\\end {enumerate}\nThese assertions remain valid if $\\appro x$ is not representable at\nprecision~$p$ and $\\Ulp (\\appro x)$ is replaced by $2^{\\Exp (\\appro x) - p}$.\n\\end {prop}\n\n\\begin {proof}\n",
                    "rendered": {
                      "text": "If $\\relerror (\\appro x) \\leq k 2^{-p}$,\nthen $\\error (\\appro x) \\leq k \\Ulp (\\appro x)$.\n\\end {enumerate}\nThese assertions remain valid if $\\appro x$ is not representable at\nprecision~$p$ and $\\Ulp (\\appro x)$ is replaced by $2^{\\Exp (\\appro x) - p}$.\n\\end {prop}\n\n\\begin {proof}\n",
                      "markdown": "`If $\\relerror (\\appro x) \\leq k 2^{-p}$,\nthen $\\error (\\appro x) \\leq k \\Ulp (\\appro x)$.\n\\end {enumerate}\nThese assertions remain valid if $\\appro x$ is not representable at\nprecision~$p$ and $\\Ulp (\\appro x)$ is replaced by $2^{\\Exp (\\appro x) - p}$.\n\\end {prop}\n\n\\begin {proof}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 54,
                  "endLine": 263,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n\\begin {prop}\n\\label {prop:relerror}\nLet $\\appro x$ be a non-zero real number representable at precision $p$.\n\\begin {enumerate}\n\\item\nIf $\\error (\\appro x) \\leq k \\Ulp (\\appro x)$,\n",
                    "rendered": {
                      "text": "\n\\begin {prop}\n\\label {prop:relerror}\nLet $\\appro x$ be a non-zero real number representable at precision $p$.\n\\begin {enumerate}\n\\item\nIf $\\error (\\appro x) \\leq k \\Ulp (\\appro x)$,\n",
                      "markdown": "`\n\\begin {prop}\n\\label {prop:relerror}\nLet $\\appro x$ be a non-zero real number representable at precision $p$.\n\\begin {enumerate}\n\\item\nIf $\\error (\\appro x) \\leq k \\Ulp (\\appro x)$,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 58,
                  "endLine": 245,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\\end {definition}\n\nNotice that $\\epsilon^- = 0$ whenever $\\appro x \\leq \\corr x$ and\n$\\epsilon^+ = 0$ whenever $\\appro x \\geq \\corr x$, so that at least one of\n$\\epsilon^+$ and $\\epsilon^-$ is~$0$. We express relative errors with\nrespect to the approximate value; thus, they define an interval around\nthe approximate value containing the correct one. Precisely,\n",
                    "rendered": {
                      "text": "\\end {definition}\n\nNotice that $\\epsilon^- = 0$ whenever $\\appro x \\leq \\corr x$ and\n$\\epsilon^+ = 0$ whenever $\\appro x \\geq \\corr x$, so that at least one of\n$\\epsilon^+$ and $\\epsilon^-$ is~$0$. We express relative errors with\nrespect to the approximate value; thus, they define an interval around\nthe approximate value containing the correct one. Precisely,\n",
                      "markdown": "`\\end {definition}\n\nNotice that $\\epsilon^- = 0$ whenever $\\appro x \\leq \\corr x$ and\n$\\epsilon^+ = 0$ whenever $\\appro x \\geq \\corr x$, so that at least one of\n$\\epsilon^+$ and $\\epsilon^-$ is~$0$. We express relative errors with\nrespect to the approximate value; thus, they define an interval around\nthe approximate value containing the correct one. Precisely,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 36,
                  "endLine": 203,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\\error (\\appro y) \\leq k_I 2^{\\Exp (\\appro y) - p}.\n\\]\nMoreover, we are interested in the cumulated error if additionally\n$\\appro z$ is rounded coordinatewise at the target precision~$p$\nto $\\round (\\appro z)$. This operation adds an error of\n$c_R \\Ulp (\\round (\\appro x))$ to the real and of\n$c_I \\Ulp (\\round (\\appro y))$ to the imaginary part, where\n",
                    "rendered": {
                      "text": "\\error (\\appro y) \\leq k_I 2^{\\Exp (\\appro y) - p}.\n\\]\nMoreover, we are interested in the cumulated error if additionally\n$\\appro z$ is rounded coordinatewise at the target precision~$p$\nto $\\round (\\appro z)$. This operation adds an error of\n$c_R \\Ulp (\\round (\\appro x))$ to the real and of\n$c_I \\Ulp (\\round (\\appro y))$ to the imaginary part, where\n",
                      "markdown": "`\\error (\\appro y) \\leq k_I 2^{\\Exp (\\appro y) - p}.\n\\]\nMoreover, we are interested in the cumulated error if additionally\n$\\appro z$ is rounded coordinatewise at the target precision~$p$\nto $\\round (\\appro z)$. This operation adds an error of\n$c_R \\Ulp (\\round (\\appro x))$ to the real and of\n$c_I \\Ulp (\\round (\\appro y))$ to the imaginary part, where\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 13,
                  "endLine": 184,
                  "endColumn": 17,
                  "snippet": {
                    "text": "and $\\error (\\appro {y_n}) \\leq k_{I, n} 2^{\\Exp (\\appro {y_n}) - p}$ for\nsome $k_{R, n}$ and $k_{I, n}$ are known. (This particular notation\nbecomes more comprehensible when $\\appro {x_n}$ and $\\appro {y_n}$ are\nrepresentable at precision~$p$, since then the units of the error measure\nbecome $\\Ulp (\\appro {x_n})$ and $\\Ulp (\\appro {y_n})$, respectively;\nhowever, there is no need to restrict the results of this chapter to\nrepresentable numbers.)\n",
                    "rendered": {
                      "text": "and $\\error (\\appro {y_n}) \\leq k_{I, n} 2^{\\Exp (\\appro {y_n}) - p}$ for\nsome $k_{R, n}$ and $k_{I, n}$ are known. (This particular notation\nbecomes more comprehensible when $\\appro {x_n}$ and $\\appro {y_n}$ are\nrepresentable at precision~$p$, since then the units of the error measure\nbecome $\\Ulp (\\appro {x_n})$ and $\\Ulp (\\appro {y_n})$, respectively;\nhowever, there is no need to restrict the results of this chapter to\nrepresentable numbers.)\n",
                      "markdown": "`and $\\error (\\appro {y_n}) \\leq k_{I, n} 2^{\\Exp (\\appro {y_n}) - p}$ for\nsome $k_{R, n}$ and $k_{I, n}$ are known. (This particular notation\nbecomes more comprehensible when $\\appro {x_n}$ and $\\appro {y_n}$ are\nrepresentable at precision~$p$, since then the units of the error measure\nbecome $\\Ulp (\\appro {x_n})$ and $\\Ulp (\\appro {y_n})$, respectively;\nhowever, there is no need to restrict the results of this chapter to\nrepresentable numbers.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 56,
                  "endLine": 146,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\\begin {definition}\n\\label {def:ulp}\nLet $x$ be a non-zero real number which is representable at precision~$p$.\nIts associated {\\em unit in the last place} is\n$\\Ulp(x) = \\Ulp_p (x) = 2^{\\Exp(x) - p}$, so that adding $\\Ulp(x)$ to $x$\ncorresponds to adding~$1$ to the integer $2^p m$.\n",
                    "rendered": {
                      "text": "\n\\begin {definition}\n\\label {def:ulp}\nLet $x$ be a non-zero real number which is representable at precision~$p$.\nIts associated {\\em unit in the last place} is\n$\\Ulp(x) = \\Ulp_p (x) = 2^{\\Exp(x) - p}$, so that adding $\\Ulp(x)$ to $x$\ncorresponds to adding~$1$ to the integer $2^p m$.\n",
                      "markdown": "`\n\\begin {definition}\n\\label {def:ulp}\nLet $x$ be a non-zero real number which is representable at precision~$p$.\nIts associated {\\em unit in the last place} is\n$\\Ulp(x) = \\Ulp_p (x) = 2^{\\Exp(x) - p}$, so that adding $\\Ulp(x)$ to $x$\ncorresponds to adding~$1$ to the integer $2^p m$.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 36,
                  "endLine": 119,
                  "endColumn": 40,
                  "snippet": {
                    "text": "Write $x_n = m_n 2^{\\Exp (x_n)}$ and\n$x = x_1 x_2 = m 2^{\\Exp x} = m_1 m_2 2^{\\Exp (x_1) + \\Exp (x_2)}$\nwith $\\frac {1}{2} \\leq m_n, m < 1$.\nThen $m = m_1 m_2$ if the product is at least $\\frac {1}{2}$ and\n$m = 2 m_1 m_2$ if the product is less than $\\frac {1}{2}$, which\nyields the first line of inequalities.\nThe other inequalities are derived in the same way from\n",
                    "rendered": {
                      "text": "Write $x_n = m_n 2^{\\Exp (x_n)}$ and\n$x = x_1 x_2 = m 2^{\\Exp x} = m_1 m_2 2^{\\Exp (x_1) + \\Exp (x_2)}$\nwith $\\frac {1}{2} \\leq m_n, m < 1$.\nThen $m = m_1 m_2$ if the product is at least $\\frac {1}{2}$ and\n$m = 2 m_1 m_2$ if the product is less than $\\frac {1}{2}$, which\nyields the first line of inequalities.\nThe other inequalities are derived in the same way from\n",
                      "markdown": "`Write $x_n = m_n 2^{\\Exp (x_n)}$ and\n$x = x_1 x_2 = m 2^{\\Exp x} = m_1 m_2 2^{\\Exp (x_1) + \\Exp (x_2)}$\nwith $\\frac {1}{2} \\leq m_n, m < 1$.\nThen $m = m_1 m_2$ if the product is at least $\\frac {1}{2}$ and\n$m = 2 m_1 m_2$ if the product is less than $\\frac {1}{2}$, which\nyields the first line of inequalities.\nThe other inequalities are derived in the same way from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 13,
                  "endLine": 99,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\\end {definition}\n\nThe real number~$0$ does not fit into this framework; it is considered\nrepresentable at any precision, so that it is never changed by rounding.\nConversely, notice that no non-zero number is ever rounded to~$0$.\nOne could define $\\Exp(0) = -\\infty$, and most of the following results\nwould still hold.\n",
                    "rendered": {
                      "text": "\\end {definition}\n\nThe real number~$0$ does not fit into this framework; it is considered\nrepresentable at any precision, so that it is never changed by rounding.\nConversely, notice that no non-zero number is ever rounded to~$0$.\nOne could define $\\Exp(0) = -\\infty$, and most of the following results\nwould still hold.\n",
                      "markdown": "`\\end {definition}\n\nThe real number~$0$ does not fit into this framework; it is considered\nrepresentable at any precision, so that it is never changed by rounding.\nConversely, notice that no non-zero number is ever rounded to~$0$.\nOne could define $\\Exp(0) = -\\infty$, and most of the following results\nwould still hold.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 32,
                  "endLine": 88,
                  "endColumn": 36,
                  "snippet": {
                    "text": "$x = m \\cdot 2^e$ with $\\frac{1}{2} \\le |m| < 1$.\nThe {\\em exponent} of $x$ is\n$\\Exp(x) = e = \\lfloor \\log_2 |x| \\rfloor + 1$.\nThe number is {\\em representable at precision~$p$} if\n$2^p m$ is an integer.\nIf $x$ is representable, there is no other representable number in the\nopen interval $(x - 2^{e-p}, x + 2^{e-p})$; otherwise there are two\n",
                    "rendered": {
                      "text": "$x = m \\cdot 2^e$ with $\\frac{1}{2} \\le |m| < 1$.\nThe {\\em exponent} of $x$ is\n$\\Exp(x) = e = \\lfloor \\log_2 |x| \\rfloor + 1$.\nThe number is {\\em representable at precision~$p$} if\n$2^p m$ is an integer.\nIf $x$ is representable, there is no other representable number in the\nopen interval $(x - 2^{e-p}, x + 2^{e-p})$; otherwise there are two\n",
                      "markdown": "`$x = m \\cdot 2^e$ with $\\frac{1}{2} \\le |m| < 1$.\nThe {\\em exponent} of $x$ is\n$\\Exp(x) = e = \\lfloor \\log_2 |x| \\rfloor + 1$.\nThe number is {\\em representable at precision~$p$} if\n$2^p m$ is an integer.\nIf $x$ is representable, there is no other representable number in the\nopen interval $(x - 2^{e-p}, x + 2^{e-p})$; otherwise there are two\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3739,
                  "startColumn": 33,
                  "endLine": 3739,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\\end {aligned}\n\\end {equation}\n\nNotice that in this expression we expect $k_x$ and $k_y$ to be very small\n(for a concrete example, see the following section), and\n$2^{\\Exp (\\appro y)} \\approx \\appro y$ to yield the dominant term.\nHowever, in practice this is also bounded:\n",
                    "rendered": {
                      "text": "\\end {aligned}\n\\end {equation}\n\nNotice that in this expression we expect $k_x$ and $k_y$ to be very small\n(for a concrete example, see the following section), and\n$2^{\\Exp (\\appro y)} \\approx \\appro y$ to yield the dominant term.\nHowever, in practice this is also bounded:\n",
                      "markdown": "`\\end {aligned}\n\\end {equation}\n\nNotice that in this expression we expect $k_x$ and $k_y$ to be very small\n(for a concrete example, see the following section), and\n$2^{\\Exp (\\appro y)} \\approx \\appro y$ to yield the dominant term.\nHowever, in practice this is also bounded:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3385,
                  "startColumn": 55,
                  "endLine": 3385,
                  "endColumn": 60,
                  "snippet": {
                    "text": "with an implementation of \\texttt {mpcb\\_sqrt} that respects the branch cut\nwould end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\nand then continue with the AGM iterations.\n\n",
                    "rendered": {
                      "text": "with an implementation of \\texttt {mpcb\\_sqrt} that respects the branch cut\nwould end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\nand then continue with the AGM iterations.\n\n",
                      "markdown": "`with an implementation of \\texttt {mpcb\\_sqrt} that respects the branch cut\nwould end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\nand then continue with the AGM iterations.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3382,
                  "startColumn": 71,
                  "endLine": 3383,
                  "snippet": {
                    "text": "as described in~\\S\\ref {ssec:agm}.\nIf $\\Re (\\appro {b_0}) < 0$, then the angle is~$\\pi$, and the complex ball\ncontaining~$b_0$ crosses the negative real axis; the first step of the AGM\nwith an implementation of \\texttt {mpcb\\_sqrt} that respects the branch cut\nwould end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\n",
                    "rendered": {
                      "text": "as described in~\\S\\ref {ssec:agm}.\nIf $\\Re (\\appro {b_0}) < 0$, then the angle is~$\\pi$, and the complex ball\ncontaining~$b_0$ crosses the negative real axis; the first step of the AGM\nwith an implementation of \\texttt {mpcb\\_sqrt} that respects the branch cut\nwould end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\n",
                      "markdown": "`as described in~\\S\\ref {ssec:agm}.\nIf $\\Re (\\appro {b_0}) < 0$, then the angle is~$\\pi$, and the complex ball\ncontaining~$b_0$ crosses the negative real axis; the first step of the AGM\nwith an implementation of \\texttt {mpcb\\_sqrt} that respects the branch cut\nwould end up with a ball containing $\\pm \\sqrt {|b_0|} \\cdot i$ and thus\nthe origin, which is completely useless. We may, however, in this case use\nan implementation of the square root placing the branch cut differently and\nreturning a ball centred at some approximation of $+ \\sqrt {|b_0|} \\cdot i$,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3366,
                  "startColumn": 65,
                  "endLine": 3367,
                  "snippet": {
                    "text": "\nImplementing the AGM (see \\S\\ref {ssec:agm}) for complex balls would\nrequire to check whether the input crosses the negative real axis, where\nwe have placed the branch cut (which is inherited from the branch cut\nof the complex square root). However if the input is a complex number,\nwhich can be considered to be exact, then an implementation using complex\nballs can obtain a correctly rounded result with a greatly simplified\nanalysis compared to~\\S\\ref {ssec:agm}.\n",
                    "rendered": {
                      "text": "\nImplementing the AGM (see \\S\\ref {ssec:agm}) for complex balls would\nrequire to check whether the input crosses the negative real axis, where\nwe have placed the branch cut (which is inherited from the branch cut\nof the complex square root). However if the input is a complex number,\nwhich can be considered to be exact, then an implementation using complex\nballs can obtain a correctly rounded result with a greatly simplified\nanalysis compared to~\\S\\ref {ssec:agm}.\n",
                      "markdown": "`\nImplementing the AGM (see \\S\\ref {ssec:agm}) for complex balls would\nrequire to check whether the input crosses the negative real axis, where\nwe have placed the branch cut (which is inherited from the branch cut\nof the complex square root). However if the input is a complex number,\nwhich can be considered to be exact, then an implementation using complex\nballs can obtain a correctly rounded result with a greatly simplified\nanalysis compared to~\\S\\ref {ssec:agm}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3366,
                  "startColumn": 25,
                  "endLine": 3366,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nImplementing the AGM (see \\S\\ref {ssec:agm}) for complex balls would\nrequire to check whether the input crosses the negative real axis, where\nwe have placed the branch cut (which is inherited from the branch cut\nof the complex square root). However if the input is a complex number,\nwhich can be considered to be exact, then an implementation using complex\nballs can obtain a correctly rounded result with a greatly simplified\n",
                    "rendered": {
                      "text": "\nImplementing the AGM (see \\S\\ref {ssec:agm}) for complex balls would\nrequire to check whether the input crosses the negative real axis, where\nwe have placed the branch cut (which is inherited from the branch cut\nof the complex square root). However if the input is a complex number,\nwhich can be considered to be exact, then an implementation using complex\nballs can obtain a correctly rounded result with a greatly simplified\n",
                      "markdown": "`\nImplementing the AGM (see \\S\\ref {ssec:agm}) for complex balls would\nrequire to check whether the input crosses the negative real axis, where\nwe have placed the branch cut (which is inherited from the branch cut\nof the complex square root). However if the input is a complex number,\nwhich can be considered to be exact, then an implementation using complex\nballs can obtain a correctly rounded result with a greatly simplified\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3315,
                  "startColumn": 27,
                  "endLine": 3315,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\\draw (2,1) circle (1.5);\n\\draw (1.95,0.95) -- (2.05,1.05) node [above]{$c = x + i y$};\n\\draw (1.95,1.05) -- (2.05,0.95);\n\\draw (2,-0.05) -- (2,0.05) node [below]{$x$};\n\\end {tikzpicture}\n\\end {center}\n\n",
                    "rendered": {
                      "text": "\\draw (2,1) circle (1.5);\n\\draw (1.95,0.95) -- (2.05,1.05) node [above]{$c = x + i y$};\n\\draw (1.95,1.05) -- (2.05,0.95);\n\\draw (2,-0.05) -- (2,0.05) node [below]{$x$};\n\\end {tikzpicture}\n\\end {center}\n\n",
                      "markdown": "`\\draw (2,1) circle (1.5);\n\\draw (1.95,0.95) -- (2.05,1.05) node [above]{$c = x + i y$};\n\\draw (1.95,1.05) -- (2.05,0.95);\n\\draw (2,-0.05) -- (2,0.05) node [below]{$x$};\n\\end {tikzpicture}\n\\end {center}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 3313,
                  "startColumn": 32,
                  "endLine": 3313,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\\draw [->](-1,0) -- (4,0);\n\\draw [->](0,-1) -- (0,3);\n\\draw (2,1) circle (1.5);\n\\draw (1.95,0.95) -- (2.05,1.05) node [above]{$c = x + i y$};\n\\draw (1.95,1.05) -- (2.05,0.95);\n\\draw (2,-0.05) -- (2,0.05) node [below]{$x$};\n\\end {tikzpicture}\n",
                    "rendered": {
                      "text": "\\draw [->](-1,0) -- (4,0);\n\\draw [->](0,-1) -- (0,3);\n\\draw (2,1) circle (1.5);\n\\draw (1.95,0.95) -- (2.05,1.05) node [above]{$c = x + i y$};\n\\draw (1.95,1.05) -- (2.05,0.95);\n\\draw (2,-0.05) -- (2,0.05) node [below]{$x$};\n\\end {tikzpicture}\n",
                      "markdown": "`\\draw [->](-1,0) -- (4,0);\n\\draw [->](0,-1) -- (0,3);\n\\draw (2,1) circle (1.5);\n\\draw (1.95,0.95) -- (2.05,1.05) node [above]{$c = x + i y$};\n\\draw (1.95,1.05) -- (2.05,0.95);\n\\draw (2,-0.05) -- (2,0.05) node [below]{$x$};\n\\end {tikzpicture}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2933,
                  "startColumn": 56,
                  "endLine": 2933,
                  "endColumn": 62,
                  "snippet": {
                    "text": "= \\frac {|\\sqrt {\\corr {b_0}}|}{|\\corr {a_1}|}.\n\\]\nSince we have to decide on the number of iterations from approximations\nto $b_0$ and $a_1$ instead of the correct values, we may wish to replace\n$b_0$ by $\\appro {b_0}$ and $a_1$ by $\\appro {a_1}$. (In fact the\narguments will be quite delicate and switch between the different\nquantities.)\n",
                    "rendered": {
                      "text": "= \\frac {|\\sqrt {\\corr {b_0}}|}{|\\corr {a_1}|}.\n\\]\nSince we have to decide on the number of iterations from approximations\nto $b_0$ and $a_1$ instead of the correct values, we may wish to replace\n$b_0$ by $\\appro {b_0}$ and $a_1$ by $\\appro {a_1}$. (In fact the\narguments will be quite delicate and switch between the different\nquantities.)\n",
                      "markdown": "`= \\frac {|\\sqrt {\\corr {b_0}}|}{|\\corr {a_1}|}.\n\\]\nSince we have to decide on the number of iterations from approximations\nto $b_0$ and $a_1$ instead of the correct values, we may wish to replace\n$b_0$ by $\\appro {b_0}$ and $a_1$ by $\\appro {a_1}$. (In fact the\narguments will be quite delicate and switch between the different\nquantities.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2583,
                  "startColumn": 59,
                  "endLine": 2583,
                  "endColumn": 64,
                  "snippet": {
                    "text": "part, so that also $\\Im (\\AGM (1, \\corr {b_0}))$ will be positive.\nNotice that $\\Im (\\AGM (1, \\corr {b_0}))$ has the same sign as\n$\\Im (\\corr {b_0})$ unless\n$\\corr {b_0}$ is real, so this choice determines our branch cut for $\\AGM$.\n\nSo in the following, we analyse the computation of $\\AGM (1, \\appro {b_0})$\nwith\n",
                    "rendered": {
                      "text": "part, so that also $\\Im (\\AGM (1, \\corr {b_0}))$ will be positive.\nNotice that $\\Im (\\AGM (1, \\corr {b_0}))$ has the same sign as\n$\\Im (\\corr {b_0})$ unless\n$\\corr {b_0}$ is real, so this choice determines our branch cut for $\\AGM$.\n\nSo in the following, we analyse the computation of $\\AGM (1, \\appro {b_0})$\nwith\n",
                      "markdown": "`part, so that also $\\Im (\\AGM (1, \\corr {b_0}))$ will be positive.\nNotice that $\\Im (\\AGM (1, \\corr {b_0}))$ has the same sign as\n$\\Im (\\corr {b_0})$ unless\n$\\corr {b_0}$ is real, so this choice determines our branch cut for $\\AGM$.\n\nSo in the following, we analyse the computation of $\\AGM (1, \\appro {b_0})$\nwith\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 2390,
                  "startColumn": 53,
                  "endLine": 2390,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n\\subsection {\\texttt {mpc\\_rootofunity}}\n\nConsider co-prime integers $n > 0$ and $k \\geq 0$. We wish to compute\nthe primitive $n$-th root of unity $e^{2 \\pi i k / n}$.\nFirst, we compute $\\pi$ with rounding to nearest and an absolute error\nof \\ulp{0.5}. Using Proposition~\\ref {prop:relerror} we obtain a relative\n",
                    "rendered": {
                      "text": "\n\\subsection {\\texttt {mpc\\_rootofunity}}\n\nConsider co-prime integers $n > 0$ and $k \\geq 0$. We wish to compute\nthe primitive $n$-th root of unity $e^{2 \\pi i k / n}$.\nFirst, we compute $\\pi$ with rounding to nearest and an absolute error\nof \\ulp{0.5}. Using Proposition~\\ref {prop:relerror} we obtain a relative\n",
                      "markdown": "`\n\\subsection {\\texttt {mpc\\_rootofunity}}\n\nConsider co-prime integers $n > 0$ and $k \\geq 0$. We wish to compute\nthe primitive $n$-th root of unity $e^{2 \\pi i k / n}$.\nFirst, we compute $\\pi$ with rounding to nearest and an absolute error\nof \\ulp{0.5}. Using Proposition~\\ref {prop:relerror} we obtain a relative\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1352,
                  "startColumn": 70,
                  "endLine": 1352,
                  "endColumn": 75,
                  "snippet": {
                    "text": "Let $z = x + i y$.\n\nLet $w = \\sqrt { \\frac {|x| + \\sqrt {x^2 + y^2}}{2}}$ and\n$t = \\frac {y}{2w}$. Then $(w + it)^2 = |x| + iy$, and with the branch cut on the negative real axis we obtain\n\\[\n\\sqrt z = \\left\\{\n\\begin {array}{cl}\n",
                    "rendered": {
                      "text": "Let $z = x + i y$.\n\nLet $w = \\sqrt { \\frac {|x| + \\sqrt {x^2 + y^2}}{2}}$ and\n$t = \\frac {y}{2w}$. Then $(w + it)^2 = |x| + iy$, and with the branch cut on the negative real axis we obtain\n\\[\n\\sqrt z = \\left\\{\n\\begin {array}{cl}\n",
                      "markdown": "`Let $z = x + i y$.\n\nLet $w = \\sqrt { \\frac {|x| + \\sqrt {x^2 + y^2}}{2}}$ and\n$t = \\frac {y}{2w}$. Then $(w + it)^2 = |x| + iy$, and with the branch cut on the negative real axis we obtain\n\\[\n\\sqrt z = \\left\\{\n\\begin {array}{cl}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/doc/algorithms.tex"
                },
                "region": {
                  "startLine": 1106,
                  "startColumn": 2,
                  "endLine": 1106,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\\S\\ref {sssec:propmul}, in particular that all higher order error terms\n(involving $\\epsilon_1^2$, $\\epsilon_2^2$, $\\epsilon_1 \\epsilon_2$\nor higher powers) are absorbed by $2^{\\Exp (\\appro x) - p}$,\nwe find the exact same error estimate \\eqref {eq:propmulcomrel}\nalso for the case of division.\n\n\n",
                    "rendered": {
                      "text": "\\S\\ref {sssec:propmul}, in particular that all higher order error terms\n(involving $\\epsilon_1^2$, $\\epsilon_2^2$, $\\epsilon_1 \\epsilon_2$\nor higher powers) are absorbed by $2^{\\Exp (\\appro x) - p}$,\nwe find the exact same error estimate \\eqref {eq:propmulcomrel}\nalso for the case of division.\n\n\n",
                      "markdown": "`\\S\\ref {sssec:propmul}, in particular that all higher order error terms\n(involving $\\epsilon_1^2$, $\\epsilon_2^2$, $\\epsilon_1 \\epsilon_2$\nor higher powers) are absorbed by $2^{\\Exp (\\appro x) - p}$,\nwe find the exact same error estimate \\eqref {eq:propmulcomrel}\nalso for the case of division.\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 2,
                  "endLine": 92,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  gmp_randinit_default (rands);\n  rands_initialized = 1;\n\n  environment_seed = getenv (\"GMP_CHECK_RANDOMIZE\");\n  if (environment_seed == NULL)\n      gmp_randseed_ui (rands, 0xfac11e);\n  else\n",
                    "rendered": {
                      "text": "  gmp_randinit_default (rands);\n  rands_initialized = 1;\n\n  environment_seed = getenv (\"GMP_CHECK_RANDOMIZE\");\n  if (environment_seed == NULL)\n      gmp_randseed_ui (rands, 0xfac11e);\n  else\n",
                      "markdown": "`  gmp_randinit_default (rands);\n  rands_initialized = 1;\n\n  environment_seed = getenv (\"GMP_CHECK_RANDOMIZE\");\n  if (environment_seed == NULL)\n      gmp_randseed_ui (rands, 0xfac11e);\n  else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 30,
                  "endLine": 286,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                    "rendered": {
                      "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                      "markdown": "`  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 30,
                  "endLine": 243,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                    "rendered": {
                      "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                      "markdown": "`  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 30,
                  "endLine": 212,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                    "rendered": {
                      "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                      "markdown": "`  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 30,
                  "endLine": 155,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                    "rendered": {
                      "text": "  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                      "markdown": "`  if (!rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 30,
                  "endLine": 85,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  if (rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                    "rendered": {
                      "text": "  if (rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n",
                      "markdown": "`  if (rands_initialized)\n    {\n      fprintf (stderr,\n               \"Put test_start at the beginning of your test function.\\n\");\n      exit (1);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/random.c"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 9,
                  "endLine": 106,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          seed = (unsigned long int) (tv.tv_sec + tv.tv_usec);\n#else\n          time_t  tv;\n          time (&tv);\n          seed = (unsigned long int) tv;\n#endif\n          gmp_randseed_ui (rands, seed);\n",
                    "rendered": {
                      "text": "          seed = (unsigned long int) (tv.tv_sec + tv.tv_usec);\n#else\n          time_t  tv;\n          time (&tv);\n          seed = (unsigned long int) tv;\n#endif\n          gmp_randseed_ui (rands, seed);\n",
                      "markdown": "`          seed = (unsigned long int) (tv.tv_sec + tv.tv_usec);\n#else\n          time_t  tv;\n          time (&tv);\n          seed = (unsigned long int) tv;\n#endif\n          gmp_randseed_ui (rands, seed);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/norm.dat"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 64,
                  "endLine": 81,
                  "endColumn": 68,
                  "snippet": {
                    "text": "# infinite loop reported by E. Thome\n- 250 +0 250 -0xf.fdda3457c3e69e5841461d505b42987feb42867a4a2d2872179c4efa20054c0@-136943039 250 -0xc.670d1beda685fdd771b6246e32ff49ec4fd70aec25367444e00933e6965d3c0@-136943040 N\n\n# inexact values: norm (2+i)=5, in the middle between two values at precision 2\n- 2 4  2 2 2 1 D\n- 2 4  2 2 2 1 Z\n+ 2 6  2 2 2 1 U\n",
                    "rendered": {
                      "text": "# infinite loop reported by E. Thome\n- 250 +0 250 -0xf.fdda3457c3e69e5841461d505b42987feb42867a4a2d2872179c4efa20054c0@-136943039 250 -0xc.670d1beda685fdd771b6246e32ff49ec4fd70aec25367444e00933e6965d3c0@-136943040 N\n\n# inexact values: norm (2+i)=5, in the middle between two values at precision 2\n- 2 4  2 2 2 1 D\n- 2 4  2 2 2 1 Z\n+ 2 6  2 2 2 1 U\n",
                      "markdown": "`# infinite loop reported by E. Thome\n- 250 +0 250 -0xf.fdda3457c3e69e5841461d505b42987feb42867a4a2d2872179c4efa20054c0@-136943039 250 -0xc.670d1beda685fdd771b6246e32ff49ec4fd70aec25367444e00933e6965d3c0@-136943040 N\n\n# inexact values: norm (2+i)=5, in the middle between two values at precision 2\n- 2 4  2 2 2 1 D\n- 2 4  2 2 2 1 Z\n+ 2 6  2 2 2 1 U\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/configure.ac"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n# Check for CC and CFLAGS in gmp.h unless the user specified one of them\n# look for EGREP and SED here, see continued problem\n# at https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-01/msg00001.html\nAC_PROG_EGREP\nAC_PROG_SED\nif test -z \"$USER_CC\" && test -z \"$USER_CFLAGS\"; then\n",
                    "rendered": {
                      "text": "\n# Check for CC and CFLAGS in gmp.h unless the user specified one of them\n# look for EGREP and SED here, see continued problem\n# at https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-01/msg00001.html\nAC_PROG_EGREP\nAC_PROG_SED\nif test -z \"$USER_CC\" && test -z \"$USER_CFLAGS\"; then\n",
                      "markdown": "`\n# Check for CC and CFLAGS in gmp.h unless the user specified one of them\n# look for EGREP and SED here, see continued problem\n# at https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-01/msg00001.html\nAC_PROG_EGREP\nAC_PROG_SED\nif test -z \"$USER_CC\" && test -z \"$USER_CFLAGS\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/configure.ac"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 17,
                  "endLine": 227,
                  "endColumn": 22,
                  "snippet": {
                    "text": "AC_DEFINE_UNQUOTED([MPC_CC], [\"$CC\"], [C compiler])\nAC_DEFINE_UNQUOTED([MPC_GCC_VERSION], [\"$GCC_VERSION\"], [Version of gcc])\n\n# Looks for short git hash if the version string contains \"dev\"\nMPC_GITVERSION\n\n# If the environment variable MPC_DEBUG is non-empty, add compiler flags.\n",
                    "rendered": {
                      "text": "AC_DEFINE_UNQUOTED([MPC_CC], [\"$CC\"], [C compiler])\nAC_DEFINE_UNQUOTED([MPC_GCC_VERSION], [\"$GCC_VERSION\"], [Version of gcc])\n\n# Looks for short git hash if the version string contains \"dev\"\nMPC_GITVERSION\n\n# If the environment variable MPC_DEBUG is non-empty, add compiler flags.\n",
                      "markdown": "`AC_DEFINE_UNQUOTED([MPC_CC], [\"$CC\"], [C compiler])\nAC_DEFINE_UNQUOTED([MPC_GCC_VERSION], [\"$GCC_VERSION\"], [Version of gcc])\n\n# Looks for short git hash if the version string contains \"dev\"\nMPC_GITVERSION\n\n# If the environment variable MPC_DEBUG is non-empty, add compiler flags.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/configure.ac"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 20,
                  "endLine": 100,
                  "endColumn": 25,
                  "snippet": {
                    "text": "             )\n\n# Check for CC and CFLAGS in gmp.h unless the user specified one of them\n# look for EGREP and SED here, see continued problem\n# at https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-01/msg00001.html\nAC_PROG_EGREP\nAC_PROG_SED\n",
                    "rendered": {
                      "text": "             )\n\n# Check for CC and CFLAGS in gmp.h unless the user specified one of them\n# look for EGREP and SED here, see continued problem\n# at https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-01/msg00001.html\nAC_PROG_EGREP\nAC_PROG_SED\n",
                      "markdown": "`             )\n\n# Check for CC and CFLAGS in gmp.h unless the user specified one of them\n# look for EGREP and SED here, see continued problem\n# at https://sympa.inria.fr/sympa/arc/mpc-discuss/2012-01/msg00001.html\nAC_PROG_EGREP\nAC_PROG_SED\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/read_description.c"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 31,
                  "endLine": 157,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    name = sparam_typeval[s].name;\n  else\n    {\n      printf (\"Error: Unable to find the enum type\\n\");\n      exit (1);\n    }\n  return name;\n",
                    "rendered": {
                      "text": "    name = sparam_typeval[s].name;\n  else\n    {\n      printf (\"Error: Unable to find the enum type\\n\");\n      exit (1);\n    }\n  return name;\n",
                      "markdown": "`    name = sparam_typeval[s].name;\n  else\n    {\n      printf (\"Error: Unable to find the enum type\\n\");\n      exit (1);\n    }\n  return name;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/read_description.c"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 31,
                  "endLine": 135,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    r = sparam_typeval[s].val;\n  else\n    {\n      printf (\"Error: Unable to find the type  '%s'\\n\",name);\n      exit (1);\n    }\n  return r;\n",
                    "rendered": {
                      "text": "    r = sparam_typeval[s].val;\n  else\n    {\n      printf (\"Error: Unable to find the type  '%s'\\n\",name);\n      exit (1);\n    }\n  return r;\n",
                      "markdown": "`    r = sparam_typeval[s].val;\n  else\n    {\n      printf (\"Error: Unable to find the type  '%s'\\n\",name);\n      exit (1);\n    }\n  return r;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/NEWS"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 16,
                  "endLine": 26,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      whether the rounded real/imaginary parts were smaller/equal/greater\n      than the exact values), but the computed complex value was correct.\n  - Remove the unmaintained Makefile.vc; build files for Visual Studio\n    can be found at https://github.com/BrianGladman/mpc .\n\nChanges in version 1.2.1, released in October 2020:\n  - Bug fixes:\n",
                    "rendered": {
                      "text": "      whether the rounded real/imaginary parts were smaller/equal/greater\n      than the exact values), but the computed complex value was correct.\n  - Remove the unmaintained Makefile.vc; build files for Visual Studio\n    can be found at https://github.com/BrianGladman/mpc .\n\nChanges in version 1.2.1, released in October 2020:\n  - Bug fixes:\n",
                      "markdown": "`      whether the rounded real/imaginary parts were smaller/equal/greater\n      than the exact values), but the computed complex value was correct.\n  - Remove the unmaintained Makefile.vc; build files for Visual Studio\n    can be found at https://github.com/BrianGladman/mpc .\n\nChanges in version 1.2.1, released in October 2020:\n  - Bug fixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/NEWS"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 27,
                  "endLine": 137,
                  "snippet": {
                    "text": "Changes in version 0.7 (\"Campanula uniflora\"), released in September 2009:\n  - New functions: mpc_pow, mpc_set_nan, mpc_swap\n  - Bug fixes:\n    - mpc_log: along branch cut\n    - mpc_norm: infinite loop in case of overflow\n    - mpc_ui_div, mpc_div, mpc_fr_div: handling of division by 0 and\n      infinities following the example code of the C99 standard\n    - compilation with g++\n",
                    "rendered": {
                      "text": "Changes in version 0.7 (\"Campanula uniflora\"), released in September 2009:\n  - New functions: mpc_pow, mpc_set_nan, mpc_swap\n  - Bug fixes:\n    - mpc_log: along branch cut\n    - mpc_norm: infinite loop in case of overflow\n    - mpc_ui_div, mpc_div, mpc_fr_div: handling of division by 0 and\n      infinities following the example code of the C99 standard\n    - compilation with g++\n",
                      "markdown": "`Changes in version 0.7 (\"Campanula uniflora\"), released in September 2009:\n  - New functions: mpc_pow, mpc_set_nan, mpc_swap\n  - Bug fixes:\n    - mpc_log: along branch cut\n    - mpc_norm: infinite loop in case of overflow\n    - mpc_ui_div, mpc_div, mpc_fr_div: handling of division by 0 and\n      infinities following the example code of the C99 standard\n    - compilation with g++\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 58,
                  "endLine": 12,
                  "endColumn": 66,
                  "snippet": {
                    "text": "      - small\n   image: docker:cli\n   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n",
                    "rendered": {
                      "text": "      - small\n   image: docker:cli\n   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n",
                      "markdown": "`      - small\n   image: docker:cli\n   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 15,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n   only:\n      changes:\n         - Dockerfile\n",
                    "rendered": {
                      "text": "      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n   only:\n      changes:\n         - Dockerfile\n",
                      "markdown": "`      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n   only:\n      changes:\n         - Dockerfile\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 15,
                  "snippet": {
                    "text": "   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n   only:\n      changes:\n",
                    "rendered": {
                      "text": "   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n   only:\n      changes:\n",
                      "markdown": "`   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n   only:\n      changes:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - small\n   image: docker:cli\n   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n",
                    "rendered": {
                      "text": "      - small\n   image: docker:cli\n   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n",
                      "markdown": "`      - small\n   image: docker:cli\n   before_script:\n      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n   script:\n      - docker build -f Dockerfile -t $CI_REGISTRY_IMAGE .\n      - docker push $CI_REGISTRY_IMAGE\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/sqr.dat"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 60,
                  "endLine": 129,
                  "endColumn": 64,
                  "snippet": {
                    "text": "+ - 53  0xfdbac097c8dc58p+2096 53 -0x7f6e5d4c3b2a2p+1036   53 -0xfedcba9876543p+1024 53  0x10000000000001p-42  U D\n\n# improve test coverage:\n# For op=x+i*y, we need a case where x+y and x-y are inexact at the\n# higher computing precision, and where x and y do not have too\n# distinct exponents so that Karatsuba gets triggered...\n# (2^44 + i*(2^29 + 1))^2 \\approx (2^88-2^58) + i*2^45*(2^29+1)\n",
                    "rendered": {
                      "text": "+ - 53  0xfdbac097c8dc58p+2096 53 -0x7f6e5d4c3b2a2p+1036   53 -0xfedcba9876543p+1024 53  0x10000000000001p-42  U D\n\n# improve test coverage:\n# For op=x+i*y, we need a case where x+y and x-y are inexact at the\n# higher computing precision, and where x and y do not have too\n# distinct exponents so that Karatsuba gets triggered...\n# (2^44 + i*(2^29 + 1))^2 \\approx (2^88-2^58) + i*2^45*(2^29+1)\n",
                      "markdown": "`+ - 53  0xfdbac097c8dc58p+2096 53 -0x7f6e5d4c3b2a2p+1036   53 -0xfedcba9876543p+1024 53  0x10000000000001p-42  U D\n\n# improve test coverage:\n# For op=x+i*y, we need a case where x+y and x-y are inexact at the\n# higher computing precision, and where x and y do not have too\n# distinct exponents so that Karatsuba gets triggered...\n# (2^44 + i*(2^29 + 1))^2 \\approx (2^88-2^58) + i*2^45*(2^29+1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/tcos.c"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 16,
                  "endLine": 39,
                  "endColumn": 60,
                  "snippet": {
                    "text": "  mpfr_set_str (mpc_realref(expected), \"7.57c5b08a2b11b660d906a354289b0724b9c4b237\"\n                \"95abe33424e8d9858e534bd5d776ddd18e34b0240\", 16, MPFR_RNDN);\n  mpfr_set_str (mpc_imagref(expected), \"-1.f41a389646d068e0263561cb3c5d1df763945ad\"\n                \"ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46\", 16,MPFR_RNDN);\n\n  mpc_cos (got, op, MPC_RNDNN);\n  if (mpc_cmp (got, expected) != 0)\n",
                    "rendered": {
                      "text": "  mpfr_set_str (mpc_realref(expected), \"7.57c5b08a2b11b660d906a354289b0724b9c4b237\"\n                \"95abe33424e8d9858e534bd5d776ddd18e34b0240\", 16, MPFR_RNDN);\n  mpfr_set_str (mpc_imagref(expected), \"-1.f41a389646d068e0263561cb3c5d1df763945ad\"\n                \"ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46\", 16,MPFR_RNDN);\n\n  mpc_cos (got, op, MPC_RNDNN);\n  if (mpc_cmp (got, expected) != 0)\n",
                      "markdown": "`  mpfr_set_str (mpc_realref(expected), \"7.57c5b08a2b11b660d906a354289b0724b9c4b237\"\n                \"95abe33424e8d9858e534bd5d776ddd18e34b0240\", 16, MPFR_RNDN);\n  mpfr_set_str (mpc_imagref(expected), \"-1.f41a389646d068e0263561cb3c5d1df763945ad\"\n                \"ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46\", 16,MPFR_RNDN);\n\n  mpc_cos (got, op, MPC_RNDNN);\n  if (mpc_cmp (got, expected) != 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/tests/tcos.c"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 16,
                  "endLine": 37,
                  "endColumn": 59,
                  "snippet": {
                    "text": "  mpfr_set_str (mpc_imagref(op), \"-2.b7a0c80bcacf1ccbbac614bf53a58b672b1b503161bee\"\n                \"59a82e46a23570b652f7ba5f01ef766d1c50\", 16,MPFR_RNDN);\n  mpfr_set_str (mpc_realref(expected), \"7.57c5b08a2b11b660d906a354289b0724b9c4b237\"\n                \"95abe33424e8d9858e534bd5d776ddd18e34b0240\", 16, MPFR_RNDN);\n  mpfr_set_str (mpc_imagref(expected), \"-1.f41a389646d068e0263561cb3c5d1df763945ad\"\n                \"ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46\", 16,MPFR_RNDN);\n\n",
                    "rendered": {
                      "text": "  mpfr_set_str (mpc_imagref(op), \"-2.b7a0c80bcacf1ccbbac614bf53a58b672b1b503161bee\"\n                \"59a82e46a23570b652f7ba5f01ef766d1c50\", 16,MPFR_RNDN);\n  mpfr_set_str (mpc_realref(expected), \"7.57c5b08a2b11b660d906a354289b0724b9c4b237\"\n                \"95abe33424e8d9858e534bd5d776ddd18e34b0240\", 16, MPFR_RNDN);\n  mpfr_set_str (mpc_imagref(expected), \"-1.f41a389646d068e0263561cb3c5d1df763945ad\"\n                \"ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46\", 16,MPFR_RNDN);\n\n",
                      "markdown": "`  mpfr_set_str (mpc_imagref(op), \"-2.b7a0c80bcacf1ccbbac614bf53a58b672b1b503161bee\"\n                \"59a82e46a23570b652f7ba5f01ef766d1c50\", 16,MPFR_RNDN);\n  mpfr_set_str (mpc_realref(expected), \"7.57c5b08a2b11b660d906a354289b0724b9c4b237\"\n                \"95abe33424e8d9858e534bd5d776ddd18e34b0240\", 16, MPFR_RNDN);\n  mpfr_set_str (mpc_imagref(expected), \"-1.f41a389646d068e0263561cb3c5d1df763945ad\"\n                \"ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46\", 16,MPFR_RNDN);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/COPYING.LESSER"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 58,
                  "endLine": 110,
                  "endColumn": 62,
                  "snippet": {
                    "text": "       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n",
                    "rendered": {
                      "text": "       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n",
                      "markdown": "`       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/COPYING.LESSER"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 45,
                  "endLine": 147,
                  "endColumn": 51,
                  "snippet": {
                    "text": "  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n",
                      "markdown": "`  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/COPYING.LESSER"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 58,
                  "endLine": 141,
                  "endColumn": 64,
                  "snippet": {
                    "text": "   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n",
                    "rendered": {
                      "text": "   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n",
                      "markdown": "`   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/COPYING.LESSER"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 65,
                  "endLine": 111,
                  "snippet": {
                    "text": "       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n",
                    "rendered": {
                      "text": "       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n",
                      "markdown": "`       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 5,
                  "endLine": 399,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      sa = (sa <= sb) ? sa : sb;\n      mpz_tdiv_q_2exp (a, a, sa);\n      mpz_tdiv_q_2exp (b, b, sa);\n      ed += (mpfr_exp_t) sa;\n\n      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec\n          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)\n",
                    "rendered": {
                      "text": "      sa = (sa <= sb) ? sa : sb;\n      mpz_tdiv_q_2exp (a, a, sa);\n      mpz_tdiv_q_2exp (b, b, sa);\n      ed += (mpfr_exp_t) sa;\n\n      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec\n          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)\n",
                      "markdown": "`      sa = (sa <= sb) ? sa : sb;\n      mpz_tdiv_q_2exp (a, a, sa);\n      mpz_tdiv_q_2exp (b, b, sa);\n      ed += (mpfr_exp_t) sa;\n\n      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec\n          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 5,
                  "endLine": 390,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      mpz_mul (a, a, a);\n      mpz_submul (a, b, b);\n      mpz_mul_2exp (b, u, 1);\n      ed *= 2;\n\n      /* divide by largest 2^n possible, to avoid many loops for e.g.,\n         (2+2*I)^16777216 */\n",
                    "rendered": {
                      "text": "      mpz_mul (a, a, a);\n      mpz_submul (a, b, b);\n      mpz_mul_2exp (b, u, 1);\n      ed *= 2;\n\n      /* divide by largest 2^n possible, to avoid many loops for e.g.,\n         (2+2*I)^16777216 */\n",
                      "markdown": "`      mpz_mul (a, a, a);\n      mpz_submul (a, b, b);\n      mpz_mul_2exp (b, u, 1);\n      ed *= 2;\n\n      /* divide by largest 2^n possible, to avoid many loops for e.g.,\n         (2+2*I)^16777216 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 9,
                  "endLine": 373,
                  "endColumn": 13,
                  "snippet": {
                    "text": "            w = v;\n          mpz_tdiv_q_2exp (a, a, w);\n          mpz_tdiv_q_2exp (b, b, w);\n          ed += (mpfr_exp_t) w;\n        }\n      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec\n          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)\n",
                    "rendered": {
                      "text": "            w = v;\n          mpz_tdiv_q_2exp (a, a, w);\n          mpz_tdiv_q_2exp (b, b, w);\n          ed += (mpfr_exp_t) w;\n        }\n      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec\n          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)\n",
                      "markdown": "`            w = v;\n          mpz_tdiv_q_2exp (a, a, w);\n          mpz_tdiv_q_2exp (b, b, w);\n          ed += (mpfr_exp_t) w;\n        }\n      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec\n          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 363,
                  "startColumn": 9,
                  "endLine": 363,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        {\n          w = mpz_scan1 (a, 0);\n          mpz_tdiv_q_2exp (a, a, w);\n          ed += (mpfr_exp_t) w;\n        }\n      else\n        {\n",
                    "rendered": {
                      "text": "        {\n          w = mpz_scan1 (a, 0);\n          mpz_tdiv_q_2exp (a, a, w);\n          ed += (mpfr_exp_t) w;\n        }\n      else\n        {\n",
                      "markdown": "`        {\n          w = mpz_scan1 (a, 0);\n          mpz_tdiv_q_2exp (a, a, w);\n          ed += (mpfr_exp_t) w;\n        }\n      else\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 9,
                  "endLine": 357,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        {\n          w = mpz_scan1 (b, 0);\n          mpz_tdiv_q_2exp (b, b, w);\n          ed += (mpfr_exp_t) w;\n        }\n      else if (mpz_cmp_ui (b, 0) == 0)\n        {\n",
                    "rendered": {
                      "text": "        {\n          w = mpz_scan1 (b, 0);\n          mpz_tdiv_q_2exp (b, b, w);\n          ed += (mpfr_exp_t) w;\n        }\n      else if (mpz_cmp_ui (b, 0) == 0)\n        {\n",
                      "markdown": "`        {\n          w = mpz_scan1 (b, 0);\n          mpz_tdiv_q_2exp (b, b, w);\n          ed += (mpfr_exp_t) w;\n        }\n      else if (mpz_cmp_ui (b, 0) == 0)\n        {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 9,
                  "endLine": 350,
                  "endColumn": 13,
                  "snippet": {
                    "text": "          mpz_mul (b, b, c);\n          mpz_addmul (b, a, d); /* bc+ad */\n          mpz_swap (a, u);\n          ed += ec;\n        }\n      /* remove powers of two in (a,b) */\n      if (mpz_cmp_ui (a, 0) == 0)\n",
                    "rendered": {
                      "text": "          mpz_mul (b, b, c);\n          mpz_addmul (b, a, d); /* bc+ad */\n          mpz_swap (a, u);\n          ed += ec;\n        }\n      /* remove powers of two in (a,b) */\n      if (mpz_cmp_ui (a, 0) == 0)\n",
                      "markdown": "`          mpz_mul (b, b, c);\n          mpz_addmul (b, a, d); /* bc+ad */\n          mpz_swap (a, u);\n          ed += ec;\n        }\n      /* remove powers of two in (a,b) */\n      if (mpz_cmp_ui (a, 0) == 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 5,
                  "endLine": 342,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      mpz_mul (a, a, a);\n      mpz_submul (a, b, b);\n      mpz_mul_2exp (b, u, 1);\n      ed *= 2;\n      if (mpz_tstbit (my, t)) /* multiply by c + I*d */\n        {\n          mpz_mul (u, a, c);\n",
                    "rendered": {
                      "text": "      mpz_mul (a, a, a);\n      mpz_submul (a, b, b);\n      mpz_mul_2exp (b, u, 1);\n      ed *= 2;\n      if (mpz_tstbit (my, t)) /* multiply by c + I*d */\n        {\n          mpz_mul (u, a, c);\n",
                      "markdown": "`      mpz_mul (a, a, a);\n      mpz_submul (a, b, b);\n      mpz_mul_2exp (b, u, 1);\n      ed *= 2;\n      if (mpz_tstbit (my, t)) /* multiply by c + I*d */\n        {\n          mpz_mul (u, a, c);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 1,
                  "endLine": 332,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  t = mpz_sizeinbase (my, 2) - 1;\n  mpz_set (a, c);\n  mpz_set (b, d);\n  ed = ec;\n  /* invariant: (a + I*b) * 2^ed = ((c + I*d) * 2^ec)^trunc(my/2^t) */\n  while (t-- > 0)\n    {\n",
                    "rendered": {
                      "text": "  t = mpz_sizeinbase (my, 2) - 1;\n  mpz_set (a, c);\n  mpz_set (b, d);\n  ed = ec;\n  /* invariant: (a + I*b) * 2^ed = ((c + I*d) * 2^ec)^trunc(my/2^t) */\n  while (t-- > 0)\n    {\n",
                      "markdown": "`  t = mpz_sizeinbase (my, 2) - 1;\n  mpz_set (a, c);\n  mpz_set (b, d);\n  ed = ec;\n  /* invariant: (a + I*b) * 2^ed = ((c + I*d) * 2^ec)^trunc(my/2^t) */\n  while (t-- > 0)\n    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 5,
                  "endLine": 222,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    }\n  else\n    {\n      ed = mpfr_get_z_exp (d, mpc_imagref(x));\n      if (x_imag)\n        ec = ed;\n    }\n",
                    "rendered": {
                      "text": "    }\n  else\n    {\n      ed = mpfr_get_z_exp (d, mpc_imagref(x));\n      if (x_imag)\n        ec = ed;\n    }\n",
                      "markdown": "`    }\n  else\n    {\n      ed = mpfr_get_z_exp (d, mpc_imagref(x));\n      if (x_imag)\n        ec = ed;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/src/pow.c"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 5,
                  "endLine": 218,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  if (mpfr_zero_p (mpc_imagref(x)))\n    {\n      mpz_set_ui (d, 0);\n      ed = ec;\n    }\n  else\n    {\n",
                    "rendered": {
                      "text": "  if (mpfr_zero_p (mpc_imagref(x)))\n    {\n      mpz_set_ui (d, 0);\n      ed = ec;\n    }\n  else\n    {\n",
                      "markdown": "`  if (mpfr_zero_p (mpc_imagref(x)))\n    {\n      mpz_set_ui (d, 0);\n      ed = ec;\n    }\n  else\n    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 10,
                  "endLine": 4,
                  "endColumn": 18,
                  "snippet": {
                    "text": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n",
                    "rendered": {
                      "text": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n",
                      "markdown": "`FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 5,
                  "endLine": 7,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n      libtool \\\n      libmpfr-dev \\\n      make \\\n",
                    "rendered": {
                      "text": "   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n      libtool \\\n      libmpfr-dev \\\n      make \\\n",
                      "markdown": "`   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n      libtool \\\n      libmpfr-dev \\\n      make \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 2,
                  "endLine": 5,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n      libtool \\\n",
                    "rendered": {
                      "text": "\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n      libtool \\\n",
                      "markdown": "`\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n      libtool \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/Dockerfile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 2,
                  "endLine": 4,
                  "endColumn": 11,
                  "snippet": {
                    "text": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n",
                    "rendered": {
                      "text": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n",
                      "markdown": "`FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n      git \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/mpc.zip/Dockerfile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n",
                    "rendered": {
                      "text": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n",
                      "markdown": "`FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n   apt-get update && \\\n   apt-get install -y \\\n      autoconf \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}