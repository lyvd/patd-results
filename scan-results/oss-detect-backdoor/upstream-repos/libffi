{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 86,
                  "endLine": 212,
                  "endColumn": 92,
                  "snippet": {
                    "text": "  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n               8) case $cpuvar in\n",
                    "rendered": {
                      "text": "  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n               8) case $cpuvar in\n",
                      "markdown": "`  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n               8) case $cpuvar in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 60,
                  "endLine": 212,
                  "endColumn": 65,
                  "snippet": {
                    "text": "  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n               8) case $cpuvar in\n",
                    "rendered": {
                      "text": "  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n               8) case $cpuvar in\n",
                      "markdown": "`  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n               8) case $cpuvar in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 92,
                  "endLine": 211,
                  "endColumn": 98,
                  "snippet": {
                    "text": "     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n",
                    "rendered": {
                      "text": "     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n",
                      "markdown": "`     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 66,
                  "endLine": 211,
                  "endColumn": 71,
                  "snippet": {
                    "text": "     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n",
                    "rendered": {
                      "text": "     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n",
                      "markdown": "`     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n       0x42) case $cpuarch in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 91,
                  "endLine": 210,
                  "endColumn": 97,
                  "snippet": {
                    "text": "     ax_gcc_arch=\"$ax_gcc_arch powerpc\"\n     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n",
                    "rendered": {
                      "text": "     ax_gcc_arch=\"$ax_gcc_arch powerpc\"\n     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n",
                      "markdown": "`     ax_gcc_arch=\"$ax_gcc_arch powerpc\"\n     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 65,
                  "endLine": 210,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     ax_gcc_arch=\"$ax_gcc_arch powerpc\"\n     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n",
                    "rendered": {
                      "text": "     ax_gcc_arch=\"$ax_gcc_arch powerpc\"\n     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n",
                      "markdown": "`     ax_gcc_arch=\"$ax_gcc_arch powerpc\"\n     ;;\n  aarch64)\n     cpuimpl=`grep 'CPU implementer' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuarch=`grep 'CPU architecture' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     cpuvar=`grep 'CPU variant' /proc/cpuinfo 2> /dev/null | cut -d: -f2 | tr -d \" \" | head -n 1`\n     case $cpuimpl in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 173,
                  "endLine": 190,
                  "endColumn": 178,
                  "snippet": {
                    "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                    "rendered": {
                      "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                      "markdown": "`  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 161,
                  "endLine": 190,
                  "endColumn": 167,
                  "snippet": {
                    "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                    "rendered": {
                      "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                      "markdown": "`  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 130,
                  "endLine": 190,
                  "endColumn": 136,
                  "snippet": {
                    "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                    "rendered": {
                      "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                      "markdown": "`  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 66,
                  "endLine": 190,
                  "endColumn": 71,
                  "snippet": {
                    "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                    "rendered": {
                      "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                      "markdown": "`  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 52,
                  "endLine": 190,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                    "rendered": {
                      "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                      "markdown": "`  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 40,
                  "endLine": 190,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                    "rendered": {
                      "text": "  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n",
                      "markdown": "`  alphaev79) ax_gcc_arch=\"ev79 ev7 ev69 ev68 ev67\" ;;\n\n  powerpc*)\n     cputype=`((grep cpu /proc/cpuinfo | head -n 1 | cut -d: -f2 | cut -d, -f1 | $SED 's/ //g') ; /usr/bin/machine ; /bin/machine; grep CPU /var/run/dmesg.boot | head -n 1 | cut -d\" \" -f2) 2> /dev/null`\n     cputype=`echo $cputype | $SED -e 's/ppc//g;s/ *//g'`\n     case $cputype in\n       *750*) ax_gcc_arch=\"750 G3\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 123,
                  "endLine": 167,
                  "endColumn": 129,
                  "snippet": {
                    "text": "\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n",
                    "rendered": {
                      "text": "\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n",
                      "markdown": "`\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 87,
                  "endLine": 167,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n",
                    "rendered": {
                      "text": "\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n",
                      "markdown": "`\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_gcc_archflag.m4"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 41,
                  "endLine": 167,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n",
                    "rendered": {
                      "text": "\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n",
                      "markdown": "`\n  sparc*)\n     AC_PATH_PROG([PRTDIAG], [prtdiag], [prtdiag], [$PATH:/usr/platform/`uname -i`/sbin/:/usr/platform/`uname -m`/sbin/])\n     cputype=`(((grep cpu /proc/cpuinfo | cut -d: -f2) ; ($PRTDIAG -v |grep -i sparc) ; grep -i cpu /var/run/dmesg.boot ) | head -n 1) 2> /dev/null`\n     cputype=`echo \"$cputype\" | tr -d ' -' | $SED 's/SPARCIIi/SPARCII/' |tr $as_cr_LETTERS $as_cr_letters`\n     case $cputype in\n         *ultrasparciv*) ax_gcc_arch=\"ultrasparc4 ultrasparc3 ultrasparc v9\" ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 41,
                  "endLine": 42,
                  "endColumn": 45,
                  "snippet": {
                    "text": "# Common compiler flags\nexport CFLAGS=\"-O3 -fPIC\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nif [ \"$DEBUG\" = \"true\" ]; then\n",
                    "rendered": {
                      "text": "# Common compiler flags\nexport CFLAGS=\"-O3 -fPIC\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nif [ \"$DEBUG\" = \"true\" ]; then\n",
                      "markdown": "`# Common compiler flags\nexport CFLAGS=\"-O3 -fPIC\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nif [ \"$DEBUG\" = \"true\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\ncommand -v emcc >/dev/null 2>&1 || {\n  echo >&2 \"emsdk could not be found.  Aborting.\"\n  exit 1\n}\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\ncommand -v emcc >/dev/null 2>&1 || {\n  echo >&2 \"emsdk could not be found.  Aborting.\"\n  exit 1\n}\n",
                      "markdown": "`#!/usr/bin/env bash\ncommand -v emcc >/dev/null 2>&1 || {\n  echo >&2 \"emsdk could not be found.  Aborting.\"\n  exit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build.sh"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 30,
                  "endLine": 63,
                  "endColumn": 3,
                  "snippet": {
                    "text": "emconfigure ./configure --host=$CHOST --prefix=\"$TARGET\" --enable-static --disable-shared --disable-dependency-tracking \\\n  --disable-builddir --disable-multi-os-directory --disable-raw-api --disable-docs\nmake install\ncp fficonfig.h target/include/\ncp include/ffi_common.h target/include/\n",
                    "rendered": {
                      "text": "emconfigure ./configure --host=$CHOST --prefix=\"$TARGET\" --enable-static --disable-shared --disable-dependency-tracking \\\n  --disable-builddir --disable-multi-os-directory --disable-raw-api --disable-docs\nmake install\ncp fficonfig.h target/include/\ncp include/ffi_common.h target/include/\n",
                      "markdown": "`emconfigure ./configure --host=$CHOST --prefix=\"$TARGET\" --enable-static --disable-shared --disable-dependency-tracking \\\n  --disable-builddir --disable-multi-os-directory --disable-raw-api --disable-docs\nmake install\ncp fficonfig.h target/include/\ncp include/ffi_common.h target/include/\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 12,
                  "endLine": 62,
                  "endColumn": 3,
                  "snippet": {
                    "text": "autoreconf -fiv\nemconfigure ./configure --host=$CHOST --prefix=\"$TARGET\" --enable-static --disable-shared --disable-dependency-tracking \\\n  --disable-builddir --disable-multi-os-directory --disable-raw-api --disable-docs\nmake install\ncp fficonfig.h target/include/\ncp include/ffi_common.h target/include/\n",
                    "rendered": {
                      "text": "autoreconf -fiv\nemconfigure ./configure --host=$CHOST --prefix=\"$TARGET\" --enable-static --disable-shared --disable-dependency-tracking \\\n  --disable-builddir --disable-multi-os-directory --disable-raw-api --disable-docs\nmake install\ncp fficonfig.h target/include/\ncp include/ffi_common.h target/include/\n",
                      "markdown": "`autoreconf -fiv\nemconfigure ./configure --host=$CHOST --prefix=\"$TARGET\" --enable-static --disable-shared --disable-dependency-tracking \\\n  --disable-builddir --disable-multi-os-directory --disable-raw-api --disable-docs\nmake install\ncp fficonfig.h target/include/\ncp include/ffi_common.h target/include/\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build.sh"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 52,
                  "endLine": 43,
                  "snippet": {
                    "text": "# Common compiler flags\nexport CFLAGS=\"-O3 -fPIC\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nif [ \"$DEBUG\" = \"true\" ]; then\n  export CFLAGS+=\" -DDEBUG_F\"\n",
                    "rendered": {
                      "text": "# Common compiler flags\nexport CFLAGS=\"-O3 -fPIC\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nif [ \"$DEBUG\" = \"true\" ]; then\n  export CFLAGS+=\" -DDEBUG_F\"\n",
                      "markdown": "`# Common compiler flags\nexport CFLAGS=\"-O3 -fPIC\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nif [ \"$DEBUG\" = \"true\" ]; then\n  export CFLAGS+=\" -DDEBUG_F\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\ncommand -v emcc >/dev/null 2>&1 || {\n  echo >&2 \"emsdk could not be found.  Aborting.\"\n  exit 1\n}\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\ncommand -v emcc >/dev/null 2>&1 || {\n  echo >&2 \"emsdk could not be found.  Aborting.\"\n  exit 1\n}\n",
                      "markdown": "`#!/usr/bin/env bash\ncommand -v emcc >/dev/null 2>&1 || {\n  echo >&2 \"emsdk could not be found.  Aborting.\"\n  exit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 658,
                  "startColumn": 61,
                  "endLine": 658,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# run directly from some .exp files (outside of any test).  (Those\n# uses should eventually be eliminated.)\n\n# Because the DG framework doesn't provide a hook that is run at the\n# end of a test, we must replace dg-test with a wrapper.\n\nif { [info procs saved-dg-test] == [list] } {\n",
                    "rendered": {
                      "text": "# run directly from some .exp files (outside of any test).  (Those\n# uses should eventually be eliminated.)\n\n# Because the DG framework doesn't provide a hook that is run at the\n# end of a test, we must replace dg-test with a wrapper.\n\nif { [info procs saved-dg-test] == [list] } {\n",
                      "markdown": "`# run directly from some .exp files (outside of any test).  (Those\n# uses should eventually be eliminated.)\n\n# Because the DG framework doesn't provide a hook that is run at the\n# end of a test, we must replace dg-test with a wrapper.\n\nif { [info procs saved-dg-test] == [list] } {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 26,
                  "endLine": 560,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n    set common [ concat $common $extra_flags ]\n    foreach test $testcases {\n        set testname [file tail $test]\n        if [search_for $test \"ABI_NUM\"] {\n            set abis $targetabis\n        } else {\n",
                    "rendered": {
                      "text": "\n    set common [ concat $common $extra_flags ]\n    foreach test $testcases {\n        set testname [file tail $test]\n        if [search_for $test \"ABI_NUM\"] {\n            set abis $targetabis\n        } else {\n",
                      "markdown": "`\n    set common [ concat $common $extra_flags ]\n    foreach test $testcases {\n        set testname [file tail $test]\n        if [search_for $test \"ABI_NUM\"] {\n            set abis $targetabis\n        } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 10,
                  "endLine": 509,
                  "snippet": {
                    "text": "proc run-many-tests { testcases extra_flags } {\n    global compiler_vendor\n    global has_gccbug\n    global env\n    switch $compiler_vendor {\n      \"clang\" {\n        set common \"-W -Wall\"\n        if [info exists env(LIBFFI_TEST_OPTIMIZATION)] {\n",
                    "rendered": {
                      "text": "proc run-many-tests { testcases extra_flags } {\n    global compiler_vendor\n    global has_gccbug\n    global env\n    switch $compiler_vendor {\n      \"clang\" {\n        set common \"-W -Wall\"\n        if [info exists env(LIBFFI_TEST_OPTIMIZATION)] {\n",
                      "markdown": "`proc run-many-tests { testcases extra_flags } {\n    global compiler_vendor\n    global has_gccbug\n    global env\n    switch $compiler_vendor {\n      \"clang\" {\n        set common \"-W -Wall\"\n        if [info exists env(LIBFFI_TEST_OPTIMIZATION)] {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 50,
                  "endLine": 496,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t    set option_list $torture_without_loops\n\t}\n\n\tset nshort [file tail [file dirname $test]]/[file tail $test]\n\n\tforeach flags $option_list {\n\t    verbose \"Testing $nshort, $flags\" 1\n",
                    "rendered": {
                      "text": "\t    set option_list $torture_without_loops\n\t}\n\n\tset nshort [file tail [file dirname $test]]/[file tail $test]\n\n\tforeach flags $option_list {\n\t    verbose \"Testing $nshort, $flags\" 1\n",
                      "markdown": "`\t    set option_list $torture_without_loops\n\t}\n\n\tset nshort [file tail [file dirname $test]]/[file tail $test]\n\n\tforeach flags $option_list {\n\t    verbose \"Testing $nshort, $flags\" 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 17,
                  "endLine": 496,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t    set option_list $torture_without_loops\n\t}\n\n\tset nshort [file tail [file dirname $test]]/[file tail $test]\n\n\tforeach flags $option_list {\n\t    verbose \"Testing $nshort, $flags\" 1\n",
                    "rendered": {
                      "text": "\t    set option_list $torture_without_loops\n\t}\n\n\tset nshort [file tail [file dirname $test]]/[file tail $test]\n\n\tforeach flags $option_list {\n\t    verbose \"Testing $nshort, $flags\" 1\n",
                      "markdown": "`\t    set option_list $torture_without_loops\n\t}\n\n\tset nshort [file tail [file dirname $test]]/[file tail $test]\n\n\tforeach flags $option_list {\n\t    verbose \"Testing $nshort, $flags\" 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 55,
                  "endLine": 487,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t    continue\n\t}\n\n\t# Look for a loop within the source code - if we don't find one,\n\t# don't pass -funroll[-all]-loops.\n\tglobal torture_with_loops torture_without_loops\n\tif [expr [search_for $test \"for*(\"]+[search_for $test \"while*(\"]] {\n",
                    "rendered": {
                      "text": "\t    continue\n\t}\n\n\t# Look for a loop within the source code - if we don't find one,\n\t# don't pass -funroll[-all]-loops.\n\tglobal torture_with_loops torture_without_loops\n\tif [expr [search_for $test \"for*(\"]+[search_for $test \"while*(\"]] {\n",
                      "markdown": "`\t    continue\n\t}\n\n\t# Look for a loop within the source code - if we don't find one,\n\t# don't pass -funroll[-all]-loops.\n\tglobal torture_with_loops torture_without_loops\n\tif [expr [search_for $test \"for*(\"]+[search_for $test \"while*(\"]] {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 29,
                  "endLine": 399,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    # where it's not yet installed, then the linker won't be able to\n    # find the libgcc used by libffi.dylib.  We could pass the\n    # -dylib_file option, but that's complicated, and it's much easier\n    # to just make the linker find libgcc using -L options.\n    if { [string match \"*-*-darwin*\" $target_triplet] } {\n\tlappend options \"libs= -shared-libgcc\"\n    }\n",
                    "rendered": {
                      "text": "    # where it's not yet installed, then the linker won't be able to\n    # find the libgcc used by libffi.dylib.  We could pass the\n    # -dylib_file option, but that's complicated, and it's much easier\n    # to just make the linker find libgcc using -L options.\n    if { [string match \"*-*-darwin*\" $target_triplet] } {\n\tlappend options \"libs= -shared-libgcc\"\n    }\n",
                      "markdown": "`    # where it's not yet installed, then the linker won't be able to\n    # find the libgcc used by libffi.dylib.  We could pass the\n    # -dylib_file option, but that's complicated, and it's much easier\n    # to just make the linker find libgcc using -L options.\n    if { [string match \"*-*-darwin*\" $target_triplet] } {\n\tlappend options \"libs= -shared-libgcc\"\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 5,
                  "endLine": 397,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n    # If you're building the compiler with --prefix set to a place\n    # where it's not yet installed, then the linker won't be able to\n    # find the libgcc used by libffi.dylib.  We could pass the\n    # -dylib_file option, but that's complicated, and it's much easier\n    # to just make the linker find libgcc using -L options.\n    if { [string match \"*-*-darwin*\" $target_triplet] } {\n",
                    "rendered": {
                      "text": "\n    # If you're building the compiler with --prefix set to a place\n    # where it's not yet installed, then the linker won't be able to\n    # find the libgcc used by libffi.dylib.  We could pass the\n    # -dylib_file option, but that's complicated, and it's much easier\n    # to just make the linker find libgcc using -L options.\n    if { [string match \"*-*-darwin*\" $target_triplet] } {\n",
                      "markdown": "`\n    # If you're building the compiler with --prefix set to a place\n    # where it's not yet installed, then the linker won't be able to\n    # find the libgcc used by libffi.dylib.  We could pass the\n    # -dylib_file option, but that's complicated, and it's much easier\n    # to just make the linker find libgcc using -L options.\n    if { [string match \"*-*-darwin*\" $target_triplet] } {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 44,
                  "endLine": 250,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n\t    # Should this be handled elsewhere?\n\t    # YES.\n\t    set output_file \"./[file rootname [file tail $prog]]$exec_suffix\"\n\t    # This is the only place where we care if an executable was\n\t    # created or not.  If it was, dg.exp will try to run it.\n\t    remote_file build delete $output_file;\n",
                    "rendered": {
                      "text": "\t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n\t    # Should this be handled elsewhere?\n\t    # YES.\n\t    set output_file \"./[file rootname [file tail $prog]]$exec_suffix\"\n\t    # This is the only place where we care if an executable was\n\t    # created or not.  If it was, dg.exp will try to run it.\n\t    remote_file build delete $output_file;\n",
                      "markdown": "`\t    # FIXME: \"./\" is to cope with \".\" not being in $PATH.\n\t    # Should this be handled elsewhere?\n\t    # YES.\n\t    set output_file \"./[file rootname [file tail $prog]]$exec_suffix\"\n\t    # This is the only place where we care if an executable was\n\t    # created or not.  If it was, dg.exp will try to run it.\n\t    remote_file build delete $output_file;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 42,
                  "endLine": 241,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t}\n\t\"link\" {\n\t    set compile_type \"executable\"\n\t    set output_file \"[file rootname [file tail $prog]]$exec_suffix\"\n\t    # The following line is needed for targets like the i960 where\n\t    # the default output file is b.out.  Sigh.\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\t\"link\" {\n\t    set compile_type \"executable\"\n\t    set output_file \"[file rootname [file tail $prog]]$exec_suffix\"\n\t    # The following line is needed for targets like the i960 where\n\t    # the default output file is b.out.  Sigh.\n\t}\n",
                      "markdown": "`\t}\n\t\"link\" {\n\t    set compile_type \"executable\"\n\t    set output_file \"[file rootname [file tail $prog]]$exec_suffix\"\n\t    # The following line is needed for targets like the i960 where\n\t    # the default output file is b.out.  Sigh.\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/libffi.exp"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 42,
                  "endLine": 237,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    switch $do_what {\n\t\"compile\" {\n\t    set compile_type \"assembly\"\n\t    set output_file \"[file rootname [file tail $prog]].s\"\n\t}\n\t\"link\" {\n\t    set compile_type \"executable\"\n",
                    "rendered": {
                      "text": "    switch $do_what {\n\t\"compile\" {\n\t    set compile_type \"assembly\"\n\t    set output_file \"[file rootname [file tail $prog]].s\"\n\t}\n\t\"link\" {\n\t    set compile_type \"executable\"\n",
                      "markdown": "`    switch $do_what {\n\t\"compile\" {\n\t    set compile_type \"assembly\"\n\t    set output_file \"[file rootname [file tail $prog]].s\"\n\t}\n\t\"link\" {\n\t    set compile_type \"executable\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/lib/target-libpath.exp"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 10,
                  "endLine": 69,
                  "snippet": {
                    "text": "  }\n\n  if { $orig_environment_saved == 0 } {\n    global env\n\n    set orig_environment_saved 1\n\n    # Save the original environment.\n",
                    "rendered": {
                      "text": "  }\n\n  if { $orig_environment_saved == 0 } {\n    global env\n\n    set orig_environment_saved 1\n\n    # Save the original environment.\n",
                      "markdown": "`  }\n\n  if { $orig_environment_saved == 0 } {\n    global env\n\n    set orig_environment_saved 1\n\n    # Save the original environment.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/s390/sysv.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 30,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2000 Software AG\n            Copyright (c) 2008 Red Hat, Inc.\n\n   S390 Foreign Function Interface\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2000 Software AG\n            Copyright (c) 2008 Red Hat, Inc.\n\n   S390 Foreign Function Interface\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2000 Software AG\n            Copyright (c) 2008 Red Hat, Inc.\n\n   S390 Foreign Function Interface\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m68k/sysv.S"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\n   sysv.S - Copyright (c) 2012 Alan Hourihane\n\t    Copyright (c) 1998, 2012 Andreas Schwab\n\t    Copyright (c) 2008 Red Hat, Inc.\n\t    Copyright (c) 2012, 2016 Thorsten Glaser\n\n   m68k Foreign Function Interface\n",
                    "rendered": {
                      "text": "\t\n   sysv.S - Copyright (c) 2012 Alan Hourihane\n\t    Copyright (c) 1998, 2012 Andreas Schwab\n\t    Copyright (c) 2008 Red Hat, Inc.\n\t    Copyright (c) 2012, 2016 Thorsten Glaser\n\n   m68k Foreign Function Interface\n",
                      "markdown": "`\t\n   sysv.S - Copyright (c) 2012 Alan Hourihane\n\t    Copyright (c) 1998, 2012 Andreas Schwab\n\t    Copyright (c) 2008 Red Hat, Inc.\n\t    Copyright (c) 2012, 2016 Thorsten Glaser\n\n   m68k Foreign Function Interface\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/asm.h"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 6,
                  "endLine": 119,
                  "snippet": {
                    "text": "#define END(name)\t\t\t\t\t\t\t      \\\n  ASM_SIZE_DIRECTIVE(name)\n\n#ifdef PIC\n#define JUMPTARGET(name) name##@plt\n#else\n#define JUMPTARGET(name) name\n#endif\n",
                    "rendered": {
                      "text": "#define END(name)\t\t\t\t\t\t\t      \\\n  ASM_SIZE_DIRECTIVE(name)\n\n#ifdef PIC\n#define JUMPTARGET(name) name##@plt\n#else\n#define JUMPTARGET(name) name\n#endif\n",
                      "markdown": "`#define END(name)\t\t\t\t\t\t\t      \\\n  ASM_SIZE_DIRECTIVE(name)\n\n#ifdef PIC\n#define JUMPTARGET(name) name##@plt\n#else\n#define JUMPTARGET(name) name\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/asm.h"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 49,
                  "snippet": {
                    "text": "/* The mcount code relies on the return address being on the stack\n   to locate our caller and so it can restore it; so store one just\n   for its benefit.  */\n#ifdef PIC\n#define CALL_MCOUNT\t\t\t\t\t\t\t      \\\n  .pushsection;\t\t\t\t\t\t\t\t      \\\n  .section \".data\";\t\t\t\t\t\t\t      \\\n  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n",
                    "rendered": {
                      "text": "/* The mcount code relies on the return address being on the stack\n   to locate our caller and so it can restore it; so store one just\n   for its benefit.  */\n#ifdef PIC\n#define CALL_MCOUNT\t\t\t\t\t\t\t      \\\n  .pushsection;\t\t\t\t\t\t\t\t      \\\n  .section \".data\";\t\t\t\t\t\t\t      \\\n  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n",
                      "markdown": "`/* The mcount code relies on the return address being on the stack\n   to locate our caller and so it can restore it; so store one just\n   for its benefit.  */\n#ifdef PIC\n#define CALL_MCOUNT\t\t\t\t\t\t\t      \\\n  .pushsection;\t\t\t\t\t\t\t\t      \\\n  .section \".data\";\t\t\t\t\t\t\t      \\\n  .align ALIGNARG(2);\t\t\t\t\t\t\t      \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin_closure.S"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 14,
                  "endLine": 440,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tlfd\tf12,(FP_SAVE_BASE +  FPR_SIZE * 11)(r1)\n\tlfd\tf13,(FP_SAVE_BASE +  FPR_SIZE * 12)(r1)\n\n\t/* point back at our saved struct.  */\nLstructints:\n\taddi\tr11,r1,(SAVE_SIZE-RESULT_BYTES)\n\tlg\tr3,0(r11)\t\t\t; we end up picking the\n",
                    "rendered": {
                      "text": "\tlfd\tf12,(FP_SAVE_BASE +  FPR_SIZE * 11)(r1)\n\tlfd\tf13,(FP_SAVE_BASE +  FPR_SIZE * 12)(r1)\n\n\t/* point back at our saved struct.  */\nLstructints:\n\taddi\tr11,r1,(SAVE_SIZE-RESULT_BYTES)\n\tlg\tr3,0(r11)\t\t\t; we end up picking the\n",
                      "markdown": "`\tlfd\tf12,(FP_SAVE_BASE +  FPR_SIZE * 11)(r1)\n\tlfd\tf13,(FP_SAVE_BASE +  FPR_SIZE * 12)(r1)\n\n\t/* point back at our saved struct.  */\nLstructints:\n\taddi\tr11,r1,(SAVE_SIZE-RESULT_BYTES)\n\tlg\tr3,0(r11)\t\t\t; we end up picking the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin_closure.S"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 24,
                  "endLine": 400,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tbeq\tLfinish\t\t\t; nope.\n\t/* Recover a pointer to the results.  */\n\taddi\tr11,r1,(SAVE_SIZE-RESULT_BYTES)\n\tlg\tr3,0(r11)\t\t; we need at least this...\n\tlg\tr4,8(r11)\n\tcmpi\t0,r0,16\n\tbeq\tLfinish\t\t; special case 16 bytes we don't consider floats.\n",
                    "rendered": {
                      "text": "\tbeq\tLfinish\t\t\t; nope.\n\t/* Recover a pointer to the results.  */\n\taddi\tr11,r1,(SAVE_SIZE-RESULT_BYTES)\n\tlg\tr3,0(r11)\t\t; we need at least this...\n\tlg\tr4,8(r11)\n\tcmpi\t0,r0,16\n\tbeq\tLfinish\t\t; special case 16 bytes we don't consider floats.\n",
                      "markdown": "`\tbeq\tLfinish\t\t\t; nope.\n\t/* Recover a pointer to the results.  */\n\taddi\tr11,r1,(SAVE_SIZE-RESULT_BYTES)\n\tlg\tr3,0(r11)\t\t; we need at least this...\n\tlg\tr4,8(r11)\n\tcmpi\t0,r0,16\n\tbeq\tLfinish\t\t; special case 16 bytes we don't consider floats.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin_closure.S"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 23,
                  "endLine": 351,
                  "endColumn": 27,
                  "snippet": {
                    "text": "/* case FFI_TYPE_STRUCT  */\nLret_type13:\n#if defined(__ppc64__)\n\tlg\tr3,0(r5)\t\t; we need at least this...\n\tcmpi\t0,r0,4\n\tbgt\tLstructend\t\t; not a special small case\n\tb\tLsmallstruct\t\t; see if we need more.\n",
                    "rendered": {
                      "text": "/* case FFI_TYPE_STRUCT  */\nLret_type13:\n#if defined(__ppc64__)\n\tlg\tr3,0(r5)\t\t; we need at least this...\n\tcmpi\t0,r0,4\n\tbgt\tLstructend\t\t; not a special small case\n\tb\tLsmallstruct\t\t; see if we need more.\n",
                      "markdown": "`/* case FFI_TYPE_STRUCT  */\nLret_type13:\n#if defined(__ppc64__)\n\tlg\tr3,0(r5)\t\t; we need at least this...\n\tcmpi\t0,r0,4\n\tbgt\tLstructend\t\t; not a special small case\n\tb\tLsmallstruct\t\t; see if we need more.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin_closure.S"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 23,
                  "endLine": 75,
                  "endColumn": 28,
                  "snippet": {
                    "text": "#define FP_SAVE_BASE (LINKAGE_SIZE+PARAM_AREA)\n\n#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050\n; We no longer need the pic symbol stub for Darwin >= 9.\n#define BLCLS_HELP _ffi_closure_helper_DARWIN\n#define STRUCT_RETVALUE_P _darwin64_struct_ret_by_value_p\n#define PASS_STR_FLOATS _darwin64_pass_struct_floats\n",
                    "rendered": {
                      "text": "#define FP_SAVE_BASE (LINKAGE_SIZE+PARAM_AREA)\n\n#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050\n; We no longer need the pic symbol stub for Darwin >= 9.\n#define BLCLS_HELP _ffi_closure_helper_DARWIN\n#define STRUCT_RETVALUE_P _darwin64_struct_ret_by_value_p\n#define PASS_STR_FLOATS _darwin64_pass_struct_floats\n",
                      "markdown": "`#define FP_SAVE_BASE (LINKAGE_SIZE+PARAM_AREA)\n\n#if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1050\n; We no longer need the pic symbol stub for Darwin >= 9.\n#define BLCLS_HELP _ffi_closure_helper_DARWIN\n#define STRUCT_RETVALUE_P _darwin64_struct_ret_by_value_p\n#define PASS_STR_FLOATS _darwin64_pass_struct_floats\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/loongarch64/sysv.S"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 64,
                  "endLine": 225,
                  "endColumn": 68,
                  "snippet": {
                    "text": "/* Static trampoline code table, in which each element is a trampoline.\n\n   The trampoline clobbers t0 and t1, but we don't save them on the stack\n   because our psABI explicitly says they are scratch registers, at least for\n   ELF.  Our dynamic trampoline is already clobbering them anyway.\n\n   The trampoline has two parameters - target code to jump to and data for\n",
                    "rendered": {
                      "text": "/* Static trampoline code table, in which each element is a trampoline.\n\n   The trampoline clobbers t0 and t1, but we don't save them on the stack\n   because our psABI explicitly says they are scratch registers, at least for\n   ELF.  Our dynamic trampoline is already clobbering them anyway.\n\n   The trampoline has two parameters - target code to jump to and data for\n",
                      "markdown": "`/* Static trampoline code table, in which each element is a trampoline.\n\n   The trampoline clobbers t0 and t1, but we don't save them on the stack\n   because our psABI explicitly says they are scratch registers, at least for\n   ELF.  Our dynamic trampoline is already clobbering them anyway.\n\n   The trampoline has two parameters - target code to jump to and data for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/loongarch64/sysv.S"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 46,
                  "endLine": 88,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t   to a0, which is in the _caller's_ alloca area.  We establish our own\n\t   stack frame at the end of the call_context.\n\n\t   Anything below the arguments will be freed at this point, although\n\t   we preserve the call_context so that it can be read back in the\n\t   caller.  */\n\n",
                    "rendered": {
                      "text": "\t   to a0, which is in the _caller's_ alloca area.  We establish our own\n\t   stack frame at the end of the call_context.\n\n\t   Anything below the arguments will be freed at this point, although\n\t   we preserve the call_context so that it can be read back in the\n\t   caller.  */\n\n",
                      "markdown": "`\t   to a0, which is in the _caller's_ alloca area.  We establish our own\n\t   stack frame at the end of the call_context.\n\n\t   Anything below the arguments will be freed at this point, although\n\t   we preserve the call_context so that it can be read back in the\n\t   caller.  */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/loongarch64/sysv.S"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 15,
                  "endLine": 86,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t/* We are NOT going to set up an ordinary stack frame.  In order to pass\n\t   the stacked args to the called function, we adjust our stack pointer\n\t   to a0, which is in the _caller's_ alloca area.  We establish our own\n\t   stack frame at the end of the call_context.\n\n\t   Anything below the arguments will be freed at this point, although\n\t   we preserve the call_context so that it can be read back in the\n",
                    "rendered": {
                      "text": "\t/* We are NOT going to set up an ordinary stack frame.  In order to pass\n\t   the stacked args to the called function, we adjust our stack pointer\n\t   to a0, which is in the _caller's_ alloca area.  We establish our own\n\t   stack frame at the end of the call_context.\n\n\t   Anything below the arguments will be freed at this point, although\n\t   we preserve the call_context so that it can be read back in the\n",
                      "markdown": "`\t/* We are NOT going to set up an ordinary stack frame.  In order to pass\n\t   the stacked args to the called function, we adjust our stack pointer\n\t   to a0, which is in the _caller's_ alloca area.  We establish our own\n\t   stack frame at the end of the call_context.\n\n\t   Anything below the arguments will be freed at this point, although\n\t   we preserve the call_context so that it can be read back in the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6845,
                  "startColumn": 30,
                  "endLine": 6845,
                  "endColumn": 34,
                  "snippet": {
                    "text": "Fri Oct  4 10:19:55 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* configure.in: -D$TARGET is no longer used as a compiler switch.\n\tIt is now inserted into ffi.h at configure time.\n\t* configure: Rebuilt.\n\n\t* FFI_ABI and FFI_STATUS are now ffi_abi and ffi_status.\n",
                    "rendered": {
                      "text": "Fri Oct  4 10:19:55 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* configure.in: -D$TARGET is no longer used as a compiler switch.\n\tIt is now inserted into ffi.h at configure time.\n\t* configure: Rebuilt.\n\n\t* FFI_ABI and FFI_STATUS are now ffi_abi and ffi_status.\n",
                      "markdown": "`Fri Oct  4 10:19:55 1996  Anthony Green  <green@hoser.cygnus.com>\n\n\t* configure.in: -D$TARGET is no longer used as a compiler switch.\n\tIt is now inserted into ffi.h at configure time.\n\t* configure: Rebuilt.\n\n\t* FFI_ABI and FFI_STATUS are now ffi_abi and ffi_status.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6737,
                  "startColumn": 32,
                  "endLine": 6737,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Tue Nov 26 14:10:42 1996  Anthony Green  <green@csk3.cygnus.com>\n\n\t* acconfig.h: Added USING_PURIFY flag. This is defined when\n\t--enable-purify-safety was used at configure time.\n\n\t* configure.in (allsources): Added --enable-purify-safety switch.\n\t(VERSION): Boosted rev to 1.13.\n",
                    "rendered": {
                      "text": "Tue Nov 26 14:10:42 1996  Anthony Green  <green@csk3.cygnus.com>\n\n\t* acconfig.h: Added USING_PURIFY flag. This is defined when\n\t--enable-purify-safety was used at configure time.\n\n\t* configure.in (allsources): Added --enable-purify-safety switch.\n\t(VERSION): Boosted rev to 1.13.\n",
                      "markdown": "`Tue Nov 26 14:10:42 1996  Anthony Green  <green@csk3.cygnus.com>\n\n\t* acconfig.h: Added USING_PURIFY flag. This is defined when\n\t--enable-purify-safety was used at configure time.\n\n\t* configure.in (allsources): Added --enable-purify-safety switch.\n\t(VERSION): Boosted rev to 1.13.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6518,
                  "startColumn": 11,
                  "endLine": 6518,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t* configure.in: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.libffi.\n\t* Makefile.in: Rebuilt.\n\t* LICENSE: Update copyright notice.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n",
                    "rendered": {
                      "text": "\t* configure.in: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.libffi.\n\t* Makefile.in: Rebuilt.\n\t* LICENSE: Update copyright notice.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n",
                      "markdown": "`\t* configure.in: Rebuilt.\n\t* Makefile.am (EXTRA_DIST): Add ChangeLog.libffi.\n\t* Makefile.in: Rebuilt.\n\t* LICENSE: Update copyright notice.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6469,
                  "startColumn": 11,
                  "endLine": 6469,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t* Makefile.am (EXTRA_DIST): Add darwin64.S\n\t* Makefile.in: Rebuilt.\n\t* testsuite/lib/libffi-dg.exp: Remove libstdc++ bits from GCC tree.\n\t* LICENSE: Update WARRANTY.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n",
                    "rendered": {
                      "text": "\t* Makefile.am (EXTRA_DIST): Add darwin64.S\n\t* Makefile.in: Rebuilt.\n\t* testsuite/lib/libffi-dg.exp: Remove libstdc++ bits from GCC tree.\n\t* LICENSE: Update WARRANTY.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n",
                      "markdown": "`\t* Makefile.am (EXTRA_DIST): Add darwin64.S\n\t* Makefile.in: Rebuilt.\n\t* testsuite/lib/libffi-dg.exp: Remove libstdc++ bits from GCC tree.\n\t* LICENSE: Update WARRANTY.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6458,
                  "startColumn": 10,
                  "endLine": 6458,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* README: Update tested platforms.\n\t* configure.ac: Bump version to 2.99.6.\n\t* configure: Rebuilt.\n\n",
                    "rendered": {
                      "text": "\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* README: Update tested platforms.\n\t* configure.ac: Bump version to 2.99.6.\n\t* configure: Rebuilt.\n\n",
                      "markdown": "`\n2008-02-14  Anthony Green  <green@redhat.com>\n\n\t* README: Update tested platforms.\n\t* configure.ac: Bump version to 2.99.6.\n\t* configure: Rebuilt.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6454,
                  "startColumn": 45,
                  "endLine": 6454,
                  "endColumn": 53,
                  "snippet": {
                    "text": "          src/alpha/osf.S src/sh64/ffi.c src/sh64/sysv.S\n          src/sh64/ffitarget.h src/mips/ffi.c src/mips/ffitarget.h\n          src/mips/n32.S src/mips/o32.S src/arm/ffi.c src/arm/sysv.S\n          src/arm/ffitarget.h src/prep_cif.c: Update license text.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n",
                    "rendered": {
                      "text": "          src/alpha/osf.S src/sh64/ffi.c src/sh64/sysv.S\n          src/sh64/ffitarget.h src/mips/ffi.c src/mips/ffitarget.h\n          src/mips/n32.S src/mips/o32.S src/arm/ffi.c src/arm/sysv.S\n          src/arm/ffitarget.h src/prep_cif.c: Update license text.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n",
                      "markdown": "`          src/alpha/osf.S src/sh64/ffi.c src/sh64/sysv.S\n          src/sh64/ffitarget.h src/mips/ffi.c src/mips/ffitarget.h\n          src/mips/n32.S src/mips/o32.S src/arm/ffi.c src/arm/sysv.S\n          src/arm/ffitarget.h src/prep_cif.c: Update license text.\n\n2008-02-14  Anthony Green  <green@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6422,
                  "endLine": 6422,
                  "endColumn": 8,
                  "snippet": {
                    "text": "2008-02-15  Anthony Green  <green@redhat.com>\n\n        * man/ffi_call.3, man/ffi_prep_cif.3, man/ffi.3:\n\tUpdate dates and remove all references to ffi_prep_closure.\n\t* configure.ac: Bump version to 2.99.9.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n",
                    "rendered": {
                      "text": "2008-02-15  Anthony Green  <green@redhat.com>\n\n        * man/ffi_call.3, man/ffi_prep_cif.3, man/ffi.3:\n\tUpdate dates and remove all references to ffi_prep_closure.\n\t* configure.ac: Bump version to 2.99.9.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n",
                      "markdown": "`2008-02-15  Anthony Green  <green@redhat.com>\n\n        * man/ffi_call.3, man/ffi_prep_cif.3, man/ffi.3:\n\tUpdate dates and remove all references to ffi_prep_closure.\n\t* configure.ac: Bump version to 2.99.9.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6400,
                  "startColumn": 10,
                  "endLine": 6400,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.1.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-15  David Daney\t <ddaney@avtrex.com>\n\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.1.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-15  David Daney\t <ddaney@avtrex.com>\n\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.1.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-15  David Daney\t <ddaney@avtrex.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6387,
                  "startColumn": 10,
                  "endLine": 6387,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.2.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-21  Björn König <bkoenig@alpha-tierchen.de>\n\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.2.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-21  Björn König <bkoenig@alpha-tierchen.de>\n\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.2.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-21  Björn König <bkoenig@alpha-tierchen.de>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6365,
                  "startColumn": 10,
                  "endLine": 6365,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.3.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.  Clean up test docs.\n\n2008-02-22  Bjoern Koenig  <bkoenig@alpha-tierchen.de>\n\t    Andreas Tobler  <a.tobler@schweiz.org>\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.3.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.  Clean up test docs.\n\n2008-02-22  Bjoern Koenig  <bkoenig@alpha-tierchen.de>\n\t    Andreas Tobler  <a.tobler@schweiz.org>\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.3.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.  Clean up test docs.\n\n2008-02-22  Bjoern Koenig  <bkoenig@alpha-tierchen.de>\n\t    Andreas Tobler  <a.tobler@schweiz.org>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6354,
                  "startColumn": 10,
                  "endLine": 6354,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tBump version to 3.0.4.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-22  Anthony Green  <green@redhat.com>\n\n",
                    "rendered": {
                      "text": "\tBump version to 3.0.4.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-22  Anthony Green  <green@redhat.com>\n\n",
                      "markdown": "`\tBump version to 3.0.4.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-02-22  Anthony Green  <green@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6273,
                  "startColumn": 10,
                  "endLine": 6273,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.5.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-04-03  Anthony Green  <green@redhat.com>\n\t    Xerces Ranby  <xerxes@zafena.se>\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.5.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-04-03  Anthony Green  <green@redhat.com>\n\t    Xerces Ranby  <xerxes@zafena.se>\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.5.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-04-03  Anthony Green  <green@redhat.com>\n\t    Xerces Ranby  <xerxes@zafena.se>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6255,
                  "startColumn": 10,
                  "endLine": 6255,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.6.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.  Add documentation.\n\t* README: Update for new release.\n\n2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.6.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.  Add documentation.\n\t* README: Update for new release.\n\n2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.6.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.  Add documentation.\n\t* README: Update for new release.\n\n2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6224,
                  "startColumn": 10,
                  "endLine": 6224,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.7.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.7.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.7.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 6217,
                  "startColumn": 10,
                  "endLine": 6217,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* configure.ac: Bump version to 3.0.8.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-11-11  Anthony Green  <green@redhat.com>\n\n",
                    "rendered": {
                      "text": "\t* configure.ac: Bump version to 3.0.8.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-11-11  Anthony Green  <green@redhat.com>\n\n",
                      "markdown": "`\t* configure.ac: Bump version to 3.0.8.\n\t* configure, doc/stamp-vti, doc/version.texi: Rebuilt.\n\t* libtool-version: Increment revision.\n\t* README: Update for new release.\n\n2008-11-11  Anthony Green  <green@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5996,
                  "startColumn": 11,
                  "endLine": 5996,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\t* README: Tweaks.\n\n\t* LICENSE: Update copyright date.\n\n\t* src/Makefile.am, src/Makefile.in: Removed.\n\n",
                    "rendered": {
                      "text": "\n\t* README: Tweaks.\n\n\t* LICENSE: Update copyright date.\n\n\t* src/Makefile.am, src/Makefile.in: Removed.\n\n",
                      "markdown": "`\n\t* README: Tweaks.\n\n\t* LICENSE: Update copyright date.\n\n\t* src/Makefile.am, src/Makefile.in: Removed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5876,
                  "startColumn": 28,
                  "endLine": 5876,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* config.guess, config.sub: Update from the gcc tree.\n\tFix for PR libgcj/168.\n\n2000-03-03  Tom Tromey  <tromey@cygnus.com>\n",
                    "rendered": {
                      "text": "\n2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* config.guess, config.sub: Update from the gcc tree.\n\tFix for PR libgcj/168.\n\n2000-03-03  Tom Tromey  <tromey@cygnus.com>\n",
                      "markdown": "`\n2000-03-08  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* config.guess, config.sub: Update from the gcc tree.\n\tFix for PR libgcj/168.\n\n2000-03-03  Tom Tromey  <tromey@cygnus.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5482,
                  "startColumn": 56,
                  "endLine": 5483,
                  "snippet": {
                    "text": "\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n",
                    "rendered": {
                      "text": "\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n",
                      "markdown": "`\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5477,
                  "startColumn": 58,
                  "endLine": 5478,
                  "snippet": {
                    "text": "\n2002-05-13  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): Declare fd at\n\tbeginning of function (for older apple cc).\n\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n",
                    "rendered": {
                      "text": "\n2002-05-13  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): Declare fd at\n\tbeginning of function (for older apple cc).\n\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n",
                      "markdown": "`\n2002-05-13  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* src/powerpc/ffi_darwin.c (ffi_prep_closure): Declare fd at\n\tbeginning of function (for older apple cc).\n\n2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5214,
                  "endLine": 5214,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t* libffi/src/powerpc/aix_closure.S:\n\tLikewise.\n\t* libffi/src/powerpc/ffi_darwin.c:\n\tUpdate stackframe description for aix/darwin_closure.S.\n\n2003-02-06  Jakub Jelinek  <jakub@redhat.com>\n\n",
                    "rendered": {
                      "text": "\t* libffi/src/powerpc/aix_closure.S:\n\tLikewise.\n\t* libffi/src/powerpc/ffi_darwin.c:\n\tUpdate stackframe description for aix/darwin_closure.S.\n\n2003-02-06  Jakub Jelinek  <jakub@redhat.com>\n\n",
                      "markdown": "`\t* libffi/src/powerpc/aix_closure.S:\n\tLikewise.\n\t* libffi/src/powerpc/ffi_darwin.c:\n\tUpdate stackframe description for aix/darwin_closure.S.\n\n2003-02-06  Jakub Jelinek  <jakub@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5090,
                  "startColumn": 48,
                  "endLine": 5090,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n2003-07-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n\n\t* README: Note that libffi is not part of GCC.  Update the project\n\tURL and status.\n\n2003-06-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n",
                    "rendered": {
                      "text": "\n2003-07-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n\n\t* README: Note that libffi is not part of GCC.  Update the project\n\tURL and status.\n\n2003-06-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n",
                      "markdown": "`\n2003-07-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n\n\t* README: Note that libffi is not part of GCC.  Update the project\n\tURL and status.\n\n2003-06-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5070,
                  "startColumn": 59,
                  "endLine": 5071,
                  "snippet": {
                    "text": "\n2003-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (OFS_INT16): Set 0 for little endian case.  Update\n\tcopyright years.\n\n2003-08-02  Alan Modra  <amodra@bigpond.net.au>\n\n",
                    "rendered": {
                      "text": "\n2003-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (OFS_INT16): Set 0 for little endian case.  Update\n\tcopyright years.\n\n2003-08-02  Alan Modra  <amodra@bigpond.net.au>\n\n",
                      "markdown": "`\n2003-08-13  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (OFS_INT16): Set 0 for little endian case.  Update\n\tcopyright years.\n\n2003-08-02  Alan Modra  <amodra@bigpond.net.au>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4957,
                  "startColumn": 26,
                  "endLine": 4957,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t(ffi_closure_helper_SYSV): Return the appropriate type when\n\tthe registers are used for the structure return value.\n\t* src/sh/sysv.S (ffi_closure_SYSV): Fix the stack layout for\n\tthe 64-bit return value.  Update copyright years.\n\n2003-09-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n",
                    "rendered": {
                      "text": "\t(ffi_closure_helper_SYSV): Return the appropriate type when\n\tthe registers are used for the structure return value.\n\t* src/sh/sysv.S (ffi_closure_SYSV): Fix the stack layout for\n\tthe 64-bit return value.  Update copyright years.\n\n2003-09-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n",
                      "markdown": "`\t(ffi_closure_helper_SYSV): Return the appropriate type when\n\tthe registers are used for the structure return value.\n\t* src/sh/sysv.S (ffi_closure_SYSV): Fix the stack layout for\n\tthe 64-bit return value.  Update copyright years.\n\n2003-09-17  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4545,
                  "startColumn": 10,
                  "endLine": 4545,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t(ffi_closure_v9): Increase the frame size by 2 words.  Short-circuit\n\tFFI_TYPE_INT handling.  Load structures both in integers and\n\tfloating-point registers on return.\n\t* README: Update status of the SPARC port.\n\n2004-01-24  Andreas Tobler  <a.tobler@schweiz.ch>\n\n",
                    "rendered": {
                      "text": "\t(ffi_closure_v9): Increase the frame size by 2 words.  Short-circuit\n\tFFI_TYPE_INT handling.  Load structures both in integers and\n\tfloating-point registers on return.\n\t* README: Update status of the SPARC port.\n\n2004-01-24  Andreas Tobler  <a.tobler@schweiz.ch>\n\n",
                      "markdown": "`\t(ffi_closure_v9): Increase the frame size by 2 words.  Short-circuit\n\tFFI_TYPE_INT handling.  Load structures both in integers and\n\tfloating-point registers on return.\n\t* README: Update status of the SPARC port.\n\n2004-01-24  Andreas Tobler  <a.tobler@schweiz.ch>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4538,
                  "startColumn": 54,
                  "endLine": 4538,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\targument and call ffi_v9_layout_struct to lay out the structure on\n\tthe stack.\n\t* src/sparc/v8.S: Undef STACKFRAME before defining it.\n\t(ffi_closure_v8): Pass the structure return address.  Update call to\n\tffi_closure_sparc_inner_v8.  Short-circuit FFI_TYPE_INT handling.\n\tSkip the 'unimp' insn when returning long doubles and structures.\n\t* src/sparc/v9.S: Undef STACKFRAME before defining it.\n",
                    "rendered": {
                      "text": "\targument and call ffi_v9_layout_struct to lay out the structure on\n\tthe stack.\n\t* src/sparc/v8.S: Undef STACKFRAME before defining it.\n\t(ffi_closure_v8): Pass the structure return address.  Update call to\n\tffi_closure_sparc_inner_v8.  Short-circuit FFI_TYPE_INT handling.\n\tSkip the 'unimp' insn when returning long doubles and structures.\n\t* src/sparc/v9.S: Undef STACKFRAME before defining it.\n",
                      "markdown": "`\targument and call ffi_v9_layout_struct to lay out the structure on\n\tthe stack.\n\t* src/sparc/v8.S: Undef STACKFRAME before defining it.\n\t(ffi_closure_v8): Pass the structure return address.  Update call to\n\tffi_closure_sparc_inner_v8.  Short-circuit FFI_TYPE_INT handling.\n\tSkip the 'unimp' insn when returning long doubles and structures.\n\t* src/sparc/v9.S: Undef STACKFRAME before defining it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4525,
                  "startColumn": 12,
                  "endLine": 4525,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t(ffi_V9_return_struct): Rename into ffi_v9_layout_struct.\n\t(ffi_v9_layout_struct): Align the field following a nested structure\n\ton a word boundary.  Use memmove instead of memcpy.\n\t(ffi_call): Update call to ffi_V9_return_struct.\n\t(ffi_prep_closure): Define 'ctx' only for V8.\n\t(ffi_closure_sparc_inner): Clone into ffi_closure_sparc_inner_v8\n\tand ffi_closure_sparc_inner_v9.\n",
                    "rendered": {
                      "text": "\t(ffi_V9_return_struct): Rename into ffi_v9_layout_struct.\n\t(ffi_v9_layout_struct): Align the field following a nested structure\n\ton a word boundary.  Use memmove instead of memcpy.\n\t(ffi_call): Update call to ffi_V9_return_struct.\n\t(ffi_prep_closure): Define 'ctx' only for V8.\n\t(ffi_closure_sparc_inner): Clone into ffi_closure_sparc_inner_v8\n\tand ffi_closure_sparc_inner_v9.\n",
                      "markdown": "`\t(ffi_V9_return_struct): Rename into ffi_v9_layout_struct.\n\t(ffi_v9_layout_struct): Align the field following a nested structure\n\ton a word boundary.  Use memmove instead of memcpy.\n\t(ffi_call): Update call to ffi_V9_return_struct.\n\t(ffi_prep_closure): Define 'ctx' only for V8.\n\t(ffi_closure_sparc_inner): Clone into ffi_closure_sparc_inner_v8\n\tand ffi_closure_sparc_inner_v9.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4032,
                  "startColumn": 12,
                  "endLine": 4032,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t* src/types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n\t(FFI_TYPEDEF): Rename from FFI_INTEGRAL_TYPEDEF.  Replace size and\n\toffset parameters with a type parameter; deduce size and structure\n\talignment.  Update all users.\n\n2004-12-31  Richard Henderson  <rth@redhat.com>\n\n",
                    "rendered": {
                      "text": "\t* src/types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n\t(FFI_TYPEDEF): Rename from FFI_INTEGRAL_TYPEDEF.  Replace size and\n\toffset parameters with a type parameter; deduce size and structure\n\talignment.  Update all users.\n\n2004-12-31  Richard Henderson  <rth@redhat.com>\n\n",
                      "markdown": "`\t* src/types.c (FFI_AGGREGATE_TYPEDEF): Remove.\n\t(FFI_TYPEDEF): Rename from FFI_INTEGRAL_TYPEDEF.  Replace size and\n\toffset parameters with a type parameter; deduce size and structure\n\talignment.  Update all users.\n\n2004-12-31  Richard Henderson  <rth@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 3989,
                  "startColumn": 24,
                  "endLine": 3989,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n2005-03-23  Mike Stump  <mrs@apple.com>\n\n\t* src/powerpc/darwin.S: Update for -m64 multilib.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2005-03-21  Zack Weinberg  <zack@codesourcery.com>\n",
                    "rendered": {
                      "text": "\n2005-03-23  Mike Stump  <mrs@apple.com>\n\n\t* src/powerpc/darwin.S: Update for -m64 multilib.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2005-03-21  Zack Weinberg  <zack@codesourcery.com>\n",
                      "markdown": "`\n2005-03-23  Mike Stump  <mrs@apple.com>\n\n\t* src/powerpc/darwin.S: Update for -m64 multilib.\n\t* src/powerpc/darwin_closure.S: Likewise.\n\n2005-03-21  Zack Weinberg  <zack@codesourcery.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 3933,
                  "startColumn": 19,
                  "endLine": 3933,
                  "endColumn": 27,
                  "snippet": {
                    "text": "2005-05-08  Richard Henderson  <rth@redhat.com>\n\n\tPR libffi/21285\n\t* src/alpha/osf.S: Update unwind into to match code.\n\n2005-05-04  Andreas Degert <ad@papyrus-gmbh.de>\n\t    Richard Henderson  <rth@redhat.com>\n",
                    "rendered": {
                      "text": "2005-05-08  Richard Henderson  <rth@redhat.com>\n\n\tPR libffi/21285\n\t* src/alpha/osf.S: Update unwind into to match code.\n\n2005-05-04  Andreas Degert <ad@papyrus-gmbh.de>\n\t    Richard Henderson  <rth@redhat.com>\n",
                      "markdown": "`2005-05-08  Richard Henderson  <rth@redhat.com>\n\n\tPR libffi/21285\n\t* src/alpha/osf.S: Update unwind into to match code.\n\n2005-05-04  Andreas Degert <ad@papyrus-gmbh.de>\n\t    Richard Henderson  <rth@redhat.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 3717,
                  "startColumn": 39,
                  "endLine": 3717,
                  "endColumn": 47,
                  "snippet": {
                    "text": "2006-02-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_closure_helper_SYSV): Remove unused variable\n\tand cast integer to void * if needed.  Update the pointer to\n\tthe FP register saved area correctly.\n\n2006-02-17  Andreas Tobler  <a.tobler@schweiz.ch>\n",
                    "rendered": {
                      "text": "2006-02-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_closure_helper_SYSV): Remove unused variable\n\tand cast integer to void * if needed.  Update the pointer to\n\tthe FP register saved area correctly.\n\n2006-02-17  Andreas Tobler  <a.tobler@schweiz.ch>\n",
                      "markdown": "`2006-02-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n\n\t* src/sh/ffi.c (ffi_closure_helper_SYSV): Remove unused variable\n\tand cast integer to void * if needed.  Update the pointer to\n\tthe FP register saved area correctly.\n\n2006-02-17  Andreas Tobler  <a.tobler@schweiz.ch>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 3510,
                  "startColumn": 53,
                  "endLine": 3510,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t(fldw, fstw, fldd, fstd): Use '__asm__'.\n\t(ffi_struct_type): Add support for FFI_TYPE_SMALL_STRUCT2,\n\tFFI_TYPE_SMALL_STRUCT4 and FFI_TYPE_SMALL_STRUCT8.\n\t(ffi_prep_args_LINUX): Rename to ffi_prep_args_pa32. Update comment.\n\tSimplify incrementing of stack slot variable. Change type of local\n\t'n' to unsigned int.\n\t(ffi_size_stack_LINUX): Rename to ffi_size_stack_pa32. Handle long\n",
                    "rendered": {
                      "text": "\t(fldw, fstw, fldd, fstd): Use '__asm__'.\n\t(ffi_struct_type): Add support for FFI_TYPE_SMALL_STRUCT2,\n\tFFI_TYPE_SMALL_STRUCT4 and FFI_TYPE_SMALL_STRUCT8.\n\t(ffi_prep_args_LINUX): Rename to ffi_prep_args_pa32. Update comment.\n\tSimplify incrementing of stack slot variable. Change type of local\n\t'n' to unsigned int.\n\t(ffi_size_stack_LINUX): Rename to ffi_size_stack_pa32. Handle long\n",
                      "markdown": "`\t(fldw, fstw, fldd, fstd): Use '__asm__'.\n\t(ffi_struct_type): Add support for FFI_TYPE_SMALL_STRUCT2,\n\tFFI_TYPE_SMALL_STRUCT4 and FFI_TYPE_SMALL_STRUCT8.\n\t(ffi_prep_args_LINUX): Rename to ffi_prep_args_pa32. Update comment.\n\tSimplify incrementing of stack slot variable. Change type of local\n\t'n' to unsigned int.\n\t(ffi_size_stack_LINUX): Rename to ffi_size_stack_pa32. Handle long\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2872,
                  "startColumn": 50,
                  "endLine": 2872,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t(Whole file): Conditionally compile unwinder directives.\n\t* src/arm/sysv.S: Add unwinder directives.\n\n\t* src/arm/ffi.c (ffi_prep_args): Align structs by at least 4 bytes.\n\tOnly treat r0 as a struct address if we're actually returning a\n\tstruct by address.\n\tOnly copy the bytes that are actually within a struct.\n",
                    "rendered": {
                      "text": "\t(Whole file): Conditionally compile unwinder directives.\n\t* src/arm/sysv.S: Add unwinder directives.\n\n\t* src/arm/ffi.c (ffi_prep_args): Align structs by at least 4 bytes.\n\tOnly treat r0 as a struct address if we're actually returning a\n\tstruct by address.\n\tOnly copy the bytes that are actually within a struct.\n",
                      "markdown": "`\t(Whole file): Conditionally compile unwinder directives.\n\t* src/arm/sysv.S: Add unwinder directives.\n\n\t* src/arm/ffi.c (ffi_prep_args): Align structs by at least 4 bytes.\n\tOnly treat r0 as a struct address if we're actually returning a\n\tstruct by address.\n\tOnly copy the bytes that are actually within a struct.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2857,
                  "endLine": 2857,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\t* src/closures.c: Move defintion of MAYBE_UNUSED from here to ...\n\t* include/ffi_common.h: ... here.\n\tUpdate copyright.\n\n2007-11-17  Andreas Tobler  <a.tobler@schweiz.org>\n\n",
                    "rendered": {
                      "text": "\n\t* src/closures.c: Move defintion of MAYBE_UNUSED from here to ...\n\t* include/ffi_common.h: ... here.\n\tUpdate copyright.\n\n2007-11-17  Andreas Tobler  <a.tobler@schweiz.org>\n\n",
                      "markdown": "`\n\t* src/closures.c: Move defintion of MAYBE_UNUSED from here to ...\n\t* include/ffi_common.h: ... here.\n\tUpdate copyright.\n\n2007-11-17  Andreas Tobler  <a.tobler@schweiz.org>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2638,
                  "endLine": 2638,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\t* testsuite/lib/libffi-dg.exp: Change copyright header to refer to\n\tversion 3 of the GNU General Public License and to point readers\n\tat the COPYING3 file and the FSF's license web page.\n\t* testsuite/libffi.call/call.exp: Likewise.\n\t* testsuite/libffi.special/special.exp: Likewise.\n\n",
                    "rendered": {
                      "text": "\n\t* testsuite/lib/libffi-dg.exp: Change copyright header to refer to\n\tversion 3 of the GNU General Public License and to point readers\n\tat the COPYING3 file and the FSF's license web page.\n\t* testsuite/libffi.call/call.exp: Likewise.\n\t* testsuite/libffi.special/special.exp: Likewise.\n\n",
                      "markdown": "`\n\t* testsuite/lib/libffi-dg.exp: Change copyright header to refer to\n\tversion 3 of the GNU General Public License and to point readers\n\tat the COPYING3 file and the FSF's license web page.\n\t* testsuite/libffi.call/call.exp: Likewise.\n\t* testsuite/libffi.special/special.exp: Likewise.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2614,
                  "startColumn": 15,
                  "endLine": 2614,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tsrc/prep_cif.c,\n\tsrc/sh/ffitarget.h,\n\tsrc/sh/ffi.c,\n\tsrc/sh/sysv.S: Update license text.\n\n2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n",
                    "rendered": {
                      "text": "\tsrc/prep_cif.c,\n\tsrc/sh/ffitarget.h,\n\tsrc/sh/ffi.c,\n\tsrc/sh/sysv.S: Update license text.\n\n2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n",
                      "markdown": "`\tsrc/prep_cif.c,\n\tsrc/sh/ffitarget.h,\n\tsrc/sh/ffi.c,\n\tsrc/sh/sysv.S: Update license text.\n\n2009-05-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2060,
                  "startColumn": 39,
                  "endLine": 2060,
                  "endColumn": 47,
                  "snippet": {
                    "text": "2009-12-04  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR libffi/41908\n\t* src/x86/ffi64.c (classify_argument): Update from\n\tgcc/config/i386/i386.c.\n\t(ffi_closure_unix64_inner): Do not use the address of two consecutive\n\tSSE registers directly.\n",
                    "rendered": {
                      "text": "2009-12-04  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR libffi/41908\n\t* src/x86/ffi64.c (classify_argument): Update from\n\tgcc/config/i386/i386.c.\n\t(ffi_closure_unix64_inner): Do not use the address of two consecutive\n\tSSE registers directly.\n",
                      "markdown": "`2009-12-04  Uros Bizjak  <ubizjak@gmail.com>\n\n\tPR libffi/41908\n\t* src/x86/ffi64.c (classify_argument): Update from\n\tgcc/config/i386/i386.c.\n\t(ffi_closure_unix64_inner): Do not use the address of two consecutive\n\tSSE registers directly.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2040,
                  "startColumn": 21,
                  "endLine": 2040,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n2009-12-05  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix.S: Update AIX32 code to be consistent with AIX64\n\tcode.\n\t* src/powerpc/aix_closure.S: Same.\n\n",
                    "rendered": {
                      "text": "\n2009-12-05  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix.S: Update AIX32 code to be consistent with AIX64\n\tcode.\n\t* src/powerpc/aix_closure.S: Same.\n\n",
                      "markdown": "`\n2009-12-05  David Edelsohn  <edelsohn@gnu.org>\n\n\t* src/powerpc/aix.S: Update AIX32 code to be consistent with AIX64\n\tcode.\n\t* src/powerpc/aix_closure.S: Same.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1877,
                  "startColumn": 10,
                  "endLine": 1877,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n2009-12-31  Anthony Green  <green@redhat.com>\n\n\t* README: Update for libffi 3.0.9.\n\n2009-12-27  Matthias Klose  <doko@ubuntu.com>\n\n",
                    "rendered": {
                      "text": "\n2009-12-31  Anthony Green  <green@redhat.com>\n\n\t* README: Update for libffi 3.0.9.\n\n2009-12-27  Matthias Klose  <doko@ubuntu.com>\n\n",
                      "markdown": "`\n2009-12-31  Anthony Green  <green@redhat.com>\n\n\t* README: Update for libffi 3.0.9.\n\n2009-12-27  Matthias Klose  <doko@ubuntu.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1651,
                  "startColumn": 31,
                  "endLine": 1651,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n\t(ffi_prep_closure_loc): Pass ffi_closure_VFP to trampoline\n\tconstruction under VFP hard-float.\n",
                    "rendered": {
                      "text": "\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n\t(ffi_prep_closure_loc): Pass ffi_closure_VFP to trampoline\n\tconstruction under VFP hard-float.\n",
                      "markdown": "`\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n\t(ffi_prep_closure_loc): Pass ffi_closure_VFP to trampoline\n\tconstruction under VFP hard-float.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1649,
                  "startColumn": 54,
                  "endLine": 1649,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n",
                    "rendered": {
                      "text": "\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n",
                      "markdown": "`\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n\t(ffi_closure_VFP): New declaration.\n\t(ffi_closure_SYSV_inner): Add new vfp_args parameter, update call to\n\tffi_prep_incoming_args_SYSV().\n\t(ffi_prep_incoming_args_SYSV): Update parameters. Add VFP argument\n\tcase handling.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1644,
                  "startColumn": 17,
                  "endLine": 1644,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n\t(ffi_call_VFP): New declaration.\n\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n",
                    "rendered": {
                      "text": "\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n\t(ffi_call_VFP): New declaration.\n\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n",
                      "markdown": "`\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n\t(ffi_call_VFP): New declaration.\n\t(ffi_call): Add VFP struct return conditions. Call ffi_call_VFP()\n\twhen ABI is FFI_VFP.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1641,
                  "startColumn": 39,
                  "endLine": 1641,
                  "endColumn": 47,
                  "snippet": {
                    "text": "2010-10-28  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/ffi.c (ffi_prep_args): Add VFP register argument handling\n\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n",
                    "rendered": {
                      "text": "2010-10-28  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/ffi.c (ffi_prep_args): Add VFP register argument handling\n\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n",
                      "markdown": "`2010-10-28  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/ffi.c (ffi_prep_args): Add VFP register argument handling\n\tcode, new parameter, and return value. Update comments.\n\t(ffi_prep_cif_machdep): Add case for VFP struct return values. Add\n\tcall to layout_vfp_args().\n\t(ffi_call_SYSV): Update declaration.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1595,
                  "endLine": 1595,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\n2010-12-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n",
                    "rendered": {
                      "text": "\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\n2010-12-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n",
                      "markdown": "`\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n\n2010-12-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1593,
                  "startColumn": 23,
                  "endLine": 1593,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n",
                    "rendered": {
                      "text": "\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n",
                      "markdown": "`\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffi_darwin.c: Likewise.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1591,
                  "endLine": 1591,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tPR libffi/29152\n\tPR libffi/42378\n\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n",
                    "rendered": {
                      "text": "\tPR libffi/29152\n\tPR libffi/42378\n\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n",
                      "markdown": "`\tPR libffi/29152\n\tPR libffi/42378\n\t* src/powerpc/darwin_closure.S: Provide Darwin64 implementation,\n\tupdate comments.\n\t* src/powerpc/ffitarget.h (POWERPC_DARWIN64): New,\n\t(FFI_TRAMPOLINE_SIZE): Update for Darwin64.\n\t* src/powerpc/darwin.S: Provide Darwin64 implementation,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1379,
                  "startColumn": 10,
                  "endLine": 1379,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t(libffi_la_SOURCES): Remove src/debug.c\n\t(EXTRA_DIST): Add src/debug.c\n\t* Makefile.in: Rebuilt.\n\t* README: Update for 3.0.11.\n\n2011-11-10  Richard Henderson  <rth@redhat.com>\n\n",
                    "rendered": {
                      "text": "\t(libffi_la_SOURCES): Remove src/debug.c\n\t(EXTRA_DIST): Add src/debug.c\n\t* Makefile.in: Rebuilt.\n\t* README: Update for 3.0.11.\n\n2011-11-10  Richard Henderson  <rth@redhat.com>\n\n",
                      "markdown": "`\t(libffi_la_SOURCES): Remove src/debug.c\n\t(EXTRA_DIST): Add src/debug.c\n\t* Makefile.in: Rebuilt.\n\t* README: Update for 3.0.11.\n\n2011-11-10  Richard Henderson  <rth@redhat.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 10,
                  "endLine": 1369,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n2011-11-12  Jasper Lievisse Adriaanse <jasper@openbsd.org>\n\n\t* README: Update list of supported OpenBSD systems.\n\n2011-11-12  Anthony Green  <green@moxielogic.com>\n\n",
                    "rendered": {
                      "text": "\n2011-11-12  Jasper Lievisse Adriaanse <jasper@openbsd.org>\n\n\t* README: Update list of supported OpenBSD systems.\n\n2011-11-12  Anthony Green  <green@moxielogic.com>\n\n",
                      "markdown": "`\n2011-11-12  Jasper Lievisse Adriaanse <jasper@openbsd.org>\n\n\t* README: Update list of supported OpenBSD systems.\n\n2011-11-12  Anthony Green  <green@moxielogic.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 962,
                  "startColumn": 10,
                  "endLine": 962,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n\t* generate-ios-source-and-headers.py: New file.\n\t* libffi.xcodeproj/project.pbxproj: New file.\n\t* README: Update instructions on building iOS binary.\n\t* build-ios.sh: Delete.\n\n2012-04-06  Anthony Green  <green@moxielogic.com>\n",
                    "rendered": {
                      "text": "\n\t* generate-ios-source-and-headers.py: New file.\n\t* libffi.xcodeproj/project.pbxproj: New file.\n\t* README: Update instructions on building iOS binary.\n\t* build-ios.sh: Delete.\n\n2012-04-06  Anthony Green  <green@moxielogic.com>\n",
                      "markdown": "`\n\t* generate-ios-source-and-headers.py: New file.\n\t* libffi.xcodeproj/project.pbxproj: New file.\n\t* README: Update instructions on building iOS binary.\n\t* build-ios.sh: Delete.\n\n2012-04-06  Anthony Green  <green@moxielogic.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 927,
                  "startColumn": 10,
                  "endLine": 927,
                  "endColumn": 18,
                  "snippet": {
                    "text": "2012-05-05  Nicolas Lelong\n\n\t* libffi.xcodeproj/project.pbxproj: Fixes.\n\t* README: Update for iOS builds.\n\n2012-04-23  Alexandre Keunecke I. de Mendonca <alexandre.keunecke@gmail.com>\n\n",
                    "rendered": {
                      "text": "2012-05-05  Nicolas Lelong\n\n\t* libffi.xcodeproj/project.pbxproj: Fixes.\n\t* README: Update for iOS builds.\n\n2012-04-23  Alexandre Keunecke I. de Mendonca <alexandre.keunecke@gmail.com>\n\n",
                      "markdown": "`2012-05-05  Nicolas Lelong\n\n\t* libffi.xcodeproj/project.pbxproj: Fixes.\n\t* README: Update for iOS builds.\n\n2012-04-23  Alexandre Keunecke I. de Mendonca <alexandre.keunecke@gmail.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 867,
                  "startColumn": 47,
                  "endLine": 867,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n        * testsuite/libffi.call/cls_struct_va1.c: New.\n",
                    "rendered": {
                      "text": "\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n        * testsuite/libffi.call/cls_struct_va1.c: New.\n",
                      "markdown": "`\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n        * testsuite/libffi.call/cls_struct_va1.c: New.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 47,
                  "endLine": 866,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t* configure.ac: Support aarch64.\n\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n",
                    "rendered": {
                      "text": "\t* configure.ac: Support aarch64.\n\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n",
                      "markdown": "`\t* configure.ac: Support aarch64.\n\t* Makefile.in, configure: Rebuilt.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * testsuite/lib/libffi.exp: Add support for aarch64.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 47,
                  "endLine": 856,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n        * src/aarch64/ffi.c: New.\n",
                    "rendered": {
                      "text": "\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n        * src/aarch64/ffi.c: New.\n",
                      "markdown": "`\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n        * src/aarch64/ffi.c: New.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 855,
                  "startColumn": 47,
                  "endLine": 855,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\tlion) and future version.\n\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n",
                    "rendered": {
                      "text": "\tlion) and future version.\n\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n",
                      "markdown": "`\tlion) and future version.\n\t* configure: Rebuild.\n\n2012-10-30  James Greenhalgh  <james.greenhalgh at arm.com>\n            Marcus Shawcroft  <marcus.shawcroft at arm.com>\n\n        * README: Add details of aarch64 port.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 770,
                  "startColumn": 17,
                  "endLine": 770,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t* configure.ac: Put local.exp in the right place.\n\t* configure: Rebuilt.\n\n\t* src/x86/ffi.c: Update comment about regparm function attributes.\n\t* src/x86/sysv.S (ffi_closure_SYSV): The SUNPRO compiler requires\n\tthat all function arguments be passed on the stack (no regparm\n\tsupport).\n",
                    "rendered": {
                      "text": "\t* configure.ac: Put local.exp in the right place.\n\t* configure: Rebuilt.\n\n\t* src/x86/ffi.c: Update comment about regparm function attributes.\n\t* src/x86/sysv.S (ffi_closure_SYSV): The SUNPRO compiler requires\n\tthat all function arguments be passed on the stack (no regparm\n\tsupport).\n",
                      "markdown": "`\t* configure.ac: Put local.exp in the right place.\n\t* configure: Rebuilt.\n\n\t* src/x86/ffi.c: Update comment about regparm function attributes.\n\t* src/x86/sysv.S (ffi_closure_SYSV): The SUNPRO compiler requires\n\tthat all function arguments be passed on the stack (no regparm\n\tsupport).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 10,
                  "endLine": 732,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t* m4/ax_cc_maxopt.m4: Don't -malign-double.  This is an ABI\n\tchanging option for 32-bit x86.\n\t* aclocal.m4, configure: Rebuilt.\n\t* README: Update supported target list.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n",
                    "rendered": {
                      "text": "\t* m4/ax_cc_maxopt.m4: Don't -malign-double.  This is an ABI\n\tchanging option for 32-bit x86.\n\t* aclocal.m4, configure: Rebuilt.\n\t* README: Update supported target list.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n",
                      "markdown": "`\t* m4/ax_cc_maxopt.m4: Don't -malign-double.  This is an ABI\n\tchanging option for 32-bit x86.\n\t* aclocal.m4, configure: Rebuilt.\n\t* README: Update supported target list.\n\n2013-01-10  Anthony Green  <green@moxielogic.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 14,
                  "endLine": 724,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t* testsuite/libffi.call/ffitest.h (allocate_mmap): Delete\n\tdeprecated inline function.\n\t* testsuite/libffi.special/ffitestcxx.h: Ditto.\n\t* README: Add update for AIX support.\n\n2013-01-11  Anthony Green  <green@moxielogic.com>\n\n",
                    "rendered": {
                      "text": "\t* testsuite/libffi.call/ffitest.h (allocate_mmap): Delete\n\tdeprecated inline function.\n\t* testsuite/libffi.special/ffitestcxx.h: Ditto.\n\t* README: Add update for AIX support.\n\n2013-01-11  Anthony Green  <green@moxielogic.com>\n\n",
                      "markdown": "`\t* testsuite/libffi.call/ffitest.h (allocate_mmap): Delete\n\tdeprecated inline function.\n\t* testsuite/libffi.special/ffitestcxx.h: Ditto.\n\t* README: Add update for AIX support.\n\n2013-01-11  Anthony Green  <green@moxielogic.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 637,
                  "startColumn": 16,
                  "endLine": 637,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update bug reporting address.\n\t* configure.in: Rebuild.\n\n\t* src/sparc/v8.S (ffi_flush_icache): Out-of-line cache flusher for\n",
                    "rendered": {
                      "text": "\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update bug reporting address.\n\t* configure.in: Rebuild.\n\n\t* src/sparc/v8.S (ffi_flush_icache): Out-of-line cache flusher for\n",
                      "markdown": "`\n2013-02-07  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update bug reporting address.\n\t* configure.in: Rebuild.\n\n\t* src/sparc/v8.S (ffi_flush_icache): Out-of-line cache flusher for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 572,
                  "startColumn": 39,
                  "endLine": 572,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n",
                    "rendered": {
                      "text": "\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n",
                      "markdown": "`\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 572,
                  "startColumn": 10,
                  "endLine": 572,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n",
                    "rendered": {
                      "text": "\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n",
                      "markdown": "`\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n\t* README: Update supported platforms.  Update test results link.\n\n2013-02-09  Anthony Green <green@moxielogic.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 550,
                  "startColumn": 10,
                  "endLine": 550,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n",
                    "rendered": {
                      "text": "\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n",
                      "markdown": "`\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n2013-02-10  Anthony Green <green@moxielogic.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 16,
                  "endLine": 548,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n2013-02-11  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n",
                    "rendered": {
                      "text": "\n2013-02-11  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n",
                      "markdown": "`\n2013-02-11  Anthony Green <green@moxielogic.com>\n\n\t* configure.ac: Update release number to 3.0.12.\n\t* configure: Rebuilt.\n\t* README: Update release info.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 9,
                  "endLine": 505,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n\n2013-03-17  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n",
                    "rendered": {
                      "text": "\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n\n2013-03-17  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n",
                      "markdown": "`\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n\n2013-03-17  Dave Korn  <dave.korn.cygwin@gmail.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 502,
                  "startColumn": 10,
                  "endLine": 502,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n2013-03-17  Anthony Green  <green@moxielogic.com>\n\n\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n",
                    "rendered": {
                      "text": "\n2013-03-17  Anthony Green  <green@moxielogic.com>\n\n\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n",
                      "markdown": "`\n2013-03-17  Anthony Green  <green@moxielogic.com>\n\n\t* README: Update for 3.0.13.\n\t* configure.ac: Ditto.\n\t* configure: Rebuilt.\n\t* doc/*: Update version.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 16,
                  "endLine": 455,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n\t* README: Mention M88K and VAX.\n",
                    "rendered": {
                      "text": "\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n\t* README: Mention M88K and VAX.\n",
                      "markdown": "`\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n\t* README: Mention M88K and VAX.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 44,
                  "endLine": 454,
                  "endColumn": 52,
                  "snippet": {
                    "text": "2013-10-08  Anthony Green  <green@moxielogic.com>\n\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n",
                    "rendered": {
                      "text": "2013-10-08  Anthony Green  <green@moxielogic.com>\n\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n",
                      "markdown": "`2013-10-08  Anthony Green  <green@moxielogic.com>\n\n\t* aclocal.m4, compile, config.guess, config.sub, depcomp,\n\tinstall-sh, mdate-sh, missing, texinfo.tex: Update from upstream.\n\t* configure.ac: Update version to 3.0.14-rc0.\n\t* Makefile.in, configure, Makefile.in, include/Makefile.in,\n\tman/Makefile.in, testsuite/Makefile.in: Rebuilt.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 14,
                  "endLine": 161,
                  "endColumn": 22,
                  "snippet": {
                    "text": "2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* src/aarch64/sysv.S (ffi_closure_SYSV): Use x29 as the\n\tmain CFA reg; update cfi_rel_offset.\n\n2014-02-15  Marcus Comstedt  <marcus@mc.pp.se>\n\n",
                    "rendered": {
                      "text": "2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* src/aarch64/sysv.S (ffi_closure_SYSV): Use x29 as the\n\tmain CFA reg; update cfi_rel_offset.\n\n2014-02-15  Marcus Comstedt  <marcus@mc.pp.se>\n\n",
                      "markdown": "`2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n\t* src/aarch64/sysv.S (ffi_closure_SYSV): Use x29 as the\n\tmain CFA reg; update cfi_rel_offset.\n\n2014-02-15  Marcus Comstedt  <marcus@mc.pp.se>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 46,
                  "endLine": 33,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\tFFI_FASTCALL on non-Windows x86-32.  Increase trampoline size to\n\taccomodate these calling conventions, and unify some ifdeffery.\n\t* src/x86/ffi.c: Add support for FFI_STDCALL, FFI_THISCALL, and\n\tFFI_FASTCALL on non-Windows x86-32 platforms; update ifdeffery.\n\t* src/x86/win32.S: Support compiling on non-Windows x86-32\n\tplatforms.  On those platforms, avoid redefining the SYSV symbols\n\talready provided by src/x86/sysv.S.\n",
                    "rendered": {
                      "text": "\tFFI_FASTCALL on non-Windows x86-32.  Increase trampoline size to\n\taccomodate these calling conventions, and unify some ifdeffery.\n\t* src/x86/ffi.c: Add support for FFI_STDCALL, FFI_THISCALL, and\n\tFFI_FASTCALL on non-Windows x86-32 platforms; update ifdeffery.\n\t* src/x86/win32.S: Support compiling on non-Windows x86-32\n\tplatforms.  On those platforms, avoid redefining the SYSV symbols\n\talready provided by src/x86/sysv.S.\n",
                      "markdown": "`\tFFI_FASTCALL on non-Windows x86-32.  Increase trampoline size to\n\taccomodate these calling conventions, and unify some ifdeffery.\n\t* src/x86/ffi.c: Add support for FFI_STDCALL, FFI_THISCALL, and\n\tFFI_FASTCALL on non-Windows x86-32 platforms; update ifdeffery.\n\t* src/x86/win32.S: Support compiling on non-Windows x86-32\n\tplatforms.  On those platforms, avoid redefining the SYSV symbols\n\talready provided by src/x86/sysv.S.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5788,
                  "startColumn": 48,
                  "endLine": 5788,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t* ltconfig, ltmain.sh, missing, mkinstalldirs: Likewise.\n\t* Makefile.in: Rebuilt.\n\n\t* acinclude.m4: Include libtool macros from the top level.\n\t* aclocal.m4, configure: Rebuilt.\n\n2000-08-22  Alexandre Oliva  <aoliva@redhat.com>\n",
                    "rendered": {
                      "text": "\t* ltconfig, ltmain.sh, missing, mkinstalldirs: Likewise.\n\t* Makefile.in: Rebuilt.\n\n\t* acinclude.m4: Include libtool macros from the top level.\n\t* aclocal.m4, configure: Rebuilt.\n\n2000-08-22  Alexandre Oliva  <aoliva@redhat.com>\n",
                      "markdown": "`\t* ltconfig, ltmain.sh, missing, mkinstalldirs: Likewise.\n\t* Makefile.in: Rebuilt.\n\n\t* acinclude.m4: Include libtool macros from the top level.\n\t* aclocal.m4, configure: Rebuilt.\n\n2000-08-22  Alexandre Oliva  <aoliva@redhat.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 5483,
                  "endLine": 5483,
                  "endColumn": 8,
                  "snippet": {
                    "text": "2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n",
                    "rendered": {
                      "text": "2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n",
                      "markdown": "`2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n\n\t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at\n\tscript entry, and set LD to it when configuring multilibs.\n\t* configure: Rebuilt.\n\n2002-05-05  Jason Thorpe  <thorpej@wasabisystems.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4966,
                  "startColumn": 49,
                  "endLine": 4966,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n2003-09-12  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/prep_cif.c (initialize_aggregate): Include tail padding in\n\tstructure size.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Correct\n\tplacement of float result.\n",
                    "rendered": {
                      "text": "\n2003-09-12  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/prep_cif.c (initialize_aggregate): Include tail padding in\n\tstructure size.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Correct\n\tplacement of float result.\n",
                      "markdown": "`\n2003-09-12  Alan Modra  <amodra@bigpond.net.au>\n\n\t* src/prep_cif.c (initialize_aggregate): Include tail padding in\n\tstructure size.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Correct\n\tplacement of float result.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 4227,
                  "startColumn": 48,
                  "endLine": 4227,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t* configure.ac: Read configure.host.\n\t* configure.in: Read configure.host.\n\t* configure.host: New file.  frv-elf needs libgloss.\n\t* include/ffi.h.in: Force ffi_closure to have a nice big (8)\n\talignment.  This is needed to frv and shouldn't harm the others.\n\t* include/ffi_common.h (ALIGN_DOWN): New macro.\n\t* src/frv/ffi.c, src/frv/ffitarget.h, src/frv/eabi.S: New files.\n",
                    "rendered": {
                      "text": "\t* configure.ac: Read configure.host.\n\t* configure.in: Read configure.host.\n\t* configure.host: New file.  frv-elf needs libgloss.\n\t* include/ffi.h.in: Force ffi_closure to have a nice big (8)\n\talignment.  This is needed to frv and shouldn't harm the others.\n\t* include/ffi_common.h (ALIGN_DOWN): New macro.\n\t* src/frv/ffi.c, src/frv/ffitarget.h, src/frv/eabi.S: New files.\n",
                      "markdown": "`\t* configure.ac: Read configure.host.\n\t* configure.in: Read configure.host.\n\t* configure.host: New file.  frv-elf needs libgloss.\n\t* include/ffi.h.in: Force ffi_closure to have a nice big (8)\n\talignment.  This is needed to frv and shouldn't harm the others.\n\t* include/ffi_common.h (ALIGN_DOWN): New macro.\n\t* src/frv/ffi.c, src/frv/ffitarget.h, src/frv/eabi.S: New files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 3904,
                  "startColumn": 26,
                  "endLine": 3904,
                  "endColumn": 31,
                  "snippet": {
                    "text": "2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\tPR libgcj/21943\n\t* src/mips/n32.S: Enforce PIC code.\n\t* src/mips/o32.S: Likewise.\n\n2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n",
                    "rendered": {
                      "text": "2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\tPR libgcj/21943\n\t* src/mips/n32.S: Enforce PIC code.\n\t* src/mips/o32.S: Likewise.\n\n2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n",
                      "markdown": "`2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n\n\tPR libgcj/21943\n\t* src/mips/n32.S: Enforce PIC code.\n\t* src/mips/o32.S: Likewise.\n\n2005-06-15  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 3856,
                  "startColumn": 34,
                  "endLine": 3856,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t(ffi_call): Likewise.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/sh64/sysv.S (ffi_call_SYSV): Handle 1, 2 and 4-byte return.\n\tEmit position independent code if PIC and remove wrong datalabel\n\tprefixes from EH data.\n\n2005-07-19  Andreas Tobler  <a.tobler@schweiz.ch>\n",
                    "rendered": {
                      "text": "\t(ffi_call): Likewise.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/sh64/sysv.S (ffi_call_SYSV): Handle 1, 2 and 4-byte return.\n\tEmit position independent code if PIC and remove wrong datalabel\n\tprefixes from EH data.\n\n2005-07-19  Andreas Tobler  <a.tobler@schweiz.ch>\n",
                      "markdown": "`\t(ffi_call): Likewise.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/sh64/sysv.S (ffi_call_SYSV): Handle 1, 2 and 4-byte return.\n\tEmit position independent code if PIC and remove wrong datalabel\n\tprefixes from EH data.\n\n2005-07-19  Andreas Tobler  <a.tobler@schweiz.ch>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 1546,
                  "startColumn": 11,
                  "endLine": 1546,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tinstructions.\n\t* src/powerpc/aix_closure.S: Declare .ffi_closure_helper_DARWIN.\n\n2011-02-08  Ed  <ed@kdtc.net>\n\n\t* src/powerpc/asm.h: Fix grammar nit in comment.\n\n",
                    "rendered": {
                      "text": "\tinstructions.\n\t* src/powerpc/aix_closure.S: Declare .ffi_closure_helper_DARWIN.\n\n2011-02-08  Ed  <ed@kdtc.net>\n\n\t* src/powerpc/asm.h: Fix grammar nit in comment.\n\n",
                      "markdown": "`\tinstructions.\n\t* src/powerpc/aix_closure.S: Declare .ffi_closure_helper_DARWIN.\n\n2011-02-08  Ed  <ed@kdtc.net>\n\n\t* src/powerpc/asm.h: Fix grammar nit in comment.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 821,
                  "startColumn": 41,
                  "endLine": 821,
                  "endColumn": 49,
                  "snippet": {
                    "text": "2013-01-04  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (AM_CFLAGS): Don't automatically add -fexceptions\n\tand -Wall.  This is set in the configure script after testing for\n\tGCC.\n\t* Makefile.in: Rebuilt.\n\n",
                    "rendered": {
                      "text": "2013-01-04  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (AM_CFLAGS): Don't automatically add -fexceptions\n\tand -Wall.  This is set in the configure script after testing for\n\tGCC.\n\t* Makefile.in: Rebuilt.\n\n",
                      "markdown": "`2013-01-04  Anthony Green  <green@moxielogic.com>\n\n\t* Makefile.am (AM_CFLAGS): Don't automatically add -fexceptions\n\tand -Wall.  This is set in the configure script after testing for\n\tGCC.\n\t* Makefile.in: Rebuilt.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 57,
                  "endLine": 252,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n2013-11-18  Anthony Green  <green@moxielogic.com>\n\n\t* src/arm/ffi.c (ffi_call): Hoist declaration of temp to top of\n\tfunction.\n\t* src/arm/ffi.c (ffi_closure_inner): Moderize function declaration\n\tto appease compiler.\n",
                    "rendered": {
                      "text": "\n2013-11-18  Anthony Green  <green@moxielogic.com>\n\n\t* src/arm/ffi.c (ffi_call): Hoist declaration of temp to top of\n\tfunction.\n\t* src/arm/ffi.c (ffi_closure_inner): Moderize function declaration\n\tto appease compiler.\n",
                      "markdown": "`\n2013-11-18  Anthony Green  <green@moxielogic.com>\n\n\t* src/arm/ffi.c (ffi_call): Hoist declaration of temp to top of\n\tfunction.\n\t* src/arm/ffi.c (ffi_closure_inner): Moderize function declaration\n\tto appease compiler.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 29,
                  "endLine": 156,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n2014-02-28  Will Newton  <will.newton@linaro.org>\n\n\t* src/arm/sysv.S: Initialize IP register with FP.\n\n2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n",
                    "rendered": {
                      "text": "\n2014-02-28  Will Newton  <will.newton@linaro.org>\n\n\t* src/arm/sysv.S: Initialize IP register with FP.\n\n2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n",
                      "markdown": "`\n2014-02-28  Will Newton  <will.newton@linaro.org>\n\n\t* src/arm/sysv.S: Initialize IP register with FP.\n\n2014-02-28  Yufeng Zhang  <yufeng.zhang@arm.com>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 18,
                  "endLine": 91,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tman/Makefile.in, mdate-sh, missing, testsuite/Makefile.in: Delete\n\tautogenerated files from version control.\n\t* .gitignore: Add autogenerated files.\n\t* autogen.sh: New script to generate the autogenerated files.\n\t* README: Document requirement to run autogen.sh when building\n\tdirectly from version control.\n\t* .travis.yml: Run autogen.sh\n",
                    "rendered": {
                      "text": "\tman/Makefile.in, mdate-sh, missing, testsuite/Makefile.in: Delete\n\tautogenerated files from version control.\n\t* .gitignore: Add autogenerated files.\n\t* autogen.sh: New script to generate the autogenerated files.\n\t* README: Document requirement to run autogen.sh when building\n\tdirectly from version control.\n\t* .travis.yml: Run autogen.sh\n",
                      "markdown": "`\tman/Makefile.in, mdate-sh, missing, testsuite/Makefile.in: Delete\n\tautogenerated files from version control.\n\t* .gitignore: Add autogenerated files.\n\t* autogen.sh: New script to generate the autogenerated files.\n\t* README: Document requirement to run autogen.sh when building\n\tdirectly from version control.\n\t* .travis.yml: Run autogen.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/ChangeLog.old"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 45,
                  "endLine": 2,
                  "endColumn": 50,
                  "snippet": {
                    "text": "Libffi change logs used to be maintained in separate ChangeLog files.\nThese days we generate them directly from the git commit messages.\nThe old ChangeLog files are saved here in order to maintain the historical\nrecord.\n\n",
                    "rendered": {
                      "text": "Libffi change logs used to be maintained in separate ChangeLog files.\nThese days we generate them directly from the git commit messages.\nThe old ChangeLog files are saved here in order to maintain the historical\nrecord.\n\n",
                      "markdown": "`Libffi change logs used to be maintained in separate ChangeLog files.\nThese days we generate them directly from the git commit messages.\nThe old ChangeLog files are saved here in order to maintain the historical\nrecord.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 42,
                  "endLine": 10,
                  "endColumn": 46,
                  "snippet": {
                    "text": "SUBDIRS = include testsuite man\nif BUILD_DOCS\n## This hack is needed because it doesn't seem possible to make a\n## conditional info_TEXINFOS in Automake.  At least Automake 1.14\n## either gives errors -- if this attempted in the most\n## straightforward way -- or simply unconditionally tries to build the\n## info file.\n",
                    "rendered": {
                      "text": "SUBDIRS = include testsuite man\nif BUILD_DOCS\n## This hack is needed because it doesn't seem possible to make a\n## conditional info_TEXINFOS in Automake.  At least Automake 1.14\n## either gives errors -- if this attempted in the most\n## straightforward way -- or simply unconditionally tries to build the\n## info file.\n",
                      "markdown": "`SUBDIRS = include testsuite man\nif BUILD_DOCS\n## This hack is needed because it doesn't seem possible to make a\n## conditional info_TEXINFOS in Automake.  At least Automake 1.14\n## either gives errors -- if this attempted in the most\n## straightforward way -- or simply unconditionally tries to build the\n## info file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 70,
                  "endLine": 154,
                  "endColumn": 76,
                  "snippet": {
                    "text": "dist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n-include $(tmake_file)\n",
                    "rendered": {
                      "text": "dist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n-include $(tmake_file)\n",
                      "markdown": "`dist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n-include $(tmake_file)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 95,
                  "endLine": 153,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n",
                    "rendered": {
                      "text": "\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n",
                      "markdown": "`\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 55,
                  "endLine": 153,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n",
                    "rendered": {
                      "text": "\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n",
                      "markdown": "`\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n# target overrides\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 45,
                  "endLine": 152,
                  "endColumn": 49,
                  "snippet": {
                    "text": "AM_CCASFLAGS = $(AM_CPPFLAGS)\n\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n",
                    "rendered": {
                      "text": "AM_CCASFLAGS = $(AM_CPPFLAGS)\n\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n",
                      "markdown": "`AM_CCASFLAGS = $(AM_CPPFLAGS)\n\ndist-hook:\n\td=`(cd $(distdir); pwd)`; (cd doc; make pdf; cp *.pdf $$d/doc)\n\tif [ -d $(top_srcdir)/.git ] ; then (cd $(top_srcdir); git log --no-decorate) ; else echo 'See git log for history.' ; fi > $(distdir)/ChangeLog\n\ts=`awk '/was released on/{ print NR; exit}' $(top_srcdir)/README.md`; tail -n +$$(($$s-1)) $(top_srcdir)/README.md > $(distdir)/README.md\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 4,
                  "endLine": 132,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\nendif\nelse\n",
                    "rendered": {
                      "text": "\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\nendif\nelse\n",
                      "markdown": "`\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\nendif\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/Makefile.am"
                },
                "region": {
                  "startLine": 130,
                  "endLine": 130,
                  "endColumn": 6,
                  "snippet": {
                    "text": "libffi_version_dep = libffi.map-sun\nlibffi.map-sun : libffi.map $(top_srcdir)/make_sunver.pl \\\n\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\n",
                    "rendered": {
                      "text": "libffi_version_dep = libffi.map-sun\nlibffi.map-sun : libffi.map $(top_srcdir)/make_sunver.pl \\\n\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\n",
                      "markdown": "`libffi_version_dep = libffi.map-sun\nlibffi.map-sun : libffi.map $(top_srcdir)/make_sunver.pl \\\n\t\t $(libffi_la_OBJECTS) $(libffi_la_LIBADD)\n\tperl $(top_srcdir)/make_sunver.pl libffi.map \\\n\t `echo $(libffi_la_OBJECTS) $(libffi_la_LIBADD) | \\\n\t    sed 's,\\([^/        ]*\\)\\.l\\([ao]\\),.libs/\\1.\\2,g'` \\\n\t > $@ || (rm -f $@ ; exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_require_defined.m4"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                    "rendered": {
                      "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                      "markdown": "`#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_require_defined.m4"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                    "rendered": {
                      "text": "#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n",
                      "markdown": "`#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n#\n#   It's like AC_REQUIRE except it doesn't expand the required macro.\n#\n#   Here's an example:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_require_defined.m4"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 56,
                  "endLine": 13,
                  "endColumn": 64,
                  "snippet": {
                    "text": "#\n#   AX_REQUIRE_DEFINED is a simple helper for making sure other macros have\n#   been defined and thus are available for use.  This avoids random issues\n#   where a macro isn't expanded.  Instead the configure script emits a\n#   non-fatal:\n#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n",
                    "rendered": {
                      "text": "#\n#   AX_REQUIRE_DEFINED is a simple helper for making sure other macros have\n#   been defined and thus are available for use.  This avoids random issues\n#   where a macro isn't expanded.  Instead the configure script emits a\n#   non-fatal:\n#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n",
                      "markdown": "`#\n#   AX_REQUIRE_DEFINED is a simple helper for making sure other macros have\n#   been defined and thus are available for use.  This avoids random issues\n#   where a macro isn't expanded.  Instead the configure script emits a\n#   non-fatal:\n#\n#     ./configure: line 1673: AX_CFLAGS_WARN_ALL: command not found\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_compiler_vendor.m4"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 34,
                  "endLine": 67,
                  "endColumn": 38,
                  "snippet": {
                    "text": "AC_DEFUN([AX_COMPILER_VENDOR], [dnl\n    AC_CACHE_CHECK([for _AC_LANG compiler vendor], ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor, [dnl\n\tdnl  If you modify this list of vendors, please add similar support\n\tdnl  to ax_compiler_version.m4 if at all possible.\n\tdnl\n\tdnl  Note: Do NOT check for GCC first since some other compilers\n\tdnl  define __GNUC__ to remain compatible with it.  Compilers that\n",
                    "rendered": {
                      "text": "AC_DEFUN([AX_COMPILER_VENDOR], [dnl\n    AC_CACHE_CHECK([for _AC_LANG compiler vendor], ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor, [dnl\n\tdnl  If you modify this list of vendors, please add similar support\n\tdnl  to ax_compiler_version.m4 if at all possible.\n\tdnl\n\tdnl  Note: Do NOT check for GCC first since some other compilers\n\tdnl  define __GNUC__ to remain compatible with it.  Compilers that\n",
                      "markdown": "`AC_DEFUN([AX_COMPILER_VENDOR], [dnl\n    AC_CACHE_CHECK([for _AC_LANG compiler vendor], ax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor, [dnl\n\tdnl  If you modify this list of vendors, please add similar support\n\tdnl  to ax_compiler_version.m4 if at all possible.\n\tdnl\n\tdnl  Note: Do NOT check for GCC first since some other compilers\n\tdnl  define __GNUC__ to remain compatible with it.  Compilers that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_compiler_vendor.m4"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 58,
                  "endLine": 117,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t    ]])], [break])\n\tdone\n\n\tax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor=`echo $vendor | cut -d: -f1`\n    ])\n])dnl\n",
                    "rendered": {
                      "text": "\t    ]])], [break])\n\tdone\n\n\tax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor=`echo $vendor | cut -d: -f1`\n    ])\n])dnl\n",
                      "markdown": "`\t    ]])], [break])\n\tdone\n\n\tax_cv_[]_AC_LANG_ABBREV[]_compiler_vendor=`echo $vendor | cut -d: -f1`\n    ])\n])dnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_compiler_vendor.m4"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 39,
                  "endLine": 106,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t    continue\n\t\t    ;;\n\t\t*)\n\t\t    vencpp=\"defined(\"`echo $ventest | sed 's/,/) || defined(/g'`\")\"\n\t\t    ;;\n\t    esac\n\n",
                    "rendered": {
                      "text": "\t\t    continue\n\t\t    ;;\n\t\t*)\n\t\t    vencpp=\"defined(\"`echo $ventest | sed 's/,/) || defined(/g'`\")\"\n\t\t    ;;\n\t    esac\n\n",
                      "markdown": "`\t\t    continue\n\t\t    ;;\n\t\t*)\n\t\t    vencpp=\"defined(\"`echo $ventest | sed 's/,/) || defined(/g'`\")\"\n\t\t    ;;\n\t    esac\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_configure_args.m4"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 69,
                  "endLine": 14,
                  "snippet": {
                    "text": "#\n#   Helper macro for AX_ENABLE_BUILDDIR.\n#\n#   The traditional way of starting a subdir-configure is running the script\n#   with ${1+\"$@\"} but since autoconf 2.60 this is broken. Instead we have\n#   to rely on eval'ing $ac_configure_args however some old autoconf\n#   versions do not provide that. To ensure maximum portability of autoconf\n#   extension macros this helper can be AC_REQUIRE'd so that\n",
                    "rendered": {
                      "text": "#\n#   Helper macro for AX_ENABLE_BUILDDIR.\n#\n#   The traditional way of starting a subdir-configure is running the script\n#   with ${1+\"$@\"} but since autoconf 2.60 this is broken. Instead we have\n#   to rely on eval'ing $ac_configure_args however some old autoconf\n#   versions do not provide that. To ensure maximum portability of autoconf\n#   extension macros this helper can be AC_REQUIRE'd so that\n",
                      "markdown": "`#\n#   Helper macro for AX_ENABLE_BUILDDIR.\n#\n#   The traditional way of starting a subdir-configure is running the script\n#   with ${1+\"$@\"} but since autoconf 2.60 this is broken. Instead we have\n#   to rely on eval'ing $ac_configure_args however some old autoconf\n#   versions do not provide that. To ensure maximum portability of autoconf\n#   extension macros this helper can be AC_REQUIRE'd so that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sparc/v9.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 46,
                  "endLine": 2,
                  "endColumn": 51,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   v9.S - Copyright (c) 2000, 2003, 2004, 2008 Red Hat, Inc.\n   \n   SPARC 64-bit Foreign Function Interface \n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   v9.S - Copyright (c) 2000, 2003, 2004, 2008 Red Hat, Inc.\n   \n   SPARC 64-bit Foreign Function Interface \n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   v9.S - Copyright (c) 2000, 2003, 2004, 2008 Red Hat, Inc.\n   \n   SPARC 64-bit Foreign Function Interface \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sparc/ffi64.c"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 3,
                  "endLine": 147,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  if (mask == 0)\n    ;\n  else if (mask == (1 << n) - 1)\n    vi = vf;\n  else\n    {\n      unsigned int *wd = vd, *wi = vi, *wf = vf;\n",
                    "rendered": {
                      "text": "  if (mask == 0)\n    ;\n  else if (mask == (1 << n) - 1)\n    vi = vf;\n  else\n    {\n      unsigned int *wd = vd, *wi = vi, *wf = vf;\n",
                      "markdown": "`  if (mask == 0)\n    ;\n  else if (mask == (1 << n) - 1)\n    vi = vf;\n  else\n    {\n      unsigned int *wd = vd, *wi = vi, *wf = vf;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m32r/sysv.S"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tjl\tlr\t\n\n\t/* Remove the space we pushed for the args.  */\n\tmv\tsp, fp\t\n\n\t/* Load R2 with the pointer to storage for the return value.  */\n\tld\tr2, @(24,sp)\n",
                    "rendered": {
                      "text": "\tjl\tlr\t\n\n\t/* Remove the space we pushed for the args.  */\n\tmv\tsp, fp\t\n\n\t/* Load R2 with the pointer to storage for the return value.  */\n\tld\tr2, @(24,sp)\n",
                      "markdown": "`\tjl\tlr\t\n\n\t/* Remove the space we pushed for the args.  */\n\tmv\tsp, fp\t\n\n\t/* Load R2 with the pointer to storage for the return value.  */\n\tld\tr2, @(24,sp)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m32r/sysv.S"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n\t/* Place all of the ffi_prep_args in position.  */\n\tmv\tlr, r0\t\n\tmv\tr0, sp\n\t/* R1 already set.  */\n\n\t/* And call.  */\n",
                    "rendered": {
                      "text": "\n\t/* Place all of the ffi_prep_args in position.  */\n\tmv\tlr, r0\t\n\tmv\tr0, sp\n\t/* R1 already set.  */\n\n\t/* And call.  */\n",
                      "markdown": "`\n\t/* Place all of the ffi_prep_args in position.  */\n\tmv\tlr, r0\t\n\tmv\tr0, sp\n\t/* R1 already set.  */\n\n\t/* And call.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m32r/sysv.S"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tsub\tsp, r2\n\n\t/* Place all of the ffi_prep_args in position.  */\n\tmv\tlr, r0\t\n\tmv\tr0, sp\n\t/* R1 already set.  */\n\n",
                    "rendered": {
                      "text": "\tsub\tsp, r2\n\n\t/* Place all of the ffi_prep_args in position.  */\n\tmv\tlr, r0\t\n\tmv\tr0, sp\n\t/* R1 already set.  */\n\n",
                      "markdown": "`\tsub\tsp, r2\n\n\t/* Place all of the ffi_prep_args in position.  */\n\tmv\tlr, r0\t\n\tmv\tr0, sp\n\t/* R1 already set.  */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m32r/sysv.S"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tpush\tr2\n\tpush\tr1\n\tpush\tr0\n\tmv\tfp, sp\n\n\t/* Make room for all of the new args.  */\n\tsub\tsp, r2\n",
                    "rendered": {
                      "text": "\tpush\tr2\n\tpush\tr1\n\tpush\tr0\n\tmv\tfp, sp\n\n\t/* Make room for all of the new args.  */\n\tsub\tsp, r2\n",
                      "markdown": "`\tpush\tr2\n\tpush\tr1\n\tpush\tr0\n\tmv\tfp, sp\n\n\t/* Make room for all of the new args.  */\n\tsub\tsp, r2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/dlmalloc.c"
                },
                "region": {
                  "startLine": 3265,
                  "startColumn": 9,
                  "endLine": 3265,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    size_t oldmmsize = oldsize + offset + MMAP_FOOT_PAD;\n    size_t newmmsize = granularity_align(nb + SIX_SIZE_T_SIZES +\n                                         CHUNK_ALIGN_MASK);\n    char* cp = (char*)CALL_MREMAP((char*)oldp - offset,\n                                  oldmmsize, newmmsize, 1);\n    if (cp != CMFAIL) {\n      mchunkptr newp = (mchunkptr)(cp + offset);\n",
                    "rendered": {
                      "text": "    size_t oldmmsize = oldsize + offset + MMAP_FOOT_PAD;\n    size_t newmmsize = granularity_align(nb + SIX_SIZE_T_SIZES +\n                                         CHUNK_ALIGN_MASK);\n    char* cp = (char*)CALL_MREMAP((char*)oldp - offset,\n                                  oldmmsize, newmmsize, 1);\n    if (cp != CMFAIL) {\n      mchunkptr newp = (mchunkptr)(cp + offset);\n",
                      "markdown": "`    size_t oldmmsize = oldsize + offset + MMAP_FOOT_PAD;\n    size_t newmmsize = granularity_align(nb + SIX_SIZE_T_SIZES +\n                                         CHUNK_ALIGN_MASK);\n    char* cp = (char*)CALL_MREMAP((char*)oldp - offset,\n                                  oldmmsize, newmmsize, 1);\n    if (cp != CMFAIL) {\n      mchunkptr newp = (mchunkptr)(cp + offset);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/dlmalloc.c"
                },
                "region": {
                  "startLine": 2734,
                  "startColumn": 5,
                  "endLine": 2734,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    }\n    else {\n      assert(head == 0); /* only one node on chain has parent */\n      head = u;\n      assert(u->parent != u);\n      assert (u->parent->child[0] == u ||\n              u->parent->child[1] == u ||\n",
                    "rendered": {
                      "text": "    }\n    else {\n      assert(head == 0); /* only one node on chain has parent */\n      head = u;\n      assert(u->parent != u);\n      assert (u->parent->child[0] == u ||\n              u->parent->child[1] == u ||\n",
                      "markdown": "`    }\n    else {\n      assert(head == 0); /* only one node on chain has parent */\n      head = u;\n      assert(u->parent != u);\n      assert (u->parent->child[0] == u ||\n              u->parent->child[1] == u ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/dlmalloc.c"
                },
                "region": {
                  "startLine": 2709,
                  "startColumn": 11,
                  "endLine": 2709,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n/* Check a tree and its subtrees.  */\nstatic void do_check_tree(mstate m, tchunkptr t) {\n  tchunkptr head = 0;\n  tchunkptr u = t;\n  bindex_t tindex = t->index;\n  size_t tsize = chunksize(t);\n",
                    "rendered": {
                      "text": "\n/* Check a tree and its subtrees.  */\nstatic void do_check_tree(mstate m, tchunkptr t) {\n  tchunkptr head = 0;\n  tchunkptr u = t;\n  bindex_t tindex = t->index;\n  size_t tsize = chunksize(t);\n",
                      "markdown": "`\n/* Check a tree and its subtrees.  */\nstatic void do_check_tree(mstate m, tchunkptr t) {\n  tchunkptr head = 0;\n  tchunkptr u = t;\n  bindex_t tindex = t->index;\n  size_t tsize = chunksize(t);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 35,
                  "endLine": 344,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 59,
                  "endLine": 304,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 30,
                  "endLine": 218,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 63,
                  "endLine": 173,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 51,
                  "endLine": 156,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 21,
                  "endLine": 140,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 43,
                  "endLine": 114,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 7,
                  "endLine": 102,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 63,
                  "endLine": 68,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 12,
                  "endLine": 264,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 34,
                  "endLine": 252,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 9,
                  "endLine": 203,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 12,
                  "endLine": 65,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 4,
                  "endLine": 38,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/LICENSE-BUILDTOOLS"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 46,
                  "endLine": 3,
                  "endColumn": 54,
                  "snippet": {
                    "text": "The libffi source distribution contains certain code that is not part\nof libffi, and is only used as tooling to assist with the building and\ntesting of libffi.  This includes the msvcc.sh script used to wrap the\nMicrosoft compiler with GNU compatible command-line options,\nmake_sunver.pl, and the libffi test code distributed in the\ntestsuite/libffi.bhaible directory.  This code is distributed with\n",
                    "rendered": {
                      "text": "The libffi source distribution contains certain code that is not part\nof libffi, and is only used as tooling to assist with the building and\ntesting of libffi.  This includes the msvcc.sh script used to wrap the\nMicrosoft compiler with GNU compatible command-line options,\nmake_sunver.pl, and the libffi test code distributed in the\ntestsuite/libffi.bhaible directory.  This code is distributed with\n",
                      "markdown": "`The libffi source distribution contains certain code that is not part\nof libffi, and is only used as tooling to assist with the building and\ntesting of libffi.  This includes the msvcc.sh script used to wrap the\nMicrosoft compiler with GNU compatible command-line options,\nmake_sunver.pl, and the libffi test code distributed in the\ntestsuite/libffi.bhaible directory.  This code is distributed with\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 60,
                  "endLine": 58,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n",
                    "rendered": {
                      "text": "# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n",
                      "markdown": "`# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1517,
                  "startColumn": 66,
                  "endLine": 1518,
                  "snippet": {
                    "text": "# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\n",
                    "rendered": {
                      "text": "# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\n",
                      "markdown": "`# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1454,
                  "startColumn": 18,
                  "endLine": 1454,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n",
                    "rendered": {
                      "text": "\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n",
                      "markdown": "`\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 18,
                  "endLine": 1420,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n",
                    "rendered": {
                      "text": "\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n",
                      "markdown": "`\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1417,
                  "startColumn": 18,
                  "endLine": 1417,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n",
                    "rendered": {
                      "text": "\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n",
                      "markdown": "`\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1408,
                  "startColumn": 18,
                  "endLine": 1408,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tos=lynxos\n\t\t;;\n\tmac[0-9]*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n",
                    "rendered": {
                      "text": "\t\tos=lynxos\n\t\t;;\n\tmac[0-9]*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n",
                      "markdown": "`\t\tos=lynxos\n\t\t;;\n\tmac[0-9]*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1378,
                  "startColumn": 18,
                  "endLine": 1378,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco*v* | scout)\n\t\t# Don't match below\n",
                    "rendered": {
                      "text": "\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco*v* | scout)\n\t\t# Don't match below\n",
                      "markdown": "`\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco*v* | scout)\n\t\t# Don't match below\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 18,
                  "endLine": 1349,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n",
                    "rendered": {
                      "text": "\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n",
                      "markdown": "`\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1328,
                  "startColumn": 24,
                  "endLine": 1328,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n\t\tos=`echo \"$basic_os\" | sed -e 's|managarm|mlibc|'`\n\t\t;;\n\t*)\n\t\tkernel=\n",
                    "rendered": {
                      "text": "\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n\t\tos=`echo \"$basic_os\" | sed -e 's|managarm|mlibc|'`\n\t\t;;\n\t*)\n\t\tkernel=\n",
                      "markdown": "`\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n\t\tos=`echo \"$basic_os\" | sed -e 's|managarm|mlibc|'`\n\t\t;;\n\t*)\n\t\tkernel=\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1324,
                  "startColumn": 24,
                  "endLine": 1324,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t;;\n\tlinux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n",
                    "rendered": {
                      "text": "\t\t;;\n\tlinux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n",
                      "markdown": "`\t\t;;\n\tlinux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n\t\t;;\n\tmanagarm*)\n\t\tkernel=managarm\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1320,
                  "startColumn": 24,
                  "endLine": 1320,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t# Default OS when just kernel was specified\n\tnto*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n\t\t;;\n\tlinux*)\n\t\tkernel=linux\n",
                    "rendered": {
                      "text": "\t# Default OS when just kernel was specified\n\tnto*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n\t\t;;\n\tlinux*)\n\t\tkernel=linux\n",
                      "markdown": "`\t# Default OS when just kernel was specified\n\tnto*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n\t\t;;\n\tlinux*)\n\t\tkernel=linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1307,
                  "startColumn": 24,
                  "endLine": 1307,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n\t\t;;\n\t*-*)\n\t\t# shellcheck disable=SC2162\n",
                    "rendered": {
                      "text": "\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n\t\t;;\n\t*-*)\n\t\t# shellcheck disable=SC2162\n",
                      "markdown": "`\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n\t\t;;\n\t*-*)\n\t\t# shellcheck disable=SC2162\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1303,
                  "startColumn": 24,
                  "endLine": 1303,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n",
                    "rendered": {
                      "text": "\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n",
                      "markdown": "`\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n\t\t;;\n\tnto-qnx*)\n\t\tkernel=nto\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1299,
                  "startColumn": 24,
                  "endLine": 1299,
                  "endColumn": 29,
                  "snippet": {
                    "text": "case $basic_os in\n\tgnu/linux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n",
                    "rendered": {
                      "text": "case $basic_os in\n\tgnu/linux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n",
                      "markdown": "`case $basic_os in\n\tgnu/linux*)\n\t\tkernel=linux\n\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n\t\t;;\n\tos2-emx)\n\t\tkernel=os2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1128,
                  "startColumn": 20,
                  "endLine": 1128,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\tarm64-* | aarch64le-*)\n\t\tcpu=aarch64\n",
                    "rendered": {
                      "text": "\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\tarm64-* | aarch64le-*)\n\t\tcpu=aarch64\n",
                      "markdown": "`\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\tarm64-* | aarch64le-*)\n\t\tcpu=aarch64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 1110,
                  "startColumn": 20,
                  "endLine": 1110,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n",
                    "rendered": {
                      "text": "\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n",
                      "markdown": "`\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 33,
                  "endLine": 936,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n",
                    "rendered": {
                      "text": "\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n",
                      "markdown": "`\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 803,
                  "startColumn": 18,
                  "endLine": 803,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tbasic_os=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=solaris2\n\t\t;;\n",
                    "rendered": {
                      "text": "\t\tbasic_os=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=solaris2\n\t\t;;\n",
                      "markdown": "`\t\tbasic_os=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=solaris2\n\t\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 798,
                  "startColumn": 18,
                  "endLine": 798,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tbasic_os=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv\n\t\t;;\n",
                    "rendered": {
                      "text": "\t\tbasic_os=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv\n\t\t;;\n",
                      "markdown": "`\t\tbasic_os=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv\n\t\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 793,
                  "startColumn": 18,
                  "endLine": 793,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tbasic_os=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv4\n\t\t;;\n",
                    "rendered": {
                      "text": "\t\tbasic_os=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv4\n\t\t;;\n",
                      "markdown": "`\t\tbasic_os=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv4\n\t\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 788,
                  "startColumn": 18,
                  "endLine": 788,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv32\n\t\t;;\n",
                    "rendered": {
                      "text": "\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv32\n\t\t;;\n",
                      "markdown": "`\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tbasic_os=sysv32\n\t\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 15,
                  "endLine": 62,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n",
                    "rendered": {
                      "text": "# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n",
                      "markdown": "`# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 47,
                  "endLine": 57,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n",
                    "rendered": {
                      "text": "\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n",
                      "markdown": "`\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 40,
                  "endLine": 37,
                  "endColumn": 48,
                  "snippet": {
                    "text": "# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n\n# This file is supposed to be the same for all GNU packages\n",
                    "rendered": {
                      "text": "# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n\n# This file is supposed to be the same for all GNU packages\n",
                      "markdown": "`# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\n\n# This file is supposed to be the same for all GNU packages\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.sub"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 24,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n",
                    "rendered": {
                      "text": "#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n",
                      "markdown": "`#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.bhaible/Makefile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\ncheck-callback: test-callback\n\t./test-callback > test-callback.out\n\tLC_ALL=C uniq -u < test-callback.out > failed-callback\n\ttest '!' -s failed-callback\n\nclean:\n",
                    "rendered": {
                      "text": "\ncheck-callback: test-callback\n\t./test-callback > test-callback.out\n\tLC_ALL=C uniq -u < test-callback.out > failed-callback\n\ttest '!' -s failed-callback\n\nclean:\n",
                      "markdown": "`\ncheck-callback: test-callback\n\t./test-callback > test-callback.out\n\tLC_ALL=C uniq -u < test-callback.out > failed-callback\n\ttest '!' -s failed-callback\n\nclean:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.bhaible/Makefile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\ncheck-call: test-call\n\t./test-call > test-call.out\n\tLC_ALL=C uniq -u < test-call.out > failed-call\n\ttest '!' -s failed-call\n\ncheck-callback: test-callback\n",
                    "rendered": {
                      "text": "\ncheck-call: test-call\n\t./test-call > test-call.out\n\tLC_ALL=C uniq -u < test-call.out > failed-call\n\ttest '!' -s failed-call\n\ncheck-callback: test-callback\n",
                      "markdown": "`\ncheck-call: test-call\n\t./test-call > test-call.out\n\tLC_ALL=C uniq -u < test-call.out > failed-call\n\ttest '!' -s failed-call\n\ncheck-callback: test-callback\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin.S"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 16,
                  "endLine": 292,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#endif\n\n\t/* Fall through.  */\n\t/* We want this at the end to simplify eh epilog computation.  */\n\nL(done_return_value):\n\t/* Restore the registers we used and return.  */\n",
                    "rendered": {
                      "text": "#endif\n\n\t/* Fall through.  */\n\t/* We want this at the end to simplify eh epilog computation.  */\n\nL(done_return_value):\n\t/* Restore the registers we used and return.  */\n",
                      "markdown": "`#endif\n\n\t/* Fall through.  */\n\t/* We want this at the end to simplify eh epilog computation.  */\n\nL(done_return_value):\n\t/* Restore the registers we used and return.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin.S"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 46,
                  "endLine": 254,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n\tb L(done_return_value)\n#else\n\tstw\tr3,0(r30) ; m32 the only struct return in reg is 4 bytes.\n#endif\n\tb L(done_return_value)\n\n",
                    "rendered": {
                      "text": "\n\tb L(done_return_value)\n#else\n\tstw\tr3,0(r30) ; m32 the only struct return in reg is 4 bytes.\n#endif\n\tb L(done_return_value)\n\n",
                      "markdown": "`\n\tb L(done_return_value)\n#else\n\tstw\tr3,0(r30) ; m32 the only struct return in reg is 4 bytes.\n#endif\n\tb L(done_return_value)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/darwin.S"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 20,
                  "endLine": 138,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t/* Get the address to call into CTR.  */\n\tmtctr\tr29\n\t/* Load all those argument registers.\n\t   We have set up a nice stack frame, just load it into registers.  */\n\tlg     r3, (LINKAGE_SIZE                )(r1)\n\tlg     r4, (LINKAGE_SIZE +     GPR_BYTES)(r1)\n\tlg     r5, (LINKAGE_SIZE + 2 * GPR_BYTES)(r1)\n",
                    "rendered": {
                      "text": "\t/* Get the address to call into CTR.  */\n\tmtctr\tr29\n\t/* Load all those argument registers.\n\t   We have set up a nice stack frame, just load it into registers.  */\n\tlg     r3, (LINKAGE_SIZE                )(r1)\n\tlg     r4, (LINKAGE_SIZE +     GPR_BYTES)(r1)\n\tlg     r5, (LINKAGE_SIZE + 2 * GPR_BYTES)(r1)\n",
                      "markdown": "`\t/* Get the address to call into CTR.  */\n\tmtctr\tr29\n\t/* Load all those argument registers.\n\t   We have set up a nice stack frame, just load it into registers.  */\n\tlg     r3, (LINKAGE_SIZE                )(r1)\n\tlg     r4, (LINKAGE_SIZE +     GPR_BYTES)(r1)\n\tlg     r5, (LINKAGE_SIZE + 2 * GPR_BYTES)(r1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64.S"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 16,
                  "endLine": 183,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tbctrl\n\n\t/* This must follow the call immediately, the unwinder\n\t   uses this to find out if r2 has been saved or not.  */\n# if _CALL_ELF == 2\n\tld\t%r2, 24(%r1)\n# else\n",
                    "rendered": {
                      "text": "\tbctrl\n\n\t/* This must follow the call immediately, the unwinder\n\t   uses this to find out if r2 has been saved or not.  */\n# if _CALL_ELF == 2\n\tld\t%r2, 24(%r1)\n# else\n",
                      "markdown": "`\tbctrl\n\n\t/* This must follow the call immediately, the unwinder\n\t   uses this to find out if r2 has been saved or not.  */\n# if _CALL_ELF == 2\n\tld\t%r2, 24(%r1)\n# else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 23,
                  "endLine": 3,
                  "endColumn": 28,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC64 Assembly glue.\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC64 Assembly glue.\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC64 Assembly glue.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/mips/o32.S"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 11,
                  "endLine": 64,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tmove\tt9, callback\t\t# callback function pointer\n\tREG_S\tflags, A3_OFF($fp)\t# flags\n\n\t# Allocate at least 4 words in the argstack\n\tLI\tv0, 4 * FFI_SIZEOF_ARG\n\tblt\tbytes, v0, sixteen\n\n",
                    "rendered": {
                      "text": "\tmove\tt9, callback\t\t# callback function pointer\n\tREG_S\tflags, A3_OFF($fp)\t# flags\n\n\t# Allocate at least 4 words in the argstack\n\tLI\tv0, 4 * FFI_SIZEOF_ARG\n\tblt\tbytes, v0, sixteen\n\n",
                      "markdown": "`\tmove\tt9, callback\t\t# callback function pointer\n\tREG_S\tflags, A3_OFF($fp)\t# flags\n\n\t# Allocate at least 4 words in the argstack\n\tLI\tv0, 4 * FFI_SIZEOF_ARG\n\tblt\tbytes, v0, sixteen\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/mips/o32.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 42,
                  "endLine": 2,
                  "endColumn": 47,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   o32.S - Copyright (c) 1996, 1998, 2005  Red Hat, Inc.\n   \n   MIPS Foreign Function Interface \n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   o32.S - Copyright (c) 1996, 1998, 2005  Red Hat, Inc.\n   \n   MIPS Foreign Function Interface \n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   o32.S - Copyright (c) 1996, 1998, 2005  Red Hat, Inc.\n   \n   MIPS Foreign Function Interface \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 12,
                  "endLine": 458,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        host: [armv7a-linux-androideabi, aarch64-linux-android, i686-linux-android, x86_64-linux-android]\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - run: ./.ci/install.sh\n      - env:\n",
                    "rendered": {
                      "text": "        host: [armv7a-linux-androideabi, aarch64-linux-android, i686-linux-android, x86_64-linux-android]\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - run: ./.ci/install.sh\n      - env:\n",
                      "markdown": "`        host: [armv7a-linux-androideabi, aarch64-linux-android, i686-linux-android, x86_64-linux-android]\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - run: ./.ci/install.sh\n      - env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 9,
                  "endLine": 437,
                  "endColumn": 13,
                  "snippet": {
                    "text": "} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='$(pwd)/.ci/ar-lib lib' NM='dumpbin -symbols' STRIP=':' $DEBUG_ARG $SHARED_ARG || cat */config.log\n          make\n          cp $(find . -name 'libffi-?.dll') ${{ matrix.host }}/testsuite/\n          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true\n          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl/rlgl.exe e \\\n                          -l ",
                    "rendered": {
                      "text": "} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='$(pwd)/.ci/ar-lib lib' NM='dumpbin -symbols' STRIP=':' $DEBUG_ARG $SHARED_ARG || cat */config.log\n          make\n          cp $(find . -name 'libffi-?.dll') ${{ matrix.host }}/testsuite/\n          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true\n          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl/rlgl.exe e \\\n                          -l ",
                      "markdown": "`} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='$(pwd)/.ci/ar-lib lib' NM='dumpbin -symbols' STRIP=':' $DEBUG_ARG $SHARED_ARG || cat */config.log\n          make\n          cp $(find . -name 'libffi-?.dll') ${{ matrix.host }}/testsuite/\n          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true\n          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl/rlgl.exe e \\\n                          -l `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 304,
                  "endLine": 435,
                  "endColumn": 309,
                  "snippet": {
                    "text": "      ./configure --host=${{ matrix.host }} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='$(pwd)/.ci/ar-lib lib' NM='dumpbin -symbols' STRIP=':' $DEBUG_ARG $SHARED_ARG || cat */config.log\n          make\n          cp $(find . -name 'libffi-?.dll') ${{ matrix.host }}/testsuite/\n          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true\n          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl/r",
                    "rendered": {
                      "text": "      ./configure --host=${{ matrix.host }} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='$(pwd)/.ci/ar-lib lib' NM='dumpbin -symbols' STRIP=':' $DEBUG_ARG $SHARED_ARG || cat */config.log\n          make\n          cp $(find . -name 'libffi-?.dll') ${{ matrix.host }}/testsuite/\n          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true\n          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl/r",
                      "markdown": "`      ./configure --host=${{ matrix.host }} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='$(pwd)/.ci/ar-lib lib' NM='dumpbin -symbols' STRIP=':' $DEBUG_ARG $SHARED_ARG || cat */config.log\n          make\n          cp $(find . -name 'libffi-?.dll') ${{ matrix.host }}/testsuite/\n          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true\n          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl/r`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 9,
                  "endLine": 432,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n        with:\n          arch: ${{ matrix.tools }}\n\n      - name: Build and test\n        run: |\n          # export PATH=$PATH:\"/cygdrive/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.16.27023/bin/HostX64/x64\"\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          ./configure --host=${{ matrix.host }} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' ",
                    "rendered": {
                      "text": "\n        with:\n          arch: ${{ matrix.tools }}\n\n      - name: Build and test\n        run: |\n          # export PATH=$PATH:\"/cygdrive/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.16.27023/bin/HostX64/x64\"\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          ./configure --host=${{ matrix.host }} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' ",
                      "markdown": "`\n        with:\n          arch: ${{ matrix.tools }}\n\n      - name: Build and test\n        run: |\n          # export PATH=$PATH:\"/cygdrive/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Tools/MSVC/14.16.27023/bin/HostX64/x64\"\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          ./configure --host=${{ matrix.host }} CC=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" CXX=\"$(pwd)/msvcc.sh -m${{ matrix.width }}\" LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 19,
                  "endLine": 423,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      - uses: egor-tensin/setup-cygwin@v3\n        with:\n          platform: x64\n          packages: wget make dejagnu automake autoconf libtool texinfo unzip dos2unix\n      - uses: ilammy/msvc-dev-cmd@v1.12.0\n        with:\n          arch: ${{ matrix.tools }}\n",
                    "rendered": {
                      "text": "      - uses: egor-tensin/setup-cygwin@v3\n        with:\n          platform: x64\n          packages: wget make dejagnu automake autoconf libtool texinfo unzip dos2unix\n      - uses: ilammy/msvc-dev-cmd@v1.12.0\n        with:\n          arch: ${{ matrix.tools }}\n",
                      "markdown": "`      - uses: egor-tensin/setup-cygwin@v3\n        with:\n          platform: x64\n          packages: wget make dejagnu automake autoconf libtool texinfo unzip dos2unix\n      - uses: ilammy/msvc-dev-cmd@v1.12.0\n        with:\n          arch: ${{ matrix.tools }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 12,
                  "endLine": 418,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            tools: amd64\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - uses: egor-tensin/setup-cygwin@v3\n        with:\n",
                    "rendered": {
                      "text": "            tools: amd64\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - uses: egor-tensin/setup-cygwin@v3\n        with:\n",
                      "markdown": "`            tools: amd64\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - uses: egor-tensin/setup-cygwin@v3\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 12,
                  "endLine": 395,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    name: ${{ matrix.platform }} ${{ matrix.compilers }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - run: ./.ci/install.sh\n      - run: ${{ matrix.compilers }} ./.ci/build.sh\n",
                    "rendered": {
                      "text": "    name: ${{ matrix.platform }} ${{ matrix.compilers }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - run: ./.ci/install.sh\n      - run: ${{ matrix.compilers }} ./.ci/build.sh\n",
                      "markdown": "`    name: ${{ matrix.platform }} ${{ matrix.compilers }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n      - run: ./.ci/install.sh\n      - run: ${{ matrix.compilers }} ./.ci/build.sh\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 9,
                  "endLine": 368,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          CC=clang CXX=clang ./configure\n",
                    "rendered": {
                      "text": "      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          CC=clang CXX=clang ./configure\n",
                      "markdown": "`      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          CC=clang CXX=clang ./configure\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 12,
                  "endLine": 345,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    name: ${{ matrix.MSYSTEM }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n\n      - uses: msys2/setup-msys2@v2\n",
                    "rendered": {
                      "text": "    name: ${{ matrix.MSYSTEM }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n\n      - uses: msys2/setup-msys2@v2\n",
                      "markdown": "`    name: ${{ matrix.MSYSTEM }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n\n      - uses: msys2/setup-msys2@v2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 9,
                  "endLine": 315,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          CC=${{ matrix.MSYS2_ARCH }}-w64-mingw32-gcc CXX=${{ matrix.MSYS2_ARCH }}-w64-mingw32-g++ ./configure\n",
                    "rendered": {
                      "text": "      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          CC=${{ matrix.MSYS2_ARCH }}-w64-mingw32-gcc CXX=${{ matrix.MSYS2_ARCH }}-w64-mingw32-g++ ./configure\n",
                      "markdown": "`      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          CC=${{ matrix.MSYS2_ARCH }}-w64-mingw32-gcc CXX=${{ matrix.MSYS2_ARCH }}-w64-mingw32-g++ ./configure\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 12,
                  "endLine": 293,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    name: ${{ matrix.MSYSTEM }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n\n      - uses: msys2/setup-msys2@v2\n",
                    "rendered": {
                      "text": "    name: ${{ matrix.MSYSTEM }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n\n      - uses: msys2/setup-msys2@v2\n",
                      "markdown": "`    name: ${{ matrix.MSYSTEM }}\n\n    steps:\n      - run: git config --global core.autocrlf input\n      - uses: actions/checkout@v3\n\n      - uses: msys2/setup-msys2@v2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 9,
                  "endLine": 263,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          ./configure\n",
                    "rendered": {
                      "text": "      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          ./configure\n",
                      "markdown": "`      - run: |\n          set -x\n          cd $(cygpath $RUNNER_WORKSPACE)/libffi\n          wget https://rl.gl/cli/rlgl-windows-amd64.zip\n          unzip rlgl-windows-amd64.zip\n          autoreconf -f -v -i\n          ./configure\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 19,
                  "endLine": 258,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        uses: egor-tensin/setup-cygwin@v3\n        with:\n          platform: ${{ matrix.arch }}\n          packages: wget gcc-core make dejagnu automake autoconf libtool texinfo dos2unix unzip\n\n      - run: |\n          set -x\n",
                    "rendered": {
                      "text": "        uses: egor-tensin/setup-cygwin@v3\n        with:\n          platform: ${{ matrix.arch }}\n          packages: wget gcc-core make dejagnu automake autoconf libtool texinfo dos2unix unzip\n\n      - run: |\n          set -x\n",
                      "markdown": "`        uses: egor-tensin/setup-cygwin@v3\n        with:\n          platform: ${{ matrix.arch }}\n          packages: wget gcc-core make dejagnu automake autoconf libtool texinfo dos2unix unzip\n\n      - run: |\n          set -x\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            arch: x64\n\n    steps:\n      - run: git config --global core.autocrlf input\n\n      - uses: actions/checkout@v3\n\n",
                    "rendered": {
                      "text": "            arch: x64\n\n    steps:\n      - run: git config --global core.autocrlf input\n\n      - uses: actions/checkout@v3\n\n",
                      "markdown": "`            arch: x64\n\n    steps:\n      - run: git config --global core.autocrlf input\n\n      - uses: actions/checkout@v3\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 14,
                  "endLine": 231,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='${{ matrix.CFARM_CC }}' -l build-host=${{ matrix.CFARM_TRIPLE }} --policy=https://github.com/libffi/rlgl-policy.git libffi.log\n          exit $?\n",
                    "rendered": {
                      "text": "        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='${{ matrix.CFARM_CC }}' -l build-host=${{ matrix.CFARM_TRIPLE }} --policy=https://github.com/libffi/rlgl-policy.git libffi.log\n          exit $?\n",
                      "markdown": "`        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='${{ matrix.CFARM_CC }}' -l build-host=${{ matrix.CFARM_TRIPLE }} --policy=https://github.com/libffi/rlgl-policy.git libffi.log\n          exit $?\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 9,
                  "endLine": 230,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - name: Install rlgl and run\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='${{ matrix.CFARM_CC }}' -l build-host=${{ matrix.CFARM_TRIPLE }} --policy=https://github.com/libffi/rlgl-policy.git libffi.log\n",
                    "rendered": {
                      "text": "      - name: Install rlgl and run\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='${{ matrix.CFARM_CC }}' -l build-host=${{ matrix.CFARM_TRIPLE }} --policy=https://github.com/libffi/rlgl-policy.git libffi.log\n",
                      "markdown": "`      - name: Install rlgl and run\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='${{ matrix.CFARM_CC }}' -l build-host=${{ matrix.CFARM_TRIPLE }} --policy=https://github.com/libffi/rlgl-policy.git libffi.log\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 9,
                  "endLine": 225,
                  "endColumn": 14,
                  "snippet": {
                    "text": "if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}/*/testsuite/*.log .\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"rm -rf ${{ env.BUILD_DIR }}\"\n\n      - name: Install rlgl and run\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n     ",
                    "rendered": {
                      "text": "if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}/*/testsuite/*.log .\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"rm -rf ${{ env.BUILD_DIR }}\"\n\n      - name: Install rlgl and run\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n     ",
                      "markdown": "`if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}/*/testsuite/*.log .\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"rm -rf ${{ env.BUILD_DIR }}\"\n\n      - name: Install rlgl and run\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n     `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 9,
                  "endLine": 224,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Copy results and clean up\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}/*/testsuite/*.log .\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"rm -rf ${{ env.BUILD_DIR }}\"\n\n      - name: Install rlgl and run\n",
                    "rendered": {
                      "text": "      - name: Copy results and clean up\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}/*/testsuite/*.log .\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"rm -rf ${{ env.BUILD_DIR }}\"\n\n      - name: Install rlgl and run\n",
                      "markdown": "`      - name: Copy results and clean up\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}/*/testsuite/*.log .\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"rm -rf ${{ env.BUILD_DIR }}\"\n\n      - name: Install rlgl and run\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 9,
                  "endLine": 219,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Run tests\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; GCC_COLORS= make check & CHECKPID=\\$!; while kill -0 \\$CHECKPID 2>/dev/null; do echo 'Waiting for tests to finish'; sleep 5; done;)\"\n\n      - name: Copy results and clean up\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n",
                    "rendered": {
                      "text": "      - name: Run tests\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; GCC_COLORS= make check & CHECKPID=\\$!; while kill -0 \\$CHECKPID 2>/dev/null; do echo 'Waiting for tests to finish'; sleep 5; done;)\"\n\n      - name: Copy results and clean up\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n",
                      "markdown": "`      - name: Run tests\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; GCC_COLORS= make check & CHECKPID=\\$!; while kill -0 \\$CHECKPID 2>/dev/null; do echo 'Waiting for tests to finish'; sleep 5; done;)\"\n\n      - name: Copy results and clean up\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 9,
                  "endLine": 214,
                  "endColumn": 14,
                  "snippet": {
                    "text": "tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; CC='${{ matrix.CFARM_CC }}' CXX='${{ matrix.CFARM_CXX }}' ./configure --host=${{ matrix.CFARM_TRIPLE }}) || true; exit 0\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; make;) || true; exit 0\"\n\n      - name: Run tests\n     ",
                    "rendered": {
                      "text": "tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; CC='${{ matrix.CFARM_CC }}' CXX='${{ matrix.CFARM_CXX }}' ./configure --host=${{ matrix.CFARM_TRIPLE }}) || true; exit 0\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; make;) || true; exit 0\"\n\n      - name: Run tests\n     ",
                      "markdown": "`tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; CC='${{ matrix.CFARM_CC }}' CXX='${{ matrix.CFARM_CXX }}' ./configure --host=${{ matrix.CFARM_TRIPLE }}) || true; exit 0\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; make;) || true; exit 0\"\n\n      - name: Run tests\n     `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 9,
                  "endLine": 213,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"${{ matrix.CFARM_CC }} --version\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; CC='${{ matrix.CFARM_CC }}' CXX='${{ matrix.CFARM_CXX ",
                    "rendered": {
                      "text": "      if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"${{ matrix.CFARM_CC }} --version\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; CC='${{ matrix.CFARM_CC }}' CXX='${{ matrix.CFARM_CXX ",
                      "markdown": "`      if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"${{ matrix.CFARM_CC }} --version\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"(cd ${{ env.BUILD_DIR }}; if test -f ~/.profile; then source ~/.profile; fi; CC='${{ matrix.CFARM_CC }}' CXX='${{ matrix.CFARM_CXX `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 9,
                  "endLine": 212,
                  "endColumn": 14,
                  "snippet": {
                    "text": "hecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} -r * ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}\n\n      - name: Run configure and make\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"${{ matrix.CFARM_CC }} --version\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cf",
                    "rendered": {
                      "text": "hecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} -r * ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}\n\n      - name: Run configure and make\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"${{ matrix.CFARM_CC }} --version\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cf",
                      "markdown": "`hecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} -r * ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}\n\n      - name: Run configure and make\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"${{ matrix.CFARM_CC }} --version\"\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cf`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 9,
                  "endLine": 207,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          echo ${{ steps.check-host.outputs.HOST_OK }}\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} -r * ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}\n\n      - name: Run configure and make\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n",
                    "rendered": {
                      "text": "        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          echo ${{ steps.check-host.outputs.HOST_OK }}\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} -r * ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}\n\n      - name: Run configure and make\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n",
                      "markdown": "`        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n        run: |\n          echo ${{ steps.check-host.outputs.HOST_OK }}\n          scp -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -P ${{ matrix.CFARM_PORT }} -r * ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }}:${{ env.BUILD_DIR }}\n\n      - name: Run configure and make\n        if: ${{ steps.check-host.outputs.HOST_OK == 'YES' }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        id: check-host\n        run: |\n          set +e\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"mkdir -p ${{ env.BUILD_DIR }}\"\n          if test $? -ne 0; then\n            echo \"Remote host is unavailable.\"\n            echo \"HOST_OK=NO\" >> $GITHUB_OUTPUT\n",
                    "rendered": {
                      "text": "        id: check-host\n        run: |\n          set +e\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"mkdir -p ${{ env.BUILD_DIR }}\"\n          if test $? -ne 0; then\n            echo \"Remote host is unavailable.\"\n            echo \"HOST_OK=NO\" >> $GITHUB_OUTPUT\n",
                      "markdown": "`        id: check-host\n        run: |\n          set +e\n          ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 -o ConnectionAttempts=3 -i /tmp/cfk -p ${{ matrix.CFARM_PORT }} ${{ secrets.CFARM_USERNAME }}@${{ matrix.CFARM_HOST }} \"mkdir -p ${{ env.BUILD_DIR }}\"\n          if test $? -ne 0; then\n            echo \"Remote host is unavailable.\"\n            echo \"HOST_OK=NO\" >> $GITHUB_OUTPUT\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 9,
                  "endLine": 179,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          rm -rf autoconf-2.71\n          PATH=$HOME/i/bin:$PATH ./autogen.sh\n          echo \"${{ secrets.CFARM_KEY }}\" > /tmp/cfk\n          chmod go-rw /tmp/cfk\n\n      - name: Generate build dir name\n        run: |\n",
                    "rendered": {
                      "text": "          rm -rf autoconf-2.71\n          PATH=$HOME/i/bin:$PATH ./autogen.sh\n          echo \"${{ secrets.CFARM_KEY }}\" > /tmp/cfk\n          chmod go-rw /tmp/cfk\n\n      - name: Generate build dir name\n        run: |\n",
                      "markdown": "`          rm -rf autoconf-2.71\n          PATH=$HOME/i/bin:$PATH ./autogen.sh\n          echo \"${{ secrets.CFARM_KEY }}\" > /tmp/cfk\n          chmod go-rw /tmp/cfk\n\n      - name: Generate build dir name\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 148,
                  "endLine": 173,
                  "endColumn": 153,
                  "snippet": {
                    "text": "\n      - name: Run autogen\n        run: |\n          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n          mkdir -p ~/i\n          (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n          rm -rf autoconf-2.71\n",
                    "rendered": {
                      "text": "\n      - name: Run autogen\n        run: |\n          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n          mkdir -p ~/i\n          (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n          rm -rf autoconf-2.71\n",
                      "markdown": "`\n      - name: Run autogen\n        run: |\n          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n          mkdir -p ~/i\n          (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n          rm -rf autoconf-2.71\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/build.yml"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 9,
                  "endLine": 173,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n      - name: Run autogen\n        run: |\n          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n          mkdir -p ~/i\n          (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n          rm -rf autoconf-2.71\n",
                    "rendered": {
                      "text": "\n      - name: Run autogen\n        run: |\n          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n          mkdir -p ~/i\n          (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n          rm -rf autoconf-2.71\n",
                      "markdown": "`\n      - name: Run autogen\n        run: |\n          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n          mkdir -p ~/i\n          (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n          rm -rf autoconf-2.71\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/generate-darwin-source-and-headers.py"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 3,
                  "endLine": 211,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    tag='%s-%s' % (platform.sdk, platform.arch)\n    build_dir = 'build_%s' % tag\n    mkdir_p(build_dir)\n    env = dict(CC=xcrun_cmd('clang'),\n               LD=xcrun_cmd('ld'),\n               CFLAGS='%s -fembed-bitcode' % (platform.version_min))\n    working_dir = os.getcwd()\n",
                    "rendered": {
                      "text": "    tag='%s-%s' % (platform.sdk, platform.arch)\n    build_dir = 'build_%s' % tag\n    mkdir_p(build_dir)\n    env = dict(CC=xcrun_cmd('clang'),\n               LD=xcrun_cmd('ld'),\n               CFLAGS='%s -fembed-bitcode' % (platform.version_min))\n    working_dir = os.getcwd()\n",
                      "markdown": "`    tag='%s-%s' % (platform.sdk, platform.arch)\n    build_dir = 'build_%s' % tag\n    mkdir_p(build_dir)\n    env = dict(CC=xcrun_cmd('clang'),\n               LD=xcrun_cmd('ld'),\n               CFLAGS='%s -fembed-bitcode' % (platform.version_min))\n    working_dir = os.getcwd()\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.host"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 7,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n",
                    "rendered": {
                      "text": "#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n",
                      "markdown": "`#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.host"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13,
                  "endLine": 7,
                  "endColumn": 19,
                  "snippet": {
                    "text": "#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n",
                    "rendered": {
                      "text": "#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n",
                      "markdown": "`#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n# Most of the time we can define all the variables all at once...\ncase \"${host}\" in\n  aarch64*-*-cygwin* | aarch64*-*-msys* | aarch64*-*-mingw* | aarch64*-*-win* )\n\tTARGET=ARM_WIN64; TARGETDIR=aarch64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.host"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 12,
                  "endLine": 3,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# configure.host\n#\n# This shell script handles all host based configuration for libffi.\n#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n",
                    "rendered": {
                      "text": "# configure.host\n#\n# This shell script handles all host based configuration for libffi.\n#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n",
                      "markdown": "`# configure.host\n#\n# This shell script handles all host based configuration for libffi.\n#\n\n# THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 965,
                  "startColumn": 36,
                  "endLine": 965,
                  "endColumn": 40,
                  "snippet": {
                    "text": "On some platforms, @code{ffi_prep_cif} may modify the size and\nalignment of some types, depending on the chosen ABI.  On these\nplatforms, if you switch between ABIs, you must ensure that there is\nonly one call to @code{ffi_prep_cif} at a time.\n\nCurrently the only affected platform is PowerPC and the only affected\ntype is @code{long double}.\n",
                    "rendered": {
                      "text": "On some platforms, @code{ffi_prep_cif} may modify the size and\nalignment of some types, depending on the chosen ABI.  On these\nplatforms, if you switch between ABIs, you must ensure that there is\nonly one call to @code{ffi_prep_cif} at a time.\n\nCurrently the only affected platform is PowerPC and the only affected\ntype is @code{long double}.\n",
                      "markdown": "`On some platforms, @code{ffi_prep_cif} may modify the size and\nalignment of some types, depending on the chosen ABI.  On these\nplatforms, if you switch between ABIs, you must ensure that there is\nonly one call to @code{ffi_prep_cif} at a time.\n\nCurrently the only affected platform is PowerPC and the only affected\ntype is @code{long double}.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 959,
                  "startColumn": 14,
                  "endLine": 959,
                  "endColumn": 18,
                  "snippet": {
                    "text": "@item\n@code{ffi_prep_cif} may modify the @code{ffi_type} objects passed to\nit.  It is best to ensure that only a single thread prepares a given\n@code{ffi_cif} at a time.\n\n@item\nOn some platforms, @code{ffi_prep_cif} may modify the size and\n",
                    "rendered": {
                      "text": "@item\n@code{ffi_prep_cif} may modify the @code{ffi_type} objects passed to\nit.  It is best to ensure that only a single thread prepares a given\n@code{ffi_cif} at a time.\n\n@item\nOn some platforms, @code{ffi_prep_cif} may modify the size and\n",
                      "markdown": "`@item\n@code{ffi_prep_cif} may modify the @code{ffi_type} objects passed to\nit.  It is best to ensure that only a single thread prepares a given\n@code{ffi_cif} at a time.\n\n@item\nOn some platforms, @code{ffi_prep_cif} may modify the size and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 900,
                  "startColumn": 37,
                  "endLine": 900,
                  "endColumn": 41,
                  "snippet": {
                    "text": "#include <stdio.h>\n#include <ffi.h>\n\n/* Acts like puts with the file given at time of enclosure. */\nvoid puts_binding(ffi_cif *cif, void *ret, void* args[],\n                  void *stream)\n@{\n",
                    "rendered": {
                      "text": "#include <stdio.h>\n#include <ffi.h>\n\n/* Acts like puts with the file given at time of enclosure. */\nvoid puts_binding(ffi_cif *cif, void *ret, void* args[],\n                  void *stream)\n@{\n",
                      "markdown": "`#include <stdio.h>\n#include <ffi.h>\n\n/* Acts like puts with the file given at time of enclosure. */\nvoid puts_binding(ffi_cif *cif, void *ret, void* args[],\n                  void *stream)\n@{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 802,
                  "startColumn": 51,
                  "endLine": 802,
                  "endColumn": 55,
                  "snippet": {
                    "text": "@cindex closure API\n@findex FFI_CLOSURES\n\nBecause closures work by assembling a tiny function at runtime, they\nrequire special allocation on platforms that have a non-executable\nheap.  Memory management for closures is handled by a pair of\nfunctions:\n",
                    "rendered": {
                      "text": "@cindex closure API\n@findex FFI_CLOSURES\n\nBecause closures work by assembling a tiny function at runtime, they\nrequire special allocation on platforms that have a non-executable\nheap.  Memory management for closures is handled by a pair of\nfunctions:\n",
                      "markdown": "`@cindex closure API\n@findex FFI_CLOSURES\n\nBecause closures work by assembling a tiny function at runtime, they\nrequire special allocation on platforms that have a non-executable\nheap.  Memory management for closures is handled by a pair of\nfunctions:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 52,
                  "endLine": 777,
                  "endColumn": 56,
                  "snippet": {
                    "text": "@node Multiple ABIs\n@section Multiple ABIs\n\nA given platform may provide multiple different ABIs at once.  For\ninstance, the x86 platform has both @samp{stdcall} and @samp{fastcall}\nfunctions.\n\n",
                    "rendered": {
                      "text": "@node Multiple ABIs\n@section Multiple ABIs\n\nA given platform may provide multiple different ABIs at once.  For\ninstance, the x86 platform has both @samp{stdcall} and @samp{fastcall}\nfunctions.\n\n",
                      "markdown": "`@node Multiple ABIs\n@section Multiple ABIs\n\nA given platform may provide multiple different ABIs at once.  For\ninstance, the x86 platform has both @samp{stdcall} and @samp{fastcall}\nfunctions.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 51,
                  "endLine": 196,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\nNote that the resulting @code{ffi_cif} holds pointers to all the\n@code{ffi_type} objects that were used during initialization.  You\nmust ensure that these type objects have a lifetime at least as long\nas that of the @code{ffi_cif}.\n\nTo call a function using an initialized @code{ffi_cif}, use the\n",
                    "rendered": {
                      "text": "\nNote that the resulting @code{ffi_cif} holds pointers to all the\n@code{ffi_type} objects that were used during initialization.  You\nmust ensure that these type objects have a lifetime at least as long\nas that of the @code{ffi_cif}.\n\nTo call a function using an initialized @code{ffi_cif}, use the\n",
                      "markdown": "`\nNote that the resulting @code{ffi_cif} holds pointers to all the\n@code{ffi_type} objects that were used during initialization.  You\nmust ensure that these type objects have a lifetime at least as long\nas that of the @code{ffi_cif}.\n\nTo call a function using an initialized @code{ffi_cif}, use the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 59,
                  "endLine": 99,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nThe @code{libffi} library provides a portable, high level programming\ninterface to various calling conventions.  This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\n@acronym{FFI} stands for Foreign Function Interface.  A foreign\n",
                    "rendered": {
                      "text": "\nThe @code{libffi} library provides a portable, high level programming\ninterface to various calling conventions.  This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\n@acronym{FFI} stands for Foreign Function Interface.  A foreign\n",
                      "markdown": "`\nThe @code{libffi} library provides a portable, high level programming\ninterface to various calling conventions.  This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\n@acronym{FFI} stands for Foreign Function Interface.  A foreign\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 4,
                  "endLine": 93,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\nprovide a bridge from the interpreter program to compiled code.\n\n",
                    "rendered": {
                      "text": "\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\nprovide a bridge from the interpreter program to compiled code.\n\n",
                      "markdown": "`\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\nprovide a bridge from the interpreter program to compiled code.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 26,
                  "endLine": 91,
                  "endColumn": 30,
                  "snippet": {
                    "text": "@cindex ABI\n@cindex Application Binary Interface\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\n",
                    "rendered": {
                      "text": "@cindex ABI\n@cindex Application Binary Interface\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\n",
                      "markdown": "`@cindex ABI\n@cindex Application Binary Interface\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 1044,
                  "startColumn": 11,
                  "endLine": 1045,
                  "snippet": {
                    "text": "@node Index\n@unnumbered Index\n\n@printindex cp\n\n@bye\n",
                    "rendered": {
                      "text": "@node Index\n@unnumbered Index\n\n@printindex cp\n\n@bye\n",
                      "markdown": "`@node Index\n@unnumbered Index\n\n@printindex cp\n\n@bye\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 900,
                  "startColumn": 40,
                  "endLine": 900,
                  "endColumn": 46,
                  "snippet": {
                    "text": "#include <stdio.h>\n#include <ffi.h>\n\n/* Acts like puts with the file given at time of enclosure. */\nvoid puts_binding(ffi_cif *cif, void *ret, void* args[],\n                  void *stream)\n@{\n",
                    "rendered": {
                      "text": "#include <stdio.h>\n#include <ffi.h>\n\n/* Acts like puts with the file given at time of enclosure. */\nvoid puts_binding(ffi_cif *cif, void *ret, void* args[],\n                  void *stream)\n@{\n",
                      "markdown": "`#include <stdio.h>\n#include <ffi.h>\n\n/* Acts like puts with the file given at time of enclosure. */\nvoid puts_binding(ffi_cif *cif, void *ret, void* args[],\n                  void *stream)\n@{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 9,
                  "endLine": 449,
                  "endColumn": 17,
                  "snippet": {
                    "text": "an @code{ffi_type} object for you.  It does so using its knowledge of\nthe ABI.\n\nYou might expect that you can simply read these fields for a type that\nhas been laid out by @code{libffi}.  However, there are some caveats.\n\n@itemize @bullet\n",
                    "rendered": {
                      "text": "an @code{ffi_type} object for you.  It does so using its knowledge of\nthe ABI.\n\nYou might expect that you can simply read these fields for a type that\nhas been laid out by @code{libffi}.  However, there are some caveats.\n\n@itemize @bullet\n",
                      "markdown": "`an @code{ffi_type} object for you.  It does so using its knowledge of\nthe ABI.\n\nYou might expect that you can simply read these fields for a type that\nhas been laid out by @code{libffi}.  However, there are some caveats.\n\n@itemize @bullet\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 41,
                  "endLine": 135,
                  "endColumn": 47,
                  "snippet": {
                    "text": "it, as well as the return type of the function.\n\nThe first thing you must do is create an @code{ffi_cif} object that\nmatches the signature of the function you wish to call.  This is a\nseparate step because it is common to make multiple calls using a\nsingle @code{ffi_cif}.  The @dfn{cif} in @code{ffi_cif} stands for\nCall InterFace.  To prepare a call interface object, use the function\n",
                    "rendered": {
                      "text": "it, as well as the return type of the function.\n\nThe first thing you must do is create an @code{ffi_cif} object that\nmatches the signature of the function you wish to call.  This is a\nseparate step because it is common to make multiple calls using a\nsingle @code{ffi_cif}.  The @dfn{cif} in @code{ffi_cif} stands for\nCall InterFace.  To prepare a call interface object, use the function\n",
                      "markdown": "`it, as well as the return type of the function.\n\nThe first thing you must do is create an @code{ffi_cif} object that\nmatches the signature of the function you wish to call.  This is a\nseparate step because it is common to make multiple calls using a\nsingle @code{ffi_cif}.  The @dfn{cif} in @code{ffi_cif} stands for\nCall InterFace.  To prepare a call interface object, use the function\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 65,
                  "endLine": 131,
                  "snippet": {
                    "text": "@node The Basics\n@section The Basics\n\n@code{libffi} assumes that you have a pointer to the function you wish\nto call and that you know the number and types of arguments to pass\nit, as well as the return type of the function.\n\nThe first thing you must do is create an @code{ffi_cif} object that\n",
                    "rendered": {
                      "text": "@node The Basics\n@section The Basics\n\n@code{libffi} assumes that you have a pointer to the function you wish\nto call and that you know the number and types of arguments to pass\nit, as well as the return type of the function.\n\nThe first thing you must do is create an @code{ffi_cif} object that\n",
                      "markdown": "`@node The Basics\n@section The Basics\n\n@code{libffi} assumes that you have a pointer to the function you wish\nto call and that you know the number and types of arguments to pass\nit, as well as the return type of the function.\n\nThe first thing you must do is create an @code{ffi_cif} object that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 33,
                  "endLine": 91,
                  "endColumn": 39,
                  "snippet": {
                    "text": "@cindex ABI\n@cindex Application Binary Interface\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\n",
                    "rendered": {
                      "text": "@cindex ABI\n@cindex Application Binary Interface\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\n",
                      "markdown": "`@cindex ABI\n@cindex Application Binary Interface\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function.  For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function.  @code{libffi} can be used in such programs to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 5,
                  "endLine": 61,
                  "snippet": {
                    "text": "\n\n@ifnottex\n@node Top\n@top libffi\n\n@insertcopying\n\n",
                    "rendered": {
                      "text": "\n\n@ifnottex\n@node Top\n@top libffi\n\n@insertcopying\n\n",
                      "markdown": "`\n\n@ifnottex\n@node Top\n@top libffi\n\n@insertcopying\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 51,
                  "endLine": 21,
                  "endColumn": 56,
                  "snippet": {
                    "text": "This manual is for libffi, a portable foreign function interface\nlibrary.\n\nCopyright @copyright{} 2008--2024 Anthony Green and Red Hat, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n",
                    "rendered": {
                      "text": "This manual is for libffi, a portable foreign function interface\nlibrary.\n\nCopyright @copyright{} 2008--2024 Anthony Green and Red Hat, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n",
                      "markdown": "`This manual is for libffi, a portable foreign function interface\nlibrary.\n\nCopyright @copyright{} 2008--2024 Anthony Green and Red Hat, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 16,
                  "endLine": 15,
                  "snippet": {
                    "text": "@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n\nThis manual is for libffi, a portable foreign function interface\n",
                    "rendered": {
                      "text": "@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n\nThis manual is for libffi, a portable foreign function interface\n",
                      "markdown": "`@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n\nThis manual is for libffi, a portable foreign function interface\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 17,
                  "snippet": {
                    "text": "@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n",
                    "rendered": {
                      "text": "@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n",
                      "markdown": "`@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 16,
                  "endLine": 13,
                  "snippet": {
                    "text": "@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n",
                    "rendered": {
                      "text": "@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n",
                      "markdown": "`@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n@copying\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 16,
                  "endLine": 12,
                  "snippet": {
                    "text": "\n@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n",
                    "rendered": {
                      "text": "\n@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n",
                      "markdown": "`\n@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/doc/libffi.texi"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 16,
                  "endLine": 11,
                  "snippet": {
                    "text": "@c %**end of header\n\n@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n",
                    "rendered": {
                      "text": "@c %**end of header\n\n@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n",
                      "markdown": "`@c %**end of header\n\n@c Merge the standard indexes into a single one.\n@syncodeindex fn cp\n@syncodeindex vr cp\n@syncodeindex ky cp\n@syncodeindex pg cp\n@syncodeindex tp cp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/wine-sim.exp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 6,
                  "endLine": 48,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                    "rendered": {
                      "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                      "markdown": "`set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/moxie-sim.exp"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 6,
                  "endLine": 53,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                    "rendered": {
                      "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                      "markdown": "`set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/moxie-sim.exp"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 11,
                  "endLine": 41,
                  "endColumn": 19,
                  "snippet": {
                    "text": "set_board_info compiler  \"[find_gcc]\"\nset_board_info cflags    \"[libgloss_include_flags] [newlib_include_flags]\"\nset_board_info ldflags   \"[libgloss_link_flags] [newlib_link_flags]\"\n# No linker script needed.\nset_board_info ldscript \"-Tsim.ld\"\n\n# Configuration settings for testsuites\n",
                    "rendered": {
                      "text": "set_board_info compiler  \"[find_gcc]\"\nset_board_info cflags    \"[libgloss_include_flags] [newlib_include_flags]\"\nset_board_info ldflags   \"[libgloss_link_flags] [newlib_link_flags]\"\n# No linker script needed.\nset_board_info ldscript \"-Tsim.ld\"\n\n# Configuration settings for testsuites\n",
                      "markdown": "`set_board_info compiler  \"[find_gcc]\"\nset_board_info cflags    \"[libgloss_include_flags] [newlib_include_flags]\"\nset_board_info ldflags   \"[libgloss_link_flags] [newlib_link_flags]\"\n# No linker script needed.\nset_board_info ldscript \"-Tsim.ld\"\n\n# Configuration settings for testsuites\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/or1k-sim.exp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                    "rendered": {
                      "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                      "markdown": "`set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build-cross-in-container.sh"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 29,
                  "endLine": 15,
                  "endColumn": 34,
                  "snippet": {
                    "text": "ls -l $DEJAGNU\npwd\nfind .\n./configure --host=${HOST} || cat */config.log\nmake\nmake dist\nBOARDSDIR=$(pwd)/.ci make check RUNTESTFLAGS=\"-a $RUNTESTFLAGS\" || true\n",
                    "rendered": {
                      "text": "ls -l $DEJAGNU\npwd\nfind .\n./configure --host=${HOST} || cat */config.log\nmake\nmake dist\nBOARDSDIR=$(pwd)/.ci make check RUNTESTFLAGS=\"-a $RUNTESTFLAGS\" || true\n",
                      "markdown": "`ls -l $DEJAGNU\npwd\nfind .\n./configure --host=${HOST} || cat */config.log\nmake\nmake dist\nBOARDSDIR=$(pwd)/.ci make check RUNTESTFLAGS=\"-a $RUNTESTFLAGS\" || true\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build-cross-in-container.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 5,
                  "snippet": {
                    "text": "export DEJAGNU=$(pwd)/.ci/site.exp\necho $DEJAGNU\nls -l $DEJAGNU\npwd\nfind .\n./configure --host=${HOST} || cat */config.log\nmake\nmake dist\n",
                    "rendered": {
                      "text": "export DEJAGNU=$(pwd)/.ci/site.exp\necho $DEJAGNU\nls -l $DEJAGNU\npwd\nfind .\n./configure --host=${HOST} || cat */config.log\nmake\nmake dist\n",
                      "markdown": "`export DEJAGNU=$(pwd)/.ci/site.exp\necho $DEJAGNU\nls -l $DEJAGNU\npwd\nfind .\n./configure --host=${HOST} || cat */config.log\nmake\nmake dist\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 287,
                  "endLine": 55,
                  "endColumn": 293,
                  "snippet": {
                    "text": "i-ci-${HOST}\n    ${DOCKER} run --rm -t -v $(pwd):/opt -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++ ${GCC_OPTIONS}\" -e RUNNER_WORKSPACE=/opt -e RUNTESTFLAGS=\"-vv ${RUNTESTFLAGS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/libffi-ci-${HOST} bash -c /opt/.ci/build-cross-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc\" -l host=$HOST --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n    exit $?\n}\n\nfunction build_ios()\n{\n    which py",
                    "rendered": {
                      "text": "i-ci-${HOST}\n    ${DOCKER} run --rm -t -v $(pwd):/opt -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++ ${GCC_OPTIONS}\" -e RUNNER_WORKSPACE=/opt -e RUNTESTFLAGS=\"-vv ${RUNTESTFLAGS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/libffi-ci-${HOST} bash -c /opt/.ci/build-cross-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc\" -l host=$HOST --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n    exit $?\n}\n\nfunction build_ios()\n{\n    which py",
                      "markdown": "`i-ci-${HOST}\n    ${DOCKER} run --rm -t -v $(pwd):/opt -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++ ${GCC_OPTIONS}\" -e RUNNER_WORKSPACE=/opt -e RUNTESTFLAGS=\"-vv ${RUNTESTFLAGS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/libffi-ci-${HOST} bash -c /opt/.ci/build-cross-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc\" -l host=$HOST --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n    exit $?\n}\n\nfunction build_ios()\n{\n    which py`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 258,
                  "endLine": 45,
                  "endColumn": 264,
                  "snippet": {
                    "text": "\nfunction build_cross_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++-8 ${GCC_OPTIONS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/cross-ci-build-container:latest bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -l host=${HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                    "rendered": {
                      "text": "\nfunction build_cross_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++-8 ${GCC_OPTIONS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/cross-ci-build-container:latest bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -l host=${HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                      "markdown": "`\nfunction build_cross_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++-8 ${GCC_OPTIONS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/cross-ci-build-container:latest bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -l host=${HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 117,
                  "endLine": 36,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\nfunction build_foreign_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" $2 bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"$CC\" ${HOST+-l host=$HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                    "rendered": {
                      "text": "\nfunction build_foreign_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" $2 bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"$CC\" ${HOST+-l host=$HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                      "markdown": "`\nfunction build_foreign_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" $2 bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"$CC\" ${HOST+-l host=$HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 287,
                  "endLine": 55,
                  "endColumn": 293,
                  "snippet": {
                    "text": "i-ci-${HOST}\n    ${DOCKER} run --rm -t -v $(pwd):/opt -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++ ${GCC_OPTIONS}\" -e RUNNER_WORKSPACE=/opt -e RUNTESTFLAGS=\"-vv ${RUNTESTFLAGS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/libffi-ci-${HOST} bash -c /opt/.ci/build-cross-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc\" -l host=$HOST --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n    exit $?\n}\n\nfunction build_ios()\n{\n    which py",
                    "rendered": {
                      "text": "i-ci-${HOST}\n    ${DOCKER} run --rm -t -v $(pwd):/opt -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++ ${GCC_OPTIONS}\" -e RUNNER_WORKSPACE=/opt -e RUNTESTFLAGS=\"-vv ${RUNTESTFLAGS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/libffi-ci-${HOST} bash -c /opt/.ci/build-cross-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc\" -l host=$HOST --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n    exit $?\n}\n\nfunction build_ios()\n{\n    which py",
                      "markdown": "`i-ci-${HOST}\n    ${DOCKER} run --rm -t -v $(pwd):/opt -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++ ${GCC_OPTIONS}\" -e RUNNER_WORKSPACE=/opt -e RUNTESTFLAGS=\"-vv ${RUNTESTFLAGS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/libffi-ci-${HOST} bash -c /opt/.ci/build-cross-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc\" -l host=$HOST --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n    exit $?\n}\n\nfunction build_ios()\n{\n    which py`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 258,
                  "endLine": 45,
                  "endColumn": 264,
                  "snippet": {
                    "text": "\nfunction build_cross_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++-8 ${GCC_OPTIONS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/cross-ci-build-container:latest bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -l host=${HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                    "rendered": {
                      "text": "\nfunction build_cross_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++-8 ${GCC_OPTIONS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/cross-ci-build-container:latest bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -l host=${HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                      "markdown": "`\nfunction build_cross_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e HOST=\"${HOST}\" -e CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -e CXX=\"${HOST}-g++-8 ${GCC_OPTIONS}\" -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" quay.io/moxielogic/cross-ci-build-container:latest bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"${HOST}-gcc-8 ${GCC_OPTIONS}\" -l host=${HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 117,
                  "endLine": 36,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\nfunction build_foreign_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" $2 bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"$CC\" ${HOST+-l host=$HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                    "rendered": {
                      "text": "\nfunction build_foreign_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" $2 bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"$CC\" ${HOST+-l host=$HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n",
                      "markdown": "`\nfunction build_foreign_linux()\n{\n    ${DOCKER} run --rm -t -v $(pwd):/opt ${SET_QEMU_CPU} -e LIBFFI_TEST_OPTIMIZATION=\"${LIBFFI_TEST_OPTIMIZATION}\" $2 bash -c /opt/.ci/build-in-container.sh\n\n    ./rlgl l --key=${RLGL_KEY} https://rl.gl\n    ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC=\"$CC\" ${HOST+-l host=$HOST} --policy=https://github.com/libffi/rlgl-policy.git */testsuite/libffi.log\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/build.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 60,
                  "endLine": 23,
                  "endColumn": 65,
                  "snippet": {
                    "text": "function build_linux()\n{\n    ./autogen.sh\n    ./configure ${HOST+--host=$HOST} ${CONFIGURE_OPTIONS} || cat */config.log\n    make\n    make dist\n    DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci runtest --version\n",
                    "rendered": {
                      "text": "function build_linux()\n{\n    ./autogen.sh\n    ./configure ${HOST+--host=$HOST} ${CONFIGURE_OPTIONS} || cat */config.log\n    make\n    make dist\n    DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci runtest --version\n",
                      "markdown": "`function build_linux()\n{\n    ./autogen.sh\n    ./configure ${HOST+--host=$HOST} ${CONFIGURE_OPTIONS} || cat */config.log\n    make\n    make dist\n    DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci runtest --version\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 19,
                  "endLine": 980,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        TEST_cl=${TEST_cl,,}\n        TEST_cl=${TEST_cl/bin\\/*_/bin\\/}\n        if [[ $TEST_cl = $ENV_cl ]] ; then\n          if [[ ${!ENV_INC/\"$MSVS_INC\"/} != \"${!ENV_INC}\" && \\\n                ${!ENV_LIB/\"$MSVS_LIB\"/} != \"${!ENV_LIB}\" ]] ; then\n            debug \"$i-$arch is a strong candidate for the Environment C compiler\"\n            if [[ -n ${ENV_COMPILER+x} ]] ; then\n",
                    "rendered": {
                      "text": "        TEST_cl=${TEST_cl,,}\n        TEST_cl=${TEST_cl/bin\\/*_/bin\\/}\n        if [[ $TEST_cl = $ENV_cl ]] ; then\n          if [[ ${!ENV_INC/\"$MSVS_INC\"/} != \"${!ENV_INC}\" && \\\n                ${!ENV_LIB/\"$MSVS_LIB\"/} != \"${!ENV_LIB}\" ]] ; then\n            debug \"$i-$arch is a strong candidate for the Environment C compiler\"\n            if [[ -n ${ENV_COMPILER+x} ]] ; then\n",
                      "markdown": "`        TEST_cl=${TEST_cl,,}\n        TEST_cl=${TEST_cl/bin\\/*_/bin\\/}\n        if [[ $TEST_cl = $ENV_cl ]] ; then\n          if [[ ${!ENV_INC/\"$MSVS_INC\"/} != \"${!ENV_INC}\" && \\\n                ${!ENV_LIB/\"$MSVS_LIB\"/} != \"${!ENV_LIB}\" ]] ; then\n            debug \"$i-$arch is a strong candidate for the Environment C compiler\"\n            if [[ -n ${ENV_COMPILER+x} ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 966,
                  "startColumn": 13,
                  "endLine": 966,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    fi\n\n    # Ensure that these derived values give a valid compiler.\n    if check_environment \"${MSVS_PATH//:/*}\" \"${MSVS_INC//;/*}\" \"${MSVS_LIB//;/*}\" \"$i\" $arch ; then\n      # Put the package back into FOUND, but augmented with the architecture name and with the\n      # derived values.\n      FOUND[\"$i-$arch\"]=\"${CURRENT%)} [\\\"MSVS_PATH\\\"]=\\\"$MSVS_PATH\\\" \\\n",
                    "rendered": {
                      "text": "    fi\n\n    # Ensure that these derived values give a valid compiler.\n    if check_environment \"${MSVS_PATH//:/*}\" \"${MSVS_INC//;/*}\" \"${MSVS_LIB//;/*}\" \"$i\" $arch ; then\n      # Put the package back into FOUND, but augmented with the architecture name and with the\n      # derived values.\n      FOUND[\"$i-$arch\"]=\"${CURRENT%)} [\\\"MSVS_PATH\\\"]=\\\"$MSVS_PATH\\\" \\\n",
                      "markdown": "`    fi\n\n    # Ensure that these derived values give a valid compiler.\n    if check_environment \"${MSVS_PATH//:/*}\" \"${MSVS_INC//;/*}\" \"${MSVS_LIB//;/*}\" \"$i\" $arch ; then\n      # Put the package back into FOUND, but augmented with the architecture name and with the\n      # derived values.\n      FOUND[\"$i-$arch\"]=\"${CURRENT%)} [\\\"MSVS_PATH\\\"]=\\\"$MSVS_PATH\\\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 102,
                  "endLine": 731,
                  "endColumn": 119,
                  "snippet": {
                    "text": "        debug \"Looking at $INSTANCE in $INSTANCE_PATH ($INSTANCE_VER $INSTANCE_NAME)\"\n        if [[ -e \"$(echo $INSTANCE_PATH| cygpath -f -)/VC/Auxiliary/Build/vcvarsall.bat\" ]] ; then\n          debug \"vcvarsall.bat found\"\n          FOUND+=([\"VS$INSTANCE_VER\"]=\"([\\\"DISPLAY\\\"]=\\\"$INSTANCE_NAME\\\" [\\\"ARCH\\\"]=\\\"x86 x64\\\" [\\\"SETENV\\\"]=\\\"$INSTANCE_PATH\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\\\" [\\\"SETENV_RELEASE\\\"]=\\\"\\\")\")\n        else\n          warning \"vcvarsall.bat not found for $INSTANCE\"\n        fi;;\n",
                    "rendered": {
                      "text": "        debug \"Looking at $INSTANCE in $INSTANCE_PATH ($INSTANCE_VER $INSTANCE_NAME)\"\n        if [[ -e \"$(echo $INSTANCE_PATH| cygpath -f -)/VC/Auxiliary/Build/vcvarsall.bat\" ]] ; then\n          debug \"vcvarsall.bat found\"\n          FOUND+=([\"VS$INSTANCE_VER\"]=\"([\\\"DISPLAY\\\"]=\\\"$INSTANCE_NAME\\\" [\\\"ARCH\\\"]=\\\"x86 x64\\\" [\\\"SETENV\\\"]=\\\"$INSTANCE_PATH\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\\\" [\\\"SETENV_RELEASE\\\"]=\\\"\\\")\")\n        else\n          warning \"vcvarsall.bat not found for $INSTANCE\"\n        fi;;\n",
                      "markdown": "`        debug \"Looking at $INSTANCE in $INSTANCE_PATH ($INSTANCE_VER $INSTANCE_NAME)\"\n        if [[ -e \"$(echo $INSTANCE_PATH| cygpath -f -)/VC/Auxiliary/Build/vcvarsall.bat\" ]] ; then\n          debug \"vcvarsall.bat found\"\n          FOUND+=([\"VS$INSTANCE_VER\"]=\"([\\\"DISPLAY\\\"]=\\\"$INSTANCE_NAME\\\" [\\\"ARCH\\\"]=\\\"x86 x64\\\" [\\\"SETENV\\\"]=\\\"$INSTANCE_PATH\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\\\" [\\\"SETENV_RELEASE\\\"]=\\\"\\\")\")\n        else\n          warning \"vcvarsall.bat not found for $INSTANCE\"\n        fi;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 17,
                  "endLine": 576,
                  "endColumn": 43,
                  "snippet": {
                    "text": "          ENV_CL=$(\"$WHICH\" cl)\n          ENV_cl=${ENV_CL,,}\n          ENV_cl=${ENV_cl/bin\\/*_/bin\\/}\n          debug \"Environment appears to include a compiler at $ENV_CL\"\n          if [[ -n $TARGET_ARCH && $TARGET_ARCH != $ENV_ARCH ]] ; then\n            debug \"But architecture doesn't match required value\"\n            unset ENV_ARCH\n",
                    "rendered": {
                      "text": "          ENV_CL=$(\"$WHICH\" cl)\n          ENV_cl=${ENV_CL,,}\n          ENV_cl=${ENV_cl/bin\\/*_/bin\\/}\n          debug \"Environment appears to include a compiler at $ENV_CL\"\n          if [[ -n $TARGET_ARCH && $TARGET_ARCH != $ENV_ARCH ]] ; then\n            debug \"But architecture doesn't match required value\"\n            unset ENV_ARCH\n",
                      "markdown": "`          ENV_CL=$(\"$WHICH\" cl)\n          ENV_cl=${ENV_CL,,}\n          ENV_cl=${ENV_cl/bin\\/*_/bin\\/}\n          debug \"Environment appears to include a compiler at $ENV_CL\"\n          if [[ -n $TARGET_ARCH && $TARGET_ARCH != $ENV_ARCH ]] ; then\n            debug \"But architecture doesn't match required value\"\n            unset ENV_ARCH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 33,
                  "endLine": 569,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        unset ENV_ARCH\n      else\n        if check_environment \"${PATH//:/*}\" \\\n                             \"${!ENV_INC//;/*}\" \\\n                             \"${!ENV_LIB//;/*}\" \\\n                             \"Environment C compiler\" \\\n                             \"$ENV_ARCH\" ; then\n",
                    "rendered": {
                      "text": "        unset ENV_ARCH\n      else\n        if check_environment \"${PATH//:/*}\" \\\n                             \"${!ENV_INC//;/*}\" \\\n                             \"${!ENV_LIB//;/*}\" \\\n                             \"Environment C compiler\" \\\n                             \"$ENV_ARCH\" ; then\n",
                      "markdown": "`        unset ENV_ARCH\n      else\n        if check_environment \"${PATH//:/*}\" \\\n                             \"${!ENV_INC//;/*}\" \\\n                             \"${!ENV_LIB//;/*}\" \\\n                             \"Environment C compiler\" \\\n                             \"$ENV_ARCH\" ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 16,
                  "endLine": 564,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n        unset ENV_ARCH\n      else\n",
                    "rendered": {
                      "text": "      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n        unset ENV_ARCH\n      else\n",
                      "markdown": "`      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n        unset ENV_ARCH\n      else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 6,
                  "endLine": 562,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n",
                    "rendered": {
                      "text": "    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n",
                      "markdown": "`    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 18,
                  "endLine": 559,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n",
                    "rendered": {
                      "text": "    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n",
                      "markdown": "`    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 52,
                  "endLine": 379,
                  "endColumn": 87,
                  "snippet": {
                    "text": "    echo \"      --with-mt        Only consider packages including the Manifest Tool\"\n    echo \"      --with-assembler Only consider packages including an assembler\"\n    echo\n    echo \"If MSVS_PREFERENCE is not given, then the environment variable MSVS_PREFERENCE\"\n    echo \"is read. MSVS_PREFERENCE is a semicolon separated list of preferred versions.\"\n    echo \"Three kinds of version notation are supported:\"\n    echo \"  1. @ - which refers to the C compiler found in PATH (if it can be identified)\"\n",
                    "rendered": {
                      "text": "    echo \"      --with-mt        Only consider packages including the Manifest Tool\"\n    echo \"      --with-assembler Only consider packages including an assembler\"\n    echo\n    echo \"If MSVS_PREFERENCE is not given, then the environment variable MSVS_PREFERENCE\"\n    echo \"is read. MSVS_PREFERENCE is a semicolon separated list of preferred versions.\"\n    echo \"Three kinds of version notation are supported:\"\n    echo \"  1. @ - which refers to the C compiler found in PATH (if it can be identified)\"\n",
                      "markdown": "`    echo \"      --with-mt        Only consider packages including the Manifest Tool\"\n    echo \"      --with-assembler Only consider packages including an assembler\"\n    echo\n    echo \"If MSVS_PREFERENCE is not given, then the environment variable MSVS_PREFERENCE\"\n    echo \"is read. MSVS_PREFERENCE is a semicolon separated list of preferred versions.\"\n    echo \"Three kinds of version notation are supported:\"\n    echo \"  1. @ - which refers to the C compiler found in PATH (if it can be identified)\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 8,
                  "endLine": 93,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  ((RET+=STATUS))\n}\n\n# check_environment PATH INC LIB name arch\n# By checking for the presence of various files, verifies that PATH, INC and LIB provide a complete\n# compiler and indicates this in its return status. RET is assumed to be zero on entry. $ASSEMBLER\n# will contain the name of assembler for this compiler series (ml.exe or ml64.exe).\n",
                    "rendered": {
                      "text": "  ((RET+=STATUS))\n}\n\n# check_environment PATH INC LIB name arch\n# By checking for the presence of various files, verifies that PATH, INC and LIB provide a complete\n# compiler and indicates this in its return status. RET is assumed to be zero on entry. $ASSEMBLER\n# will contain the name of assembler for this compiler series (ml.exe or ml64.exe).\n",
                      "markdown": "`  ((RET+=STATUS))\n}\n\n# check_environment PATH INC LIB name arch\n# By checking for the presence of various files, verifies that PATH, INC and LIB provide a complete\n# compiler and indicates this in its return status. RET is assumed to be zero on entry. $ASSEMBLER\n# will contain the name of assembler for this compiler series (ml.exe or ml64.exe).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 1027,
                  "startColumn": 62,
                  "endLine": 1027,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  fi\ndone\n\n# If we got this far, then either we failed to find a compiler at all, or we were looking for the\n# environment compiler (or --all was specified).\n\n# Adopt a weak match for the environment compiler, if that's the best we can do.\n",
                    "rendered": {
                      "text": "  fi\ndone\n\n# If we got this far, then either we failed to find a compiler at all, or we were looking for the\n# environment compiler (or --all was specified).\n\n# Adopt a weak match for the environment compiler, if that's the best we can do.\n",
                      "markdown": "`  fi\ndone\n\n# If we got this far, then either we failed to find a compiler at all, or we were looking for the\n# environment compiler (or --all was specified).\n\n# Adopt a weak match for the environment compiler, if that's the best we can do.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 862,
                  "startColumn": 15,
                  "endLine": 862,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  eval COMPILER=$CURRENT\n  # At the end of this process, the keys of FOUND will be augmented with the architecture found in\n  # each case (so if \"VS14.0\" was in FOUND from the scan and both the x86 and x64 compilers are\n  # valid, then at the end of this loop FOUND will contain \"VS14.0-x86\" and \"VS14.0-x64\").\n  unset FOUND[$i]\n\n  if [[ ${COMPILER[\"IS_EXPRESS\"]}0 -gt 0 && -n ${COMPILER[\"EXPRESS_ARCH_SWITCHES\"]+x} ]] ; then\n",
                    "rendered": {
                      "text": "  eval COMPILER=$CURRENT\n  # At the end of this process, the keys of FOUND will be augmented with the architecture found in\n  # each case (so if \"VS14.0\" was in FOUND from the scan and both the x86 and x64 compilers are\n  # valid, then at the end of this loop FOUND will contain \"VS14.0-x86\" and \"VS14.0-x64\").\n  unset FOUND[$i]\n\n  if [[ ${COMPILER[\"IS_EXPRESS\"]}0 -gt 0 && -n ${COMPILER[\"EXPRESS_ARCH_SWITCHES\"]+x} ]] ; then\n",
                      "markdown": "`  eval COMPILER=$CURRENT\n  # At the end of this process, the keys of FOUND will be augmented with the architecture found in\n  # each case (so if \"VS14.0\" was in FOUND from the scan and both the x86 and x64 compilers are\n  # valid, then at the end of this loop FOUND will contain \"VS14.0-x86\" and \"VS14.0-x64\").\n  unset FOUND[$i]\n\n  if [[ ${COMPILER[\"IS_EXPRESS\"]}0 -gt 0 && -n ${COMPILER[\"EXPRESS_ARCH_SWITCHES\"]+x} ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 3,
                  "endLine": 860,
                  "endColumn": 7,
                  "snippet": {
                    "text": "for i in \"${TEST[@]}\" ; do\n  CURRENT=${FOUND[$i]}\n  eval COMPILER=$CURRENT\n  # At the end of this process, the keys of FOUND will be augmented with the architecture found in\n  # each case (so if \"VS14.0\" was in FOUND from the scan and both the x86 and x64 compilers are\n  # valid, then at the end of this loop FOUND will contain \"VS14.0-x86\" and \"VS14.0-x64\").\n  unset FOUND[$i]\n",
                    "rendered": {
                      "text": "for i in \"${TEST[@]}\" ; do\n  CURRENT=${FOUND[$i]}\n  eval COMPILER=$CURRENT\n  # At the end of this process, the keys of FOUND will be augmented with the architecture found in\n  # each case (so if \"VS14.0\" was in FOUND from the scan and both the x86 and x64 compilers are\n  # valid, then at the end of this loop FOUND will contain \"VS14.0-x86\" and \"VS14.0-x64\").\n  unset FOUND[$i]\n",
                      "markdown": "`for i in \"${TEST[@]}\" ; do\n  CURRENT=${FOUND[$i]}\n  eval COMPILER=$CURRENT\n  # At the end of this process, the keys of FOUND will be augmented with the architecture found in\n  # each case (so if \"VS14.0\" was in FOUND from the scan and both the x86 and x64 compilers are\n  # valid, then at the end of this loop FOUND will contain \"VS14.0-x86\" and \"VS14.0-x64\").\n  unset FOUND[$i]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 849,
                  "startColumn": 19,
                  "endLine": 849,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# contain the strings returned by the script in an otherwise empty environment (if one or both of\n# the LIB and INCLUDE variables do not contain the string returned, then the compiler is weakly\n# identified). If the environment compiler is strongly identified by more than one package, then it\n# is not identified at all; if it is strongly identified by no packages but weakly identified by\n# exactly 1, then we grudgingly accept that that's probably the one.\nENV_COMPILER=\nWEAK_ENV=\n",
                    "rendered": {
                      "text": "# contain the strings returned by the script in an otherwise empty environment (if one or both of\n# the LIB and INCLUDE variables do not contain the string returned, then the compiler is weakly\n# identified). If the environment compiler is strongly identified by more than one package, then it\n# is not identified at all; if it is strongly identified by no packages but weakly identified by\n# exactly 1, then we grudgingly accept that that's probably the one.\nENV_COMPILER=\nWEAK_ENV=\n",
                      "markdown": "`# contain the strings returned by the script in an otherwise empty environment (if one or both of\n# the LIB and INCLUDE variables do not contain the string returned, then the compiler is weakly\n# identified). If the environment compiler is strongly identified by more than one package, then it\n# is not identified at all; if it is strongly identified by no packages but weakly identified by\n# exactly 1, then we grudgingly accept that that's probably the one.\nENV_COMPILER=\nWEAK_ENV=\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 728,
                  "startColumn": 22,
                  "endLine": 728,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        INSTANCE_VER=${INSTANCE_VER%.*};;\n      displayName)\n        INSTANCE_NAME=${line#*: }\n        debug \"Looking at $INSTANCE in $INSTANCE_PATH ($INSTANCE_VER $INSTANCE_NAME)\"\n        if [[ -e \"$(echo $INSTANCE_PATH| cygpath -f -)/VC/Auxiliary/Build/vcvarsall.bat\" ]] ; then\n          debug \"vcvarsall.bat found\"\n          FOUND+=([\"VS$INSTANCE_VER\"]=\"([\\\"DISPLAY\\\"]=\\\"$INSTANCE_NAME\\\" [\\\"ARCH\\\"]=\\\"x86 x64\\\" [\\\"SETENV\\\"]=\\\"$INSTANCE_PATH\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\\\" [\\\"SETENV_RELEASE\\\"]=\\\"\\\")\")\n",
                    "rendered": {
                      "text": "        INSTANCE_VER=${INSTANCE_VER%.*};;\n      displayName)\n        INSTANCE_NAME=${line#*: }\n        debug \"Looking at $INSTANCE in $INSTANCE_PATH ($INSTANCE_VER $INSTANCE_NAME)\"\n        if [[ -e \"$(echo $INSTANCE_PATH| cygpath -f -)/VC/Auxiliary/Build/vcvarsall.bat\" ]] ; then\n          debug \"vcvarsall.bat found\"\n          FOUND+=([\"VS$INSTANCE_VER\"]=\"([\\\"DISPLAY\\\"]=\\\"$INSTANCE_NAME\\\" [\\\"ARCH\\\"]=\\\"x86 x64\\\" [\\\"SETENV\\\"]=\\\"$INSTANCE_PATH\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\\\" [\\\"SETENV_RELEASE\\\"]=\\\"\\\")\")\n",
                      "markdown": "`        INSTANCE_VER=${INSTANCE_VER%.*};;\n      displayName)\n        INSTANCE_NAME=${line#*: }\n        debug \"Looking at $INSTANCE in $INSTANCE_PATH ($INSTANCE_VER $INSTANCE_NAME)\"\n        if [[ -e \"$(echo $INSTANCE_PATH| cygpath -f -)/VC/Auxiliary/Build/vcvarsall.bat\" ]] ; then\n          debug \"vcvarsall.bat found\"\n          FOUND+=([\"VS$INSTANCE_VER\"]=\"([\\\"DISPLAY\\\"]=\\\"$INSTANCE_NAME\\\" [\\\"ARCH\\\"]=\\\"x86 x64\\\" [\\\"SETENV\\\"]=\\\"$INSTANCE_PATH\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\\\" [\\\"SETENV_RELEASE\\\"]=\\\"\\\")\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 48,
                  "endLine": 595,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# the real 64-bit programs.\n# Thus:\n#   MS_ROOT is the 32-bit Microsoft Registry key (all Visual Studio keys are located there)\n#   REG64 is the processor native version of the reg utility (allowing 64-bit keys to be read for\n#         the SDKs)\nif [[ -n ${PROCESSOR_ARCHITEW6432+x} ]] ; then\n  debug \"WOW64 detected\"\n",
                    "rendered": {
                      "text": "# the real 64-bit programs.\n# Thus:\n#   MS_ROOT is the 32-bit Microsoft Registry key (all Visual Studio keys are located there)\n#   REG64 is the processor native version of the reg utility (allowing 64-bit keys to be read for\n#         the SDKs)\nif [[ -n ${PROCESSOR_ARCHITEW6432+x} ]] ; then\n  debug \"WOW64 detected\"\n",
                      "markdown": "`# the real 64-bit programs.\n# Thus:\n#   MS_ROOT is the 32-bit Microsoft Registry key (all Visual Studio keys are located there)\n#   REG64 is the processor native version of the reg utility (allowing 64-bit keys to be read for\n#         the SDKs)\nif [[ -n ${PROCESSOR_ARCHITEW6432+x} ]] ; then\n  debug \"WOW64 detected\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 58,
                  "endLine": 576,
                  "endColumn": 62,
                  "snippet": {
                    "text": "          ENV_CL=$(\"$WHICH\" cl)\n          ENV_cl=${ENV_CL,,}\n          ENV_cl=${ENV_cl/bin\\/*_/bin\\/}\n          debug \"Environment appears to include a compiler at $ENV_CL\"\n          if [[ -n $TARGET_ARCH && $TARGET_ARCH != $ENV_ARCH ]] ; then\n            debug \"But architecture doesn't match required value\"\n            unset ENV_ARCH\n",
                    "rendered": {
                      "text": "          ENV_CL=$(\"$WHICH\" cl)\n          ENV_cl=${ENV_CL,,}\n          ENV_cl=${ENV_cl/bin\\/*_/bin\\/}\n          debug \"Environment appears to include a compiler at $ENV_CL\"\n          if [[ -n $TARGET_ARCH && $TARGET_ARCH != $ENV_ARCH ]] ; then\n            debug \"But architecture doesn't match required value\"\n            unset ENV_ARCH\n",
                      "markdown": "`          ENV_CL=$(\"$WHICH\" cl)\n          ENV_cl=${ENV_CL,,}\n          ENV_cl=${ENV_cl/bin\\/*_/bin\\/}\n          debug \"Environment appears to include a compiler at $ENV_CL\"\n          if [[ -n $TARGET_ARCH && $TARGET_ARCH != $ENV_ARCH ]] ; then\n            debug \"But architecture doesn't match required value\"\n            unset ENV_ARCH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 45,
                  "endLine": 556,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    esac\n\n    # Environment variable names are a bit of a nightmare on Windows - they are actually case\n    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n",
                    "rendered": {
                      "text": "    esac\n\n    # Environment variable names are a bit of a nightmare on Windows - they are actually case\n    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n",
                      "markdown": "`    esac\n\n    # Environment variable names are a bit of a nightmare on Windows - they are actually case\n    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 89,
                  "endLine": 405,
                  "snippet": {
                    "text": "ows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n# ",
                    "rendered": {
                      "text": "ows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n# ",
                      "markdown": "`ows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n# `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 37,
                  "endLine": 390,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    echo \"     10.0). Visual Studio packages are always preferred ahead of SDKs.\"\n    echo \"  3. SPEC - an actual package specification. Visual Studio packages are VSmm.n\"\n    echo \"     (e.g. VS14.0, VS7.1) and SDK packages are SDKm.n (e.g. SDK7.1).\"\n    echo \"     Any Visual Studio 2017 update can be selected with VS15.*\"\n    echo \"The default behaviour is to match the environment compiler followed by the most\"\n    echo \"recent version of the compiler.\"\n    exit 0;;\n",
                    "rendered": {
                      "text": "    echo \"     10.0). Visual Studio packages are always preferred ahead of SDKs.\"\n    echo \"  3. SPEC - an actual package specification. Visual Studio packages are VSmm.n\"\n    echo \"     (e.g. VS14.0, VS7.1) and SDK packages are SDKm.n (e.g. SDK7.1).\"\n    echo \"     Any Visual Studio 2017 update can be selected with VS15.*\"\n    echo \"The default behaviour is to match the environment compiler followed by the most\"\n    echo \"recent version of the compiler.\"\n    exit 0;;\n",
                      "markdown": "`    echo \"     10.0). Visual Studio packages are always preferred ahead of SDKs.\"\n    echo \"  3. SPEC - an actual package specification. Visual Studio packages are VSmm.n\"\n    echo \"     (e.g. VS14.0, VS7.1) and SDK packages are SDKm.n (e.g. SDK7.1).\"\n    echo \"     Any Visual Studio 2017 update can be selected with VS15.*\"\n    echo \"The default behaviour is to match the environment compiler followed by the most\"\n    echo \"recent version of the compiler.\"\n    exit 0;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 21,
                  "endLine": 214,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  SWITCH_PREFIX='/'\nfi\n\n# Parse command-line. At the moment, the short option which usefully combines with anything is -d,\n# so for the time being, combining short options is not permitted, as the loop becomes even less\n# clear with getopts. GNU getopt isn't installed by default on Cygwin...\nif [[ $@ != \"\" ]] ; then\n",
                    "rendered": {
                      "text": "  SWITCH_PREFIX='/'\nfi\n\n# Parse command-line. At the moment, the short option which usefully combines with anything is -d,\n# so for the time being, combining short options is not permitted, as the loop becomes even less\n# clear with getopts. GNU getopt isn't installed by default on Cygwin...\nif [[ $@ != \"\" ]] ; then\n",
                      "markdown": "`  SWITCH_PREFIX='/'\nfi\n\n# Parse command-line. At the moment, the short option which usefully combines with anything is -d,\n# so for the time being, combining short options is not permitted, as the loop becomes even less\n# clear with getopts. GNU getopt isn't installed by default on Cygwin...\nif [[ $@ != \"\" ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 1,
                  "endLine": 59,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# Retrieves a REG_SZ value from the registry (redirected on WOW64)\nreg_string ()\n{\n  reg query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# reg64_string key value\n",
                    "rendered": {
                      "text": "# Retrieves a REG_SZ value from the registry (redirected on WOW64)\nreg_string ()\n{\n  reg query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# reg64_string key value\n",
                      "markdown": "`# Retrieves a REG_SZ value from the registry (redirected on WOW64)\nreg_string ()\n{\n  reg query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# reg64_string key value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# ################################################################################################ #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# ################################################################################################ #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n",
                      "markdown": "`#!/usr/bin/env bash\n# ################################################################################################ #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 1078,
                  "startColumn": 8,
                  "endLine": 1079,
                  "snippet": {
                    "text": "  echo \"Installed and usable packages:\"\n  for i in \"${!FOUND[@]}\" ; do\n    echo \"  $i\"\n  done | sort\n  exit 0\nfi\n\nif [[ -n $SOLUTION ]] ; then\n",
                    "rendered": {
                      "text": "  echo \"Installed and usable packages:\"\n  for i in \"${!FOUND[@]}\" ; do\n    echo \"  $i\"\n  done | sort\n  exit 0\nfi\n\nif [[ -n $SOLUTION ]] ; then\n",
                      "markdown": "`  echo \"Installed and usable packages:\"\n  for i in \"${!FOUND[@]}\" ; do\n    echo \"  $i\"\n  done | sort\n  exit 0\nfi\n\nif [[ -n $SOLUTION ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 1044,
                  "startColumn": 38,
                  "endLine": 1044,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    SOLUTION=${ENV_COMPILER%-$ENV_ARCH}\n    # If --arch wasn't specified, then ensure that the other architecture was also found. If --arch\n    # was specified, then validate that the compiler was valid. This should always happen, unless\n    # something went wrong running the script to get MSVS_PATH, MSVS_LIB and MSVS_INC.\n    if [[ -n ${FOUND[\"$SOLUTION-${FLIP[$ENV_ARCH]}\"]+x} ||\n          -n ${FOUND[\"$SOLUTION-$TARGET_ARCH\"]+x} ]] ; then\n      debug \"Solved with $SOLUTION\"\n",
                    "rendered": {
                      "text": "    SOLUTION=${ENV_COMPILER%-$ENV_ARCH}\n    # If --arch wasn't specified, then ensure that the other architecture was also found. If --arch\n    # was specified, then validate that the compiler was valid. This should always happen, unless\n    # something went wrong running the script to get MSVS_PATH, MSVS_LIB and MSVS_INC.\n    if [[ -n ${FOUND[\"$SOLUTION-${FLIP[$ENV_ARCH]}\"]+x} ||\n          -n ${FOUND[\"$SOLUTION-$TARGET_ARCH\"]+x} ]] ; then\n      debug \"Solved with $SOLUTION\"\n",
                      "markdown": "`    SOLUTION=${ENV_COMPILER%-$ENV_ARCH}\n    # If --arch wasn't specified, then ensure that the other architecture was also found. If --arch\n    # was specified, then validate that the compiler was valid. This should always happen, unless\n    # something went wrong running the script to get MSVS_PATH, MSVS_LIB and MSVS_INC.\n    if [[ -n ${FOUND[\"$SOLUTION-${FLIP[$ENV_ARCH]}\"]+x} ||\n          -n ${FOUND[\"$SOLUTION-$TARGET_ARCH\"]+x} ]] ; then\n      debug \"Solved with $SOLUTION\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 1027,
                  "startColumn": 46,
                  "endLine": 1027,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  fi\ndone\n\n# If we got this far, then either we failed to find a compiler at all, or we were looking for the\n# environment compiler (or --all was specified).\n\n# Adopt a weak match for the environment compiler, if that's the best we can do.\n",
                    "rendered": {
                      "text": "  fi\ndone\n\n# If we got this far, then either we failed to find a compiler at all, or we were looking for the\n# environment compiler (or --all was specified).\n\n# Adopt a weak match for the environment compiler, if that's the best we can do.\n",
                      "markdown": "`  fi\ndone\n\n# If we got this far, then either we failed to find a compiler at all, or we were looking for the\n# environment compiler (or --all was specified).\n\n# Adopt a weak match for the environment compiler, if that's the best we can do.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 80,
                  "endLine": 972,
                  "endColumn": 85,
                  "snippet": {
                    "text": "      FOUND[\"$i-$arch\"]=\"${CURRENT%)} [\\\"MSVS_PATH\\\"]=\\\"$MSVS_PATH\\\" \\\n                                      [\\\"MSVS_INC\\\"]=\\\"$MSVS_INC\\\" \\\n                                      [\\\"MSVS_LIB\\\"]=\\\"$MSVS_LIB\\\" \\\n                                      [\\\"ASSEMBLER\\\"]=\\\"$ASSEMBLER\\\")\" #\"# fixes vim syn match error\n\n      # Check to see if this is a match for the environment C compiler.\n      if [[ -n ${ENV_ARCH+x} ]] ; then\n",
                    "rendered": {
                      "text": "      FOUND[\"$i-$arch\"]=\"${CURRENT%)} [\\\"MSVS_PATH\\\"]=\\\"$MSVS_PATH\\\" \\\n                                      [\\\"MSVS_INC\\\"]=\\\"$MSVS_INC\\\" \\\n                                      [\\\"MSVS_LIB\\\"]=\\\"$MSVS_LIB\\\" \\\n                                      [\\\"ASSEMBLER\\\"]=\\\"$ASSEMBLER\\\")\" #\"# fixes vim syn match error\n\n      # Check to see if this is a match for the environment C compiler.\n      if [[ -n ${ENV_ARCH+x} ]] ; then\n",
                      "markdown": "`      FOUND[\"$i-$arch\"]=\"${CURRENT%)} [\\\"MSVS_PATH\\\"]=\\\"$MSVS_PATH\\\" \\\n                                      [\\\"MSVS_INC\\\"]=\\\"$MSVS_INC\\\" \\\n                                      [\\\"MSVS_LIB\\\"]=\\\"$MSVS_LIB\\\" \\\n                                      [\\\"ASSEMBLER\\\"]=\\\"$ASSEMBLER\\\")\" #\"# fixes vim syn match error\n\n      # Check to see if this is a match for the environment C compiler.\n      if [[ -n ${ENV_ARCH+x} ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 945,
                  "startColumn": 37,
                  "endLine": 945,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      # Translate MSVS_PATH back to Cygwin notation (/cygdrive, etc. and colon-separated)\n      MSVS_PATH=$(cygpath \"$MSVS_PATH\" -p)\n      # Remove any trailing / from elements of MSVS_PATH\n      MSVS_PATH=$(echo \"$MSVS_PATH\" | sed -e 's|\\([^:]\\)/\\+\\(:\\|$\\)|\\1\\2|g;s/?msvs-detect?.*//')\n      # Guarantee that MSVS_PATH ends with a single :\n      MSVS_PATH=\"${MSVS_PATH%%:}:\"\n    fi\n",
                    "rendered": {
                      "text": "      # Translate MSVS_PATH back to Cygwin notation (/cygdrive, etc. and colon-separated)\n      MSVS_PATH=$(cygpath \"$MSVS_PATH\" -p)\n      # Remove any trailing / from elements of MSVS_PATH\n      MSVS_PATH=$(echo \"$MSVS_PATH\" | sed -e 's|\\([^:]\\)/\\+\\(:\\|$\\)|\\1\\2|g;s/?msvs-detect?.*//')\n      # Guarantee that MSVS_PATH ends with a single :\n      MSVS_PATH=\"${MSVS_PATH%%:}:\"\n    fi\n",
                      "markdown": "`      # Translate MSVS_PATH back to Cygwin notation (/cygdrive, etc. and colon-separated)\n      MSVS_PATH=$(cygpath \"$MSVS_PATH\" -p)\n      # Remove any trailing / from elements of MSVS_PATH\n      MSVS_PATH=$(echo \"$MSVS_PATH\" | sed -e 's|\\([^:]\\)/\\+\\(:\\|$\\)|\\1\\2|g;s/?msvs-detect?.*//')\n      # Guarantee that MSVS_PATH ends with a single :\n      MSVS_PATH=\"${MSVS_PATH%%:}:\"\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 134,
                  "endLine": 936,
                  "endColumn": 140,
                  "snippet": {
                    "text": "      ((num++))\n    done < <(INCLUDE='' LIB='' PATH=\"?msvs-detect?:$DIR:$PATH\" ORIGINALPATH='' \\\n             EXEC_SCRIPT=\"$(basename \"$SCRIPT\") $ARCH_SWITCHES $SCRIPT_SWITCHES\" \\\n             $(cygpath \"$COMSPEC\") ${SWITCH_PREFIX}v:on ${SWITCH_PREFIX}c $COMMAND 2>/dev/null | grep -F XMARKER -A 3 | tr -d '\\015' | tail -3)\n    if [[ $DEBUG -gt 3 ]] ; then\n      echo done>&2\n    fi\n",
                    "rendered": {
                      "text": "      ((num++))\n    done < <(INCLUDE='' LIB='' PATH=\"?msvs-detect?:$DIR:$PATH\" ORIGINALPATH='' \\\n             EXEC_SCRIPT=\"$(basename \"$SCRIPT\") $ARCH_SWITCHES $SCRIPT_SWITCHES\" \\\n             $(cygpath \"$COMSPEC\") ${SWITCH_PREFIX}v:on ${SWITCH_PREFIX}c $COMMAND 2>/dev/null | grep -F XMARKER -A 3 | tr -d '\\015' | tail -3)\n    if [[ $DEBUG -gt 3 ]] ; then\n      echo done>&2\n    fi\n",
                      "markdown": "`      ((num++))\n    done < <(INCLUDE='' LIB='' PATH=\"?msvs-detect?:$DIR:$PATH\" ORIGINALPATH='' \\\n             EXEC_SCRIPT=\"$(basename \"$SCRIPT\") $ARCH_SWITCHES $SCRIPT_SWITCHES\" \\\n             $(cygpath \"$COMSPEC\") ${SWITCH_PREFIX}v:on ${SWITCH_PREFIX}c $COMMAND 2>/dev/null | grep -F XMARKER -A 3 | tr -d '\\015' | tail -3)\n    if [[ $DEBUG -gt 3 ]] ; then\n      echo done>&2\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 96,
                  "endLine": 936,
                  "endColumn": 102,
                  "snippet": {
                    "text": "      ((num++))\n    done < <(INCLUDE='' LIB='' PATH=\"?msvs-detect?:$DIR:$PATH\" ORIGINALPATH='' \\\n             EXEC_SCRIPT=\"$(basename \"$SCRIPT\") $ARCH_SWITCHES $SCRIPT_SWITCHES\" \\\n             $(cygpath \"$COMSPEC\") ${SWITCH_PREFIX}v:on ${SWITCH_PREFIX}c $COMMAND 2>/dev/null | grep -F XMARKER -A 3 | tr -d '\\015' | tail -3)\n    if [[ $DEBUG -gt 3 ]] ; then\n      echo done>&2\n    fi\n",
                    "rendered": {
                      "text": "      ((num++))\n    done < <(INCLUDE='' LIB='' PATH=\"?msvs-detect?:$DIR:$PATH\" ORIGINALPATH='' \\\n             EXEC_SCRIPT=\"$(basename \"$SCRIPT\") $ARCH_SWITCHES $SCRIPT_SWITCHES\" \\\n             $(cygpath \"$COMSPEC\") ${SWITCH_PREFIX}v:on ${SWITCH_PREFIX}c $COMMAND 2>/dev/null | grep -F XMARKER -A 3 | tr -d '\\015' | tail -3)\n    if [[ $DEBUG -gt 3 ]] ; then\n      echo done>&2\n    fi\n",
                      "markdown": "`      ((num++))\n    done < <(INCLUDE='' LIB='' PATH=\"?msvs-detect?:$DIR:$PATH\" ORIGINALPATH='' \\\n             EXEC_SCRIPT=\"$(basename \"$SCRIPT\") $ARCH_SWITCHES $SCRIPT_SWITCHES\" \\\n             $(cygpath \"$COMSPEC\") ${SWITCH_PREFIX}v:on ${SWITCH_PREFIX}c $COMMAND 2>/dev/null | grep -F XMARKER -A 3 | tr -d '\\015' | tail -3)\n    if [[ $DEBUG -gt 3 ]] ; then\n      echo done>&2\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 910,
                  "startColumn": 13,
                  "endLine": 910,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      ARCH_SWITCHES=$arch\n    fi\n\n    # Run the script in order to determine changes made to PATH, INCLUDE and LIB. These scripts\n    # always prepend changes to the environment variables.\n    MSVS_PATH=\n    MSVS_LIB=\n",
                    "rendered": {
                      "text": "      ARCH_SWITCHES=$arch\n    fi\n\n    # Run the script in order to determine changes made to PATH, INCLUDE and LIB. These scripts\n    # always prepend changes to the environment variables.\n    MSVS_PATH=\n    MSVS_LIB=\n",
                      "markdown": "`      ARCH_SWITCHES=$arch\n    fi\n\n    # Run the script in order to determine changes made to PATH, INCLUDE and LIB. These scripts\n    # always prepend changes to the environment variables.\n    MSVS_PATH=\n    MSVS_LIB=\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 892,
                  "startColumn": 32,
                  "endLine": 892,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    SCRIPT=${COMPILER[\"SETENV\"]}\n    SCRIPT_SWITCHES=${COMPILER[\"SETENV_RELEASE\"]}\n  fi\n  # For reasons of escaping, the script is executed using its basename so the directory needs\n  # prepending to PATH.\n  DIR=$(dirname \"$SCRIPT\" | cygpath -u -f -)\n\n",
                    "rendered": {
                      "text": "    SCRIPT=${COMPILER[\"SETENV\"]}\n    SCRIPT_SWITCHES=${COMPILER[\"SETENV_RELEASE\"]}\n  fi\n  # For reasons of escaping, the script is executed using its basename so the directory needs\n  # prepending to PATH.\n  DIR=$(dirname \"$SCRIPT\" | cygpath -u -f -)\n\n",
                      "markdown": "`    SCRIPT=${COMPILER[\"SETENV\"]}\n    SCRIPT_SWITCHES=${COMPILER[\"SETENV_RELEASE\"]}\n  fi\n  # For reasons of escaping, the script is executed using its basename so the directory needs\n  # prepending to PATH.\n  DIR=$(dirname \"$SCRIPT\" | cygpath -u -f -)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 873,
                  "startColumn": 17,
                  "endLine": 873,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    ARCHINFO=()\n  fi\n\n  # Determine the script to be executed and any non-architecture specific switches needed.\n  # $ENV is will contain the value of the environment variable for the compiler (empty for an SDK)\n  # which is required for Visual Studio 7.x shim later.\n  if [[ -n ${COMPILER[\"ENV\"]+x} ]] ; then\n",
                    "rendered": {
                      "text": "    ARCHINFO=()\n  fi\n\n  # Determine the script to be executed and any non-architecture specific switches needed.\n  # $ENV is will contain the value of the environment variable for the compiler (empty for an SDK)\n  # which is required for Visual Studio 7.x shim later.\n  if [[ -n ${COMPILER[\"ENV\"]+x} ]] ; then\n",
                      "markdown": "`    ARCHINFO=()\n  fi\n\n  # Determine the script to be executed and any non-architecture specific switches needed.\n  # $ENV is will contain the value of the environment variable for the compiler (empty for an SDK)\n  # which is required for Visual Studio 7.x shim later.\n  if [[ -n ${COMPILER[\"ENV\"]+x} ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 846,
                  "startColumn": 37,
                  "endLine": 846,
                  "endColumn": 45,
                  "snippet": {
                    "text": "nt script and then test whether it is suitable. During this loop,\n# attempt to identify the environment C compiler (if one was found). The environment C compiler is\n# strongly identified if the full location of cl matches the one in PATH and both LIB and INCLUDE\n# contain the strings returned by the script in an otherwise empty environment (if one or both of\n# the LIB and INCLUDE variables do not contain the string returned, then the compiler is weakly\n# identified). If the environment compiler is strongly identified by more than one package, then it\n# is not identified at all; if it is strongly ident",
                    "rendered": {
                      "text": "nt script and then test whether it is suitable. During this loop,\n# attempt to identify the environment C compiler (if one was found). The environment C compiler is\n# strongly identified if the full location of cl matches the one in PATH and both LIB and INCLUDE\n# contain the strings returned by the script in an otherwise empty environment (if one or both of\n# the LIB and INCLUDE variables do not contain the string returned, then the compiler is weakly\n# identified). If the environment compiler is strongly identified by more than one package, then it\n# is not identified at all; if it is strongly ident",
                      "markdown": "`nt script and then test whether it is suitable. During this loop,\n# attempt to identify the environment C compiler (if one was found). The environment C compiler is\n# strongly identified if the full location of cl matches the one in PATH and both LIB and INCLUDE\n# contain the strings returned by the script in an otherwise empty environment (if one or both of\n# the LIB and INCLUDE variables do not contain the string returned, then the compiler is weakly\n# identified). If the environment compiler is strongly identified by more than one package, then it\n# is not identified at all; if it is strongly ident`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 37,
                  "endLine": 843,
                  "endColumn": 45,
                  "snippet": {
                    "text": "fi\n\n\n# Now run each compiler's environment script and then test whether it is suitable. During this loop,\n# attempt to identify the environment C compiler (if one was found). The environment C compiler is\n# strongly identified if the full location of cl matches the one in PATH and both LIB and INCLUDE\n# contain the strings returned by the script in an otherwise empty environment (if one or both of\n",
                    "rendered": {
                      "text": "fi\n\n\n# Now run each compiler's environment script and then test whether it is suitable. During this loop,\n# attempt to identify the environment C compiler (if one was found). The environment C compiler is\n# strongly identified if the full location of cl matches the one in PATH and both LIB and INCLUDE\n# contain the strings returned by the script in an otherwise empty environment (if one or both of\n",
                      "markdown": "`fi\n\n\n# Now run each compiler's environment script and then test whether it is suitable. During this loop,\n# attempt to identify the environment C compiler (if one was found). The environment C compiler is\n# strongly identified if the full location of cl matches the one in PATH and both LIB and INCLUDE\n# contain the strings returned by the script in an otherwise empty environment (if one or both of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 690,
                  "startColumn": 44,
                  "endLine": 690,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    TEST_PATH=$(cygpath -u \"$INSTALL_DIR\")\n    if [[ -e $TEST_PATH/Bin/SetEnv.cmd ]] ; then\n      if [[ -z ${COMPILERS[\"SDK${i#v}\"]+x} ]] ; then\n        warning \"SDK $i is not known to this script - assuming compatibility\"\n        DISPLAY=\"Windows SDK $i\"\n      else\n        eval COMPILER=${COMPILERS[\"SDK${i#v}\"]}\n",
                    "rendered": {
                      "text": "    TEST_PATH=$(cygpath -u \"$INSTALL_DIR\")\n    if [[ -e $TEST_PATH/Bin/SetEnv.cmd ]] ; then\n      if [[ -z ${COMPILERS[\"SDK${i#v}\"]+x} ]] ; then\n        warning \"SDK $i is not known to this script - assuming compatibility\"\n        DISPLAY=\"Windows SDK $i\"\n      else\n        eval COMPILER=${COMPILERS[\"SDK${i#v}\"]}\n",
                      "markdown": "`    TEST_PATH=$(cygpath -u \"$INSTALL_DIR\")\n    if [[ -e $TEST_PATH/Bin/SetEnv.cmd ]] ; then\n      if [[ -z ${COMPILERS[\"SDK${i#v}\"]+x} ]] ; then\n        warning \"SDK $i is not known to this script - assuming compatibility\"\n        DISPLAY=\"Windows SDK $i\"\n      else\n        eval COMPILER=${COMPILERS[\"SDK${i#v}\"]}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 683,
                  "startColumn": 59,
                  "endLine": 683,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n# Now enumerate installed SDKs for v6.0+\nSDK_ROOT='HKLM\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows'\nfor i in $(reg query \"$SDK_ROOT\" 2>/dev/null | tr -d '\\r' | sed -ne '/Windows\\\\v/s/.*\\\\//p') ; do\n  debug \"Analysing SDK key $SDK_ROOT\\\\$i\"\n  INSTALL_DIR=$(reg_string \"$SDK_ROOT\\\\$i\" InstallationFolder)\n  if [[ -n $INSTALL_DIR ]] ; then\n",
                    "rendered": {
                      "text": "\n# Now enumerate installed SDKs for v6.0+\nSDK_ROOT='HKLM\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows'\nfor i in $(reg query \"$SDK_ROOT\" 2>/dev/null | tr -d '\\r' | sed -ne '/Windows\\\\v/s/.*\\\\//p') ; do\n  debug \"Analysing SDK key $SDK_ROOT\\\\$i\"\n  INSTALL_DIR=$(reg_string \"$SDK_ROOT\\\\$i\" InstallationFolder)\n  if [[ -n $INSTALL_DIR ]] ; then\n",
                      "markdown": "`\n# Now enumerate installed SDKs for v6.0+\nSDK_ROOT='HKLM\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows'\nfor i in $(reg query \"$SDK_ROOT\" 2>/dev/null | tr -d '\\r' | sed -ne '/Windows\\\\v/s/.*\\\\//p') ; do\n  debug \"Analysing SDK key $SDK_ROOT\\\\$i\"\n  INSTALL_DIR=$(reg_string \"$SDK_ROOT\\\\$i\" InstallationFolder)\n  if [[ -n $INSTALL_DIR ]] ; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 21,
                  "endLine": 563,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n        unset ENV_ARCH\n",
                    "rendered": {
                      "text": "    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n        unset ENV_ARCH\n",
                      "markdown": "`    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n        unset ENV_ARCH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 21,
                  "endLine": 562,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n",
                    "rendered": {
                      "text": "    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n",
                      "markdown": "`    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n      ENV_LIB=$(env | sed -ne 's/^\\(LIB\\)=.*/\\1/pi')\n      if [[ -z $ENV_INC || -z $ENV_LIB ]] ; then\n        warning \"Microsoft C Compiler Include and/or Lib not set - Environment C compiler ($ENV_ARCH) excluded\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 17,
                  "endLine": 559,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n",
                    "rendered": {
                      "text": "    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n",
                      "markdown": "`    # sensitive (at the kernel level) but not at the user level! To compound the misery is that SDKs\n    # use Include and Lib where vcvars32 tends to use INCLUDE and LIB. Windows versions also contain\n    # a mix of Path and PATH, but fortunately Cygwin normalises that to PATH for us! For this\n    # reason, use env to determine the actual case of the LIB and INCLUDE variables.\n    if [[ -n ${ENV_ARCH+x} ]] ; then\n      RET=0\n      ENV_INC=$(env | sed -ne 's/^\\(INCLUDE\\)=.*/\\1/pi')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 24,
                  "endLine": 543,
                  "endColumn": 30,
                  "snippet": {
                    "text": "if [[ $SCAN_ENV -eq 1 ]] ; then\n  if \"$WHICH\" cl >/dev/null 2>&1 ; then\n    # Determine its architecture from the Microsoft Logo line.\n    ENV_ARCH=$(cl 2>&1 | head -1 | tr -d '\\r')\n    case \"${ENV_ARCH#* for }\" in\n      x64|AMD64)\n        ENV_ARCH=x64;;\n",
                    "rendered": {
                      "text": "if [[ $SCAN_ENV -eq 1 ]] ; then\n  if \"$WHICH\" cl >/dev/null 2>&1 ; then\n    # Determine its architecture from the Microsoft Logo line.\n    ENV_ARCH=$(cl 2>&1 | head -1 | tr -d '\\r')\n    case \"${ENV_ARCH#* for }\" in\n      x64|AMD64)\n        ENV_ARCH=x64;;\n",
                      "markdown": "`if [[ $SCAN_ENV -eq 1 ]] ; then\n  if \"$WHICH\" cl >/dev/null 2>&1 ; then\n    # Determine its architecture from the Microsoft Logo line.\n    ENV_ARCH=$(cl 2>&1 | head -1 | tr -d '\\r')\n    case \"${ENV_ARCH#* for }\" in\n      x64|AMD64)\n        ENV_ARCH=x64;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 511,
                  "startColumn": 63,
                  "endLine": 512,
                  "snippet": {
                    "text": "# hijacked here as part of MSVS_PREFERENCE validation.\n# Ultimately, it contains a copy of the value from COMPILERS with the following extra keys:\n#   IS_EXPRESS - (VS only) indicates whether the Express edition was located\n#   SETENV     - (SDK only) the full location of the SetEnv.cmd script\n#   ASSEMBLER  - the name of the assembler (ml or ml64)\n#   MSVS_PATH \\\n#   MSVS_INC   > prefix values for PATH, INCLUDE and LIB determined by running the scripts.\n#   MSVS_LIB  /\n",
                    "rendered": {
                      "text": "# hijacked here as part of MSVS_PREFERENCE validation.\n# Ultimately, it contains a copy of the value from COMPILERS with the following extra keys:\n#   IS_EXPRESS - (VS only) indicates whether the Express edition was located\n#   SETENV     - (SDK only) the full location of the SetEnv.cmd script\n#   ASSEMBLER  - the name of the assembler (ml or ml64)\n#   MSVS_PATH \\\n#   MSVS_INC   > prefix values for PATH, INCLUDE and LIB determined by running the scripts.\n#   MSVS_LIB  /\n",
                      "markdown": "`# hijacked here as part of MSVS_PREFERENCE validation.\n# Ultimately, it contains a copy of the value from COMPILERS with the following extra keys:\n#   IS_EXPRESS - (VS only) indicates whether the Express edition was located\n#   SETENV     - (SDK only) the full location of the SetEnv.cmd script\n#   ASSEMBLER  - the name of the assembler (ml or ml64)\n#   MSVS_PATH \\\n#   MSVS_INC   > prefix values for PATH, INCLUDE and LIB determined by running the scripts.\n#   MSVS_LIB  /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 31,
                  "endLine": 412,
                  "endColumn": 39,
                  "snippet": {
                    "text": " ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n#                    contains another eval'd associative array allowing alternate values to be given\n#   SETENV_RELEASE - (SDK only) script switch necessary to select release than debugging versions\n#   EXPRESS        - (VS only) the prefix to the registry key to detect the Express edition\n#   EXPRESS_ARCH   - (VS only) overrides ARCH if Express edition is detected\n#   EXPRESS_ARCH_SWITCHES - (VS only) overrides ARCH_SWITCHES if Express",
                    "rendered": {
                      "text": " ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n#                    contains another eval'd associative array allowing alternate values to be given\n#   SETENV_RELEASE - (SDK only) script switch necessary to select release than debugging versions\n#   EXPRESS        - (VS only) the prefix to the registry key to detect the Express edition\n#   EXPRESS_ARCH   - (VS only) overrides ARCH if Express edition is detected\n#   EXPRESS_ARCH_SWITCHES - (VS only) overrides ARCH_SWITCHES if Express",
                      "markdown": "` ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n#                    contains another eval'd associative array allowing alternate values to be given\n#   SETENV_RELEASE - (SDK only) script switch necessary to select release than debugging versions\n#   EXPRESS        - (VS only) the prefix to the registry key to detect the Express edition\n#   EXPRESS_ARCH   - (VS only) overrides ARCH if Express edition is detected\n#   EXPRESS_ARCH_SWITCHES - (VS only) overrides ARCH_SWITCHES if Express`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 24,
                  "endLine": 410,
                  "endColumn": 32,
                  "snippet": {
                    "text": "         - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n#   ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n#                    contains another eval'd associative array allowing alternate values to be given\n#   SETENV_RELEASE - (SDK only) script switch necessary to select release than debugging versions\n#   EXPRESS        - (VS only) th",
                    "rendered": {
                      "text": "         - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n#   ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n#                    contains another eval'd associative array allowing alternate values to be given\n#   SETENV_RELEASE - (SDK only) script switch necessary to select release than debugging versions\n#   EXPRESS        - (VS only) th",
                      "markdown": "`         - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n#   ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n#                    contains another eval'd associative array allowing alternate values to be given\n#   SETENV_RELEASE - (SDK only) script switch necessary to select release than debugging versions\n#   EXPRESS        - (VS only) th`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 3,
                  "endLine": 407,
                  "endColumn": 8,
                  "snippet": {
                    "text": "# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n#   ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n",
                    "rendered": {
                      "text": "# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n#   ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n",
                      "markdown": "`# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n#   ARCH           - Lists the architectures available in this version\n#   ARCH_SWITCHES  - The script is assumed to accept x86 and x64 to indicate architecture. This key\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 89,
                  "endLine": 405,
                  "snippet": {
                    "text": "ows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n# ",
                    "rendered": {
                      "text": "ows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n# ",
                      "markdown": "`ows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n#   ENV            - (VS only) the version-specific portion of the VSCOMNTOOLS environment variable\n#   VERSION        - (VS only) version number of the package\n# `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 41,
                  "endLine": 403,
                  "endColumn": 49,
                  "snippet": {
                    "text": "# Known compiler packages. Visual Studio .NET 2002 onwards. Detection is in place for Visual Studio\n# 2005 Express, but because it doesn't include a Windows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n",
                    "rendered": {
                      "text": "# Known compiler packages. Visual Studio .NET 2002 onwards. Detection is in place for Visual Studio\n# 2005 Express, but because it doesn't include a Windows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n",
                      "markdown": "`# Known compiler packages. Visual Studio .NET 2002 onwards. Detection is in place for Visual Studio\n# 2005 Express, but because it doesn't include a Windows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n#   NAME           - the friendly name of the package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 1,
                  "endLine": 402,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# Known compiler packages. Visual Studio .NET 2002 onwards. Detection is in place for Visual Studio\n# 2005 Express, but because it doesn't include a Windows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n",
                    "rendered": {
                      "text": "\n# Known compiler packages. Visual Studio .NET 2002 onwards. Detection is in place for Visual Studio\n# 2005 Express, but because it doesn't include a Windows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n",
                      "markdown": "`\n# Known compiler packages. Visual Studio .NET 2002 onwards. Detection is in place for Visual Studio\n# 2005 Express, but because it doesn't include a Windows SDK, it can only ever be detected if the\n# script has been launched from within a Platform SDK command prompt (this provides the Windows\n# Headers and Libraries which allows this script to detect the rest).\n# Each element is either a Visual Studio or SDK package and the value is the syntax for a bash\n# associative array to be eval'd. Each of these contains the following properties:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 12,
                  "endLine": 215,
                  "endColumn": 18,
                  "snippet": {
                    "text": "fi\n\n# Parse command-line. At the moment, the short option which usefully combines with anything is -d,\n# so for the time being, combining short options is not permitted, as the loop becomes even less\n# clear with getopts. GNU getopt isn't installed by default on Cygwin...\nif [[ $@ != \"\" ]] ; then\n  while true ; do\n",
                    "rendered": {
                      "text": "fi\n\n# Parse command-line. At the moment, the short option which usefully combines with anything is -d,\n# so for the time being, combining short options is not permitted, as the loop becomes even less\n# clear with getopts. GNU getopt isn't installed by default on Cygwin...\nif [[ $@ != \"\" ]] ; then\n  while true ; do\n",
                      "markdown": "`fi\n\n# Parse command-line. At the moment, the short option which usefully combines with anything is -d,\n# so for the time being, combining short options is not permitted, as the loop becomes even less\n# clear with getopts. GNU getopt isn't installed by default on Cygwin...\nif [[ $@ != \"\" ]] ; then\n  while true ; do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 54,
                  "endLine": 66,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# As reg_string, but without WOW64 redirection (i.e. guaranteed access to 64-bit registry)\nreg64_string ()\n{\n  $REG64 query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# find_in list file\n",
                    "rendered": {
                      "text": "# As reg_string, but without WOW64 redirection (i.e. guaranteed access to 64-bit registry)\nreg64_string ()\n{\n  $REG64 query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# find_in list file\n",
                      "markdown": "`# As reg_string, but without WOW64 redirection (i.e. guaranteed access to 64-bit registry)\nreg64_string ()\n{\n  $REG64 query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# find_in list file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 51,
                  "endLine": 59,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# Retrieves a REG_SZ value from the registry (redirected on WOW64)\nreg_string ()\n{\n  reg query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# reg64_string key value\n",
                    "rendered": {
                      "text": "# Retrieves a REG_SZ value from the registry (redirected on WOW64)\nreg_string ()\n{\n  reg query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# reg64_string key value\n",
                      "markdown": "`# Retrieves a REG_SZ value from the registry (redirected on WOW64)\nreg_string ()\n{\n  reg query \"$1\" /v \"$2\" 2>/dev/null | tr -d '\\r' | sed -ne \"s/ *$2 *REG_SZ *//p\"\n}\n\n# reg64_string key value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 44,
                  "endLine": 5,
                  "endColumn": 52,
                  "snippet": {
                    "text": "################################################### #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n# ################################################################################################ #\n# Copyright (c) 2016, 2017, 2018, 2019, 2020 MetaStack Solutions Ltd.                              #\n# ###############################################",
                    "rendered": {
                      "text": "################################################### #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n# ################################################################################################ #\n# Copyright (c) 2016, 2017, 2018, 2019, 2020 MetaStack Solutions Ltd.                              #\n# ###############################################",
                      "markdown": "`################################################### #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n# ################################################################################################ #\n# Copyright (c) 2016, 2017, 2018, 2019, 2020 MetaStack Solutions Ltd.                              #\n# ###############################################`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/msvs-detect"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n# ################################################################################################ #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n# ################################################################################################ #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n",
                      "markdown": "`#!/usr/bin/env bash\n# ################################################################################################ #\n# MetaStack Solutions Ltd.                                                                         #\n# ################################################################################################ #\n# Microsoft C Compiler Environment Detection Script                                                #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 34,
                  "endLine": 337,
                  "endColumn": 38,
                  "snippet": {
                    "text": "if test -f \"$cofile\"; then\n  test \"$cofile\" = \"$ofile\" || mv \"$cofile\" \"$ofile\"\nelif test -f \"${cofile}bj\"; then\n  test \"${cofile}bj\" = \"$ofile\" || mv \"${cofile}bj\" \"$ofile\"\nfi\n\nrmdir \"$lockdir\"\n",
                    "rendered": {
                      "text": "if test -f \"$cofile\"; then\n  test \"$cofile\" = \"$ofile\" || mv \"$cofile\" \"$ofile\"\nelif test -f \"${cofile}bj\"; then\n  test \"${cofile}bj\" = \"$ofile\" || mv \"${cofile}bj\" \"$ofile\"\nfi\n\nrmdir \"$lockdir\"\n",
                      "markdown": "`if test -f \"$cofile\"; then\n  test \"$cofile\" = \"$ofile\" || mv \"$cofile\" \"$ofile\"\nelif test -f \"${cofile}bj\"; then\n  test \"${cofile}bj\" = \"$ofile\" || mv \"${cofile}bj\" \"$ofile\"\nfi\n\nrmdir \"$lockdir\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 30,
                  "endLine": 335,
                  "endColumn": 34,
                  "snippet": {
                    "text": "ret=$?\n\nif test -f \"$cofile\"; then\n  test \"$cofile\" = \"$ofile\" || mv \"$cofile\" \"$ofile\"\nelif test -f \"${cofile}bj\"; then\n  test \"${cofile}bj\" = \"$ofile\" || mv \"${cofile}bj\" \"$ofile\"\nfi\n",
                    "rendered": {
                      "text": "ret=$?\n\nif test -f \"$cofile\"; then\n  test \"$cofile\" = \"$ofile\" || mv \"$cofile\" \"$ofile\"\nelif test -f \"${cofile}bj\"; then\n  test \"${cofile}bj\" = \"$ofile\" || mv \"${cofile}bj\" \"$ofile\"\nfi\n",
                      "markdown": "`ret=$?\n\nif test -f \"$cofile\"; then\n  test \"$cofile\" = \"$ofile\" || mv \"$cofile\" \"$ofile\"\nelif test -f \"${cofile}bj\"; then\n  test \"${cofile}bj\" = \"$ofile\" || mv \"${cofile}bj\" \"$ofile\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 25,
                  "endLine": 320,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# Note: use '[/\\\\:.-]' here to ensure that we don't use the same name\n# that we are using for the .o file.  Also, base the name on the expected\n# object file name, since that is what matters with a parallel build.\nlockdir=`echo \"$cofile\" | sed -e 's|[/\\\\:.-]|_|g'`.d\nwhile true; do\n  if mkdir \"$lockdir\" >/dev/null 2>&1; then\n    break\n",
                    "rendered": {
                      "text": "# Note: use '[/\\\\:.-]' here to ensure that we don't use the same name\n# that we are using for the .o file.  Also, base the name on the expected\n# object file name, since that is what matters with a parallel build.\nlockdir=`echo \"$cofile\" | sed -e 's|[/\\\\:.-]|_|g'`.d\nwhile true; do\n  if mkdir \"$lockdir\" >/dev/null 2>&1; then\n    break\n",
                      "markdown": "`# Note: use '[/\\\\:.-]' here to ensure that we don't use the same name\n# that we are using for the .o file.  Also, base the name on the expected\n# object file name, since that is what matters with a parallel build.\nlockdir=`echo \"$cofile\" | sed -e 's|[/\\\\:.-]|_|g'`.d\nwhile true; do\n  if mkdir \"$lockdir\" >/dev/null 2>&1; then\n    break\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 23,
                  "endLine": 314,
                  "endColumn": 28,
                  "snippet": {
                    "text": "fi\n\n# Name of file we expect compiler to create.\ncofile=`echo \"$cfile\" | sed 's|^.*[\\\\/]||; s|^[a-zA-Z]:||; s/\\.c$/.o/'`\n\n# Create the lock directory.\n# Note: use '[/\\\\:.-]' here to ensure that we don't use the same name\n",
                    "rendered": {
                      "text": "fi\n\n# Name of file we expect compiler to create.\ncofile=`echo \"$cfile\" | sed 's|^.*[\\\\/]||; s|^[a-zA-Z]:||; s/\\.c$/.o/'`\n\n# Create the lock directory.\n# Note: use '[/\\\\:.-]' here to ensure that we don't use the same name\n",
                      "markdown": "`fi\n\n# Name of file we expect compiler to create.\ncofile=`echo \"$cfile\" | sed 's|^.*[\\\\/]||; s|^[a-zA-Z]:||; s/\\.c$/.o/'`\n\n# Create the lock directory.\n# Note: use '[/\\\\:.-]' here to ensure that we don't use the same name\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 17,
                  "endLine": 313,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  exec \"$@\"\nfi\n\n# Name of file we expect compiler to create.\ncofile=`echo \"$cfile\" | sed 's|^.*[\\\\/]||; s|^[a-zA-Z]:||; s/\\.c$/.o/'`\n\n# Create the lock directory.\n",
                    "rendered": {
                      "text": "  exec \"$@\"\nfi\n\n# Name of file we expect compiler to create.\ncofile=`echo \"$cfile\" | sed 's|^.*[\\\\/]||; s|^[a-zA-Z]:||; s/\\.c$/.o/'`\n\n# Create the lock directory.\n",
                      "markdown": "`  exec \"$@\"\nfi\n\n# Name of file we expect compiler to create.\ncofile=`echo \"$cfile\" | sed 's|^.*[\\\\/]||; s|^[a-zA-Z]:||; s/\\.c$/.o/'`\n\n# Create the lock directory.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 5,
                  "endLine": 251,
                  "endColumn": 13,
                  "snippet": {
                    "text": "arguments, and rename the output as expected.\n\nIf you are trying to build a whole package this is not the\nright script to run: please start by reading the file 'INSTALL'.\n\nReport bugs to <bug-automake@gnu.org>.\nEOF\n",
                    "rendered": {
                      "text": "arguments, and rename the output as expected.\n\nIf you are trying to build a whole package this is not the\nright script to run: please start by reading the file 'INSTALL'.\n\nReport bugs to <bug-automake@gnu.org>.\nEOF\n",
                      "markdown": "`arguments, and rename the output as expected.\n\nIf you are trying to build a whole package this is not the\nright script to run: please start by reading the file 'INSTALL'.\n\nReport bugs to <bug-automake@gnu.org>.\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 3,
                  "endLine": 243,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     exit 1;\n     ;;\n  -h | --h*)\n    cat <<\\EOF\nUsage: compile [--help] [--version] PROGRAM [ARGS]\n\nWrapper for compilers which do not understand '-c -o'.\n",
                    "rendered": {
                      "text": "     exit 1;\n     ;;\n  -h | --h*)\n    cat <<\\EOF\nUsage: compile [--help] [--version] PROGRAM [ARGS]\n\nWrapper for compilers which do not understand '-c -o'.\n",
                      "markdown": "`     exit 1;\n     ;;\n  -h | --h*)\n    cat <<\\EOF\nUsage: compile [--help] [--version] PROGRAM [ARGS]\n\nWrapper for compilers which do not understand '-c -o'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 32,
                  "endLine": 68,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t*,$file_conv,*)\n\t  ;;\n\tmingw/*)\n\t  file=`cmd //C echo \"$file \" | sed -e 's/\"\\(.*\\) \" *$/\\1/'`\n\t  ;;\n\tcygwin/*)\n\t  file=`cygpath -m \"$file\" || echo \"$file\"`\n",
                    "rendered": {
                      "text": "\t*,$file_conv,*)\n\t  ;;\n\tmingw/*)\n\t  file=`cmd //C echo \"$file \" | sed -e 's/\"\\(.*\\) \" *$/\\1/'`\n\t  ;;\n\tcygwin/*)\n\t  file=`cygpath -m \"$file\" || echo \"$file\"`\n",
                      "markdown": "`\t*,$file_conv,*)\n\t  ;;\n\tmingw/*)\n\t  file=`cmd //C echo \"$file \" | sed -e 's/\"\\(.*\\) \" *$/\\1/'`\n\t  ;;\n\tcygwin/*)\n\t  file=`cygpath -m \"$file\" || echo \"$file\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/compile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 24,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n",
                    "rendered": {
                      "text": "\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n",
                      "markdown": "`\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/powerpc-eabisim.exp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                    "rendered": {
                      "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                      "markdown": "`set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/m32r-sim.exp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                    "rendered": {
                      "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                      "markdown": "`set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/promotion.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 37,
                  "endLine": 54,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t  {\n\t    ul++;\n\t    ffi_call(&cif, FFI_FN(promotion), &rint, values);\n\t    CHECK((int)rint == (signed char) sc + (signed short) ss +\n\t\t  (unsigned char) uc + (unsigned short) us);\n\t  }\n  printf(\"%lu promotion tests run\\n\", ul);\n",
                    "rendered": {
                      "text": "\t  {\n\t    ul++;\n\t    ffi_call(&cif, FFI_FN(promotion), &rint, values);\n\t    CHECK((int)rint == (signed char) sc + (signed short) ss +\n\t\t  (unsigned char) uc + (unsigned short) us);\n\t  }\n  printf(\"%lu promotion tests run\\n\", ul);\n",
                      "markdown": "`\t  {\n\t    ul++;\n\t    ffi_call(&cif, FFI_FN(promotion), &rint, values);\n\t    CHECK((int)rint == (signed char) sc + (signed short) ss +\n\t\t  (unsigned char) uc + (unsigned short) us);\n\t  }\n  printf(\"%lu promotion tests run\\n\", ul);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/promotion.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 31,
                  "endLine": 46,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n    for (ss = -30000; ss <= 30000; ss += 10000)\n      for (uc = (unsigned char) 0;\n\t   uc <= (unsigned char) 200; uc += 20)\n",
                    "rendered": {
                      "text": "  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n    for (ss = -30000; ss <= 30000; ss += 10000)\n      for (uc = (unsigned char) 0;\n\t   uc <= (unsigned char) 200; uc += 20)\n",
                      "markdown": "`  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n    for (ss = -30000; ss <= 30000; ss += 10000)\n      for (uc = (unsigned char) 0;\n\t   uc <= (unsigned char) 200; uc += 20)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/promotion.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n    for (ss = -30000; ss <= 30000; ss += 10000)\n      for (uc = (unsigned char) 0;\n\t   uc <= (unsigned char) 200; uc += 20)\n",
                    "rendered": {
                      "text": "  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n    for (ss = -30000; ss <= 30000; ss += 10000)\n      for (uc = (unsigned char) 0;\n\t   uc <= (unsigned char) 200; uc += 20)\n",
                      "markdown": "`  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n    for (ss = -30000; ss <= 30000; ss += 10000)\n      for (uc = (unsigned char) 0;\n\t   uc <= (unsigned char) 200; uc += 20)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/promotion.c"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 15,
                  "endLine": 12,
                  "endColumn": 19,
                  "snippet": {
                    "text": "static int promotion(signed char sc, signed short ss,\n\t\t     unsigned char uc, unsigned short us)\n{\n  int r = (int) sc + (int) ss + (int) uc + (int) us;\n\n  return r;\n}\n",
                    "rendered": {
                      "text": "static int promotion(signed char sc, signed short ss,\n\t\t     unsigned char uc, unsigned short us)\n{\n  int r = (int) sc + (int) ss + (int) uc + (int) us;\n\n  return r;\n}\n",
                      "markdown": "`static int promotion(signed char sc, signed short ss,\n\t\t     unsigned char uc, unsigned short us)\n{\n  int r = (int) sc + (int) ss + (int) uc + (int) us;\n\n  return r;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/promotion.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t     &ffi_type_sint, args) == FFI_OK);\n\n  us = 0;\n  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n",
                    "rendered": {
                      "text": "\t\t     &ffi_type_sint, args) == FFI_OK);\n\n  us = 0;\n  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n",
                      "markdown": "`\t\t     &ffi_type_sint, args) == FFI_OK);\n\n  us = 0;\n  ul = 0;\n\n  for (sc = (signed char) -127;\n       sc <= (signed char) 120; sc += 1)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64_closure.S"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 40,
                  "endLine": 161,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n# ifdef __VEC__\n\t# load up the pointer to the saved vector registers\n\t# 8 bytes padding for 16-byte alignment at -112(%r1)\n\taddi\t%r9, %r8, -24\n\tstvx\t%v13, 0, %r9\n\taddi\t%r9, %r9, -16\n",
                    "rendered": {
                      "text": "\n# ifdef __VEC__\n\t# load up the pointer to the saved vector registers\n\t# 8 bytes padding for 16-byte alignment at -112(%r1)\n\taddi\t%r9, %r8, -24\n\tstvx\t%v13, 0, %r9\n\taddi\t%r9, %r9, -16\n",
                      "markdown": "`\n# ifdef __VEC__\n\t# load up the pointer to the saved vector registers\n\t# 8 bytes padding for 16-byte alignment at -112(%r1)\n\taddi\t%r9, %r8, -24\n\tstvx\t%v13, 0, %r9\n\taddi\t%r9, %r9, -16\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64_closure.S"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 19,
                  "endLine": 80,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#  define PARMSAVE 32\n#  define RETVAL PARMSAVE+64\n# else\n#  48 bytes special reg save area + 64 bytes parm save area\n#  + 16 bytes retval area + 13*8 bytes fpr save area + round to 16\n#  define STACKFRAME 240\n#  define PARMSAVE 48\n",
                    "rendered": {
                      "text": "#  define PARMSAVE 32\n#  define RETVAL PARMSAVE+64\n# else\n#  48 bytes special reg save area + 64 bytes parm save area\n#  + 16 bytes retval area + 13*8 bytes fpr save area + round to 16\n#  define STACKFRAME 240\n#  define PARMSAVE 48\n",
                      "markdown": "`#  define PARMSAVE 32\n#  define RETVAL PARMSAVE+64\n# else\n#  48 bytes special reg save area + 64 bytes parm save area\n#  + 16 bytes retval area + 13*8 bytes fpr save area + round to 16\n#  define STACKFRAME 240\n#  define PARMSAVE 48\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64_closure.S"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 19,
                  "endLine": 73,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#   + 128 byte retval area + 13*8 fpr save area + 12*16 vec save area + round to 16\n#   define STACKFRAME 528\n#  else\n#   32 byte special reg save area + 64 byte parm save area\n#   + 64 byte retval area + 13*8 fpr save area + round to 16\n#   define STACKFRAME 272\n#  endif\n",
                    "rendered": {
                      "text": "#   + 128 byte retval area + 13*8 fpr save area + 12*16 vec save area + round to 16\n#   define STACKFRAME 528\n#  else\n#   32 byte special reg save area + 64 byte parm save area\n#   + 64 byte retval area + 13*8 fpr save area + round to 16\n#   define STACKFRAME 272\n#  endif\n",
                      "markdown": "`#   + 128 byte retval area + 13*8 fpr save area + 12*16 vec save area + round to 16\n#   define STACKFRAME 528\n#  else\n#   32 byte special reg save area + 64 byte parm save area\n#   + 64 byte retval area + 13*8 fpr save area + round to 16\n#   define STACKFRAME 272\n#  endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64_closure.S"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 19,
                  "endLine": 69,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n# if _CALL_ELF == 2\n#  ifdef __VEC__\n#   32 byte special reg save area + 64 byte parm save area\n#   + 128 byte retval area + 13*8 fpr save area + 12*16 vec save area + round to 16\n#   define STACKFRAME 528\n#  else\n",
                    "rendered": {
                      "text": "\n# if _CALL_ELF == 2\n#  ifdef __VEC__\n#   32 byte special reg save area + 64 byte parm save area\n#   + 128 byte retval area + 13*8 fpr save area + 12*16 vec save area + round to 16\n#   define STACKFRAME 528\n#  else\n",
                      "markdown": "`\n# if _CALL_ELF == 2\n#  ifdef __VEC__\n#   32 byte special reg save area + 64 byte parm save area\n#   + 128 byte retval area + 13*8 fpr save area + 12*16 vec save area + round to 16\n#   define STACKFRAME 528\n#  else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/linux64_closure.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 23,
                  "endLine": 3,
                  "endColumn": 28,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC64 Assembly glue.\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC64 Assembly glue.\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC64 Assembly glue.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/ppc_closure.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 23,
                  "endLine": 3,
                  "endColumn": 28,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC Assembly glue.\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC Assembly glue.\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.h - Copyright (c) 2003 Jakub Jelinek <jakub@redhat.com>\n\t    Copyright (c) 2008 Red Hat, Inc.\n\n   PowerPC Assembly glue.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/tile/tile.S"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 23,
                  "endLine": 356,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        { info 2+8 /* for backtracer: -> pc in lr, frame size 0 */ ; jr r10 }\n#else\n        /* 'jal .' yields a PC-relative offset of zero so we can OR in the\n           right offset at runtime. */\n        { move r10, lr ; jal . /* ffi_closure_tile */ }\n#endif\n\n",
                    "rendered": {
                      "text": "        { info 2+8 /* for backtracer: -> pc in lr, frame size 0 */ ; jr r10 }\n#else\n        /* 'jal .' yields a PC-relative offset of zero so we can OR in the\n           right offset at runtime. */\n        { move r10, lr ; jal . /* ffi_closure_tile */ }\n#endif\n\n",
                      "markdown": "`        { info 2+8 /* for backtracer: -> pc in lr, frame size 0 */ ; jr r10 }\n#else\n        /* 'jal .' yields a PC-relative offset of zero so we can OR in the\n           right offset at runtime. */\n        { move r10, lr ; jal . /* ffi_closure_tile */ }\n#endif\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/tile/tile.S"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 38,
                  "endLine": 338,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n/* What follows are code template instructions that get copied to the\n   closure trampoline by ffi_prep_closure_loc.  The zeroed operands\n   get replaced by their proper values at runtime. */\n\n        .section .text.ffi_template_tramp_tile, \"ax\", @progbits\n        .align  8\n",
                    "rendered": {
                      "text": "\n/* What follows are code template instructions that get copied to the\n   closure trampoline by ffi_prep_closure_loc.  The zeroed operands\n   get replaced by their proper values at runtime. */\n\n        .section .text.ffi_template_tramp_tile, \"ax\", @progbits\n        .align  8\n",
                      "markdown": "`\n/* What follows are code template instructions that get copied to the\n   closure trampoline by ffi_prep_closure_loc.  The zeroed operands\n   get replaced by their proper values at runtime. */\n\n        .section .text.ffi_template_tramp_tile, \"ax\", @progbits\n        .align  8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/tile/tile.S"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 20,
                  "endLine": 206,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n#define STORE_REG(REG, PTR) \\\n        { \\\n         SW     PTR, REG ; \\\n         addi   PTR, PTR, REG_SIZE \\\n        }\n\n",
                    "rendered": {
                      "text": "\n#define STORE_REG(REG, PTR) \\\n        { \\\n         SW     PTR, REG ; \\\n         addi   PTR, PTR, REG_SIZE \\\n        }\n\n",
                      "markdown": "`\n#define STORE_REG(REG, PTR) \\\n        { \\\n         SW     PTR, REG ; \\\n         addi   PTR, PTR, REG_SIZE \\\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/mips/n32.S"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 11,
                  "endLine": 78,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tREG_S\tfn,    5*FFI_SIZEOF_ARG($fp) # fn\n\tREG_S\tclosure, 6*FFI_SIZEOF_ARG($fp) # closure\n\n\t# Allocate at least 4 words in the argstack\n\tmove\tv0, bytes\n\tbge\tbytes, 4 * FFI_SIZEOF_ARG, bigger\t\n\tLI\tv0, 4 * FFI_SIZEOF_ARG\n",
                    "rendered": {
                      "text": "\tREG_S\tfn,    5*FFI_SIZEOF_ARG($fp) # fn\n\tREG_S\tclosure, 6*FFI_SIZEOF_ARG($fp) # closure\n\n\t# Allocate at least 4 words in the argstack\n\tmove\tv0, bytes\n\tbge\tbytes, 4 * FFI_SIZEOF_ARG, bigger\t\n\tLI\tv0, 4 * FFI_SIZEOF_ARG\n",
                      "markdown": "`\tREG_S\tfn,    5*FFI_SIZEOF_ARG($fp) # fn\n\tREG_S\tclosure, 6*FFI_SIZEOF_ARG($fp) # closure\n\n\t# Allocate at least 4 words in the argstack\n\tmove\tv0, bytes\n\tbge\tbytes, 4 * FFI_SIZEOF_ARG, bigger\t\n\tLI\tv0, 4 * FFI_SIZEOF_ARG\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/mips/n32.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 60,
                  "endLine": 2,
                  "endColumn": 65,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   n32.S - Copyright (c) 1996, 1998, 2005, 2007, 2009, 2010  Red Hat, Inc.\n   \n   MIPS Foreign Function Interface \n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   n32.S - Copyright (c) 1996, 1998, 2005, 2007, 2009, 2010  Red Hat, Inc.\n   \n   MIPS Foreign Function Interface \n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   n32.S - Copyright (c) 1996, 1998, 2005, 2007, 2009, 2010  Red Hat, Inc.\n   \n   MIPS Foreign Function Interface \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/ffi64.c"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 35,
                  "endLine": 199,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t  break;\n\n\tcase FFI_TYPE_DOUBLE:\n\t  debug(3, \"Storing UINT64(double) at slot %u\\n\", slot);\n\t  *(UINT64 *)(stack + slot) = *(UINT64 *)(*p_argv);\n\t  switch (slot - FIRST_ARG_SLOT)\n\t    {\n",
                    "rendered": {
                      "text": "\t  break;\n\n\tcase FFI_TYPE_DOUBLE:\n\t  debug(3, \"Storing UINT64(double) at slot %u\\n\", slot);\n\t  *(UINT64 *)(stack + slot) = *(UINT64 *)(*p_argv);\n\t  switch (slot - FIRST_ARG_SLOT)\n\t    {\n",
                      "markdown": "`\t  break;\n\n\tcase FFI_TYPE_DOUBLE:\n\t  debug(3, \"Storing UINT64(double) at slot %u\\n\", slot);\n\t  *(UINT64 *)(stack + slot) = *(UINT64 *)(*p_argv);\n\t  switch (slot - FIRST_ARG_SLOT)\n\t    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/linux.S"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 54,
                  "endLine": 383,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t.word   .LCFI11-.LFB1\n\t.byte\t0x83\t;# DW_CFA_offset, column 0x3\n\t.uleb128 0x0\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf; save r2 at [r30-20]\n\t.uleb128 0x2\n\t.sleb128 -5\n\n",
                    "rendered": {
                      "text": "\t.word   .LCFI11-.LFB1\n\t.byte\t0x83\t;# DW_CFA_offset, column 0x3\n\t.uleb128 0x0\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf; save r2 at [r30-20]\n\t.uleb128 0x2\n\t.sleb128 -5\n\n",
                      "markdown": "`\t.word   .LCFI11-.LFB1\n\t.byte\t0x83\t;# DW_CFA_offset, column 0x3\n\t.uleb128 0x0\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf; save r2 at [r30-20]\n\t.uleb128 0x2\n\t.sleb128 -5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/linux.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 14,
                  "endLine": 3,
                  "endColumn": 19,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   linux.S - (c) 2003-2004 Randolph Chung <tausq@debian.org>\n\t     (c) 2008 Red Hat, Inc.\n\n   HPPA Foreign Function Interface\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   linux.S - (c) 2003-2004 Randolph Chung <tausq@debian.org>\n\t     (c) 2008 Red Hat, Inc.\n\n   HPPA Foreign Function Interface\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   linux.S - (c) 2003-2004 Randolph Chung <tausq@debian.org>\n\t     (c) 2008 Red Hat, Inc.\n\n   HPPA Foreign Function Interface\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 29,
                  "endLine": 492,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n",
                    "rendered": {
                      "text": "\t;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n",
                      "markdown": "`\t;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 60,
                  "endLine": 40,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n",
                    "rendered": {
                      "text": "# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n",
                      "markdown": "`# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1775,
                  "startColumn": 2,
                  "endLine": 1775,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\nif test \"$script_age\" -lt 3 ; then\n   cat >&2 <<EOF\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\n",
                    "rendered": {
                      "text": "# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\nif test \"$script_age\" -lt 3 ; then\n   cat >&2 <<EOF\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\n",
                      "markdown": "`# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\nif test \"$script_age\" -lt 3 ; then\n   cat >&2 <<EOF\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1770,
                  "startColumn": 27,
                  "endLine": 1770,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\nEOF\n\nour_year=`echo $timestamp | sed 's,-.*,,'`\nthisyear=`date +%Y`\n# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\n",
                    "rendered": {
                      "text": "  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\nEOF\n\nour_year=`echo $timestamp | sed 's,-.*,,'`\nthisyear=`date +%Y`\n# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\n",
                      "markdown": "`  https://git.savannah.gnu.org/cgit/config.git/plain/config.sub\nEOF\n\nour_year=`echo $timestamp | sed 's,-.*,,'`\nthisyear=`date +%Y`\n# shellcheck disable=SC2003\nscript_age=`expr \"$thisyear\" - \"$our_year\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1762,
                  "startColumn": 39,
                  "endLine": 1762,
                  "endColumn": 47,
                  "snippet": {
                    "text": "cat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n",
                    "rendered": {
                      "text": "cat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n",
                      "markdown": "`cat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1761,
                  "startColumn": 4,
                  "endLine": 1761,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n",
                    "rendered": {
                      "text": "\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n",
                      "markdown": "`\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1758,
                  "endLine": 1759,
                  "endColumn": 4,
                  "snippet": {
                    "text": "EOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\n",
                    "rendered": {
                      "text": "EOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\n",
                      "markdown": "`EOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1751,
                  "endLine": 1751,
                  "endColumn": 5,
                  "snippet": {
                    "text": "case $UNAME_MACHINE:$UNAME_SYSTEM in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\n",
                    "rendered": {
                      "text": "case $UNAME_MACHINE:$UNAME_SYSTEM in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\n",
                      "markdown": "`case $UNAME_MACHINE:$UNAME_SYSTEM in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1648,
                  "startColumn": 22,
                  "endLine": 1648,
                  "endColumn": 27,
                  "snippet": {
                    "text": "#define __ARCHITECTURE__ \"m68k\"\n#endif\n  int version;\n  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n  if (version < 4)\n    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n  else\n",
                    "rendered": {
                      "text": "#define __ARCHITECTURE__ \"m68k\"\n#endif\n  int version;\n  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n  if (version < 4)\n    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n  else\n",
                      "markdown": "`#define __ARCHITECTURE__ \"m68k\"\n#endif\n  int version;\n  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n  if (version < 4)\n    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n  else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1610,
                  "startColumn": 16,
                  "endLine": 1611,
                  "endColumn": 4,
                  "snippet": {
                    "text": "fi\n\n# No uname command or uname output not recognized.\nset_cc_for_build\ncat > \"$dummy.c\" <<EOF\n#ifdef _SEQUENT_\n#include <sys/types.h>\n#include <sys/utsname.h>\n",
                    "rendered": {
                      "text": "fi\n\n# No uname command or uname output not recognized.\nset_cc_for_build\ncat > \"$dummy.c\" <<EOF\n#ifdef _SEQUENT_\n#include <sys/types.h>\n#include <sys/utsname.h>\n",
                      "markdown": "`fi\n\n# No uname command or uname output not recognized.\nset_cc_for_build\ncat > \"$dummy.c\" <<EOF\n#ifdef _SEQUENT_\n#include <sys/types.h>\n#include <sys/utsname.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1577,
                  "startColumn": 35,
                  "endLine": 1577,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tGUESS=i386-pc-xenix\n\t;;\n    i*86:skyos:*:*)\n\tSKYOS_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\n\tGUESS=$UNAME_MACHINE-pc-skyos$SKYOS_REL\n\t;;\n    i*86:rdos:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=i386-pc-xenix\n\t;;\n    i*86:skyos:*:*)\n\tSKYOS_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\n\tGUESS=$UNAME_MACHINE-pc-skyos$SKYOS_REL\n\t;;\n    i*86:rdos:*:*)\n",
                      "markdown": "`\tGUESS=i386-pc-xenix\n\t;;\n    i*86:skyos:*:*)\n\tSKYOS_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\n\tGUESS=$UNAME_MACHINE-pc-skyos$SKYOS_REL\n\t;;\n    i*86:rdos:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1563,
                  "startColumn": 39,
                  "endLine": 1563,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tGUESS=mips-sei-seiux$UNAME_RELEASE\n\t;;\n    *:DragonFly:*:*)\n\tDRAGONFLY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-dragonfly$DRAGONFLY_REL\n\t;;\n    *:*VMS:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=mips-sei-seiux$UNAME_RELEASE\n\t;;\n    *:DragonFly:*:*)\n\tDRAGONFLY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-dragonfly$DRAGONFLY_REL\n\t;;\n    *:*VMS:*:*)\n",
                      "markdown": "`\tGUESS=mips-sei-seiux$UNAME_RELEASE\n\t;;\n    *:DragonFly:*:*)\n\tDRAGONFLY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-dragonfly$DRAGONFLY_REL\n\t;;\n    *:*VMS:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1485,
                  "startColumn": 4,
                  "endLine": 1485,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_PPC >/dev/null\n\t    then\n\t\tUNAME_PROCESSOR=powerpc\n\t    fi\n",
                    "rendered": {
                      "text": "\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_PPC >/dev/null\n\t    then\n\t\tUNAME_PROCESSOR=powerpc\n\t    fi\n",
                      "markdown": "`\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_PPC >/dev/null\n\t    then\n\t\tUNAME_PROCESSOR=powerpc\n\t    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1475,
                  "startColumn": 4,
                  "endLine": 1475,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tcase $UNAME_PROCESSOR in\n\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n",
                    "rendered": {
                      "text": "\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tcase $UNAME_PROCESSOR in\n\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n",
                      "markdown": "`\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tcase $UNAME_PROCESSOR in\n\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1338,
                  "startColumn": 28,
                  "endLine": 1338,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n",
                    "rendered": {
                      "text": "\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n",
                      "markdown": "`\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1332,
                  "startColumn": 28,
                  "endLine": 1332,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n",
                    "rendered": {
                      "text": "\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n",
                      "markdown": "`\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1327,
                  "startColumn": 28,
                  "endLine": 1327,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n",
                    "rendered": {
                      "text": "\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n",
                      "markdown": "`\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1305,
                  "startColumn": 3,
                  "endLine": 1305,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tGUESS=i860-intel-osf1\n\t;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  GUESS=i860-stardent-sysv$UNAME_RELEASE    # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  GUESS=i860-unknown-sysv$UNAME_RELEASE     # Unknown i860-SVR4\n",
                    "rendered": {
                      "text": "\tGUESS=i860-intel-osf1\n\t;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  GUESS=i860-stardent-sysv$UNAME_RELEASE    # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  GUESS=i860-unknown-sysv$UNAME_RELEASE     # Unknown i860-SVR4\n",
                      "markdown": "`\tGUESS=i860-intel-osf1\n\t;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  GUESS=i860-stardent-sysv$UNAME_RELEASE    # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  GUESS=i860-unknown-sysv$UNAME_RELEASE     # Unknown i860-SVR4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1294,
                  "startColumn": 39,
                  "endLine": 1294,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\tGUESS=i586-pc-msdosdjgpp\n\t;;\n",
                    "rendered": {
                      "text": "\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\tGUESS=i586-pc-msdosdjgpp\n\t;;\n",
                      "markdown": "`\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\tGUESS=i586-pc-msdosdjgpp\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1264,
                  "startColumn": 22,
                  "endLine": 1264,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n",
                    "rendered": {
                      "text": "\t;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n",
                      "markdown": "`\t;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1256,
                  "startColumn": 3,
                  "endLine": 1256,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv$UNAME_REL\n",
                    "rendered": {
                      "text": "\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv$UNAME_REL\n",
                      "markdown": "`\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n\t\tGUESS=$UNAME_MACHINE-pc-sysv$UNAME_REL\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1255,
                  "startColumn": 35,
                  "endLine": 1255,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE-pc-msdosdjgpp\n\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE-pc-msdosdjgpp\n\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE-pc-msdosdjgpp\n\t;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\tGUESS=$UNAME_MACHINE-univel-sysv$UNAME_REL\n\telse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1235,
                  "startColumn": 21,
                  "endLine": 1235,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION\n\t;;\n    i*86:OS/2:*:*)\n\t# If we were able to find 'uname', then EMX Unix compatibility\n\t# is probably installed.\n\tGUESS=$UNAME_MACHINE-pc-os2-emx\n\t;;\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION\n\t;;\n    i*86:OS/2:*:*)\n\t# If we were able to find 'uname', then EMX Unix compatibility\n\t# is probably installed.\n\tGUESS=$UNAME_MACHINE-pc-os2-emx\n\t;;\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE-pc-sysv4.2uw$UNAME_VERSION\n\t;;\n    i*86:OS/2:*:*)\n\t# If we were able to find 'uname', then EMX Unix compatibility\n\t# is probably installed.\n\tGUESS=$UNAME_MACHINE-pc-os2-emx\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1208,
                  "startColumn": 72,
                  "endLine": 1208,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n",
                    "rendered": {
                      "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n",
                      "markdown": "`\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1208,
                  "startColumn": 58,
                  "endLine": 1208,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n",
                    "rendered": {
                      "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n",
                      "markdown": "`\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\tx86) CPU=i686 ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1199,
                  "startColumn": 4,
                  "endLine": 1199,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __i386__\n\t    ABI=x86\n\t    #else\n",
                    "rendered": {
                      "text": "\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __i386__\n\t    ABI=x86\n\t    #else\n",
                      "markdown": "`\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __i386__\n\t    ABI=x86\n\t    #else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1154,
                  "startColumn": 54,
                  "endLine": 1154,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) GUESS=hppa1.1-unknown-linux-$LIBC ;;\n\t  PA8*) GUESS=hppa2.0-unknown-linux-$LIBC ;;\n\t  *)    GUESS=hppa-unknown-linux-$LIBC ;;\n",
                    "rendered": {
                      "text": "\t;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) GUESS=hppa1.1-unknown-linux-$LIBC ;;\n\t  PA8*) GUESS=hppa2.0-unknown-linux-$LIBC ;;\n\t  *)    GUESS=hppa-unknown-linux-$LIBC ;;\n",
                      "markdown": "`\t;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) GUESS=hppa1.1-unknown-linux-$LIBC ;;\n\t  PA8*) GUESS=hppa2.0-unknown-linux-$LIBC ;;\n\t  *)    GUESS=hppa-unknown-linux-$LIBC ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1133,
                  "startColumn": 55,
                  "endLine": 1133,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t#endif\n\t#endif\nEOF\n\tcc_set_vars=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\n\teval \"$cc_set_vars\"\n\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n\t;;\n",
                    "rendered": {
                      "text": "\t#endif\n\t#endif\nEOF\n\tcc_set_vars=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\n\teval \"$cc_set_vars\"\n\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n\t;;\n",
                      "markdown": "`\t#endif\n\t#endif\nEOF\n\tcc_set_vars=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\n\teval \"$cc_set_vars\"\n\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1093,
                  "endLine": 1093,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tset_cc_for_build\n\tIS_GLIBC=0\n\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef mips\n\t#undef mipsel\n",
                    "rendered": {
                      "text": "\tset_cc_for_build\n\tIS_GLIBC=0\n\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef mips\n\t#undef mipsel\n",
                      "markdown": "`\tset_cc_for_build\n\tIS_GLIBC=0\n\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef mips\n\t#undef mipsel\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1036,
                  "startColumn": 3,
                  "endLine": 1036,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabi\n\t    else\n",
                    "rendered": {
                      "text": "\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabi\n\t    else\n",
                      "markdown": "`\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\tGUESS=$UNAME_MACHINE-unknown-linux-${LIBC}eabi\n\t    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 6,
                  "endLine": 1031,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n",
                    "rendered": {
                      "text": "    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n",
                      "markdown": "`    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    GUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\telse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 1021,
                  "startColumn": 36,
                  "endLine": 1021,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n",
                    "rendered": {
                      "text": "\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n",
                      "markdown": "`\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\tGUESS=$UNAME_MACHINE-unknown-linux-$LIBC\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 999,
                  "startColumn": 72,
                  "endLine": 999,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n",
                    "rendered": {
                      "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n",
                      "markdown": "`\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 999,
                  "startColumn": 58,
                  "endLine": 999,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n",
                    "rendered": {
                      "text": "\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n",
                      "markdown": "`\t    #endif\n\t    #endif\nEOF\n\t    cc_set_abi=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^ABI' | sed 's, ,,g'`\n\t    eval \"$cc_set_abi\"\n\t    case $ABI in\n\t\teabi | eabihf) CPU=armv8l; LIBCABI=$LIBC$ABI ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 990,
                  "startColumn": 4,
                  "endLine": 990,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __ARM_EABI__\n\t    #ifdef __ARM_PCS_VFP\n\t    ABI=eabihf\n",
                    "rendered": {
                      "text": "\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __ARM_EABI__\n\t    #ifdef __ARM_PCS_VFP\n\t    ABI=eabihf\n",
                      "markdown": "`\tLIBCABI=$LIBC\n\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    ABI=64\n\t    sed 's/^\t    //' << EOF > \"$dummy.c\"\n\t    #ifdef __ARM_EABI__\n\t    #ifdef __ARM_PCS_VFP\n\t    ABI=eabihf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 33,
                  "endLine": 972,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)\n",
                    "rendered": {
                      "text": "    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)\n",
                      "markdown": "`    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n    x86_64:[Mm]anagarm:*:*|i?86:[Mm]anagarm:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 971,
                  "startColumn": 32,
                  "endLine": 971,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n",
                    "rendered": {
                      "text": "\t;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n",
                      "markdown": "`\t;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\tGNU_SYS=`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_MACHINE-unknown-$GNU_SYS$GNU_REL-$LIBC\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 966,
                  "startColumn": 33,
                  "endLine": 966,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n    *:GNU/*:*:*)\n",
                    "rendered": {
                      "text": "    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n    *:GNU/*:*:*)\n",
                      "markdown": "`    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n    *:GNU/*:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 965,
                  "startColumn": 34,
                  "endLine": 965,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t;;\n    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n",
                    "rendered": {
                      "text": "\t;;\n    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n",
                      "markdown": "`\t;;\n    *:GNU:*:*)\n\t# the GNU system\n\tGNU_ARCH=`echo \"$UNAME_MACHINE\" | sed -e 's,[-/].*$,,'`\n\tGNU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's,/.*$,,'`\n\tGUESS=$GNU_ARCH-unknown-$LIBC$GNU_REL\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 960,
                  "startColumn": 33,
                  "endLine": 960,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tGUESS=x86_64-pc-cygwin\n\t;;\n    prep*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=powerpcle-unknown-solaris2$SUN_REL\n\t;;\n    *:GNU:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=x86_64-pc-cygwin\n\t;;\n    prep*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=powerpcle-unknown-solaris2$SUN_REL\n\t;;\n    *:GNU:*:*)\n",
                      "markdown": "`\tGUESS=x86_64-pc-cygwin\n\t;;\n    prep*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=powerpcle-unknown-solaris2$SUN_REL\n\t;;\n    *:GNU:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 920,
                  "startColumn": 37,
                  "endLine": 920,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\tFREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL\n\t;;\n    i*:CYGWIN*:*)\n",
                    "rendered": {
                      "text": "\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\tFREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL\n\t;;\n    i*:CYGWIN*:*)\n",
                      "markdown": "`\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\tFREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\tGUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL\n\t;;\n    i*:CYGWIN*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 908,
                  "startColumn": 41,
                  "endLine": 908,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabihf\n\tfi\n\t;;\n",
                    "rendered": {
                      "text": "\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabihf\n\tfi\n\t;;\n",
                      "markdown": "`\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabihf\n\tfi\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 905,
                  "startColumn": 41,
                  "endLine": 905,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n",
                    "rendered": {
                      "text": "\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n",
                      "markdown": "`\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n\telse\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 903,
                  "startColumn": 6,
                  "endLine": 903,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n",
                    "rendered": {
                      "text": "\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n",
                      "markdown": "`\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    FREEBSD_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[-(].*//'`\n\t    GUESS=$UNAME_PROCESSOR-unknown-freebsd$FREEBSD_REL-gnueabi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 96,
                  "endLine": 887,
                  "endColumn": 101,
                  "snippet": {
                    "text": "\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n",
                    "rendered": {
                      "text": "\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n",
                      "markdown": "`\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 886,
                  "startColumn": 83,
                  "endLine": 886,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n",
                    "rendered": {
                      "text": "\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n",
                      "markdown": "`\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\tGUESS=sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 37,
                  "endLine": 882,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n",
                    "rendered": {
                      "text": "    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n",
                      "markdown": "`    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n    5000:UNIX_System_V:4.*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 881,
                  "startColumn": 83,
                  "endLine": 881,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n",
                    "rendered": {
                      "text": "\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n",
                      "markdown": "`\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\tGUESS=${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 876,
                  "startColumn": 34,
                  "endLine": 876,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=craynv-cray-unicosmp$CRAY_REL\n\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=craynv-cray-unicosmp$CRAY_REL\n\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n",
                      "markdown": "`\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=craynv-cray-unicosmp$CRAY_REL\n\t;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 34,
                  "endLine": 872,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n",
                      "markdown": "`\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=sv1-cray-unicos$CRAY_REL\n\t;;\n    *:UNICOS/mp:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 868,
                  "startColumn": 34,
                  "endLine": 868,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n",
                      "markdown": "`\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=alphaev5-cray-unicosmk$CRAY_REL\n\t;;\n    CRAY*SV1:*:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 864,
                  "startColumn": 34,
                  "endLine": 864,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n",
                    "rendered": {
                      "text": "\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n",
                      "markdown": "`\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=t90-cray-unicos$CRAY_REL\n\t;;\n    CRAY*T3E:*:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 859,
                  "startColumn": 2,
                  "endLine": 859,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n",
                    "rendered": {
                      "text": "\t;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n",
                      "markdown": "`\t;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 854,
                  "startColumn": 34,
                  "endLine": 854,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=c4-convex-bsd\n\t;;\n    CRAY*Y-MP:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=ymp-cray-unicos$CRAY_REL\n\t;;\n    CRAY*[A-Z]90:*:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=c4-convex-bsd\n\t;;\n    CRAY*Y-MP:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=ymp-cray-unicos$CRAY_REL\n\t;;\n    CRAY*[A-Z]90:*:*:*)\n",
                      "markdown": "`\tGUESS=c4-convex-bsd\n\t;;\n    CRAY*Y-MP:*:*:*)\n\tCRAY_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'`\n\tGUESS=ymp-cray-unicos$CRAY_REL\n\t;;\n    CRAY*[A-Z]90:*:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 781,
                  "endLine": 781,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n",
                    "rendered": {
                      "text": "\t;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n",
                      "markdown": "`\t;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 34,
                  "endLine": 776,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=$HP_ARCH-hp-hpux$HPUX_REV\n\t;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tGUESS=ia64-hp-hpux$HPUX_REV\n\t;;\n    3050*:HI-UX:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=$HP_ARCH-hp-hpux$HPUX_REV\n\t;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tGUESS=ia64-hp-hpux$HPUX_REV\n\t;;\n    3050*:HI-UX:*:*)\n",
                      "markdown": "`\tGUESS=$HP_ARCH-hp-hpux$HPUX_REV\n\t;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tGUESS=ia64-hp-hpux$HPUX_REV\n\t;;\n    3050*:HI-UX:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 766,
                  "startColumn": 1,
                  "endLine": 766,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n",
                    "rendered": {
                      "text": "\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n",
                      "markdown": "`\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 715,
                  "startColumn": 5,
                  "endLine": 715,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tfi\n\t\tif test \"$HP_ARCH\" = \"\"; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n",
                    "rendered": {
                      "text": "\t\tfi\n\t\tif test \"$HP_ARCH\" = \"\"; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n",
                      "markdown": "`\t\tfi\n\t\tif test \"$HP_ARCH\" = \"\"; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 694,
                  "startColumn": 34,
                  "endLine": 694,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=m68k-hp-bsd4.4\n\t;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tcase $UNAME_MACHINE in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n",
                    "rendered": {
                      "text": "\tGUESS=m68k-hp-bsd4.4\n\t;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tcase $UNAME_MACHINE in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n",
                      "markdown": "`\tGUESS=m68k-hp-bsd4.4\n\t;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*.[0B]*//'`\n\tcase $UNAME_MACHINE in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 666,
                  "startColumn": 30,
                  "endLine": 666,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n",
                    "rendered": {
                      "text": "\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n",
                      "markdown": "`\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 666,
                  "startColumn": 5,
                  "endLine": 666,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n",
                    "rendered": {
                      "text": "\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n",
                      "markdown": "`\tfi\n\tif test -x /usr/bin/lslpp ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc | \\\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=$UNAME_VERSION.$UNAME_RELEASE\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 659,
                  "startColumn": 40,
                  "endLine": 659,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n",
                    "rendered": {
                      "text": "\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n",
                      "markdown": "`\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 658,
                  "startColumn": 68,
                  "endLine": 658,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n",
                    "rendered": {
                      "text": "\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n",
                      "markdown": "`\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 658,
                  "startColumn": 59,
                  "endLine": 658,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n",
                    "rendered": {
                      "text": "\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n",
                      "markdown": "`\tfi\n\t;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 5,
                  "endLine": 651,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\telse\n\t\t\tGUESS=rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tGUESS=rs6000-ibm-aix3.2.4\n\telse\n\t\tGUESS=rs6000-ibm-aix3.2\n",
                    "rendered": {
                      "text": "\t\telse\n\t\t\tGUESS=rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tGUESS=rs6000-ibm-aix3.2.4\n\telse\n\t\tGUESS=rs6000-ibm-aix3.2\n",
                      "markdown": "`\t\telse\n\t\t\tGUESS=rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tGUESS=rs6000-ibm-aix3.2.4\n\telse\n\t\tGUESS=rs6000-ibm-aix3.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 1,
                  "endLine": 634,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n",
                    "rendered": {
                      "text": "    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n",
                      "markdown": "`    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 632,
                  "startColumn": 3,
                  "endLine": 632,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE-ibm-aix$IBM_REV\n\t;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE-ibm-aix$IBM_REV\n\t;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE-ibm-aix$IBM_REV\n\t;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 34,
                  "endLine": 614,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tGUESS=m68k-tektronix-bsd\n\t;;\n    *:IRIX*:*:*)\n\tIRIX_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/g'`\n\tGUESS=mips-sgi-irix$IRIX_REL\n\t;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n",
                    "rendered": {
                      "text": "\tGUESS=m68k-tektronix-bsd\n\t;;\n    *:IRIX*:*:*)\n\tIRIX_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/g'`\n\tGUESS=mips-sgi-irix$IRIX_REL\n\t;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n",
                      "markdown": "`\tGUESS=m68k-tektronix-bsd\n\t;;\n    *:IRIX*:*:*)\n\tIRIX_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/g'`\n\tGUESS=mips-sgi-irix$IRIX_REL\n\t;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 36,
                  "endLine": 558,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=mips-mips-riscos$UNAME_RELEASE\n",
                    "rendered": {
                      "text": "\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=mips-mips-riscos$UNAME_RELEASE\n",
                      "markdown": "`\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\tGUESS=mips-mips-riscos$UNAME_RELEASE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 536,
                  "endLine": 536,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n",
                    "rendered": {
                      "text": "\t;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n",
                      "markdown": "`\t;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 35,
                  "endLine": 476,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase `/bin/arch` in\n\t    sun3)\n",
                    "rendered": {
                      "text": "\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase `/bin/arch` in\n\t    sun3)\n",
                      "markdown": "`\tGUESS=m68k-sun-sunos$UNAME_RELEASE\n\t;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase `/bin/arch` in\n\t    sun3)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 33,
                  "endLine": 469,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like '4.1.3-JL'.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/'`\n\tGUESS=sparc-sun-sunos$SUN_REL\n\t;;\n    sun3*:SunOS:*:*)\n",
                    "rendered": {
                      "text": "\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like '4.1.3-JL'.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/'`\n\tGUESS=sparc-sun-sunos$SUN_REL\n\t;;\n    sun3*:SunOS:*:*)\n",
                      "markdown": "`\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like '4.1.3-JL'.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/-/_/'`\n\tGUESS=sparc-sun-sunos$SUN_REL\n\t;;\n    sun3*:SunOS:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 33,
                  "endLine": 459,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris3$SUN_REL\n\t;;\n    sun4*:SunOS:*:*)\n",
                    "rendered": {
                      "text": "\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris3$SUN_REL\n\t;;\n    sun4*:SunOS:*:*)\n",
                      "markdown": "`\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris3$SUN_REL\n\t;;\n    sun4*:SunOS:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 33,
                  "endLine": 452,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$SUN_ARCH-pc-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:6*:*)\n",
                    "rendered": {
                      "text": "\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$SUN_ARCH-pc-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:6*:*)\n",
                      "markdown": "`\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$SUN_ARCH-pc-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:6*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 1,
                  "endLine": 447,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n",
                    "rendered": {
                      "text": "\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n",
                      "markdown": "`\tif test \"$CC_FOR_BUILD\" != no_compiler_found; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -m64 -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 33,
                  "endLine": 432,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris2$SUN_REL\n\t;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris2$SUN_REL\n\t;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n",
                      "markdown": "`\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-sun-solaris2$SUN_REL\n\t;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 33,
                  "endLine": 428,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=sparc-hal-solaris2$SUN_REL\n\t;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 33,
                  "endLine": 424,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tesac\n\t;;\n    s390x:SunOS:*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n",
                    "rendered": {
                      "text": "\tesac\n\t;;\n    s390x:SunOS:*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n",
                      "markdown": "`\tesac\n\t;;\n    s390x:SunOS:*:*)\n\tSUN_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\n\tGUESS=$UNAME_MACHINE-ibm-solaris2$SUN_REL\n\t;;\n    sun4H:SunOS:5.*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 33,
                  "endLine": 375,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\tOSF_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tGUESS=$UNAME_MACHINE-dec-osf$OSF_REL\n\t;;\n    Amiga*:UNIX_System_V:4.0:*)\n",
                    "rendered": {
                      "text": "\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\tOSF_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tGUESS=$UNAME_MACHINE-dec-osf$OSF_REL\n\t;;\n    Amiga*:UNIX_System_V:4.0:*)\n",
                      "markdown": "`\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\tOSF_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tGUESS=$UNAME_MACHINE-dec-osf$OSF_REL\n\t;;\n    Amiga*:UNIX_System_V:4.0:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 93,
                  "endLine": 337,
                  "endColumn": 99,
                  "snippet": {
                    "text": "\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n",
                    "rendered": {
                      "text": "\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n",
                      "markdown": "`\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 39,
                  "endLine": 337,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n",
                    "rendered": {
                      "text": "\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n",
                      "markdown": "`\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 16,
                  "endLine": 336,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n",
                    "rendered": {
                      "text": "\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n",
                      "markdown": "`\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase $ALPHA_CPU_TYPE in\n\t    \"EV4 (21064)\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 37,
                  "endLine": 330,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n",
                    "rendered": {
                      "text": "\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n",
                      "markdown": "`\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 327,
                  "startColumn": 37,
                  "endLine": 327,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\ttrap '' 0\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n",
                    "rendered": {
                      "text": "\ttrap '' 0\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n",
                      "markdown": "`\ttrap '' 0\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 27,
                  "endLine": 289,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE\n\t;;\n    *:MidnightBSD:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE\n\t;;\n    *:MidnightBSD:*:*)\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-libertybsd$UNAME_RELEASE\n\t;;\n    *:MidnightBSD:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 27,
                  "endLine": 285,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/SecBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-secbsd$UNAME_RELEASE\n\t;;\n    *:LibertyBSD:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 27,
                  "endLine": 281,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n",
                      "markdown": "`\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-openbsd$UNAME_RELEASE\n\t;;\n    *:SecBSD:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 27,
                  "endLine": 277,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tGUESS=$machine-${os}${release}${abi-}\n\t;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n",
                    "rendered": {
                      "text": "\tGUESS=$machine-${os}${release}${abi-}\n\t;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n",
                      "markdown": "`\tGUESS=$machine-${os}${release}${abi-}\n\t;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\tGUESS=$UNAME_MACHINE_ARCH-unknown-bitrig$UNAME_RELEASE\n\t;;\n    *:OpenBSD:*:*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 56,
                  "endLine": 268,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n",
                    "rendered": {
                      "text": "\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n",
                      "markdown": "`\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 34,
                  "endLine": 268,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n",
                    "rendered": {
                      "text": "\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n",
                      "markdown": "`\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 35,
                  "endLine": 255,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n",
                    "rendered": {
                      "text": "\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n",
                      "markdown": "`\tcase $UNAME_MACHINE_ARCH in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 4,
                  "endLine": 238,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n",
                    "rendered": {
                      "text": "\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n",
                      "markdown": "`\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 38,
                  "endLine": 224,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n\t    *) machine=$UNAME_MACHINE_ARCH-unknown ;;\n",
                    "rendered": {
                      "text": "\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n\t    *) machine=$UNAME_MACHINE_ARCH-unknown ;;\n",
                      "markdown": "`\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n\t    *) machine=$UNAME_MACHINE_ARCH-unknown ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 36,
                  "endLine": 223,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n",
                    "rendered": {
                      "text": "\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n",
                      "markdown": "`\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=${arch}${endian}-unknown\n\t\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 24,
                  "endLine": 185,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t# Second heuristic to detect musl libc.\n\tif [ \"$LIBC\" = unknown ] &&\n\t   command -v ldd >/dev/null &&\n\t   ldd --version 2>&1 | grep -q ^musl; then\n\t\tLIBC=musl\n\tfi\n\n",
                    "rendered": {
                      "text": "\t# Second heuristic to detect musl libc.\n\tif [ \"$LIBC\" = unknown ] &&\n\t   command -v ldd >/dev/null &&\n\t   ldd --version 2>&1 | grep -q ^musl; then\n\t\tLIBC=musl\n\tfi\n\n",
                      "markdown": "`\t# Second heuristic to detect musl libc.\n\tif [ \"$LIBC\" = unknown ] &&\n\t   command -v ldd >/dev/null &&\n\t   ldd --version 2>&1 | grep -q ^musl; then\n\t\tLIBC=musl\n\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 70,
                  "endLine": 179,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n",
                    "rendered": {
                      "text": "\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n",
                      "markdown": "`\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 55,
                  "endLine": 179,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n",
                    "rendered": {
                      "text": "\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n",
                      "markdown": "`\t#endif\n\t#endif\n\tEOF\n\tcc_set_libc=`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n\teval \"$cc_set_libc\"\n\n\t# Second heuristic to detect musl libc.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tLIBC=unknown\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#if defined(__ANDROID__)\n\tLIBC=android\n\t#else\n",
                    "rendered": {
                      "text": "\tLIBC=unknown\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#if defined(__ANDROID__)\n\tLIBC=android\n\t#else\n",
                      "markdown": "`\tLIBC=unknown\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#if defined(__ANDROID__)\n\tLIBC=android\n\t#else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 19,
                  "endLine": 141,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\n",
                    "rendered": {
                      "text": "    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\n",
                      "markdown": "`    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 15,
                  "endLine": 45,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# have a pre-POSIX /bin/sh.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n",
                    "rendered": {
                      "text": "# have a pre-POSIX /bin/sh.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n",
                      "markdown": "`# have a pre-POSIX /bin/sh.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 47,
                  "endLine": 39,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n",
                    "rendered": {
                      "text": "\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n",
                      "markdown": "`\n# The \"shellcheck disable\" line above the timestamp inhibits complaints\n# about features and limitations of the classic Bourne shell that were\n# superseded or lifted in POSIX.  However, this script identifies a wide\n# variety of pre-POSIX systems that do not have POSIX shells at all, and\n# even some reasonably current systems (Solaris 10 as case-in-point) still\n# have a pre-POSIX /bin/sh.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 40,
                  "endLine": 31,
                  "endColumn": 48,
                  "snippet": {
                    "text": "#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n",
                    "rendered": {
                      "text": "#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n",
                      "markdown": "`#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/cgit/config.git/plain/config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/config.guess"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 15,
                  "endLine": 24,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n",
                    "rendered": {
                      "text": "#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n",
                      "markdown": "`#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-version"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 43,
                  "endLine": 16,
                  "endColumn": 47,
                  "snippet": {
                    "text": "#    and only guarantee that the current interface number gets larger\n#    faster.\n#\n# 3. If the library source code has changed at all since the last\n#    update, then increment revision (`c:r:a' becomes `c:r+1:a').\n#\n# 4. If any interfaces have been added, removed, or changed since the\n",
                    "rendered": {
                      "text": "#    and only guarantee that the current interface number gets larger\n#    faster.\n#\n# 3. If the library source code has changed at all since the last\n#    update, then increment revision (`c:r:a' becomes `c:r+1:a').\n#\n# 4. If any interfaces have been added, removed, or changed since the\n",
                      "markdown": "`#    and only guarantee that the current interface number gets larger\n#    faster.\n#\n# 3. If the library source code has changed at all since the last\n#    update, then increment revision (`c:r:a' becomes `c:r+1:a').\n#\n# 4. If any interfaces have been added, removed, or changed since the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-version"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 4,
                  "endLine": 11,
                  "endColumn": 12,
                  "snippet": {
                    "text": "#\n# 1. Start with version information of `0:0:0' for each libtool library.\n#\n# 2. Update the version information only immediately before a public\n#    release of your software. More frequent updates are unnecessary,\n#    and only guarantee that the current interface number gets larger\n#    faster.\n",
                    "rendered": {
                      "text": "#\n# 1. Start with version information of `0:0:0' for each libtool library.\n#\n# 2. Update the version information only immediately before a public\n#    release of your software. More frequent updates are unnecessary,\n#    and only guarantee that the current interface number gets larger\n#    faster.\n",
                      "markdown": "`#\n# 1. Start with version information of `0:0:0' for each libtool library.\n#\n# 2. Update the version information only immediately before a public\n#    release of your software. More frequent updates are unnecessary,\n#    and only guarantee that the current interface number gets larger\n#    faster.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-version"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 37,
                  "endLine": 6,
                  "endColumn": 45,
                  "snippet": {
                    "text": "# a separate file so that version updates don't involve re-running\n# automake.\n#\n# Here are a set of rules to help you update your library version\n# information:\n#\n# 1. Start with version information of `0:0:0' for each libtool library.\n",
                    "rendered": {
                      "text": "# a separate file so that version updates don't involve re-running\n# automake.\n#\n# Here are a set of rules to help you update your library version\n# information:\n#\n# 1. Start with version information of `0:0:0' for each libtool library.\n",
                      "markdown": "`# a separate file so that version updates don't involve re-running\n# automake.\n#\n# Here are a set of rules to help you update your library version\n# information:\n#\n# 1. Start with version information of `0:0:0' for each libtool library.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_2.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 1,
                  "endLine": 187,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  n = 41;\n\n  uc = 9;\n  sc = 10;\n  us = 11;\n  ss = 12;\n  ui = 13;\n",
                    "rendered": {
                      "text": "  n = 41;\n\n  uc = 9;\n  sc = 10;\n  us = 11;\n  ss = 12;\n  ui = 13;\n",
                      "markdown": "`  n = 41;\n\n  uc = 9;\n  sc = 10;\n  us = 11;\n  ss = 12;\n  ui = 13;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_2.c"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  s2 = va_arg (ap, struct small_tag);\n\n  uc = va_arg (ap, unsigned);\n  sc = va_arg (ap, signed);\n\n  us = va_arg (ap, unsigned);\n  ss = va_arg (ap, signed);\n",
                    "rendered": {
                      "text": "  s2 = va_arg (ap, struct small_tag);\n\n  uc = va_arg (ap, unsigned);\n  sc = va_arg (ap, signed);\n\n  us = va_arg (ap, unsigned);\n  ss = va_arg (ap, signed);\n",
                      "markdown": "`  s2 = va_arg (ap, struct small_tag);\n\n  uc = va_arg (ap, unsigned);\n  sc = va_arg (ap, signed);\n\n  us = va_arg (ap, unsigned);\n  ss = va_arg (ap, signed);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_2.c"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 1,
                  "endLine": 192,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  ss = 12;\n  ui = 13;\n  si = 14;\n  ul = 15;\n  sl = 16;\n  f1 = 2.12;\n  d1 = 3.13;\n",
                    "rendered": {
                      "text": "  ss = 12;\n  ui = 13;\n  si = 14;\n  ul = 15;\n  sl = 16;\n  f1 = 2.12;\n  d1 = 3.13;\n",
                      "markdown": "`  ss = 12;\n  ui = 13;\n  si = 14;\n  ul = 15;\n  sl = 16;\n  f1 = 2.12;\n  d1 = 3.13;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_2.c"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  ui = va_arg (ap, unsigned int);\n  si = va_arg (ap, signed int);\n\n  ul = va_arg (ap, unsigned long);\n  sl = va_arg (ap, signed long);\n\n  f = va_arg (ap, double);\t/* C standard promotes float->double\n",
                    "rendered": {
                      "text": "  ui = va_arg (ap, unsigned int);\n  si = va_arg (ap, signed int);\n\n  ul = va_arg (ap, unsigned long);\n  sl = va_arg (ap, signed long);\n\n  f = va_arg (ap, double);\t/* C standard promotes float->double\n",
                      "markdown": "`  ui = va_arg (ap, unsigned int);\n  si = va_arg (ap, signed int);\n\n  ul = va_arg (ap, unsigned long);\n  sl = va_arg (ap, signed long);\n\n  f = va_arg (ap, double);\t/* C standard promotes float->double\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/conftest.py"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 31,
                  "endLine": 60,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    selenium = cls(\n        test_dir=request.cls.TEST_BUILD_DIR,\n        server_port=server_port,\n        server_hostname=server_hostname,\n        server_log=server_log,\n    )\n    request.cls.call_number = 0\n",
                    "rendered": {
                      "text": "    selenium = cls(\n        test_dir=request.cls.TEST_BUILD_DIR,\n        server_port=server_port,\n        server_hostname=server_hostname,\n        server_log=server_log,\n    )\n    request.cls.call_number = 0\n",
                      "markdown": "`    selenium = cls(\n        test_dir=request.cls.TEST_BUILD_DIR,\n        server_port=server_port,\n        server_hostname=server_hostname,\n        server_log=server_log,\n    )\n    request.cls.call_number = 0\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/conftest.py"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 15,
                  "endLine": 60,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    selenium = cls(\n        test_dir=request.cls.TEST_BUILD_DIR,\n        server_port=server_port,\n        server_hostname=server_hostname,\n        server_log=server_log,\n    )\n    request.cls.call_number = 0\n",
                    "rendered": {
                      "text": "    selenium = cls(\n        test_dir=request.cls.TEST_BUILD_DIR,\n        server_port=server_port,\n        server_hostname=server_hostname,\n        server_log=server_log,\n    )\n    request.cls.call_number = 0\n",
                      "markdown": "`    selenium = cls(\n        test_dir=request.cls.TEST_BUILD_DIR,\n        server_port=server_port,\n        server_hostname=server_hostname,\n        server_log=server_log,\n    )\n    request.cls.call_number = 0\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/conftest.py"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endLine": 50,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n@fixture(params=list(RUNNER_DICT), scope=\"class\")\ndef selenium_class_scope(request, web_server_main):\n    server_hostname, server_port, server_log = web_server_main\n    assert request.param in RUNNER_DICT\n\n    logger = logging.getLogger('selenium')\n",
                    "rendered": {
                      "text": "\n@fixture(params=list(RUNNER_DICT), scope=\"class\")\ndef selenium_class_scope(request, web_server_main):\n    server_hostname, server_port, server_log = web_server_main\n    assert request.param in RUNNER_DICT\n\n    logger = logging.getLogger('selenium')\n",
                      "markdown": "`\n@fixture(params=list(RUNNER_DICT), scope=\"class\")\ndef selenium_class_scope(request, web_server_main):\n    server_hostname, server_port, server_log = web_server_main\n    assert request.param in RUNNER_DICT\n\n    logger = logging.getLogger('selenium')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/conftest.py"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 34,
                  "endLine": 27,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n    def prepare_driver(self):\n        self.base_url = (\n            f\"http://{self.server_hostname}:{self.server_port}/{self.test_dir}/\"\n        )\n        self.goto(f\"{self.base_url}/test.html\")\n\n",
                    "rendered": {
                      "text": "\n    def prepare_driver(self):\n        self.base_url = (\n            f\"http://{self.server_hostname}:{self.server_port}/{self.test_dir}/\"\n        )\n        self.goto(f\"{self.base_url}/test.html\")\n\n",
                      "markdown": "`\n    def prepare_driver(self):\n        self.base_url = (\n            f\"http://{self.server_hostname}:{self.server_port}/{self.test_dir}/\"\n        )\n        self.goto(f\"{self.base_url}/test.html\")\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/node-tests.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 41,
                  "endLine": 27,
                  "endColumn": 45,
                  "snippet": {
                    "text": "# Common compiler flags\nexport CFLAGS=\"-fPIC $EXTRA_CFLAGS\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nexport CXXFLAGS=\"$CFLAGS -sNO_DISABLE_EXCEPTION_CATCHING $EXTRA_CXXFLAGS\"\n",
                    "rendered": {
                      "text": "# Common compiler flags\nexport CFLAGS=\"-fPIC $EXTRA_CFLAGS\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nexport CXXFLAGS=\"$CFLAGS -sNO_DISABLE_EXCEPTION_CATCHING $EXTRA_CXXFLAGS\"\n",
                      "markdown": "`# Common compiler flags\nexport CFLAGS=\"-fPIC $EXTRA_CFLAGS\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nexport CXXFLAGS=\"$CFLAGS -sNO_DISABLE_EXCEPTION_CATCHING $EXTRA_CXXFLAGS\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/node-tests.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 52,
                  "endLine": 28,
                  "snippet": {
                    "text": "# Common compiler flags\nexport CFLAGS=\"-fPIC $EXTRA_CFLAGS\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nexport CXXFLAGS=\"$CFLAGS -sNO_DISABLE_EXCEPTION_CATCHING $EXTRA_CXXFLAGS\"\nexport LDFLAGS=\"-sEXPORTED_FUNCTIONS=_main,_malloc,_free -sALLOW_TABLE_GROWTH -sASSERTIONS -sNO_DISABLE_EXCEPTION_CATCHING\"\n",
                    "rendered": {
                      "text": "# Common compiler flags\nexport CFLAGS=\"-fPIC $EXTRA_CFLAGS\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nexport CXXFLAGS=\"$CFLAGS -sNO_DISABLE_EXCEPTION_CATCHING $EXTRA_CXXFLAGS\"\nexport LDFLAGS=\"-sEXPORTED_FUNCTIONS=_main,_malloc,_free -sALLOW_TABLE_GROWTH -sASSERTIONS -sNO_DISABLE_EXCEPTION_CATCHING\"\n",
                      "markdown": "`# Common compiler flags\nexport CFLAGS=\"-fPIC $EXTRA_CFLAGS\"\nif [ \"$WASM_BIGINT\" = \"true\" ]; then\n  # We need to detect WASM_BIGINT support at compile time\n  export CFLAGS+=\" -DWASM_BIGINT\"\nfi\nexport CXXFLAGS=\"$CFLAGS -sNO_DISABLE_EXCEPTION_CATCHING $EXTRA_CXXFLAGS\"\nexport LDFLAGS=\"-sEXPORTED_FUNCTIONS=_main,_malloc,_free -sALLOW_TABLE_GROWTH -sASSERTIONS -sNO_DISABLE_EXCEPTION_CATCHING\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 65,
                  "endLine": 51,
                  "snippet": {
                    "text": "\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n",
                    "rendered": {
                      "text": "\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n",
                      "markdown": "`\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 60,
                  "endLine": 50,
                  "snippet": {
                    "text": "ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n",
                    "rendered": {
                      "text": "ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n",
                      "markdown": "`ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 59,
                  "endLine": 47,
                  "snippet": {
                    "text": "fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n",
                    "rendered": {
                      "text": "fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n",
                      "markdown": "`fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nemcc_exists=\"$(command -v emcc)\"\nif [ ! \"${emcc_exists}\" ]; then\n  echo \"Emscripten not on path\"\n  exit 1\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nemcc_exists=\"$(command -v emcc)\"\nif [ ! \"${emcc_exists}\" ]; then\n  echo \"Emscripten not on path\"\n  exit 1\n",
                      "markdown": "`#!/usr/bin/env bash\nemcc_exists=\"$(command -v emcc)\"\nif [ ! \"${emcc_exists}\" ]; then\n  echo \"Emscripten not on path\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 28,
                  "endLine": 54,
                  "endColumn": 3,
                  "snippet": {
                    "text": "ls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n",
                    "rendered": {
                      "text": "ls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n",
                      "markdown": "`ls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 65,
                  "endLine": 51,
                  "snippet": {
                    "text": "\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n",
                    "rendered": {
                      "text": "\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n",
                      "markdown": "`\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\ncp ../emscripten/test.html .\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 9,
                  "endLine": 50,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n",
                    "rendered": {
                      "text": "\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n",
                      "markdown": "`\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 60,
                  "endLine": 50,
                  "snippet": {
                    "text": "ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n",
                    "rendered": {
                      "text": "ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n",
                      "markdown": "`ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\nem++ $LDFLAGS *.o -o test.js\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 8,
                  "endLine": 49,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\n",
                    "rendered": {
                      "text": "ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\n",
                      "markdown": "`ls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n\n# Link\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 59,
                  "endLine": 47,
                  "snippet": {
                    "text": "fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n",
                    "rendered": {
                      "text": "fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n",
                      "markdown": "`fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\nls *.cc | sed 's/\\(.*\\)\\.cc/em++ $CXXFLAGS -c \\1.cc -o \\1.o /g' | bash\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 7,
                  "endLine": 46,
                  "endColumn": 12,
                  "snippet": {
                    "text": "fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\n",
                    "rendered": {
                      "text": "fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\n",
                      "markdown": "`fi\n\n# Rename main functions to test__filename so we can link them together\nls *c | sed 's!\\(.*\\)\\.c!sed -i \"s/main/test__\\1/g\" \\0!g' | bash\n\n# Compile\nls *.c | sed 's/\\(.*\\)\\.c/emcc $CFLAGS -c \\1.c -o \\1.o /g' | bash\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/emscripten/build-tests.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\nemcc_exists=\"$(command -v emcc)\"\nif [ ! \"${emcc_exists}\" ]; then\n  echo \"Emscripten not on path\"\n  exit 1\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\nemcc_exists=\"$(command -v emcc)\"\nif [ ! \"${emcc_exists}\" ]; then\n  echo \"Emscripten not on path\"\n  exit 1\n",
                      "markdown": "`#!/usr/bin/env bash\nemcc_exists=\"$(command -v emcc)\"\nif [ ! \"${emcc_exists}\" ]; then\n  echo \"Emscripten not on path\"\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/aix.S"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 20,
                  "endLine": 438,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tlwz\tr3, 20+(1*4)(r1)\n\tlwz\tr4, 20+(2*4)(r1)\n\tlwz\tr5, 20+(3*4)(r1)\n",
                    "rendered": {
                      "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tlwz\tr3, 20+(1*4)(r1)\n\tlwz\tr4, 20+(2*4)(r1)\n\tlwz\tr5, 20+(3*4)(r1)\n",
                      "markdown": "`\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tlwz\tr3, 20+(1*4)(r1)\n\tlwz\tr4, 20+(2*4)(r1)\n\tlwz\tr5, 20+(3*4)(r1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/aix.S"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 20,
                  "endLine": 382,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tld\tr3, 40+(1*8)(r1)\n\tld\tr4, 40+(2*8)(r1)\n\tld\tr5, 40+(3*8)(r1)\n",
                    "rendered": {
                      "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tld\tr3, 40+(1*8)(r1)\n\tld\tr4, 40+(2*8)(r1)\n\tld\tr5, 40+(3*8)(r1)\n",
                      "markdown": "`\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tld\tr3, 40+(1*8)(r1)\n\tld\tr4, 40+(2*8)(r1)\n\tld\tr5, 40+(3*8)(r1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/aix.S"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 20,
                  "endLine": 254,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tlwz\tr3, 20+(1*4)(r1)\n\tlwz\tr4, 20+(2*4)(r1)\n\tlwz\tr5, 20+(3*4)(r1)\n",
                    "rendered": {
                      "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tlwz\tr3, 20+(1*4)(r1)\n\tlwz\tr4, 20+(2*4)(r1)\n\tlwz\tr5, 20+(3*4)(r1)\n",
                      "markdown": "`\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tlwz\tr3, 20+(1*4)(r1)\n\tlwz\tr4, 20+(2*4)(r1)\n\tlwz\tr5, 20+(3*4)(r1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/aix.S"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 20,
                  "endLine": 146,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tld\tr3, 40+(1*8)(r1)\n\tld\tr4, 40+(2*8)(r1)\n\tld\tr5, 40+(3*8)(r1)\n",
                    "rendered": {
                      "text": "\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tld\tr3, 40+(1*8)(r1)\n\tld\tr4, 40+(2*8)(r1)\n\tld\tr5, 40+(3*8)(r1)\n",
                      "markdown": "`\tmtcrf\t0x40, r31\n\tmtctr\tr0\n\t/* Load all those argument registers.  */\n\t/* We have set up a nice stack frame, just load it into registers. */\n\tld\tr3, 40+(1*8)(r1)\n\tld\tr4, 40+(2*8)(r1)\n\tld\tr5, 40+(3*8)(r1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 798,
                  "startColumn": 6,
                  "endLine": 799,
                  "snippet": {
                    "text": "\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n\t.4byte\t.LFE2-.LFB2\t /* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\t.LCFI7-.LFB2\n",
                    "rendered": {
                      "text": "\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n\t.4byte\t.LFE2-.LFB2\t /* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\t.LCFI7-.LFB2\n",
                      "markdown": "`\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n\t.4byte\t.LFE2-.LFB2\t /* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\t.LCFI7-.LFB2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 792,
                  "startColumn": 6,
                  "endLine": 793,
                  "snippet": {
                    "text": "\t.4byte\t.LEFDE3-.LASFDE3\t/* FDE Length */\n.LASFDE3:\n\t.4byte\t.LASFDE3-__FRAME_BEGIN__\t/* FDE CIE offset */\n#ifdef PIC\n\t.4byte\t.LFB2-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n",
                    "rendered": {
                      "text": "\t.4byte\t.LEFDE3-.LASFDE3\t/* FDE Length */\n.LASFDE3:\n\t.4byte\t.LASFDE3-__FRAME_BEGIN__\t/* FDE CIE offset */\n#ifdef PIC\n\t.4byte\t.LFB2-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n",
                      "markdown": "`\t.4byte\t.LEFDE3-.LASFDE3\t/* FDE Length */\n.LASFDE3:\n\t.4byte\t.LASFDE3-__FRAME_BEGIN__\t/* FDE CIE offset */\n#ifdef PIC\n\t.4byte\t.LFB2-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 742,
                  "startColumn": 6,
                  "endLine": 743,
                  "snippet": {
                    "text": "\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n\t.4byte\t.LFE1-.LFB1\t /* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\t.LCFI0-.LFB1\n",
                    "rendered": {
                      "text": "\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n\t.4byte\t.LFE1-.LFB1\t /* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\t.LCFI0-.LFB1\n",
                      "markdown": "`\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n\t.4byte\t.LFE1-.LFB1\t /* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\t.LCFI0-.LFB1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 736,
                  "startColumn": 6,
                  "endLine": 737,
                  "snippet": {
                    "text": "\t.4byte\t.LEFDE1-.LASFDE1\t/* FDE Length */\n.LASFDE1:\n\t.4byte\t.LASFDE1-__FRAME_BEGIN__\t/* FDE CIE offset */\n#ifdef PIC\n\t.4byte\t.LFB1-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n",
                    "rendered": {
                      "text": "\t.4byte\t.LEFDE1-.LASFDE1\t/* FDE Length */\n.LASFDE1:\n\t.4byte\t.LASFDE1-__FRAME_BEGIN__\t/* FDE CIE offset */\n#ifdef PIC\n\t.4byte\t.LFB1-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n",
                      "markdown": "`\t.4byte\t.LEFDE1-.LASFDE1\t/* FDE Length */\n.LASFDE1:\n\t.4byte\t.LASFDE1-__FRAME_BEGIN__\t/* FDE CIE offset */\n#ifdef PIC\n\t.4byte\t.LFB1-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 723,
                  "startColumn": 6,
                  "endLine": 724,
                  "snippet": {
                    "text": "\t.byte\t0x1\t/* uleb128 0x1; CIE Code Alignment Factor */\n\t.byte\t0x7c\t/* sleb128 -4; CIE Data Alignment Factor */\n\t.byte\t0x11\t/* CIE RA Column */\n#ifdef PIC\n\t.uleb128 0x1\t/* Augmentation size */\n\t.byte\t0x10\t/* FDE Encoding (pcrel) */\n#endif\n\t.byte\t0xc\t/* DW_CFA_def_cfa */\n",
                    "rendered": {
                      "text": "\t.byte\t0x1\t/* uleb128 0x1; CIE Code Alignment Factor */\n\t.byte\t0x7c\t/* sleb128 -4; CIE Data Alignment Factor */\n\t.byte\t0x11\t/* CIE RA Column */\n#ifdef PIC\n\t.uleb128 0x1\t/* Augmentation size */\n\t.byte\t0x10\t/* FDE Encoding (pcrel) */\n#endif\n\t.byte\t0xc\t/* DW_CFA_def_cfa */\n",
                      "markdown": "`\t.byte\t0x1\t/* uleb128 0x1; CIE Code Alignment Factor */\n\t.byte\t0x7c\t/* sleb128 -4; CIE Data Alignment Factor */\n\t.byte\t0x11\t/* CIE RA Column */\n#ifdef PIC\n\t.uleb128 0x1\t/* Augmentation size */\n\t.byte\t0x10\t/* FDE Encoding (pcrel) */\n#endif\n\t.byte\t0xc\t/* DW_CFA_def_cfa */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 715,
                  "startColumn": 6,
                  "endLine": 716,
                  "snippet": {
                    "text": ".LSCIE1:\n\t.4byte\t0x0\t/* CIE Identifier Tag */\n\t.byte\t0x1\t/* CIE Version */\n#ifdef PIC\n\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n#else\n\t.byte\t0x0\t/* CIE Augmentation */\n#endif\n",
                    "rendered": {
                      "text": ".LSCIE1:\n\t.4byte\t0x0\t/* CIE Identifier Tag */\n\t.byte\t0x1\t/* CIE Version */\n#ifdef PIC\n\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n#else\n\t.byte\t0x0\t/* CIE Augmentation */\n#endif\n",
                      "markdown": "`.LSCIE1:\n\t.4byte\t0x0\t/* CIE Identifier Tag */\n\t.byte\t0x1\t/* CIE Version */\n#ifdef PIC\n\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n#else\n\t.byte\t0x0\t/* CIE Augmentation */\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 599,
                  "startColumn": 6,
                  "endLine": 600,
                  "snippet": {
                    "text": "\t add\t#8,r2\n0:\n\t.align 2\n#ifdef PIC\nL_got:\n\t.long\t_GLOBAL_OFFSET_TABLE_\nL_helper:\n\t.long\tffi_closure_helper_SYSV@GOTOFF\n",
                    "rendered": {
                      "text": "\t add\t#8,r2\n0:\n\t.align 2\n#ifdef PIC\nL_got:\n\t.long\t_GLOBAL_OFFSET_TABLE_\nL_helper:\n\t.long\tffi_closure_helper_SYSV@GOTOFF\n",
                      "markdown": "`\t add\t#8,r2\n0:\n\t.align 2\n#ifdef PIC\nL_got:\n\t.long\t_GLOBAL_OFFSET_TABLE_\nL_helper:\n\t.long\tffi_closure_helper_SYSV@GOTOFF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh/sysv.S"
                },
                "region": {
                  "startLine": 577,
                  "startColumn": 6,
                  "endLine": 578,
                  "snippet": {
                    "text": "#endif\n\tmov.l\tr1,@r14\n\n#ifdef PIC\n\tmov.l\tL_got,r1\n\tmova\tL_got,r0\n\tadd\tr0,r1\n\tmov.l\tL_helper,r0\n",
                    "rendered": {
                      "text": "#endif\n\tmov.l\tr1,@r14\n\n#ifdef PIC\n\tmov.l\tL_got,r1\n\tmova\tL_got,r0\n\tadd\tr0,r1\n\tmov.l\tL_helper,r0\n",
                      "markdown": "`#endif\n\tmov.l\tr1,@r14\n\n#ifdef PIC\n\tmov.l\tL_got,r1\n\tmova\tL_got,r0\n\tadd\tr0,r1\n\tmov.l\tL_helper,r0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/aarch64/sysv.S"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 45,
                  "endLine": 102,
                  "endColumn": 49,
                  "snippet": {
                    "text": "#if defined(HAVE_ARM64E_PTRAUTH) && defined(__APPLE__)\n\t/* darwin's libunwind assumes that the cfa is the sp and that's the data\n\t * used to sign the lr.  In order to allow unwinding through this\n\t * function it is necessary to point the cfa at the signing register.\n\t */\n\tcfi_def_cfa(x1, 0);\n#endif\n",
                    "rendered": {
                      "text": "#if defined(HAVE_ARM64E_PTRAUTH) && defined(__APPLE__)\n\t/* darwin's libunwind assumes that the cfa is the sp and that's the data\n\t * used to sign the lr.  In order to allow unwinding through this\n\t * function it is necessary to point the cfa at the signing register.\n\t */\n\tcfi_def_cfa(x1, 0);\n#endif\n",
                      "markdown": "`#if defined(HAVE_ARM64E_PTRAUTH) && defined(__APPLE__)\n\t/* darwin's libunwind assumes that the cfa is the sp and that's the data\n\t * used to sign the lr.  In order to allow unwinding through this\n\t * function it is necessary to point the cfa at the signing register.\n\t */\n\tcfi_def_cfa(x1, 0);\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/metag/sysv.S"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 2,
                  "endLine": 229,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tsetl\t[D1AR1++], D0Re0, D1Re0\n\nLSYM(Lepilogue):\n\t! At this point, the stack pointer points right after the argument\n\t! saved area. We need to restore 4 regs, therefore we need to move\n\t! 16 bytes ahead.\n\tadd     A0StP, A0StP, #16\n",
                    "rendered": {
                      "text": "\tsetl\t[D1AR1++], D0Re0, D1Re0\n\nLSYM(Lepilogue):\n\t! At this point, the stack pointer points right after the argument\n\t! saved area. We need to restore 4 regs, therefore we need to move\n\t! 16 bytes ahead.\n\tadd     A0StP, A0StP, #16\n",
                      "markdown": "`\tsetl\t[D1AR1++], D0Re0, D1Re0\n\nLSYM(Lepilogue):\n\t! At this point, the stack pointer points right after the argument\n\t! saved area. We need to restore 4 regs, therefore we need to move\n\t! 16 bytes ahead.\n\tadd     A0StP, A0StP, #16\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/metag/sysv.S"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 12,
                  "endLine": 164,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t! cifs->bytes, whilst A0StP points to the stack after the space allocation\n\n\t! fn was the first argument of ffi_call_SYSV.\n\t! The stack at this point looks like this:\n\t!\n\t! A0StP(on entry to _SYSV) ->\tArg6\tArg5     | low\n\t!\t\t\t\tArg4\tArg3     |\n",
                    "rendered": {
                      "text": "\t! cifs->bytes, whilst A0StP points to the stack after the space allocation\n\n\t! fn was the first argument of ffi_call_SYSV.\n\t! The stack at this point looks like this:\n\t!\n\t! A0StP(on entry to _SYSV) ->\tArg6\tArg5     | low\n\t!\t\t\t\tArg4\tArg3     |\n",
                      "markdown": "`\t! cifs->bytes, whilst A0StP points to the stack after the space allocation\n\n\t! fn was the first argument of ffi_call_SYSV.\n\t! The stack at this point looks like this:\n\t!\n\t! A0StP(on entry to _SYSV) ->\tArg6\tArg5     | low\n\t!\t\t\t\tArg4\tArg3     |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/metag/sysv.S"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 2,
                  "endLine": 186,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t! Arg1 is the function pointer for the foreign call. This has been\n\t! preserved in D1.5\n\n\t! Time to call (fn). Arguments should be like this:\n\t! Arg1-Arg6 are loaded to regs\n\t! The rest of the arguments are stored in stack pointed by A0StP\n\n",
                    "rendered": {
                      "text": "\t! Arg1 is the function pointer for the foreign call. This has been\n\t! preserved in D1.5\n\n\t! Time to call (fn). Arguments should be like this:\n\t! Arg1-Arg6 are loaded to regs\n\t! The rest of the arguments are stored in stack pointed by A0StP\n\n",
                      "markdown": "`\t! Arg1 is the function pointer for the foreign call. This has been\n\t! preserved in D1.5\n\n\t! Time to call (fn). Arguments should be like this:\n\t! Arg1-Arg6 are loaded to regs\n\t! The rest of the arguments are stored in stack pointed by A0StP\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 48,
                  "endLine": 85,
                  "endColumn": 52,
                  "snippet": {
                    "text": "      a0, which is in the _caller's_ alloca area.  We establish our own stack\n      frame at the end of the call_context.\n\n      Anything below the arguments will be freed at this point, although we\n      preserve the call_context so that it can be read back in the caller.\n    */\n\n",
                    "rendered": {
                      "text": "      a0, which is in the _caller's_ alloca area.  We establish our own stack\n      frame at the end of the call_context.\n\n      Anything below the arguments will be freed at this point, although we\n      preserve the call_context so that it can be read back in the caller.\n    */\n\n",
                      "markdown": "`      a0, which is in the _caller's_ alloca area.  We establish our own stack\n      frame at the end of the call_context.\n\n      Anything below the arguments will be freed at this point, although we\n      preserve the call_context so that it can be read back in the caller.\n    */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 11,
                  "endLine": 83,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      We are NOT going to set up an ordinary stack frame.  In order to pass\n      the stacked args to the called function, we adjust our stack pointer to\n      a0, which is in the _caller's_ alloca area.  We establish our own stack\n      frame at the end of the call_context.\n\n      Anything below the arguments will be freed at this point, although we\n      preserve the call_context so that it can be read back in the caller.\n",
                    "rendered": {
                      "text": "      We are NOT going to set up an ordinary stack frame.  In order to pass\n      the stacked args to the called function, we adjust our stack pointer to\n      a0, which is in the _caller's_ alloca area.  We establish our own stack\n      frame at the end of the call_context.\n\n      Anything below the arguments will be freed at this point, although we\n      preserve the call_context so that it can be read back in the caller.\n",
                      "markdown": "`      We are NOT going to set up an ordinary stack frame.  In order to pass\n      the stacked args to the called function, we adjust our stack pointer to\n      a0, which is in the _caller's_ alloca area.  We establish our own stack\n      frame at the end of the call_context.\n\n      Anything below the arguments will be freed at this point, although we\n      preserve the call_context so that it can be read back in the caller.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 3,
                  "endLine": 271,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    LARG    a1, 2*PTRS(t2)\n    mv      a2, t2\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n    call    ffi_closure_inner\n\n",
                    "rendered": {
                      "text": "    LARG    a1, 2*PTRS(t2)\n    mv      a2, t2\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n    call    ffi_closure_inner\n\n",
                      "markdown": "`    LARG    a1, 2*PTRS(t2)\n    mv      a2, t2\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n    call    ffi_closure_inner\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 3,
                  "endLine": 269,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    /* enter C */\n    LARG    a0, 1*PTRS(t2)\n    LARG    a1, 2*PTRS(t2)\n    mv      a2, t2\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n",
                    "rendered": {
                      "text": "    /* enter C */\n    LARG    a0, 1*PTRS(t2)\n    LARG    a1, 2*PTRS(t2)\n    mv      a2, t2\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n",
                      "markdown": "`    /* enter C */\n    LARG    a0, 1*PTRS(t2)\n    LARG    a1, 2*PTRS(t2)\n    mv      a2, t2\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 3,
                  "endLine": 197,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    LARG    a1, FFI_TRAMPOLINE_SIZE+1*PTRS(t1)\n    LARG    a2, FFI_TRAMPOLINE_SIZE+2*PTRS(t1)\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n    call    ffi_closure_inner\n\n",
                    "rendered": {
                      "text": "    LARG    a1, FFI_TRAMPOLINE_SIZE+1*PTRS(t1)\n    LARG    a2, FFI_TRAMPOLINE_SIZE+2*PTRS(t1)\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n    call    ffi_closure_inner\n\n",
                      "markdown": "`    LARG    a1, FFI_TRAMPOLINE_SIZE+1*PTRS(t1)\n    LARG    a2, FFI_TRAMPOLINE_SIZE+2*PTRS(t1)\n    addi    a3, sp, FRAME_LEN\n    mv      a4, sp\n\n    call    ffi_closure_inner\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 3,
                  "endLine": 101,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    # Load arguments\n    mv      t1, a2\n    mv      t2, a3\n\n#if FLTS\n    FLARG   fa0, -FRAME_LEN+0*FLTS(fp)\n",
                    "rendered": {
                      "text": "\n    # Load arguments\n    mv      t1, a2\n    mv      t2, a3\n\n#if FLTS\n    FLARG   fa0, -FRAME_LEN+0*FLTS(fp)\n",
                      "markdown": "`\n    # Load arguments\n    mv      t1, a2\n    mv      t2, a3\n\n#if FLTS\n    FLARG   fa0, -FRAME_LEN+0*FLTS(fp)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 3,
                  "endLine": 100,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    .cfi_def_cfa 8, 0 # our frame is fully set up\n\n    # Load arguments\n    mv      t1, a2\n    mv      t2, a3\n\n#if FLTS\n",
                    "rendered": {
                      "text": "    .cfi_def_cfa 8, 0 # our frame is fully set up\n\n    # Load arguments\n    mv      t1, a2\n    mv      t2, a3\n\n#if FLTS\n",
                      "markdown": "`    .cfi_def_cfa 8, 0 # our frame is fully set up\n\n    # Load arguments\n    mv      t1, a2\n    mv      t2, a3\n\n#if FLTS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/riscv/sysv.S"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 3,
                  "endLine": 96,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    .cfi_offset 1, -1*PTRS\n\n    addi    fp, a1, FRAME_LEN\n    mv      sp, a0\n    .cfi_def_cfa 8, 0 # our frame is fully set up\n\n    # Load arguments\n",
                    "rendered": {
                      "text": "    .cfi_offset 1, -1*PTRS\n\n    addi    fp, a1, FRAME_LEN\n    mv      sp, a0\n    .cfi_def_cfa 8, 0 # our frame is fully set up\n\n    # Load arguments\n",
                      "markdown": "`    .cfi_offset 1, -1*PTRS\n\n    addi    fp, a1, FRAME_LEN\n    mv      sp, a0\n    .cfi_def_cfa 8, 0 # our frame is fully set up\n\n    # Load arguments\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/debug.c"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 40,
                  "endLine": 43,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nNORETURN void ffi_assert(const char *expr, const char *file, int line)\n{\n  fprintf(stderr, \"ASSERTION FAILURE: %s at %s:%d\\n\", expr, file, line);\n  ffi_stop_here();\n  abort();\n}\n",
                    "rendered": {
                      "text": "\nNORETURN void ffi_assert(const char *expr, const char *file, int line)\n{\n  fprintf(stderr, \"ASSERTION FAILURE: %s at %s:%d\\n\", expr, file, line);\n  ffi_stop_here();\n  abort();\n}\n",
                      "markdown": "`\nNORETURN void ffi_assert(const char *expr, const char *file, int line)\n{\n  fprintf(stderr, \"ASSERTION FAILURE: %s at %s:%d\\n\", expr, file, line);\n  ffi_stop_here();\n  abort();\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi_cfi.h"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 43,
                  "endLine": 46,
                  "snippet": {
                    "text": "# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n# define cfi_window_save\t\t.cfi_window_save\n# define cfi_personality(enc, exp)\t.cfi_personality enc, exp\n",
                    "rendered": {
                      "text": "# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n# define cfi_window_save\t\t.cfi_window_save\n# define cfi_personality(enc, exp)\t.cfi_personality enc, exp\n",
                      "markdown": "`# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n# define cfi_window_save\t\t.cfi_window_save\n# define cfi_personality(enc, exp)\t.cfi_personality enc, exp\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi_cfi.h"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 45,
                  "endLine": 45,
                  "snippet": {
                    "text": "# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n# define cfi_window_save\t\t.cfi_window_save\n",
                    "rendered": {
                      "text": "# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n# define cfi_window_save\t\t.cfi_window_save\n",
                      "markdown": "`# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n# define cfi_window_save\t\t.cfi_window_save\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi_cfi.h"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 39,
                  "endLine": 44,
                  "snippet": {
                    "text": "# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n",
                    "rendered": {
                      "text": "# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n",
                      "markdown": "`# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n# define cfi_restore_state\t\t.cfi_restore_state\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi_cfi.h"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 51,
                  "endLine": 43,
                  "snippet": {
                    "text": "# define cfi_offset(reg, off)\t\t.cfi_offset reg, off\n# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n",
                    "rendered": {
                      "text": "# define cfi_offset(reg, off)\t\t.cfi_offset reg, off\n# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n",
                      "markdown": "`# define cfi_offset(reg, off)\t\t.cfi_offset reg, off\n# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n# define cfi_register(r1, r2)\t\t.cfi_register r1, r2\n# define cfi_return_column(reg)\t\t.cfi_return_column reg\n# define cfi_restore(reg)\t\t.cfi_restore reg\n# define cfi_same_value(reg)\t\t.cfi_same_value reg\n# define cfi_undefined(reg)\t\t.cfi_undefined reg\n# define cfi_remember_state\t\t.cfi_remember_state\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi_cfi.h"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 56,
                  "endLine": 37,
                  "snippet": {
                    "text": "# define cfi_startproc\t\t\t.cfi_startproc\n# define cfi_endproc\t\t\t.cfi_endproc\n# define cfi_def_cfa(reg, off)\t\t.cfi_def_cfa reg, off\n# define cfi_def_cfa_register(reg)\t.cfi_def_cfa_register reg\n# define cfi_def_cfa_offset(off)\t.cfi_def_cfa_offset off\n# define cfi_adjust_cfa_offset(off)\t.cfi_adjust_cfa_offset off\n# define cfi_offset(reg, off)\t\t.cfi_offset reg, off\n# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n",
                    "rendered": {
                      "text": "# define cfi_startproc\t\t\t.cfi_startproc\n# define cfi_endproc\t\t\t.cfi_endproc\n# define cfi_def_cfa(reg, off)\t\t.cfi_def_cfa reg, off\n# define cfi_def_cfa_register(reg)\t.cfi_def_cfa_register reg\n# define cfi_def_cfa_offset(off)\t.cfi_def_cfa_offset off\n# define cfi_adjust_cfa_offset(off)\t.cfi_adjust_cfa_offset off\n# define cfi_offset(reg, off)\t\t.cfi_offset reg, off\n# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n",
                      "markdown": "`# define cfi_startproc\t\t\t.cfi_startproc\n# define cfi_endproc\t\t\t.cfi_endproc\n# define cfi_def_cfa(reg, off)\t\t.cfi_def_cfa reg, off\n# define cfi_def_cfa_register(reg)\t.cfi_def_cfa_register reg\n# define cfi_def_cfa_offset(off)\t.cfi_def_cfa_offset off\n# define cfi_adjust_cfa_offset(off)\t.cfi_adjust_cfa_offset off\n# define cfi_offset(reg, off)\t\t.cfi_offset reg, off\n# define cfi_rel_offset(reg, off)\t.cfi_rel_offset reg, off\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/msvcc.sh"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 51,
                  "endLine": 9,
                  "snippet": {
                    "text": "#\n# The contents of this file are subject to the Mozilla Public License Version\n# 1.1 (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n# http://www.mozilla.org/MPL/\n#\n# Software distributed under the License is distributed on an \"AS IS\" basis,\n# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n",
                    "rendered": {
                      "text": "#\n# The contents of this file are subject to the Mozilla Public License Version\n# 1.1 (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n# http://www.mozilla.org/MPL/\n#\n# Software distributed under the License is distributed on an \"AS IS\" basis,\n# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n",
                      "markdown": "`#\n# The contents of this file are subject to the Mozilla Public License Version\n# 1.1 (the \"License\"); you may not use this file except in compliance with\n# the License. You may obtain a copy of the License at\n# http://www.mozilla.org/MPL/\n#\n# Software distributed under the License is distributed on an \"AS IS\" basis,\n# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/msvcc.sh"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 9,
                  "endLine": 347,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n\n",
                    "rendered": {
                      "text": "    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n\n",
                      "markdown": "`    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/msvcc.sh"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 9,
                  "endLine": 346,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    # the name of the compiled file otherwise, which breaks the dejagnu checks\n    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n",
                    "rendered": {
                      "text": "    # the name of the compiled file otherwise, which breaks the dejagnu checks\n    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n",
                      "markdown": "`    # the name of the compiled file otherwise, which breaks the dejagnu checks\n    # for excess warnings and errors.\n    eval \"(\\\"$cl\\\" $args 2>&1 1>&3 | \\\n          awk '{print \\$0} /D9002/ {error=1} END{exit error}' >&2) 3>&1 | \\\n          awk '/warning|error/'\"\n    result=$?\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/msvcc.sh"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 28,
                  "endLine": 316,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    fi\n\n    eval \"\\\"$cl\\\" -nologo -EP $includes $defines $src\" > $ppsrc || exit $?\n    output=\"$(echo $output | sed 's%/F[dpa][^ ]*%%g')\"\n    if [ $ml = \"armasm\" ]; then\n      args=\"-nologo -g -oldit $armasm_output $ppsrc -errorReport:prompt\"\n    elif [ $ml = \"armasm64\" ]; then\n",
                    "rendered": {
                      "text": "    fi\n\n    eval \"\\\"$cl\\\" -nologo -EP $includes $defines $src\" > $ppsrc || exit $?\n    output=\"$(echo $output | sed 's%/F[dpa][^ ]*%%g')\"\n    if [ $ml = \"armasm\" ]; then\n      args=\"-nologo -g -oldit $armasm_output $ppsrc -errorReport:prompt\"\n    elif [ $ml = \"armasm64\" ]; then\n",
                      "markdown": "`    fi\n\n    eval \"\\\"$cl\\\" -nologo -EP $includes $defines $src\" > $ppsrc || exit $?\n    output=\"$(echo $output | sed 's%/F[dpa][^ ]*%%g')\"\n    if [ $ml = \"armasm\" ]; then\n      args=\"-nologo -g -oldit $armasm_output $ppsrc -errorReport:prompt\"\n    elif [ $ml = \"armasm64\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/msvcc.sh"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 26,
                  "endLine": 151,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ;;\n    -c)\n      args=\"$args -c\"\n      args=\"$(echo $args | sed 's%/Fe%/Fo%g')\"\n      single=\"-c\"\n      shift 1\n    ;;\n",
                    "rendered": {
                      "text": "    ;;\n    -c)\n      args=\"$args -c\"\n      args=\"$(echo $args | sed 's%/Fe%/Fo%g')\"\n      single=\"-c\"\n      shift 1\n    ;;\n",
                      "markdown": "`    ;;\n    -c)\n      args=\"$args -c\"\n      args=\"$(echo $args | sed 's%/Fe%/Fo%g')\"\n      single=\"-c\"\n      shift 1\n    ;;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/msvcc.sh"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 24,
                  "endLine": 30,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# either the GNU General Public License Version 2 or later (the \"GPL\"), or\n# the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n# in which case the provisions of the GPL or the LGPL are applicable instead\n# of those above. If you wish to allow use of your version of this file only\n# under the terms of either the GPL or the LGPL, and not to allow others to\n# use your version of this file under the terms of the MPL, indicate your\n# decision by deleting the provisions above and replace them with the notice\n",
                    "rendered": {
                      "text": "# either the GNU General Public License Version 2 or later (the \"GPL\"), or\n# the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n# in which case the provisions of the GPL or the LGPL are applicable instead\n# of those above. If you wish to allow use of your version of this file only\n# under the terms of either the GPL or the LGPL, and not to allow others to\n# use your version of this file under the terms of the MPL, indicate your\n# decision by deleting the provisions above and replace them with the notice\n",
                      "markdown": "`# either the GNU General Public License Version 2 or later (the \"GPL\"), or\n# the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n# in which case the provisions of the GPL or the LGPL are applicable instead\n# of those above. If you wish to allow use of your version of this file only\n# under the terms of either the GPL or the LGPL, and not to allow others to\n# use your version of this file under the terms of the MPL, indicate your\n# decision by deleting the provisions above and replace them with the notice\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 25,
                  "endLine": 527,
                  "endColumn": 29,
                  "snippet": {
                    "text": "If you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\nTo subscribe/unsubscribe to our mailing lists, visit:\nhttps://sourceware.org/mailman/listinfo/libffi-announce\n",
                    "rendered": {
                      "text": "If you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\nTo subscribe/unsubscribe to our mailing lists, visit:\nhttps://sourceware.org/mailman/listinfo/libffi-announce\n",
                      "markdown": "`If you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\nTo subscribe/unsubscribe to our mailing lists, visit:\nhttps://sourceware.org/mailman/listinfo/libffi-announce\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 9,
                  "endLine": 525,
                  "endColumn": 18,
                  "snippet": {
                    "text": "happy to make corrections or additions upon request.\n\nIf you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\n",
                    "rendered": {
                      "text": "happy to make corrections or additions upon request.\n\nIf you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\n",
                      "markdown": "`happy to make corrections or additions upon request.\n\nIf you have a problem, or have found a bug, please file an issue on\nour issue tracker at https://github.com/libffi/libffi/issues.\n\nThe author can be reached at green@moxielogic.com.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 31,
                  "endLine": 484,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    m32r                Kazuhiro Inaoka\n    m68k                Andreas Schwab\n    m88k                Miod Vallat\n    metag               Hackers at Imagination Technologies\n    microblaze          Nathan Rossi\n    mips                Anthony Green, Casey Marshall\n    mips64              David Daney\n",
                    "rendered": {
                      "text": "    m32r                Kazuhiro Inaoka\n    m68k                Andreas Schwab\n    m88k                Miod Vallat\n    metag               Hackers at Imagination Technologies\n    microblaze          Nathan Rossi\n    mips                Anthony Green, Casey Marshall\n    mips64              David Daney\n",
                      "markdown": "`    m32r                Kazuhiro Inaoka\n    m68k                Andreas Schwab\n    m88k                Miod Vallat\n    metag               Hackers at Imagination Technologies\n    microblaze          Nathan Rossi\n    mips                Anthony Green, Casey Marshall\n    mips64              David Daney\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 31,
                  "endLine": 470,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n    aarch64             Marcus Shawcroft, James Greenhalgh\n    alpha               Richard Henderson\n    arc                 Hackers at Synopsis\n    arm                 Raffaele Sena\n    avr32               Bradley Smith\n    blackfin            Alexandre Keunecke I. de Mendonca\n",
                    "rendered": {
                      "text": "\n    aarch64             Marcus Shawcroft, James Greenhalgh\n    alpha               Richard Henderson\n    arc                 Hackers at Synopsis\n    arm                 Raffaele Sena\n    avr32               Bradley Smith\n    blackfin            Alexandre Keunecke I. de Mendonca\n",
                      "markdown": "`\n    aarch64             Marcus Shawcroft, James Greenhalgh\n    alpha               Richard Henderson\n    arc                 Hackers at Synopsis\n    arm                 Raffaele Sena\n    avr32               Bradley Smith\n    blackfin            Alexandre Keunecke I. de Mendonca\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 27,
                  "endLine": 202,
                  "endColumn": 31,
                  "snippet": {
                    "text": "History\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n",
                    "rendered": {
                      "text": "History\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n",
                      "markdown": "`History\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 18,
                  "endLine": 191,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Configure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n",
                    "rendered": {
                      "text": "Configure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n",
                      "markdown": "`Configure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 45,
                  "endLine": 183,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\nSPARC Solaris builds require the use of the GNU assembler and linker.\nPoint ``AS`` and ``LD`` environment variables at those tool prior to\nconfiguration.\n\nFor iOS builds, the ``libffi.xcodeproj`` Xcode project is available.\n",
                    "rendered": {
                      "text": "\n\nSPARC Solaris builds require the use of the GNU assembler and linker.\nPoint ``AS`` and ``LD`` environment variables at those tool prior to\nconfiguration.\n\nFor iOS builds, the ``libffi.xcodeproj`` Xcode project is available.\n",
                      "markdown": "`\n\nSPARC Solaris builds require the use of the GNU assembler and linker.\nPoint ``AS`` and ``LD`` environment variables at those tool prior to\nconfiguration.\n\nFor iOS builds, the ``libffi.xcodeproj`` Xcode project is available.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 44,
                  "endColumn": 3,
                  "snippet": {
                    "text": "===================\n\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n",
                    "rendered": {
                      "text": "===================\n\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n",
                      "markdown": "`===================\n\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 59,
                  "endLine": 27,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nThe libffi library provides a portable, high level programming\ninterface to various calling conventions. This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\nFFI stands for Foreign Function Interface.  A foreign function\n",
                    "rendered": {
                      "text": "\nThe libffi library provides a portable, high level programming\ninterface to various calling conventions. This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\nFFI stands for Foreign Function Interface.  A foreign function\n",
                      "markdown": "`\nThe libffi library provides a portable, high level programming\ninterface to various calling conventions. This allows a programmer to\ncall any function specified by a call interface description at run\ntime.\n\nFFI stands for Foreign Function Interface.  A foreign function\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\nbridge from the interpreter program to compiled code.\n\n",
                    "rendered": {
                      "text": "\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\nbridge from the interpreter program to compiled code.\n\n",
                      "markdown": "`\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\nbridge from the interpreter program to compiled code.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 26,
                  "endLine": 19,
                  "endColumn": 30,
                  "snippet": {
                    "text": "be found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\n",
                    "rendered": {
                      "text": "be found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\n",
                      "markdown": "`be found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 31,
                  "endLine": 367,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n    3.0.0 Feb-15-2008\n        Many changes, mostly thanks to the GCC project.\n        Cygnus Solutions is now Red Hat.\n\n      [10 years go by...]\n\n",
                    "rendered": {
                      "text": "\n    3.0.0 Feb-15-2008\n        Many changes, mostly thanks to the GCC project.\n        Cygnus Solutions is now Red Hat.\n\n      [10 years go by...]\n\n",
                      "markdown": "`\n    3.0.0 Feb-15-2008\n        Many changes, mostly thanks to the GCC project.\n        Cygnus Solutions is now Red Hat.\n\n      [10 years go by...]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 65,
                  "endLine": 277,
                  "snippet": {
                    "text": "          fixes.\n        Make the testsuite more robust: eliminate several spurious\n          failures, and respect the $CC and $CXX environment variables.\n        Archive off the manually maintained ChangeLog in favor of git\n          log.\n\n    3.0.13 Mar-17-2013\n        Add Meta support.\n",
                    "rendered": {
                      "text": "          fixes.\n        Make the testsuite more robust: eliminate several spurious\n          failures, and respect the $CC and $CXX environment variables.\n        Archive off the manually maintained ChangeLog in favor of git\n          log.\n\n    3.0.13 Mar-17-2013\n        Add Meta support.\n",
                      "markdown": "`          fixes.\n        Make the testsuite more robust: eliminate several spurious\n          failures, and respect the $CC and $CXX environment variables.\n        Archive off the manually maintained ChangeLog in favor of git\n          log.\n\n    3.0.13 Mar-17-2013\n        Add Meta support.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 19,
                  "endLine": 217,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n    3.4.4 Oct-23-2022\n        Important aarch64 fixes, including support for linux builds\n          with Link Time Optimization (-flto).\n        Fix x86 stdcall stack alignment.\n        Fix x86 Windows msvc assembler compatibility.\n        Fix moxie and or1k small structure args.\n",
                    "rendered": {
                      "text": "\n    3.4.4 Oct-23-2022\n        Important aarch64 fixes, including support for linux builds\n          with Link Time Optimization (-flto).\n        Fix x86 stdcall stack alignment.\n        Fix x86 Windows msvc assembler compatibility.\n        Fix moxie and or1k small structure args.\n",
                      "markdown": "`\n    3.4.4 Oct-23-2022\n        Important aarch64 fixes, including support for linux builds\n          with Link Time Optimization (-flto).\n        Fix x86 stdcall stack alignment.\n        Fix x86 Windows msvc assembler compatibility.\n        Fix moxie and or1k small structure args.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 7,
                  "endLine": 202,
                  "endColumn": 12,
                  "snippet": {
                    "text": "History\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n",
                    "rendered": {
                      "text": "History\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n",
                      "markdown": "`History\n=======\n\nSee the git log for details at http://github.com/libffi/libffi.\n\n    3.4.6 Feb-18-2024\n        Fix long double regression on mips64 and alpha.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 18,
                  "endLine": 191,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Configure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n",
                    "rendered": {
                      "text": "Configure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n",
                      "markdown": "`Configure has many other options. Use ``configure --help`` to see them all.\n\nOnce configure has finished, type \"make\". Note that you must be using\nGNU make.  You can ftp GNU make from ftp.gnu.org:/pub/gnu/make .\n\nTo ensure that libffi is working as advertised, type \"make check\".\nThis will require that you have DejaGNU installed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 7,
                  "endLine": 159,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nIt's also possible to build libffi on Windows platforms with\nMicrosoft's Visual C++ compiler.  In this case, use the msvcc.sh\nwrapper script during configuration like so:\n\n    path/to/configure CC=path/to/msvcc.sh CXX=path/to/msvcc.sh LD=link CPP=\"cl -nologo -EP\" CXXCPP=\"cl -nologo -EP\" CPPFLAGS=\"-DFFI_BUILDING_DLL\"\n\n",
                    "rendered": {
                      "text": "\nIt's also possible to build libffi on Windows platforms with\nMicrosoft's Visual C++ compiler.  In this case, use the msvcc.sh\nwrapper script during configuration like so:\n\n    path/to/configure CC=path/to/msvcc.sh CXX=path/to/msvcc.sh LD=link CPP=\"cl -nologo -EP\" CXXCPP=\"cl -nologo -EP\" CPPFLAGS=\"-DFFI_BUILDING_DLL\"\n\n",
                      "markdown": "`\nIt's also possible to build libffi on Windows platforms with\nMicrosoft's Visual C++ compiler.  In this case, use the msvcc.sh\nwrapper script during configuration like so:\n\n    path/to/configure CC=path/to/msvcc.sh CXX=path/to/msvcc.sh LD=link CPP=\"cl -nologo -EP\" CXXCPP=\"cl -nologo -EP\" CPPFLAGS=\"-DFFI_BUILDING_DLL\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 39,
                  "endLine": 137,
                  "endColumn": 44,
                  "snippet": {
                    "text": "distribution.  Note that building libffi requires a C99 compatible\ncompiler.\n\nIf you're building libffi directly from git hosted sources, configure\nwon't exist yet; run ./autogen.sh first.  This will require that you\ninstall autoconf, automake and libtool.\n\n",
                    "rendered": {
                      "text": "distribution.  Note that building libffi requires a C99 compatible\ncompiler.\n\nIf you're building libffi directly from git hosted sources, configure\nwon't exist yet; run ./autogen.sh first.  This will require that you\ninstall autoconf, automake and libtool.\n\n",
                      "markdown": "`distribution.  Note that building libffi requires a C99 compatible\ncompiler.\n\nIf you're building libffi directly from git hosted sources, configure\nwon't exist yet; run ./autogen.sh first.  This will require that you\ninstall autoconf, automake and libtool.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 31,
                  "endLine": 132,
                  "endColumn": 37,
                  "snippet": {
                    "text": "=================\n\nFirst you must configure the distribution for your particular\nsystem. Go to the directory you wish to build libffi in and run the\n\"configure\" program found in the root directory of the libffi source\ndistribution.  Note that building libffi requires a C99 compatible\ncompiler.\n",
                    "rendered": {
                      "text": "=================\n\nFirst you must configure the distribution for your particular\nsystem. Go to the directory you wish to build libffi in and run the\n\"configure\" program found in the root directory of the libffi source\ndistribution.  Note that building libffi requires a C99 compatible\ncompiler.\n",
                      "markdown": "`=================\n\nFirst you must configure the distribution for your particular\nsystem. Go to the directory you wish to build libffi in and run the\n\"configure\" program found in the root directory of the libffi source\ndistribution.  Note that building libffi requires a C99 compatible\ncompiler.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 6,
                  "endLine": 44,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n",
                    "rendered": {
                      "text": "\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n",
                      "markdown": "`\nLibffi has been ported to many different platforms.\n\nAt the time of release, the following basic configurations have been\ntested:\n\n| Architecture    | Operating System | Compiler                |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 33,
                  "endLine": 19,
                  "endColumn": 39,
                  "snippet": {
                    "text": "be found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\n",
                    "rendered": {
                      "text": "be found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\n",
                      "markdown": "`be found on entry to a function. A \"calling convention\" also specifies\nwhere the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments\nare to be passed to a function. For instance, an interpreter may be\ntold at run-time about the number and types of arguments used to call\na given function. Libffi can be used in such programs to provide a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 27,
                  "endLine": 31,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n#     make HOST=i386-mingw-cross\n#\n#   which can of course set at configure time as well using\n#\n#     configure --host=i386-mingw-cross\n#\n",
                    "rendered": {
                      "text": "#\n#     make HOST=i386-mingw-cross\n#\n#   which can of course set at configure time as well using\n#\n#     configure --host=i386-mingw-cross\n#\n",
                      "markdown": "`#\n#     make HOST=i386-mingw-cross\n#\n#   which can of course set at configure time as well using\n#\n#     configure --host=i386-mingw-cross\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 7,
                  "endLine": 280,
                  "endColumn": 11,
                  "snippet": {
                    "text": "        rm \"$tmp/mkfile.tmp\"\n      else\n        AC_MSG_NOTICE([reusing TOP/Makefile from earlier configure])\n        mv \"$tmp/mkfile.tmp\" \"$SRC/Makefile\"\n      fi\n    fi\n    AC_MSG_NOTICE([build in $SUB (HOST=$ax_enable_builddir_host)])\n",
                    "rendered": {
                      "text": "        rm \"$tmp/mkfile.tmp\"\n      else\n        AC_MSG_NOTICE([reusing TOP/Makefile from earlier configure])\n        mv \"$tmp/mkfile.tmp\" \"$SRC/Makefile\"\n      fi\n    fi\n    AC_MSG_NOTICE([build in $SUB (HOST=$ax_enable_builddir_host)])\n",
                      "markdown": "`        rm \"$tmp/mkfile.tmp\"\n      else\n        AC_MSG_NOTICE([reusing TOP/Makefile from earlier configure])\n        mv \"$tmp/mkfile.tmp\" \"$SRC/Makefile\"\n      fi\n    fi\n    AC_MSG_NOTICE([build in $SUB (HOST=$ax_enable_builddir_host)])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 7,
                  "endLine": 274,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      echo \"s!^$xxxx [[^|]]* | *$SUB *\\$!$xxxx ...... $SUB!\" >$tmp/conftemp.sed\n      $SED -f \"$tmp/conftemp.sed\" \"$SRC/Makefile\" >$tmp/mkfile.tmp\n        cp \"$tmp/conftemp.sed\" \"$SRC/makefiles.sed~\"         ## DEBUGGING\n        cp \"$tmp/mkfile.tmp\"   \"$SRC/makefiles.out~\"         ## DEBUGGING\n      if cmp -s \"$SRC/Makefile\" \"$tmp/mkfile.tmp\" 2>/dev/null ; then\n        AC_MSG_NOTICE([keeping TOP/Makefile from earlier configure])\n        rm \"$tmp/mkfile.tmp\"\n",
                    "rendered": {
                      "text": "      echo \"s!^$xxxx [[^|]]* | *$SUB *\\$!$xxxx ...... $SUB!\" >$tmp/conftemp.sed\n      $SED -f \"$tmp/conftemp.sed\" \"$SRC/Makefile\" >$tmp/mkfile.tmp\n        cp \"$tmp/conftemp.sed\" \"$SRC/makefiles.sed~\"         ## DEBUGGING\n        cp \"$tmp/mkfile.tmp\"   \"$SRC/makefiles.out~\"         ## DEBUGGING\n      if cmp -s \"$SRC/Makefile\" \"$tmp/mkfile.tmp\" 2>/dev/null ; then\n        AC_MSG_NOTICE([keeping TOP/Makefile from earlier configure])\n        rm \"$tmp/mkfile.tmp\"\n",
                      "markdown": "`      echo \"s!^$xxxx [[^|]]* | *$SUB *\\$!$xxxx ...... $SUB!\" >$tmp/conftemp.sed\n      $SED -f \"$tmp/conftemp.sed\" \"$SRC/Makefile\" >$tmp/mkfile.tmp\n        cp \"$tmp/conftemp.sed\" \"$SRC/makefiles.sed~\"         ## DEBUGGING\n        cp \"$tmp/mkfile.tmp\"   \"$SRC/makefiles.out~\"         ## DEBUGGING\n      if cmp -s \"$SRC/Makefile\" \"$tmp/mkfile.tmp\" 2>/dev/null ; then\n        AC_MSG_NOTICE([keeping TOP/Makefile from earlier configure])\n        rm \"$tmp/mkfile.tmp\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 7,
                  "endLine": 273,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      # echo \"/^$xxxx *$ax_enable_builddir_host /d\" >$tmp/conftemp.sed\n      echo \"s!^$xxxx [[^|]]* | *$SUB *\\$!$xxxx ...... $SUB!\" >$tmp/conftemp.sed\n      $SED -f \"$tmp/conftemp.sed\" \"$SRC/Makefile\" >$tmp/mkfile.tmp\n        cp \"$tmp/conftemp.sed\" \"$SRC/makefiles.sed~\"         ## DEBUGGING\n        cp \"$tmp/mkfile.tmp\"   \"$SRC/makefiles.out~\"         ## DEBUGGING\n      if cmp -s \"$SRC/Makefile\" \"$tmp/mkfile.tmp\" 2>/dev/null ; then\n        AC_MSG_NOTICE([keeping TOP/Makefile from earlier configure])\n",
                    "rendered": {
                      "text": "      # echo \"/^$xxxx *$ax_enable_builddir_host /d\" >$tmp/conftemp.sed\n      echo \"s!^$xxxx [[^|]]* | *$SUB *\\$!$xxxx ...... $SUB!\" >$tmp/conftemp.sed\n      $SED -f \"$tmp/conftemp.sed\" \"$SRC/Makefile\" >$tmp/mkfile.tmp\n        cp \"$tmp/conftemp.sed\" \"$SRC/makefiles.sed~\"         ## DEBUGGING\n        cp \"$tmp/mkfile.tmp\"   \"$SRC/makefiles.out~\"         ## DEBUGGING\n      if cmp -s \"$SRC/Makefile\" \"$tmp/mkfile.tmp\" 2>/dev/null ; then\n        AC_MSG_NOTICE([keeping TOP/Makefile from earlier configure])\n",
                      "markdown": "`      # echo \"/^$xxxx *$ax_enable_builddir_host /d\" >$tmp/conftemp.sed\n      echo \"s!^$xxxx [[^|]]* | *$SUB *\\$!$xxxx ...... $SUB!\" >$tmp/conftemp.sed\n      $SED -f \"$tmp/conftemp.sed\" \"$SRC/Makefile\" >$tmp/mkfile.tmp\n        cp \"$tmp/conftemp.sed\" \"$SRC/makefiles.sed~\"         ## DEBUGGING\n        cp \"$tmp/mkfile.tmp\"   \"$SRC/makefiles.out~\"         ## DEBUGGING\n      if cmp -s \"$SRC/Makefile\" \"$tmp/mkfile.tmp\" 2>/dev/null ; then\n        AC_MSG_NOTICE([keeping TOP/Makefile from earlier configure])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 34,
                  "endLine": 266,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n        (test -s $SRC/Makefile~ && mv $SRC/Makefile~ $SRC/Makefile) 2>/dev/null\n      fi\n    else\n      xxxx=\"\\\\#\\\\#\\\\#\\\\#\"\n",
                    "rendered": {
                      "text": "        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n        (test -s $SRC/Makefile~ && mv $SRC/Makefile~ $SRC/Makefile) 2>/dev/null\n      fi\n    else\n      xxxx=\"\\\\#\\\\#\\\\#\\\\#\"\n",
                      "markdown": "`        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n        (test -s $SRC/Makefile~ && mv $SRC/Makefile~ $SRC/Makefile) 2>/dev/null\n      fi\n    else\n      xxxx=\"\\\\#\\\\#\\\\#\\\\#\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 28,
                  "endLine": 263,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n      if grep '^; echo \"MAKE ' $SRC/Makefile >/dev/null ; then\n        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n        (test -s $SRC/Makefile~ && mv $SRC/Makefile~ $SRC/Makefile) 2>/dev/null\n",
                    "rendered": {
                      "text": "      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n      if grep '^; echo \"MAKE ' $SRC/Makefile >/dev/null ; then\n        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n        (test -s $SRC/Makefile~ && mv $SRC/Makefile~ $SRC/Makefile) 2>/dev/null\n",
                      "markdown": "`      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n      if grep '^; echo \"MAKE ' $SRC/Makefile >/dev/null ; then\n        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n        (test -s $SRC/Makefile~ && mv $SRC/Makefile~ $SRC/Makefile) 2>/dev/null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 8,
                  "endLine": 262,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      fi ; xxxx=\"####\"\n      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n      if grep '^; echo \"MAKE ' $SRC/Makefile >/dev/null ; then\n        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n",
                    "rendered": {
                      "text": "      fi ; xxxx=\"####\"\n      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n      if grep '^; echo \"MAKE ' $SRC/Makefile >/dev/null ; then\n        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n",
                      "markdown": "`      fi ; xxxx=\"####\"\n      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n      if grep '^; echo \"MAKE ' $SRC/Makefile >/dev/null ; then\n        AC_MSG_NOTICE([buggy sed found - it deletes tab in \"a\" text parts])\n        $SED -e '/^@ HOST=/s/^/\t/' -e '/^; /s/^/\t/' $SRC/Makefile \\\n          >$SRC/Makefile~\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 7,
                  "endLine": 258,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      $SED -f $tmp/conftemp.sed Makefile >$SRC/Makefile\n      if test -f \"$SRC/m4_ifval([$2],[$2],[END])\" ; then\n        AC_MSG_NOTICE([extend TOP/Makefile with TOP/m4_ifval([$2],[$2],[END])])\n        cat $SRC/END >>$SRC/Makefile\n      fi ; xxxx=\"####\"\n      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n",
                    "rendered": {
                      "text": "      $SED -f $tmp/conftemp.sed Makefile >$SRC/Makefile\n      if test -f \"$SRC/m4_ifval([$2],[$2],[END])\" ; then\n        AC_MSG_NOTICE([extend TOP/Makefile with TOP/m4_ifval([$2],[$2],[END])])\n        cat $SRC/END >>$SRC/Makefile\n      fi ; xxxx=\"####\"\n      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n",
                      "markdown": "`      $SED -f $tmp/conftemp.sed Makefile >$SRC/Makefile\n      if test -f \"$SRC/m4_ifval([$2],[$2],[END])\" ; then\n        AC_MSG_NOTICE([extend TOP/Makefile with TOP/m4_ifval([$2],[$2],[END])])\n        cat $SRC/END >>$SRC/Makefile\n      fi ; xxxx=\"####\"\n      echo \"$xxxx CONFIGURATIONS FOR TOPLEVEL MAKEFILE: \" >>$SRC/Makefile\n      # sanity check\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 5,
                  "endLine": 254,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n      cp \"$tmp/conftemp.sed\" \"$SRC/makefile.sed~\"            ## DEBUGGING\n      $SED -f $tmp/conftemp.sed Makefile >$SRC/Makefile\n      if test -f \"$SRC/m4_ifval([$2],[$2],[END])\" ; then\n        AC_MSG_NOTICE([extend TOP/Makefile with TOP/m4_ifval([$2],[$2],[END])])\n",
                    "rendered": {
                      "text": "\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n      cp \"$tmp/conftemp.sed\" \"$SRC/makefile.sed~\"            ## DEBUGGING\n      $SED -f $tmp/conftemp.sed Makefile >$SRC/Makefile\n      if test -f \"$SRC/m4_ifval([$2],[$2],[END])\" ; then\n        AC_MSG_NOTICE([extend TOP/Makefile with TOP/m4_ifval([$2],[$2],[END])])\n",
                      "markdown": "`\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n      cp \"$tmp/conftemp.sed\" \"$SRC/makefile.sed~\"            ## DEBUGGING\n      $SED -f $tmp/conftemp.sed Makefile >$SRC/Makefile\n      if test -f \"$SRC/m4_ifval([$2],[$2],[END])\" ; then\n        AC_MSG_NOTICE([extend TOP/Makefile with TOP/m4_ifval([$2],[$2],[END])])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 17,
                  "endLine": 251,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t; echo \"# rm -r \\$\\$i\"; done ; echo \"# (sleep 3)\" ; sleep 3 \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^/\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n      cp \"$tmp/conftemp.sed\" \"$SRC/makefile.sed~\"            ## DEBUGGING\n",
                    "rendered": {
                      "text": "\t; echo \"# rm -r \\$\\$i\"; done ; echo \"# (sleep 3)\" ; sleep 3 \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^/\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n      cp \"$tmp/conftemp.sed\" \"$SRC/makefile.sed~\"            ## DEBUGGING\n",
                      "markdown": "`\t; echo \"# rm -r \\$\\$i\"; done ; echo \"# (sleep 3)\" ; sleep 3 \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^/\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n      cp \"$tmp/conftemp.sed\" \"$SRC/makefile.sed~\"            ## DEBUGGING\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 17,
                  "endLine": 250,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"# rm -r \\$\\$i\"; done ; echo \"# (sleep 3)\" ; sleep 3 \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^/\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n",
                    "rendered": {
                      "text": "\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"# rm -r \\$\\$i\"; done ; echo \"# (sleep 3)\" ; sleep 3 \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^/\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n",
                      "markdown": "`\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"# rm -r \\$\\$i\"; done ; echo \"# (sleep 3)\" ; sleep 3 \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^/\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"\\$\\$i\" | grep \"^../\" > /dev/null && continue \\\\\\\\\\\\\n\t; echo \"rm -r \\$\\$i\"; (rm -r \"\\$\\$i\") ; done ; rm Makefile\n_EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 39,
                  "endLine": 243,
                  "endColumn": 44,
                  "snippet": {
                    "text": "/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@ (all local builds)\" \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@ (all local builds)\" \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n",
                      "markdown": "`/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@ (all local builds)\" \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 11,
                  "endLine": 243,
                  "endColumn": 17,
                  "snippet": {
                    "text": "/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@ (all local builds)\" \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@ (all local builds)\" \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n",
                      "markdown": "`/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@ (all local builds)\" \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 24,
                  "endLine": 238,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\ndnl special rule add-on: \"distclean\" removes all local builddirs completely\n/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\ndnl special rule add-on: \"distclean\" removes all local builddirs completely\n/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n",
                      "markdown": "`\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\ndnl special rule add-on: \"distclean\" removes all local builddirs completely\n/distclean[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 47,
                  "endLine": 235,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                    "rendered": {
                      "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                      "markdown": "`\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 11,
                  "endLine": 235,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                    "rendered": {
                      "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                      "markdown": "`\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 45,
                  "endLine": 231,
                  "endColumn": 50,
                  "snippet": {
                    "text": "/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh ./config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh ./config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                      "markdown": "`/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh ./config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 11,
                  "endLine": 231,
                  "endColumn": 17,
                  "snippet": {
                    "text": "/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh ./config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh ./config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                      "markdown": "`/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh ./config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 24,
                  "endLine": 226,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\ndnl special rule add-on: \"dist-foo\" copies all the archives to $(PUB). (source tree)\n/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\ndnl special rule add-on: \"dist-foo\" copies all the archives to $(PUB). (source tree)\n/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n",
                      "markdown": "`\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\ndnl special rule add-on: \"dist-foo\" copies all the archives to $(PUB). (source tree)\n/dist-[[a-zA-Z0-9]]*[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 47,
                  "endLine": 223,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                    "rendered": {
                      "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                      "markdown": "`\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 11,
                  "endLine": 223,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                    "rendered": {
                      "text": "\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n",
                      "markdown": "`\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### .*|\" Makefile |tail -1| sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; fi ; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; for f in \\$\\$i/\\$(PACKAGE)-\\$(VERSION).tar.* \\\\\\\\\\\\\n\t; do test -f \"\\$\\$f\" && mv \"\\$\\$f\" \\$(PUB). ; done ; break ; done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 45,
                  "endLine": 219,
                  "endColumn": 50,
                  "snippet": {
                    "text": "/dist[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "/dist[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                      "markdown": "`/dist[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 11,
                  "endLine": 219,
                  "endColumn": 17,
                  "snippet": {
                    "text": "/dist[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "/dist[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n",
                      "markdown": "`/dist[]_ALL *:/a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; found=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$found \\$(PACKAGE)-\\$(VERSION).tar.*\" \\\\\\\\\\\\\n\t; if test \"\\$\\$found\" -eq \"0\" ; then : \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 57,
                  "endLine": 212,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; (cd \"\\$\\$i\" && test ! -f configure && \\$(MAKE) \\$\\$use) || exit; done\ndnl special rule add-on: \"dist\" copies the tarball to $(PUB). (source tree)\n",
                    "rendered": {
                      "text": "\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; (cd \"\\$\\$i\" && test ! -f configure && \\$(MAKE) \\$\\$use) || exit; done\ndnl special rule add-on: \"dist\" copies the tarball to $(PUB). (source tree)\n",
                      "markdown": "`\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n\t; (cd \"\\$\\$i\" && test ! -f configure && \\$(MAKE) \\$\\$use) || exit; done\ndnl special rule add-on: \"dist\" copies the tarball to $(PUB). (source tree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 46,
                  "endLine": 210,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n",
                      "markdown": "`\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 11,
                  "endLine": 210,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n",
                      "markdown": "`\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n\t; test \".\\$\\$BUILD\" = \".\" && BUILD=\".\" \\\\\\\\\\\\\n\t; test \"\\$\\$use\" = \"\\$\\@\" && BUILD=$x echo \"\\$\\$BUILD\" | tail -1 $x \\\\\\\\\\\\\n\t; for i in \\$\\$BUILD ; do test \".\\$\\$i\" = \".\" && continue \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 45,
                  "endLine": 207,
                  "endColumn": 50,
                  "snippet": {
                    "text": "a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n",
                      "markdown": "`a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 11,
                  "endLine": 207,
                  "endColumn": 17,
                  "snippet": {
                    "text": "a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n",
                    "rendered": {
                      "text": "a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n",
                      "markdown": "`a\\\\\n\t@ HOST=\"\\$(HOST)\\\" \\\\\\\\\\\\\n\t; test \".\\$\\$HOST\" = \".\" && HOST=$x sh $AUX/config.guess $x \\\\\\\\\\\\\n\t; BUILD=$x grep \"^#### \\$\\$HOST \" Makefile | sed -e 's/.*|//' $x \\\\\\\\\\\\\n\t; use=$x basename \"\\$\\@\" _ALL $x; n=$x echo \\$\\$BUILD | wc -w $x \\\\\\\\\\\\\n\t; echo \"MAKE \\$\\$HOST : \\$\\$n * \\$\\@\"; if test \"\\$\\$n\" -eq \"0\" ; then : \\\\\\\\\\\\\n\t; BUILD=$x grep \"^####.*|\" Makefile |tail -1| sed -e 's/.*|//' $x ; fi \\\\\\\\\\\\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 13,
                  "endLine": 169,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    fi\n    if test ! -f \"$SRC/Makefile\" ; then\n      AC_MSG_NOTICE([create TOP/Makefile guessed from local Makefile])\n      x='`' ; cat >$tmp/conftemp.sed <<_EOF\n/^\\$/n\nx\n/^\\$/bS\n",
                    "rendered": {
                      "text": "    fi\n    if test ! -f \"$SRC/Makefile\" ; then\n      AC_MSG_NOTICE([create TOP/Makefile guessed from local Makefile])\n      x='`' ; cat >$tmp/conftemp.sed <<_EOF\n/^\\$/n\nx\n/^\\$/bS\n",
                      "markdown": "`    fi\n    if test ! -f \"$SRC/Makefile\" ; then\n      AC_MSG_NOTICE([create TOP/Makefile guessed from local Makefile])\n      x='`' ; cat >$tmp/conftemp.sed <<_EOF\n/^\\$/n\nx\n/^\\$/bS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 5,
                  "endLine": 165,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      eval \"${MAKE-make} -f $tmp/conftemp.mk 2>/dev/null >/dev/null\"\n      if grep '^REMOVED,,,' \"$SRC/Makefile\" >/dev/null\n      then rm $SRC/Makefile ; fi\n      cp $tmp/conftemp.mk $SRC/makefiles.mk~      ## DEBUGGING\n    fi\n    if test ! -f \"$SRC/Makefile\" ; then\n      AC_MSG_NOTICE([create TOP/Makefile guessed from local Makefile])\n",
                    "rendered": {
                      "text": "      eval \"${MAKE-make} -f $tmp/conftemp.mk 2>/dev/null >/dev/null\"\n      if grep '^REMOVED,,,' \"$SRC/Makefile\" >/dev/null\n      then rm $SRC/Makefile ; fi\n      cp $tmp/conftemp.mk $SRC/makefiles.mk~      ## DEBUGGING\n    fi\n    if test ! -f \"$SRC/Makefile\" ; then\n      AC_MSG_NOTICE([create TOP/Makefile guessed from local Makefile])\n",
                      "markdown": "`      eval \"${MAKE-make} -f $tmp/conftemp.mk 2>/dev/null >/dev/null\"\n      if grep '^REMOVED,,,' \"$SRC/Makefile\" >/dev/null\n      then rm $SRC/Makefile ; fi\n      cp $tmp/conftemp.mk $SRC/makefiles.mk~      ## DEBUGGING\n    fi\n    if test ! -f \"$SRC/Makefile\" ; then\n      AC_MSG_NOTICE([create TOP/Makefile guessed from local Makefile])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 8,
                  "endLine": 163,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\techo \"$SRC/Makefile : $SRC/Makefile.in\" > $tmp/conftemp.mk\n\techo \"\t[]@ echo 'REMOVED,,,' >\\$[]@\" >> $tmp/conftemp.mk\n      eval \"${MAKE-make} -f $tmp/conftemp.mk 2>/dev/null >/dev/null\"\n      if grep '^REMOVED,,,' \"$SRC/Makefile\" >/dev/null\n      then rm $SRC/Makefile ; fi\n      cp $tmp/conftemp.mk $SRC/makefiles.mk~      ## DEBUGGING\n    fi\n",
                    "rendered": {
                      "text": "\techo \"$SRC/Makefile : $SRC/Makefile.in\" > $tmp/conftemp.mk\n\techo \"\t[]@ echo 'REMOVED,,,' >\\$[]@\" >> $tmp/conftemp.mk\n      eval \"${MAKE-make} -f $tmp/conftemp.mk 2>/dev/null >/dev/null\"\n      if grep '^REMOVED,,,' \"$SRC/Makefile\" >/dev/null\n      then rm $SRC/Makefile ; fi\n      cp $tmp/conftemp.mk $SRC/makefiles.mk~      ## DEBUGGING\n    fi\n",
                      "markdown": "`\techo \"$SRC/Makefile : $SRC/Makefile.in\" > $tmp/conftemp.mk\n\techo \"\t[]@ echo 'REMOVED,,,' >\\$[]@\" >> $tmp/conftemp.mk\n      eval \"${MAKE-make} -f $tmp/conftemp.mk 2>/dev/null >/dev/null\"\n      if grep '^REMOVED,,,' \"$SRC/Makefile\" >/dev/null\n      then rm $SRC/Makefile ; fi\n      cp $tmp/conftemp.mk $SRC/makefiles.mk~      ## DEBUGGING\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 37,
                  "endLine": 122,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n      case \"[$]0\" in # restart\n       [[\\\\/]]* | ?:[[\\\\/]]*) # Absolute name\n",
                    "rendered": {
                      "text": "      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n      case \"[$]0\" in # restart\n       [[\\\\/]]* | ?:[[\\\\/]]*) # Absolute name\n",
                      "markdown": "`      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n      case \"[$]0\" in # restart\n       [[\\\\/]]* | ?:[[\\\\/]]*) # Absolute name\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 37,
                  "endLine": 121,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n      case \"[$]0\" in # restart\n",
                    "rendered": {
                      "text": "      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n      case \"[$]0\" in # restart\n",
                      "markdown": "`      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n      case \"[$]0\" in # restart\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 37,
                  "endLine": 120,
                  "endColumn": 41,
                  "snippet": {
                    "text": "              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n",
                    "rendered": {
                      "text": "              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n",
                      "markdown": "`              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n      AC_MSG_RESULT(....exec $SHELL $srcdir/[$]0 \"--srcdir=$srcdir\" \"--enable-builddir=$SUB\" ${1+\"[$]@\"})\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 37,
                  "endLine": 119,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      srcdir=`echo \"$SUB\" |\n              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n",
                    "rendered": {
                      "text": "      srcdir=`echo \"$SUB\" |\n              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n",
                      "markdown": "`      srcdir=`echo \"$SUB\" |\n              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n      test -f $srcdir/conftest.log && mv $srcdir/conftest.log .\n      test -f $srcdir/$cache_file  && mv $srcdir/$cache_file  .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 13,
                  "endLine": 117,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        AC_MSG_ERROR([could not change to default builddir \"./$SUB\"])\n      fi\n      srcdir=`echo \"$SUB\" |\n              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n",
                    "rendered": {
                      "text": "        AC_MSG_ERROR([could not change to default builddir \"./$SUB\"])\n      fi\n      srcdir=`echo \"$SUB\" |\n              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n",
                      "markdown": "`        AC_MSG_ERROR([could not change to default builddir \"./$SUB\"])\n      fi\n      srcdir=`echo \"$SUB\" |\n              sed -e 's,^\\./,,;s,[[^/]]$,&/,;s,[[^/]]*/,../,g;s,[[/]]$,,;'`\n      # going to restart from subdirectory location\n      test -f $srcdir/config.log   && mv $srcdir/config.log   .\n      test -f $srcdir/confdefs.h   && mv $srcdir/confdefs.h   .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 8,
                  "endLine": 110,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      AS_MKDIR_P([$SUB])\n      echo __.$SUB.__ > $SUB/conftest.tmp\n      cd $SUB\n      if grep __.$SUB.__ conftest.tmp >/dev/null 2>/dev/null ; then\n        rm conftest.tmp\n        AC_MSG_RESULT([continue configure in default builddir \"./$SUB\"])\n      else\n",
                    "rendered": {
                      "text": "      AS_MKDIR_P([$SUB])\n      echo __.$SUB.__ > $SUB/conftest.tmp\n      cd $SUB\n      if grep __.$SUB.__ conftest.tmp >/dev/null 2>/dev/null ; then\n        rm conftest.tmp\n        AC_MSG_RESULT([continue configure in default builddir \"./$SUB\"])\n      else\n",
                      "markdown": "`      AS_MKDIR_P([$SUB])\n      echo __.$SUB.__ > $SUB/conftest.tmp\n      cd $SUB\n      if grep __.$SUB.__ conftest.tmp >/dev/null 2>/dev/null ; then\n        rm conftest.tmp\n        AC_MSG_RESULT([continue configure in default builddir \"./$SUB\"])\n      else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 59,
                  "endLine": 43,
                  "endColumn": 67,
                  "snippet": {
                    "text": "#   The automatic rules are usually scanning the toplevel Makefile for lines\n#   like '#### $host |$builddir' to recognize the place where to recurse\n#   into. Usually, the last one is the only one used. However, almost all\n#   targets have an additional \"*-all\" rule which makes the script to\n#   recurse into _all_ variants of the current HOST (!!) setting. The \"-all\"\n#   suffix can be overridden for the macro as well.\n#\n",
                    "rendered": {
                      "text": "#   The automatic rules are usually scanning the toplevel Makefile for lines\n#   like '#### $host |$builddir' to recognize the place where to recurse\n#   into. Usually, the last one is the only one used. However, almost all\n#   targets have an additional \"*-all\" rule which makes the script to\n#   recurse into _all_ variants of the current HOST (!!) setting. The \"-all\"\n#   suffix can be overridden for the macro as well.\n#\n",
                      "markdown": "`#   The automatic rules are usually scanning the toplevel Makefile for lines\n#   like '#### $host |$builddir' to recognize the place where to recurse\n#   into. Usually, the last one is the only one used. However, almost all\n#   targets have an additional \"*-all\" rule which makes the script to\n#   recurse into _all_ variants of the current HOST (!!) setting. The \"-all\"\n#   suffix can be overridden for the macro as well.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/m4/ax_enable_builddir.m4"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 40,
                  "endLine": 31,
                  "endColumn": 46,
                  "snippet": {
                    "text": "#\n#     make HOST=i386-mingw-cross\n#\n#   which can of course set at configure time as well using\n#\n#     configure --host=i386-mingw-cross\n#\n",
                    "rendered": {
                      "text": "#\n#     make HOST=i386-mingw-cross\n#\n#   which can of course set at configure time as well using\n#\n#     configure --host=i386-mingw-cross\n#\n",
                      "markdown": "`#\n#     make HOST=i386-mingw-cross\n#\n#   which can of course set at configure time as well using\n#\n#     configure --host=i386-mingw-cross\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_3.c"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 1,
                  "endLine": 122,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  n = 41;\n\n  uc = 9;\n  sc = 10;\n  us = 11;\n  ss = 12;\n  ui = 13;\n",
                    "rendered": {
                      "text": "  n = 41;\n\n  uc = 9;\n  sc = 10;\n  us = 11;\n  ss = 12;\n  ui = 13;\n",
                      "markdown": "`  n = 41;\n\n  uc = 9;\n  sc = 10;\n  us = 11;\n  ss = 12;\n  ui = 13;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_3.c"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 1,
                  "endLine": 36,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  va_start (ap, n);\n\n  uc = va_arg (ap, unsigned);\n  sc = va_arg (ap, signed);\n\n  us = va_arg (ap, unsigned);\n  ss = va_arg (ap, signed);\n",
                    "rendered": {
                      "text": "  va_start (ap, n);\n\n  uc = va_arg (ap, unsigned);\n  sc = va_arg (ap, signed);\n\n  us = va_arg (ap, unsigned);\n  ss = va_arg (ap, signed);\n",
                      "markdown": "`  va_start (ap, n);\n\n  uc = va_arg (ap, unsigned);\n  sc = va_arg (ap, signed);\n\n  us = va_arg (ap, unsigned);\n  ss = va_arg (ap, signed);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_3.c"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  ss = 12;\n  ui = 13;\n  si = 14;\n  ul = 15;\n  sl = 16;\n  f1 = 2.12;\n  d1 = 3.13;\n",
                    "rendered": {
                      "text": "  ss = 12;\n  ui = 13;\n  si = 14;\n  ul = 15;\n  sl = 16;\n  f1 = 2.12;\n  d1 = 3.13;\n",
                      "markdown": "`  ss = 12;\n  ui = 13;\n  si = 14;\n  ul = 15;\n  sl = 16;\n  f1 = 2.12;\n  d1 = 3.13;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/va_3.c"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 1,
                  "endLine": 44,
                  "endColumn": 5,
                  "snippet": {
                    "text": "  ui = va_arg (ap, unsigned int);\n  si = va_arg (ap, signed int);\n\n  ul = va_arg (ap, unsigned long);\n  sl = va_arg (ap, signed long);\n\n  f = va_arg (ap, double);\t/* C standard promotes float->double\n",
                    "rendered": {
                      "text": "  ui = va_arg (ap, unsigned int);\n  si = va_arg (ap, signed int);\n\n  ul = va_arg (ap, unsigned long);\n  sl = va_arg (ap, signed long);\n\n  f = va_arg (ap, double);\t/* C standard promotes float->double\n",
                      "markdown": "`  ui = va_arg (ap, unsigned int);\n  si = va_arg (ap, signed int);\n\n  ul = va_arg (ap, unsigned long);\n  sl = va_arg (ap, signed long);\n\n  f = va_arg (ap, double);\t/* C standard promotes float->double\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/pr1172638.c"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 34,
                  "endLine": 22,
                  "endColumn": 38,
                  "snippet": {
                    "text": "} RECT;\n\nstatic RECT ABI_ATTR pr_test(int i __UNUSED__, RECT ar __UNUSED__, \n\t\t\t     RECT* br __UNUSED__, POINT cp __UNUSED__, \n\t\t\t     RECT dr __UNUSED__, RECT *er __UNUSED__, \n\t\t\t     POINT fp, RECT gr __UNUSED__)\n{\n",
                    "rendered": {
                      "text": "} RECT;\n\nstatic RECT ABI_ATTR pr_test(int i __UNUSED__, RECT ar __UNUSED__, \n\t\t\t     RECT* br __UNUSED__, POINT cp __UNUSED__, \n\t\t\t     RECT dr __UNUSED__, RECT *er __UNUSED__, \n\t\t\t     POINT fp, RECT gr __UNUSED__)\n{\n",
                      "markdown": "`} RECT;\n\nstatic RECT ABI_ATTR pr_test(int i __UNUSED__, RECT ar __UNUSED__, \n\t\t\t     RECT* br __UNUSED__, POINT cp __UNUSED__, \n\t\t\t     RECT dr __UNUSED__, RECT *er __UNUSED__, \n\t\t\t     POINT fp, RECT gr __UNUSED__)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/return_sc.c"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 6,
                  "endLine": 30,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t     &ffi_type_schar, args) == FFI_OK);\n\n  for (sc = (signed char) -127;\n       sc < (signed char) 127; sc++)\n    {\n      ffi_call(&cif, FFI_FN(return_sc), &rint, values);\n      CHECK((signed char)rint == sc);\n",
                    "rendered": {
                      "text": "\t\t     &ffi_type_schar, args) == FFI_OK);\n\n  for (sc = (signed char) -127;\n       sc < (signed char) 127; sc++)\n    {\n      ffi_call(&cif, FFI_FN(return_sc), &rint, values);\n      CHECK((signed char)rint == sc);\n",
                      "markdown": "`\t\t     &ffi_type_schar, args) == FFI_OK);\n\n  for (sc = (signed char) -127;\n       sc < (signed char) 127; sc++)\n    {\n      ffi_call(&cif, FFI_FN(return_sc), &rint, values);\n      CHECK((signed char)rint == sc);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sparc/v8.S"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 29,
                  "endLine": 191,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tret\n\t restore\n\n\t! Struct returning functions expect and skip the unimp here.\n\t! To make it worse, conforming callees examine the unimp and\n\t! make sure the low 12 bits of the unimp match the size of\n\t! the struct being returned.\n",
                    "rendered": {
                      "text": "\tret\n\t restore\n\n\t! Struct returning functions expect and skip the unimp here.\n\t! To make it worse, conforming callees examine the unimp and\n\t! make sure the low 12 bits of the unimp match the size of\n\t! the struct being returned.\n",
                      "markdown": "`\tret\n\t restore\n\n\t! Struct returning functions expect and skip the unimp here.\n\t! To make it worse, conforming callees examine the unimp and\n\t! make sure the low 12 bits of the unimp match the size of\n\t! the struct being returned.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sparc/v8.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 46,
                  "endLine": 3,
                  "endColumn": 51,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   v8.S - Copyright (c) 2013  The Written Word, Inc.\n\t  Copyright (c) 1996, 1997, 2003, 2004, 2008  Red Hat, Inc.\n\n   SPARC Foreign Function Interface\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   v8.S - Copyright (c) 2013  The Written Word, Inc.\n\t  Copyright (c) 1996, 1997, 2003, 2004, 2008  Red Hat, Inc.\n\n   SPARC Foreign Function Interface\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   v8.S - Copyright (c) 2013  The Written Word, Inc.\n\t  Copyright (c) 1996, 1997, 2003, 2004, 2008  Red Hat, Inc.\n\n   SPARC Foreign Function Interface\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/powerpc/sysv.S"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 3,
                  "endLine": 130,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tlwz\t%r29,-12(%r28)\n\tlwz\t%r28,-16(%r28)\n\t.cfi_remember_state\n\t/* At this point we don't have a cfa register.  Say all our\n\t   saved regs have been restored.  */\n\t.cfi_same_value 65\n\t.cfi_same_value 31\n",
                    "rendered": {
                      "text": "\tlwz\t%r29,-12(%r28)\n\tlwz\t%r28,-16(%r28)\n\t.cfi_remember_state\n\t/* At this point we don't have a cfa register.  Say all our\n\t   saved regs have been restored.  */\n\t.cfi_same_value 65\n\t.cfi_same_value 31\n",
                      "markdown": "`\tlwz\t%r29,-12(%r28)\n\tlwz\t%r28,-16(%r28)\n\t.cfi_remember_state\n\t/* At this point we don't have a cfa register.  Say all our\n\t   saved regs have been restored.  */\n\t.cfi_same_value 65\n\t.cfi_same_value 31\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/win64.S"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 48,
                  "endLine": 202,
                  "endColumn": 53,
                  "snippet": {
                    "text": "C(ffi_closure_win64):\n\tcfi_startproc\n\t_CET_ENDBR\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmovq\t%rcx, 8(%rsp)\n\tmovq\t%rdx, 16(%rsp)\n\tmovq\t%r8, 24(%rsp)\n",
                    "rendered": {
                      "text": "C(ffi_closure_win64):\n\tcfi_startproc\n\t_CET_ENDBR\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmovq\t%rcx, 8(%rsp)\n\tmovq\t%rdx, 16(%rsp)\n\tmovq\t%r8, 24(%rsp)\n",
                      "markdown": "`C(ffi_closure_win64):\n\tcfi_startproc\n\t_CET_ENDBR\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmovq\t%rcx, 8(%rsp)\n\tmovq\t%rdx, 16(%rsp)\n\tmovq\t%r8, 24(%rsp)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/win64.S"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 48,
                  "endLine": 181,
                  "endColumn": 53,
                  "snippet": {
                    "text": "C(ffi_go_closure_win64):\n\tcfi_startproc\n\t_CET_ENDBR\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmovq\t%rcx, 8(%rsp)\n\tmovq\t%rdx, 16(%rsp)\n\tmovq\t%r8, 24(%rsp)\n",
                    "rendered": {
                      "text": "C(ffi_go_closure_win64):\n\tcfi_startproc\n\t_CET_ENDBR\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmovq\t%rcx, 8(%rsp)\n\tmovq\t%rdx, 16(%rsp)\n\tmovq\t%r8, 24(%rsp)\n",
                      "markdown": "`C(ffi_go_closure_win64):\n\tcfi_startproc\n\t_CET_ENDBR\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmovq\t%rcx, 8(%rsp)\n\tmovq\t%rdx, 16(%rsp)\n\tmovq\t%r8, 24(%rsp)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/win64.S"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 36,
                  "endLine": 28,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\t.balign 8\n",
                    "rendered": {
                      "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\t.balign 8\n",
                      "markdown": "`\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\t.balign 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv_intel.S"
                },
                "region": {
                  "startLine": 765,
                  "startColumn": 59,
                  "endLine": 765,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n\n#if 0\n/* Sadly, OSX cctools-as doesn't understand .cfi directives at all.  */\n\n#ifdef __APPLE__\n.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n",
                    "rendered": {
                      "text": "\n\n#if 0\n/* Sadly, OSX cctools-as doesn't understand .cfi directives at all.  */\n\n#ifdef __APPLE__\n.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n",
                      "markdown": "`\n\n#if 0\n/* Sadly, OSX cctools-as doesn't understand .cfi directives at all.  */\n\n#ifdef __APPLE__\n.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv_intel.S"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 36,
                  "endLine": 86,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t/* New stack frame based off ebp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-4, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n",
                    "rendered": {
                      "text": "\t/* New stack frame based off ebp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-4, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n",
                      "markdown": "`\t/* New stack frame based off ebp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-4, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv_intel.S"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 36,
                  "endLine": 45,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\tALIGN 8\n",
                    "rendered": {
                      "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\tALIGN 8\n",
                      "markdown": "`\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\tALIGN 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv_intel.S"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 61,
                  "endLine": 4,
                  "endColumn": 66,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2017, 2022  Anthony Green\n          - Copyright (c) 2013  The Written Word, Inc.\n          - Copyright (c) 1996,1998,2001-2003,2005,2008,2010  Red Hat, Inc.\n\n   X86 Foreign Function Interface\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2017, 2022  Anthony Green\n          - Copyright (c) 2013  The Written Word, Inc.\n          - Copyright (c) 1996,1998,2001-2003,2005,2008,2010  Red Hat, Inc.\n\n   X86 Foreign Function Interface\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2017, 2022  Anthony Green\n          - Copyright (c) 2013  The Written Word, Inc.\n          - Copyright (c) 1996,1998,2001-2003,2005,2008,2010  Red Hat, Inc.\n\n   X86 Foreign Function Interface\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 42,
                  "endLine": 218,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\taddik r10, r1, 4 /* void* rsize */\n\n\t/* call the wrap_call function */\n\taddik r1, r1, -28 /* allocate args + link reg */\n\tswi r15, r1, 0 /* store the link register in the frame */\n\tbrald r15, r3\n\tnop /* branch has delay slot */\n",
                    "rendered": {
                      "text": "\taddik r10, r1, 4 /* void* rsize */\n\n\t/* call the wrap_call function */\n\taddik r1, r1, -28 /* allocate args + link reg */\n\tswi r15, r1, 0 /* store the link register in the frame */\n\tbrald r15, r3\n\tnop /* branch has delay slot */\n",
                      "markdown": "`\taddik r10, r1, 4 /* void* rsize */\n\n\t/* call the wrap_call function */\n\taddik r1, r1, -28 /* allocate args + link reg */\n\tswi r15, r1, 0 /* store the link register in the frame */\n\tbrald r15, r3\n\tnop /* branch has delay slot */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 18,
                  "endLine": 295,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\taddik r1, r1, 12\n\n\t/* return from sub-routine (with delay slot) */\n",
                    "rendered": {
                      "text": "\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\taddik r1, r1, 12\n\n\t/* return from sub-routine (with delay slot) */\n",
                      "markdown": "`\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\taddik r1, r1, 12\n\n\t/* return from sub-routine (with delay slot) */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 18,
                  "endLine": 294,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\taddik r1, r1, 12\n\n",
                    "rendered": {
                      "text": "\n\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\taddik r1, r1, 12\n\n",
                      "markdown": "`\n\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\taddik r1, r1, 12\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 18,
                  "endLine": 196,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\taddik r1, r1, -12\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\n\t/* store register args on stack */\n\taddik r1, r1, -24\n",
                    "rendered": {
                      "text": "\taddik r1, r1, -12\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\n\t/* store register args on stack */\n\taddik r1, r1, -24\n",
                      "markdown": "`\taddik r1, r1, -12\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\n\t/* store register args on stack */\n\taddik r1, r1, -24\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 18,
                  "endLine": 195,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\taddik r11, r1, 28 /* save stack args start location (excluding regs/link) */\n\taddik r1, r1, -12\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\n\t/* store register args on stack */\n",
                    "rendered": {
                      "text": "\taddik r11, r1, 28 /* save stack args start location (excluding regs/link) */\n\taddik r1, r1, -12\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\n\t/* store register args on stack */\n",
                      "markdown": "`\taddik r11, r1, 28 /* save stack args start location (excluding regs/link) */\n\taddik r1, r1, -12\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\n\t/* store register args on stack */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 18,
                  "endLine": 169,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\tlwi r22, r1, 12\n\tlwi r23, r1, 16\n\taddik r1, r1, 20\n",
                    "rendered": {
                      "text": "\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\tlwi r22, r1, 12\n\tlwi r23, r1, 16\n\taddik r1, r1, 20\n",
                      "markdown": "`\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\tlwi r22, r1, 12\n\tlwi r23, r1, 16\n\taddik r1, r1, 20\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 18,
                  "endLine": 168,
                  "endColumn": 23,
                  "snippet": {
                    "text": "ffi_call_SYSV_end:\n\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\tlwi r22, r1, 12\n\tlwi r23, r1, 16\n",
                    "rendered": {
                      "text": "ffi_call_SYSV_end:\n\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\tlwi r22, r1, 12\n\tlwi r23, r1, 16\n",
                      "markdown": "`ffi_call_SYSV_end:\n\t/* callee restores */\n\tlwi r19, r1, 0 /* frame pointer */\n\tlwi r20, r1, 4 /* PIC register */\n\tlwi r21, r1, 8 /* PIC register */\n\tlwi r22, r1, 12\n\tlwi r23, r1, 16\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 18,
                  "endLine": 49,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\taddik r1, r1, -20\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\tswi r22, r1, 12 /* save for locals */\n\tswi r23, r1, 16 /* save for locals */\n\t\n",
                    "rendered": {
                      "text": "\taddik r1, r1, -20\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\tswi r22, r1, 12 /* save for locals */\n\tswi r23, r1, 16 /* save for locals */\n\t\n",
                      "markdown": "`\taddik r1, r1, -20\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\tswi r22, r1, 12 /* save for locals */\n\tswi r23, r1, 16 /* save for locals */\n\t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/microblaze/sysv.S"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 18,
                  "endLine": 48,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t/* push callee saves */\n\taddik r1, r1, -20\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\tswi r22, r1, 12 /* save for locals */\n\tswi r23, r1, 16 /* save for locals */\n",
                    "rendered": {
                      "text": "\t/* push callee saves */\n\taddik r1, r1, -20\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\tswi r22, r1, 12 /* save for locals */\n\tswi r23, r1, 16 /* save for locals */\n",
                      "markdown": "`\t/* push callee saves */\n\taddik r1, r1, -20\n\tswi r19, r1, 0 /* Frame Pointer */\n\tswi r20, r1, 4 /* PIC register */\n\tswi r21, r1, 8 /* PIC register */\n\tswi r22, r1, 12 /* save for locals */\n\tswi r23, r1, 16 /* save for locals */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 879,
                  "startColumn": 4,
                  "endLine": 879,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t{\n\t  reg += nregs;\n\t  while (cif->vfp_used & (1 << reg))\n\t    reg += 1;\n\t  cif->vfp_reg_free = reg;\n\t}\n      return 0;\n",
                    "rendered": {
                      "text": "\t{\n\t  reg += nregs;\n\t  while (cif->vfp_used & (1 << reg))\n\t    reg += 1;\n\t  cif->vfp_reg_free = reg;\n\t}\n      return 0;\n",
                      "markdown": "`\t{\n\t  reg += nregs;\n\t  while (cif->vfp_used & (1 << reg))\n\t    reg += 1;\n\t  cif->vfp_reg_free = reg;\n\t}\n      return 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 877,
                  "startColumn": 2,
                  "endLine": 877,
                  "endColumn": 7,
                  "snippet": {
                    "text": "      /* Update vfp_reg_free. */\n      if (cif->vfp_used & (1 << cif->vfp_reg_free))\n\t{\n\t  reg += nregs;\n\t  while (cif->vfp_used & (1 << reg))\n\t    reg += 1;\n\t  cif->vfp_reg_free = reg;\n",
                    "rendered": {
                      "text": "      /* Update vfp_reg_free. */\n      if (cif->vfp_used & (1 << cif->vfp_reg_free))\n\t{\n\t  reg += nregs;\n\t  while (cif->vfp_used & (1 << reg))\n\t    reg += 1;\n\t  cif->vfp_reg_free = reg;\n",
                      "markdown": "`      /* Update vfp_reg_free. */\n      if (cif->vfp_used & (1 << cif->vfp_reg_free))\n\t{\n\t  reg += nregs;\n\t  while (cif->vfp_used & (1 << reg))\n\t    reg += 1;\n\t  cif->vfp_reg_free = reg;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 6,
                  "endLine": 866,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t  new_used |= (1 << s);\n\t  if (cif->vfp_used & (1 << s))\n\t    {\n\t      reg += align;\n\t      goto next_reg;\n\t    }\n\t}\n",
                    "rendered": {
                      "text": "\t  new_used |= (1 << s);\n\t  if (cif->vfp_used & (1 << s))\n\t    {\n\t      reg += align;\n\t      goto next_reg;\n\t    }\n\t}\n",
                      "markdown": "`\t  new_used |= (1 << s);\n\t  if (cif->vfp_used & (1 << s))\n\t    {\n\t      reg += align;\n\t      goto next_reg;\n\t    }\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 23,
                  "endLine": 861,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  while (reg + nregs <= 16)\n    {\n      int s, new_used = 0;\n      for (s = reg; s < reg + nregs; s++)\n\t{\n\t  new_used |= (1 << s);\n\t  if (cif->vfp_used & (1 << s))\n",
                    "rendered": {
                      "text": "  while (reg + nregs <= 16)\n    {\n      int s, new_used = 0;\n      for (s = reg; s < reg + nregs; s++)\n\t{\n\t  new_used |= (1 << s);\n\t  if (cif->vfp_used & (1 << s))\n",
                      "markdown": "`  while (reg + nregs <= 16)\n    {\n      int s, new_used = 0;\n      for (s = reg; s < reg + nregs; s++)\n\t{\n\t  new_used |= (1 << s);\n\t  if (cif->vfp_used & (1 << s))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 848,
                  "startColumn": 16,
                  "endLine": 848,
                  "endColumn": 21,
                  "snippet": {
                    "text": "static int\nplace_vfp_arg (ffi_cif *cif, int h)\n{\n  unsigned short reg = cif->vfp_reg_free;\n  int align = 1, nregs = h >> 8;\n\n  if ((h & 0xff) == FFI_TYPE_DOUBLE)\n",
                    "rendered": {
                      "text": "static int\nplace_vfp_arg (ffi_cif *cif, int h)\n{\n  unsigned short reg = cif->vfp_reg_free;\n  int align = 1, nregs = h >> 8;\n\n  if ((h & 0xff) == FFI_TYPE_DOUBLE)\n",
                      "markdown": "`static int\nplace_vfp_arg (ffi_cif *cif, int h)\n{\n  unsigned short reg = cif->vfp_reg_free;\n  int align = 1, nregs = h >> 8;\n\n  if ((h & 0xff) == FFI_TYPE_DOUBLE)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 11,
                  "endLine": 482,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t    char *vfp_space, void **avalue)\n{\n  ffi_type **arg_types = cif->arg_types;\n  int i, n, vi = 0;\n  char *argp, *regp, *eo_regp;\n  char done_with_regs = 0;\n  char stack_used = 0;\n",
                    "rendered": {
                      "text": "\t\t\t    char *vfp_space, void **avalue)\n{\n  ffi_type **arg_types = cif->arg_types;\n  int i, n, vi = 0;\n  char *argp, *regp, *eo_regp;\n  char done_with_regs = 0;\n  char stack_used = 0;\n",
                      "markdown": "`\t\t\t    char *vfp_space, void **avalue)\n{\n  ffi_type **arg_types = cif->arg_types;\n  int i, n, vi = 0;\n  char *argp, *regp, *eo_regp;\n  char done_with_regs = 0;\n  char stack_used = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/ffi.c"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 11,
                  "endLine": 179,
                  "endColumn": 15,
                  "snippet": {
                    "text": "                   void **avalue, char *stack, char *vfp_space)\n{\n  ffi_type **arg_types = cif->arg_types;\n  int i, n, vi = 0;\n  char *argp, *regp, *eo_regp;\n  char stack_used = 0;\n  char done_with_regs = 0;\n",
                    "rendered": {
                      "text": "                   void **avalue, char *stack, char *vfp_space)\n{\n  ffi_type **arg_types = cif->arg_types;\n  int i, n, vi = 0;\n  char *argp, *regp, *eo_regp;\n  char stack_used = 0;\n  char done_with_regs = 0;\n",
                      "markdown": "`                   void **avalue, char *stack, char *vfp_space)\n{\n  ffi_type **arg_types = cif->arg_types;\n  int i, n, vi = 0;\n  char *argp, *regp, *eo_regp;\n  char stack_used = 0;\n  char done_with_regs = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv_msvc_arm32.S"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 15,
                  "endLine": 254,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    add     r2, sp, #64+8           ; load result\n    bl      ffi_closure_ret\n    ldmfd   sp!, {ip,lr}\n    mov     sp, ip                  ; restore stack pointer\n    mov     pc, lr\n    NESTED_END ffi_closure_VFP_fake\n\n",
                    "rendered": {
                      "text": "    add     r2, sp, #64+8           ; load result\n    bl      ffi_closure_ret\n    ldmfd   sp!, {ip,lr}\n    mov     sp, ip                  ; restore stack pointer\n    mov     pc, lr\n    NESTED_END ffi_closure_VFP_fake\n\n",
                      "markdown": "`    add     r2, sp, #64+8           ; load result\n    bl      ffi_closure_ret\n    ldmfd   sp!, {ip,lr}\n    mov     sp, ip                  ; restore stack pointer\n    mov     pc, lr\n    NESTED_END ffi_closure_VFP_fake\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv_msvc_arm32.S"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 11,
                  "endLine": 222,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    stmdb   sp!, {r0-r3}\t\t\t; save argument regs\n    ldr\tr0, [ip, #4]\t\t\t; load cif\n    ldr\tr1, [ip, #8]\t\t\t; load fun\n    mov\tr2, ip\t\t\t\t; load user_data\n    b\tffi_go_closure_VFP_0\n    NESTED_END ffi_go_closure_VFP\n\n",
                    "rendered": {
                      "text": "    stmdb   sp!, {r0-r3}\t\t\t; save argument regs\n    ldr\tr0, [ip, #4]\t\t\t; load cif\n    ldr\tr1, [ip, #8]\t\t\t; load fun\n    mov\tr2, ip\t\t\t\t; load user_data\n    b\tffi_go_closure_VFP_0\n    NESTED_END ffi_go_closure_VFP\n\n",
                      "markdown": "`    stmdb   sp!, {r0-r3}\t\t\t; save argument regs\n    ldr\tr0, [ip, #4]\t\t\t; load cif\n    ldr\tr1, [ip, #8]\t\t\t; load fun\n    mov\tr2, ip\t\t\t\t; load user_data\n    b\tffi_go_closure_VFP_0\n    NESTED_END ffi_go_closure_VFP\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv_msvc_arm32.S"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 15,
                  "endLine": 203,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    bl      ffi_closure_ret         ; move result to correct register or memory for type\n\n    ldmfd   sp!, {ip,lr}\n    mov     sp, ip                  ; restore stack pointer\n    mov     pc, lr\n    NESTED_END ffi_closure_SYSV_fake\n\n",
                    "rendered": {
                      "text": "    bl      ffi_closure_ret         ; move result to correct register or memory for type\n\n    ldmfd   sp!, {ip,lr}\n    mov     sp, ip                  ; restore stack pointer\n    mov     pc, lr\n    NESTED_END ffi_closure_SYSV_fake\n\n",
                      "markdown": "`    bl      ffi_closure_ret         ; move result to correct register or memory for type\n\n    ldmfd   sp!, {ip,lr}\n    mov     sp, ip                  ; restore stack pointer\n    mov     pc, lr\n    NESTED_END ffi_closure_SYSV_fake\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv_msvc_arm32.S"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 15,
                  "endLine": 171,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    stmdb   sp!, {r0-r3}            ; save argument regs\n    ldr     r0, [ip, #4]            ; load cif\n    ldr     r1, [ip, #8]            ; load fun\n    mov     r2, ip                  ; load user_data\n    b       ffi_go_closure_SYSV_0\n    NESTED_END ffi_go_closure_SYSV\n\n",
                    "rendered": {
                      "text": "    stmdb   sp!, {r0-r3}            ; save argument regs\n    ldr     r0, [ip, #4]            ; load cif\n    ldr     r1, [ip, #8]            ; load fun\n    mov     r2, ip                  ; load user_data\n    b       ffi_go_closure_SYSV_0\n    NESTED_END ffi_go_closure_SYSV\n\n",
                      "markdown": "`    stmdb   sp!, {r0-r3}            ; save argument regs\n    ldr     r0, [ip, #4]            ; load cif\n    ldr     r1, [ip, #8]            ; load fun\n    mov     r2, ip                  ; load user_data\n    b       ffi_go_closure_SYSV_0\n    NESTED_END ffi_go_closure_SYSV\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv_msvc_arm32.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 42,
                  "endLine": 2,
                  "endColumn": 47,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 1998, 2008, 2011 Red Hat, Inc.\n        Copyright (c) 2011 Plausible Labs Cooperative, Inc.\n        Copyright (c) 2019 Microsoft Corporation.\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 1998, 2008, 2011 Red Hat, Inc.\n        Copyright (c) 2011 Plausible Labs Cooperative, Inc.\n        Copyright (c) 2019 Microsoft Corporation.\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 1998, 2008, 2011 Red Hat, Inc.\n        Copyright (c) 2011 Plausible Labs Cooperative, Inc.\n        Copyright (c) 2019 Microsoft Corporation.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux32.S"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 54,
                  "endLine": 380,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t.word   L$CFI11-L$FB1\n\t.byte\t0x83\t;# DW_CFA_offset, column 0x3\n\t.uleb128 0x0\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf; save r2 at [r30-20]\n\t.uleb128 0x2\n\t.sleb128 -5\n\n",
                    "rendered": {
                      "text": "\t.word   L$CFI11-L$FB1\n\t.byte\t0x83\t;# DW_CFA_offset, column 0x3\n\t.uleb128 0x0\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf; save r2 at [r30-20]\n\t.uleb128 0x2\n\t.sleb128 -5\n\n",
                      "markdown": "`\t.word   L$CFI11-L$FB1\n\t.byte\t0x83\t;# DW_CFA_offset, column 0x3\n\t.uleb128 0x0\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf; save r2 at [r30-20]\n\t.uleb128 0x2\n\t.sleb128 -5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux32.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 25,
                  "endLine": 3,
                  "endColumn": 30,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   hpux32.S - Copyright (c) 2006 Free Software Foundation, Inc.\n\t                (c) 2008 Red Hat, Inc.\n   based on src/pa/linux.S\n\n   HP-UX PA Foreign Function Interface\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   hpux32.S - Copyright (c) 2006 Free Software Foundation, Inc.\n\t                (c) 2008 Red Hat, Inc.\n   based on src/pa/linux.S\n\n   HP-UX PA Foreign Function Interface\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   hpux32.S - Copyright (c) 2006 Free Software Foundation, Inc.\n\t                (c) 2008 Red Hat, Inc.\n   based on src/pa/linux.S\n\n   HP-UX PA Foreign Function Interface\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libffi.xcodeproj/project.pbxproj"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 33,
                  "endLine": 479,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\tshellPath = /bin/sh;\n\t\t\tshellScript = \"if [ ! -f \\\"./compile\\\" ]\\nthen\\nautoreconf -i -f -v\\nif [ -f \\\"../ltmain.sh\\\" ]\\nthen\\necho \\\"fixing ltmain.sh for some reason\\\"\\nmv ../ltmain.sh ./\\nautoreconf -i -f -v\\nfi\\n/usr/bin/python generate-darwin-source-and-headers.py --only-osx\\nfi\";\n\t\t};\n\t\tFDB52FB11F6144FA00AA92E6 /* Run Script */ = {\n\t\t\tisa = PBXShellScriptBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n",
                    "rendered": {
                      "text": "\t\t\tshellPath = /bin/sh;\n\t\t\tshellScript = \"if [ ! -f \\\"./compile\\\" ]\\nthen\\nautoreconf -i -f -v\\nif [ -f \\\"../ltmain.sh\\\" ]\\nthen\\necho \\\"fixing ltmain.sh for some reason\\\"\\nmv ../ltmain.sh ./\\nautoreconf -i -f -v\\nfi\\n/usr/bin/python generate-darwin-source-and-headers.py --only-osx\\nfi\";\n\t\t};\n\t\tFDB52FB11F6144FA00AA92E6 /* Run Script */ = {\n\t\t\tisa = PBXShellScriptBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n",
                      "markdown": "`\t\t\tshellPath = /bin/sh;\n\t\t\tshellScript = \"if [ ! -f \\\"./compile\\\" ]\\nthen\\nautoreconf -i -f -v\\nif [ -f \\\"../ltmain.sh\\\" ]\\nthen\\necho \\\"fixing ltmain.sh for some reason\\\"\\nmv ../ltmain.sh ./\\nautoreconf -i -f -v\\nfi\\n/usr/bin/python generate-darwin-source-and-headers.py --only-osx\\nfi\";\n\t\t};\n\t\tFDB52FB11F6144FA00AA92E6 /* Run Script */ = {\n\t\t\tisa = PBXShellScriptBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libffi.xcodeproj/project.pbxproj"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 33,
                  "endLine": 452,
                  "endColumn": 41,
                  "snippet": {
                    "text": "/* End PBXProject section */\n\n/* Begin PBXShellScriptBuildPhase section */\n\t\t43B5D3FB1D35480D00D1E1FD /* Run Script */ = {\n\t\t\tisa = PBXShellScriptBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n",
                    "rendered": {
                      "text": "/* End PBXProject section */\n\n/* Begin PBXShellScriptBuildPhase section */\n\t\t43B5D3FB1D35480D00D1E1FD /* Run Script */ = {\n\t\t\tisa = PBXShellScriptBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n",
                      "markdown": "`/* End PBXProject section */\n\n/* Begin PBXShellScriptBuildPhase section */\n\t\t43B5D3FB1D35480D00D1E1FD /* Run Script */ = {\n\t\t\tisa = PBXShellScriptBuildPhase;\n\t\t\tbuildActionMask = 2147483647;\n\t\t\tfiles = (\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libffi.xcodeproj/project.pbxproj"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 35,
                  "endLine": 393,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = FDB52FC21F6144FA00AA92E6 /* Build configuration list for PBXNativeTarget \"libffi-tvOS\" */;\n\t\t\tbuildPhases = (\n\t\t\t\tFDB52FB11F6144FA00AA92E6 /* Run Script */,\n\t\t\t\tFDB52FB21F6144FA00AA92E6 /* Sources */,\n\t\t\t\tFDB52FC11F6144FA00AA92E6 /* CopyFiles */,\n\t\t\t);\n",
                    "rendered": {
                      "text": "\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = FDB52FC21F6144FA00AA92E6 /* Build configuration list for PBXNativeTarget \"libffi-tvOS\" */;\n\t\t\tbuildPhases = (\n\t\t\t\tFDB52FB11F6144FA00AA92E6 /* Run Script */,\n\t\t\t\tFDB52FB21F6144FA00AA92E6 /* Sources */,\n\t\t\t\tFDB52FC11F6144FA00AA92E6 /* CopyFiles */,\n\t\t\t);\n",
                      "markdown": "`\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = FDB52FC21F6144FA00AA92E6 /* Build configuration list for PBXNativeTarget \"libffi-tvOS\" */;\n\t\t\tbuildPhases = (\n\t\t\t\tFDB52FB11F6144FA00AA92E6 /* Run Script */,\n\t\t\t\tFDB52FB21F6144FA00AA92E6 /* Sources */,\n\t\t\t\tFDB52FC11F6144FA00AA92E6 /* CopyFiles */,\n\t\t\t);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libffi.xcodeproj/project.pbxproj"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 35,
                  "endLine": 359,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = DB13B18B1849DF1E0010F42D /* Build configuration list for PBXNativeTarget \"libffi-iOS\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t43B5D3FB1D35480D00D1E1FD /* Run Script */,\n\t\t\t\tDB13B1621849DF1E0010F42D /* Sources */,\n\t\t\t\tDB13B1641849DF1E0010F42D /* CopyFiles */,\n\t\t\t);\n",
                    "rendered": {
                      "text": "\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = DB13B18B1849DF1E0010F42D /* Build configuration list for PBXNativeTarget \"libffi-iOS\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t43B5D3FB1D35480D00D1E1FD /* Run Script */,\n\t\t\t\tDB13B1621849DF1E0010F42D /* Sources */,\n\t\t\t\tDB13B1641849DF1E0010F42D /* CopyFiles */,\n\t\t\t);\n",
                      "markdown": "`\t\t\tisa = PBXNativeTarget;\n\t\t\tbuildConfigurationList = DB13B18B1849DF1E0010F42D /* Build configuration list for PBXNativeTarget \"libffi-iOS\" */;\n\t\t\tbuildPhases = (\n\t\t\t\t43B5D3FB1D35480D00D1E1FD /* Run Script */,\n\t\t\t\tDB13B1621849DF1E0010F42D /* Sources */,\n\t\t\t\tDB13B1641849DF1E0010F42D /* CopyFiles */,\n\t\t\t);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 29,
                  "snippet": {
                    "text": "  - '%CYG_ROOT%/bin/bash -lc \"cygcheck -dc cygwin\"'\n  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\n",
                    "rendered": {
                      "text": "  - '%CYG_ROOT%/bin/bash -lc \"cygcheck -dc cygwin\"'\n  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\n",
                      "markdown": "`  - '%CYG_ROOT%/bin/bash -lc \"cygcheck -dc cygwin\"'\n  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 39,
                  "endLine": 70,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\nbuild_script:\n",
                    "rendered": {
                      "text": "  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\nbuild_script:\n",
                      "markdown": "`  - echo call VsDevCmd to set VS150COMNTOOLS\n  - call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\VsDevCmd.bat\"\n  - ps: $env:VSCOMNTOOLS=(Get-Content (\"env:VS\" + \"$env:VSVER\" + \"0COMNTOOLS\"))\n  - echo \"Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%\"\n  - call \"%VSCOMNTOOLS%..\\..\\vc\\Auxiliary\\Build\\vcvarsall.bat\" %VCVARS_PLATFORM%\n\nbuild_script:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 43,
                  "endLine": 5,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n# We're currently only testing libffi built with Microsoft's\n# tools.\n# This matrix should be expanded to include at least:\n#  32- and 64-bit gcc/cygwin\n#  32- and 64-bit gcc/mingw\n#  32- and 64-bit clang/mingw\n",
                    "rendered": {
                      "text": "\n# We're currently only testing libffi built with Microsoft's\n# tools.\n# This matrix should be expanded to include at least:\n#  32- and 64-bit gcc/cygwin\n#  32- and 64-bit gcc/mingw\n#  32- and 64-bit clang/mingw\n",
                      "markdown": "`\n# We're currently only testing libffi built with Microsoft's\n# tools.\n# This matrix should be expanded to include at least:\n#  32- and 64-bit gcc/cygwin\n#  32- and 64-bit gcc/mingw\n#  32- and 64-bit clang/mingw\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 40,
                  "endLine": 84,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n\non_finish:\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cat `find ./ -name libffi.log`)\"\n",
                    "rendered": {
                      "text": "\n\non_finish:\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cat `find ./ -name libffi.log`)\"\n",
                      "markdown": "`\n\non_finish:\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cat `find ./ -name libffi.log`)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 40,
                  "endLine": 79,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp SITEDIR=$PWD/.appveyor)\"\n\n\n",
                    "rendered": {
                      "text": "  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp SITEDIR=$PWD/.appveyor)\"\n\n\n",
                      "markdown": "`  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp SITEDIR=$PWD/.appveyor)\"\n\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 40,
                  "endLine": 78,
                  "endColumn": 44,
                  "snippet": {
                    "text": "c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp ",
                    "rendered": {
                      "text": "c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp ",
                      "markdown": "`c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; TERM=none make check RUNTESTFLAGS='-v -v -v -v --target '$HOST  DEJAGNU=$PWD/.appveyor/site.exp `"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.appveyor.yml"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 40,
                  "endLine": 76,
                  "endColumn": 44,
                  "snippet": {
                    "text": "/configure CC='%MSVCC%' CXX='%MSVCC%' LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='/cygdrive/c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n",
                    "rendered": {
                      "text": "/configure CC='%MSVCC%' CXX='%MSVCC%' LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='/cygdrive/c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n",
                      "markdown": "`/configure CC='%MSVCC%' CXX='%MSVCC%' LD='link' CPP='cl -nologo -EP' CXXCPP='cl -nologo -EP' CPPFLAGS='-DFFI_BUILDING_DLL' AR='/cygdrive/c/projects/libffi/.travis/ar-lib lib' NM='dumpbin -symbols' STRIP=':' --build=$BUILD --host=$HOST $DEBUG_ARG $SHARED_ARG)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp src/%SRC_ARCHITECTURE%/ffitarget.h include)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; make)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp $HOST/.libs/libffi.lib $HOST/testsuite/libffi-8.lib || true)\"\n  - c:\\cygwin64\\bin\\sh -lc \"(cd $OLDPWD; cp `find . -name 'libffi-?.dll'` $HOST/testsuite/ || true)\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 29,
                  "endLine": 90,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\nm4_warn([obsolete],\n[The preprocessor macro `STDC_HEADERS' is obsolete.\n  Except in unusual embedded environments, you can safely include all\n  ISO C90 headers unconditionally.])dnl\n# Autoupdate added the next two lines to ensure that your configure\n# script's behavior did not change.  They are probably safe to remove.\n",
                    "rendered": {
                      "text": "\nm4_warn([obsolete],\n[The preprocessor macro `STDC_HEADERS' is obsolete.\n  Except in unusual embedded environments, you can safely include all\n  ISO C90 headers unconditionally.])dnl\n# Autoupdate added the next two lines to ensure that your configure\n# script's behavior did not change.  They are probably safe to remove.\n",
                      "markdown": "`\nm4_warn([obsolete],\n[The preprocessor macro `STDC_HEADERS' is obsolete.\n  Except in unusual embedded environments, you can safely include all\n  ISO C90 headers unconditionally.])dnl\n# Autoupdate added the next two lines to ensure that your configure\n# script's behavior did not change.  They are probably safe to remove.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 68,
                  "endLine": 451,
                  "endColumn": 3,
                  "snippet": {
                    "text": "AC_OUTPUT\n\n# Copy this file instead of using AC_CONFIG_LINK in order to support\n# compiling with MSVC, which won't understand cygwin style symlinks.\ncp ${srcdir}/src/$TARGETDIR/ffitarget.h include/ffitarget.h\n",
                    "rendered": {
                      "text": "AC_OUTPUT\n\n# Copy this file instead of using AC_CONFIG_LINK in order to support\n# compiling with MSVC, which won't understand cygwin style symlinks.\ncp ${srcdir}/src/$TARGETDIR/ffitarget.h include/ffitarget.h\n",
                      "markdown": "`AC_OUTPUT\n\n# Copy this file instead of using AC_CONFIG_LINK in order to support\n# compiling with MSVC, which won't understand cygwin style symlinks.\ncp ${srcdir}/src/$TARGETDIR/ffitarget.h include/ffitarget.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 56,
                  "endLine": 345,
                  "endColumn": 61,
                  "snippet": {
                    "text": "changequote(<,>)\nTARGET_OBJ=\nfor i in $SOURCES; do\n  TARGET_OBJ=\"${TARGET_OBJ} src/${TARGETDIR}/\"`echo $i | sed 's/[cS]$/lo/'`\ndone\nchangequote([,])\nAC_SUBST(TARGET_OBJ)\n",
                    "rendered": {
                      "text": "changequote(<,>)\nTARGET_OBJ=\nfor i in $SOURCES; do\n  TARGET_OBJ=\"${TARGET_OBJ} src/${TARGETDIR}/\"`echo $i | sed 's/[cS]$/lo/'`\ndone\nchangequote([,])\nAC_SUBST(TARGET_OBJ)\n",
                      "markdown": "`changequote(<,>)\nTARGET_OBJ=\nfor i in $SOURCES; do\n  TARGET_OBJ=\"${TARGET_OBJ} src/${TARGETDIR}/\"`echo $i | sed 's/[cS]$/lo/'`\ndone\nchangequote([,])\nAC_SUBST(TARGET_OBJ)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 7,
                  "endLine": 253,
                  "endColumn": 12,
                  "snippet": {
                    "text": "bar:\nEOF\n\n        cat > conftest2.c  << EOF\nextern void foo();\nint main(){foo();}\nEOF\n",
                    "rendered": {
                      "text": "bar:\nEOF\n\n        cat > conftest2.c  << EOF\nextern void foo();\nint main(){foo();}\nEOF\n",
                      "markdown": "`bar:\nEOF\n\n        cat > conftest2.c  << EOF\nextern void foo();\nint main(){foo();}\nEOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 7,
                  "endLine": 244,
                  "endColumn": 12,
                  "snippet": {
                    "text": "if test x$TARGET = xX86_64; then\n    AC_CACHE_CHECK([toolchain supports unwind section type],\n\tlibffi_cv_as_x86_64_unwind_section_type, [\n        cat  > conftest1.s << EOF\n.text\n.globl foo\nfoo:\n",
                    "rendered": {
                      "text": "if test x$TARGET = xX86_64; then\n    AC_CACHE_CHECK([toolchain supports unwind section type],\n\tlibffi_cv_as_x86_64_unwind_section_type, [\n        cat  > conftest1.s << EOF\n.text\n.globl foo\nfoo:\n",
                      "markdown": "`if test x$TARGET = xX86_64; then\n    AC_CACHE_CHECK([toolchain supports unwind section type],\n\tlibffi_cv_as_x86_64_unwind_section_type, [\n        cat  > conftest1.s << EOF\n.text\n.globl foo\nfoo:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 62,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if test \"x$GCC\" = \"xyes\"; then\n  CFLAGS=\"$CFLAGS -fexceptions\"\nfi\n\ncat > local.exp <<EOF\nset CC_FOR_TARGET \"$CC\"\nset CXX_FOR_TARGET \"$CXX\"\nset compiler_vendor \"$ax_cv_c_compiler_vendor\"\n",
                    "rendered": {
                      "text": "if test \"x$GCC\" = \"xyes\"; then\n  CFLAGS=\"$CFLAGS -fexceptions\"\nfi\n\ncat > local.exp <<EOF\nset CC_FOR_TARGET \"$CC\"\nset CXX_FOR_TARGET \"$CXX\"\nset compiler_vendor \"$ax_cv_c_compiler_vendor\"\n",
                      "markdown": "`if test \"x$GCC\" = \"xyes\"; then\n  CFLAGS=\"$CFLAGS -fexceptions\"\nfi\n\ncat > local.exp <<EOF\nset CC_FOR_TARGET \"$CC\"\nset CXX_FOR_TARGET \"$CXX\"\nset compiler_vendor \"$ax_cv_c_compiler_vendor\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/configure.ac"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 28,
                  "endLine": 13,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\ncase \"${host}\" in\n  frv*-elf)\n    LDFLAGS=`echo $LDFLAGS | sed \"s/\\-B[^ ]*libgloss\\/frv\\///\"`\\ -B`pwd`/../libgloss/frv/\n    ;;\nesac\n\n",
                    "rendered": {
                      "text": "\ncase \"${host}\" in\n  frv*-elf)\n    LDFLAGS=`echo $LDFLAGS | sed \"s/\\-B[^ ]*libgloss\\/frv\\///\"`\\ -B`pwd`/../libgloss/frv/\n    ;;\nesac\n\n",
                      "markdown": "`\ncase \"${host}\" in\n  frv*-elf)\n    LDFLAGS=`echo $LDFLAGS | sed \"s/\\-B[^ ]*libgloss\\/frv\\///\"`\\ -B`pwd`/../libgloss/frv/\n    ;;\nesac\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/bfin-sim.exp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 6,
                  "endLine": 51,
                  "endColumn": 12,
                  "snippet": {
                    "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                    "rendered": {
                      "text": "set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n",
                      "markdown": "`set_board_info gdb,can_reverse 1\nset_board_info gdb,use_precord 1\n\n# More time is needed\nset_board_info gcc,timeout 800\nset_board_info gdb,timeout 60\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.closures/unwindtest_ffi_call.cc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n  si = -6;\n  ss = -12;\n  sc = -1;\n  {\n    try\n      {\n",
                    "rendered": {
                      "text": "\n  si = -6;\n  ss = -12;\n  sc = -1;\n  {\n    try\n      {\n",
                      "markdown": "`\n  si = -6;\n  ss = -12;\n  sc = -1;\n  {\n    try\n      {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 59,
                  "endLine": 549,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t.align\tUNIX64_TRAMP_MAP_SIZE\n#endif /* FFI_EXEC_STATIC_TRAMP */\n\n/* Sadly, OSX cctools-as doesn't understand .cfi directives at all.  */\n\n#ifdef __APPLE__\n.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n",
                    "rendered": {
                      "text": "\t.align\tUNIX64_TRAMP_MAP_SIZE\n#endif /* FFI_EXEC_STATIC_TRAMP */\n\n/* Sadly, OSX cctools-as doesn't understand .cfi directives at all.  */\n\n#ifdef __APPLE__\n.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n",
                      "markdown": "`\t.align\tUNIX64_TRAMP_MAP_SIZE\n#endif /* FFI_EXEC_STATIC_TRAMP */\n\n/* Sadly, OSX cctools-as doesn't understand .cfi directives at all.  */\n\n#ifdef __APPLE__\n.section __TEXT,__eh_frame,coalesced,no_toc+strip_static_syms+live_support\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 59,
                  "endLine": 487,
                  "endColumn": 63,
                  "snippet": {
                    "text": " * Below is the definition of the trampoline code table. Each element in\n * the code table is a trampoline.\n *\n * Because we jump to the trampoline, we place a _CET_ENDBR at the\n * beginning of the trampoline to mark it as a valid branch target. This is\n * part of the the Intel CET (Control Flow Enforcement Technology).\n */\n",
                    "rendered": {
                      "text": " * Below is the definition of the trampoline code table. Each element in\n * the code table is a trampoline.\n *\n * Because we jump to the trampoline, we place a _CET_ENDBR at the\n * beginning of the trampoline to mark it as a valid branch target. This is\n * part of the the Intel CET (Control Flow Enforcement Technology).\n */\n",
                      "markdown": "` * Below is the definition of the trampoline code table. Each element in\n * the code table is a trampoline.\n *\n * Because we jump to the trampoline, we place a _CET_ENDBR at the\n * beginning of the trampoline to mark it as a valid branch target. This is\n * part of the the Intel CET (Control Flow Enforcement Technology).\n */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 53,
                  "endLine": 218,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\nL(sa):\tcall\tPLT(C(abort))\n\n\t/* Many times we can avoid loading any SSE registers at all.\n\t   It's not worth an indirect jump to load the exact set of\n\t   SSE registers needed; zero or all is a good compromise.  */\n\t.balign 2\n",
                    "rendered": {
                      "text": "\nL(sa):\tcall\tPLT(C(abort))\n\n\t/* Many times we can avoid loading any SSE registers at all.\n\t   It's not worth an indirect jump to load the exact set of\n\t   SSE registers needed; zero or all is a good compromise.  */\n\t.balign 2\n",
                      "markdown": "`\nL(sa):\tcall\tPLT(C(abort))\n\n\t/* Many times we can avoid loading any SSE registers at all.\n\t   It's not worth an indirect jump to load the exact set of\n\t   SSE registers needed; zero or all is a good compromise.  */\n\t.balign 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 18,
                  "endLine": 99,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tjnz\tL(load_sse)\nL(ret_from_load_sse):\n\n\t/* Deallocate the reg arg area, except for r10, then load via pop.  */\n\tleaq\t0xb8(%r10), %rsp\n\tpopq\t%r10\n\n",
                    "rendered": {
                      "text": "\tjnz\tL(load_sse)\nL(ret_from_load_sse):\n\n\t/* Deallocate the reg arg area, except for r10, then load via pop.  */\n\tleaq\t0xb8(%r10), %rsp\n\tpopq\t%r10\n\n",
                      "markdown": "`\tjnz\tL(load_sse)\nL(ret_from_load_sse):\n\n\t/* Deallocate the reg arg area, except for r10, then load via pop.  */\n\tleaq\t0xb8(%r10), %rsp\n\tpopq\t%r10\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 36,
                  "endLine": 76,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t/* New stack frame based off rbp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-8, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n",
                    "rendered": {
                      "text": "\t/* New stack frame based off rbp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-8, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n",
                      "markdown": "`\t/* New stack frame based off rbp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-8, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 36,
                  "endLine": 40,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#ifdef __CET__\n/* Double slot size to 16 byte to add 4 bytes of ENDBR64.  */\n",
                    "rendered": {
                      "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#ifdef __CET__\n/* Double slot size to 16 byte to add 4 bytes of ENDBR64.  */\n",
                      "markdown": "`\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#ifdef __CET__\n/* Double slot size to 16 byte to add 4 bytes of ENDBR64.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 36,
                  "endLine": 245,
                  "endColumn": 41,
                  "snippet": {
                    "text": "#define ffi_closure_OFS_RVALUE\t(ffi_closure_OFS_V + 8*16)\n#define ffi_closure_FS\t\t(ffi_closure_OFS_RVALUE + 32 + 8)\n\n/* The location of rvalue within the red zone after deallocating the frame.  */\n#define ffi_closure_RED_RVALUE\t(ffi_closure_OFS_RVALUE - ffi_closure_FS)\n\n\t.balign\t2\n",
                    "rendered": {
                      "text": "#define ffi_closure_OFS_RVALUE\t(ffi_closure_OFS_V + 8*16)\n#define ffi_closure_FS\t\t(ffi_closure_OFS_RVALUE + 32 + 8)\n\n/* The location of rvalue within the red zone after deallocating the frame.  */\n#define ffi_closure_RED_RVALUE\t(ffi_closure_OFS_RVALUE - ffi_closure_FS)\n\n\t.balign\t2\n",
                      "markdown": "`#define ffi_closure_OFS_RVALUE\t(ffi_closure_OFS_V + 8*16)\n#define ffi_closure_FS\t\t(ffi_closure_OFS_RVALUE + 32 + 8)\n\n/* The location of rvalue within the red zone after deallocating the frame.  */\n#define ffi_closure_RED_RVALUE\t(ffi_closure_OFS_RVALUE - ffi_closure_FS)\n\n\t.balign\t2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 27,
                  "endLine": 66,
                  "endColumn": 33,
                  "snippet": {
                    "text": "L(UW0):\n\t_CET_ENDBR\n\tmovq\t(%rsp), %r10\t\t/* Load return address.  */\n\tleaq\t(%rdi, %rsi), %rax\t/* Find local stack base.  */\n\tmovq\t%rdx, (%rax)\t\t/* Save flags.  */\n\tmovq\t%rcx, 8(%rax)\t\t/* Save raddr.  */\n\tmovq\t%rbp, 16(%rax)\t\t/* Save old frame pointer.  */\n",
                    "rendered": {
                      "text": "L(UW0):\n\t_CET_ENDBR\n\tmovq\t(%rsp), %r10\t\t/* Load return address.  */\n\tleaq\t(%rdi, %rsi), %rax\t/* Find local stack base.  */\n\tmovq\t%rdx, (%rax)\t\t/* Save flags.  */\n\tmovq\t%rcx, 8(%rax)\t\t/* Save raddr.  */\n\tmovq\t%rbp, 16(%rax)\t\t/* Save old frame pointer.  */\n",
                      "markdown": "`L(UW0):\n\t_CET_ENDBR\n\tmovq\t(%rsp), %r10\t\t/* Load return address.  */\n\tleaq\t(%rdi, %rsi), %rax\t/* Find local stack base.  */\n\tmovq\t%rdx, (%rax)\t\t/* Save flags.  */\n\tmovq\t%rcx, 8(%rax)\t\t/* Save raddr.  */\n\tmovq\t%rbp, 16(%rax)\t\t/* Save old frame pointer.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/unix64.S"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 26,
                  "endLine": 3,
                  "endColumn": 31,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   unix64.S - Copyright (c) 2013  The Written Word, Inc.\n\t    - Copyright (c) 2008  Red Hat, Inc\n\t    - Copyright (c) 2002  Bo Thorsen <bo@suse.de>\n\n   x86-64 Foreign Function Interface \n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   unix64.S - Copyright (c) 2013  The Written Word, Inc.\n\t    - Copyright (c) 2008  Red Hat, Inc\n\t    - Copyright (c) 2002  Bo Thorsen <bo@suse.de>\n\n   x86-64 Foreign Function Interface \n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   unix64.S - Copyright (c) 2013  The Written Word, Inc.\n\t    - Copyright (c) 2008  Red Hat, Inc\n\t    - Copyright (c) 2002  Bo Thorsen <bo@suse.de>\n\n   x86-64 Foreign Function Interface \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 1188,
                  "startColumn": 38,
                  "endLine": 1188,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    .subsections_via_symbols\n# if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&\t\t\\\n   __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070 && __clang__\n/* compact unwind is not used with GCC at present, was not present before 10.6\n   but has some bugs there, so do not emit until 10.7.  */\n    .section __LD,__compact_unwind,regular,debug\n\n",
                    "rendered": {
                      "text": "    .subsections_via_symbols\n# if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&\t\t\\\n   __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070 && __clang__\n/* compact unwind is not used with GCC at present, was not present before 10.6\n   but has some bugs there, so do not emit until 10.7.  */\n    .section __LD,__compact_unwind,regular,debug\n\n",
                      "markdown": "`    .subsections_via_symbols\n# if defined(__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) &&\t\t\\\n   __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1070 && __clang__\n/* compact unwind is not used with GCC at present, was not present before 10.6\n   but has some bugs there, so do not emit until 10.7.  */\n    .section __LD,__compact_unwind,regular,debug\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 33,
                  "endLine": 948,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# define LEN(N, P)\t.set Llen$N$P,L(N)-L(P); .long Llen$N$P\n/* Note, this assume DW_CFA_advance_loc1 fits into 7 bits.  */\n# define ADV(N, P)\t.set Ladv$N$P,L(N)-L(P); .byte 2, Ladv$N$P\n/* For historical reasons, the EH reg numbers for SP and FP are swapped from\n   the DWARF ones for 32b Darwin.  */\n# define SP 5\n# define FP 4\n",
                    "rendered": {
                      "text": "# define LEN(N, P)\t.set Llen$N$P,L(N)-L(P); .long Llen$N$P\n/* Note, this assume DW_CFA_advance_loc1 fits into 7 bits.  */\n# define ADV(N, P)\t.set Ladv$N$P,L(N)-L(P); .byte 2, Ladv$N$P\n/* For historical reasons, the EH reg numbers for SP and FP are swapped from\n   the DWARF ones for 32b Darwin.  */\n# define SP 5\n# define FP 4\n",
                      "markdown": "`# define LEN(N, P)\t.set Llen$N$P,L(N)-L(P); .long Llen$N$P\n/* Note, this assume DW_CFA_advance_loc1 fits into 7 bits.  */\n# define ADV(N, P)\t.set Ladv$N$P,L(N)-L(P); .byte 2, Ladv$N$P\n/* For historical reasons, the EH reg numbers for SP and FP are swapped from\n   the DWARF ones for 32b Darwin.  */\n# define SP 5\n# define FP 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 60,
                  "endLine": 936,
                  "endColumn": 64,
                  "snippet": {
                    "text": "#endif /* DARWIN || HIDDEN */\n#endif /* __PIC__ */\n\n/* Sadly, OSX cctools-as does not understand .cfi directives at all so\n   we build an eh frame by hand.  */\n\n#ifdef __APPLE__\n",
                    "rendered": {
                      "text": "#endif /* DARWIN || HIDDEN */\n#endif /* __PIC__ */\n\n/* Sadly, OSX cctools-as does not understand .cfi directives at all so\n   we build an eh frame by hand.  */\n\n#ifdef __APPLE__\n",
                      "markdown": "`#endif /* DARWIN || HIDDEN */\n#endif /* __PIC__ */\n\n/* Sadly, OSX cctools-as does not understand .cfi directives at all so\n   we build an eh frame by hand.  */\n\n#ifdef __APPLE__\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 59,
                  "endLine": 614,
                  "endColumn": 63,
                  "snippet": {
                    "text": " * Below is the definition of the trampoline code table. Each element in\n * the code table is a trampoline.\n *\n * Because we jump to the trampoline, we place a _CET_ENDBR at the\n * beginning of the trampoline to mark it as a valid branch target. This is\n * part of the the Intel CET (Control Flow Enforcement Technology).\n */\n",
                    "rendered": {
                      "text": " * Below is the definition of the trampoline code table. Each element in\n * the code table is a trampoline.\n *\n * Because we jump to the trampoline, we place a _CET_ENDBR at the\n * beginning of the trampoline to mark it as a valid branch target. This is\n * part of the the Intel CET (Control Flow Enforcement Technology).\n */\n",
                      "markdown": "` * Below is the definition of the trampoline code table. Each element in\n * the code table is a trampoline.\n *\n * Because we jump to the trampoline, we place a _CET_ENDBR at the\n * beginning of the trampoline to mark it as a valid branch target. This is\n * part of the the Intel CET (Control Flow Enforcement Technology).\n */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 36,
                  "endLine": 107,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t/* New stack frame based off ebp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-4, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n",
                    "rendered": {
                      "text": "\t/* New stack frame based off ebp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-4, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n",
                      "markdown": "`\t/* New stack frame based off ebp.  This is a itty bit of unwind\n\t   trickery in that the CFA *has* changed.  There is no easy way\n\t   to describe it correctly on entry to the function.  Fortunately,\n\t   it doesn't matter too much since at all points we can correctly\n\t   unwind back to ffi_call.  Note that the location to which we\n\t   moved the return address is (the new) CFA-4, so from the\n\t   perspective of the unwind info, it hasn't moved.  */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 36,
                  "endLine": 68,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\t.balign 8\n",
                    "rendered": {
                      "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\t.balign 8\n",
                      "markdown": "`\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\t.balign 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/sysv.S"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 61,
                  "endLine": 4,
                  "endColumn": 66,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2017  Anthony Green\n          - Copyright (c) 2013  The Written Word, Inc.\n          - Copyright (c) 1996,1998,2001-2003,2005,2008,2010  Red Hat, Inc.\n   \n   X86 Foreign Function Interface \n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2017  Anthony Green\n          - Copyright (c) 2013  The Written Word, Inc.\n          - Copyright (c) 1996,1998,2001-2003,2005,2008,2010  Red Hat, Inc.\n   \n   X86 Foreign Function Interface \n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 2017  Anthony Green\n          - Copyright (c) 2013  The Written Word, Inc.\n          - Copyright (c) 1996,1998,2001-2003,2005,2008,2010  Red Hat, Inc.\n   \n   X86 Foreign Function Interface \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/win64_intel.S"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 48,
                  "endLine": 198,
                  "endColumn": 53,
                  "snippet": {
                    "text": "PUBLIC C(ffi_closure_win64)\nC(ffi_closure_win64) PROC FRAME\n\tcfi_startproc\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmov qword ptr [rsp + 8], rcx; movq\t%rcx, 8(%rsp)\n\tmov qword ptr [rsp + 16], rdx;\tmovq\t%rdx, 16(%rsp)\n\tmov qword ptr [rsp + 24], r8; \tmovq\t%r8, 24(%rsp)\n",
                    "rendered": {
                      "text": "PUBLIC C(ffi_closure_win64)\nC(ffi_closure_win64) PROC FRAME\n\tcfi_startproc\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmov qword ptr [rsp + 8], rcx; movq\t%rcx, 8(%rsp)\n\tmov qword ptr [rsp + 16], rdx;\tmovq\t%rdx, 16(%rsp)\n\tmov qword ptr [rsp + 24], r8; \tmovq\t%r8, 24(%rsp)\n",
                      "markdown": "`PUBLIC C(ffi_closure_win64)\nC(ffi_closure_win64) PROC FRAME\n\tcfi_startproc\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmov qword ptr [rsp + 8], rcx; movq\t%rcx, 8(%rsp)\n\tmov qword ptr [rsp + 16], rdx;\tmovq\t%rdx, 16(%rsp)\n\tmov qword ptr [rsp + 24], r8; \tmovq\t%r8, 24(%rsp)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/win64_intel.S"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 48,
                  "endLine": 180,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nC(ffi_go_closure_win64) proc\n\tcfi_startproc\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmov qword ptr [rsp + 8], rcx; movq\t%rcx, 8(%rsp)\n\tmov qword ptr [rsp + 16], rdx; movq\t%rdx, 16(%rsp)\n\tmov qword ptr [rsp + 24], r8; movq\t%r8, 24(%rsp)\n",
                    "rendered": {
                      "text": "\nC(ffi_go_closure_win64) proc\n\tcfi_startproc\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmov qword ptr [rsp + 8], rcx; movq\t%rcx, 8(%rsp)\n\tmov qword ptr [rsp + 16], rdx; movq\t%rdx, 16(%rsp)\n\tmov qword ptr [rsp + 24], r8; movq\t%r8, 24(%rsp)\n",
                      "markdown": "`\nC(ffi_go_closure_win64) proc\n\tcfi_startproc\n\t/* Save all integer arguments into the incoming reg stack space.  */\n\tmov qword ptr [rsp + 8], rcx; movq\t%rcx, 8(%rsp)\n\tmov qword ptr [rsp + 16], rdx; movq\t%rdx, 16(%rsp)\n\tmov qword ptr [rsp + 24], r8; movq\t%r8, 24(%rsp)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/x86/win64_intel.S"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 36,
                  "endLine": 27,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\tALIGN 8\n",
                    "rendered": {
                      "text": "\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\tALIGN 8\n",
                      "markdown": "`\n/* This macro allows the safe creation of jump tables without an\n   actual table.  The entry points into the table are all 8 bytes.\n   The use of ORG asserts that we're at the correct location.  */\n/* ??? The clang assembler doesn't handle .org with symbolic expressions.  */\n#if defined(__clang__) || defined(__APPLE__) || (defined (__sun__) && defined(__svr4__))\n# define E(BASE, X)\tALIGN 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/alpha/osf.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 59,
                  "endLine": 2,
                  "endColumn": 64,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   osf.S - Copyright (c) 1998, 2001, 2007, 2008, 2011, 2014 Red Hat\n\n   Alpha/OSF Foreign Function Interface\n\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   osf.S - Copyright (c) 1998, 2001, 2007, 2008, 2011, 2014 Red Hat\n\n   Alpha/OSF Foreign Function Interface\n\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   osf.S - Copyright (c) 1998, 2001, 2007, 2008, 2011, 2014 Red Hat\n\n   Alpha/OSF Foreign Function Interface\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 6,
                  "endLine": 520,
                  "snippet": {
                    "text": "\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n\t.4byte\tdatalabel .LFE2-datalabel .LFB2\t/* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\tdatalabel .LCFI3-datalabel .LFB2\n",
                    "rendered": {
                      "text": "\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n\t.4byte\tdatalabel .LFE2-datalabel .LFB2\t/* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\tdatalabel .LCFI3-datalabel .LFB2\n",
                      "markdown": "`\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n\t.4byte\tdatalabel .LFE2-datalabel .LFB2\t/* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\tdatalabel .LCFI3-datalabel .LFB2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 513,
                  "startColumn": 6,
                  "endLine": 514,
                  "snippet": {
                    "text": "\t.4byte\tdatalabel .LEFDE3-datalabel .LASFDE3\t/* FDE Length */\n.LASFDE3:\n\t.4byte\tdatalabel .LASFDE3-datalabel __FRAME_BEGIN__\n#ifdef PIC\n\t.4byte\t.LFB2-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n",
                    "rendered": {
                      "text": "\t.4byte\tdatalabel .LEFDE3-datalabel .LASFDE3\t/* FDE Length */\n.LASFDE3:\n\t.4byte\tdatalabel .LASFDE3-datalabel __FRAME_BEGIN__\n#ifdef PIC\n\t.4byte\t.LFB2-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n",
                      "markdown": "`\t.4byte\tdatalabel .LEFDE3-datalabel .LASFDE3\t/* FDE Length */\n.LASFDE3:\n\t.4byte\tdatalabel .LASFDE3-datalabel __FRAME_BEGIN__\n#ifdef PIC\n\t.4byte\t.LFB2-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB2\t/* FDE initial location */\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 6,
                  "endLine": 480,
                  "snippet": {
                    "text": "\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n\t.4byte\tdatalabel .LFE1-datalabel .LFB1\t/* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\tdatalabel .LCFI0-datalabel .LFB1\n",
                    "rendered": {
                      "text": "\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n\t.4byte\tdatalabel .LFE1-datalabel .LFB1\t/* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\tdatalabel .LCFI0-datalabel .LFB1\n",
                      "markdown": "`\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n\t.4byte\tdatalabel .LFE1-datalabel .LFB1\t/* FDE address range */\n#ifdef PIC\n\t.uleb128 0x0\t/* Augmentation size */\n#endif\n\t.byte\t0x4\t/* DW_CFA_advance_loc4 */\n\t.4byte\tdatalabel .LCFI0-datalabel .LFB1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 6,
                  "endLine": 474,
                  "snippet": {
                    "text": "\t.4byte\tdatalabel .LEFDE1-datalabel .LASFDE1\t/* FDE Length */\n.LASFDE1:\n\t.4byte\tdatalabel .LASFDE1-datalabel __FRAME_BEGIN__\n#ifdef PIC\n\t.4byte\t.LFB1-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n",
                    "rendered": {
                      "text": "\t.4byte\tdatalabel .LEFDE1-datalabel .LASFDE1\t/* FDE Length */\n.LASFDE1:\n\t.4byte\tdatalabel .LASFDE1-datalabel __FRAME_BEGIN__\n#ifdef PIC\n\t.4byte\t.LFB1-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n",
                      "markdown": "`\t.4byte\tdatalabel .LEFDE1-datalabel .LASFDE1\t/* FDE Length */\n.LASFDE1:\n\t.4byte\tdatalabel .LASFDE1-datalabel __FRAME_BEGIN__\n#ifdef PIC\n\t.4byte\t.LFB1-.\t/* FDE initial location */\n#else\n\t.4byte\t.LFB1\t/* FDE initial location */\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 6,
                  "endLine": 461,
                  "snippet": {
                    "text": "\t.uleb128 0x1\t/* CIE Code Alignment Factor */\n\t.sleb128 -4\t/* CIE Data Alignment Factor */\n\t.byte\t0x12\t/* CIE RA Column */\n#ifdef PIC\n\t.uleb128 0x1\t/* Augmentation size */\n\t.byte\t0x10\t/* FDE Encoding (pcrel) */\n#endif\n\t.byte\t0xc\t/* DW_CFA_def_cfa */\n",
                    "rendered": {
                      "text": "\t.uleb128 0x1\t/* CIE Code Alignment Factor */\n\t.sleb128 -4\t/* CIE Data Alignment Factor */\n\t.byte\t0x12\t/* CIE RA Column */\n#ifdef PIC\n\t.uleb128 0x1\t/* Augmentation size */\n\t.byte\t0x10\t/* FDE Encoding (pcrel) */\n#endif\n\t.byte\t0xc\t/* DW_CFA_def_cfa */\n",
                      "markdown": "`\t.uleb128 0x1\t/* CIE Code Alignment Factor */\n\t.sleb128 -4\t/* CIE Data Alignment Factor */\n\t.byte\t0x12\t/* CIE RA Column */\n#ifdef PIC\n\t.uleb128 0x1\t/* Augmentation size */\n\t.byte\t0x10\t/* FDE Encoding (pcrel) */\n#endif\n\t.byte\t0xc\t/* DW_CFA_def_cfa */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 6,
                  "endLine": 453,
                  "snippet": {
                    "text": ".LSCIE1:\n\t.4byte\t0x0\t/* CIE Identifier Tag */\n\t.byte\t0x1\t/* CIE Version */\n#ifdef PIC\n\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n#else\n\t.byte\t0x0\t/* CIE Augmentation */\n#endif\n",
                    "rendered": {
                      "text": ".LSCIE1:\n\t.4byte\t0x0\t/* CIE Identifier Tag */\n\t.byte\t0x1\t/* CIE Version */\n#ifdef PIC\n\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n#else\n\t.byte\t0x0\t/* CIE Augmentation */\n#endif\n",
                      "markdown": "`.LSCIE1:\n\t.4byte\t0x0\t/* CIE Identifier Tag */\n\t.byte\t0x1\t/* CIE Version */\n#ifdef PIC\n\t.ascii \"zR\\0\"\t/* CIE Augmentation */\n#else\n\t.byte\t0x0\t/* CIE Augmentation */\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/sh64/sysv.S"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 6,
                  "endLine": 365,
                  "snippet": {
                    "text": "\taddi\tr14, 72, r4\n\taddi\tr14, 24, r5\n\taddi\tr14, 136, r6\n#ifdef PIC\n\tmovi\t(((datalabel _GLOBAL_OFFSET_TABLE_-(.LPCS0-.)) >> 16) & 65535), r12\n        shori\t((datalabel _GLOBAL_OFFSET_TABLE_-(.LPCS0-.)) & 65535), r12\n.LPCS0:\tptrel/u r12, tr0\n\tmovi\t((ffi_closure_helper_SYSV@GOTPLT) & 65535), r1\n",
                    "rendered": {
                      "text": "\taddi\tr14, 72, r4\n\taddi\tr14, 24, r5\n\taddi\tr14, 136, r6\n#ifdef PIC\n\tmovi\t(((datalabel _GLOBAL_OFFSET_TABLE_-(.LPCS0-.)) >> 16) & 65535), r12\n        shori\t((datalabel _GLOBAL_OFFSET_TABLE_-(.LPCS0-.)) & 65535), r12\n.LPCS0:\tptrel/u r12, tr0\n\tmovi\t((ffi_closure_helper_SYSV@GOTPLT) & 65535), r1\n",
                      "markdown": "`\taddi\tr14, 72, r4\n\taddi\tr14, 24, r5\n\taddi\tr14, 136, r6\n#ifdef PIC\n\tmovi\t(((datalabel _GLOBAL_OFFSET_TABLE_-(.LPCS0-.)) >> 16) & 65535), r12\n        shori\t((datalabel _GLOBAL_OFFSET_TABLE_-(.LPCS0-.)) & 65535), r12\n.LPCS0:\tptrel/u r12, tr0\n\tmovi\t((ffi_closure_helper_SYSV@GOTPLT) & 65535), r1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 47,
                  "endLine": 253,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\tcfi_adjust_cfa_offset(64+32)\n\tstmdb\tsp!, {ip,lr}\n\n\t/* Remember that EABI unwind info only applies at call sites.\n\t   We need do nothing except note the save of the stack pointer\n\t   and the link registers.  */\n\tUNWIND(.save {sp,lr})\n",
                    "rendered": {
                      "text": "\tcfi_adjust_cfa_offset(64+32)\n\tstmdb\tsp!, {ip,lr}\n\n\t/* Remember that EABI unwind info only applies at call sites.\n\t   We need do nothing except note the save of the stack pointer\n\t   and the link registers.  */\n\tUNWIND(.save {sp,lr})\n",
                      "markdown": "`\tcfi_adjust_cfa_offset(64+32)\n\tstmdb\tsp!, {ip,lr}\n\n\t/* Remember that EABI unwind info only applies at call sites.\n\t   We need do nothing except note the save of the stack pointer\n\t   and the link registers.  */\n\tUNWIND(.save {sp,lr})\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 39,
                  "endLine": 409,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t.rept\tARM_TRAMP_MAP_SIZE / ARM_TRAMP_SIZE\n\tsub\tsp, sp, #8\t\t/* Make space on the stack */\n\tstr\tip, [sp]\t\t/* Save ip on stack */\n\tldr\tip, [pc, #4080]\t\t/* Copy data into ip */\n\tstr\tip, [sp, #4]\t\t/* Save data on stack */\n\tldr\tpc, [pc, #4076]\t\t/* Copy code into PC */\n\t.endr\n",
                    "rendered": {
                      "text": "\t.rept\tARM_TRAMP_MAP_SIZE / ARM_TRAMP_SIZE\n\tsub\tsp, sp, #8\t\t/* Make space on the stack */\n\tstr\tip, [sp]\t\t/* Save ip on stack */\n\tldr\tip, [pc, #4080]\t\t/* Copy data into ip */\n\tstr\tip, [sp, #4]\t\t/* Save data on stack */\n\tldr\tpc, [pc, #4076]\t\t/* Copy code into PC */\n\t.endr\n",
                      "markdown": "`\t.rept\tARM_TRAMP_MAP_SIZE / ARM_TRAMP_SIZE\n\tsub\tsp, sp, #8\t\t/* Make space on the stack */\n\tstr\tip, [sp]\t\t/* Save ip on stack */\n\tldr\tip, [pc, #4080]\t\t/* Copy data into ip */\n\tstr\tip, [sp, #4]\t\t/* Save data on stack */\n\tldr\tpc, [pc, #4076]\t\t/* Copy code into PC */\n\t.endr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 22,
                  "endLine": 408,
                  "endColumn": 26,
                  "snippet": {
                    "text": "ARM_FUNC_START(trampoline_code_table)\n\t.rept\tARM_TRAMP_MAP_SIZE / ARM_TRAMP_SIZE\n\tsub\tsp, sp, #8\t\t/* Make space on the stack */\n\tstr\tip, [sp]\t\t/* Save ip on stack */\n\tldr\tip, [pc, #4080]\t\t/* Copy data into ip */\n\tstr\tip, [sp, #4]\t\t/* Save data on stack */\n\tldr\tpc, [pc, #4076]\t\t/* Copy code into PC */\n",
                    "rendered": {
                      "text": "ARM_FUNC_START(trampoline_code_table)\n\t.rept\tARM_TRAMP_MAP_SIZE / ARM_TRAMP_SIZE\n\tsub\tsp, sp, #8\t\t/* Make space on the stack */\n\tstr\tip, [sp]\t\t/* Save ip on stack */\n\tldr\tip, [pc, #4080]\t\t/* Copy data into ip */\n\tstr\tip, [sp, #4]\t\t/* Save data on stack */\n\tldr\tpc, [pc, #4076]\t\t/* Copy code into PC */\n",
                      "markdown": "`ARM_FUNC_START(trampoline_code_table)\n\t.rept\tARM_TRAMP_MAP_SIZE / ARM_TRAMP_SIZE\n\tsub\tsp, sp, #8\t\t/* Make space on the stack */\n\tstr\tip, [sp]\t\t/* Save ip on stack */\n\tldr\tip, [pc, #4080]\t\t/* Copy data into ip */\n\tstr\tip, [sp, #4]\t\t/* Save data on stack */\n\tldr\tpc, [pc, #4076]\t\t/* Copy code into PC */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 25,
                  "endLine": 401,
                  "snippet": {
                    "text": " *\n * The target code can choose to:\n *\n * - restore the value of ip\n * - load the data address in a register\n * - restore the stack pointer to what it was when the trampoline was invoked.\n */\n\t.align\tARM_TRAMP_MAP_SHIFT\n",
                    "rendered": {
                      "text": " *\n * The target code can choose to:\n *\n * - restore the value of ip\n * - load the data address in a register\n * - restore the stack pointer to what it was when the trampoline was invoked.\n */\n\t.align\tARM_TRAMP_MAP_SHIFT\n",
                      "markdown": "` *\n * The target code can choose to:\n *\n * - restore the value of ip\n * - load the data address in a register\n * - restore the stack pointer to what it was when the trampoline was invoked.\n */\n\t.align\tARM_TRAMP_MAP_SHIFT\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 72,
                  "endLine": 391,
                  "snippet": {
                    "text": " * the code table is a trampoline.\n */\n/*\n * The trampoline uses register ip (r12). It saves the original value of ip\n * on the stack.\n *\n * The trampoline has two parameters - target code to jump to and data for\n * the target code. The trampoline extracts the parameters from its parameter\n",
                    "rendered": {
                      "text": " * the code table is a trampoline.\n */\n/*\n * The trampoline uses register ip (r12). It saves the original value of ip\n * on the stack.\n *\n * The trampoline has two parameters - target code to jump to and data for\n * the target code. The trampoline extracts the parameters from its parameter\n",
                      "markdown": "` * the code table is a trampoline.\n */\n/*\n * The trampoline uses register ip (r12). It saves the original value of ip\n * on the stack.\n *\n * The trampoline has two parameters - target code to jump to and data for\n * the target code. The trampoline extracts the parameters from its parameter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 31,
                  "endLine": 390,
                  "endColumn": 35,
                  "snippet": {
                    "text": " * the code table is a trampoline.\n */\n/*\n * The trampoline uses register ip (r12). It saves the original value of ip\n * on the stack.\n *\n * The trampoline has two parameters - target code to jump to and data for\n",
                    "rendered": {
                      "text": " * the code table is a trampoline.\n */\n/*\n * The trampoline uses register ip (r12). It saves the original value of ip\n * on the stack.\n *\n * The trampoline has two parameters - target code to jump to and data for\n",
                      "markdown": "` * the code table is a trampoline.\n */\n/*\n * The trampoline uses register ip (r12). It saves the original value of ip\n * on the stack.\n *\n * The trampoline has two parameters - target code to jump to and data for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 38,
                  "endLine": 380,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\nARM_FUNC_START(ffi_closure_VFP_alt)\n\t/* See the comments above trampoline_code_table. */\n\tldr\tip, [sp, #4]\t\t\t/* Load closure in ip */\n\tadd\tsp, sp, 8\t\t\t/* Restore the stack */\n\tb\tCNAME(ffi_closure_VFP)\nARM_FUNC_END(ffi_closure_VFP_alt)\n",
                    "rendered": {
                      "text": "\nARM_FUNC_START(ffi_closure_VFP_alt)\n\t/* See the comments above trampoline_code_table. */\n\tldr\tip, [sp, #4]\t\t\t/* Load closure in ip */\n\tadd\tsp, sp, 8\t\t\t/* Restore the stack */\n\tb\tCNAME(ffi_closure_VFP)\nARM_FUNC_END(ffi_closure_VFP_alt)\n",
                      "markdown": "`\nARM_FUNC_START(ffi_closure_VFP_alt)\n\t/* See the comments above trampoline_code_table. */\n\tldr\tip, [sp, #4]\t\t\t/* Load closure in ip */\n\tadd\tsp, sp, 8\t\t\t/* Restore the stack */\n\tb\tCNAME(ffi_closure_VFP)\nARM_FUNC_END(ffi_closure_VFP_alt)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 38,
                  "endLine": 373,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#if defined(FFI_EXEC_STATIC_TRAMP)\nARM_FUNC_START(ffi_closure_SYSV_alt)\n\t/* See the comments above trampoline_code_table. */\n\tldr\tip, [sp, #4]\t\t\t/* Load closure in ip */\n\tadd\tsp, sp, 8\t\t\t/* Restore the stack */\n\tb\tCNAME(ffi_closure_SYSV)\nARM_FUNC_END(ffi_closure_SYSV_alt)\n",
                    "rendered": {
                      "text": "#if defined(FFI_EXEC_STATIC_TRAMP)\nARM_FUNC_START(ffi_closure_SYSV_alt)\n\t/* See the comments above trampoline_code_table. */\n\tldr\tip, [sp, #4]\t\t\t/* Load closure in ip */\n\tadd\tsp, sp, 8\t\t\t/* Restore the stack */\n\tb\tCNAME(ffi_closure_SYSV)\nARM_FUNC_END(ffi_closure_SYSV_alt)\n",
                      "markdown": "`#if defined(FFI_EXEC_STATIC_TRAMP)\nARM_FUNC_START(ffi_closure_SYSV_alt)\n\t/* See the comments above trampoline_code_table. */\n\tldr\tip, [sp, #4]\t\t\t/* Load closure in ip */\n\tadd\tsp, sp, 8\t\t\t/* Restore the stack */\n\tb\tCNAME(ffi_closure_SYSV)\nARM_FUNC_END(ffi_closure_SYSV_alt)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 8,
                  "endLine": 365,
                  "snippet": {
                    "text": "\tldm\tsp, {sp,pc}\n#else\n\tldm\tsp, {ip,lr}\n\tmov\tsp, ip\n\tbx\tlr\n#endif\n\tcfi_endproc\nARM_FUNC_END(ffi_closure_ret)\n",
                    "rendered": {
                      "text": "\tldm\tsp, {sp,pc}\n#else\n\tldm\tsp, {ip,lr}\n\tmov\tsp, ip\n\tbx\tlr\n#endif\n\tcfi_endproc\nARM_FUNC_END(ffi_closure_ret)\n",
                      "markdown": "`\tldm\tsp, {sp,pc}\n#else\n\tldm\tsp, {ip,lr}\n\tmov\tsp, ip\n\tbx\tlr\n#endif\n\tcfi_endproc\nARM_FUNC_END(ffi_closure_ret)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 297,
                  "startColumn": 18,
                  "endLine": 297,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tcfi_adjust_cfa_offset(16)\n\n#if FFI_EXEC_TRAMPOLINE_TABLE\n\tldr ip, [ip]\t\t\t\t@ ip points to the config page, dereference to get the ffi_closure*\n#endif\n\tldr\tr0, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t@ load cif\n\tldr\tr1, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET+4]  @ load fun\n",
                    "rendered": {
                      "text": "\tcfi_adjust_cfa_offset(16)\n\n#if FFI_EXEC_TRAMPOLINE_TABLE\n\tldr ip, [ip]\t\t\t\t@ ip points to the config page, dereference to get the ffi_closure*\n#endif\n\tldr\tr0, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t@ load cif\n\tldr\tr1, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET+4]  @ load fun\n",
                      "markdown": "`\tcfi_adjust_cfa_offset(16)\n\n#if FFI_EXEC_TRAMPOLINE_TABLE\n\tldr ip, [ip]\t\t\t\t@ ip points to the config page, dereference to get the ffi_closure*\n#endif\n\tldr\tr0, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t@ load cif\n\tldr\tr1, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET+4]  @ load fun\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 8,
                  "endLine": 282,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tcfi_adjust_cfa_offset(16)\n\tldr\tr0, [ip, #4]\t\t\t@ load cif\n\tldr\tr1, [ip, #8]\t\t\t@ load fun\n\tmov\tr2, ip\t\t\t\t@ load user_data\n\tb\t0f\n\tcfi_endproc\nARM_FUNC_END(ffi_go_closure_VFP)\n",
                    "rendered": {
                      "text": "\tcfi_adjust_cfa_offset(16)\n\tldr\tr0, [ip, #4]\t\t\t@ load cif\n\tldr\tr1, [ip, #8]\t\t\t@ load fun\n\tmov\tr2, ip\t\t\t\t@ load user_data\n\tb\t0f\n\tcfi_endproc\nARM_FUNC_END(ffi_go_closure_VFP)\n",
                      "markdown": "`\tcfi_adjust_cfa_offset(16)\n\tldr\tr0, [ip, #4]\t\t\t@ load cif\n\tldr\tr1, [ip, #8]\t\t\t@ load fun\n\tmov\tr2, ip\t\t\t\t@ load user_data\n\tb\t0f\n\tcfi_endproc\nARM_FUNC_END(ffi_go_closure_VFP)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 18,
                  "endLine": 242,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tcfi_adjust_cfa_offset(16)\n\n#if FFI_EXEC_TRAMPOLINE_TABLE\n\tldr ip, [ip]\t\t\t\t@ ip points to the config page, dereference to get the ffi_closure*\n#endif\n\tldr\tr0, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t@ load cif\n\tldr\tr1, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET+4]  @ load fun\n",
                    "rendered": {
                      "text": "\tcfi_adjust_cfa_offset(16)\n\n#if FFI_EXEC_TRAMPOLINE_TABLE\n\tldr ip, [ip]\t\t\t\t@ ip points to the config page, dereference to get the ffi_closure*\n#endif\n\tldr\tr0, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t@ load cif\n\tldr\tr1, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET+4]  @ load fun\n",
                      "markdown": "`\tcfi_adjust_cfa_offset(16)\n\n#if FFI_EXEC_TRAMPOLINE_TABLE\n\tldr ip, [ip]\t\t\t\t@ ip points to the config page, dereference to get the ffi_closure*\n#endif\n\tldr\tr0, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET]\t@ load cif\n\tldr\tr1, [ip, #FFI_TRAMPOLINE_CLOSURE_OFFSET+4]  @ load fun\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 8,
                  "endLine": 227,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tcfi_adjust_cfa_offset(16)\n\tldr\tr0, [ip, #4]\t\t\t@ load cif\n\tldr\tr1, [ip, #8]\t\t\t@ load fun\n\tmov\tr2, ip\t\t\t\t@ load user_data\n\tb\t0f\n\tcfi_endproc\nARM_FUNC_END(ffi_go_closure_SYSV)\n",
                    "rendered": {
                      "text": "\tcfi_adjust_cfa_offset(16)\n\tldr\tr0, [ip, #4]\t\t\t@ load cif\n\tldr\tr1, [ip, #8]\t\t\t@ load fun\n\tmov\tr2, ip\t\t\t\t@ load user_data\n\tb\t0f\n\tcfi_endproc\nARM_FUNC_END(ffi_go_closure_SYSV)\n",
                      "markdown": "`\tcfi_adjust_cfa_offset(16)\n\tldr\tr0, [ip, #4]\t\t\t@ load cif\n\tldr\tr1, [ip, #8]\t\t\t@ load fun\n\tmov\tr2, ip\t\t\t\t@ load user_data\n\tb\t0f\n\tcfi_endproc\nARM_FUNC_END(ffi_go_closure_SYSV)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 8,
                  "endLine": 187,
                  "snippet": {
                    "text": "#else\n\tadr\tip, 0f\n\tadd\tip, ip, r3, lsl #3\n\tmov\tpc, ip\n\t.align\t3\n#endif\n0:\nE(ARM_TYPE_VFP_S)\n",
                    "rendered": {
                      "text": "#else\n\tadr\tip, 0f\n\tadd\tip, ip, r3, lsl #3\n\tmov\tpc, ip\n\t.align\t3\n#endif\n0:\nE(ARM_TYPE_VFP_S)\n",
                      "markdown": "`#else\n\tadr\tip, 0f\n\tadd\tip, ip, r3, lsl #3\n\tmov\tpc, ip\n\t.align\t3\n#endif\n0:\nE(ARM_TYPE_VFP_S)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/arm/sysv.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 42,
                  "endLine": 2,
                  "endColumn": 47,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 1998, 2008, 2011 Red Hat, Inc.\n\t    Copyright (c) 2011 Plausible Labs Cooperative, Inc.\n\n   ARM Foreign Function Interface\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 1998, 2008, 2011 Red Hat, Inc.\n\t    Copyright (c) 2011 Plausible Labs Cooperative, Inc.\n\n   ARM Foreign Function Interface\n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   sysv.S - Copyright (c) 1998, 2008, 2011 Red Hat, Inc.\n\t    Copyright (c) 2011 Plausible Labs Cooperative, Inc.\n\n   ARM Foreign Function Interface\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m88k/obsd.S"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 6,
                  "endLine": 199,
                  "snippet": {
                    "text": "\taddu\t%r4,  %r31, 0\t\t\t| saved registers\n\tor\t%r3,  %r12, 0\t\t\t| return value\n\tor\t%r2,  %r13, %r0\t\t\t| closure\n#ifdef PIC\n\tbsr\tffi_closure_OBSD_inner#plt\n#else\n\tbsr\tffi_closure_OBSD_inner\n#endif\n",
                    "rendered": {
                      "text": "\taddu\t%r4,  %r31, 0\t\t\t| saved registers\n\tor\t%r3,  %r12, 0\t\t\t| return value\n\tor\t%r2,  %r13, %r0\t\t\t| closure\n#ifdef PIC\n\tbsr\tffi_closure_OBSD_inner#plt\n#else\n\tbsr\tffi_closure_OBSD_inner\n#endif\n",
                      "markdown": "`\taddu\t%r4,  %r31, 0\t\t\t| saved registers\n\tor\t%r3,  %r12, 0\t\t\t| return value\n\tor\t%r2,  %r13, %r0\t\t\t| closure\n#ifdef PIC\n\tbsr\tffi_closure_OBSD_inner#plt\n#else\n\tbsr\tffi_closure_OBSD_inner\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m88k/obsd.S"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 6,
                  "endLine": 150,
                  "snippet": {
                    "text": "\taddu\t%r4,  %r31, 0\t\t\t| saved registers\n\taddu\t%r3,  %r31, (8 * 4)\t\t| return value\n\tor\t%r2,  %r13, %r0\t\t\t| closure\n#ifdef PIC\n\tbsr\tffi_closure_OBSD_inner#plt\n#else\n\tbsr\tffi_closure_OBSD_inner\n#endif\n",
                    "rendered": {
                      "text": "\taddu\t%r4,  %r31, 0\t\t\t| saved registers\n\taddu\t%r3,  %r31, (8 * 4)\t\t| return value\n\tor\t%r2,  %r13, %r0\t\t\t| closure\n#ifdef PIC\n\tbsr\tffi_closure_OBSD_inner#plt\n#else\n\tbsr\tffi_closure_OBSD_inner\n#endif\n",
                      "markdown": "`\taddu\t%r4,  %r31, 0\t\t\t| saved registers\n\taddu\t%r3,  %r31, (8 * 4)\t\t| return value\n\tor\t%r2,  %r13, %r0\t\t\t| closure\n#ifdef PIC\n\tbsr\tffi_closure_OBSD_inner#plt\n#else\n\tbsr\tffi_closure_OBSD_inner\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/m88k/obsd.S"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 6,
                  "endLine": 76,
                  "snippet": {
                    "text": "\n\t| Fill register and stack image\n\tor\t%r2, %r31, %r0\n#ifdef PIC\n\tbsr\tffi_prep_args#plt\n#else\n\tbsr\tffi_prep_args\n#endif\n",
                    "rendered": {
                      "text": "\n\t| Fill register and stack image\n\tor\t%r2, %r31, %r0\n#ifdef PIC\n\tbsr\tffi_prep_args#plt\n#else\n\tbsr\tffi_prep_args\n#endif\n",
                      "markdown": "`\n\t| Fill register and stack image\n\tor\t%r2, %r31, %r0\n#ifdef PIC\n\tbsr\tffi_prep_args#plt\n#else\n\tbsr\tffi_prep_args\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 11,
                  "endLine": 78,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      - run:\n          name: run tests\n          command: |\n            git reset --hard\n            cd testsuite/emscripten/\n            mkdir test-results\n            pytest \\\n",
                    "rendered": {
                      "text": "      - run:\n          name: run tests\n          command: |\n            git reset --hard\n            cd testsuite/emscripten/\n            mkdir test-results\n            pytest \\\n",
                      "markdown": "`      - run:\n          name: run tests\n          command: |\n            git reset --hard\n            cd testsuite/emscripten/\n            mkdir test-results\n            pytest \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 11,
                  "endLine": 53,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          command: |\n            source ./emsdk/emsdk_env.sh\n            cp -r testsuite/libffi.call testsuite/libffi.call.test\n            cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test\n\n",
                    "rendered": {
                      "text": "          command: |\n            source ./emsdk/emsdk_env.sh\n            cp -r testsuite/libffi.call testsuite/libffi.call.test\n            cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test\n\n",
                      "markdown": "`          command: |\n            source ./emsdk/emsdk_env.sh\n            cp -r testsuite/libffi.call testsuite/libffi.call.test\n            cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 11,
                  "endLine": 52,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          name: build tests\n          command: |\n            source ./emsdk/emsdk_env.sh\n            cp -r testsuite/libffi.call testsuite/libffi.call.test\n            cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test\n",
                    "rendered": {
                      "text": "          name: build tests\n          command: |\n            source ./emsdk/emsdk_env.sh\n            cp -r testsuite/libffi.call testsuite/libffi.call.test\n            cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test\n",
                      "markdown": "`          name: build tests\n          command: |\n            source ./emsdk/emsdk_env.sh\n            cp -r testsuite/libffi.call testsuite/libffi.call.test\n            cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test\n            ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endLine": 18,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      - run:\n          name: install emsdk\n          command: |\n            git clone https://github.com/emscripten-core/emsdk.git --depth=1\n            cd emsdk\n            ./emsdk install 3.1.30\n            ./emsdk activate 3.1.30\n",
                    "rendered": {
                      "text": "      - run:\n          name: install emsdk\n          command: |\n            git clone https://github.com/emscripten-core/emsdk.git --depth=1\n            cd emsdk\n            ./emsdk install 3.1.30\n            ./emsdk activate 3.1.30\n",
                      "markdown": "`      - run:\n          name: install emsdk\n          command: |\n            git clone https://github.com/emscripten-core/emsdk.git --depth=1\n            cd emsdk\n            ./emsdk install 3.1.30\n            ./emsdk activate 3.1.30\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi.h.in"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 19,
                  "endLine": 59,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n/* ---- System configuration information --------------------------------- */\n\n/* If these change, update src/mips/ffitarget.h. */\n#define FFI_TYPE_VOID       0\n#define FFI_TYPE_INT        1\n#define FFI_TYPE_FLOAT      2\n",
                    "rendered": {
                      "text": "\n/* ---- System configuration information --------------------------------- */\n\n/* If these change, update src/mips/ffitarget.h. */\n#define FFI_TYPE_VOID       0\n#define FFI_TYPE_INT        1\n#define FFI_TYPE_FLOAT      2\n",
                      "markdown": "`\n/* ---- System configuration information --------------------------------- */\n\n/* If these change, update src/mips/ffitarget.h. */\n#define FFI_TYPE_VOID       0\n#define FFI_TYPE_INT        1\n#define FFI_TYPE_FLOAT      2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi.h.in"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 19,
                  "snippet": {
                    "text": "#include <limits.h>\n\n/* LONG_LONG_MAX is not always defined (not if STRICT_ANSI, for example).\n   But we can find it either under the correct ANSI name, or under GNU\n   C's internal name.  */\n\n#define FFI_64_BIT_MAX 9223372036854775807\n",
                    "rendered": {
                      "text": "#include <limits.h>\n\n/* LONG_LONG_MAX is not always defined (not if STRICT_ANSI, for example).\n   But we can find it either under the correct ANSI name, or under GNU\n   C's internal name.  */\n\n#define FFI_64_BIT_MAX 9223372036854775807\n",
                      "markdown": "`#include <limits.h>\n\n/* LONG_LONG_MAX is not always defined (not if STRICT_ANSI, for example).\n   But we can find it either under the correct ANSI name, or under GNU\n   C's internal name.  */\n\n#define FFI_64_BIT_MAX 9223372036854775807\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/include/ffi.h.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 42,
                  "endLine": 4,
                  "endColumn": 47,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------*-C-*-\n   libffi @VERSION@\n     - Copyright (c) 2011, 2014, 2019, 2021, 2022, 2024 Anthony Green\n     - Copyright (c) 1996-2003, 2007, 2008 Red Hat, Inc.\n\n   Permission is hereby granted, free of charge, to any person\n   obtaining a copy of this software and associated documentation\n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------*-C-*-\n   libffi @VERSION@\n     - Copyright (c) 2011, 2014, 2019, 2021, 2022, 2024 Anthony Green\n     - Copyright (c) 1996-2003, 2007, 2008 Red Hat, Inc.\n\n   Permission is hereby granted, free of charge, to any person\n   obtaining a copy of this software and associated documentation\n",
                      "markdown": "`/* -----------------------------------------------------------------*-C-*-\n   libffi @VERSION@\n     - Copyright (c) 2011, 2014, 2019, 2021, 2022, 2024 Anthony Green\n     - Copyright (c) 1996-2003, 2007, 2008 Red Hat, Inc.\n\n   Permission is hereby granted, free of charge, to any person\n   obtaining a copy of this software and associated documentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/man/ffi.3"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 31,
                  "endLine": 37,
                  "endColumn": 35,
                  "snippet": {
                    "text": ".Sh DESCRIPTION\nThe foreign function interface provides a mechanism by which a function can\ngenerate a call to another function at runtime without requiring knowledge of\nthe called function's interface at compile time.\n.Sh SEE ALSO\n.Xr ffi_prep_cif 3 ,\n.Xr ffi_prep_cif_var 3 ,\n",
                    "rendered": {
                      "text": ".Sh DESCRIPTION\nThe foreign function interface provides a mechanism by which a function can\ngenerate a call to another function at runtime without requiring knowledge of\nthe called function's interface at compile time.\n.Sh SEE ALSO\n.Xr ffi_prep_cif 3 ,\n.Xr ffi_prep_cif_var 3 ,\n",
                      "markdown": "`.Sh DESCRIPTION\nThe foreign function interface provides a mechanism by which a function can\ngenerate a call to another function at runtime without requiring knowledge of\nthe called function's interface at compile time.\n.Sh SEE ALSO\n.Xr ffi_prep_cif 3 ,\n.Xr ffi_prep_cif_var 3 ,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/man/ffi.3"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 35,
                  "endLine": 36,
                  "endColumn": 39,
                  "snippet": {
                    "text": ".Fc\n.Sh DESCRIPTION\nThe foreign function interface provides a mechanism by which a function can\ngenerate a call to another function at runtime without requiring knowledge of\nthe called function's interface at compile time.\n.Sh SEE ALSO\n.Xr ffi_prep_cif 3 ,\n",
                    "rendered": {
                      "text": ".Fc\n.Sh DESCRIPTION\nThe foreign function interface provides a mechanism by which a function can\ngenerate a call to another function at runtime without requiring knowledge of\nthe called function's interface at compile time.\n.Sh SEE ALSO\n.Xr ffi_prep_cif 3 ,\n",
                      "markdown": "`.Fc\n.Sh DESCRIPTION\nThe foreign function interface provides a mechanism by which a function can\ngenerate a call to another function at runtime without requiring knowledge of\nthe called function's interface at compile time.\n.Sh SEE ALSO\n.Xr ffi_prep_cif 3 ,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-ldflags"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 30,
                  "endLine": 92,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t    # as a command-line option.\n\t    arg=\"X$arg\"\n\t    # Generate the quoted string.\n\t    quoted_arg=`echo \"$arg\" | sed -e \"$sed_script\"`\n\t    ;;\n\t*)\n\t    quoted_arg=$arg\n",
                    "rendered": {
                      "text": "\t    # as a command-line option.\n\t    arg=\"X$arg\"\n\t    # Generate the quoted string.\n\t    quoted_arg=`echo \"$arg\" | sed -e \"$sed_script\"`\n\t    ;;\n\t*)\n\t    quoted_arg=$arg\n",
                      "markdown": "`\t    # as a command-line option.\n\t    arg=\"X$arg\"\n\t    # Generate the quoted string.\n\t    quoted_arg=`echo \"$arg\" | sed -e \"$sed_script\"`\n\t    ;;\n\t*)\n\t    quoted_arg=$arg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-ldflags"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 42,
                  "endLine": 75,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    # quoted so that using:\n    #   libtool --mode=link ... $(LTLDFLAGS)\n    # will result in the same number of arguments being passed to\n    # libtool.   In other words, when this script was invoked, the shell \n    # removed one level of quoting, present in $(LDFLAGS); we have to put \n    # it back.\n\n",
                    "rendered": {
                      "text": "    # quoted so that using:\n    #   libtool --mode=link ... $(LTLDFLAGS)\n    # will result in the same number of arguments being passed to\n    # libtool.   In other words, when this script was invoked, the shell \n    # removed one level of quoting, present in $(LDFLAGS); we have to put \n    # it back.\n\n",
                      "markdown": "`    # quoted so that using:\n    #   libtool --mode=link ... $(LTLDFLAGS)\n    # will result in the same number of arguments being passed to\n    # libtool.   In other words, when this script was invoked, the shell \n    # removed one level of quoting, present in $(LDFLAGS); we have to put \n    # it back.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-ldflags"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 24,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n# Contributed by CodeSourcery, LLC.\n\n# This script is designed to be used from a Makefile that uses libtool\n# to build libraries as follows: \n#\n#   LTLDFLAGS = $(shell libtool-ldflags $(LDFLAGS))\n",
                    "rendered": {
                      "text": "\n# Contributed by CodeSourcery, LLC.\n\n# This script is designed to be used from a Makefile that uses libtool\n# to build libraries as follows: \n#\n#   LTLDFLAGS = $(shell libtool-ldflags $(LDFLAGS))\n",
                      "markdown": "`\n# Contributed by CodeSourcery, LLC.\n\n# This script is designed to be used from a Makefile that uses libtool\n# to build libraries as follows: \n#\n#   LTLDFLAGS = $(shell libtool-ldflags $(LDFLAGS))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/libtool-ldflags"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#! /bin/sh\n\n# Script to translate LDFLAGS into a form suitable for use with libtool.\n\n# Copyright (C) 2005 Free Software Foundation, Inc.\n#\n",
                    "rendered": {
                      "text": "#! /bin/sh\n\n# Script to translate LDFLAGS into a form suitable for use with libtool.\n\n# Copyright (C) 2005 Free Software Foundation, Inc.\n#\n",
                      "markdown": "`#! /bin/sh\n\n# Script to translate LDFLAGS into a form suitable for use with libtool.\n\n# Copyright (C) 2005 Free Software Foundation, Inc.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endLine": 61,
                  "snippet": {
                    "text": "\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n",
                    "rendered": {
                      "text": "\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n",
                      "markdown": "`\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 17,
                  "endLine": 59,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n",
                    "rendered": {
                      "text": "\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n",
                      "markdown": "`\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 16,
                  "endLine": 38,
                  "snippet": {
                    "text": "    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n",
                    "rendered": {
                      "text": "    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n",
                      "markdown": "`    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 10,
                  "endLine": 6,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nif [[ $RUNNER_OS != 'Linux' ]]; then\n    brew update --verbose\n    # brew update > brew-update.log 2>&1\n    # fix an issue with libtool on travis by reinstalling it\n    brew uninstall libtool;\n    brew install automake libtool dejagnu;\n",
                    "rendered": {
                      "text": "\nif [[ $RUNNER_OS != 'Linux' ]]; then\n    brew update --verbose\n    # brew update > brew-update.log 2>&1\n    # fix an issue with libtool on travis by reinstalling it\n    brew uninstall libtool;\n    brew install automake libtool dejagnu;\n",
                      "markdown": "`\nif [[ $RUNNER_OS != 'Linux' ]]; then\n    brew update --verbose\n    # brew update > brew-update.log 2>&1\n    # fix an issue with libtool on travis by reinstalling it\n    brew uninstall libtool;\n    brew install automake libtool dejagnu;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 8,
                  "endLine": 5,
                  "endColumn": 16,
                  "snippet": {
                    "text": "set -x\n\nif [[ $RUNNER_OS != 'Linux' ]]; then\n    brew update --verbose\n    # brew update > brew-update.log 2>&1\n    # fix an issue with libtool on travis by reinstalling it\n    brew uninstall libtool;\n",
                    "rendered": {
                      "text": "set -x\n\nif [[ $RUNNER_OS != 'Linux' ]]; then\n    brew update --verbose\n    # brew update > brew-update.log 2>&1\n    # fix an issue with libtool on travis by reinstalling it\n    brew uninstall libtool;\n",
                      "markdown": "`set -x\n\nif [[ $RUNNER_OS != 'Linux' ]]; then\n    brew update --verbose\n    # brew update > brew-update.log 2>&1\n    # fix an issue with libtool on travis by reinstalling it\n    brew uninstall libtool;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 9,
                  "endLine": 75,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        # don't install host tools\n        ;;\n\t*)\n\t    sudo apt-get install dejagnu texinfo sharutils\n\t    ;;\n    esac\nfi\n",
                    "rendered": {
                      "text": "        # don't install host tools\n        ;;\n\t*)\n\t    sudo apt-get install dejagnu texinfo sharutils\n\t    ;;\n    esac\nfi\n",
                      "markdown": "`        # don't install host tools\n        ;;\n\t*)\n\t    sudo apt-get install dejagnu texinfo sharutils\n\t    ;;\n    esac\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n\t    ;;\n\ti686-w32-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-i686 g++-mingw-w64-i686 wine;\n\t    ;;\n    esac\n    case $HOST in\n",
                    "rendered": {
                      "text": "\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n\t    ;;\n\ti686-w32-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-i686 g++-mingw-w64-i686 wine;\n\t    ;;\n    esac\n    case $HOST in\n",
                      "markdown": "`\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n\t    ;;\n\ti686-w32-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-i686 g++-mingw-w64-i686 wine;\n\t    ;;\n    esac\n    case $HOST in\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 9,
                  "endLine": 64,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n\t    ;;\n\ti686-w32-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-i686 g++-mingw-w64-i686 wine;\n",
                    "rendered": {
                      "text": "\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n\t    ;;\n\ti686-w32-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-i686 g++-mingw-w64-i686 wine;\n",
                      "markdown": "`\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n\t    ;;\n\ti686-w32-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-i686 g++-mingw-w64-i686 wine;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 9,
                  "endLine": 61,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n",
                    "rendered": {
                      "text": "\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n",
                      "markdown": "`\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n\t    sudo apt-get install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 wine;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 9,
                  "endLine": 60,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n",
                    "rendered": {
                      "text": "\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n",
                      "markdown": "`\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n\tx86_64-w64-mingw32)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 9,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n",
                    "rendered": {
                      "text": "\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n",
                      "markdown": "`\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n\t    ;;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "endLine": 58,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n",
                    "rendered": {
                      "text": "\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n",
                      "markdown": "`\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n\t    sudo apt-get install -y --allow-unauthenticated moxielogic-moxie-elf-gcc moxielogic-moxie-elf-gcc-c++ moxielogic-moxie-elf-gcc-libstdc++ moxielogic-moxie-elf-gdb-sim texinfo sharutils texlive dejagnu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 95,
                  "endLine": 57,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\t    sudo apt-get install gcc-multilib g++-multilib;\n\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n",
                    "rendered": {
                      "text": "\t    sudo apt-get install gcc-multilib g++-multilib;\n\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n",
                      "markdown": "`\t    sudo apt-get install gcc-multilib g++-multilib;\n\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n\t    sudo apt-get clean # clear the cache\n\t    sudo apt-get update ## -qq\n\t    sudo apt-get update\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 9,
                  "endLine": 54,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n\t    ;;\n\ti386-pc-linux-gnu)\n\t    sudo apt-get install gcc-multilib g++-multilib;\n\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n",
                    "rendered": {
                      "text": "\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n\t    ;;\n\ti386-pc-linux-gnu)\n\t    sudo apt-get install gcc-multilib g++-multilib;\n\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n",
                      "markdown": "`\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n\t    ;;\n\ti386-pc-linux-gnu)\n\t    sudo apt-get install gcc-multilib g++-multilib;\n\t    ;;\n\tmoxie-elf)\n\t    echo 'deb [trusted=yes] https://repos.moxielogic.org:7114/MoxieLogic moxiedev main' | sudo tee -a /etc/apt/sources.list\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 9,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    sudo apt-get install qemu-user-static\n\t    ;;\n\thppa-linux-gnu )\n\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n\t    ;;\n\ti386-pc-linux-gnu)\n\t    sudo apt-get install gcc-multilib g++-multilib;\n",
                    "rendered": {
                      "text": "\t    sudo apt-get install qemu-user-static\n\t    ;;\n\thppa-linux-gnu )\n\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n\t    ;;\n\ti386-pc-linux-gnu)\n\t    sudo apt-get install gcc-multilib g++-multilib;\n",
                      "markdown": "`\t    sudo apt-get install qemu-user-static\n\t    ;;\n\thppa-linux-gnu )\n\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n\t    ;;\n\ti386-pc-linux-gnu)\n\t    sudo apt-get install gcc-multilib g++-multilib;\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 9,
                  "endLine": 48,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tmips64el-linux-gnu | sparc64-linux-gnu)\n        ;;\n\talpha-linux-gnu | arm32v7-linux-gnu | m68k-linux-gnu | sh4-linux-gnu)\n\t    sudo apt-get install qemu-user-static\n\t    ;;\n\thppa-linux-gnu )\n\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n",
                    "rendered": {
                      "text": "\tmips64el-linux-gnu | sparc64-linux-gnu)\n        ;;\n\talpha-linux-gnu | arm32v7-linux-gnu | m68k-linux-gnu | sh4-linux-gnu)\n\t    sudo apt-get install qemu-user-static\n\t    ;;\n\thppa-linux-gnu )\n\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n",
                      "markdown": "`\tmips64el-linux-gnu | sparc64-linux-gnu)\n        ;;\n\talpha-linux-gnu | arm32v7-linux-gnu | m68k-linux-gnu | sh4-linux-gnu)\n\t    sudo apt-get install qemu-user-static\n\t    ;;\n\thppa-linux-gnu )\n\t    sudo apt-get install -y qemu-user-static g++-5-hppa-linux-gnu\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 142,
                  "endLine": 40,
                  "endColumn": 147,
                  "snippet": {
                    "text": "    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n    (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n\n",
                    "rendered": {
                      "text": "    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n    (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n\n",
                      "markdown": "`    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n    (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n    (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n\n",
                    "rendered": {
                      "text": "    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n    (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n\n",
                      "markdown": "`    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n    mkdir -p ~/i\n    (cd autoconf-2.71; ./configure --prefix=$HOME/i; make; make install)\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 8,
                  "endLine": 37,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n",
                    "rendered": {
                      "text": "    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n",
                      "markdown": "`    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n    wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 -qO - https://ftpmirror.gnu.org/autoconf/autoconf-2.71.tar.gz | tar -xvzf -\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 8,
                  "endLine": 36,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t    ;;\n    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n",
                    "rendered": {
                      "text": "\t    ;;\n    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n",
                      "markdown": "`\t    ;;\n    esac\n\n    sudo apt-get clean # clear the cache\n    sudo apt-get update\n\n    set -x\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n    esac\n\n",
                    "rendered": {
                      "text": "\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n    esac\n\n",
                      "markdown": "`\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n    esac\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n    esac\n",
                    "rendered": {
                      "text": "\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n    esac\n",
                      "markdown": "`\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n    esac\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n",
                    "rendered": {
                      "text": "\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n",
                      "markdown": "`\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n",
                    "rendered": {
                      "text": "\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n",
                      "markdown": "`\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\t*)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n",
                    "rendered": {
                      "text": "\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n",
                      "markdown": "`\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-s390x.tgz | \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 4,
                  "endLine": 23,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n",
                    "rendered": {
                      "text": "\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n",
                      "markdown": "`\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\ts390x-linux-gnu)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 1,
                  "endLine": 20,
                  "endColumn": 6,
                  "snippet": {
                    "text": "    case $HOST in\n\taarch64-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-arm.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n",
                    "rendered": {
                      "text": "    case $HOST in\n\taarch64-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-arm.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n",
                      "markdown": "`    case $HOST in\n\taarch64-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-arm.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-ppc64le.tgz | \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 4,
                  "endLine": 19,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    # Download and extract the rlgl client\n    case $HOST in\n\taarch64-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-arm.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n",
                    "rendered": {
                      "text": "    # Download and extract the rlgl client\n    case $HOST in\n\taarch64-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-arm.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n",
                      "markdown": "`    # Download and extract the rlgl client\n    case $HOST in\n\taarch64-linux-gnu)\n\t    wget -qO - https://rl.gl/cli/rlgl-linux-arm.tgz | \\\n\t\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\t    ;;\n\tppc64le-linux-gnu)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n    # Download and extract the rlgl client\n    wget -qO - https://rl.gl/cli/rlgl-darwin-amd64.tgz | \\\n\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\nelse\n    # Download and extract the rlgl client\n",
                    "rendered": {
                      "text": "\n    # Download and extract the rlgl client\n    wget -qO - https://rl.gl/cli/rlgl-darwin-amd64.tgz | \\\n\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\nelse\n    # Download and extract the rlgl client\n",
                      "markdown": "`\n    # Download and extract the rlgl client\n    wget -qO - https://rl.gl/cli/rlgl-darwin-amd64.tgz | \\\n\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\nelse\n    # Download and extract the rlgl client\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/install.sh"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    brew install automake libtool dejagnu;\n\n    # Download and extract the rlgl client\n    wget -qO - https://rl.gl/cli/rlgl-darwin-amd64.tgz | \\\n\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\nelse\n",
                    "rendered": {
                      "text": "    brew install automake libtool dejagnu;\n\n    # Download and extract the rlgl client\n    wget -qO - https://rl.gl/cli/rlgl-darwin-amd64.tgz | \\\n\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\nelse\n",
                      "markdown": "`    brew install automake libtool dejagnu;\n\n    # Download and extract the rlgl client\n    wget -qO - https://rl.gl/cli/rlgl-darwin-amd64.tgz | \\\n\ttar --strip-components=2 -xvzf - ./rlgl/rlgl;\n\nelse\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 47,
                  "endLine": 172,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    s*) index=yes   ;;\n    S*)             ;; # the index is always updated implicitly\n    c*) create=yes  ;;\n    u*)             ;; # TODO: don't ignore the update modifier\n    v*)             ;; # TODO: don't ignore the verbose modifier\n    *)\n      func_error \"unknown action specified\"\n",
                    "rendered": {
                      "text": "    s*) index=yes   ;;\n    S*)             ;; # the index is always updated implicitly\n    c*) create=yes  ;;\n    u*)             ;; # TODO: don't ignore the update modifier\n    v*)             ;; # TODO: don't ignore the verbose modifier\n    *)\n      func_error \"unknown action specified\"\n",
                      "markdown": "`    s*) index=yes   ;;\n    S*)             ;; # the index is always updated implicitly\n    c*) create=yes  ;;\n    u*)             ;; # TODO: don't ignore the update modifier\n    v*)             ;; # TODO: don't ignore the verbose modifier\n    *)\n      func_error \"unknown action specified\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 14,
                  "endLine": 84,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# for each of them.\n# When interpreting the content of the @FILE, do NOT use func_file_conv,\n# since the user would need to supply preconverted file names to\n# binutils ar, at least for MinGW.\nfunc_at_file ()\n{\n  operation=$2\n",
                    "rendered": {
                      "text": "# for each of them.\n# When interpreting the content of the @FILE, do NOT use func_file_conv,\n# since the user would need to supply preconverted file names to\n# binutils ar, at least for MinGW.\nfunc_at_file ()\n{\n  operation=$2\n",
                      "markdown": "`# for each of them.\n# When interpreting the content of the @FILE, do NOT use func_file_conv,\n# since the user would need to supply preconverted file names to\n# binutils ar, at least for MinGW.\nfunc_at_file ()\n{\n  operation=$2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 34,
                  "endLine": 227,
                  "endColumn": 39,
                  "snippet": {
                    "text": "      esac\n    done\n  else\n    $AR -NOLOGO -LIST \"$archive\" | sed -e 's/\\\\/\\\\\\\\/g' | while read member\n    do\n      $AR -NOLOGO -EXTRACT:\"$member\" \"$archive\" || exit $?\n    done\n",
                    "rendered": {
                      "text": "      esac\n    done\n  else\n    $AR -NOLOGO -LIST \"$archive\" | sed -e 's/\\\\/\\\\\\\\/g' | while read member\n    do\n      $AR -NOLOGO -EXTRACT:\"$member\" \"$archive\" || exit $?\n    done\n",
                      "markdown": "`      esac\n    done\n  else\n    $AR -NOLOGO -LIST \"$archive\" | sed -e 's/\\\\/\\\\\\\\/g' | while read member\n    do\n      $AR -NOLOGO -EXTRACT:\"$member\" \"$archive\" || exit $?\n    done\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 15,
                  "endLine": 150,
                  "endColumn": 21,
                  "snippet": {
                    "text": "func_file_conv \"$orig_archive\"\narchive=$file\n\n# strip leading dash in $action\naction=${action#-}\n\ndelete=\n",
                    "rendered": {
                      "text": "func_file_conv \"$orig_archive\"\narchive=$file\n\n# strip leading dash in $action\naction=${action#-}\n\ndelete=\n",
                      "markdown": "`func_file_conv \"$orig_archive\"\narchive=$file\n\n# strip leading dash in $action\naction=${action#-}\n\ndelete=\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 3,
                  "endLine": 104,
                  "endColumn": 8,
                  "snippet": {
                    "text": "     func_error \"no command.  Try '$0 --help' for more information.\"\n     ;;\n  -h | --h*)\n    cat <<EOF\nUsage: $me [--help] [--version] PROGRAM ACTION ARCHIVE [MEMBER...]\n\nMembers may be specified in a file named with @FILE.\n",
                    "rendered": {
                      "text": "     func_error \"no command.  Try '$0 --help' for more information.\"\n     ;;\n  -h | --h*)\n    cat <<EOF\nUsage: $me [--help] [--version] PROGRAM ACTION ARCHIVE [MEMBER...]\n\nMembers may be specified in a file named with @FILE.\n",
                      "markdown": "`     func_error \"no command.  Try '$0 --help' for more information.\"\n     ;;\n  -h | --h*)\n    cat <<EOF\nUsage: $me [--help] [--version] PROGRAM ACTION ARCHIVE [MEMBER...]\n\nMembers may be specified in a file named with @FILE.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 32,
                  "endLine": 66,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      fi\n      case $file_conv in\n\tmingw)\n\t  file=`cmd //C echo \"$file \" | sed -e 's/\"\\(.*\\) \" *$/\\1/'`\n\t  ;;\n\tcygwin)\n\t  file=`cygpath -m \"$file\" || echo \"$file\"`\n",
                    "rendered": {
                      "text": "      fi\n      case $file_conv in\n\tmingw)\n\t  file=`cmd //C echo \"$file \" | sed -e 's/\"\\(.*\\) \" *$/\\1/'`\n\t  ;;\n\tcygwin)\n\t  file=`cygpath -m \"$file\" || echo \"$file\"`\n",
                      "markdown": "`      fi\n      case $file_conv in\n\tmingw)\n\t  file=`cmd //C echo \"$file \" | sed -e 's/\"\\(.*\\) \" *$/\\1/'`\n\t  ;;\n\tcygwin)\n\t  file=`cygpath -m \"$file\" || echo \"$file\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.ci/ar-lib"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 15,
                  "endLine": 25,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n",
                    "rendered": {
                      "text": "\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n",
                      "markdown": "`\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/testsuite/libffi.call/negint.c"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n  si = -6;\n  ss = -12;\n  sc = -1;\n\n  checking (si, ss, sc);\n\n",
                    "rendered": {
                      "text": "\n  si = -6;\n  ss = -12;\n  sc = -1;\n\n  checking (si, ss, sc);\n\n",
                      "markdown": "`\n  si = -6;\n  ss = -12;\n  sc = -1;\n\n  checking (si, ss, sc);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/ia64/unix.S"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 40,
                  "endLine": 208,
                  "snippet": {
                    "text": "\t;;\n\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n\tbr.call.sptk.many b0 = memcpy#\n\t;;\n",
                    "rendered": {
                      "text": "\t;;\n\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n\tbr.call.sptk.many b0 = memcpy#\n\t;;\n",
                      "markdown": "`\t;;\n\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n\tbr.call.sptk.many b0 = memcpy#\n\t;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/ia64/unix.S"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 21,
                  "endLine": 57,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t.prologue\n\t/* Bit o trickiness.  We actually share a stack frame with ffi_call.\n\t   Rely on the fact that ffi_call uses a vframe and don't bother\n\t   tracking one here at all.  */\n\t.fframe\t0\n\t.save\tar.pfs, r36 // loc0\n\talloc   loc0 = ar.pfs, 4, 3, 8, 0\n",
                    "rendered": {
                      "text": "\t.prologue\n\t/* Bit o trickiness.  We actually share a stack frame with ffi_call.\n\t   Rely on the fact that ffi_call uses a vframe and don't bother\n\t   tracking one here at all.  */\n\t.fframe\t0\n\t.save\tar.pfs, r36 // loc0\n\talloc   loc0 = ar.pfs, 4, 3, 8, 0\n",
                      "markdown": "`\t.prologue\n\t/* Bit o trickiness.  We actually share a stack frame with ffi_call.\n\t   Rely on the fact that ffi_call uses a vframe and don't bother\n\t   tracking one here at all.  */\n\t.fframe\t0\n\t.save\tar.pfs, r36 // loc0\n\talloc   loc0 = ar.pfs, 4, 3, 8, 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/ia64/unix.S"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 29,
                  "endLine": 209,
                  "snippet": {
                    "text": "\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n\tbr.call.sptk.many b0 = memcpy#\n\t;;\n\tmov\tar.pfs = loc0\n",
                    "rendered": {
                      "text": "\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n\tbr.call.sptk.many b0 = memcpy#\n\t;;\n\tmov\tar.pfs = loc0\n",
                      "markdown": "`\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n\tbr.call.sptk.many b0 = memcpy#\n\t;;\n\tmov\tar.pfs = loc0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/ia64/unix.S"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 3,
                  "endLine": 206,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tmov\tout2 = in3\n\t;;\n\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n",
                    "rendered": {
                      "text": "\tmov\tout2 = in3\n\t;;\n\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n",
                      "markdown": "`\tmov\tout2 = in3\n\t;;\n\t// ia64 software calling convention requires\n\t// top 16 bytes of stack to be scratch space\n\t// PLT resolver uses that scratch space at\n\t// 'memcpy' symbol reolution time\n\tadd\tsp = -16, sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/ia64/unix.S"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 36,
                  "endLine": 2,
                  "endColumn": 41,
                  "snippet": {
                    "text": "/* -----------------------------------------------------------------------\n   unix.S - Copyright (c) 1998, 2008 Red Hat, Inc.\n            Copyright (c) 2000 Hewlett Packard Company\n   \n   IA64/unix Foreign Function Interface \n",
                    "rendered": {
                      "text": "/* -----------------------------------------------------------------------\n   unix.S - Copyright (c) 1998, 2008 Red Hat, Inc.\n            Copyright (c) 2000 Hewlett Packard Company\n   \n   IA64/unix Foreign Function Interface \n",
                      "markdown": "`/* -----------------------------------------------------------------------\n   unix.S - Copyright (c) 1998, 2008 Red Hat, Inc.\n            Copyright (c) 2000 Hewlett Packard Company\n   \n   IA64/unix Foreign Function Interface \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/csky/sysv.S"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 21,
                  "endLine": 284,
                  "endColumn": 25,
                  "snippet": {
                    "text": " /* return INT64 */\n cmpnei a3, FFI_TYPE_SINT64\n bt .Lretint\n /* stw a0, (a2, 0x0) at .Lretint */\n stw a1, (a2, 0x4)\n\n.Lretint:\n",
                    "rendered": {
                      "text": " /* return INT64 */\n cmpnei a3, FFI_TYPE_SINT64\n bt .Lretint\n /* stw a0, (a2, 0x0) at .Lretint */\n stw a1, (a2, 0x4)\n\n.Lretint:\n",
                      "markdown": "` /* return INT64 */\n cmpnei a3, FFI_TYPE_SINT64\n bt .Lretint\n /* stw a0, (a2, 0x0) at .Lretint */\n stw a1, (a2, 0x4)\n\n.Lretint:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/csky/sysv.S"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 21,
                  "endLine": 118,
                  "endColumn": 25,
                  "snippet": {
                    "text": " /* return INT64 */\n cmpnei a3, FFI_TYPE_SINT64\n bt .Lretint\n /* stw a0, (a2, 0x0) at .Lretint */\n stw a1, (a2, 0x4)\n\n.Lretint:\n",
                    "rendered": {
                      "text": " /* return INT64 */\n cmpnei a3, FFI_TYPE_SINT64\n bt .Lretint\n /* stw a0, (a2, 0x0) at .Lretint */\n stw a1, (a2, 0x4)\n\n.Lretint:\n",
                      "markdown": "` /* return INT64 */\n cmpnei a3, FFI_TYPE_SINT64\n bt .Lretint\n /* stw a0, (a2, 0x0) at .Lretint */\n stw a1, (a2, 0x4)\n\n.Lretint:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux64.S"
                },
                "region": {
                  "startLine": 677,
                  "startColumn": 32,
                  "endLine": 677,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n\t.word   L$CFI23-L$CFI22\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\n\t.align 8\n",
                    "rendered": {
                      "text": "\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n\t.word   L$CFI23-L$CFI22\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\n\t.align 8\n",
                      "markdown": "`\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n\t.word   L$CFI23-L$CFI22\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\n\t.align 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux64.S"
                },
                "region": {
                  "startLine": 666,
                  "startColumn": 49,
                  "endLine": 666,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t.byte   0x9\t;# DW_CFA_register: r3 in r1\n\t.uleb128 0x3\n\t.uleb128 0x1\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf: r2 at cfa-16\n\t.uleb128 0x2\n\t.sleb128 -2\n\n",
                    "rendered": {
                      "text": "\t.byte   0x9\t;# DW_CFA_register: r3 in r1\n\t.uleb128 0x3\n\t.uleb128 0x1\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf: r2 at cfa-16\n\t.uleb128 0x2\n\t.sleb128 -2\n\n",
                      "markdown": "`\t.byte   0x9\t;# DW_CFA_register: r3 in r1\n\t.uleb128 0x3\n\t.uleb128 0x1\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf: r2 at cfa-16\n\t.uleb128 0x2\n\t.sleb128 -2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux64.S"
                },
                "region": {
                  "startLine": 649,
                  "startColumn": 32,
                  "endLine": 649,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t.word   L$CFI13-L$CFI12\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\t.byte\t0x84\t;# DW_CFA_offset: r4 at cfa+8\n\t.uleb128 1\n\n\t.align 8\n",
                    "rendered": {
                      "text": "\t.word   L$CFI13-L$CFI12\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\t.byte\t0x84\t;# DW_CFA_offset: r4 at cfa+8\n\t.uleb128 1\n\n\t.align 8\n",
                      "markdown": "`\t.word   L$CFI13-L$CFI12\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\t.byte\t0x84\t;# DW_CFA_offset: r4 at cfa+8\n\t.uleb128 1\n\n\t.align 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux64.S"
                },
                "region": {
                  "startLine": 647,
                  "startColumn": 32,
                  "endLine": 647,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n\t.word   L$CFI13-L$CFI12\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\t.byte\t0x84\t;# DW_CFA_offset: r4 at cfa+8\n\t.uleb128 1\n",
                    "rendered": {
                      "text": "\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n\t.word   L$CFI13-L$CFI12\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\t.byte\t0x84\t;# DW_CFA_offset: r4 at cfa+8\n\t.uleb128 1\n",
                      "markdown": "`\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n\t.word   L$CFI13-L$CFI12\n\t.byte\t0x83\t;# DW_CFA_offset: r3 at cfa+0\n\t.uleb128 0\n\t.byte\t0x84\t;# DW_CFA_offset: r4 at cfa+8\n\t.uleb128 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/hpux64.S"
                },
                "region": {
                  "startLine": 637,
                  "startColumn": 49,
                  "endLine": 637,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t.byte\t0x9\t;# DW_CFA_register: r3 in r1\n\t.uleb128 0x3\n\t.uleb128 0x1\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf: r2 at cfa-16\n\t.uleb128 0x2\n\t.sleb128 -2\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n",
                    "rendered": {
                      "text": "\t.byte\t0x9\t;# DW_CFA_register: r3 in r1\n\t.uleb128 0x3\n\t.uleb128 0x1\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf: r2 at cfa-16\n\t.uleb128 0x2\n\t.sleb128 -2\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n",
                      "markdown": "`\t.byte\t0x9\t;# DW_CFA_register: r3 in r1\n\t.uleb128 0x3\n\t.uleb128 0x1\n\t.byte   0x11    ;# DW_CFA_offset_extended_sf: r2 at cfa-16\n\t.uleb128 0x2\n\t.sleb128 -2\n\t.byte   0x4     ;# DW_CFA_advance_loc4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/src/pa/ffi.c"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 35,
                  "endLine": 196,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tcase FFI_TYPE_DOUBLE:\n\t  /* Align slot for 64-bit type.  */\n\t  slot += (slot & 1) ? 1 : 2;\n\t  debug(3, \"Storing UINT64(double) at slot %u\\n\", slot);\n\t  *(UINT64 *)(stack - slot) = *(UINT64 *)(*p_argv);\n\t  switch (slot - FIRST_ARG_SLOT)\n\t    {\n",
                    "rendered": {
                      "text": "\tcase FFI_TYPE_DOUBLE:\n\t  /* Align slot for 64-bit type.  */\n\t  slot += (slot & 1) ? 1 : 2;\n\t  debug(3, \"Storing UINT64(double) at slot %u\\n\", slot);\n\t  *(UINT64 *)(stack - slot) = *(UINT64 *)(*p_argv);\n\t  switch (slot - FIRST_ARG_SLOT)\n\t    {\n",
                      "markdown": "`\tcase FFI_TYPE_DOUBLE:\n\t  /* Align slot for 64-bit type.  */\n\t  slot += (slot & 1) ? 1 : 2;\n\t  debug(3, \"Storing UINT64(double) at slot %u\\n\", slot);\n\t  *(UINT64 *)(stack - slot) = *(UINT64 *)(*p_argv);\n\t  switch (slot - FIRST_ARG_SLOT)\n\t    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 14,
                  "endLine": 70,
                  "endColumn": 20,
                  "snippet": {
                    "text": "          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}\n\n      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n",
                    "rendered": {
                      "text": "          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}\n\n      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n",
                      "markdown": "`          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}\n\n      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 14,
                  "endLine": 169,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        if: success() || failure()\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=${{ matrix.browser }} --policy=https://github.com/libffi/rlgl-policy.git testsuite/emscripten/test-results/junit.xml\n          exit $?\n",
                    "rendered": {
                      "text": "        if: success() || failure()\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=${{ matrix.browser }} --policy=https://github.com/libffi/rlgl-policy.git testsuite/emscripten/test-results/junit.xml\n          exit $?\n",
                      "markdown": "`        if: success() || failure()\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=${{ matrix.browser }} --policy=https://github.com/libffi/rlgl-policy.git testsuite/emscripten/test-results/junit.xml\n          exit $?\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 9,
                  "endLine": 168,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      - name: Install rlgl and run\n        if: success() || failure()\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=${{ matrix.browser }} --policy=https://github.com/libffi/rlgl-policy.git testsuite/emscripten/test-results/junit.xml\n",
                    "rendered": {
                      "text": "      - name: Install rlgl and run\n        if: success() || failure()\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=${{ matrix.browser }} --policy=https://github.com/libffi/rlgl-policy.git testsuite/emscripten/test-results/junit.xml\n",
                      "markdown": "`      - name: Install rlgl and run\n        if: success() || failure()\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=${{ matrix.browser }} --policy=https://github.com/libffi/rlgl-policy.git testsuite/emscripten/test-results/junit.xml\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 9,
                  "endLine": 153,
                  "endColumn": 14,
                  "snippet": {
                    "text": "          channels: conda-forge\n      - name: Install test dependencies\n        run: |\n          pip install pytest-pyodide==${{ env.PYODIDE_VERSION }}\n\n      - name:\n        run: |\n",
                    "rendered": {
                      "text": "          channels: conda-forge\n      - name: Install test dependencies\n        run: |\n          pip install pytest-pyodide==${{ env.PYODIDE_VERSION }}\n\n      - name:\n        run: |\n",
                      "markdown": "`          channels: conda-forge\n      - name: Install test dependencies\n        run: |\n          pip install pytest-pyodide==${{ env.PYODIDE_VERSION }}\n\n      - name:\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 31,
                  "endLine": 133,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      matrix:\n        bigint: [\"--wasm-bigint\", \"\"]\n        browser: [\"chrome\"]\n        # FIXME: selenium can't find gecko driver for \"firefox\"\n    runs-on: ubuntu-22.04\n    needs: [build]\n    steps:\n",
                    "rendered": {
                      "text": "      matrix:\n        bigint: [\"--wasm-bigint\", \"\"]\n        browser: [\"chrome\"]\n        # FIXME: selenium can't find gecko driver for \"firefox\"\n    runs-on: ubuntu-22.04\n    needs: [build]\n    steps:\n",
                      "markdown": "`      matrix:\n        bigint: [\"--wasm-bigint\", \"\"]\n        browser: [\"chrome\"]\n        # FIXME: selenium can't find gecko driver for \"firefox\"\n    runs-on: ubuntu-22.04\n    needs: [build]\n    steps:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 9,
                  "endLine": 117,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      - name: build tests\n        run: |\n          cp -r testsuite/libffi.call testsuite/libffi.call.test\n          cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test ${{ matrix.bigint }}\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test ${{ matrix.bigint }}\n\n",
                    "rendered": {
                      "text": "      - name: build tests\n        run: |\n          cp -r testsuite/libffi.call testsuite/libffi.call.test\n          cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test ${{ matrix.bigint }}\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test ${{ matrix.bigint }}\n\n",
                      "markdown": "`      - name: build tests\n        run: |\n          cp -r testsuite/libffi.call testsuite/libffi.call.test\n          cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test ${{ matrix.bigint }}\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test ${{ matrix.bigint }}\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 9,
                  "endLine": 116,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n      - name: build tests\n        run: |\n          cp -r testsuite/libffi.call testsuite/libffi.call.test\n          cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test ${{ matrix.bigint }}\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test ${{ matrix.bigint }}\n",
                    "rendered": {
                      "text": "\n      - name: build tests\n        run: |\n          cp -r testsuite/libffi.call testsuite/libffi.call.test\n          cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test ${{ matrix.bigint }}\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test ${{ matrix.bigint }}\n",
                      "markdown": "`\n      - name: build tests\n        run: |\n          cp -r testsuite/libffi.call testsuite/libffi.call.test\n          cp -r testsuite/libffi.closures testsuite/libffi.closures.test\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.call.test ${{ matrix.bigint }}\n          ./testsuite/emscripten/build-tests.sh testsuite/libffi.closures.test ${{ matrix.bigint }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 14,
                  "endLine": 81,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install rlgl and run\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=wasm32-unknown-linux --policy=https://github.com/libffi/rlgl-policy.git testsuite/libffi.log\n          exit $?\n",
                    "rendered": {
                      "text": "      - name: Install rlgl and run\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=wasm32-unknown-linux --policy=https://github.com/libffi/rlgl-policy.git testsuite/libffi.log\n          exit $?\n",
                      "markdown": "`      - name: Install rlgl and run\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=wasm32-unknown-linux --policy=https://github.com/libffi/rlgl-policy.git testsuite/libffi.log\n          exit $?\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n      - name: Install rlgl and run\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=wasm32-unknown-linux --policy=https://github.com/libffi/rlgl-policy.git testsuite/libffi.log\n",
                    "rendered": {
                      "text": "\n      - name: Install rlgl and run\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=wasm32-unknown-linux --policy=https://github.com/libffi/rlgl-policy.git testsuite/libffi.log\n",
                      "markdown": "`\n      - name: Install rlgl and run\n        run: |\n          wget -qO - https://rl.gl/cli/rlgl-linux-amd64.tgz | \\\n               tar --strip-components=2 -xvzf - ./rlgl/rlgl;\n          ./rlgl l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl\n          ./rlgl e -l project=libffi -l sha=${GITHUB_SHA:0:7} -l CC='emcc' -l host=wasm32-unknown-linux --policy=https://github.com/libffi/rlgl-policy.git testsuite/libffi.log\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 14,
                  "endLine": 72,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n      - name: run tests\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n      - name: run tests\n        run: |\n",
                      "markdown": "`      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n      - name: run tests\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/.github/workflows/emscripten.yml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 14,
                  "endLine": 70,
                  "endColumn": 20,
                  "snippet": {
                    "text": "          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}\n\n      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n",
                    "rendered": {
                      "text": "          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}\n\n      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n",
                      "markdown": "`          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}\n\n      - name: Install dejagnu\n        shell: bash -l {0}\n        run: |\n          sudo apt install -y dejagnu\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/man/ffi_call.3"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 47,
                  "endLine": 19,
                  "endColumn": 51,
                  "snippet": {
                    "text": "The\n.Nm ffi_call\nfunction provides a simple mechanism for invoking a function without\nrequiring knowledge of the function's interface at compile time.\n.Fa fn\nis called with the values retrieved from the pointers in the\n.Fa avalue\n",
                    "rendered": {
                      "text": "The\n.Nm ffi_call\nfunction provides a simple mechanism for invoking a function without\nrequiring knowledge of the function's interface at compile time.\n.Fa fn\nis called with the values retrieved from the pointers in the\n.Fa avalue\n",
                      "markdown": "`The\n.Nm ffi_call\nfunction provides a simple mechanism for invoking a function without\nrequiring knowledge of the function's interface at compile time.\n.Fa fn\nis called with the values retrieved from the pointers in the\n.Fa avalue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 21,
                  "endLine": 324,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  AC_MSG_RESULT($libat_shared_libgcc)\nfi\n\n# For GNU ld, we need at least this version.  The format is described in\n# LIBFFI_CHECK_LINKER_FEATURES above.\nlibat_min_gnu_ld_version=21400\n# XXXXXXXXXXX libat_gnu_ld_version=21390\n",
                    "rendered": {
                      "text": "  AC_MSG_RESULT($libat_shared_libgcc)\nfi\n\n# For GNU ld, we need at least this version.  The format is described in\n# LIBFFI_CHECK_LINKER_FEATURES above.\nlibat_min_gnu_ld_version=21400\n# XXXXXXXXXXX libat_gnu_ld_version=21390\n",
                      "markdown": "`  AC_MSG_RESULT($libat_shared_libgcc)\nfi\n\n# For GNU ld, we need at least this version.  The format is described in\n# LIBFFI_CHECK_LINKER_FEATURES above.\nlibat_min_gnu_ld_version=21400\n# XXXXXXXXXXX libat_gnu_ld_version=21390\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 17,
                  "endLine": 204,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n    # .eh_frame and now some of the glibc sections for iconv).\n    # Bzzzzt.  Thanks for playing, maybe next time.\n    AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])\n",
                    "rendered": {
                      "text": "    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n    # .eh_frame and now some of the glibc sections for iconv).\n    # Bzzzzt.  Thanks for playing, maybe next time.\n    AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])\n",
                      "markdown": "`    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n    # .eh_frame and now some of the glibc sections for iconv).\n    # Bzzzzt.  Thanks for playing, maybe next time.\n    AC_MSG_CHECKING([for ld that supports -Wl,--gc-sections])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 29,
                  "endLine": 201,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    CFLAGS='-x c++  -Wl,--gc-sections'\n\n    # Check for -Wl,--gc-sections\n    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n",
                    "rendered": {
                      "text": "    CFLAGS='-x c++  -Wl,--gc-sections'\n\n    # Check for -Wl,--gc-sections\n    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n",
                      "markdown": "`    CFLAGS='-x c++  -Wl,--gc-sections'\n\n    # Check for -Wl,--gc-sections\n    # XXX This test is broken at the moment, as symbols required for linking\n    # are now in libsupc++ (not built yet).  In addition, this test has\n    # cored on solaris in the past.  In addition, --gc-sections doesn't\n    # really work at the moment (keeps on discarding used sections, first\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 12,
                  "endLine": 36,
                  "endColumn": 16,
                  "snippet": {
                    "text": "   #    unmap any subset of those pages, the pages that were not\n   #    explicitly unmapped remain accessible.\n   # 2. If you map two adjacent blocks of memory and then unmap them\n   #    both at once, they must both go away.\n   # Systems known to be in this category are Windows (all variants),\n   # VMS, and Darwin.\n   case \"$host_os\" in\n",
                    "rendered": {
                      "text": "   #    unmap any subset of those pages, the pages that were not\n   #    explicitly unmapped remain accessible.\n   # 2. If you map two adjacent blocks of memory and then unmap them\n   #    both at once, they must both go away.\n   # Systems known to be in this category are Windows (all variants),\n   # VMS, and Darwin.\n   case \"$host_os\" in\n",
                      "markdown": "`   #    unmap any subset of those pages, the pages that were not\n   #    explicitly unmapped remain accessible.\n   # 2. If you map two adjacent blocks of memory and then unmap them\n   #    both at once, they must both go away.\n   # Systems known to be in this category are Windows (all variants),\n   # VMS, and Darwin.\n   case \"$host_os\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 9,
                  "endLine": 312,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    libat_libgcc_s_suffix=`${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS \\\n\t\t\t     -shared -shared-libgcc -o conftest.so \\\n\t\t\t     conftest.c -v 2>&1 >/dev/null \\\n\t\t\t     | sed -n 's/^.* -lgcc_s\\([^ ]*\\) .*$/\\1/p'`\nchangequote([,])dnl\n    rm -f conftest.c conftest.so\n    if test x${libat_libgcc_s_suffix+set} = xset; then\n",
                    "rendered": {
                      "text": "    libat_libgcc_s_suffix=`${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS \\\n\t\t\t     -shared -shared-libgcc -o conftest.so \\\n\t\t\t     conftest.c -v 2>&1 >/dev/null \\\n\t\t\t     | sed -n 's/^.* -lgcc_s\\([^ ]*\\) .*$/\\1/p'`\nchangequote([,])dnl\n    rm -f conftest.c conftest.so\n    if test x${libat_libgcc_s_suffix+set} = xset; then\n",
                      "markdown": "`    libat_libgcc_s_suffix=`${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS \\\n\t\t\t     -shared -shared-libgcc -o conftest.so \\\n\t\t\t     conftest.c -v 2>&1 >/dev/null \\\n\t\t\t     | sed -n 's/^.* -lgcc_s\\([^ ]*\\) .*$/\\1/p'`\nchangequote([,])dnl\n    rm -f conftest.c conftest.so\n    if test x${libat_libgcc_s_suffix+set} = xset; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 3,
                  "endLine": 305,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[return 0;]])],[libat_shared_libgcc=yes],[libat_shared_libgcc=no])\n  CFLAGS=\"$ac_save_CFLAGS\"\n  if test $libat_shared_libgcc = no; then\n    cat > conftest.c <<EOF\nint main (void) { return 0; }\nEOF\nchangequote(,)dnl\n",
                    "rendered": {
                      "text": "  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[return 0;]])],[libat_shared_libgcc=yes],[libat_shared_libgcc=no])\n  CFLAGS=\"$ac_save_CFLAGS\"\n  if test $libat_shared_libgcc = no; then\n    cat > conftest.c <<EOF\nint main (void) { return 0; }\nEOF\nchangequote(,)dnl\n",
                      "markdown": "`  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[return 0;]])],[libat_shared_libgcc=yes],[libat_shared_libgcc=no])\n  CFLAGS=\"$ac_save_CFLAGS\"\n  if test $libat_shared_libgcc = no; then\n    cat > conftest.c <<EOF\nint main (void) { return 0; }\nEOF\nchangequote(,)dnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 61,
                  "endLine": 243,
                  "endColumn": 69,
                  "snippet": {
                    "text": "dnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\ndnl  +  Usage:  LIBFFI_ENABLE_SYMVERS[(DEFAULT)]\n",
                    "rendered": {
                      "text": "dnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\ndnl  +  Usage:  LIBFFI_ENABLE_SYMVERS[(DEFAULT)]\n",
                      "markdown": "`dnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\ndnl  +  Usage:  LIBFFI_ENABLE_SYMVERS[(DEFAULT)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 41,
                  "endLine": 242,
                  "endColumn": 49,
                  "snippet": {
                    "text": "dnl Add version tags to symbols in shared library (or not), additionally\ndnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\n",
                    "rendered": {
                      "text": "dnl Add version tags to symbols in shared library (or not), additionally\ndnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\n",
                      "markdown": "`dnl Add version tags to symbols in shared library (or not), additionally\ndnl marking other symbols as private/local (or not).\ndnl\ndnl --enable-symvers=style adds a version script to the linker call when\ndnl       creating the shared library.  The choice of version script is\ndnl       controlled by 'style'.\ndnl --disable-symvers does not.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 8,
                  "endLine": 185,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  fi\n  changequote(,)\n  ldver=`$LD --version 2>/dev/null |\n         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n  changequote([,])\n  libat_gnu_ld_version=`echo $ldver | \\\n         $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n",
                    "rendered": {
                      "text": "  fi\n  changequote(,)\n  ldver=`$LD --version 2>/dev/null |\n         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n  changequote([,])\n  libat_gnu_ld_version=`echo $ldver | \\\n         $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n",
                      "markdown": "`  fi\n  changequote(,)\n  ldver=`$LD --version 2>/dev/null |\n         sed -e 's/GNU gold /GNU ld /;s/GNU ld version /GNU ld /;s/GNU ld ([^)]*) /GNU ld /;s/GNU ld \\([0-9.][0-9.]*\\).*/\\1/; q'`\n  changequote([,])\n  libat_gnu_ld_version=`echo $ldver | \\\n         $AWK -F. '{ if (NF<3) [$]3=0; print ([$]1*100+[$]2)*100+[$]3 }'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 32,
                  "endLine": 180,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n  if $LD --version 2>/dev/null | grep 'LLD '> /dev/null 2>&1; then\n    libat_ld_is_lld=yes\n  fi\n  changequote(,)\n",
                    "rendered": {
                      "text": "    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n  if $LD --version 2>/dev/null | grep 'LLD '> /dev/null 2>&1; then\n    libat_ld_is_lld=yes\n  fi\n  changequote(,)\n",
                      "markdown": "`    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n  if $LD --version 2>/dev/null | grep 'LLD '> /dev/null 2>&1; then\n    libat_ld_is_lld=yes\n  fi\n  changequote(,)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 32,
                  "endLine": 176,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  # Start by getting the version number.  I think the libtool test already\n  # does some of this, but throws away the result.\n  libat_ld_is_gold=no\n  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n",
                    "rendered": {
                      "text": "  # Start by getting the version number.  I think the libtool test already\n  # does some of this, but throws away the result.\n  libat_ld_is_gold=no\n  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n",
                      "markdown": "`  # Start by getting the version number.  I think the libtool test already\n  # does some of this, but throws away the result.\n  libat_ld_is_gold=no\n  if $LD --version 2>/dev/null | grep 'GNU gold'> /dev/null 2>&1; then\n    libat_ld_is_gold=yes\n  fi\n  libat_ld_is_lld=no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/acinclude.m4"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 3,
                  "endLine": 161,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  # The name set by libtool depends on the version of libtool.  Shame on us\n  # for depending on an impl detail, but c'est la vie.  Older versions used\n  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n  # set (hence we're using an older libtool), then set it.\n  if test x${with_gnu_ld+set} != xset; then\n",
                    "rendered": {
                      "text": "  # The name set by libtool depends on the version of libtool.  Shame on us\n  # for depending on an impl detail, but c'est la vie.  Older versions used\n  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n  # set (hence we're using an older libtool), then set it.\n  if test x${with_gnu_ld+set} != xset; then\n",
                      "markdown": "`  # The name set by libtool depends on the version of libtool.  Shame on us\n  # for depending on an impl detail, but c'est la vie.  Older versions used\n  # ac_cv_prog_gnu_ld, but now it's lt_cv_prog_gnu_ld, and is copied back on\n  # top of with_gnu_ld (which is also set by --with-gnu-ld, so that actually\n  # makes sense).  We'll test with_gnu_ld everywhere else, so if that isn't\n  # set (hence we're using an older libtool), then set it.\n  if test x${with_gnu_ld+set} != xset; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 67,
                  "endLine": 52,
                  "endColumn": 71,
                  "snippet": {
                    "text": "}\n\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n",
                    "rendered": {
                      "text": "}\n\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n",
                      "markdown": "`}\n\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 19,
                  "endLine": 5,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n",
                    "rendered": {
                      "text": "\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n",
                      "markdown": "`\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 35,
                  "endLine": 329,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n\tnext;\n    }\n    # Important sanity check.  This script can't handle lots of formats\n    # that GNU ld can, so be sure to error out if one is seen!\n    die \"strange line `$_'\";\n}\n",
                    "rendered": {
                      "text": "\t}\n\tnext;\n    }\n    # Important sanity check.  This script can't handle lots of formats\n    # that GNU ld can, so be sure to error out if one is seen!\n    die \"strange line `$_'\";\n}\n",
                      "markdown": "`\t}\n\tnext;\n    }\n    # Important sanity check.  This script can't handle lots of formats\n    # that GNU ld can, so be sure to error out if one is seen!\n    die \"strange line `$_'\";\n}\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 9,
                  "endLine": 147,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t# Remember symbol.\n\t$sym_hash{$name}++;\n    }\n    close READELF or die \"readelf error\";\n}\n\n##########\n",
                    "rendered": {
                      "text": "\t# Remember symbol.\n\t$sym_hash{$name}++;\n    }\n    close READELF or die \"readelf error\";\n}\n\n##########\n",
                      "markdown": "`\t# Remember symbol.\n\t$sym_hash{$name}++;\n    }\n    close READELF or die \"readelf error\";\n}\n\n##########\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 46,
                  "endLine": 53,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n\n",
                    "rendered": {
                      "text": "\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n\n",
                      "markdown": "`\n# We need to detect and ignore hidden symbols.  Solaris nm can only detect\n# this in the harder to parse default output format, and GNU nm not at all,\n# so use elfdump -s in the native case and GNU readelf -s otherwise.\n# GNU objdump -t cannot be used since it produces a variable number of\n# columns.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# A comment with the original pattern and its type is left in the output\n# file to make it easy to understand the matches.\n#\n# It uses elfdump when present (native), GNU readelf otherwise.\n# It depends on the GNU version of c++filt, since it must understand the\n# GNU mangling style.\n\n",
                    "rendered": {
                      "text": "# A comment with the original pattern and its type is left in the output\n# file to make it easy to understand the matches.\n#\n# It uses elfdump when present (native), GNU readelf otherwise.\n# It depends on the GNU version of c++filt, since it must understand the\n# GNU mangling style.\n\n",
                      "markdown": "`# A comment with the original pattern and its type is left in the output\n# file to make it easy to understand the matches.\n#\n# It uses elfdump when present (native), GNU readelf otherwise.\n# It depends on the GNU version of c++filt, since it must understand the\n# GNU mangling style.\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 64,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n# that matched (or nothing if no match was found).\n# A comment with the original pattern and its type is left in the output\n",
                    "rendered": {
                      "text": "# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n# that matched (or nothing if no match was found).\n# A comment with the original pattern and its type is left in the output\n",
                      "markdown": "`# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n# that matched (or nothing if no match was found).\n# A comment with the original pattern and its type is left in the output\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 15,
                  "endLine": 7,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n",
                    "rendered": {
                      "text": "#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n",
                      "markdown": "`#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n# Each glob pattern, C++ mangled pattern or literal in the input script is\n# matched against all global symbols in the input objects, emitting those\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 5,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n",
                    "rendered": {
                      "text": "\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n",
                      "markdown": "`\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libffi.zip/make_sunver.pl"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 6,
                  "endLine": 5,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n",
                    "rendered": {
                      "text": "\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n",
                      "markdown": "`\n# make_sunver.pl\n#\n# This script takes at least two arguments, a GNU style version script and\n# a list of object and archive files, and generates a corresponding Sun\n# style version script as follows:\n#\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}