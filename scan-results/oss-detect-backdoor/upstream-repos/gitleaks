{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/rubygems.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 72,
                  "endLine": 13,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"rubygems-api-token\",\n\t\tDescription: \"Identified a Rubygem API token, potentially compromising Ruby library distribution and package management.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`rubygems_[a-f0-9]{48}`, true),\n\n\t\tKeywords: []string{\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"rubygems-api-token\",\n\t\tDescription: \"Identified a Rubygem API token, potentially compromising Ruby library distribution and package management.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`rubygems_[a-f0-9]{48}`, true),\n\n\t\tKeywords: []string{\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"rubygems-api-token\",\n\t\tDescription: \"Identified a Rubygem API token, potentially compromising Ruby library distribution and package management.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`rubygems_[a-f0-9]{48}`, true),\n\n\t\tKeywords: []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jfrog.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 42,
                  "endLine": 32,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t}\n\t// validate\n\ttps := []string{\n\t\tfmt.Sprintf(\"--set imagePullSecretJfrog.password=%s\", secrets.NewSecret(utils.AlphaNumeric(\"73\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                    "rendered": {
                      "text": "\t}\n\t// validate\n\ttps := []string{\n\t\tfmt.Sprintf(\"--set imagePullSecretJfrog.password=%s\", secrets.NewSecret(utils.AlphaNumeric(\"73\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                      "markdown": "`\t}\n\t// validate\n\ttps := []string{\n\t\tfmt.Sprintf(\"--set imagePullSecretJfrog.password=%s\", secrets.NewSecret(utils.AlphaNumeric(\"73\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 6,
                  "endLine": 372,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  target:\n    creationPolicy: Owner\n  data:\n    - secretKey: api-key\n      remoteRef:\n        key: my-secrets-manager-secret`,\n\t\t\"after-sopssecret.yml\": `apiVersion: isindir.github.com/v1alpha3\n",
                    "rendered": {
                      "text": "  target:\n    creationPolicy: Owner\n  data:\n    - secretKey: api-key\n      remoteRef:\n        key: my-secrets-manager-secret`,\n\t\t\"after-sopssecret.yml\": `apiVersion: isindir.github.com/v1alpha3\n",
                      "markdown": "`  target:\n    creationPolicy: Owner\n  data:\n    - secretKey: api-key\n      remoteRef:\n        key: my-secrets-manager-secret`,\n\t\t\"after-sopssecret.yml\": `apiVersion: isindir.github.com/v1alpha3\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 6,
                  "endLine": 315,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  target:\n    creationPolicy: Owner\n  data:\n    - secretKey: api-key\n      remoteRef:\n        key: my-secrets-manager-secret\nmetadata:\n",
                    "rendered": {
                      "text": "  target:\n    creationPolicy: Owner\n  data:\n    - secretKey: api-key\n      remoteRef:\n        key: my-secrets-manager-secret\nmetadata:\n",
                      "markdown": "`  target:\n    creationPolicy: Owner\n  data:\n    - secretKey: api-key\n      remoteRef:\n        key: my-secrets-manager-secret\nmetadata:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 23,
                  "endLine": 288,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-template.yaml\": `apiVersion: v1\n data:\n \tpassword: {{ .Values.Password }}\n kind: secret\n metadata:\n \tname: secret-sa-sample\n",
                    "rendered": {
                      "text": "\t\tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-template.yaml\": `apiVersion: v1\n data:\n \tpassword: {{ .Values.Password }}\n kind: secret\n metadata:\n \tname: secret-sa-sample\n",
                      "markdown": "`\t\tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-template.yaml\": `apiVersion: v1\n data:\n \tpassword: {{ .Values.Password }}\n kind: secret\n metadata:\n \tname: secret-sa-sample\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 2,
                  "endLine": 288,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-template.yaml\": `apiVersion: v1\n data:\n \tpassword: {{ .Values.Password }}\n kind: secret\n metadata:\n \tname: secret-sa-sample\n",
                    "rendered": {
                      "text": "\t\tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-template.yaml\": `apiVersion: v1\n data:\n \tpassword: {{ .Values.Password }}\n kind: secret\n metadata:\n \tname: secret-sa-sample\n",
                      "markdown": "`\t\tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-template.yaml\": `apiVersion: v1\n data:\n \tpassword: {{ .Values.Password }}\n kind: secret\n metadata:\n \tname: secret-sa-sample\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 15,
                  "endLine": 248,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        labels:\n            app: ENC[AES256_GCM,data:t9ujIQ==,iv:slZBpmKF+DOg/wVBWmq5iTqkRBZUMao0a3MdoxzJs3s=,tag:xJyhdJ4rn/cB/4mxHzmGig==,type:str]\n        stringData:\n            db-password: ENC[AES256_GCM,data:O+5l4g==,iv:c/dS4BCBMbnKsXYuzBuCuVQt8RV9bOv5HgdpL+iwmns=,tag:KkQfh6OymvCt4uC13p318g==,type:str]\nsops:\n    kms: []\n    gcp_kms: []\n",
                    "rendered": {
                      "text": "        labels:\n            app: ENC[AES256_GCM,data:t9ujIQ==,iv:slZBpmKF+DOg/wVBWmq5iTqkRBZUMao0a3MdoxzJs3s=,tag:xJyhdJ4rn/cB/4mxHzmGig==,type:str]\n        stringData:\n            db-password: ENC[AES256_GCM,data:O+5l4g==,iv:c/dS4BCBMbnKsXYuzBuCuVQt8RV9bOv5HgdpL+iwmns=,tag:KkQfh6OymvCt4uC13p318g==,type:str]\nsops:\n    kms: []\n    gcp_kms: []\n",
                      "markdown": "`        labels:\n            app: ENC[AES256_GCM,data:t9ujIQ==,iv:slZBpmKF+DOg/wVBWmq5iTqkRBZUMao0a3MdoxzJs3s=,tag:xJyhdJ4rn/cB/4mxHzmGig==,type:str]\n        stringData:\n            db-password: ENC[AES256_GCM,data:O+5l4g==,iv:c/dS4BCBMbnKsXYuzBuCuVQt8RV9bOv5HgdpL+iwmns=,tag:KkQfh6OymvCt4uC13p318g==,type:str]\nsops:\n    kms: []\n    gcp_kms: []\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 15,
                  "endLine": 208,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: {{ htpasswd }}\n---                       \napiVersion: v1            \n                          kind: ReplicationController`,\n",
                    "rendered": {
                      "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: {{ htpasswd }}\n---                       \napiVersion: v1            \n                          kind: ReplicationController`,\n",
                      "markdown": "`  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: {{ htpasswd }}\n---                       \napiVersion: v1            \n                          kind: ReplicationController`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 2,
                  "endLine": 208,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: {{ htpasswd }}\n---                       \napiVersion: v1            \n                          kind: ReplicationController`,\n",
                    "rendered": {
                      "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: {{ htpasswd }}\n---                       \napiVersion: v1            \n                          kind: ReplicationController`,\n",
                      "markdown": "`  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: {{ htpasswd }}\n---                       \napiVersion: v1            \n                          kind: ReplicationController`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 2,
                  "endLine": 200,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: \"\"\n`,\n\t\t\"overly-permissive1.yaml\": `apiVersion: v1            \nkind: Secret              \n",
                    "rendered": {
                      "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: \"\"\n`,\n\t\t\"overly-permissive1.yaml\": `apiVersion: v1            \nkind: Secret              \n",
                      "markdown": "`  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: \"\"\n`,\n\t\t\"overly-permissive1.yaml\": `apiVersion: v1            \nkind: Secret              \n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 2,
                  "endLine": 192,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: ''\n`,\n\t\t\"empty-quotes2.yml\": `apiVersion: v1            \nkind: Secret              \n",
                    "rendered": {
                      "text": "  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: ''\n`,\n\t\t\"empty-quotes2.yml\": `apiVersion: v1            \nkind: Secret              \n",
                      "markdown": "`  name: registry-auth-data\ntype: Opaque              \ndata:                     \n  htpasswd: ''\n`,\n\t\t\"empty-quotes2.yml\": `apiVersion: v1            \nkind: Secret              \n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 1,
                  "endLine": 161,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\"after-quoted-2.yaml\": `apiVersion: \"v1\"\nkind: \"Secret\"\ndata:\n\tpassword: \"UyFCXCpkJHpEc2I9\"\n\tusername: \"YWRtaW4=\"\nmetadata:\n\tname: \"db-user-pass\"\n",
                    "rendered": {
                      "text": "\t\t\"after-quoted-2.yaml\": `apiVersion: \"v1\"\nkind: \"Secret\"\ndata:\n\tpassword: \"UyFCXCpkJHpEc2I9\"\n\tusername: \"YWRtaW4=\"\nmetadata:\n\tname: \"db-user-pass\"\n",
                      "markdown": "`\t\t\"after-quoted-2.yaml\": `apiVersion: \"v1\"\nkind: \"Secret\"\ndata:\n\tpassword: \"UyFCXCpkJHpEc2I9\"\n\tusername: \"YWRtaW4=\"\nmetadata:\n\tname: \"db-user-pass\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 1,
                  "endLine": 152,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\"after-quoted-1.yaml\": `apiVersion: 'v1'\nkind: 'Secret'\ndata:\n\tpassword: 'UyFCXCpkJHpEc2I9'\n\tusername: 'YWRtaW4='\nmetadata:\n\tname: 'db-user-pass'\n",
                    "rendered": {
                      "text": "\t\t\"after-quoted-1.yaml\": `apiVersion: 'v1'\nkind: 'Secret'\ndata:\n\tpassword: 'UyFCXCpkJHpEc2I9'\n\tusername: 'YWRtaW4='\nmetadata:\n\tname: 'db-user-pass'\n",
                      "markdown": "`\t\t\"after-quoted-1.yaml\": `apiVersion: 'v1'\nkind: 'Secret'\ndata:\n\tpassword: 'UyFCXCpkJHpEc2I9'\n\tusername: 'YWRtaW4='\nmetadata:\n\tname: 'db-user-pass'\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 1,
                  "endLine": 146,
                  "endColumn": 9,
                  "snippet": {
                    "text": "type: Opaque\ndata:\n\t# the data is abbreviated in this example\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\n`,\n\t\t\"after-quoted-1.yaml\": `apiVersion: 'v1'\n",
                    "rendered": {
                      "text": "type: Opaque\ndata:\n\t# the data is abbreviated in this example\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\n`,\n\t\t\"after-quoted-1.yaml\": `apiVersion: 'v1'\n",
                      "markdown": "`type: Opaque\ndata:\n\t# the data is abbreviated in this example\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\n`,\n\t\t\"after-quoted-1.yaml\": `apiVersion: 'v1'\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 1,
                  "endLine": 78,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\"before-comment.yml\": `apiVersion: v1\ndata:\n\t# the data is abbreviated in this example\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\nkind: Secret\nmetadata:\n",
                    "rendered": {
                      "text": "\t\t\"before-comment.yml\": `apiVersion: v1\ndata:\n\t# the data is abbreviated in this example\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\nkind: Secret\nmetadata:\n",
                      "markdown": "`\t\t\"before-comment.yml\": `apiVersion: v1\ndata:\n\t# the data is abbreviated in this example\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\nkind: Secret\nmetadata:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 1,
                  "endLine": 67,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t \tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-kubernetes.yml\": `apiVersion: v1\ndata:\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\nkind: Secret\nmetadata:\n",
                    "rendered": {
                      "text": "\t \tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-kubernetes.yml\": `apiVersion: v1\ndata:\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\nkind: Secret\nmetadata:\n",
                      "markdown": "`\t \tkubernetes.io/service-account.name: 'sa-name'`,\n\t\t\"before-kubernetes.yml\": `apiVersion: v1\ndata:\n\tpassword: UyFCXCpkJHpEc2I9\n\tusername: YWRtaW4=\nkind: Secret\nmetadata:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 46,
                  "endLine": 54,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                    "rendered": {
                      "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                      "markdown": "`  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 19,
                  "endLine": 54,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                    "rendered": {
                      "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                      "markdown": "`  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 58,
                  "endLine": 54,
                  "endColumn": 64,
                  "snippet": {
                    "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                    "rendered": {
                      "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                      "markdown": "`  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                    "rendered": {
                      "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                      "markdown": "`  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 12,
                  "endLine": 17,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t//language=regexp\n\tkindPat := `\\bkind:[ \\t]*[\"']?secret[\"']?`\n\t// Only matches values (`key: value`) under `data:` that are:\n\t// - valid base64 characters\n\t// - longer than 10 characters (no \"YmFyCg==\")\n\t//language=regexp\n\tdataPat := `\\bdata:(?:.|\\s){0,100}?\\s+([\\w.-]+:(?:[ \\t]*(?:\\||>[-+]?)\\s+)?[ \\t]*(?:[\"']?[a-z0-9]{10,}={0,3}[\"']?|\\{\\{[ \\t\\w\"|$:=,.-]+}}|\"\"|''))`\n",
                    "rendered": {
                      "text": "\t//language=regexp\n\tkindPat := `\\bkind:[ \\t]*[\"']?secret[\"']?`\n\t// Only matches values (`key: value`) under `data:` that are:\n\t// - valid base64 characters\n\t// - longer than 10 characters (no \"YmFyCg==\")\n\t//language=regexp\n\tdataPat := `\\bdata:(?:.|\\s){0,100}?\\s+([\\w.-]+:(?:[ \\t]*(?:\\||>[-+]?)\\s+)?[ \\t]*(?:[\"']?[a-z0-9]{10,}={0,3}[\"']?|\\{\\{[ \\t\\w\"|$:=,.-]+}}|\"\"|''))`\n",
                      "markdown": "`\t//language=regexp\n\tkindPat := `\\bkind:[ \\t]*[\"']?secret[\"']?`\n\t// Only matches values (`key: value`) under `data:` that are:\n\t// - valid base64 characters\n\t// - longer than 10 characters (no \"YmFyCg==\")\n\t//language=regexp\n\tdataPat := `\\bdata:(?:.|\\s){0,100}?\\s+([\\w.-]+:(?:[ \\t]*(?:\\||>[-+]?)\\s+)?[ \\t]*(?:[\"']?[a-z0-9]{10,}={0,3}[\"']?|\\{\\{[ \\t\\w\"|$:=,.-]+}}|\"\"|''))`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 57,
                  "endLine": 55,
                  "snippet": {
                    "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n data:\n",
                    "rendered": {
                      "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n data:\n",
                      "markdown": "`  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n data:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                    "rendered": {
                      "text": "  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n",
                      "markdown": "`  name: heketi-secret\n  namespace: default\ndata:\n  # base64 encoded password. E.g.: echo -n \"mypassword\" | base64\n  key: bXlwYXNzd29yZA==`,\n\t\t// The \"data\"-key is before the identifier \"kind: Secret\"\n\t\t\"before-kubernetes.yaml\": `apiVersion: v1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kubernetes.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 11,
                  "endLine": 17,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t//language=regexp\n\tkindPat := `\\bkind:[ \\t]*[\"']?secret[\"']?`\n\t// Only matches values (`key: value`) under `data:` that are:\n\t// - valid base64 characters\n\t// - longer than 10 characters (no \"YmFyCg==\")\n\t//language=regexp\n\tdataPat := `\\bdata:(?:.|\\s){0,100}?\\s+([\\w.-]+:(?:[ \\t]*(?:\\||>[-+]?)\\s+)?[ \\t]*(?:[\"']?[a-z0-9]{10,}={0,3}[\"']?|\\{\\{[ \\t\\w\"|$:=,.-]+}}|\"\"|''))`\n",
                    "rendered": {
                      "text": "\t//language=regexp\n\tkindPat := `\\bkind:[ \\t]*[\"']?secret[\"']?`\n\t// Only matches values (`key: value`) under `data:` that are:\n\t// - valid base64 characters\n\t// - longer than 10 characters (no \"YmFyCg==\")\n\t//language=regexp\n\tdataPat := `\\bdata:(?:.|\\s){0,100}?\\s+([\\w.-]+:(?:[ \\t]*(?:\\||>[-+]?)\\s+)?[ \\t]*(?:[\"']?[a-z0-9]{10,}={0,3}[\"']?|\\{\\{[ \\t\\w\"|$:=,.-]+}}|\"\"|''))`\n",
                      "markdown": "`\t//language=regexp\n\tkindPat := `\\bkind:[ \\t]*[\"']?secret[\"']?`\n\t// Only matches values (`key: value`) under `data:` that are:\n\t// - valid base64 characters\n\t// - longer than 10 characters (no \"YmFyCg==\")\n\t//language=regexp\n\tdataPat := `\\bdata:(?:.|\\s){0,100}?\\s+([\\w.-]+:(?:[ \\t]*(?:\\||>[-+]?)\\s+)?[ \\t]*(?:[\"']?[a-z0-9]{10,}={0,3}[\"']?|\\{\\{[ \\t\\w\"|$:=,.-]+}}|\"\"|''))`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/sumologic.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t\t`export SUMOLOGIC_ACCESSKEY=\"3HSa1hQfz6BYzlxf7Yb1WKG3Hyovm56LMFChV2y9LgkRipsXCujcLb5ej3oQUJlx\"`, // gitleaks:allow\n\t\t`SUMO_ACCESS_KEY: gxq3rJQkS6qovOg9UY2Q70iH1jFZx0WBrrsiAYv4XHodogAwTKyLzvFK4neRN8Dk`,             // gitleaks:allow\n\t\t`SUMOLOGIC_ACCESSKEY: 9RITWb3I3kAnSyUolcVJq4gwM17JRnQK8ugRaixFfxkdSl8ys17ZtEL3LotESKB7`,         // gitleaks:allow\n\t\t`sumo_access_key = \"3Kof2VffNQ0QgYIhXUPJosVlCaQKm2hfpWE6F1fT9YGY74blQBIPsrkCcf1TwKE5\"`,          // gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"sumo\", secrets.NewSecret(utils.AlphaNumeric(\"64\"))),\n\t}\n\tfps := []string{\n",
                    "rendered": {
                      "text": "\t\t`export SUMOLOGIC_ACCESSKEY=\"3HSa1hQfz6BYzlxf7Yb1WKG3Hyovm56LMFChV2y9LgkRipsXCujcLb5ej3oQUJlx\"`, // gitleaks:allow\n\t\t`SUMO_ACCESS_KEY: gxq3rJQkS6qovOg9UY2Q70iH1jFZx0WBrrsiAYv4XHodogAwTKyLzvFK4neRN8Dk`,             // gitleaks:allow\n\t\t`SUMOLOGIC_ACCESSKEY: 9RITWb3I3kAnSyUolcVJq4gwM17JRnQK8ugRaixFfxkdSl8ys17ZtEL3LotESKB7`,         // gitleaks:allow\n\t\t`sumo_access_key = \"3Kof2VffNQ0QgYIhXUPJosVlCaQKm2hfpWE6F1fT9YGY74blQBIPsrkCcf1TwKE5\"`,          // gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"sumo\", secrets.NewSecret(utils.AlphaNumeric(\"64\"))),\n\t}\n\tfps := []string{\n",
                      "markdown": "`\t\t`export SUMOLOGIC_ACCESSKEY=\"3HSa1hQfz6BYzlxf7Yb1WKG3Hyovm56LMFChV2y9LgkRipsXCujcLb5ej3oQUJlx\"`, // gitleaks:allow\n\t\t`SUMO_ACCESS_KEY: gxq3rJQkS6qovOg9UY2Q70iH1jFZx0WBrrsiAYv4XHodogAwTKyLzvFK4neRN8Dk`,             // gitleaks:allow\n\t\t`SUMOLOGIC_ACCESSKEY: 9RITWb3I3kAnSyUolcVJq4gwM17JRnQK8ugRaixFfxkdSl8ys17ZtEL3LotESKB7`,         // gitleaks:allow\n\t\t`sumo_access_key = \"3Kof2VffNQ0QgYIhXUPJosVlCaQKm2hfpWE6F1fT9YGY74blQBIPsrkCcf1TwKE5\"`,          // gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"sumo\", secrets.NewSecret(utils.AlphaNumeric(\"64\"))),\n\t}\n\tfps := []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/sumologic.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 30,
                  "endLine": 70,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\n\t// validate\n\ttps := []string{\n\t\t`export SUMOLOGIC_ACCESSKEY=\"3HSa1hQfz6BYzlxf7Yb1WKG3Hyovm56LMFChV2y9LgkRipsXCujcLb5ej3oQUJlx\"`, // gitleaks:allow\n\t\t`SUMO_ACCESS_KEY: gxq3rJQkS6qovOg9UY2Q70iH1jFZx0WBrrsiAYv4XHodogAwTKyLzvFK4neRN8Dk`,             // gitleaks:allow\n\t\t`SUMOLOGIC_ACCESSKEY: 9RITWb3I3kAnSyUolcVJq4gwM17JRnQK8ugRaixFfxkdSl8ys17ZtEL3LotESKB7`,         // gitleaks:allow\n\t\t`sumo_access_key = \"3Kof2VffNQ0QgYIhXUPJosVlCaQKm2hfpWE6F1fT9YGY74blQBIPsrkCcf1TwKE5\"`,          // gitleaks:allow\n",
                    "rendered": {
                      "text": "\n\t// validate\n\ttps := []string{\n\t\t`export SUMOLOGIC_ACCESSKEY=\"3HSa1hQfz6BYzlxf7Yb1WKG3Hyovm56LMFChV2y9LgkRipsXCujcLb5ej3oQUJlx\"`, // gitleaks:allow\n\t\t`SUMO_ACCESS_KEY: gxq3rJQkS6qovOg9UY2Q70iH1jFZx0WBrrsiAYv4XHodogAwTKyLzvFK4neRN8Dk`,             // gitleaks:allow\n\t\t`SUMOLOGIC_ACCESSKEY: 9RITWb3I3kAnSyUolcVJq4gwM17JRnQK8ugRaixFfxkdSl8ys17ZtEL3LotESKB7`,         // gitleaks:allow\n\t\t`sumo_access_key = \"3Kof2VffNQ0QgYIhXUPJosVlCaQKm2hfpWE6F1fT9YGY74blQBIPsrkCcf1TwKE5\"`,          // gitleaks:allow\n",
                      "markdown": "`\n\t// validate\n\ttps := []string{\n\t\t`export SUMOLOGIC_ACCESSKEY=\"3HSa1hQfz6BYzlxf7Yb1WKG3Hyovm56LMFChV2y9LgkRipsXCujcLb5ej3oQUJlx\"`, // gitleaks:allow\n\t\t`SUMO_ACCESS_KEY: gxq3rJQkS6qovOg9UY2Q70iH1jFZx0WBrrsiAYv4XHodogAwTKyLzvFK4neRN8Dk`,             // gitleaks:allow\n\t\t`SUMOLOGIC_ACCESSKEY: 9RITWb3I3kAnSyUolcVJq4gwM17JRnQK8ugRaixFfxkdSl8ys17ZtEL3LotESKB7`,         // gitleaks:allow\n\t\t`sumo_access_key = \"3Kof2VffNQ0QgYIhXUPJosVlCaQKm2hfpWE6F1fT9YGY74blQBIPsrkCcf1TwKE5\"`,          // gitleaks:allow\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/stopwords.go"
                },
                "region": {
                  "startLine": 926,
                  "startColumn": 2,
                  "endLine": 926,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\"parsing\",\n\t\"particle\",\n\t\"party\",\n\t\"password\",\n\t\"patch\",\n\t\"path\",\n\t\"pattern\",\n",
                    "rendered": {
                      "text": "\t\"parsing\",\n\t\"particle\",\n\t\"party\",\n\t\"password\",\n\t\"patch\",\n\t\"path\",\n\t\"pattern\",\n",
                      "markdown": "`\t\"parsing\",\n\t\"particle\",\n\t\"party\",\n\t\"password\",\n\t\"patch\",\n\t\"path\",\n\t\"pattern\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/lob.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 92,
                  "endLine": 12,
                  "endColumn": 101,
                  "snippet": {
                    "text": "func LobPubAPIToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\",\n\t\tRuleID:      \"lob-pub-api-key\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"lob\"}, `(test|live)_pub_[a-f0-9]{31}`, true),\n\n",
                    "rendered": {
                      "text": "func LobPubAPIToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\",\n\t\tRuleID:      \"lob-pub-api-key\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"lob\"}, `(test|live)_pub_[a-f0-9]{31}`, true),\n\n",
                      "markdown": "`func LobPubAPIToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\",\n\t\tRuleID:      \"lob-pub-api-key\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"lob\"}, `(test|live)_pub_[a-f0-9]{31}`, true),\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/lob.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 77,
                  "endLine": 12,
                  "endColumn": 83,
                  "snippet": {
                    "text": "func LobPubAPIToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\",\n\t\tRuleID:      \"lob-pub-api-key\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"lob\"}, `(test|live)_pub_[a-f0-9]{31}`, true),\n\n",
                    "rendered": {
                      "text": "func LobPubAPIToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\",\n\t\tRuleID:      \"lob-pub-api-key\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"lob\"}, `(test|live)_pub_[a-f0-9]{31}`, true),\n\n",
                      "markdown": "`func LobPubAPIToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\",\n\t\tRuleID:      \"lob-pub-api-key\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"lob\"}, `(test|live)_pub_[a-f0-9]{31}`, true),\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/authress.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 100,
                  "endLine": 15,
                  "endColumn": 109,
                  "snippet": {
                    "text": "\t// Rule Definition\n\t// (Note: When changes are made to this, rerun `go generate ./...` and commit the config/gitleaks.toml file\n\tr := config.Rule{\n\t\tDescription: \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\",\n\t\tRuleID:      \"authress-service-client-access-key\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120}`, true),\n\t\tKeywords:    []string{\"sc_\", \"ext_\", \"scauth_\", \"authress_\"},\n",
                    "rendered": {
                      "text": "\t// Rule Definition\n\t// (Note: When changes are made to this, rerun `go generate ./...` and commit the config/gitleaks.toml file\n\tr := config.Rule{\n\t\tDescription: \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\",\n\t\tRuleID:      \"authress-service-client-access-key\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120}`, true),\n\t\tKeywords:    []string{\"sc_\", \"ext_\", \"scauth_\", \"authress_\"},\n",
                      "markdown": "`\t// Rule Definition\n\t// (Note: When changes are made to this, rerun `go generate ./...` and commit the config/gitleaks.toml file\n\tr := config.Rule{\n\t\tDescription: \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\",\n\t\tRuleID:      \"authress-service-client-access-key\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120}`, true),\n\t\tKeywords:    []string{\"sc_\", \"ext_\", \"scauth_\", \"authress_\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/authress.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 45,
                  "endLine": 15,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t// Rule Definition\n\t// (Note: When changes are made to this, rerun `go generate ./...` and commit the config/gitleaks.toml file\n\tr := config.Rule{\n\t\tDescription: \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\",\n\t\tRuleID:      \"authress-service-client-access-key\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120}`, true),\n\t\tKeywords:    []string{\"sc_\", \"ext_\", \"scauth_\", \"authress_\"},\n",
                    "rendered": {
                      "text": "\t// Rule Definition\n\t// (Note: When changes are made to this, rerun `go generate ./...` and commit the config/gitleaks.toml file\n\tr := config.Rule{\n\t\tDescription: \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\",\n\t\tRuleID:      \"authress-service-client-access-key\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120}`, true),\n\t\tKeywords:    []string{\"sc_\", \"ext_\", \"scauth_\", \"authress_\"},\n",
                      "markdown": "`\t// Rule Definition\n\t// (Note: When changes are made to this, rerun `go generate ./...` and commit the config/gitleaks.toml file\n\tr := config.Rule{\n\t\tDescription: \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\",\n\t\tRuleID:      \"authress-service-client-access-key\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120}`, true),\n\t\tKeywords:    []string{\"sc_\", \"ext_\", \"scauth_\", \"authress_\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/report/junit.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 66,
                  "endLine": 71,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\treturn fmt.Sprintf(\"%s has detected a secret in file %s, line %s.\", f.RuleID, f.File, strconv.Itoa(f.StartLine))\n\t}\n\n\treturn fmt.Sprintf(\"%s has detected a secret in file %s, line %s, at commit %s.\", f.RuleID, f.File, strconv.Itoa(f.StartLine), f.Commit)\n}\n\ntype TestSuites struct {\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Sprintf(\"%s has detected a secret in file %s, line %s.\", f.RuleID, f.File, strconv.Itoa(f.StartLine))\n\t}\n\n\treturn fmt.Sprintf(\"%s has detected a secret in file %s, line %s, at commit %s.\", f.RuleID, f.File, strconv.Itoa(f.StartLine), f.Commit)\n}\n\ntype TestSuites struct {\n",
                      "markdown": "`\t\treturn fmt.Sprintf(\"%s has detected a secret in file %s, line %s.\", f.RuleID, f.File, strconv.Itoa(f.StartLine))\n\t}\n\n\treturn fmt.Sprintf(\"%s has detected a secret in file %s, line %s, at commit %s.\", f.RuleID, f.File, strconv.Itoa(f.StartLine), f.Commit)\n}\n\ntype TestSuites struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/report/junit.go"
                },
                "region": {
                  "startLine": 94,
                  "endLine": 94,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tFailure   Failure  `xml:\"failure\"`\n\tFile      string   `xml:\"file,attr\"`\n\tName      string   `xml:\"name,attr\"`\n\tTime      string   `xml:\"time,attr\"`\n}\n\ntype Failure struct {\n",
                    "rendered": {
                      "text": "\tFailure   Failure  `xml:\"failure\"`\n\tFile      string   `xml:\"file,attr\"`\n\tName      string   `xml:\"name,attr\"`\n\tTime      string   `xml:\"time,attr\"`\n}\n\ntype Failure struct {\n",
                      "markdown": "`\tFailure   Failure  `xml:\"failure\"`\n\tFile      string   `xml:\"file,attr\"`\n\tName      string   `xml:\"name,attr\"`\n\tTime      string   `xml:\"time,attr\"`\n}\n\ntype Failure struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/report/junit.go"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tName      string     `xml:\"name,attr\"`\n\tTests     string     `xml:\"tests,attr\"`\n\tTestCases []TestCase `xml:\"testcase\"`\n\tTime      string     `xml:\"time,attr\"`\n}\n\ntype TestCase struct {\n",
                    "rendered": {
                      "text": "\tName      string     `xml:\"name,attr\"`\n\tTests     string     `xml:\"tests,attr\"`\n\tTestCases []TestCase `xml:\"testcase\"`\n\tTime      string     `xml:\"time,attr\"`\n}\n\ntype TestCase struct {\n",
                      "markdown": "`\tName      string     `xml:\"name,attr\"`\n\tTests     string     `xml:\"tests,attr\"`\n\tTestCases []TestCase `xml:\"testcase\"`\n\tTime      string     `xml:\"time,attr\"`\n}\n\ntype TestCase struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Makefile"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nclean:\n\tfind . -type f -name '*.got.*' -delete\n\tfind . -type f -name '*.out' -delete\n",
                    "rendered": {
                      "text": "\nclean:\n\tfind . -type f -name '*.got.*' -delete\n\tfind . -type f -name '*.out' -delete\n",
                      "markdown": "`\nclean:\n\tfind . -type f -name '*.got.*' -delete\n\tfind . -type f -name '*.out' -delete\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Makefile"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tgo build $(LDFLAGS)\n\nclean:\n\tfind . -type f -name '*.got.*' -delete\n\tfind . -type f -name '*.out' -delete\n",
                    "rendered": {
                      "text": "\tgo build $(LDFLAGS)\n\nclean:\n\tfind . -type f -name '*.got.*' -delete\n\tfind . -type f -name '*.out' -delete\n",
                      "markdown": "`\tgo build $(LDFLAGS)\n\nclean:\n\tfind . -type f -name '*.got.*' -delete\n\tfind . -type f -name '*.out' -delete\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Makefile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tgo tool cover -html=cover.out\n\nformat:\n\tgo fmt ./...\n\ntest: format\n\tgo test -v ./... --race $(PKG)\n",
                    "rendered": {
                      "text": "\tgo tool cover -html=cover.out\n\nformat:\n\tgo fmt ./...\n\ntest: format\n\tgo test -v ./... --race $(PKG)\n",
                      "markdown": "`\tgo tool cover -html=cover.out\n\nformat:\n\tgo fmt ./...\n\ntest: format\n\tgo test -v ./... --race $(PKG)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Makefile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 51,
                  "endLine": 4,
                  "endColumn": 57,
                  "snippet": {
                    "text": ".PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n",
                    "rendered": {
                      "text": ".PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n",
                      "markdown": "`.PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Makefile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 41,
                  "endLine": 4,
                  "endColumn": 47,
                  "snippet": {
                    "text": ".PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n",
                    "rendered": {
                      "text": ".PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n",
                      "markdown": "`.PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Makefile"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 31,
                  "endLine": 4,
                  "endColumn": 36,
                  "snippet": {
                    "text": ".PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n",
                    "rendered": {
                      "text": ".PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n",
                      "markdown": "`.PHONY: test test-cover\n\nPKG=github.com/zricethezav/gitleaks\nVERSION := `git fetch --tags && git tag | sort -V | tail -1`\nLDFLAGS=-ldflags \"-X=github.com/zricethezav/gitleaks/v8/cmd.Version=$(VERSION)\"\nCOVER=--cover --coverprofile=cover.out\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/generic.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t}\n\tfps := []string{\n\t\t`client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client-vpn-endpoint.id`,\n\t\t`password combination.\n\nR5: Regulatory--21`,\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tfps := []string{\n\t\t`client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client-vpn-endpoint.id`,\n\t\t`password combination.\n\nR5: Regulatory--21`,\n\t}\n",
                      "markdown": "`\t}\n\tfps := []string{\n\t\t`client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client-vpn-endpoint.id`,\n\t\t`password combination.\n\nR5: Regulatory--21`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/generic.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 4,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t\"secret\",\n\t\t\t\"client\",\n\t\t\t\"passwd\",\n\t\t\t\"password\",\n\t\t\t\"auth\",\n\t\t\t\"access\",\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\"secret\",\n\t\t\t\"client\",\n\t\t\t\"passwd\",\n\t\t\t\"password\",\n\t\t\t\"auth\",\n\t\t\t\"access\",\n\t\t},\n",
                      "markdown": "`\t\t\t\"secret\",\n\t\t\t\"client\",\n\t\t\t\"passwd\",\n\t\t\t\"password\",\n\t\t\t\"auth\",\n\t\t\t\"access\",\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/generic.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t\"secret\",\n\t\t\t\"client\",\n\t\t\t\"passwd\",\n\t\t\t\"password\",\n\t\t\t\"auth\",\n\t\t\t\"access\",\n\t\t}, `[0-9a-z\\-_.=]{10,150}`, true),\n",
                    "rendered": {
                      "text": "\t\t\t\"secret\",\n\t\t\t\"client\",\n\t\t\t\"passwd\",\n\t\t\t\"password\",\n\t\t\t\"auth\",\n\t\t\t\"access\",\n\t\t}, `[0-9a-z\\-_.=]{10,150}`, true),\n",
                      "markdown": "`\t\t\t\"secret\",\n\t\t\t\"client\",\n\t\t\t\"passwd\",\n\t\t\t\"password\",\n\t\t\t\"auth\",\n\t\t\t\"access\",\n\t\t}, `[0-9a-z\\-_.=]{10,150}`, true),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/generic.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 21,
                  "endLine": 46,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\t\tutils.GenerateSampleSecret(\"generic\", \"CLOJARS_34bf0e88955ff5a1c328d6a7491acc4f48e865a7b8dd4d70a70749037443\"), //gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"generic\", \"Zf3D0LXCM3EIMbgJpUNnkRtOfOueHznB\"),\n\t\t`\"client_id\" : \"0afae57f3ccfd9d7f5767067bc48b30f719e271ba470488056e37ab35d4b6506\"`,\n\t\t`\"client_secret\" : \"6da89121079f83b2eb6acccf8219ea982c3d79bccc3e9c6a85856480661f8fde\",`,\n\t}\n\tfps := []string{\n\t\t`client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client-vpn-endpoint.id`,\n",
                    "rendered": {
                      "text": "\t\tutils.GenerateSampleSecret(\"generic\", \"CLOJARS_34bf0e88955ff5a1c328d6a7491acc4f48e865a7b8dd4d70a70749037443\"), //gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"generic\", \"Zf3D0LXCM3EIMbgJpUNnkRtOfOueHznB\"),\n\t\t`\"client_id\" : \"0afae57f3ccfd9d7f5767067bc48b30f719e271ba470488056e37ab35d4b6506\"`,\n\t\t`\"client_secret\" : \"6da89121079f83b2eb6acccf8219ea982c3d79bccc3e9c6a85856480661f8fde\",`,\n\t}\n\tfps := []string{\n\t\t`client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client-vpn-endpoint.id`,\n",
                      "markdown": "`\t\tutils.GenerateSampleSecret(\"generic\", \"CLOJARS_34bf0e88955ff5a1c328d6a7491acc4f48e865a7b8dd4d70a70749037443\"), //gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"generic\", \"Zf3D0LXCM3EIMbgJpUNnkRtOfOueHznB\"),\n\t\t`\"client_id\" : \"0afae57f3ccfd9d7f5767067bc48b30f719e271ba470488056e37ab35d4b6506\"`,\n\t\t`\"client_secret\" : \"6da89121079f83b2eb6acccf8219ea982c3d79bccc3e9c6a85856480661f8fde\",`,\n\t}\n\tfps := []string{\n\t\t`client_vpn_endpoint_id = aws_ec2_client_vpn_endpoint.client-vpn-endpoint.id`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/generic.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"generic\", \"CLOJARS_34bf0e88955ff5a1c328d6a7491acc4f48e865a7b8dd4d70a70749037443\"), //gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"generic\", \"Zf3D0LXCM3EIMbgJpUNnkRtOfOueHznB\"),\n\t\t`\"client_id\" : \"0afae57f3ccfd9d7f5767067bc48b30f719e271ba470488056e37ab35d4b6506\"`,\n\t\t`\"client_secret\" : \"6da89121079f83b2eb6acccf8219ea982c3d79bccc3e9c6a85856480661f8fde\",`,\n\t}\n\tfps := []string{\n",
                    "rendered": {
                      "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"generic\", \"CLOJARS_34bf0e88955ff5a1c328d6a7491acc4f48e865a7b8dd4d70a70749037443\"), //gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"generic\", \"Zf3D0LXCM3EIMbgJpUNnkRtOfOueHznB\"),\n\t\t`\"client_id\" : \"0afae57f3ccfd9d7f5767067bc48b30f719e271ba470488056e37ab35d4b6506\"`,\n\t\t`\"client_secret\" : \"6da89121079f83b2eb6acccf8219ea982c3d79bccc3e9c6a85856480661f8fde\",`,\n\t}\n\tfps := []string{\n",
                      "markdown": "`\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"generic\", \"CLOJARS_34bf0e88955ff5a1c328d6a7491acc4f48e865a7b8dd4d70a70749037443\"), //gitleaks:allow\n\t\tutils.GenerateSampleSecret(\"generic\", \"Zf3D0LXCM3EIMbgJpUNnkRtOfOueHznB\"),\n\t\t`\"client_id\" : \"0afae57f3ccfd9d7f5767067bc48b30f719e271ba470488056e37ab35d4b6506\"`,\n\t\t`\"client_secret\" : \"6da89121079f83b2eb6acccf8219ea982c3d79bccc3e9c6a85856480661f8fde\",`,\n\t}\n\tfps := []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/digitalocean.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 18,
                  "endLine": 23,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc DigitalOceanOAuthToken() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Found a DigitalOcean OAuth Access Token, risking unauthorized cloud resource access and data compromise.\",\n\t\tRuleID:      \"digitalocean-access-token\",\n",
                    "rendered": {
                      "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc DigitalOceanOAuthToken() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Found a DigitalOcean OAuth Access Token, risking unauthorized cloud resource access and data compromise.\",\n\t\tRuleID:      \"digitalocean-access-token\",\n",
                      "markdown": "`\treturn utils.Validate(r, tps, nil)\n}\n\nfunc DigitalOceanOAuthToken() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Found a DigitalOcean OAuth Access Token, risking unauthorized cloud resource access and data compromise.\",\n\t\tRuleID:      \"digitalocean-access-token\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/flutterwave.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 16,
                  "endLine": 27,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc FlutterwaveSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Flutterwave Secret Key, risking unauthorized financial transactions and data breaches.\",\n",
                    "rendered": {
                      "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc FlutterwaveSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Flutterwave Secret Key, risking unauthorized financial transactions and data breaches.\",\n",
                      "markdown": "`\treturn utils.Validate(r, tps, nil)\n}\n\nfunc FlutterwaveSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Flutterwave Secret Key, risking unauthorized financial transactions and data breaches.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/plaid.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 10,
                  "endLine": 31,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc PlaidSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"plaid-secret-key\",\n",
                    "rendered": {
                      "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc PlaidSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"plaid-secret-key\",\n",
                      "markdown": "`\treturn utils.Validate(r, tps, nil)\n}\n\nfunc PlaidSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"plaid-secret-key\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/plaid.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 87,
                  "endLine": 15,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"plaid-client-id\",\n\t\tDescription: \"Uncovered a Plaid Client ID, which could lead to unauthorized financial service integrations and data breaches.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"plaid\"}, utils.AlphaNumeric(\"24\"), true),\n\n\t\tEntropy: 3.5,\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"plaid-client-id\",\n\t\tDescription: \"Uncovered a Plaid Client ID, which could lead to unauthorized financial service integrations and data breaches.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"plaid\"}, utils.AlphaNumeric(\"24\"), true),\n\n\t\tEntropy: 3.5,\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"plaid-client-id\",\n\t\tDescription: \"Uncovered a Plaid Client ID, which could lead to unauthorized financial service integrations and data breaches.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"plaid\"}, utils.AlphaNumeric(\"24\"), true),\n\n\t\tEntropy: 3.5,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 38,
                  "endLine": 45,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n}\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n}\n",
                      "markdown": "`\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 45,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n}\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n}\n",
                      "markdown": "`\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 38,
                  "endLine": 44,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n",
                    "rendered": {
                      "text": "\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n",
                      "markdown": "`\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 3,
                  "endLine": 44,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n",
                    "rendered": {
                      "text": "\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n",
                      "markdown": "`\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n\treturn utils.ValidateWithPaths(r, tps, fps)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 66,
                  "endLine": 43,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n",
                      "markdown": "`\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 38,
                  "endLine": 43,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n",
                      "markdown": "`\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n",
                      "markdown": "`\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\" value=\"hal+9ooo_da!sY\" />`,       // known sample\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 38,
                  "endLine": 42,
                  "endColumn": 46,
                  "snippet": {
                    "text": "value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\"",
                    "rendered": {
                      "text": "value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\"",
                      "markdown": "`value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\": `<add key=\"ClearTextPassword\"`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 15,
                  "snippet": {
                    "text": "ig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\"",
                    "rendered": {
                      "text": "ig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\"",
                      "markdown": "`ig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n\t\t\"NUGet.Config\"`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n",
                    "rendered": {
                      "text": "\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n",
                      "markdown": "`\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 41,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n",
                    "rendered": {
                      "text": "\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n",
                      "markdown": "`\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n\t\t\"NUget.Config\": `<add key=\"ClearTextPassword\" value=\"33f!!lloppa\" />`,          // known sample\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 55,
                  "endLine": 40,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n",
                    "rendered": {
                      "text": "\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n",
                      "markdown": "`\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 29,
                  "endLine": 40,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n",
                    "rendered": {
                      "text": "\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n",
                      "markdown": "`\t}\n\n\tfps := map[string]string{\n\t\t\"some.xml\":     `<add key=\"Password\" value=\"CleartextPassword1\" />`,            // wrong filename\n\t\t\"nuget.config\": `<add key=\"ClearTextPassword\" value=\"XXXXXXXXXXX\" />`,          // low entropy\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"abc\" />`,                  // too short\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"%TestSourcePassword%\" />`, // environment variable\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 66,
                  "endLine": 36,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n",
                      "markdown": "`\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 38,
                  "endLine": 36,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n",
                      "markdown": "`\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n",
                      "markdown": "`\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n\tfps := map[string]string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 66,
                  "endLine": 35,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n",
                      "markdown": "`\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 38,
                  "endLine": 35,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n",
                      "markdown": "`\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n",
                      "markdown": "`\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 66,
                  "endLine": 34,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n",
                      "markdown": "`\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n",
                      "markdown": "`\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n",
                      "markdown": "`\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 65,
                  "endLine": 33,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n",
                    "rendered": {
                      "text": "\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n",
                      "markdown": "`\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 38,
                  "endLine": 33,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n",
                    "rendered": {
                      "text": "\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n",
                      "markdown": "`\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n",
                    "rendered": {
                      "text": "\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n",
                      "markdown": "`\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n\t\t\"Nuget.CONFig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password%\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 64,
                  "endLine": 32,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n",
                    "rendered": {
                      "text": "\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n",
                      "markdown": "`\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 38,
                  "endLine": 32,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n",
                    "rendered": {
                      "text": "\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n",
                      "markdown": "`\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n",
                    "rendered": {
                      "text": "\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n",
                      "markdown": "`\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n\t\t\"Nuget.CONfig\": `<add key=\"ClearTextPassword\" value=\"TestSource%Password\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 55,
                  "endLine": 31,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n",
                    "rendered": {
                      "text": "\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n",
                      "markdown": "`\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 29,
                  "endLine": 31,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n",
                    "rendered": {
                      "text": "\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n",
                      "markdown": "`\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n",
                    "rendered": {
                      "text": "\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n",
                      "markdown": "`\t}\n\n\ttps := map[string]string{\n\t\t\"nuget.config\": `<add key=\"Password\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.config\": `<add key=\"ClearTextPassword\" value=\"CleartextPassword1\" />`,\n\t\t\"Nuget.Config\": `<add key=\"ClearTextPassword\" value=\"TestSourcePassword\" />`,\n\t\t\"Nuget.COnfig\": `<add key=\"ClearTextPassword\" value=\"TestSource-Password\" />`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 67,
                  "endLine": 15,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n\t\tKeywords:    []string{\"<add key=\"},\n\t\tEntropy:     1,\n",
                    "rendered": {
                      "text": "\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n\t\tKeywords:    []string{\"<add key=\"},\n\t\tEntropy:     1,\n",
                      "markdown": "`\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n\t\tKeywords:    []string{\"<add key=\"},\n\t\tEntropy:     1,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 29,
                  "endLine": 14,
                  "endColumn": 37,
                  "snippet": {
                    "text": "func NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n\t\tKeywords:    []string{\"<add key=\"},\n",
                    "rendered": {
                      "text": "func NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n\t\tKeywords:    []string{\"<add key=\"},\n",
                      "markdown": "`func NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n\t\tKeywords:    []string{\"<add key=\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 29,
                  "endLine": 13,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nfunc NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n",
                    "rendered": {
                      "text": "\nfunc NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n",
                      "markdown": "`\nfunc NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n\t\tRegex:       regexp.MustCompile(`(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>`),\n\t\tPath:        regexp.MustCompile(`(?i)nuget\\.config$`),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/nuget.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 16,
                  "endLine": 11,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n",
                    "rendered": {
                      "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n",
                      "markdown": "`\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc NugetConfigPassword() *config.Rule {\n\tr := config.Rule{\n\t\tDescription: \"Identified a password within a Nuget config file, potentially compromising package management access.\",\n\t\tRuleID:      \"nuget-config-password\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 15,
                  "endLine": 208,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\trules.YandexAPIKey(),\n\t\trules.YandexAWSAccessToken(),\n\t\trules.YandexAccessToken(),\n\t\trules.ZendeskSecretKey(),\n\t\trules.GenericCredential(),\n\t\trules.InfracostAPIToken(),\n\t}\n",
                    "rendered": {
                      "text": "\t\trules.YandexAPIKey(),\n\t\trules.YandexAWSAccessToken(),\n\t\trules.YandexAccessToken(),\n\t\trules.ZendeskSecretKey(),\n\t\trules.GenericCredential(),\n\t\trules.InfracostAPIToken(),\n\t}\n",
                      "markdown": "`\t\trules.YandexAPIKey(),\n\t\trules.YandexAWSAccessToken(),\n\t\trules.YandexAccessToken(),\n\t\trules.ZendeskSecretKey(),\n\t\trules.GenericCredential(),\n\t\trules.InfracostAPIToken(),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 8,
                  "endLine": 158,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\trules.PostManAPI(),\n\t\trules.Prefect(),\n\t\trules.PrivateAIToken(),\n\t\trules.PrivateKey(),\n\t\trules.PulumiAPIToken(),\n\t\trules.PyPiUploadToken(),\n\t\trules.RapidAPIAccessToken(),\n",
                    "rendered": {
                      "text": "\t\trules.PostManAPI(),\n\t\trules.Prefect(),\n\t\trules.PrivateAIToken(),\n\t\trules.PrivateKey(),\n\t\trules.PulumiAPIToken(),\n\t\trules.PyPiUploadToken(),\n\t\trules.RapidAPIAccessToken(),\n",
                      "markdown": "`\t\trules.PostManAPI(),\n\t\trules.Prefect(),\n\t\trules.PrivateAIToken(),\n\t\trules.PrivateKey(),\n\t\trules.PulumiAPIToken(),\n\t\trules.PyPiUploadToken(),\n\t\trules.RapidAPIAccessToken(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 20,
                  "endLine": 154,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n\t\trules.PlanetScaleOAuthToken(),\n\t\trules.PostManAPI(),\n\t\trules.Prefect(),\n\t\trules.PrivateAIToken(),\n",
                    "rendered": {
                      "text": "\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n\t\trules.PlanetScaleOAuthToken(),\n\t\trules.PostManAPI(),\n\t\trules.Prefect(),\n\t\trules.PrivateAIToken(),\n",
                      "markdown": "`\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n\t\trules.PlanetScaleOAuthToken(),\n\t\trules.PostManAPI(),\n\t\trules.Prefect(),\n\t\trules.PrivateAIToken(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 19,
                  "endLine": 152,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\trules.PlaidAccessID(),\n\t\trules.PlaidSecretKey(),\n\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n\t\trules.PlanetScaleOAuthToken(),\n\t\trules.PostManAPI(),\n",
                    "rendered": {
                      "text": "\t\trules.PlaidAccessID(),\n\t\trules.PlaidSecretKey(),\n\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n\t\trules.PlanetScaleOAuthToken(),\n\t\trules.PostManAPI(),\n",
                      "markdown": "`\t\trules.PlaidAccessID(),\n\t\trules.PlaidSecretKey(),\n\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n\t\trules.PlanetScaleOAuthToken(),\n\t\trules.PostManAPI(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 13,
                  "endLine": 150,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\trules.OpenAI(),\n\t\trules.OpenshiftUserToken(),\n\t\trules.PlaidAccessID(),\n\t\trules.PlaidSecretKey(),\n\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n",
                    "rendered": {
                      "text": "\t\trules.OpenAI(),\n\t\trules.OpenshiftUserToken(),\n\t\trules.PlaidAccessID(),\n\t\trules.PlaidSecretKey(),\n\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n",
                      "markdown": "`\t\trules.OpenAI(),\n\t\trules.OpenshiftUserToken(),\n\t\trules.PlaidAccessID(),\n\t\trules.PlaidSecretKey(),\n\t\trules.PlaidAccessToken(),\n\t\trules.PlanetScalePassword(),\n\t\trules.PlanetScaleAPIToken(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 19,
                  "endLine": 144,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\trules.NewRelicBrowserAPIKey(),\n\t\trules.NewRelicInsertKey(),\n\t\trules.NPM(),\n\t\trules.NugetConfigPassword(),\n\t\trules.NytimesAccessToken(),\n\t\trules.OktaAccessToken(),\n\t\trules.OpenAI(),\n",
                    "rendered": {
                      "text": "\t\trules.NewRelicBrowserAPIKey(),\n\t\trules.NewRelicInsertKey(),\n\t\trules.NPM(),\n\t\trules.NugetConfigPassword(),\n\t\trules.NytimesAccessToken(),\n\t\trules.OktaAccessToken(),\n\t\trules.OpenAI(),\n",
                      "markdown": "`\t\trules.NewRelicBrowserAPIKey(),\n\t\trules.NewRelicInsertKey(),\n\t\trules.NPM(),\n\t\trules.NugetConfigPassword(),\n\t\trules.NytimesAccessToken(),\n\t\trules.OktaAccessToken(),\n\t\trules.OpenAI(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 14,
                  "endLine": 122,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\trules.KrakenAccessToken(),\n\t\trules.KubernetesSecret(),\n\t\trules.KucoinAccessToken(),\n\t\trules.KucoinSecretKey(),\n\t\trules.LaunchDarklyAccessToken(),\n\t\trules.LinearAPIToken(),\n\t\trules.LinearClientSecret(),\n",
                    "rendered": {
                      "text": "\t\trules.KrakenAccessToken(),\n\t\trules.KubernetesSecret(),\n\t\trules.KucoinAccessToken(),\n\t\trules.KucoinSecretKey(),\n\t\trules.LaunchDarklyAccessToken(),\n\t\trules.LinearAPIToken(),\n\t\trules.LinearClientSecret(),\n",
                      "markdown": "`\t\trules.KrakenAccessToken(),\n\t\trules.KubernetesSecret(),\n\t\trules.KucoinAccessToken(),\n\t\trules.KucoinSecretKey(),\n\t\trules.LaunchDarklyAccessToken(),\n\t\trules.LinearAPIToken(),\n\t\trules.LinearClientSecret(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 19,
                  "endLine": 85,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\trules.FlickrAccessToken(),\n\t\trules.FinnhubAccessToken(),\n\t\trules.FlutterwavePublicKey(),\n\t\trules.FlutterwaveSecretKey(),\n\t\trules.FlutterwaveEncKey(),\n\t\trules.FlyIOAccessToken(),\n\t\trules.FrameIO(),\n",
                    "rendered": {
                      "text": "\t\trules.FlickrAccessToken(),\n\t\trules.FinnhubAccessToken(),\n\t\trules.FlutterwavePublicKey(),\n\t\trules.FlutterwaveSecretKey(),\n\t\trules.FlutterwaveEncKey(),\n\t\trules.FlyIOAccessToken(),\n\t\trules.FrameIO(),\n",
                      "markdown": "`\t\trules.FlickrAccessToken(),\n\t\trules.FinnhubAccessToken(),\n\t\trules.FlutterwavePublicKey(),\n\t\trules.FlutterwaveSecretKey(),\n\t\trules.FlutterwaveEncKey(),\n\t\trules.FlyIOAccessToken(),\n\t\trules.FrameIO(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\trules.DatadogtokenAccessToken(),\n\t\trules.DefinedNetworkingAPIToken(),\n\t\trules.DigitalOceanPAT(),\n\t\trules.DigitalOceanOAuthToken(),\n\t\trules.DigitalOceanRefreshToken(),\n\t\trules.DiscordAPIToken(),\n\t\trules.DiscordClientID(),\n",
                    "rendered": {
                      "text": "\t\trules.DatadogtokenAccessToken(),\n\t\trules.DefinedNetworkingAPIToken(),\n\t\trules.DigitalOceanPAT(),\n\t\trules.DigitalOceanOAuthToken(),\n\t\trules.DigitalOceanRefreshToken(),\n\t\trules.DiscordAPIToken(),\n\t\trules.DiscordClientID(),\n",
                      "markdown": "`\t\trules.DatadogtokenAccessToken(),\n\t\trules.DefinedNetworkingAPIToken(),\n\t\trules.DigitalOceanPAT(),\n\t\trules.DigitalOceanOAuthToken(),\n\t\trules.DigitalOceanRefreshToken(),\n\t\trules.DiscordAPIToken(),\n\t\trules.DiscordClientID(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\trules.CloudflareOriginCAKey(),\n\t\trules.CohereAPIToken(),\n\t\trules.ConfluentAccessToken(),\n\t\trules.ConfluentSecretKey(),\n\t\trules.Contentful(),\n\t\trules.Databricks(),\n\t\trules.DatadogtokenAccessToken(),\n",
                    "rendered": {
                      "text": "\t\trules.CloudflareOriginCAKey(),\n\t\trules.CohereAPIToken(),\n\t\trules.ConfluentAccessToken(),\n\t\trules.ConfluentSecretKey(),\n\t\trules.Contentful(),\n\t\trules.Databricks(),\n\t\trules.DatadogtokenAccessToken(),\n",
                      "markdown": "`\t\trules.CloudflareOriginCAKey(),\n\t\trules.CohereAPIToken(),\n\t\trules.ConfluentAccessToken(),\n\t\trules.ConfluentSecretKey(),\n\t\trules.Contentful(),\n\t\trules.Databricks(),\n\t\trules.DatadogtokenAccessToken(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 15,
                  "endLine": 45,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\trules.BitBucketClientID(),\n\t\trules.BitBucketClientSecret(),\n\t\trules.BittrexAccessKey(),\n\t\trules.BittrexSecretKey(),\n\t\trules.Beamer(),\n\t\trules.CodecovAccessToken(),\n\t\trules.CoinbaseAccessToken(),\n",
                    "rendered": {
                      "text": "\t\trules.BitBucketClientID(),\n\t\trules.BitBucketClientSecret(),\n\t\trules.BittrexAccessKey(),\n\t\trules.BittrexSecretKey(),\n\t\trules.Beamer(),\n\t\trules.CodecovAccessToken(),\n\t\trules.CoinbaseAccessToken(),\n",
                      "markdown": "`\t\trules.BitBucketClientID(),\n\t\trules.BitBucketClientSecret(),\n\t\trules.BittrexAccessKey(),\n\t\trules.BittrexSecretKey(),\n\t\trules.Beamer(),\n\t\trules.CodecovAccessToken(),\n\t\trules.CoinbaseAccessToken(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 15,
                  "endLine": 35,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\trules.Airtable(),\n\t\trules.AlgoliaApiKey(),\n\t\trules.AlibabaAccessKey(),\n\t\trules.AlibabaSecretKey(),\n\t\trules.AsanaClientID(),\n\t\trules.AsanaClientSecret(),\n\t\trules.Atlassian(),\n",
                    "rendered": {
                      "text": "\t\trules.Airtable(),\n\t\trules.AlgoliaApiKey(),\n\t\trules.AlibabaAccessKey(),\n\t\trules.AlibabaSecretKey(),\n\t\trules.AsanaClientID(),\n\t\trules.AsanaClientSecret(),\n\t\trules.Atlassian(),\n",
                      "markdown": "`\t\trules.Airtable(),\n\t\trules.AlgoliaApiKey(),\n\t\trules.AlibabaAccessKey(),\n\t\trules.AlibabaSecretKey(),\n\t\trules.AsanaClientID(),\n\t\trules.AsanaClientSecret(),\n\t\trules.Atlassian(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/main.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\trules.AdafruitAPIKey(),\n\t\trules.AdobeClientID(),\n\t\trules.AdobeClientSecret(),\n\t\trules.AgeSecretKey(),\n\t\trules.Airtable(),\n\t\trules.AlgoliaApiKey(),\n\t\trules.AlibabaAccessKey(),\n",
                    "rendered": {
                      "text": "\t\trules.AdafruitAPIKey(),\n\t\trules.AdobeClientID(),\n\t\trules.AdobeClientSecret(),\n\t\trules.AgeSecretKey(),\n\t\trules.Airtable(),\n\t\trules.AlgoliaApiKey(),\n\t\trules.AlibabaAccessKey(),\n",
                      "markdown": "`\t\trules.AdafruitAPIKey(),\n\t\trules.AdobeClientID(),\n\t\trules.AdobeClientSecret(),\n\t\trules.AgeSecretKey(),\n\t\trules.Airtable(),\n\t\trules.AlgoliaApiKey(),\n\t\trules.AlibabaAccessKey(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/git.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"time\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"time\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"time\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/git.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 42,
                  "endLine": 93,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tfindings, err = detector.DetectGit(gitCmd)\n\tif err != nil {\n\t\t// don't exit on error, just log it\n\t\tlog.Error().Err(err).Msg(\"failed to scan Git repository\")\n\t}\n\n\tfindingSummaryAndExit(findings, cmd, cfg, exitCode, start, err)\n",
                    "rendered": {
                      "text": "\tfindings, err = detector.DetectGit(gitCmd)\n\tif err != nil {\n\t\t// don't exit on error, just log it\n\t\tlog.Error().Err(err).Msg(\"failed to scan Git repository\")\n\t}\n\n\tfindingSummaryAndExit(findings, cmd, cfg, exitCode, start, err)\n",
                      "markdown": "`\tfindings, err = detector.DetectGit(gitCmd)\n\tif err != nil {\n\t\t// don't exit on error, just log it\n\t\tlog.Error().Err(err).Msg(\"failed to scan Git repository\")\n\t}\n\n\tfindingSummaryAndExit(findings, cmd, cfg, exitCode, start, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/git.go"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 45,
                  "endLine": 86,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t} else {\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git log cmd\")\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t} else {\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git log cmd\")\n\t\t}\n\t}\n\n",
                      "markdown": "`\t} else {\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git log cmd\")\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/git.go"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 45,
                  "endLine": 81,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tif preCommit || staged {\n\t\tgitCmd, err = sources.NewGitDiffCmd(source, staged)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git diff cmd\")\n\t\t}\n\t} else {\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n",
                    "rendered": {
                      "text": "\tif preCommit || staged {\n\t\tgitCmd, err = sources.NewGitDiffCmd(source, staged)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git diff cmd\")\n\t\t}\n\t} else {\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n",
                      "markdown": "`\tif preCommit || staged {\n\t\tgitCmd, err = sources.NewGitDiffCmd(source, staged)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git diff cmd\")\n\t\t}\n\t} else {\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/git.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nvar gitCmd = &cobra.Command{\n\tUse:   \"git [flags] [repo]\",\n\tShort: \"scan git repositories for secrets\",\n\tArgs:  cobra.MaximumNArgs(1),\n\tRun:   runGit,\n}\n",
                    "rendered": {
                      "text": "\nvar gitCmd = &cobra.Command{\n\tUse:   \"git [flags] [repo]\",\n\tShort: \"scan git repositories for secrets\",\n\tArgs:  cobra.MaximumNArgs(1),\n\tRun:   runGit,\n}\n",
                      "markdown": "`\nvar gitCmd = &cobra.Command{\n\tUse:   \"git [flags] [repo]\",\n\tShort: \"scan git repositories for secrets\",\n\tArgs:  cobra.MaximumNArgs(1),\n\tRun:   runGit,\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/git.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 53,
                  "endLine": 16,
                  "endColumn": 58,
                  "snippet": {
                    "text": "func init() {\n\trootCmd.AddCommand(gitCmd)\n\tgitCmd.Flags().Bool(\"staged\", false, \"scan staged commits (good for pre-commit)\")\n\tgitCmd.Flags().Bool(\"pre-commit\", false, \"scan using git diff\")\n\tgitCmd.Flags().String(\"log-opts\", \"\", \"git log options\")\n}\n\n",
                    "rendered": {
                      "text": "func init() {\n\trootCmd.AddCommand(gitCmd)\n\tgitCmd.Flags().Bool(\"staged\", false, \"scan staged commits (good for pre-commit)\")\n\tgitCmd.Flags().Bool(\"pre-commit\", false, \"scan using git diff\")\n\tgitCmd.Flags().String(\"log-opts\", \"\", \"git log options\")\n}\n\n",
                      "markdown": "`func init() {\n\trootCmd.AddCommand(gitCmd)\n\tgitCmd.Flags().Bool(\"staged\", false, \"scan staged commits (good for pre-commit)\")\n\tgitCmd.Flags().Bool(\"pre-commit\", false, \"scan using git diff\")\n\tgitCmd.Flags().String(\"log-opts\", \"\", \"git log options\")\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/version.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/expected/report/junit_simple.xml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 77,
                  "endLine": 5,
                  "endColumn": 81,
                  "snippet": {
                    "text": "<testsuites>\n\t<testsuite failures=\"2\" name=\"gitleaks\" tests=\"2\" time=\"\">\n\t\t<testcase classname=\"Test Rule\" file=\"auth.py\" name=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" time=\"\">\n\t\t\t<failure message=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" type=\"Test Rule\">{&#xA;&#x9;&#34;Description&#34;: &#34;Test Rule&#34;,&#xA;&#x9;&#34;StartLine&#34;: 1,&#xA;&#x9;&#34;EndLine&#34;: 2,&#xA;&#x9;&#34;StartColumn&#34;: 1,&#xA;&#x9;&#34;EndColumn&#34;: 2,&#xA;&#x9;&#34;Match&#34;: &#34;line containing secret&#34;,&#xA;&#x9;&",
                    "rendered": {
                      "text": "<testsuites>\n\t<testsuite failures=\"2\" name=\"gitleaks\" tests=\"2\" time=\"\">\n\t\t<testcase classname=\"Test Rule\" file=\"auth.py\" name=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" time=\"\">\n\t\t\t<failure message=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" type=\"Test Rule\">{&#xA;&#x9;&#34;Description&#34;: &#34;Test Rule&#34;,&#xA;&#x9;&#34;StartLine&#34;: 1,&#xA;&#x9;&#34;EndLine&#34;: 2,&#xA;&#x9;&#34;StartColumn&#34;: 1,&#xA;&#x9;&#34;EndColumn&#34;: 2,&#xA;&#x9;&#34;Match&#34;: &#34;line containing secret&#34;,&#xA;&#x9;&",
                      "markdown": "`<testsuites>\n\t<testsuite failures=\"2\" name=\"gitleaks\" tests=\"2\" time=\"\">\n\t\t<testcase classname=\"Test Rule\" file=\"auth.py\" name=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" time=\"\">\n\t\t\t<failure message=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" type=\"Test Rule\">{&#xA;&#x9;&#34;Description&#34;: &#34;Test Rule&#34;,&#xA;&#x9;&#34;StartLine&#34;: 1,&#xA;&#x9;&#34;EndLine&#34;: 2,&#xA;&#x9;&#34;StartColumn&#34;: 1,&#xA;&#x9;&#34;EndColumn&#34;: 2,&#xA;&#x9;&#34;Match&#34;: &#34;line containing secret&#34;,&#xA;&#x9;&`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/expected/report/junit_simple.xml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 111,
                  "endLine": 4,
                  "endColumn": 115,
                  "snippet": {
                    "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites>\n\t<testsuite failures=\"2\" name=\"gitleaks\" tests=\"2\" time=\"\">\n\t\t<testcase classname=\"Test Rule\" file=\"auth.py\" name=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" time=\"\">\n\t\t\t<failure message=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" type=\"Test Rule\">{&#xA;&#x9;&#34;Description&#34;: &#34;Test Rule&#34;,&#xA;&#x9;&#34;StartLine&#34;: 1,&#xA;&#x9;&#34;EndLine&#34;: 2,&#xA;&#x9;&#34;StartCol",
                    "rendered": {
                      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites>\n\t<testsuite failures=\"2\" name=\"gitleaks\" tests=\"2\" time=\"\">\n\t\t<testcase classname=\"Test Rule\" file=\"auth.py\" name=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" time=\"\">\n\t\t\t<failure message=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" type=\"Test Rule\">{&#xA;&#x9;&#34;Description&#34;: &#34;Test Rule&#34;,&#xA;&#x9;&#34;StartLine&#34;: 1,&#xA;&#x9;&#34;EndLine&#34;: 2,&#xA;&#x9;&#34;StartCol",
                      "markdown": "`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites>\n\t<testsuite failures=\"2\" name=\"gitleaks\" tests=\"2\" time=\"\">\n\t\t<testcase classname=\"Test Rule\" file=\"auth.py\" name=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" time=\"\">\n\t\t\t<failure message=\"test-rule has detected a secret in file auth.py, line 1, at commit 0000000000000000.\" type=\"Test Rule\">{&#xA;&#x9;&#34;Description&#34;: &#34;Test Rule&#34;,&#xA;&#x9;&#34;StartLine&#34;: 1,&#xA;&#x9;&#34;EndLine&#34;: 2,&#xA;&#x9;&#34;StartCol`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/report/sarif.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 55,
                  "endLine": 74,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\treturn fmt.Sprintf(\"%s has detected secret for file %s.\", f.RuleID, f.File)\n\t}\n\n\treturn fmt.Sprintf(\"%s has detected secret for file %s at commit %s.\", f.RuleID, f.File, f.Commit)\n\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Sprintf(\"%s has detected secret for file %s.\", f.RuleID, f.File)\n\t}\n\n\treturn fmt.Sprintf(\"%s has detected secret for file %s at commit %s.\", f.RuleID, f.File, f.Commit)\n\n}\n\n",
                      "markdown": "`\t\treturn fmt.Sprintf(\"%s has detected secret for file %s.\", f.RuleID, f.File)\n\t}\n\n\treturn fmt.Sprintf(\"%s has detected secret for file %s at commit %s.\", f.RuleID, f.File, f.Commit)\n\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/cloudflare.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 28,
                  "endLine": 74,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\t// validate\n\ttps := origin_ca_keys\n\tfps := append(global_keys, api_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n}\n",
                    "rendered": {
                      "text": "\n\t// validate\n\ttps := origin_ca_keys\n\tfps := append(global_keys, api_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n}\n",
                      "markdown": "`\n\t// validate\n\ttps := origin_ca_keys\n\tfps := append(global_keys, api_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/cloudflare.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 8,
                  "endLine": 55,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t}\n\n\t// validate\n\ttps := api_keys\n\tfps := append(global_keys, origin_ca_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n",
                    "rendered": {
                      "text": "\t}\n\n\t// validate\n\ttps := api_keys\n\tfps := append(global_keys, origin_ca_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n",
                      "markdown": "`\t}\n\n\t// validate\n\ttps := api_keys\n\tfps := append(global_keys, origin_ca_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/cloudflare.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 15,
                  "endLine": 39,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\t// validate\n\ttps := global_keys\n\tfps := append(api_keys, origin_ca_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n}\n",
                    "rendered": {
                      "text": "\n\t// validate\n\ttps := global_keys\n\tfps := append(api_keys, origin_ca_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n}\n",
                      "markdown": "`\n\t// validate\n\ttps := global_keys\n\tfps := append(api_keys, origin_ca_keys...)\n\n\treturn utils.Validate(r, tps, fps)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/cloudflare.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 4,
                  "endLine": 14,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t`cloudflare: \"0574b9f43978174cc2cb9a1068681225433c4\"`,                 // gitleaks:allow\n}\n\nvar api_keys = []string{\n\t`cloudflare_api_key = \"Bu0rrK-lerk6y0Suqo1qSqlDDajOk61wZchCkje4\"`, // gitleaks:allow\n\t`CLOUDFLARE_API_KEY: 5oK0U90ME14yU6CVxV90crvfqVlNH2wRKBwcLWDc`,    // gitleaks:allow\n\t`cloudflare: \"oj9Yoyq0zmOyWmPPob1aoY5YSNNuJ0fbZSOURBlX\"`,          // gitleaks:allow\n",
                    "rendered": {
                      "text": "\t`cloudflare: \"0574b9f43978174cc2cb9a1068681225433c4\"`,                 // gitleaks:allow\n}\n\nvar api_keys = []string{\n\t`cloudflare_api_key = \"Bu0rrK-lerk6y0Suqo1qSqlDDajOk61wZchCkje4\"`, // gitleaks:allow\n\t`CLOUDFLARE_API_KEY: 5oK0U90ME14yU6CVxV90crvfqVlNH2wRKBwcLWDc`,    // gitleaks:allow\n\t`cloudflare: \"oj9Yoyq0zmOyWmPPob1aoY5YSNNuJ0fbZSOURBlX\"`,          // gitleaks:allow\n",
                      "markdown": "`\t`cloudflare: \"0574b9f43978174cc2cb9a1068681225433c4\"`,                 // gitleaks:allow\n}\n\nvar api_keys = []string{\n\t`cloudflare_api_key = \"Bu0rrK-lerk6y0Suqo1qSqlDDajOk61wZchCkje4\"`, // gitleaks:allow\n\t`CLOUDFLARE_API_KEY: 5oK0U90ME14yU6CVxV90crvfqVlNH2wRKBwcLWDc`,    // gitleaks:allow\n\t`cloudflare: \"oj9Yoyq0zmOyWmPPob1aoY5YSNNuJ0fbZSOURBlX\"`,          // gitleaks:allow\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/cloudflare.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 14,
                  "endLine": 17,
                  "endColumn": 56,
                  "snippet": {
                    "text": "var api_keys = []string{\n\t`cloudflare_api_key = \"Bu0rrK-lerk6y0Suqo1qSqlDDajOk61wZchCkje4\"`, // gitleaks:allow\n\t`CLOUDFLARE_API_KEY: 5oK0U90ME14yU6CVxV90crvfqVlNH2wRKBwcLWDc`,    // gitleaks:allow\n\t`cloudflare: \"oj9Yoyq0zmOyWmPPob1aoY5YSNNuJ0fbZSOURBlX\"`,          // gitleaks:allow\n}\n\nvar origin_ca_keys = []string{\n",
                    "rendered": {
                      "text": "var api_keys = []string{\n\t`cloudflare_api_key = \"Bu0rrK-lerk6y0Suqo1qSqlDDajOk61wZchCkje4\"`, // gitleaks:allow\n\t`CLOUDFLARE_API_KEY: 5oK0U90ME14yU6CVxV90crvfqVlNH2wRKBwcLWDc`,    // gitleaks:allow\n\t`cloudflare: \"oj9Yoyq0zmOyWmPPob1aoY5YSNNuJ0fbZSOURBlX\"`,          // gitleaks:allow\n}\n\nvar origin_ca_keys = []string{\n",
                      "markdown": "`var api_keys = []string{\n\t`cloudflare_api_key = \"Bu0rrK-lerk6y0Suqo1qSqlDDajOk61wZchCkje4\"`, // gitleaks:allow\n\t`CLOUDFLARE_API_KEY: 5oK0U90ME14yU6CVxV90crvfqVlNH2wRKBwcLWDc`,    // gitleaks:allow\n\t`cloudflare: \"oj9Yoyq0zmOyWmPPob1aoY5YSNNuJ0fbZSOURBlX\"`,          // gitleaks:allow\n}\n\nvar origin_ca_keys = []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/squarespace.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 106,
                  "endLine": 13,
                  "endColumn": 115,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"squarespace-access-token\",\n\t\tDescription: \"Identified a Squarespace Access Token, which may compromise website management and content control on Squarespace.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"squarespace\"}, utils.Hex8_4_4_4_12(), true),\n\n\t\tKeywords: []string{\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"squarespace-access-token\",\n\t\tDescription: \"Identified a Squarespace Access Token, which may compromise website management and content control on Squarespace.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"squarespace\"}, utils.Hex8_4_4_4_12(), true),\n\n\t\tKeywords: []string{\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"squarespace-access-token\",\n\t\tDescription: \"Identified a Squarespace Access Token, which may compromise website management and content control on Squarespace.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"squarespace\"}, utils.Hex8_4_4_4_12(), true),\n\n\t\tKeywords: []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 829,
                  "startColumn": 45,
                  "endLine": 829,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\t\t\t\tFile:        \"../testdata/repos/symlinks/source_file/id_ed25519\",\n\t\t\t\t\tSymlinkFile: \"../testdata/repos/symlinks/file_symlink/symlinked_id_ed25519\",\n\t\t\t\t\tRuleID:      \"apkey\",\n\t\t\t\t\tTags:        []string{\"key\", \"AsymmetricPrivateKey\"},\n\t\t\t\t\tEntropy:     3.587164,\n\t\t\t\t\tFingerprint: \"../testdata/repos/symlinks/source_file/id_ed25519:apkey:1\",\n\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\tFile:        \"../testdata/repos/symlinks/source_file/id_ed25519\",\n\t\t\t\t\tSymlinkFile: \"../testdata/repos/symlinks/file_symlink/symlinked_id_ed25519\",\n\t\t\t\t\tRuleID:      \"apkey\",\n\t\t\t\t\tTags:        []string{\"key\", \"AsymmetricPrivateKey\"},\n\t\t\t\t\tEntropy:     3.587164,\n\t\t\t\t\tFingerprint: \"../testdata/repos/symlinks/source_file/id_ed25519:apkey:1\",\n\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\tFile:        \"../testdata/repos/symlinks/source_file/id_ed25519\",\n\t\t\t\t\tSymlinkFile: \"../testdata/repos/symlinks/file_symlink/symlinked_id_ed25519\",\n\t\t\t\t\tRuleID:      \"apkey\",\n\t\t\t\t\tTags:        []string{\"key\", \"AsymmetricPrivateKey\"},\n\t\t\t\t\tEntropy:     3.587164,\n\t\t\t\t\tFingerprint: \"../testdata/repos/symlinks/source_file/id_ed25519:apkey:1\",\n\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 763,
                  "startColumn": 24,
                  "endLine": 763,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\t\t\tEndColumn:   35,\n\t\t\t\t\tMatch:       \"PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tSecret:      \"8ae31cacf141669ddfb5da\",\n\t\t\t\t\tLine:        \"\\nDB_PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tFile:        \"../testdata/repos/nogit/.env.prod\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n\t\t\t\t\tTags:        []string{},\n",
                    "rendered": {
                      "text": "\t\t\t\t\tEndColumn:   35,\n\t\t\t\t\tMatch:       \"PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tSecret:      \"8ae31cacf141669ddfb5da\",\n\t\t\t\t\tLine:        \"\\nDB_PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tFile:        \"../testdata/repos/nogit/.env.prod\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n\t\t\t\t\tTags:        []string{},\n",
                      "markdown": "`\t\t\t\t\tEndColumn:   35,\n\t\t\t\t\tMatch:       \"PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tSecret:      \"8ae31cacf141669ddfb5da\",\n\t\t\t\t\tLine:        \"\\nDB_PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tFile:        \"../testdata/repos/nogit/.env.prod\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n\t\t\t\t\tTags:        []string{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 761,
                  "startColumn": 19,
                  "endLine": 761,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\t\tEndLine:     4,\n\t\t\t\t\tStartColumn: 5,\n\t\t\t\t\tEndColumn:   35,\n\t\t\t\t\tMatch:       \"PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tSecret:      \"8ae31cacf141669ddfb5da\",\n\t\t\t\t\tLine:        \"\\nDB_PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tFile:        \"../testdata/repos/nogit/.env.prod\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\tEndLine:     4,\n\t\t\t\t\tStartColumn: 5,\n\t\t\t\t\tEndColumn:   35,\n\t\t\t\t\tMatch:       \"PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tSecret:      \"8ae31cacf141669ddfb5da\",\n\t\t\t\t\tLine:        \"\\nDB_PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tFile:        \"../testdata/repos/nogit/.env.prod\",\n",
                      "markdown": "`\t\t\t\t\tEndLine:     4,\n\t\t\t\t\tStartColumn: 5,\n\t\t\t\t\tEndColumn:   35,\n\t\t\t\t\tMatch:       \"PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tSecret:      \"8ae31cacf141669ddfb5da\",\n\t\t\t\t\tLine:        \"\\nDB_PASSWORD=8ae31cacf141669ddfb5da\",\n\t\t\t\t\tFile:        \"../testdata/repos/nogit/.env.prod\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 21,
                  "endLine": 396,
                  "endColumn": 32,
                  "snippet": {
                    "text": "cbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tMatch:       \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"deco",
                    "rendered": {
                      "text": "cbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tMatch:       \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"deco",
                      "markdown": "`cbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tMatch:       \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"deco`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 21,
                  "endLine": 382,
                  "endColumn": 32,
                  "snippet": {
                    "text": "0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\"},\n\t\t\t\t\tStart",
                    "rendered": {
                      "text": "0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\"},\n\t\t\t\t\tStart",
                      "markdown": "`0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\"},\n\t\t\t\t\tStart`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "endColumn": 11,
                  "snippet": {
                    "text": ")\n\nconst maxDecodeDepth = 8\nconst configPath = \"../testdata/config/\"\nconst repoBasePath = \"../testdata/repos/\"\nconst b64TestValues = `\n# Decoded\n-----BEGIN PRIVATE KEY-----\n135f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\nu+QDkg0spw==\n-----END PRIVATE KEY-----\n\n# Encoded\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\n\n# Double Encoded: b64 encoded aws config inside a jwt\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI",
                    "rendered": {
                      "text": ")\n\nconst maxDecodeDepth = 8\nconst configPath = \"../testdata/config/\"\nconst repoBasePath = \"../testdata/repos/\"\nconst b64TestValues = `\n# Decoded\n-----BEGIN PRIVATE KEY-----\n135f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\nu+QDkg0spw==\n-----END PRIVATE KEY-----\n\n# Encoded\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\n\n# Double Encoded: b64 encoded aws config inside a jwt\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI",
                      "markdown": "`)\n\nconst maxDecodeDepth = 8\nconst configPath = \"../testdata/config/\"\nconst repoBasePath = \"../testdata/repos/\"\nconst b64TestValues = `\n# Decoded\n-----BEGIN PRIVATE KEY-----\n135f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\nu+QDkg0spw==\n-----END PRIVATE KEY-----\n\n# Encoded\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\n\n# Double Encoded: b64 encoded aws config inside a jwt\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 51,
                  "endLine": 468,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nc2VjcmV0PVpHVmpiMlJsWkMxelpXTnlaWFF0ZG1Gc2RXVT0=\",\n\t\t\t\t\tRuleID:      \"overlapping\",\n\t\t\t\t\tTags:        []string{\"overlapping\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   20,\n\t\t\t\t\tEndLine:     20,\n\t\t\t\t\tStartColumn: 2,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nc2VjcmV0PVpHVmpiMlJsWkMxelpXTnlaWFF0ZG1Gc2RXVT0=\",\n\t\t\t\t\tRuleID:      \"overlapping\",\n\t\t\t\t\tTags:        []string{\"overlapping\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   20,\n\t\t\t\t\tEndLine:     20,\n\t\t\t\t\tStartColumn: 2,\n",
                      "markdown": "`\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nc2VjcmV0PVpHVmpiMlJsWkMxelpXTnlaWFF0ZG1Gc2RXVT0=\",\n\t\t\t\t\tRuleID:      \"overlapping\",\n\t\t\t\t\tTags:        []string{\"overlapping\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   20,\n\t\t\t\t\tEndLine:     20,\n\t\t\t\t\tStartColumn: 2,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 51,
                  "endLine": 454,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nsecret=ZGVjb2RlZC1zZWNyZXQtdmFsdWU=\",\n\t\t\t\t\tRuleID:      \"overlapping\",\n\t\t\t\t\tTags:        []string{\"overlapping\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   18,\n\t\t\t\t\tEndLine:     18,\n\t\t\t\t\tStartColumn: 2,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nsecret=ZGVjb2RlZC1zZWNyZXQtdmFsdWU=\",\n\t\t\t\t\tRuleID:      \"overlapping\",\n\t\t\t\t\tTags:        []string{\"overlapping\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   18,\n\t\t\t\t\tEndLine:     18,\n\t\t\t\t\tStartColumn: 2,\n",
                      "markdown": "`\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nsecret=ZGVjb2RlZC1zZWNyZXQtdmFsdWU=\",\n\t\t\t\t\tRuleID:      \"overlapping\",\n\t\t\t\t\tTags:        []string{\"overlapping\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   18,\n\t\t\t\t\tEndLine:     18,\n\t\t\t\t\tStartColumn: 2,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 55,
                  "endLine": 440,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nc21hbGwtc2VjcmV0\",\n\t\t\t\t\tRuleID:      \"small-secret\",\n\t\t\t\t\tTags:        []string{\"small\", \"secret\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   15,\n\t\t\t\t\tEndLine:     15,\n\t\t\t\t\tStartColumn: 2,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nc21hbGwtc2VjcmV0\",\n\t\t\t\t\tRuleID:      \"small-secret\",\n\t\t\t\t\tTags:        []string{\"small\", \"secret\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   15,\n\t\t\t\t\tEndLine:     15,\n\t\t\t\t\tStartColumn: 2,\n",
                      "markdown": "`\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nc21hbGwtc2VjcmV0\",\n\t\t\t\t\tRuleID:      \"small-secret\",\n\t\t\t\t\tTags:        []string{\"small\", \"secret\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   15,\n\t\t\t\t\tEndLine:     15,\n\t\t\t\t\tStartColumn: 2,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 53,
                  "endLine": 426,
                  "endColumn": 59,
                  "snippet": {
                    "text": "mRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\",\n\t\t\t\t\tRuleID:      \"aws-secret-access-key\",\n\t\t\t\t\tTags:        []string{\"aws\", \"secret\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   11,\n\t\t\t\t\tEndLine:     11,\n\t\t\t\t\tStartColumn: 39,\n\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     4.721928,\n\t\t\t\t},\n\t\t\t\t{ // Encoded Small secret at the end to make sure it's picked up by the decoding\n\t\t\t\t\tDescription: \"Small Secret\",\n\t\t\t\t\tSecret:      \"small-secret\",\n\t",
                    "rendered": {
                      "text": "mRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\",\n\t\t\t\t\tRuleID:      \"aws-secret-access-key\",\n\t\t\t\t\tTags:        []string{\"aws\", \"secret\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   11,\n\t\t\t\t\tEndLine:     11,\n\t\t\t\t\tStartColumn: 39,\n\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     4.721928,\n\t\t\t\t},\n\t\t\t\t{ // Encoded Small secret at the end to make sure it's picked up by the decoding\n\t\t\t\t\tDescription: \"Small Secret\",\n\t\t\t\t\tSecret:      \"small-secret\",\n\t",
                      "markdown": "`mRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\",\n\t\t\t\t\tRuleID:      \"aws-secret-access-key\",\n\t\t\t\t\tTags:        []string{\"aws\", \"secret\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   11,\n\t\t\t\t\tEndLine:     11,\n\t\t\t\t\tStartColumn: 39,\n\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     4.721928,\n\t\t\t\t},\n\t\t\t\t{ // Encoded Small secret at the end to make sure it's picked up by the decoding\n\t\t\t\t\tDescription: \"Small Secret\",\n\t\t\t\t\tSecret:      \"small-secret\",\n\t`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 57,
                  "endLine": 412,
                  "endColumn": 63,
                  "snippet": {
                    "text": "E1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\",\n\t\t\t\t\tRuleID:      \"aws-iam-unique-identifier\",\n\t\t\t\t\tTags:        []string{\"aws\", \"identifier\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   11,\n\t\t\t\t\tEndLine:     11,\n\t\t\t\t\tStartColumn: 39,\n\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     3.6841838,\n\t\t\t\t},\n\t\t\t\t{ // Encoded AWS config with a secret access key inside a JWT\n\t\t\t\t\tDescription: \"AWS Secret Access Key\",\n\t\t\t\t\tSecret:      \"wJalrXUtnFEMI/K7MDENG/bPx",
                    "rendered": {
                      "text": "E1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\",\n\t\t\t\t\tRuleID:      \"aws-iam-unique-identifier\",\n\t\t\t\t\tTags:        []string{\"aws\", \"identifier\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   11,\n\t\t\t\t\tEndLine:     11,\n\t\t\t\t\tStartColumn: 39,\n\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     3.6841838,\n\t\t\t\t},\n\t\t\t\t{ // Encoded AWS config with a secret access key inside a JWT\n\t\t\t\t\tDescription: \"AWS Secret Access Key\",\n\t\t\t\t\tSecret:      \"wJalrXUtnFEMI/K7MDENG/bPx",
                      "markdown": "`E1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\",\n\t\t\t\t\tRuleID:      \"aws-iam-unique-identifier\",\n\t\t\t\t\tTags:        []string{\"aws\", \"identifier\", \"decoded:base64\", \"decode-depth:2\"},\n\t\t\t\t\tStartLine:   11,\n\t\t\t\t\tEndLine:     11,\n\t\t\t\t\tStartColumn: 39,\n\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     3.6841838,\n\t\t\t\t},\n\t\t\t\t{ // Encoded AWS config with a secret access key inside a JWT\n\t\t\t\t\tDescription: \"AWS Secret Access Key\",\n\t\t\t\t\tSecret:      \"wJalrXUtnFEMI/K7MDENG/bPx`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 54,
                  "endLine": 398,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   8,\n\t\t\t\t\tEndLine:     8,\n\t\t\t\t\tStartColumn: 16,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   8,\n\t\t\t\t\tEndLine:     8,\n\t\t\t\t\tStartColumn: 16,\n",
                      "markdown": "`\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   8,\n\t\t\t\t\tEndLine:     8,\n\t\t\t\t\tStartColumn: 16,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 572,
                  "startColumn": 18,
                  "endLine": 572,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t\t\tMatch:       \"AKIALALEMEL33243OLIA\",\n\t\t\t\t\tDate:        \"2021-11-02T23:48:06Z\",\n\t\t\t\t\tFile:        \"foo/foo.go\",\n\t\t\t\t\tCommit:      \"491504d5a31946ce75e22554cc34203d8e5ff3ca\",\n\t\t\t\t\tAuthor:      \"Zach Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"adding foo package with secret\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\tMatch:       \"AKIALALEMEL33243OLIA\",\n\t\t\t\t\tDate:        \"2021-11-02T23:48:06Z\",\n\t\t\t\t\tFile:        \"foo/foo.go\",\n\t\t\t\t\tCommit:      \"491504d5a31946ce75e22554cc34203d8e5ff3ca\",\n\t\t\t\t\tAuthor:      \"Zach Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"adding foo package with secret\",\n",
                      "markdown": "`\t\t\t\t\tMatch:       \"AKIALALEMEL33243OLIA\",\n\t\t\t\t\tDate:        \"2021-11-02T23:48:06Z\",\n\t\t\t\t\tFile:        \"foo/foo.go\",\n\t\t\t\t\tCommit:      \"491504d5a31946ce75e22554cc34203d8e5ff3ca\",\n\t\t\t\t\tAuthor:      \"Zach Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"adding foo package with secret\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 18,
                  "endLine": 545,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t\t\tLine:        \"\\n\\taws_token := \\\"AKIALALEMEL33243OLIA\\\"\",\n\t\t\t\t\tFile:        \"foo/foo.go\",\n\t\t\t\t\tDate:        \"2021-11-02T23:48:06Z\",\n\t\t\t\t\tCommit:      \"491504d5a31946ce75e22554cc34203d8e5ff3ca\",\n\t\t\t\t\tAuthor:      \"Zach Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"adding foo package with secret\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\tLine:        \"\\n\\taws_token := \\\"AKIALALEMEL33243OLIA\\\"\",\n\t\t\t\t\tFile:        \"foo/foo.go\",\n\t\t\t\t\tDate:        \"2021-11-02T23:48:06Z\",\n\t\t\t\t\tCommit:      \"491504d5a31946ce75e22554cc34203d8e5ff3ca\",\n\t\t\t\t\tAuthor:      \"Zach Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"adding foo package with secret\",\n",
                      "markdown": "`\t\t\t\t\tLine:        \"\\n\\taws_token := \\\"AKIALALEMEL33243OLIA\\\"\",\n\t\t\t\t\tFile:        \"foo/foo.go\",\n\t\t\t\t\tDate:        \"2021-11-02T23:48:06Z\",\n\t\t\t\t\tCommit:      \"491504d5a31946ce75e22554cc34203d8e5ff3ca\",\n\t\t\t\t\tAuthor:      \"Zach Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"adding foo package with secret\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 18,
                  "endLine": 525,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t\t\tMatch:       \"AKIALALEMEL33243OLIA\",\n\t\t\t\t\tFile:        \"main.go\",\n\t\t\t\t\tDate:        \"2021-11-02T23:37:53Z\",\n\t\t\t\t\tCommit:      \"1b6da43b82b22e4eaa10bcf8ee591e91abbfc587\",\n\t\t\t\t\tAuthor:      \"Zachary Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"Accidentally add a secret\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\tMatch:       \"AKIALALEMEL33243OLIA\",\n\t\t\t\t\tFile:        \"main.go\",\n\t\t\t\t\tDate:        \"2021-11-02T23:37:53Z\",\n\t\t\t\t\tCommit:      \"1b6da43b82b22e4eaa10bcf8ee591e91abbfc587\",\n\t\t\t\t\tAuthor:      \"Zachary Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"Accidentally add a secret\",\n",
                      "markdown": "`\t\t\t\t\tMatch:       \"AKIALALEMEL33243OLIA\",\n\t\t\t\t\tFile:        \"main.go\",\n\t\t\t\t\tDate:        \"2021-11-02T23:37:53Z\",\n\t\t\t\t\tCommit:      \"1b6da43b82b22e4eaa10bcf8ee591e91abbfc587\",\n\t\t\t\t\tAuthor:      \"Zachary Rice\",\n\t\t\t\t\tEmail:       \"zricer@protonmail.com\",\n\t\t\t\t\tMessage:     \"Accidentally add a secret\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 34,
                  "endLine": 396,
                  "endColumn": 228,
                  "snippet": {
                    "text": "\t\t\t\t\tSecret:      \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tMatch:       \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   8,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tSecret:      \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tMatch:       \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   8,\n",
                      "markdown": "`\t\t\t\t\tSecret:      \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tMatch:       \"-----BEGIN PRIVATE KEY-----\\n435f/bRUBHrbHqLY/xS3I7Oth+8rgG+0tBwfMcbk05Sgxq6QUzSYIQAop+WvsTwk2sR+C38g0Mnb\\nu+QDkg0spw==\\n-----END PRIVATE KEY-----\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\", \"decoded:base64\", \"decode-depth:1\"},\n\t\t\t\t\tStartLine:   8,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 34,
                  "endLine": 382,
                  "endColumn": 228,
                  "snippet": {
                    "text": "SSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\"},\n\t\t\t\t\tStartLine:   8,\n\t\t\t\t\tEndLine:     8,\n\t\t\t\t\tStartColumn: 16,\n\t\t\t\t\tEndColumn:   207,\n\t\t\t\t\tEntropy:     5.3861146,\n\t\t\t\t},\n\t\t\t\t{ // Encoded key captured by plain text rule using the decoder\n\t\t\t\t\tDescription",
                    "rendered": {
                      "text": "SSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\"},\n\t\t\t\t\tStartLine:   8,\n\t\t\t\t\tEndLine:     8,\n\t\t\t\t\tStartColumn: 16,\n\t\t\t\t\tEndColumn:   207,\n\t\t\t\t\tEntropy:     5.3861146,\n\t\t\t\t},\n\t\t\t\t{ // Encoded key captured by plain text rule using the decoder\n\t\t\t\t\tDescription",
                      "markdown": "`SSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-key\",\n\t\t\t\t\tTags:        []string{\"key\", \"private\"},\n\t\t\t\t\tStartLine:   8,\n\t\t\t\t\tEndLine:     8,\n\t\t\t\t\tStartColumn: 16,\n\t\t\t\t\tEndColumn:   207,\n\t\t\t\t\tEntropy:     5.3861146,\n\t\t\t\t},\n\t\t\t\t{ // Encoded key captured by plain text rule using the decoder\n\t\t\t\t\tDescription`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 18,
                  "endLine": 380,
                  "endColumn": 212,
                  "snippet": {
                    "text": " captured by custom b64 regex rule\n\t\t\t\t\tDescription: \"Private Key\",\n\t\t\t\t\tSecret:      \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-",
                    "rendered": {
                      "text": " captured by custom b64 regex rule\n\t\t\t\t\tDescription: \"Private Key\",\n\t\t\t\t\tSecret:      \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-",
                      "markdown": "` captured by custom b64 regex rule\n\t\t\t\t\tDescription: \"Private Key\",\n\t\t\t\t\tSecret:      \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n\t\t\t\t\tRuleID:      \"b64-encoded-private-`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 18,
                  "endLine": 379,
                  "endColumn": 212,
                  "snippet": {
                    "text": "\t\t\t\t},\n\t\t\t\t{ // Encoded key captured by custom b64 regex rule\n\t\t\t\t\tDescription: \"Private Key\",\n\t\t\t\t\tSecret:      \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n",
                    "rendered": {
                      "text": "\t\t\t\t},\n\t\t\t\t{ // Encoded key captured by custom b64 regex rule\n\t\t\t\t\tDescription: \"Private Key\",\n\t\t\t\t\tSecret:      \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n",
                      "markdown": "`\t\t\t\t},\n\t\t\t\t{ // Encoded key captured by custom b64 regex rule\n\t\t\t\t\tDescription: \"Private Key\",\n\t\t\t\t\tSecret:      \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tMatch:       \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\",\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tLine:        \"\\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 42,
                  "endLine": 351,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t\tcfgName:      \"path_only\",\n\t\t\tbaselinePath: \".baseline.json\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \".baseline.json\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                    "rendered": {
                      "text": "\t\t\tcfgName:      \"path_only\",\n\t\t\tbaselinePath: \".baseline.json\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \".baseline.json\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                      "markdown": "`\t\t\tcfgName:      \"path_only\",\n\t\t\tbaselinePath: \".baseline.json\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \".baseline.json\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 42,
                  "endLine": 342,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"load2523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"load2523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                      "markdown": "`\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"load2523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 42,
                  "endLine": 317,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tcfgName: \"bad_entropy_group\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tcfgName: \"bad_entropy_group\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                      "markdown": "`\t\t{\n\t\t\tcfgName: \"bad_entropy_group\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 42,
                  "endLine": 301,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tcfgName: \"path_only\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tcfgName: \"path_only\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n",
                      "markdown": "`\t\t{\n\t\t\tcfgName: \"path_only\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 46,
                  "endLine": 286,
                  "endColumn": 112,
                  "snippet": {
                    "text": "\t\t\t\t\tDescription: \"Generic API Key\",\n\t\t\t\t\tMatch:       \"Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.py\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n\t\t\t\t\tTags:        []string{},\n",
                    "rendered": {
                      "text": "\t\t\t\t\tDescription: \"Generic API Key\",\n\t\t\t\t\tMatch:       \"Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.py\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n\t\t\t\t\tTags:        []string{},\n",
                      "markdown": "`\t\t\t\t\tDescription: \"Generic API Key\",\n\t\t\t\t\tMatch:       \"Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.py\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n\t\t\t\t\tTags:        []string{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 18,
                  "endLine": 285,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\t\t\t\t{\n\t\t\t\t\tDescription: \"Generic API Key\",\n\t\t\t\t\tMatch:       \"Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.py\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n",
                    "rendered": {
                      "text": "\t\t\t\t{\n\t\t\t\t\tDescription: \"Generic API Key\",\n\t\t\t\t\tMatch:       \"Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.py\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n",
                      "markdown": "`\t\t\t\t{\n\t\t\t\t\tDescription: \"Generic API Key\",\n\t\t\t\t\tMatch:       \"Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.py\",\n\t\t\t\t\tRuleID:      \"generic-api-key\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 42,
                  "endLine": 278,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n",
                      "markdown": "`\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.py\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 42,
                  "endLine": 270,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n",
                      "markdown": "`\t\t{\n\t\t\tcfgName: \"generic_with_py_path\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 46,
                  "endLine": 255,
                  "endColumn": 112,
                  "snippet": {
                    "text": "\t\t\t\t\tDescription: \"Discord API key\",\n\t\t\t\t\tMatch:       \"Discord_Public_Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tRuleID:      \"discord-api-key\",\n\t\t\t\t\tTags:        []string{},\n",
                    "rendered": {
                      "text": "\t\t\t\t\tDescription: \"Discord API key\",\n\t\t\t\t\tMatch:       \"Discord_Public_Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tRuleID:      \"discord-api-key\",\n\t\t\t\t\tTags:        []string{},\n",
                      "markdown": "`\t\t\t\t\tDescription: \"Discord API key\",\n\t\t\t\t\tMatch:       \"Discord_Public_Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tRuleID:      \"discord-api-key\",\n\t\t\t\t\tTags:        []string{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 18,
                  "endLine": 254,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\t\t\t\t{\n\t\t\t\t\tDescription: \"Discord API key\",\n\t\t\t\t\tMatch:       \"Discord_Public_Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tRuleID:      \"discord-api-key\",\n",
                    "rendered": {
                      "text": "\t\t\t\t{\n\t\t\t\t\tDescription: \"Discord API key\",\n\t\t\t\t\tMatch:       \"Discord_Public_Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tRuleID:      \"discord-api-key\",\n",
                      "markdown": "`\t\t\t\t{\n\t\t\t\t\tDescription: \"Discord API key\",\n\t\t\t\t\tMatch:       \"Discord_Public_Key = \\\"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\\\"\",\n\t\t\t\t\tSecret:      \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\",\n\t\t\t\t\tLine:        `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\t\tFile:        \"tmp.go\",\n\t\t\t\t\tRuleID:      \"discord-api-key\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 42,
                  "endLine": 247,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tcfgName: \"entropy_group\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tcfgName: \"entropy_group\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n",
                      "markdown": "`\t\t{\n\t\t\tcfgName: \"entropy_group\",\n\t\t\tfragment: Fragment{\n\t\t\t\tRaw:      `const Discord_Public_Key = \"e7322523fb86ed64c836a979cf8465fbd436378c653c1db38f9ae87bc62a6fd5\"`,\n\t\t\t\tFilePath: \"tmp.go\",\n\t\t\t},\n\t\t\texpectedFindings: []report.Finding{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 13,
                  "endLine": 29,
                  "endColumn": 207,
                  "snippet": {
                    "text": "-----END PRIVATE KEY-----\n\n# Encoded\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\n\n# Double Encoded: b64 encoded aws config inside a jwt\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiY29uZmlnIjoiVzJSbFptRjFiSFJkQ25KbFoybHZiaUE5SUhWekxXVmhjM1F0TWdwaGQzTmZZV05qWlhOelgydGxlVjlwWkNBOUlFRlRTVUZKVDFOR1QwUk9UamRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\n",
                    "rendered": {
                      "text": "-----END PRIVATE KEY-----\n\n# Encoded\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\n\n# Double Encoded: b64 encoded aws config inside a jwt\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiY29uZmlnIjoiVzJSbFptRjFiSFJkQ25KbFoybHZiaUE5SUhWekxXVmhjM1F0TWdwaGQzTmZZV05qWlhOelgydGxlVjlwWkNBOUlFRlRTVUZKVDFOR1QwUk9UamRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\n",
                      "markdown": "`-----END PRIVATE KEY-----\n\n# Encoded\nprivate_key: 'LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCjQzNWYvYlJVQkhyYkhxTFkveFMzSTdPdGgrOHJnRyswdEJ3Zk1jYmswNVNneHE2UVV6U1lJUUFvcCtXdnNUd2syc1IrQzM4ZzBNbmIKdStRRGtnMHNwdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K'\n\n# Double Encoded: b64 encoded aws config inside a jwt\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwiY29uZmlnIjoiVzJSbFptRjFiSFJkQ25KbFoybHZiaUE5SUhWekxXVmhjM1F0TWdwaGQzTmZZV05qWlhOelgydGxlVjlwWkNBOUlFRlRTVUZKVDFOR1QwUk9UamRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 433,
                  "startColumn": 29,
                  "endLine": 433,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     4.721928,\n\t\t\t\t},\n\t\t\t\t{ // Encoded Small secret at the end to make sure it's picked up by the decoding\n\t\t\t\t\tDescription: \"Small Secret\",\n\t\t\t\t\tSecret:      \"small-secret\",\n\t\t\t\t\tMatch:       \"small-secret\",\n",
                    "rendered": {
                      "text": "\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     4.721928,\n\t\t\t\t},\n\t\t\t\t{ // Encoded Small secret at the end to make sure it's picked up by the decoding\n\t\t\t\t\tDescription: \"Small Secret\",\n\t\t\t\t\tSecret:      \"small-secret\",\n\t\t\t\t\tMatch:       \"small-secret\",\n",
                      "markdown": "`\t\t\t\t\tEndColumn:   344,\n\t\t\t\t\tEntropy:     4.721928,\n\t\t\t\t},\n\t\t\t\t{ // Encoded Small secret at the end to make sure it's picked up by the decoding\n\t\t\t\t\tDescription: \"Small Secret\",\n\t\t\t\t\tSecret:      \"small-secret\",\n\t\t\t\t\tMatch:       \"small-secret\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/detect_test.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 16,
                  "endLine": 34,
                  "endColumn": 20,
                  "snippet": {
                    "text": "aUE5SUhWekxXVmhjM1F0TWdwaGQzTmZZV05qWlhOelgydGxlVjlwWkNBOUlFRlRTVUZKVDFOR1QwUk9UamRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\n\n# A small secret at the end to make sure that as the other ones above shrink\n# when decoded, the positions are taken into consideratoin for overlaps\nc21hbGwtc2VjcmV0\n\n# This tests how it handles when the match bounds go outside the decoded value\nsecret=ZGVjb2RlZC1zZWNyZXQtdmFsdWU=\n# The above encoded again\nc2VjcmV0PVpH",
                    "rendered": {
                      "text": "aUE5SUhWekxXVmhjM1F0TWdwaGQzTmZZV05qWlhOelgydGxlVjlwWkNBOUlFRlRTVUZKVDFOR1QwUk9UamRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\n\n# A small secret at the end to make sure that as the other ones above shrink\n# when decoded, the positions are taken into consideratoin for overlaps\nc21hbGwtc2VjcmV0\n\n# This tests how it handles when the match bounds go outside the decoded value\nsecret=ZGVjb2RlZC1zZWNyZXQtdmFsdWU=\n# The above encoded again\nc2VjcmV0PVpH",
                      "markdown": "`aUE5SUhWekxXVmhjM1F0TWdwaGQzTmZZV05qWlhOelgydGxlVjlwWkNBOUlFRlRTVUZKVDFOR1QwUk9UamRNV0UweE1FcEpDbUYzYzE5elpXTnlaWFJmWVdOalpYTnpYMnRsZVNBOUlIZEtZV3h5V0ZWMGJrWkZUVWt2U3pkTlJFVk9SeTlpVUhoU1ptbERXVVZHVlVORWJFVllNVUVLIiwiaWF0IjoxNTE2MjM5MDIyfQ.8gxviXEOuIBQk2LvTYHSf-wXVhnEKC3h4yM5nlOF4zA\n\n# A small secret at the end to make sure that as the other ones above shrink\n# when decoded, the positions are taken into consideratoin for overlaps\nc21hbGwtc2VjcmV0\n\n# This tests how it handles when the match bounds go outside the decoded value\nsecret=ZGVjb2RlZC1zZWNyZXQtdmFsdWU=\n# The above encoded again\nc2VjcmV0PVpH`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/baseline_test.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tfindings report.Finding\n\t\tbaseline []report.Finding\n\t\texpect   bool\n\t}{\n\t\t{\n\t\t\tfindings: report.Finding{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tfindings report.Finding\n\t\tbaseline []report.Finding\n\t\texpect   bool\n\t}{\n\t\t{\n\t\t\tfindings: report.Finding{\n",
                      "markdown": "`\ttests := []struct {\n\t\tfindings report.Finding\n\t\tbaseline []report.Finding\n\t\texpect   bool\n\t}{\n\t\t{\n\t\t\tfindings: report.Finding{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/refs/remotes/origin/api-pkg"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 132,
                  "endLine": 1,
                  "endColumn": 140,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896552 -0500\tupdate by push\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896552 -0500\tupdate by push\n",
                      "markdown": "`0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896552 -0500\tupdate by push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/refs/remotes/origin/foo"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 132,
                  "endLine": 1,
                  "endColumn": 140,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896935 -0500\tupdate by push\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896935 -0500\tupdate by push\n",
                      "markdown": "`0000000000000000000000000000000000000000 f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896935 -0500\tupdate by push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/refs/heads/api-pkg"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 153,
                  "endLine": 2,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tbranch: Created from HEAD\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tbranch: Created from HEAD\n",
                      "markdown": "`0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tbranch: Created from HEAD\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/refs/heads/foo"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 153,
                  "endLine": 2,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 2e1db472eeba53f06c4026ae4566ea022e36598e Zach Rice <zricer@protonmail.com> 1635896716 -0500\tbranch: Created from HEAD\n2e1db472eeba53f06c4026ae4566ea022e36598e 491504d5a31946ce75e22554cc34203d8e5ff3ca Zach Rice <zricer@protonmail.com> 1635896886 -0500\tcommit: adding foo package with secret\n491504d5a31946ce75e22554cc34203d8e5ff3ca f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896931 -0500\tcommit: removing secret from foo package\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 2e1db472eeba53f06c4026ae4566ea022e36598e Zach Rice <zricer@protonmail.com> 1635896716 -0500\tbranch: Created from HEAD\n2e1db472eeba53f06c4026ae4566ea022e36598e 491504d5a31946ce75e22554cc34203d8e5ff3ca Zach Rice <zricer@protonmail.com> 1635896886 -0500\tcommit: adding foo package with secret\n491504d5a31946ce75e22554cc34203d8e5ff3ca f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896931 -0500\tcommit: removing secret from foo package\n",
                      "markdown": "`0000000000000000000000000000000000000000 2e1db472eeba53f06c4026ae4566ea022e36598e Zach Rice <zricer@protonmail.com> 1635896716 -0500\tbranch: Created from HEAD\n2e1db472eeba53f06c4026ae4566ea022e36598e 491504d5a31946ce75e22554cc34203d8e5ff3ca Zach Rice <zricer@protonmail.com> 1635896886 -0500\tcommit: adding foo package with secret\n491504d5a31946ce75e22554cc34203d8e5ff3ca f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896931 -0500\tcommit: removing secret from foo package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/baseline/baseline.json"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 12,
                  "endLine": 30,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  \"Match\": \"************************\",\n  \"Secret\": \"************************\",\n  \"File\": \"detect/detect_test.go\",\n  \"Commit\": \"9326f35380636bcbe61e94b0584d1618c4b5c2c2\",\n  \"Entropy\": 1.9606875,\n  \"Author\": \"****\",\n  \"Email\": \"****\",\n",
                    "rendered": {
                      "text": "  \"Match\": \"************************\",\n  \"Secret\": \"************************\",\n  \"File\": \"detect/detect_test.go\",\n  \"Commit\": \"9326f35380636bcbe61e94b0584d1618c4b5c2c2\",\n  \"Entropy\": 1.9606875,\n  \"Author\": \"****\",\n  \"Email\": \"****\",\n",
                      "markdown": "`  \"Match\": \"************************\",\n  \"Secret\": \"************************\",\n  \"File\": \"detect/detect_test.go\",\n  \"Commit\": \"9326f35380636bcbe61e94b0584d1618c4b5c2c2\",\n  \"Entropy\": 1.9606875,\n  \"Author\": \"****\",\n  \"Email\": \"****\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/baseline/baseline.json"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  \"Match\": \"************************\",\n  \"Secret\": \"************************\",\n  \"File\": \"detect/detect_test.go\",\n  \"Commit\": \"9326f35380636bcbe61e94b0584d1618c4b5c2c2\",\n  \"Entropy\": 1.9606875,\n  \"Author\": \"****\",\n  \"Email\": \"****\",\n",
                    "rendered": {
                      "text": "  \"Match\": \"************************\",\n  \"Secret\": \"************************\",\n  \"File\": \"detect/detect_test.go\",\n  \"Commit\": \"9326f35380636bcbe61e94b0584d1618c4b5c2c2\",\n  \"Entropy\": 1.9606875,\n  \"Author\": \"****\",\n  \"Email\": \"****\",\n",
                      "markdown": "`  \"Match\": \"************************\",\n  \"Secret\": \"************************\",\n  \"File\": \"detect/detect_test.go\",\n  \"Commit\": \"9326f35380636bcbe61e94b0584d1618c4b5c2c2\",\n  \"Entropy\": 1.9606875,\n  \"Author\": \"****\",\n  \"Email\": \"****\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2650,
                  "startColumn": 11,
                  "endLine": 2650,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    \"snyk_key\",\n    \"snyk_api_token\",\n    \"snyk_api_key\",\n    \"snyk_oauth_token\",\n]\n\n[[rules]]\n",
                    "rendered": {
                      "text": "    \"snyk_key\",\n    \"snyk_api_token\",\n    \"snyk_api_key\",\n    \"snyk_oauth_token\",\n]\n\n[[rules]]\n",
                      "markdown": "`    \"snyk_key\",\n    \"snyk_api_token\",\n    \"snyk_api_key\",\n    \"snyk_oauth_token\",\n]\n\n[[rules]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2644,
                  "startColumn": 72,
                  "endLine": 2644,
                  "endColumn": 82,
                  "snippet": {
                    "text": "[[rules]]\nid = \"snyk-api-token\"\ndescription = \"Uncovered a Snyk API token, potentially compromising software vulnerability scanning and code security.\"\nregex = '''(?i)(?:snyk_token|snyk_key|snyk_api_token|snyk_api_key|snyk_oauth_token)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"snyk_token\",\n    \"snyk_key\",\n",
                    "rendered": {
                      "text": "[[rules]]\nid = \"snyk-api-token\"\ndescription = \"Uncovered a Snyk API token, potentially compromising software vulnerability scanning and code security.\"\nregex = '''(?i)(?:snyk_token|snyk_key|snyk_api_token|snyk_api_key|snyk_oauth_token)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"snyk_token\",\n    \"snyk_key\",\n",
                      "markdown": "`[[rules]]\nid = \"snyk-api-token\"\ndescription = \"Uncovered a Snyk API token, potentially compromising software vulnerability scanning and code security.\"\nregex = '''(?i)(?:snyk_token|snyk_key|snyk_api_token|snyk_api_key|snyk_oauth_token)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"snyk_token\",\n    \"snyk_key\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2428,
                  "startColumn": 40,
                  "endLine": 2428,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"planetscale-password\"\ndescription = \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\"\nregex = '''(?i)\\b(pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_pw_\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"planetscale-password\"\ndescription = \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\"\nregex = '''(?i)\\b(pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_pw_\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"planetscale-password\"\ndescription = \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\"\nregex = '''(?i)\\b(pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_pw_\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2427,
                  "startColumn": 18,
                  "endLine": 2427,
                  "endColumn": 26,
                  "snippet": {
                    "text": "keywords = [\"pscale_oauth_\"]\n\n[[rules]]\nid = \"planetscale-password\"\ndescription = \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\"\nregex = '''(?i)\\b(pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_pw_\"]\n",
                    "rendered": {
                      "text": "keywords = [\"pscale_oauth_\"]\n\n[[rules]]\nid = \"planetscale-password\"\ndescription = \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\"\nregex = '''(?i)\\b(pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_pw_\"]\n",
                      "markdown": "`keywords = [\"pscale_oauth_\"]\n\n[[rules]]\nid = \"planetscale-password\"\ndescription = \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\"\nregex = '''(?i)\\b(pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_pw_\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2353,
                  "startColumn": 43,
                  "endLine": 2353,
                  "endColumn": 51,
                  "snippet": {
                    "text": "[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\nentropy = 1\nkeywords = [\"<add key=\"]\n",
                    "rendered": {
                      "text": "[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\nentropy = 1\nkeywords = [\"<add key=\"]\n",
                      "markdown": "`[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\nentropy = 1\nkeywords = [\"<add key=\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2352,
                  "startColumn": 28,
                  "endLine": 2352,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\nentropy = 1\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\nentropy = 1\n",
                      "markdown": "`\n[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\nentropy = 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2351,
                  "startColumn": 19,
                  "endLine": 2351,
                  "endColumn": 27,
                  "snippet": {
                    "text": "keywords = [\"npm_\"]\n\n[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\n",
                    "rendered": {
                      "text": "keywords = [\"npm_\"]\n\n[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\n",
                      "markdown": "`keywords = [\"npm_\"]\n\n[[rules]]\nid = \"nuget-config-password\"\ndescription = \"Identified a password within a Nuget config file, potentially compromising package management access.\"\nregex = '''(?i)<add key=\\\"(?:(?:ClearText)?Password)\\\"\\s*value=\\\"(.{8,})\\\"\\s*/>'''\npath = '''(?i)nuget\\.config$'''\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2074,
                  "startColumn": 5,
                  "endLine": 2074,
                  "endColumn": 13,
                  "snippet": {
                    "text": "path = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n    \"password\",\n]\n\n[[rules]]\n",
                    "rendered": {
                      "text": "path = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n    \"password\",\n]\n\n[[rules]]\n",
                      "markdown": "`path = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n    \"password\",\n]\n\n[[rules]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2073,
                  "startColumn": 25,
                  "endLine": 2073,
                  "endColumn": 33,
                  "snippet": {
                    "text": "regex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n    \"password\",\n]\n\n",
                    "rendered": {
                      "text": "regex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n    \"password\",\n]\n\n",
                      "markdown": "`regex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n    \"password\",\n]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2070,
                  "startColumn": 47,
                  "endLine": 2070,
                  "endColumn": 55,
                  "snippet": {
                    "text": "[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n",
                    "rendered": {
                      "text": "[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n",
                      "markdown": "`[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2070,
                  "startColumn": 38,
                  "endLine": 2070,
                  "endColumn": 46,
                  "snippet": {
                    "text": "[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n",
                    "rendered": {
                      "text": "[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n",
                      "markdown": "`[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n    \"administrator_login_password\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2069,
                  "startColumn": 48,
                  "endLine": 2069,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n",
                      "markdown": "`\n[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\nkeywords = [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2068,
                  "startColumn": 19,
                  "endLine": 2068,
                  "endColumn": 27,
                  "snippet": {
                    "text": "keywords = [\"atlasv1\"]\n\n[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\n",
                    "rendered": {
                      "text": "keywords = [\"atlasv1\"]\n\n[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\n",
                      "markdown": "`keywords = [\"atlasv1\"]\n\n[[rules]]\nid = \"hashicorp-tf-password\"\ndescription = \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\"\nregex = '''(?i)(?:administrator_login_password|password)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(\"[a-z0-9=_\\-]{8,20}\")(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\npath = '''(?i)\\.(?:tf|hcl)$'''\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 1397,
                  "startColumn": 5,
                  "endLine": 1397,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    \"parsing\",\n    \"particle\",\n    \"party\",\n    \"password\",\n    \"patch\",\n    \"path\",\n    \"pattern\",\n",
                    "rendered": {
                      "text": "    \"parsing\",\n    \"particle\",\n    \"party\",\n    \"password\",\n    \"patch\",\n    \"path\",\n    \"pattern\",\n",
                      "markdown": "`    \"parsing\",\n    \"particle\",\n    \"party\",\n    \"password\",\n    \"patch\",\n    \"path\",\n    \"pattern\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 5,
                  "endLine": 479,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    \"secret\",\n    \"client\",\n    \"passwd\",\n    \"password\",\n    \"auth\",\n    \"access\",\n]\n",
                    "rendered": {
                      "text": "    \"secret\",\n    \"client\",\n    \"passwd\",\n    \"password\",\n    \"auth\",\n    \"access\",\n]\n",
                      "markdown": "`    \"secret\",\n    \"client\",\n    \"passwd\",\n    \"password\",\n    \"auth\",\n    \"access\",\n]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 53,
                  "endLine": 470,
                  "endColumn": 61,
                  "snippet": {
                    "text": "[[rules]]\nid = \"generic-api-key\"\ndescription = \"Detected a Generic API Key, potentially exposing access to various services and sensitive operations.\"\nregex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\n",
                    "rendered": {
                      "text": "[[rules]]\nid = \"generic-api-key\"\ndescription = \"Detected a Generic API Key, potentially exposing access to various services and sensitive operations.\"\nregex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\n",
                      "markdown": "`[[rules]]\nid = \"generic-api-key\"\ndescription = \"Detected a Generic API Key, potentially exposing access to various services and sensitive operations.\"\nregex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2155,
                  "startColumn": 26,
                  "endLine": 2155,
                  "endColumn": 32,
                  "snippet": {
                    "text": " JSON Web Token, which may lead to unauthorized access to web applications and sensitive user data.\"\nregex = '''\\b(ey[a-zA-Z0-9]{17,}\\.ey[a-zA-Z0-9\\/\\\\_-]{17,}\\.(?:[a-zA-Z0-9\\/\\\\_-]{10,}={0,2})?)(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"ey\"]\n\n[[rules]]\nid = \"jwt-base64\"\ndescription = \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\"\nregex = '''\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)|(?P<epk>bGNHc2lPbn)|(?P<enc>bGJtT",
                    "rendered": {
                      "text": " JSON Web Token, which may lead to unauthorized access to web applications and sensitive user data.\"\nregex = '''\\b(ey[a-zA-Z0-9]{17,}\\.ey[a-zA-Z0-9\\/\\\\_-]{17,}\\.(?:[a-zA-Z0-9\\/\\\\_-]{10,}={0,2})?)(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"ey\"]\n\n[[rules]]\nid = \"jwt-base64\"\ndescription = \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\"\nregex = '''\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)|(?P<epk>bGNHc2lPbn)|(?P<enc>bGJtT",
                      "markdown": "` JSON Web Token, which may lead to unauthorized access to web applications and sensitive user data.\"\nregex = '''\\b(ey[a-zA-Z0-9]{17,}\\.ey[a-zA-Z0-9\\/\\\\_-]{17,}\\.(?:[a-zA-Z0-9\\/\\\\_-]{10,}={0,2})?)(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"ey\"]\n\n[[rules]]\nid = \"jwt-base64\"\ndescription = \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\"\nregex = '''\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)|(?P<epk>bGNHc2lPbn)|(?P<enc>bGJtT`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2154,
                  "startColumn": 10,
                  "endLine": 2154,
                  "endColumn": 16,
                  "snippet": {
                    "text": "= \"jwt\"\ndescription = \"Uncovered a JSON Web Token, which may lead to unauthorized access to web applications and sensitive user data.\"\nregex = '''\\b(ey[a-zA-Z0-9]{17,}\\.ey[a-zA-Z0-9\\/\\\\_-]{17,}\\.(?:[a-zA-Z0-9\\/\\\\_-]{10,}={0,2})?)(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"ey\"]\n\n[[rules]]\nid = \"jwt-base64\"\ndescription = \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\"\nregex = '''\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)",
                    "rendered": {
                      "text": "= \"jwt\"\ndescription = \"Uncovered a JSON Web Token, which may lead to unauthorized access to web applications and sensitive user data.\"\nregex = '''\\b(ey[a-zA-Z0-9]{17,}\\.ey[a-zA-Z0-9\\/\\\\_-]{17,}\\.(?:[a-zA-Z0-9\\/\\\\_-]{10,}={0,2})?)(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"ey\"]\n\n[[rules]]\nid = \"jwt-base64\"\ndescription = \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\"\nregex = '''\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)",
                      "markdown": "`= \"jwt\"\ndescription = \"Uncovered a JSON Web Token, which may lead to unauthorized access to web applications and sensitive user data.\"\nregex = '''\\b(ey[a-zA-Z0-9]{17,}\\.ey[a-zA-Z0-9\\/\\\\_-]{17,}\\.(?:[a-zA-Z0-9\\/\\\\_-]{10,}={0,2})?)(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"ey\"]\n\n[[rules]]\nid = \"jwt-base64\"\ndescription = \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\"\nregex = '''\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2664,
                  "startColumn": 105,
                  "endLine": 2664,
                  "endColumn": 114,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"squarespace-access-token\"\ndescription = \"Identified a Squarespace Access Token, which may compromise website management and content control on Squarespace.\"\nregex = '''(?i)(?:squarespace)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"squarespace\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"squarespace-access-token\"\ndescription = \"Identified a Squarespace Access Token, which may compromise website management and content control on Squarespace.\"\nregex = '''(?i)(?:squarespace)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"squarespace\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"squarespace-access-token\"\ndescription = \"Identified a Squarespace Access Token, which may compromise website management and content control on Squarespace.\"\nregex = '''(?i)(?:squarespace)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"squarespace\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2422,
                  "startColumn": 80,
                  "endLine": 2422,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"planetscale-oauth-token\"\ndescription = \"Found a PlanetScale OAuth token, posing a risk to database access control and sensitive data integrity.\"\nregex = '''(?i)\\b(pscale_oauth_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_oauth_\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"planetscale-oauth-token\"\ndescription = \"Found a PlanetScale OAuth token, posing a risk to database access control and sensitive data integrity.\"\nregex = '''(?i)\\b(pscale_oauth_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_oauth_\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"planetscale-oauth-token\"\ndescription = \"Found a PlanetScale OAuth token, posing a risk to database access control and sensitive data integrity.\"\nregex = '''(?i)\\b(pscale_oauth_(?i)[a-z0-9=\\-_\\.]{32,64})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"pscale_oauth_\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 99,
                  "endLine": 130,
                  "endColumn": 108,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"authress-service-client-access-key\"\ndescription = \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\"\nregex = '''(?i)\\b((?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"sc_\",\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"authress-service-client-access-key\"\ndescription = \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\"\nregex = '''(?i)\\b((?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"sc_\",\n",
                      "markdown": "`\n[[rules]]\nid = \"authress-service-client-access-key\"\ndescription = \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\"\nregex = '''(?i)\\b((?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"sc_\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# This file has been auto-generated. Do not edit manually.\n# If you would like to contribute new rules, please use\n# cmd/generate/config/main.go and follow the contributing guidelines\n# at https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md\n\n# This is the default gitleaks configuration file.\n# Rules and allowlists are defined within this file.\n",
                    "rendered": {
                      "text": "# This file has been auto-generated. Do not edit manually.\n# If you would like to contribute new rules, please use\n# cmd/generate/config/main.go and follow the contributing guidelines\n# at https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md\n\n# This is the default gitleaks configuration file.\n# Rules and allowlists are defined within this file.\n",
                      "markdown": "`# This file has been auto-generated. Do not edit manually.\n# If you would like to contribute new rules, please use\n# cmd/generate/config/main.go and follow the contributing guidelines\n# at https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md\n\n# This is the default gitleaks configuration file.\n# Rules and allowlists are defined within this file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2784,
                  "startColumn": 67,
                  "endLine": 2784,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"yandex-access-token\"\ndescription = \"Found a Yandex Access Token, posing a risk to Yandex service integrations and user data privacy.\"\nregex = '''(?i)(?:yandex)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(t1\\.[A-Z0-9a-z_-]+[=]{0,2}\\.[A-Z0-9a-z_-]{86}[=]{0,2})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"yandex\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"yandex-access-token\"\ndescription = \"Found a Yandex Access Token, posing a risk to Yandex service integrations and user data privacy.\"\nregex = '''(?i)(?:yandex)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(t1\\.[A-Z0-9a-z_-]+[=]{0,2}\\.[A-Z0-9a-z_-]{86}[=]{0,2})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"yandex\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"yandex-access-token\"\ndescription = \"Found a Yandex Access Token, posing a risk to Yandex service integrations and user data privacy.\"\nregex = '''(?i)(?:yandex)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(t1\\.[A-Z0-9a-z_-]+[=]{0,2}\\.[A-Z0-9a-z_-]{86}[=]{0,2})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"yandex\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2769,
                  "startColumn": 33,
                  "endLine": 2769,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"vault-service-token\"\ndescription = \"Identified a Vault Service Token, potentially compromising infrastructure security and access to sensitive credentials.\"\nregex = '''\\b((?:hvs\\.[\\w-]{90,120}|s\\.(?i:[a-z0-9]{24})))(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"vault-service-token\"\ndescription = \"Identified a Vault Service Token, potentially compromising infrastructure security and access to sensitive credentials.\"\nregex = '''\\b((?:hvs\\.[\\w-]{90,120}|s\\.(?i:[a-z0-9]{24})))(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n",
                      "markdown": "`\n[[rules]]\nid = \"vault-service-token\"\ndescription = \"Identified a Vault Service Token, potentially compromising infrastructure security and access to sensitive credentials.\"\nregex = '''\\b((?:hvs\\.[\\w-]{90,120}|s\\.(?i:[a-z0-9]{24})))(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2511,
                  "startColumn": 81,
                  "endLine": 2511,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"sendgrid-api-token\"\ndescription = \"Detected a SendGrid API token, posing a risk of unauthorized email service operations and data exposure.\"\nregex = '''(?i)\\b(SG\\.(?i)[a-z0-9=_\\-\\.]{66})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"sg.\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"sendgrid-api-token\"\ndescription = \"Detected a SendGrid API token, posing a risk of unauthorized email service operations and data exposure.\"\nregex = '''(?i)\\b(SG\\.(?i)[a-z0-9=_\\-\\.]{66})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"sg.\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"sendgrid-api-token\"\ndescription = \"Detected a SendGrid API token, posing a risk of unauthorized email service operations and data exposure.\"\nregex = '''(?i)\\b(SG\\.(?i)[a-z0-9=_\\-\\.]{66})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"sg.\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2487,
                  "startColumn": 71,
                  "endLine": 2487,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"rubygems-api-token\"\ndescription = \"Identified a Rubygem API token, potentially compromising Ruby library distribution and package management.\"\nregex = '''(?i)\\b(rubygems_[a-f0-9]{48})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"rubygems_\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"rubygems-api-token\"\ndescription = \"Identified a Rubygem API token, potentially compromising Ruby library distribution and package management.\"\nregex = '''(?i)\\b(rubygems_[a-f0-9]{48})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"rubygems_\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"rubygems-api-token\"\ndescription = \"Identified a Rubygem API token, potentially compromising Ruby library distribution and package management.\"\nregex = '''(?i)\\b(rubygems_[a-f0-9]{48})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"rubygems_\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2402,
                  "startColumn": 86,
                  "endLine": 2402,
                  "endColumn": 95,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"plaid-client-id\"\ndescription = \"Uncovered a Plaid Client ID, which could lead to unauthorized financial service integrations and data breaches.\"\nregex = '''(?i)(?:plaid)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([a-z0-9]{24})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\"plaid\"]\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"plaid-client-id\"\ndescription = \"Uncovered a Plaid Client ID, which could lead to unauthorized financial service integrations and data breaches.\"\nregex = '''(?i)(?:plaid)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([a-z0-9]{24})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\"plaid\"]\n",
                      "markdown": "`\n[[rules]]\nid = \"plaid-client-id\"\ndescription = \"Uncovered a Plaid Client ID, which could lead to unauthorized financial service integrations and data breaches.\"\nregex = '''(?i)(?:plaid)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([a-z0-9]{24})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\"plaid\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2252,
                  "startColumn": 76,
                  "endLine": 2252,
                  "endColumn": 85,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"mailgun-private-api-token\"\ndescription = \"Found a Mailgun private API token, risking unauthorized email service operations and data breaches.\"\nregex = '''(?i)(?:mailgun)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(key-[a-f0-9]{32})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"mailgun\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"mailgun-private-api-token\"\ndescription = \"Found a Mailgun private API token, risking unauthorized email service operations and data breaches.\"\nregex = '''(?i)(?:mailgun)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(key-[a-f0-9]{32})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"mailgun\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"mailgun-private-api-token\"\ndescription = \"Found a Mailgun private API token, risking unauthorized email service operations and data breaches.\"\nregex = '''(?i)(?:mailgun)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}(key-[a-f0-9]{32})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"mailgun\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2236,
                  "startColumn": 91,
                  "endLine": 2236,
                  "endColumn": 100,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"lob-pub-api-key\"\ndescription = \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\"\nregex = '''(?i)(?:lob)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"test_pub\",\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"lob-pub-api-key\"\ndescription = \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\"\nregex = '''(?i)(?:lob)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"test_pub\",\n",
                      "markdown": "`\n[[rules]]\nid = \"lob-pub-api-key\"\ndescription = \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\"\nregex = '''(?i)(?:lob)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"test_pub\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2236,
                  "startColumn": 76,
                  "endLine": 2236,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"lob-pub-api-key\"\ndescription = \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\"\nregex = '''(?i)(?:lob)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"test_pub\",\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"lob-pub-api-key\"\ndescription = \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\"\nregex = '''(?i)(?:lob)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"test_pub\",\n",
                      "markdown": "`\n[[rules]]\nid = \"lob-pub-api-key\"\ndescription = \"Detected a Lob Publishable API Key, posing a risk of exposing mail and print service integrations.\"\nregex = '''(?i)(?:lob)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}((test|live)_pub_[a-f0-9]{31})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"test_pub\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 2047,
                  "startColumn": 35,
                  "endLine": 2047,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"grafana-service-account-token\"\ndescription = \"Discovered a Grafana service account token, posing a risk of compromised monitoring services and data integrity.\"\nregex = '''(?i)\\b(glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"glsa_\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"grafana-service-account-token\"\ndescription = \"Discovered a Grafana service account token, posing a risk of compromised monitoring services and data integrity.\"\nregex = '''(?i)\\b(glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"glsa_\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"grafana-service-account-token\"\ndescription = \"Discovered a Grafana service account token, posing a risk of compromised monitoring services and data integrity.\"\nregex = '''(?i)\\b(glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"glsa_\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 403,
                  "startColumn": 93,
                  "endLine": 403,
                  "endColumn": 102,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"finicity-client-secret\"\ndescription = \"Identified a Finicity Client Secret, which could lead to compromised financial service integrations and data breaches.\"\nregex = '''(?i)(?:finicity)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([a-z0-9]{20})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"finicity\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"finicity-client-secret\"\ndescription = \"Identified a Finicity Client Secret, which could lead to compromised financial service integrations and data breaches.\"\nregex = '''(?i)(?:finicity)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([a-z0-9]{20})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"finicity\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"finicity-client-secret\"\ndescription = \"Identified a Finicity Client Secret, which could lead to compromised financial service integrations and data breaches.\"\nregex = '''(?i)(?:finicity)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([a-z0-9]{20})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"finicity\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 101,
                  "endLine": 352,
                  "endColumn": 110,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"easypost-api-token\"\ndescription = \"Identified an EasyPost API token, which could lead to unauthorized postal and shipment service access and data exposure.\"\nregex = '''\\bEZAK(?i)[a-z0-9]{54}'''\nkeywords = [\"ezak\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"easypost-api-token\"\ndescription = \"Identified an EasyPost API token, which could lead to unauthorized postal and shipment service access and data exposure.\"\nregex = '''\\bEZAK(?i)[a-z0-9]{54}'''\nkeywords = [\"ezak\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"easypost-api-token\"\ndescription = \"Identified an EasyPost API token, which could lead to unauthorized postal and shipment service access and data exposure.\"\nregex = '''\\bEZAK(?i)[a-z0-9]{54}'''\nkeywords = [\"ezak\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 44,
                  "endLine": 130,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"authress-service-client-access-key\"\ndescription = \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\"\nregex = '''(?i)\\b((?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"sc_\",\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"authress-service-client-access-key\"\ndescription = \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\"\nregex = '''(?i)\\b((?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"sc_\",\n",
                      "markdown": "`\n[[rules]]\nid = \"authress-service-client-access-key\"\ndescription = \"Uncovered a possible Authress Service Client Access Key, which may compromise access control services and sensitive data.\"\nregex = '''(?i)\\b((?:sc|ext|scauth|authress)_[a-z0-9]{5,30}\\.[a-z0-9]{4,6}\\.acc[_-][a-z0-9-]{10,32}\\.[a-z0-9+/_=-]{30,120})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\n    \"sc_\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/gitleaks.toml"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 108,
                  "endLine": 72,
                  "endColumn": 117,
                  "snippet": {
                    "text": "\n[[rules]]\nid = \"adobe-client-secret\"\ndescription = \"Discovered a potential Adobe Client Secret, which, if exposed, could allow unauthorized Adobe service access and data manipulation.\"\nregex = '''(?i)\\b((p8e-)(?i)[a-z0-9]{32})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"p8e-\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\nid = \"adobe-client-secret\"\ndescription = \"Discovered a potential Adobe Client Secret, which, if exposed, could allow unauthorized Adobe service access and data manipulation.\"\nregex = '''(?i)\\b((p8e-)(?i)[a-z0-9]{32})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"p8e-\"]\n\n",
                      "markdown": "`\n[[rules]]\nid = \"adobe-client-secret\"\ndescription = \"Discovered a potential Adobe Client Secret, which, if exposed, could allow unauthorized Adobe service access and data manipulation.\"\nregex = '''(?i)\\b((p8e-)(?i)[a-z0-9]{32})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nkeywords = [\"p8e-\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/expected/report/sarif_simple.sarif"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 61,
                  "endLine": 234,
                  "endColumn": 65,
                  "snippet": {
                    "text": "   \"results\": [\n    {\n     \"message\": {\n      \"text\": \"test-rule has detected secret for file auth.py at commit 0000000000000000.\"\n     },\n     \"ruleId\": \"test-rule\",\n     \"locations\": [\n",
                    "rendered": {
                      "text": "   \"results\": [\n    {\n     \"message\": {\n      \"text\": \"test-rule has detected secret for file auth.py at commit 0000000000000000.\"\n     },\n     \"ruleId\": \"test-rule\",\n     \"locations\": [\n",
                      "markdown": "`   \"results\": [\n    {\n     \"message\": {\n      \"text\": \"test-rule has detected secret for file auth.py at commit 0000000000000000.\"\n     },\n     \"ruleId\": \"test-rule\",\n     \"locations\": [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/expected/report/sarif_simple.sarif"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 29,
                  "endLine": 111,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      {\n       \"id\": \"google\",\n       \"shortDescription\": {\n        \"text\": \"Google (GCP) Service Account\"\n       }\n      },\n      {\n",
                    "rendered": {
                      "text": "      {\n       \"id\": \"google\",\n       \"shortDescription\": {\n        \"text\": \"Google (GCP) Service Account\"\n       }\n      },\n      {\n",
                      "markdown": "`      {\n       \"id\": \"google\",\n       \"shortDescription\": {\n        \"text\": \"Google (GCP) Service Account\"\n       }\n      },\n      {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/expected/report/sarif_simple.sarif"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 29,
                  "endLine": 105,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      {\n       \"id\": \"google\",\n       \"shortDescription\": {\n        \"text\": \"Google (GCP) Service Account\"\n       }\n      },\n      {\n",
                    "rendered": {
                      "text": "      {\n       \"id\": \"google\",\n       \"shortDescription\": {\n        \"text\": \"Google (GCP) Service Account\"\n       }\n      },\n      {\n",
                      "markdown": "`      {\n       \"id\": \"google\",\n       \"shortDescription\": {\n        \"text\": \"Google (GCP) Service Account\"\n       }\n      },\n      {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/refs/remotes/origin/foo"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 132,
                  "endLine": 1,
                  "endColumn": 140,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896935 -0500\tupdate by push\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896935 -0500\tupdate by push\n",
                      "markdown": "`0000000000000000000000000000000000000000 f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896935 -0500\tupdate by push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/refs/heads/api-pkg"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 153,
                  "endLine": 2,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tbranch: Created from HEAD\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tbranch: Created from HEAD\n",
                      "markdown": "`0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tbranch: Created from HEAD\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/refs/heads/foo"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 153,
                  "endLine": 2,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 2e1db472eeba53f06c4026ae4566ea022e36598e Zach Rice <zricer@protonmail.com> 1635896716 -0500\tbranch: Created from HEAD\n2e1db472eeba53f06c4026ae4566ea022e36598e 491504d5a31946ce75e22554cc34203d8e5ff3ca Zach Rice <zricer@protonmail.com> 1635896886 -0500\tcommit: adding foo package with secret\n491504d5a31946ce75e22554cc34203d8e5ff3ca f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896931 -0500\tcommit: removing secret from foo package\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 2e1db472eeba53f06c4026ae4566ea022e36598e Zach Rice <zricer@protonmail.com> 1635896716 -0500\tbranch: Created from HEAD\n2e1db472eeba53f06c4026ae4566ea022e36598e 491504d5a31946ce75e22554cc34203d8e5ff3ca Zach Rice <zricer@protonmail.com> 1635896886 -0500\tcommit: adding foo package with secret\n491504d5a31946ce75e22554cc34203d8e5ff3ca f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896931 -0500\tcommit: removing secret from foo package\n",
                      "markdown": "`0000000000000000000000000000000000000000 2e1db472eeba53f06c4026ae4566ea022e36598e Zach Rice <zricer@protonmail.com> 1635896716 -0500\tbranch: Created from HEAD\n2e1db472eeba53f06c4026ae4566ea022e36598e 491504d5a31946ce75e22554cc34203d8e5ff3ca Zach Rice <zricer@protonmail.com> 1635896886 -0500\tcommit: adding foo package with secret\n491504d5a31946ce75e22554cc34203d8e5ff3ca f1b58b97808f8e744f6a23c693859df5b5968901 Zach Rice <zricer@protonmail.com> 1635896931 -0500\tcommit: removing secret from foo package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/scripts/pre-commit.py"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 3,
                  "endLine": 22,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        print('''Warning: gitleaks has detected sensitive information in your changes.\nTo disable the gitleaks precommit hook run the following command:\n\n    git config hooks.gitleaks false\n''')\n        sys.exit(1)\nelse:\n",
                    "rendered": {
                      "text": "        print('''Warning: gitleaks has detected sensitive information in your changes.\nTo disable the gitleaks precommit hook run the following command:\n\n    git config hooks.gitleaks false\n''')\n        sys.exit(1)\nelse:\n",
                      "markdown": "`        print('''Warning: gitleaks has detected sensitive information in your changes.\nTo disable the gitleaks precommit hook run the following command:\n\n    git config hooks.gitleaks false\n''')\n        sys.exit(1)\nelse:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/scripts/pre-commit.py"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 9,
                  "endLine": 2,
                  "endColumn": 17,
                  "snippet": {
                    "text": "#!/usr/bin/env python3\n\"\"\"Helper script to be used as a pre-commit hook.\"\"\"\nimport os\nimport sys\nimport subprocess\n",
                    "rendered": {
                      "text": "#!/usr/bin/env python3\n\"\"\"Helper script to be used as a pre-commit hook.\"\"\"\nimport os\nimport sys\nimport subprocess\n",
                      "markdown": "`#!/usr/bin/env python3\n\"\"\"Helper script to be used as a pre-commit hook.\"\"\"\nimport os\nimport sys\nimport subprocess\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/privatekey.go"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 5,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc PrivateKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Private Key, which may compromise cryptographic security and sensitive data encryption.\",\n",
                    "rendered": {
                      "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc PrivateKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Private Key, which may compromise cryptographic security and sensitive data encryption.\",\n",
                      "markdown": "`\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc PrivateKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Private Key, which may compromise cryptographic security and sensitive data encryption.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/age.go"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 8,
                  "endLine": 10,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc AgeSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Age encryption tool secret key, risking data decryption and unauthorized access to sensitive information.\",\n",
                    "rendered": {
                      "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc AgeSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Age encryption tool secret key, risking data decryption and unauthorized access to sensitive information.\",\n",
                      "markdown": "`\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc AgeSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Age encryption tool secret key, risking data decryption and unauthorized access to sensitive information.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/stdin.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"os\"\n\t\"time\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"os\"\n\t\"time\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"os\"\n\t\"time\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/protect.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"time\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"time\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"time\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/directory.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"time\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"time\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"time\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 2,
                  "endLine": 106,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tviper.SetConfigFile(cfgPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config %s from `--config`\", cfgPath)\n\t} else if os.Getenv(\"GITLEAKS_CONFIG\") != \"\" {\n\t\tenvPath := os.Getenv(\"GITLEAKS_CONFIG\")\n\t\tviper.SetConfigFile(envPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config from GITLEAKS_CONFIG env var: %s\", envPath)\n\t} else {\n",
                    "rendered": {
                      "text": "\t\tviper.SetConfigFile(cfgPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config %s from `--config`\", cfgPath)\n\t} else if os.Getenv(\"GITLEAKS_CONFIG\") != \"\" {\n\t\tenvPath := os.Getenv(\"GITLEAKS_CONFIG\")\n\t\tviper.SetConfigFile(envPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config from GITLEAKS_CONFIG env var: %s\", envPath)\n\t} else {\n",
                      "markdown": "`\t\tviper.SetConfigFile(cfgPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config %s from `--config`\", cfgPath)\n\t} else if os.Getenv(\"GITLEAKS_CONFIG\") != \"\" {\n\t\tenvPath := os.Getenv(\"GITLEAKS_CONFIG\")\n\t\tviper.SetConfigFile(envPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config from GITLEAKS_CONFIG env var: %s\", envPath)\n\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 53,
                  "endLine": 266,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\treturn detector\n}\n\nfunc findingSummaryAndExit(findings []report.Finding, cmd *cobra.Command, cfg config.Config, exitCode int, start time.Time, err error) {\n\tif err == nil {\n\t\tlog.Info().Msgf(\"scan completed in %s\", FormatDuration(time.Since(start)))\n\t\tif len(findings) != 0 {\n",
                    "rendered": {
                      "text": "\treturn detector\n}\n\nfunc findingSummaryAndExit(findings []report.Finding, cmd *cobra.Command, cfg config.Config, exitCode int, start time.Time, err error) {\n\tif err == nil {\n\t\tlog.Info().Msgf(\"scan completed in %s\", FormatDuration(time.Since(start)))\n\t\tif len(findings) != 0 {\n",
                      "markdown": "`\treturn detector\n}\n\nfunc findingSummaryAndExit(findings []report.Finding, cmd *cobra.Command, cfg config.Config, exitCode int, start time.Time, err error) {\n\tif err == nil {\n\t\tlog.Info().Msgf(\"scan completed in %s\", FormatDuration(time.Since(start)))\n\t\tif len(findings) != 0 {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"os\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"os\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\t\"os\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 62,
                  "endLine": 108,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t} else if os.Getenv(\"GITLEAKS_CONFIG\") != \"\" {\n\t\tenvPath := os.Getenv(\"GITLEAKS_CONFIG\")\n\t\tviper.SetConfigFile(envPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config from GITLEAKS_CONFIG env var: %s\", envPath)\n\t} else {\n\t\tfileInfo, err := os.Stat(source)\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t} else if os.Getenv(\"GITLEAKS_CONFIG\") != \"\" {\n\t\tenvPath := os.Getenv(\"GITLEAKS_CONFIG\")\n\t\tviper.SetConfigFile(envPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config from GITLEAKS_CONFIG env var: %s\", envPath)\n\t} else {\n\t\tfileInfo, err := os.Stat(source)\n\t\tif err != nil {\n",
                      "markdown": "`\t} else if os.Getenv(\"GITLEAKS_CONFIG\") != \"\" {\n\t\tenvPath := os.Getenv(\"GITLEAKS_CONFIG\")\n\t\tviper.SetConfigFile(envPath)\n\t\tlog.Debug().Msgf(\"using gitleaks config from GITLEAKS_CONFIG env var: %s\", envPath)\n\t} else {\n\t\tfileInfo, err := os.Stat(source)\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 2,
                  "endLine": 32,
                  "endColumn": 7,
                  "snippet": {
                    "text": "const configDescription = `config file path\norder of precedence:\n1. --config/-c\n2. env var GITLEAKS_CONFIG\n3. (target path)/.gitleaks.toml\nIf none of the three options are used, then gitleaks will use the default config`\n\n",
                    "rendered": {
                      "text": "const configDescription = `config file path\norder of precedence:\n1. --config/-c\n2. env var GITLEAKS_CONFIG\n3. (target path)/.gitleaks.toml\nIf none of the three options are used, then gitleaks will use the default config`\n\n",
                      "markdown": "`const configDescription = `config file path\norder of precedence:\n1. --config/-c\n2. env var GITLEAKS_CONFIG\n3. (target path)/.gitleaks.toml\nIf none of the three options are used, then gitleaks will use the default config`\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 7,
                  "endLine": 20,
                  "snippet": {
                    "text": "// OLD CMD: gitleaks detect --no-git --pipe\n// NEW CMD: gitleaks stdin\n\npackage cmd\n\nimport (\n\t\"os\"\n\t\"time\"\n",
                    "rendered": {
                      "text": "// OLD CMD: gitleaks detect --no-git --pipe\n// NEW CMD: gitleaks stdin\n\npackage cmd\n\nimport (\n\t\"os\"\n\t\"time\"\n",
                      "markdown": "`// OLD CMD: gitleaks detect --no-git --pipe\n// NEW CMD: gitleaks stdin\n\npackage cmd\n\nimport (\n\t\"os\"\n\t\"time\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 43,
                  "endLine": 119,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\tfindings, err = detector.DetectGit(gitCmd)\n\t\tif err != nil {\n\t\t\t// don't exit on error, just log it\n\t\t\tlog.Error().Err(err).Msg(\"failed to scan Git repository\")\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tfindings, err = detector.DetectGit(gitCmd)\n\t\tif err != nil {\n\t\t\t// don't exit on error, just log it\n\t\t\tlog.Error().Err(err).Msg(\"failed to scan Git repository\")\n\t\t}\n\t}\n\n",
                      "markdown": "`\t\tfindings, err = detector.DetectGit(gitCmd)\n\t\tif err != nil {\n\t\t\t// don't exit on error, just log it\n\t\t\tlog.Error().Err(err).Msg(\"failed to scan Git repository\")\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 45,
                  "endLine": 114,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t}\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git cmd\")\n\t\t}\n\t\tfindings, err = detector.DetectGit(gitCmd)\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git cmd\")\n\t\t}\n\t\tfindings, err = detector.DetectGit(gitCmd)\n\t\tif err != nil {\n",
                      "markdown": "`\t\t}\n\t\tgitCmd, err = sources.NewGitLogCmd(source, logOpts)\n\t\tif err != nil {\n\t\t\tlog.Fatal().Err(err).Msg(\"could not create Git cmd\")\n\t\t}\n\t\tfindings, err = detector.DetectGit(gitCmd)\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 47,
                  "endLine": 34,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nfunc init() {\n\trootCmd.AddCommand(detectCmd)\n\tdetectCmd.Flags().Bool(\"no-git\", false, \"treat git repo as a regular directory and scan those files, --log-opts has no effect on the scan when --no-git is set\")\n\tdetectCmd.Flags().Bool(\"pipe\", false, \"scan input from stdin, ex: `cat some_file | gitleaks detect --pipe`\")\n\tdetectCmd.Flags().Bool(\"follow-symlinks\", false, \"scan files that are symlinks to other files\")\n\tdetectCmd.Flags().StringP(\"source\", \"s\", \".\", \"path to source\")\n",
                    "rendered": {
                      "text": "\nfunc init() {\n\trootCmd.AddCommand(detectCmd)\n\tdetectCmd.Flags().Bool(\"no-git\", false, \"treat git repo as a regular directory and scan those files, --log-opts has no effect on the scan when --no-git is set\")\n\tdetectCmd.Flags().Bool(\"pipe\", false, \"scan input from stdin, ex: `cat some_file | gitleaks detect --pipe`\")\n\tdetectCmd.Flags().Bool(\"follow-symlinks\", false, \"scan files that are symlinks to other files\")\n\tdetectCmd.Flags().StringP(\"source\", \"s\", \".\", \"path to source\")\n",
                      "markdown": "`\nfunc init() {\n\trootCmd.AddCommand(detectCmd)\n\tdetectCmd.Flags().Bool(\"no-git\", false, \"treat git repo as a regular directory and scan those files, --log-opts has no effect on the scan when --no-git is set\")\n\tdetectCmd.Flags().Bool(\"pipe\", false, \"scan input from stdin, ex: `cat some_file | gitleaks detect --pipe`\")\n\tdetectCmd.Flags().Bool(\"follow-symlinks\", false, \"scan files that are symlinks to other files\")\n\tdetectCmd.Flags().StringP(\"source\", \"s\", \".\", \"path to source\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 20,
                  "endLine": 11,
                  "endColumn": 25,
                  "snippet": {
                    "text": "// NEW CMD: gitleaks git --pre-commit {repo}\n\n// OLD  CMD: gitleaks protect --staged --source={repo}\n// NEW CMD: gitleaks git --pre-commit --staged {repo}\n\n// OLD CMD: gitleaks detect --no-git --source={repo}\n// NEW CMD: gitleaks directory {directory/file}\n",
                    "rendered": {
                      "text": "// NEW CMD: gitleaks git --pre-commit {repo}\n\n// OLD  CMD: gitleaks protect --staged --source={repo}\n// NEW CMD: gitleaks git --pre-commit --staged {repo}\n\n// OLD CMD: gitleaks detect --no-git --source={repo}\n// NEW CMD: gitleaks directory {directory/file}\n",
                      "markdown": "`// NEW CMD: gitleaks git --pre-commit {repo}\n\n// OLD  CMD: gitleaks protect --staged --source={repo}\n// NEW CMD: gitleaks git --pre-commit --staged {repo}\n\n// OLD CMD: gitleaks detect --no-git --source={repo}\n// NEW CMD: gitleaks directory {directory/file}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 20,
                  "endLine": 8,
                  "endColumn": 25,
                  "snippet": {
                    "text": "// NEW CMD: gitleaks git {repo}\n\n// OLD CMD: gitleaks protect --source={repo}\n// NEW CMD: gitleaks git --pre-commit {repo}\n\n// OLD  CMD: gitleaks protect --staged --source={repo}\n// NEW CMD: gitleaks git --pre-commit --staged {repo}\n",
                    "rendered": {
                      "text": "// NEW CMD: gitleaks git {repo}\n\n// OLD CMD: gitleaks protect --source={repo}\n// NEW CMD: gitleaks git --pre-commit {repo}\n\n// OLD  CMD: gitleaks protect --staged --source={repo}\n// NEW CMD: gitleaks git --pre-commit --staged {repo}\n",
                      "markdown": "`// NEW CMD: gitleaks git {repo}\n\n// OLD CMD: gitleaks protect --source={repo}\n// NEW CMD: gitleaks git --pre-commit {repo}\n\n// OLD  CMD: gitleaks protect --staged --source={repo}\n// NEW CMD: gitleaks git --pre-commit --staged {repo}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/detect.go"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 20,
                  "endLine": 5,
                  "endColumn": 25,
                  "snippet": {
                    "text": "// to help guide you.\n\n// OLD CMD: gitleaks detect --source={repo}\n// NEW CMD: gitleaks git {repo}\n\n// OLD CMD: gitleaks protect --source={repo}\n// NEW CMD: gitleaks git --pre-commit {repo}\n",
                    "rendered": {
                      "text": "// to help guide you.\n\n// OLD CMD: gitleaks detect --source={repo}\n// NEW CMD: gitleaks git {repo}\n\n// OLD CMD: gitleaks protect --source={repo}\n// NEW CMD: gitleaks git --pre-commit {repo}\n",
                      "markdown": "`// to help guide you.\n\n// OLD CMD: gitleaks detect --source={repo}\n// NEW CMD: gitleaks git {repo}\n\n// OLD CMD: gitleaks protect --source={repo}\n// NEW CMD: gitleaks git --pre-commit {repo}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 22,
                  "endLine": 78,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\texpected: `b64urlsafe-test-secret-underscores??`,\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid base64 string\",\n\t\t\tchunk:    `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t\texpected: `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\texpected: `b64urlsafe-test-secret-underscores??`,\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid base64 string\",\n\t\t\tchunk:    `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t\texpected: `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t},\n",
                      "markdown": "`\t\t\texpected: `b64urlsafe-test-secret-underscores??`,\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid base64 string\",\n\t\t\tchunk:    `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t\texpected: `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 61,
                  "endLine": 44,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 58,
                  "endLine": 42,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t},\n\t\t{\n\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t{\n\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n",
                      "markdown": "`\t\t},\n\t\t{\n\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 21,
                  "endLine": 78,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\texpected: `b64urlsafe-test-secret-underscores??`,\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid base64 string\",\n\t\t\tchunk:    `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t\texpected: `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\texpected: `b64urlsafe-test-secret-underscores??`,\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid base64 string\",\n\t\t\tchunk:    `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t\texpected: `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t},\n",
                      "markdown": "`\t\t\texpected: `b64urlsafe-test-secret-underscores??`,\n\t\t},\n\t\t{\n\t\t\tname:     \"invalid base64 string\",\n\t\t\tchunk:    `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t\texpected: `a3d3fa7c2bb99e469ba55e5834ce79ee4853a8a3`,\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 27,
                  "endLine": 58,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\texpected: `token: longer-encoded-secret-test`,\n\t\t},\n\t\t{\n\t\t\tname:     \"b64-url-safe: env var (looks like all b64 decodable but has `=` in the middle)\",\n\t\t\tchunk:    `some-encoded-secret=dGVzdC1zZWNyZXQtdmFsdWU=`,\n\t\t\texpected: `some-encoded-secret=test-secret-value`,\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\texpected: `token: longer-encoded-secret-test`,\n\t\t},\n\t\t{\n\t\t\tname:     \"b64-url-safe: env var (looks like all b64 decodable but has `=` in the middle)\",\n\t\t\tchunk:    `some-encoded-secret=dGVzdC1zZWNyZXQtdmFsdWU=`,\n\t\t\texpected: `some-encoded-secret=test-secret-value`,\n\t\t},\n",
                      "markdown": "`\t\t\texpected: `token: longer-encoded-secret-test`,\n\t\t},\n\t\t{\n\t\t\tname:     \"b64-url-safe: env var (looks like all b64 decodable but has `=` in the middle)\",\n\t\t\tchunk:    `some-encoded-secret=dGVzdC1zZWNyZXQtdmFsdWU=`,\n\t\t\texpected: `some-encoded-secret=test-secret-value`,\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 60,
                  "endLine": 44,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder_test.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 57,
                  "endLine": 42,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\t},\n\t\t{\n\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t{\n\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n",
                      "markdown": "`\t\t},\n\t\t{\n\t\t\tname: \"many possible i := 0substrings\",\n\t\t\tchunk: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only dGhpcyBlbmNhcHN1bGF0ZWQgc2VjcmV0 should be decoded.`,\n\t\t\texpected: `Many substrings in this slack message could be base64 decoded\n\t\t\t\tbut only this encapsulated secret should be decoded.`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder.go"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 19,
                  "endLine": 214,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\tdecodedStart:  matchIndex[0] + decodedShift,\n\t\t\tdecodedEnd:    matchIndex[0] + decodedShift + len(decodedValue),\n\t\t\tdecodedValue:  decodedValue,\n\t\t\tencoding:      \"base64\",\n\t\t}\n\n\t\t// Shift decoded start and ends based on size changes\n",
                    "rendered": {
                      "text": "\t\t\tdecodedStart:  matchIndex[0] + decodedShift,\n\t\t\tdecodedEnd:    matchIndex[0] + decodedShift + len(decodedValue),\n\t\t\tdecodedValue:  decodedValue,\n\t\t\tencoding:      \"base64\",\n\t\t}\n\n\t\t// Shift decoded start and ends based on size changes\n",
                      "markdown": "`\t\t\tdecodedStart:  matchIndex[0] + decodedShift,\n\t\t\tdecodedEnd:    matchIndex[0] + decodedShift + len(decodedValue),\n\t\t\tdecodedValue:  decodedValue,\n\t\t\tencoding:      \"base64\",\n\t\t}\n\n\t\t// Shift decoded start and ends based on size changes\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "var b64Regexp = regexp.MustCompile(`[\\w/+-]{16,}={0,3}`)\nvar decoders = []func(string) ([]byte, error){\n\tbase64.StdEncoding.DecodeString,\n\tbase64.RawURLEncoding.DecodeString,\n}\n\nfunc init() {\n",
                    "rendered": {
                      "text": "var b64Regexp = regexp.MustCompile(`[\\w/+-]{16,}={0,3}`)\nvar decoders = []func(string) ([]byte, error){\n\tbase64.StdEncoding.DecodeString,\n\tbase64.RawURLEncoding.DecodeString,\n}\n\nfunc init() {\n",
                      "markdown": "`var b64Regexp = regexp.MustCompile(`[\\w/+-]{16,}={0,3}`)\nvar decoders = []func(string) ([]byte, error){\n\tbase64.StdEncoding.DecodeString,\n\tbase64.RawURLEncoding.DecodeString,\n}\n\nfunc init() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "var b64LikelyChars [128]byte\nvar b64Regexp = regexp.MustCompile(`[\\w/+-]{16,}={0,3}`)\nvar decoders = []func(string) ([]byte, error){\n\tbase64.StdEncoding.DecodeString,\n\tbase64.RawURLEncoding.DecodeString,\n}\n\n",
                    "rendered": {
                      "text": "var b64LikelyChars [128]byte\nvar b64Regexp = regexp.MustCompile(`[\\w/+-]{16,}={0,3}`)\nvar decoders = []func(string) ([]byte, error){\n\tbase64.StdEncoding.DecodeString,\n\tbase64.RawURLEncoding.DecodeString,\n}\n\n",
                      "markdown": "`var b64LikelyChars [128]byte\nvar b64Regexp = regexp.MustCompile(`[\\w/+-]{16,}={0,3}`)\nvar decoders = []func(string) ([]byte, error){\n\tbase64.StdEncoding.DecodeString,\n\tbase64.RawURLEncoding.DecodeString,\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder.go"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 11,
                  "endLine": 5,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"regexp\"\n\t\"unicode\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"regexp\"\n\t\"unicode\"\n",
                      "markdown": "`\nimport (\n\t\"bytes\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"regexp\"\n\t\"unicode\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 19,
                  "endLine": 106,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tadjustedMatchIndex[1] = s.relativeEnd\n\t}\n\n\t// We're still not at a root segment so we'll need to keep on adjusting\n\tif s.parent != nil {\n\t\treturn s.parent.adjustMatchIndex(adjustedMatchIndex)\n\t}\n",
                    "rendered": {
                      "text": "\t\tadjustedMatchIndex[1] = s.relativeEnd\n\t}\n\n\t// We're still not at a root segment so we'll need to keep on adjusting\n\tif s.parent != nil {\n\t\treturn s.parent.adjustMatchIndex(adjustedMatchIndex)\n\t}\n",
                      "markdown": "`\t\tadjustedMatchIndex[1] = s.relativeEnd\n\t}\n\n\t// We're still not at a root segment so we'll need to keep on adjusting\n\tif s.parent != nil {\n\t\treturn s.parent.adjustMatchIndex(adjustedMatchIndex)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/detect/decoder.go"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 40,
                  "endLine": 81,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t}\n\n\t// Since it overlaps one side and/or the other, we're going to have to adjust\n\t// and climb parents until we're either at the root or we've determined\n\t// we're fully inside one of the parent segments.\n\tadjustedMatchIndex := make([]int, 2)\n\n",
                    "rendered": {
                      "text": "\t}\n\n\t// Since it overlaps one side and/or the other, we're going to have to adjust\n\t// and climb parents until we're either at the root or we've determined\n\t// we're fully inside one of the parent segments.\n\tadjustedMatchIndex := make([]int, 2)\n\n",
                      "markdown": "`\t}\n\n\t// Since it overlaps one side and/or the other, we're going to have to adjust\n\t// and climb parents until we're either at the root or we've determined\n\t// we're fully inside one of the parent segments.\n\tadjustedMatchIndex := make([]int, 2)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/nogit/.env.prod"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 11,
                  "snippet": {
                    "text": "DB_HOST=example.com\nDB_PORT=443\nDB_USERNAME=postgres\nDB_PASSWORD=8ae31cacf141669ddfb5da\nDB_NAME=best_db\nDB_SSL=true",
                    "rendered": {
                      "text": "DB_HOST=example.com\nDB_PORT=443\nDB_USERNAME=postgres\nDB_PASSWORD=8ae31cacf141669ddfb5da\nDB_NAME=best_db\nDB_SSL=true",
                      "markdown": "`DB_HOST=example.com\nDB_PORT=443\nDB_USERNAME=postgres\nDB_PASSWORD=8ae31cacf141669ddfb5da\nDB_NAME=best_db\nDB_SSL=true`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/refs/heads/remove-secrets"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 155,
                  "endLine": 2,
                  "endColumn": 160,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                      "markdown": "`0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/refs/heads/remove-secrets"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 153,
                  "endLine": 2,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                      "markdown": "`0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/HEAD"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 155,
                  "endLine": 3,
                  "endColumn": 160,
                  "snippet": {
                    "text": "bbfc587 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tcheckout: moving from main to remove-secrets\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\na122b33c6bad3ee54724f52f2caad385ab1982ab a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tchecko",
                    "rendered": {
                      "text": "bbfc587 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tcheckout: moving from main to remove-secrets\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\na122b33c6bad3ee54724f52f2caad385ab1982ab a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tchecko",
                      "markdown": "`bbfc587 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tcheckout: moving from main to remove-secrets\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\na122b33c6bad3ee54724f52f2caad385ab1982ab a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tchecko`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/config_test.go"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 54,
                  "endLine": 322,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t\treturn x.String() == y.String()\n\t\t\t}\n\t\t\topts := cmp.Options{cmp.Comparer(regexComparer)}\n\t\t\tif diff := cmp.Diff(tt.cfg.Rules, cfg.Rules, opts); diff != \"\" {\n\t\t\t\tt.Errorf(\"%s diff: (-want +got)\\n%s\", tt.cfgName, diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\treturn x.String() == y.String()\n\t\t\t}\n\t\t\topts := cmp.Options{cmp.Comparer(regexComparer)}\n\t\t\tif diff := cmp.Diff(tt.cfg.Rules, cfg.Rules, opts); diff != \"\" {\n\t\t\t\tt.Errorf(\"%s diff: (-want +got)\\n%s\", tt.cfgName, diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\treturn x.String() == y.String()\n\t\t\t}\n\t\t\topts := cmp.Options{cmp.Comparer(regexComparer)}\n\t\t\tif diff := cmp.Diff(tt.cfg.Rules, cfg.Rules, opts); diff != \"\" {\n\t\t\t\tt.Errorf(\"%s diff: (-want +got)\\n%s\", tt.cfgName, diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/config/config_test.go"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 5,
                  "endLine": 322,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\treturn x.String() == y.String()\n\t\t\t}\n\t\t\topts := cmp.Options{cmp.Comparer(regexComparer)}\n\t\t\tif diff := cmp.Diff(tt.cfg.Rules, cfg.Rules, opts); diff != \"\" {\n\t\t\t\tt.Errorf(\"%s diff: (-want +got)\\n%s\", tt.cfgName, diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\treturn x.String() == y.String()\n\t\t\t}\n\t\t\topts := cmp.Options{cmp.Comparer(regexComparer)}\n\t\t\tif diff := cmp.Diff(tt.cfg.Rules, cfg.Rules, opts); diff != \"\" {\n\t\t\t\tt.Errorf(\"%s diff: (-want +got)\\n%s\", tt.cfgName, diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\treturn x.String() == y.String()\n\t\t\t}\n\t\t\topts := cmp.Options{cmp.Comparer(regexComparer)}\n\t\t\tif diff := cmp.Diff(tt.cfg.Rules, cfg.Rules, opts); diff != \"\" {\n\t\t\t\tt.Errorf(\"%s diff: (-want +got)\\n%s\", tt.cfgName, diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 3,
                  "endLine": 276,
                  "endColumn": 11,
                  "snippet": {
                    "text": "# (introduced in v8.6.0)\nkeywords = [\n  \"auth\",\n  \"password\",\n  \"token\",\n]\n\n",
                    "rendered": {
                      "text": "# (introduced in v8.6.0)\nkeywords = [\n  \"auth\",\n  \"password\",\n  \"token\",\n]\n\n",
                      "markdown": "`# (introduced in v8.6.0)\nkeywords = [\n  \"auth\",\n  \"password\",\n  \"token\",\n]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 84,
                  "endLine": 30,
                  "endColumn": 92,
                  "snippet": {
                    "text": "\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n",
                    "rendered": {
                      "text": "\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n",
                      "markdown": "`\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 389,
                  "startColumn": 3,
                  "endLine": 389,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nCurrently supported encodings:\n\n- `base64` (both standard and base64url)\n\n## Sponsorships\n\n",
                    "rendered": {
                      "text": "\nCurrently supported encodings:\n\n- `base64` (both standard and base64url)\n\n## Sponsorships\n\n",
                      "markdown": "`\nCurrently supported encodings:\n\n- `base64` (both standard and base64url)\n\n## Sponsorships\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 69,
                  "endLine": 362,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n#### .gitleaksignore\n\nYou can ignore specific findings by creating a `.gitleaksignore` file at the root of your repo. In release v8.10.0 Gitleaks added a `Fingerprint` value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the `.gitleaksignore` file to ignore that specific secret. See Gitleaks' [.gitleaksignore](https://github.com/gitleaks/gitleaks/blob/master/.gitleaksignore) for an example. Note: this feature is experimental and is subject to change in the future.\n\n#### Decoding\n\n",
                    "rendered": {
                      "text": "\n#### .gitleaksignore\n\nYou can ignore specific findings by creating a `.gitleaksignore` file at the root of your repo. In release v8.10.0 Gitleaks added a `Fingerprint` value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the `.gitleaksignore` file to ignore that specific secret. See Gitleaks' [.gitleaksignore](https://github.com/gitleaks/gitleaks/blob/master/.gitleaksignore) for an example. Note: this feature is experimental and is subject to change in the future.\n\n#### Decoding\n\n",
                      "markdown": "`\n#### .gitleaksignore\n\nYou can ignore specific findings by creating a `.gitleaksignore` file at the root of your repo. In release v8.10.0 Gitleaks added a `Fingerprint` value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the `.gitleaksignore` file to ignore that specific secret. See Gitleaks' [.gitleaksignore](https://github.com/gitleaks/gitleaks/blob/master/.gitleaksignore) for an example. Note: this feature is experimental and is subject to change in the future.\n\n#### Decoding\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 37,
                  "endLine": 232,
                  "endColumn": 41,
                  "snippet": {
                    "text": "# Another thing to know with extending configurations is you can chain together\n# multiple configuration files to a depth of 2. Allowlist arrays are appended\n# and can contain duplicates.\n# useDefault and path can NOT be used at the same time. Choose one.\n[extend]\n# useDefault will extend the base configuration with the default gitleaks config:\n# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml\n",
                    "rendered": {
                      "text": "# Another thing to know with extending configurations is you can chain together\n# multiple configuration files to a depth of 2. Allowlist arrays are appended\n# and can contain duplicates.\n# useDefault and path can NOT be used at the same time. Choose one.\n[extend]\n# useDefault will extend the base configuration with the default gitleaks config:\n# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml\n",
                      "markdown": "`# Another thing to know with extending configurations is you can chain together\n# multiple configuration files to a depth of 2. Allowlist arrays are appended\n# and can contain duplicates.\n# useDefault and path can NOT be used at the same time. Choose one.\n[extend]\n# useDefault will extend the base configuration with the default gitleaks config:\n# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 44,
                  "endLine": 176,
                  "endColumn": 48,
                  "snippet": {
                    "text": "### Commands\n\n⚠️ v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n",
                    "rendered": {
                      "text": "### Commands\n\n⚠️ v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n",
                      "markdown": "`### Commands\n\n⚠️ v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 42,
                  "endLine": 103,
                  "endColumn": 46,
                  "snippet": {
                    "text": "### Pre-Commit\n\n1. Install pre-commit from https://pre-commit.com/#install\n2. Create a `.pre-commit-config.yaml` file at the root of your repository with the following content:\n\n   ```\n   repos:\n",
                    "rendered": {
                      "text": "### Pre-Commit\n\n1. Install pre-commit from https://pre-commit.com/#install\n2. Create a `.pre-commit-config.yaml` file at the root of your repository with the following content:\n\n   ```\n   repos:\n",
                      "markdown": "`### Pre-Commit\n\n1. Install pre-commit from https://pre-commit.com/#install\n2. Create a `.pre-commit-config.yaml` file at the root of your repository with the following content:\n\n   ```\n   repos:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 59,
                  "endLine": 367,
                  "endColumn": 65,
                  "snippet": {
                    "text": "#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\n",
                    "rendered": {
                      "text": "#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\n",
                      "markdown": "`#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 70,
                  "endLine": 367,
                  "snippet": {
                    "text": "\n#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\n",
                    "rendered": {
                      "text": "\n#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\n",
                      "markdown": "`\n#### Decoding\n\nSometimes secrets are encoded in a way that can make them difficult to find\nwith just regex. Now you can tell gitleaks to automatically find and decode\nencoded text. The flag `--max-decode-depth` enables this feature (the default\nvalue \"0\" means the feature is disabled by default).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 80,
                  "endLine": 214,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\n## Pre-Commit hook\n\nYou can run Gitleaks as a pre-commit hook by copying the example `pre-commit.py` script into\nyour `.git/hooks/` directory.\n\n## Configuration\n",
                    "rendered": {
                      "text": "\n## Pre-Commit hook\n\nYou can run Gitleaks as a pre-commit hook by copying the example `pre-commit.py` script into\nyour `.git/hooks/` directory.\n\n## Configuration\n",
                      "markdown": "`\n## Pre-Commit hook\n\nYou can run Gitleaks as a pre-commit hook by copying the example `pre-commit.py` script into\nyour `.git/hooks/` directory.\n\n## Configuration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 8,
                  "endLine": 207,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Once as baseline is created it can be applied when running the detect command again:\n\n```\ngitleaks git --baseline-path gitleaks-report.json --report-path findings.json\n```\n\nAfter running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.\n",
                    "rendered": {
                      "text": "Once as baseline is created it can be applied when running the detect command again:\n\n```\ngitleaks git --baseline-path gitleaks-report.json --report-path findings.json\n```\n\nAfter running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.\n",
                      "markdown": "`Once as baseline is created it can be applied when running the detect command again:\n\n```\ngitleaks git --baseline-path gitleaks-report.json --report-path findings.json\n```\n\nAfter running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 8,
                  "endLine": 201,
                  "endColumn": 13,
                  "snippet": {
                    "text": "gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the `--report-path` parameter.\n\n```\ngitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json\n```\n\nOnce as baseline is created it can be applied when running the detect command again:\n",
                    "rendered": {
                      "text": "gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the `--report-path` parameter.\n\n```\ngitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json\n```\n\nOnce as baseline is created it can be applied when running the detect command again:\n",
                      "markdown": "`gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the `--report-path` parameter.\n\n```\ngitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json\n```\n\nOnce as baseline is created it can be applied when running the detect command again:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 127,
                  "endLine": 186,
                  "endColumn": 132,
                  "snippet": {
                    "text": "llowing\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\nThe `dir` (aliases include `files`, `directory`) command lets you scan directories and files. Example: `gitleaks dir -v path_to_directory_or_file`.\nIf there is no target specified as a positional argument, then gitleaks will scan the current working directory.\n\n#### Stdin\nYou can als",
                    "rendered": {
                      "text": "llowing\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\nThe `dir` (aliases include `files`, `directory`) command lets you scan directories and files. Example: `gitleaks dir -v path_to_directory_or_file`.\nIf there is no target specified as a positional argument, then gitleaks will scan the current working directory.\n\n#### Stdin\nYou can als",
                      "markdown": "`llowing\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\nThe `dir` (aliases include `files`, `directory`) command lets you scan directories and files. Example: `gitleaks dir -v path_to_directory_or_file`.\nIf there is no target specified as a positional argument, then gitleaks will scan the current working directory.\n\n#### Stdin\nYou can als`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 18,
                  "endLine": 185,
                  "endColumn": 23,
                  "snippet": {
                    "text": "The `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\n",
                    "rendered": {
                      "text": "The `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\n",
                      "markdown": "`The `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\nIf there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.\n\n#### Dir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 37,
                  "endLine": 182,
                  "endColumn": 42,
                  "snippet": {
                    "text": "There are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\n",
                    "rendered": {
                      "text": "There are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\n",
                      "markdown": "`There are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 4,
                  "endLine": 182,
                  "snippet": {
                    "text": "\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\n",
                    "rendered": {
                      "text": "\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\n",
                      "markdown": "`\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n#### Git\nThe `git` command lets you scan local git repos. Under the hood, gitleaks uses the `git log -p` command to scan patches.\nYou can configure the behavior of `git log -p` with the `log-opts` option.\nFor example, if you wanted to run gitleaks on a range of commits you could use the following\ncommand: `gitleaks git -v --log-opts=\"--all commitA..commitB\" path_to_repo`. See the [git log](https://git-scm.com/docs/git-log) documentation for more information.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 6,
                  "endLine": 177,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n⚠️ v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n",
                    "rendered": {
                      "text": "\n⚠️ v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n",
                      "markdown": "`\n⚠️ v8.19.0 introduced a change that deprecated `detect` and `protect`. Those commands are still available but\nare hidden in the `--help` menu. Take a look at this [gist](https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2) for easy command translations.\nIf you find v8.19.0 broke an existing command (`detect`/`protect`), please open an issue.\n\nThere are three scanning modes: `git`, `dir`, and `stdin`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 40,
                  "endLine": 151,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  -c, --config string                 config file path\n                                      order of precedence:\n                                      1. --config/-c\n                                      2. env var GITLEAKS_CONFIG\n                                      3. (target path)/.gitleaks.toml\n                                      If none of the three options are used, then gitleaks will use the default config\n      --enable-rule strings           only enable specific rules by id\n",
                    "rendered": {
                      "text": "  -c, --config string                 config file path\n                                      order of precedence:\n                                      1. --config/-c\n                                      2. env var GITLEAKS_CONFIG\n                                      3. (target path)/.gitleaks.toml\n                                      If none of the three options are used, then gitleaks will use the default config\n      --enable-rule strings           only enable specific rules by id\n",
                      "markdown": "`  -c, --config string                 config file path\n                                      order of precedence:\n                                      1. --config/-c\n                                      2. env var GITLEAKS_CONFIG\n                                      3. (target path)/.gitleaks.toml\n                                      If none of the three options are used, then gitleaks will use the default config\n      --enable-rule strings           only enable specific rules by id\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 18,
                  "endLine": 141,
                  "endColumn": 23,
                  "snippet": {
                    "text": "Available Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n",
                    "rendered": {
                      "text": "Available Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n",
                      "markdown": "`Available Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 1,
                  "endLine": 141,
                  "endColumn": 6,
                  "snippet": {
                    "text": "Available Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n",
                    "rendered": {
                      "text": "Available Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n",
                      "markdown": "`Available Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n  stdin       detect secrets from stdin\n  version     display gitleaks version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 41,
                  "endLine": 139,
                  "endColumn": 49,
                  "snippet": {
                    "text": "  gitleaks [command]\n\nAvailable Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n",
                    "rendered": {
                      "text": "  gitleaks [command]\n\nAvailable Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n",
                      "markdown": "`  gitleaks [command]\n\nAvailable Commands:\n  completion  generate the autocompletion script for the specified shell\n  dir         scan directories or files for secrets\n  git         scan git repositories for secrets\n  help        Help about any command\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 15,
                  "endLine": 128,
                  "endColumn": 20,
                  "snippet": {
                    "text": "and it will skip running gitleaks\n\n```\n➜ SKIP=gitleaks git commit -m \"skip gitleaks check\"\nDetect hardcoded secrets................................................Skipped\n```\n\n",
                    "rendered": {
                      "text": "and it will skip running gitleaks\n\n```\n➜ SKIP=gitleaks git commit -m \"skip gitleaks check\"\nDetect hardcoded secrets................................................Skipped\n```\n\n",
                      "markdown": "`and it will skip running gitleaks\n\n```\n➜ SKIP=gitleaks git commit -m \"skip gitleaks check\"\nDetect hardcoded secrets................................................Skipped\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 1,
                  "endLine": 120,
                  "endColumn": 6,
                  "snippet": {
                    "text": "5. Now you're all set!\n\n```\n➜ git commit -m \"this commit contains a secret\"\nDetect hardcoded secrets.................................................Failed\n```\n\n",
                    "rendered": {
                      "text": "5. Now you're all set!\n\n```\n➜ git commit -m \"this commit contains a secret\"\nDetect hardcoded secrets.................................................Failed\n```\n\n",
                      "markdown": "`5. Now you're all set!\n\n```\n➜ git commit -m \"this commit contains a secret\"\nDetect hardcoded secrets.................................................Failed\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 247,
                  "endLine": 113,
                  "endColumn": 255,
                  "snippet": {
                    "text": "         - id: gitleaks\n   ```\n\n   for a [native execution of GitLeaks](https://github.com/gitleaks/gitleaks/releases) or use the [`gitleaks-docker` pre-commit ID](https://github.com/gitleaks/gitleaks/blob/master/.pre-commit-hooks.yaml) for executing GitLeaks using the [official Docker images](#docker)\n\n3. Auto-update the config to the latest repos' versions by executing `pre-commit autoupdate`\n4. Install with `pre-commit install`\n",
                    "rendered": {
                      "text": "         - id: gitleaks\n   ```\n\n   for a [native execution of GitLeaks](https://github.com/gitleaks/gitleaks/releases) or use the [`gitleaks-docker` pre-commit ID](https://github.com/gitleaks/gitleaks/blob/master/.pre-commit-hooks.yaml) for executing GitLeaks using the [official Docker images](#docker)\n\n3. Auto-update the config to the latest repos' versions by executing `pre-commit autoupdate`\n4. Install with `pre-commit install`\n",
                      "markdown": "`         - id: gitleaks\n   ```\n\n   for a [native execution of GitLeaks](https://github.com/gitleaks/gitleaks/releases) or use the [`gitleaks-docker` pre-commit ID](https://github.com/gitleaks/gitleaks/blob/master/.pre-commit-hooks.yaml) for executing GitLeaks using the [official Docker images](#docker)\n\n3. Auto-update the config to the latest repos' versions by executing `pre-commit autoupdate`\n4. Install with `pre-commit install`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 43,
                  "endLine": 74,
                  "endColumn": 4,
                  "snippet": {
                    "text": "docker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\ncd gitleaks\nmake build\n```\n",
                    "rendered": {
                      "text": "docker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\ncd gitleaks\nmake build\n```\n",
                      "markdown": "`docker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\ncd gitleaks\nmake build\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 44,
                  "endLine": 71,
                  "endColumn": 7,
                  "snippet": {
                    "text": "docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\n",
                    "rendered": {
                      "text": "docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\n",
                      "markdown": "`docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\ngit clone https://github.com/gitleaks/gitleaks.git\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 18,
                  "endLine": 70,
                  "endColumn": 7,
                  "snippet": {
                    "text": "docker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\n",
                    "rendered": {
                      "text": "docker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\n",
                      "markdown": "`docker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# From Source (make sure `go` is installed)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 1,
                  "endLine": 69,
                  "endColumn": 9,
                  "snippet": {
                    "text": "docker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n",
                    "rendered": {
                      "text": "docker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n",
                      "markdown": "`docker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 39,
                  "endLine": 67,
                  "endColumn": 7,
                  "snippet": {
                    "text": "brew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\n",
                    "rendered": {
                      "text": "brew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\n",
                      "markdown": "`brew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\ndocker pull ghcr.io/gitleaks/gitleaks:latest\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 20,
                  "endLine": 66,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\n",
                    "rendered": {
                      "text": "# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\n",
                      "markdown": "`# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n# Docker (ghcr.io)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 1,
                  "endLine": 65,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n",
                    "rendered": {
                      "text": "# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n",
                      "markdown": "`# MacOS\nbrew install gitleaks\n\n# Docker (DockerHub)\ndocker pull zricethezav/gitleaks:latest\ndocker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 26,
                  "endLine": 33,
                  "endColumn": 31,
                  "snippet": {
                    "text": "Gitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n\n    ○\n    │╲\n",
                    "rendered": {
                      "text": "Gitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n\n    ○\n    │╲\n",
                      "markdown": "`Gitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n\n    ○\n    │╲\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/README.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 118,
                  "endLine": 30,
                  "endColumn": 123,
                  "snippet": {
                    "text": "\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n",
                    "rendered": {
                      "text": "\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n",
                      "markdown": "`\n### Join our Discord! [![Discord](https://img.shields.io/discord/1102689410522284044.svg?label=&logo=discord&logoColor=ffffff&color=7389D8&labelColor=6A7EC2)](https://discord.gg/8Hzbrnkr7E)\n\nGitleaks is a SAST tool for **detecting** and **preventing** hardcoded secrets like passwords, API keys, and tokens in git repos. Gitleaks is an **easy-to-use, all-in-one solution** for detecting secrets, past or present, in your code.\n\n```\n➜  ~/code(master) gitleaks git -v\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 24,
                  "endLine": 40,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Tmfn-Kt_6Jwq8HQ9GOCwAicEz0JVireHA7EWhATzuT56eO6MTe-2j5bpGnPQRJJtQ8AbtAN3nVK7RPjSzmc8Ppqx1z5i4oCGwiyRlGwqT-FkCtQLbQaQ4XmrASQoN4pJ_OBy5slztUhk32HdGP6pQx5c-nfei-of_4ij_fHrP0xEEfmVVvXqi9WKv1PLkQ3qTiSFDzv8M2sE4T6XmCGBbw7gyHzEGSpOAPZr00bX_YMCUvEF0lyP4YK696xWCBA`, // gitleaks:allow\n\t\t`$ curl \"http://admin:password@127.0.0.1:8080/api/v2/token\"\n\t\t{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiQVBJIl0sImV4cCI6MTYxMzMzNTI2MSwianRpIjoiYzBrb2gxZmNkcnBjaHNzMGZwZmciLCJuYmYiOjE2MTMzMzQ2MzEsInBlcm1pc3Npb25zIjpbIioiXSwic3ViIjoiYUJ0SHUwMHNBUmxzZ29yeEtLQ1pZZWVqSTRKVTlXbThHSGNiVWtWVmc1TT0iLCJ1c2VybmFtZS",
                    "rendered": {
                      "text": "Tmfn-Kt_6Jwq8HQ9GOCwAicEz0JVireHA7EWhATzuT56eO6MTe-2j5bpGnPQRJJtQ8AbtAN3nVK7RPjSzmc8Ppqx1z5i4oCGwiyRlGwqT-FkCtQLbQaQ4XmrASQoN4pJ_OBy5slztUhk32HdGP6pQx5c-nfei-of_4ij_fHrP0xEEfmVVvXqi9WKv1PLkQ3qTiSFDzv8M2sE4T6XmCGBbw7gyHzEGSpOAPZr00bX_YMCUvEF0lyP4YK696xWCBA`, // gitleaks:allow\n\t\t`$ curl \"http://admin:password@127.0.0.1:8080/api/v2/token\"\n\t\t{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiQVBJIl0sImV4cCI6MTYxMzMzNTI2MSwianRpIjoiYzBrb2gxZmNkcnBjaHNzMGZwZmciLCJuYmYiOjE2MTMzMzQ2MzEsInBlcm1pc3Npb25zIjpbIioiXSwic3ViIjoiYUJ0SHUwMHNBUmxzZ29yeEtLQ1pZZWVqSTRKVTlXbThHSGNiVWtWVmc1TT0iLCJ1c2VybmFtZS",
                      "markdown": "`Tmfn-Kt_6Jwq8HQ9GOCwAicEz0JVireHA7EWhATzuT56eO6MTe-2j5bpGnPQRJJtQ8AbtAN3nVK7RPjSzmc8Ppqx1z5i4oCGwiyRlGwqT-FkCtQLbQaQ4XmrASQoN4pJ_OBy5slztUhk32HdGP6pQx5c-nfei-of_4ij_fHrP0xEEfmVVvXqi9WKv1PLkQ3qTiSFDzv8M2sE4T6XmCGBbw7gyHzEGSpOAPZr00bX_YMCUvEF0lyP4YK696xWCBA`, // gitleaks:allow\n\t\t`$ curl \"http://admin:password@127.0.0.1:8080/api/v2/token\"\n\t\t{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiQVBJIl0sImV4cCI6MTYxMzMzNTI2MSwianRpIjoiYzBrb2gxZmNkcnBjaHNzMGZwZmciLCJuYmYiOjE2MTMzMzQ2MzEsInBlcm1pc3Npb25zIjpbIioiXSwic3ViIjoiYUJ0SHUwMHNBUmxzZ29yeEtLQ1pZZWVqSTRKVTlXbThHSGNiVWtWVmc1TT0iLCJ1c2VybmFtZS`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 33,
                  "snippet": {
                    "text": " -Headers @{ 'X-API-KEY' = 'eyJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6Im1vcnR5Iiwic3ViIjoiMTIzIn0.' }`, // gitleaks:allow\n\t}\n\tfps := []string{}\n\treturn utils.Validate(r, tps, fps)\n}\n\nfunc JWTBase64() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"jwt-base64\",\n\t\tDescription: \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\",\n\t\tRegex: regexp.MustCompile(\n\t\t\t`\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)|(?P<epk>bG",
                    "rendered": {
                      "text": " -Headers @{ 'X-API-KEY' = 'eyJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6Im1vcnR5Iiwic3ViIjoiMTIzIn0.' }`, // gitleaks:allow\n\t}\n\tfps := []string{}\n\treturn utils.Validate(r, tps, fps)\n}\n\nfunc JWTBase64() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"jwt-base64\",\n\t\tDescription: \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\",\n\t\tRegex: regexp.MustCompile(\n\t\t\t`\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)|(?P<epk>bG",
                      "markdown": "` -Headers @{ 'X-API-KEY' = 'eyJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6Im1vcnR5Iiwic3ViIjoiMTIzIn0.' }`, // gitleaks:allow\n\t}\n\tfps := []string{}\n\treturn utils.Validate(r, tps, fps)\n}\n\nfunc JWTBase64() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"jwt-base64\",\n\t\tDescription: \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\",\n\t\tRegex: regexp.MustCompile(\n\t\t\t`\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJanBi)|(?P<cty>amRIa2lPaU)|(?P<epk>bG`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 20,
                  "endLine": 71,
                  "endColumn": 26,
                  "snippet": {
                    "text": "d -Uri 'http://localhost:8085/users' -Headers @{ 'X-API-KEY' = 'eyJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6Im1vcnR5Iiwic3ViIjoiMTIzIn0.' }`, // gitleaks:allow\n\t}\n\tfps := []string{}\n\treturn utils.Validate(r, tps, fps)\n}\n\nfunc JWTBase64() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"jwt-base64\",\n\t\tDescription: \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\",\n\t\tRegex: regexp.MustCompile(\n\t\t\t`\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJ",
                    "rendered": {
                      "text": "d -Uri 'http://localhost:8085/users' -Headers @{ 'X-API-KEY' = 'eyJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6Im1vcnR5Iiwic3ViIjoiMTIzIn0.' }`, // gitleaks:allow\n\t}\n\tfps := []string{}\n\treturn utils.Validate(r, tps, fps)\n}\n\nfunc JWTBase64() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"jwt-base64\",\n\t\tDescription: \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\",\n\t\tRegex: regexp.MustCompile(\n\t\t\t`\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJ",
                      "markdown": "`d -Uri 'http://localhost:8085/users' -Headers @{ 'X-API-KEY' = 'eyJhbGciOiJub25lIn0.eyJ1c2VybmFtZSI6Im1vcnR5Iiwic3ViIjoiMTIzIn0.' }`, // gitleaks:allow\n\t}\n\tfps := []string{}\n\treturn utils.Validate(r, tps, fps)\n}\n\nfunc JWTBase64() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"jwt-base64\",\n\t\tDescription: \"Detected a Base64-encoded JSON Web Token, posing a risk of exposing encoded authentication and data exchange information.\",\n\t\tRegex: regexp.MustCompile(\n\t\t\t`\\bZXlK(?:(?P<alg>aGJHY2lPaU)|(?P<apu>aGNIVWlPaU)|(?P<apv>aGNIWWlPaU)|(?P<aud>aGRXUWlPaU)|(?P<b64>aU5qUWlP)|(?P<crit>amNtbDBJ`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 15,
                  "endLine": 4,
                  "endColumn": 21,
                  "snippet": {
                    "text": "package rules\n\nimport (\n\tb64 \"encoding/base64\"\n\t\"fmt\"\n\t\"github.com/zricethezav/gitleaks/v8/cmd/generate/config/utils\"\n\t\"regexp\"\n",
                    "rendered": {
                      "text": "package rules\n\nimport (\n\tb64 \"encoding/base64\"\n\t\"fmt\"\n\t\"github.com/zricethezav/gitleaks/v8/cmd/generate/config/utils\"\n\t\"regexp\"\n",
                      "markdown": "`package rules\n\nimport (\n\tb64 \"encoding/base64\"\n\t\"fmt\"\n\t\"github.com/zricethezav/gitleaks/v8/cmd/generate/config/utils\"\n\t\"regexp\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 129,
                  "endLine": 147,
                  "endColumn": 174,
                  "snippet": {
                    "text": "\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n\t\t\"crit\":    {`[\"exp\"]`},\n\t\t\"cty\":     {`\"example\"`, `\"json\"`},\n\t\t\"epk\":     {`{\"crv\":\"X25519\",\"kty\":\"OKP\",\"x\":\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"}`, `{\"kty\":\"OKP\",\"crv\":\"X25519\",\"x\":\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"}`},\n\t\t\"enc\":     {`\"A256GCM\"`, `\"A256CBC-HS512\"`, `\"A128CBC-HS256\"`},\n\t\t\"jku\":     {`\"https://c2id.com/jwks.json\"`},\n\t\t\"jwk\":     {`{\"crv\":\"P-256\",\"kid\":\"DB2X:GSG2:72H3:AE3R:KCMI:Y77E:W7TF:ERHK:V5HR:JJ2Y:YMS6:HFGJ\",\"kty\":\"EC\",\"x\":\"jyr9-xZBorSC9fhqNsmfU_Ud31wbaZ-bVGz0HmySvbQ\",\"y\":\"vkE6qZCCvYRWjSUwgA",
                    "rendered": {
                      "text": "\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n\t\t\"crit\":    {`[\"exp\"]`},\n\t\t\"cty\":     {`\"example\"`, `\"json\"`},\n\t\t\"epk\":     {`{\"crv\":\"X25519\",\"kty\":\"OKP\",\"x\":\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"}`, `{\"kty\":\"OKP\",\"crv\":\"X25519\",\"x\":\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"}`},\n\t\t\"enc\":     {`\"A256GCM\"`, `\"A256CBC-HS512\"`, `\"A128CBC-HS256\"`},\n\t\t\"jku\":     {`\"https://c2id.com/jwks.json\"`},\n\t\t\"jwk\":     {`{\"crv\":\"P-256\",\"kid\":\"DB2X:GSG2:72H3:AE3R:KCMI:Y77E:W7TF:ERHK:V5HR:JJ2Y:YMS6:HFGJ\",\"kty\":\"EC\",\"x\":\"jyr9-xZBorSC9fhqNsmfU_Ud31wbaZ-bVGz0HmySvbQ\",\"y\":\"vkE6qZCCvYRWjSUwgA",
                      "markdown": "`\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n\t\t\"crit\":    {`[\"exp\"]`},\n\t\t\"cty\":     {`\"example\"`, `\"json\"`},\n\t\t\"epk\":     {`{\"crv\":\"X25519\",\"kty\":\"OKP\",\"x\":\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"}`, `{\"kty\":\"OKP\",\"crv\":\"X25519\",\"x\":\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"}`},\n\t\t\"enc\":     {`\"A256GCM\"`, `\"A256CBC-HS512\"`, `\"A128CBC-HS256\"`},\n\t\t\"jku\":     {`\"https://c2id.com/jwks.json\"`},\n\t\t\"jwk\":     {`{\"crv\":\"P-256\",\"kid\":\"DB2X:GSG2:72H3:AE3R:KCMI:Y77E:W7TF:ERHK:V5HR:JJ2Y:YMS6:HFGJ\",\"kty\":\"EC\",\"x\":\"jyr9-xZBorSC9fhqNsmfU_Ud31wbaZ-bVGz0HmySvbQ\",\"y\":\"vkE6qZCCvYRWjSUwgA`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 46,
                  "endLine": 142,
                  "endColumn": 188,
                  "snippet": {
                    "text": "\t\t\t`\"RSA-OAEP\"`,\n\t\t},\n\t\t\"apu\":     {`\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"`, `\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"`},\n\t\t\"apv\":     {`\"ZGlkOmVsZW06cm9wc3RlbjpFa\"`, `\"ZGlkOmtleTp6Nk1rak1TWWF1dU1neDlhekV5VW5UVzVvNWpGUmtiQnU1VDgzZjM5dU53bnNHbW0jejZMU29HdFpTclVNWnVkQWFnekVmWWY3azhqSFpjR0Q3OVNveDd2NHdDa0RLTlN3\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n\t\t\"crit\":    {`[\"exp\"]`},\n",
                    "rendered": {
                      "text": "\t\t\t`\"RSA-OAEP\"`,\n\t\t},\n\t\t\"apu\":     {`\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"`, `\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"`},\n\t\t\"apv\":     {`\"ZGlkOmVsZW06cm9wc3RlbjpFa\"`, `\"ZGlkOmtleTp6Nk1rak1TWWF1dU1neDlhekV5VW5UVzVvNWpGUmtiQnU1VDgzZjM5dU53bnNHbW0jejZMU29HdFpTclVNWnVkQWFnekVmWWY3azhqSFpjR0Q3OVNveDd2NHdDa0RLTlN3\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n\t\t\"crit\":    {`[\"exp\"]`},\n",
                      "markdown": "`\t\t\t`\"RSA-OAEP\"`,\n\t\t},\n\t\t\"apu\":     {`\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"`, `\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"`},\n\t\t\"apv\":     {`\"ZGlkOmVsZW06cm9wc3RlbjpFa\"`, `\"ZGlkOmtleTp6Nk1rak1TWWF1dU1neDlhekV5VW5UVzVvNWpGUmtiQnU1VDgzZjM5dU53bnNHbW0jejZMU29HdFpTclVNWnVkQWFnekVmWWY3azhqSFpjR0Q3OVNveDd2NHdDa0RLTlN3\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n\t\t\"crit\":    {`[\"exp\"]`},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 64,
                  "endLine": 141,
                  "endColumn": 109,
                  "snippet": {
                    "text": "\t\t\t`\"ECDH-ES+A256KW\"`,\n\t\t\t`\"RSA-OAEP\"`,\n\t\t},\n\t\t\"apu\":     {`\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"`, `\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"`},\n\t\t\"apv\":     {`\"ZGlkOmVsZW06cm9wc3RlbjpFa\"`, `\"ZGlkOmtleTp6Nk1rak1TWWF1dU1neDlhekV5VW5UVzVvNWpGUmtiQnU1VDgzZjM5dU53bnNHbW0jejZMU29HdFpTclVNWnVkQWFnekVmWWY3azhqSFpjR0Q3OVNveDd2NHdDa0RLTlN3\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n",
                    "rendered": {
                      "text": "\t\t\t`\"ECDH-ES+A256KW\"`,\n\t\t\t`\"RSA-OAEP\"`,\n\t\t},\n\t\t\"apu\":     {`\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"`, `\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"`},\n\t\t\"apv\":     {`\"ZGlkOmVsZW06cm9wc3RlbjpFa\"`, `\"ZGlkOmtleTp6Nk1rak1TWWF1dU1neDlhekV5VW5UVzVvNWpGUmtiQnU1VDgzZjM5dU53bnNHbW0jejZMU29HdFpTclVNWnVkQWFnekVmWWY3azhqSFpjR0Q3OVNveDd2NHdDa0RLTlN3\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n",
                      "markdown": "`\t\t\t`\"ECDH-ES+A256KW\"`,\n\t\t\t`\"RSA-OAEP\"`,\n\t\t},\n\t\t\"apu\":     {`\"Tx9qG69ZfodhRos-8qfhTPc6ZFnNUcgNDVdHqX1UR3s\"`, `\"RfXdxTfIzilWBzWWX3ovHBDzgDcLNy0BFJWSxa0dqnw\"`},\n\t\t\"apv\":     {`\"ZGlkOmVsZW06cm9wc3RlbjpFa\"`, `\"ZGlkOmtleTp6Nk1rak1TWWF1dU1neDlhekV5VW5UVzVvNWpGUmtiQnU1VDgzZjM5dU53bnNHbW0jejZMU29HdFpTclVNWnVkQWFnekVmWWY3azhqSFpjR0Q3OVNveDd2NHdDa0RLTlN3\"`},\n\t\t\"aud\":     {`\"https://vault.example.com\"`, `\"http://example.com\"`},\n\t\t\"b64\":     {`true`, `false`},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/jwt.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 4,
                  "endLine": 40,
                  "endColumn": 10,
                  "snippet": {
                    "text": "lLcU4SbNKPGJflF2dyW9Tmfn-Kt_6Jwq8HQ9GOCwAicEz0JVireHA7EWhATzuT56eO6MTe-2j5bpGnPQRJJtQ8AbtAN3nVK7RPjSzmc8Ppqx1z5i4oCGwiyRlGwqT-FkCtQLbQaQ4XmrASQoN4pJ_OBy5slztUhk32HdGP6pQx5c-nfei-of_4ij_fHrP0xEEfmVVvXqi9WKv1PLkQ3qTiSFDzv8M2sE4T6XmCGBbw7gyHzEGSpOAPZr00bX_YMCUvEF0lyP4YK696xWCBA`, // gitleaks:allow\n\t\t`$ curl \"http://admin:password@127.0.0.1:8080/api/v2/token\"\n\t\t{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiQVBJIl0sImV4cCI6MTYxMzMzNTI2MSwianRpIjoiYzBrb2gxZmNkcnBjaHNzMGZwZmciLCJuYmYiOjE2MTMzMzQ2MzEsInBlcm1pc3Npb25zIjpbIioiXSwic3ViIjoiYUJ0SHUwMHNBUmxzZ29yeEtLQ1pZZWVqSTRKVTlXbThHSGNiVWtW",
                    "rendered": {
                      "text": "lLcU4SbNKPGJflF2dyW9Tmfn-Kt_6Jwq8HQ9GOCwAicEz0JVireHA7EWhATzuT56eO6MTe-2j5bpGnPQRJJtQ8AbtAN3nVK7RPjSzmc8Ppqx1z5i4oCGwiyRlGwqT-FkCtQLbQaQ4XmrASQoN4pJ_OBy5slztUhk32HdGP6pQx5c-nfei-of_4ij_fHrP0xEEfmVVvXqi9WKv1PLkQ3qTiSFDzv8M2sE4T6XmCGBbw7gyHzEGSpOAPZr00bX_YMCUvEF0lyP4YK696xWCBA`, // gitleaks:allow\n\t\t`$ curl \"http://admin:password@127.0.0.1:8080/api/v2/token\"\n\t\t{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiQVBJIl0sImV4cCI6MTYxMzMzNTI2MSwianRpIjoiYzBrb2gxZmNkcnBjaHNzMGZwZmciLCJuYmYiOjE2MTMzMzQ2MzEsInBlcm1pc3Npb25zIjpbIioiXSwic3ViIjoiYUJ0SHUwMHNBUmxzZ29yeEtLQ1pZZWVqSTRKVTlXbThHSGNiVWtW",
                      "markdown": "`lLcU4SbNKPGJflF2dyW9Tmfn-Kt_6Jwq8HQ9GOCwAicEz0JVireHA7EWhATzuT56eO6MTe-2j5bpGnPQRJJtQ8AbtAN3nVK7RPjSzmc8Ppqx1z5i4oCGwiyRlGwqT-FkCtQLbQaQ4XmrASQoN4pJ_OBy5slztUhk32HdGP6pQx5c-nfei-of_4ij_fHrP0xEEfmVVvXqi9WKv1PLkQ3qTiSFDzv8M2sE4T6XmCGBbw7gyHzEGSpOAPZr00bX_YMCUvEF0lyP4YK696xWCBA`, // gitleaks:allow\n\t\t`$ curl \"http://admin:password@127.0.0.1:8080/api/v2/token\"\n\t\t{\"access_token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiQVBJIl0sImV4cCI6MTYxMzMzNTI2MSwianRpIjoiYzBrb2gxZmNkcnBjaHNzMGZwZmciLCJuYmYiOjE2MTMzMzQ2MzEsInBlcm1pc3Npb25zIjpbIioiXSwic3ViIjoiYUJ0SHUwMHNBUmxzZ29yeEtLQ1pZZWVqSTRKVTlXbThHSGNiVWtW`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/yandex.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 68,
                  "endLine": 54,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"yandex-access-token\",\n\t\tDescription: \"Found a Yandex Access Token, posing a risk to Yandex service integrations and user data privacy.\",\n\t\tRegex: utils.GenerateSemiGenericRegex([]string{\"yandex\"},\n\t\t\t`t1\\.[A-Z0-9a-z_-]+[=]{0,2}\\.[A-Z0-9a-z_-]{86}[=]{0,2}`, true),\n\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"yandex-access-token\",\n\t\tDescription: \"Found a Yandex Access Token, posing a risk to Yandex service integrations and user data privacy.\",\n\t\tRegex: utils.GenerateSemiGenericRegex([]string{\"yandex\"},\n\t\t\t`t1\\.[A-Z0-9a-z_-]+[=]{0,2}\\.[A-Z0-9a-z_-]{86}[=]{0,2}`, true),\n\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"yandex-access-token\",\n\t\tDescription: \"Found a Yandex Access Token, posing a risk to Yandex service integrations and user data privacy.\",\n\t\tRegex: utils.GenerateSemiGenericRegex([]string{\"yandex\"},\n\t\t\t`t1\\.[A-Z0-9a-z_-]+[=]{0,2}\\.[A-Z0-9a-z_-]{86}[=]{0,2}`, true),\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/generic.toml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 52,
                  "endLine": 9,
                  "endColumn": 60,
                  "snippet": {
                    "text": "regex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\"api\",\"token\",\"secret\",\"client\",\"passwd\",\"password\",\"auth\",\"access\",\n]",
                    "rendered": {
                      "text": "regex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\"api\",\"token\",\"secret\",\"client\",\"passwd\",\"password\",\"auth\",\"access\",\n]",
                      "markdown": "`regex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\"api\",\"token\",\"secret\",\"client\",\"passwd\",\"password\",\"auth\",\"access\",\n]`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/generic.toml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 6,
                  "endColumn": 61,
                  "snippet": {
                    "text": "[[rules]]\ndescription = \"Generic API Key\"\nid = \"generic-api-key\"\nregex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\"api\",\"token\",\"secret\",\"client\",\"passwd\",\"password\",\"auth\",\"access\",\n",
                    "rendered": {
                      "text": "[[rules]]\ndescription = \"Generic API Key\"\nid = \"generic-api-key\"\nregex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\"api\",\"token\",\"secret\",\"client\",\"passwd\",\"password\",\"auth\",\"access\",\n",
                      "markdown": "`[[rules]]\ndescription = \"Generic API Key\"\nid = \"generic-api-key\"\nregex = '''(?i)(?:key|api|token|secret|client|passwd|password|auth|access)(?:[0-9a-z\\-_\\t .]{0,20})(?:[\\s|']|[\\s|\"]){0,3}(?:=|>|:{1,3}=|\\|\\|:|<=|=>|:|\\?=)(?:'|\\\"|\\s|=|\\x60){0,5}([0-9a-z\\-_.=]{10,150})(?:['|\\\"|\\n|\\r|\\s|\\x60|;]|$)'''\nentropy = 3.5\nkeywords = [\n    \"key\",\"api\",\"token\",\"secret\",\"client\",\"passwd\",\"password\",\"auth\",\"access\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/simple.toml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 30,
                  "endLine": 89,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    id = \"apkey\"\n    description = \"Asymmetric Private Key\"\n    regex = '''-----BEGIN (?:(?:EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY(?: BLOCK)?-----'''\n    tags = [\"key\", \"AsymmetricPrivateKey\"]\n\n[[rules]]\n    id = \"google\"\n",
                    "rendered": {
                      "text": "    id = \"apkey\"\n    description = \"Asymmetric Private Key\"\n    regex = '''-----BEGIN (?:(?:EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY(?: BLOCK)?-----'''\n    tags = [\"key\", \"AsymmetricPrivateKey\"]\n\n[[rules]]\n    id = \"google\"\n",
                      "markdown": "`    id = \"apkey\"\n    description = \"Asymmetric Private Key\"\n    regex = '''-----BEGIN (?:(?:EC|PGP|DSA|RSA|OPENSSH) )?PRIVATE KEY(?: BLOCK)?-----'''\n    tags = [\"key\", \"AsymmetricPrivateKey\"]\n\n[[rules]]\n    id = \"google\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/simple.toml"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 31,
                  "endLine": 99,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n[[rules]]\n    id = \"google\"\n    description = \"Google (GCP) Service Account\"\n    regex = '''\"type\": \"service_account\"'''\n    tags = [\"key\", \"Google\"]\n\n",
                    "rendered": {
                      "text": "\n[[rules]]\n    id = \"google\"\n    description = \"Google (GCP) Service Account\"\n    regex = '''\"type\": \"service_account\"'''\n    tags = [\"key\", \"Google\"]\n\n",
                      "markdown": "`\n[[rules]]\n    id = \"google\"\n    description = \"Google (GCP) Service Account\"\n    regex = '''\"type\": \"service_account\"'''\n    tags = [\"key\", \"Google\"]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/refs/heads/remove-secrets"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 155,
                  "endLine": 2,
                  "endColumn": 160,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                      "markdown": "`0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/refs/heads/remove-secrets"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 153,
                  "endLine": 2,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n",
                      "markdown": "`0000000000000000000000000000000000000000 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tbranch: Created from HEAD\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/logs/HEAD"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 155,
                  "endLine": 3,
                  "endColumn": 160,
                  "snippet": {
                    "text": "bbfc587 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tcheckout: moving from main to remove-secrets\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\na122b33c6bad3ee54724f52f2caad385ab1982ab a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tchecko",
                    "rendered": {
                      "text": "bbfc587 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tcheckout: moving from main to remove-secrets\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\na122b33c6bad3ee54724f52f2caad385ab1982ab a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tchecko",
                      "markdown": "`bbfc587 1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 Zach Rice <zricer@protonmail.com> 1635896362 -0500\tcheckout: moving from main to remove-secrets\n1b6da43b82b22e4eaa10bcf8ee591e91abbfc587 906335481df9a4b48906c90318b4fac76b67fe73 Zach Rice <zricer@protonmail.com> 1635896426 -0500\tcommit: load token via env var\n906335481df9a4b48906c90318b4fac76b67fe73 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896518 -0500\tcommit: add api package\na122b33c6bad3ee54724f52f2caad385ab1982ab a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896543 -0500\tchecko`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/small/dotGit/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 10,
                  "endLine": 40,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ${{ env.REGISTRY }}\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n",
                    "rendered": {
                      "text": "        with:\n          registry: ${{ env.REGISTRY }}\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n",
                      "markdown": "`        with:\n          registry: ${{ env.REGISTRY }}\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 39,
                  "endLine": 33,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Log in to the Container registry\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Log in to the Container registry\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n",
                      "markdown": "`        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Log in to the Container registry\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 10,
                  "endLine": 33,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Log in to the Container registry\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Log in to the Container registry\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n",
                      "markdown": "`        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Log in to the Container registry\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 28,
                  "endLine": 50,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            zricethezav/gitleaks\n            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8\n        with:\n          platforms: linux/amd64,linux/arm64\n",
                    "rendered": {
                      "text": "            zricethezav/gitleaks\n            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8\n        with:\n          platforms: linux/amd64,linux/arm64\n",
                      "markdown": "`            zricethezav/gitleaks\n            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\n\n      - name: Build and push Docker image\n        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8\n        with:\n          platforms: linux/amd64,linux/arm64\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 49,
                  "endLine": 43,
                  "snippet": {
                    "text": "          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38\n        with:\n          images: |\n",
                    "rendered": {
                      "text": "          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38\n        with:\n          images: |\n",
                      "markdown": "`          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Extract metadata (tags, labels) for Docker\n        id: meta\n        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38\n        with:\n          images: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 23,
                  "endLine": 29,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        id: buildx\n        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n",
                    "rendered": {
                      "text": "        id: buildx\n        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n",
                      "markdown": "`        id: buildx\n        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6\n\n      - name: Log in to Docker Hub\n        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b\n        with:\n          username: ${{ github.actor }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 20,
                  "endLine": 25,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8\n\n      - name: Set up Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6\n\n",
                    "rendered": {
                      "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8\n\n      - name: Set up Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6\n\n",
                      "markdown": "`      - name: Set up QEMU\n        uses: docker/setup-qemu-action@8b122486cedac8393e77aa9734c3528886e4a1a8\n\n      - name: Set up Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 26,
                  "endLine": 1,
                  "endColumn": 34,
                  "snippet": {
                    "text": "name: Create and publish a Docker image\n\non:\n  release:\n",
                    "rendered": {
                      "text": "name: Create and publish a Docker image\n\non:\n  release:\n",
                      "markdown": "`name: Create and publish a Docker image\n\non:\n  release:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/USERS.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 29,
                  "endLine": 18,
                  "endColumn": 33,
                  "snippet": {
                    "text": "Hey! Thanks for looking into this file!\nIf you're going to edit it, please:\n- keep a-z ordering :)\n- edit only the USERS.md file at the repository's root folder\n-->\n\n[^1]: Entries were either added by the companies themselves or by the maintainers after seeing it in the wild.\n",
                    "rendered": {
                      "text": "Hey! Thanks for looking into this file!\nIf you're going to edit it, please:\n- keep a-z ordering :)\n- edit only the USERS.md file at the repository's root folder\n-->\n\n[^1]: Entries were either added by the companies themselves or by the maintainers after seeing it in the wild.\n",
                      "markdown": "`Hey! Thanks for looking into this file!\nIf you're going to edit it, please:\n- keep a-z ordering :)\n- edit only the USERS.md file at the repository's root folder\n-->\n\n[^1]: Entries were either added by the companies themselves or by the maintainers after seeing it in the wild.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/easypost.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 102,
                  "endLine": 14,
                  "endColumn": 111,
                  "snippet": {
                    "text": "func EasyPost() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified an EasyPost API token, which could lead to unauthorized postal and shipment service access and data exposure.\",\n\t\tRuleID:      \"easypost-api-token\",\n\t\tRegex:       regexp.MustCompile(`\\bEZAK(?i)[a-z0-9]{54}`),\n\t\tKeywords:    []string{\"EZAK\"},\n",
                    "rendered": {
                      "text": "func EasyPost() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified an EasyPost API token, which could lead to unauthorized postal and shipment service access and data exposure.\",\n\t\tRuleID:      \"easypost-api-token\",\n\t\tRegex:       regexp.MustCompile(`\\bEZAK(?i)[a-z0-9]{54}`),\n\t\tKeywords:    []string{\"EZAK\"},\n",
                      "markdown": "`func EasyPost() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified an EasyPost API token, which could lead to unauthorized postal and shipment service access and data exposure.\",\n\t\tRuleID:      \"easypost-api-token\",\n\t\tRegex:       regexp.MustCompile(`\\bEZAK(?i)[a-z0-9]{54}`),\n\t\tKeywords:    []string{\"EZAK\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/grafana.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 36,
                  "endLine": 50,
                  "endColumn": 45,
                  "snippet": {
                    "text": "func GrafanaServiceAccountToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a Grafana service account token, posing a risk of compromised monitoring services and data integrity.\",\n\t\tRuleID:      \"grafana-service-account-token\",\n\n\t\tRegex:    utils.GenerateUniqueTokenRegex(`glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8}`, true),\n",
                    "rendered": {
                      "text": "func GrafanaServiceAccountToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a Grafana service account token, posing a risk of compromised monitoring services and data integrity.\",\n\t\tRuleID:      \"grafana-service-account-token\",\n\n\t\tRegex:    utils.GenerateUniqueTokenRegex(`glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8}`, true),\n",
                      "markdown": "`func GrafanaServiceAccountToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a Grafana service account token, posing a risk of compromised monitoring services and data integrity.\",\n\t\tRuleID:      \"grafana-service-account-token\",\n\n\t\tRegex:    utils.GenerateUniqueTokenRegex(`glsa_[A-Za-z0-9]{32}_[A-Fa-f0-9]{8}`, true),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 41,
                  "endLine": 67,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                    "rendered": {
                      "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                      "markdown": "`\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 41,
                  "endLine": 66,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n",
                    "rendered": {
                      "text": "\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n",
                      "markdown": "`\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 41,
                  "endLine": 65,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n",
                    "rendered": {
                      "text": "\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n",
                      "markdown": "`\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_oauth_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 17,
                  "endLine": 51,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc PlanetScaleOAuthToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-oauth-token\",\n",
                    "rendered": {
                      "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc PlanetScaleOAuthToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-oauth-token\",\n",
                      "markdown": "`\treturn utils.Validate(r, tps, nil)\n}\n\nfunc PlanetScaleOAuthToken() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-oauth-token\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 41,
                  "endLine": 46,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                    "rendered": {
                      "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                      "markdown": "`\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 41,
                  "endLine": 45,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n",
                    "rendered": {
                      "text": "\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n",
                      "markdown": "`\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 41,
                  "endLine": 44,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n",
                    "rendered": {
                      "text": "\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n",
                      "markdown": "`\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_tkn_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 41,
                  "endLine": 25,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                    "rendered": {
                      "text": "\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                      "markdown": "`\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 24,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n",
                    "rendered": {
                      "text": "\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n",
                      "markdown": "`\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n\treturn utils.Validate(r, tps, nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 41,
                  "endLine": 23,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n",
                    "rendered": {
                      "text": "\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n",
                      "markdown": "`\n\t// validate\n\ttps := []string{\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"32\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"43\"))),\n\t\tutils.GenerateSampleSecret(\"planetScalePassword\", \"pscale_pw_\"+secrets.NewSecret(utils.AlphaNumericExtended(\"64\"))),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 41,
                  "endLine": 13,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n\t\tDescription: \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n\t\tKeywords: []string{\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n\t\tDescription: \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n\t\tKeywords: []string{\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n\t\tDescription: \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n\t\tKeywords: []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 28,
                  "endLine": 12,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func PlanetScalePassword() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n\t\tDescription: \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n",
                    "rendered": {
                      "text": "func PlanetScalePassword() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n\t\tDescription: \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n",
                      "markdown": "`func PlanetScalePassword() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n\t\tDescription: \"Discovered a PlanetScale password, which could lead to unauthorized database operations and data breaches.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_pw_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc PlanetScalePassword() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n",
                    "rendered": {
                      "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc PlanetScalePassword() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n",
                      "markdown": "`\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc PlanetScalePassword() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-password\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/planetscale.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 81,
                  "endLine": 55,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-oauth-token\",\n\t\tDescription: \"Found a PlanetScale OAuth token, posing a risk to database access control and sensitive data integrity.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_oauth_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n\t\tKeywords: []string{\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-oauth-token\",\n\t\tDescription: \"Found a PlanetScale OAuth token, posing a risk to database access control and sensitive data integrity.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_oauth_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n\t\tKeywords: []string{\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"planetscale-oauth-token\",\n\t\tDescription: \"Found a PlanetScale OAuth token, posing a risk to database access control and sensitive data integrity.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`pscale_oauth_(?i)[a-z0-9=\\-_\\.]{32,64}`, true),\n\n\t\tKeywords: []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/confluent.go"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc ConfluentSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"confluent-secret-key\",\n",
                    "rendered": {
                      "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc ConfluentSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"confluent-secret-key\",\n",
                      "markdown": "`\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc ConfluentSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"confluent-secret-key\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/mailgun.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 77,
                  "endLine": 13,
                  "endColumn": 86,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"mailgun-private-api-token\",\n\t\tDescription: \"Found a Mailgun private API token, risking unauthorized email service operations and data breaches.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"mailgun\"}, `key-[a-f0-9]{32}`, true),\n\n\t\tKeywords: []string{\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"mailgun-private-api-token\",\n\t\tDescription: \"Found a Mailgun private API token, risking unauthorized email service operations and data breaches.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"mailgun\"}, `key-[a-f0-9]{32}`, true),\n\n\t\tKeywords: []string{\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"mailgun-private-api-token\",\n\t\tDescription: \"Found a Mailgun private API token, risking unauthorized email service operations and data breaches.\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"mailgun\"}, `key-[a-f0-9]{32}`, true),\n\n\t\tKeywords: []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 19,
                  "endLine": 53,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n\treturn utils.ValidateWithPaths(r, tps, fps)\n",
                    "rendered": {
                      "text": "\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n\treturn utils.ValidateWithPaths(r, tps, fps)\n",
                      "markdown": "`\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n\treturn utils.ValidateWithPaths(r, tps, fps)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 57,
                  "endLine": 52,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n",
                      "markdown": "`\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 19,
                  "endLine": 52,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n",
                      "markdown": "`\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 57,
                  "endLine": 51,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n",
                      "markdown": "`\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 39,
                  "endLine": 51,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n",
                    "rendered": {
                      "text": "\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n",
                      "markdown": "`\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n\t\t\"file.hcl\":     `password = \"${aws_db_instance.default.password}\"`,\n\t\t\"unrelated.js\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 15,
                  "endLine": 48,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t// Example from: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server.html\n\t\t\"file.tf\": \"administrator_login_password = \" + `\"thisIsDog11\"`,\n\t\t// https://registry.terraform.io/providers/petoju/mysql/latest/docs\n\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n",
                    "rendered": {
                      "text": "\t\t// Example from: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server.html\n\t\t\"file.tf\": \"administrator_login_password = \" + `\"thisIsDog11\"`,\n\t\t// https://registry.terraform.io/providers/petoju/mysql/latest/docs\n\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n",
                      "markdown": "`\t\t// Example from: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server.html\n\t\t\"file.tf\": \"administrator_login_password = \" + `\"thisIsDog11\"`,\n\t\t// https://registry.terraform.io/providers/petoju/mysql/latest/docs\n\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n\tfps := map[string]string{\n\t\t\"file.tf\":      \"administrator_login_password = var.db_password\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 34,
                  "endLine": 46,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\ttps := map[string]string{\n\t\t// Example from: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server.html\n\t\t\"file.tf\": \"administrator_login_password = \" + `\"thisIsDog11\"`,\n\t\t// https://registry.terraform.io/providers/petoju/mysql/latest/docs\n\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n",
                    "rendered": {
                      "text": "\n\ttps := map[string]string{\n\t\t// Example from: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server.html\n\t\t\"file.tf\": \"administrator_login_password = \" + `\"thisIsDog11\"`,\n\t\t// https://registry.terraform.io/providers/petoju/mysql/latest/docs\n\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n",
                      "markdown": "`\n\ttps := map[string]string{\n\t\t// Example from: https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/sql_server.html\n\t\t\"file.tf\": \"administrator_login_password = \" + `\"thisIsDog11\"`,\n\t\t// https://registry.terraform.io/providers/petoju/mysql/latest/docs\n\t\t\"file.hcl\": \"password       = \" + `\"rootpasswd\"`,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 29,
                  "endLine": 38,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n\t\tRuleID:      \"hashicorp-tf-password\",\n\t\tRegex:       utils.GenerateSemiGenericRegex(keywords, fmt.Sprintf(`\"%s\"`, utils.AlphaNumericExtended(\"8,20\")), true),\n\t\tKeywords:    keywords,\n\t\tPath:        regexp.MustCompile(`(?i)\\.(?:tf|hcl)$`),\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n\t\tRuleID:      \"hashicorp-tf-password\",\n\t\tRegex:       utils.GenerateSemiGenericRegex(keywords, fmt.Sprintf(`\"%s\"`, utils.AlphaNumericExtended(\"8,20\")), true),\n\t\tKeywords:    keywords,\n\t\tPath:        regexp.MustCompile(`(?i)\\.(?:tf|hcl)$`),\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n\t\tRuleID:      \"hashicorp-tf-password\",\n\t\tRegex:       utils.GenerateSemiGenericRegex(keywords, fmt.Sprintf(`\"%s\"`, utils.AlphaNumericExtended(\"8,20\")), true),\n\t\tKeywords:    keywords,\n\t\tPath:        regexp.MustCompile(`(?i)\\.(?:tf|hcl)$`),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 49,
                  "endLine": 37,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n\t\tRuleID:      \"hashicorp-tf-password\",\n\t\tRegex:       utils.GenerateSemiGenericRegex(keywords, fmt.Sprintf(`\"%s\"`, utils.AlphaNumericExtended(\"8,20\")), true),\n\t\tKeywords:    keywords,\n",
                    "rendered": {
                      "text": "\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n\t\tRuleID:      \"hashicorp-tf-password\",\n\t\tRegex:       utils.GenerateSemiGenericRegex(keywords, fmt.Sprintf(`\"%s\"`, utils.AlphaNumericExtended(\"8,20\")), true),\n\t\tKeywords:    keywords,\n",
                      "markdown": "`\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n\t\tRuleID:      \"hashicorp-tf-password\",\n\t\tRegex:       utils.GenerateSemiGenericRegex(keywords, fmt.Sprintf(`\"%s\"`, utils.AlphaNumericExtended(\"8,20\")), true),\n\t\tKeywords:    keywords,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 55,
                  "endLine": 34,
                  "endColumn": 63,
                  "snippet": {
                    "text": "}\n\nfunc HashicorpField() *config.Rule {\n\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n",
                    "rendered": {
                      "text": "}\n\nfunc HashicorpField() *config.Rule {\n\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n",
                      "markdown": "`}\n\nfunc HashicorpField() *config.Rule {\n\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 43,
                  "endLine": 34,
                  "endColumn": 51,
                  "snippet": {
                    "text": "}\n\nfunc HashicorpField() *config.Rule {\n\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n",
                    "rendered": {
                      "text": "}\n\nfunc HashicorpField() *config.Rule {\n\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n",
                      "markdown": "`}\n\nfunc HashicorpField() *config.Rule {\n\tkeywords := []string{\"administrator_login_password\", \"password\"}\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/bittrex.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 12,
                  "endLine": 25,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc BittrexSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Bittrex Secret Key, potentially compromising cryptocurrency transactions and financial security.\",\n",
                    "rendered": {
                      "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc BittrexSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Bittrex Secret Key, potentially compromising cryptocurrency transactions and financial security.\",\n",
                      "markdown": "`\treturn utils.Validate(r, tps, nil)\n}\n\nfunc BittrexSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Detected a Bittrex Secret Key, potentially compromising cryptocurrency transactions and financial security.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/zendesk.go"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 12,
                  "endLine": 9,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc ZendeskSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"zendesk-secret-key\",\n",
                    "rendered": {
                      "text": "\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc ZendeskSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"zendesk-secret-key\",\n",
                      "markdown": "`\t\"github.com/zricethezav/gitleaks/v8/config\"\n)\n\nfunc ZendeskSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"zendesk-secret-key\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/generic_with_py_path.toml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 4,
                  "endLine": 25,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t'''setting''',\n\t'''load''',\n\t'''token''',\n\t'''password''',\n\t'''secret''',\n\t'''api\\_key''',\n\t'''apikey''',\n",
                    "rendered": {
                      "text": "\t'''setting''',\n\t'''load''',\n\t'''token''',\n\t'''password''',\n\t'''secret''',\n\t'''api\\_key''',\n\t'''apikey''',\n",
                      "markdown": "`\t'''setting''',\n\t'''load''',\n\t'''token''',\n\t'''password''',\n\t'''secret''',\n\t'''api\\_key''',\n\t'''apikey''',\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/generic_with_py_path.toml"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 38,
                  "endLine": 6,
                  "endColumn": 46,
                  "snippet": {
                    "text": "[[rules]]\ndescription = \"Generic API Key\"\nid = \"generic-api-key\"\nregex = '''(?i)((key|api|token|secret|password)[a-z0-9_ .\\-,]{0,25})(=|>|:=|\\|\\|:|<=|=>|:).{0,5}['\\\"]([0-9a-zA-Z\\-_=]{8,64})['\\\"]'''\npath = '''.py'''\nentropy = 3.7\nsecretGroup = 4\n",
                    "rendered": {
                      "text": "[[rules]]\ndescription = \"Generic API Key\"\nid = \"generic-api-key\"\nregex = '''(?i)((key|api|token|secret|password)[a-z0-9_ .\\-,]{0,25})(=|>|:=|\\|\\|:|<=|=>|:).{0,5}['\\\"]([0-9a-zA-Z\\-_=]{8,64})['\\\"]'''\npath = '''.py'''\nentropy = 3.7\nsecretGroup = 4\n",
                      "markdown": "`[[rules]]\ndescription = \"Generic API Key\"\nid = \"generic-api-key\"\nregex = '''(?i)((key|api|token|secret|password)[a-z0-9_ .\\-,]{0,25})(=|>|:=|\\|\\|:|<=|=>|:).{0,5}['\\\"]([0-9a-zA-Z\\-_=]{8,64})['\\\"]'''\npath = '''.py'''\nentropy = 3.7\nsecretGroup = 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/repos/staged/dotGit/logs/refs/remotes/origin/api-pkg"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 132,
                  "endLine": 1,
                  "endColumn": 140,
                  "snippet": {
                    "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896552 -0500\tupdate by push\n",
                    "rendered": {
                      "text": "0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896552 -0500\tupdate by push\n",
                      "markdown": "`0000000000000000000000000000000000000000 a122b33c6bad3ee54724f52f2caad385ab1982ab Zach Rice <zricer@protonmail.com> 1635896552 -0500\tupdate by push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/report/finding_test.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ttests := map[string]struct {\n\t\tsecret  string\n\t\tpercent uint\n\t\texpect  string\n\t}{\n\t\t\"normal masking\":  {secret: \"secret\", percent: 75, expect: \"se...\"},\n\t\t\"high masking\":    {secret: \"secret\", percent: 90, expect: \"s...\"},\n",
                    "rendered": {
                      "text": "\ttests := map[string]struct {\n\t\tsecret  string\n\t\tpercent uint\n\t\texpect  string\n\t}{\n\t\t\"normal masking\":  {secret: \"secret\", percent: 75, expect: \"se...\"},\n\t\t\"high masking\":    {secret: \"secret\", percent: 90, expect: \"s...\"},\n",
                      "markdown": "`\ttests := map[string]struct {\n\t\tsecret  string\n\t\tpercent uint\n\t\texpect  string\n\t}{\n\t\t\"normal masking\":  {secret: \"secret\", percent: 75, expect: \"se...\"},\n\t\t\"high masking\":    {secret: \"secret\", percent: 90, expect: \"s...\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/report/finding_test.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ttests := map[string]struct {\n\t\tfinding Finding\n\t\tpercent uint\n\t\texpect  Finding\n\t}{\n\t\t\"normal secret\": {\n\t\t\tfinding: Finding{Match: \"line containing secret\", Secret: \"secret\"},\n",
                    "rendered": {
                      "text": "\ttests := map[string]struct {\n\t\tfinding Finding\n\t\tpercent uint\n\t\texpect  Finding\n\t}{\n\t\t\"normal secret\": {\n\t\t\tfinding: Finding{Match: \"line containing secret\", Secret: \"secret\"},\n",
                      "markdown": "`\ttests := map[string]struct {\n\t\tfinding Finding\n\t\tpercent uint\n\t\texpect  Finding\n\t}{\n\t\t\"normal secret\": {\n\t\t\tfinding: Finding{Match: \"line containing secret\", Secret: \"secret\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.gitleaksignore"
                },
                "region": {
                  "startLine": 661,
                  "startColumn": 26,
                  "endLine": 661,
                  "endColumn": 36,
                  "snippet": {
                    "text": "README.md:aws-access-token:204\nREADME.md:aws-access-token:205\nREADME.md:aws-access-token:244\ncmd/generate/config/rules/privatekey.go:private-key:19\ncmd/generate/config/rules/generic.go:clojars-api-token:43\ncmd/generate/config/rules/generic.go:generic-api-key:45\ncmd/generate/config/rules/generic.go:generic-api-key:46\n",
                    "rendered": {
                      "text": "README.md:aws-access-token:204\nREADME.md:aws-access-token:205\nREADME.md:aws-access-token:244\ncmd/generate/config/rules/privatekey.go:private-key:19\ncmd/generate/config/rules/generic.go:clojars-api-token:43\ncmd/generate/config/rules/generic.go:generic-api-key:45\ncmd/generate/config/rules/generic.go:generic-api-key:46\n",
                      "markdown": "`README.md:aws-access-token:204\nREADME.md:aws-access-token:205\nREADME.md:aws-access-token:244\ncmd/generate/config/rules/privatekey.go:private-key:19\ncmd/generate/config/rules/generic.go:clojars-api-token:43\ncmd/generate/config/rules/generic.go:generic-api-key:45\ncmd/generate/config/rules/generic.go:generic-api-key:46\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.gitleaksignore"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 67,
                  "endLine": 23,
                  "endColumn": 77,
                  "snippet": {
                    "text": "b4630b8fcc385ca22e8544f9b:detect/detect_test.go:sidekiq-secret:142\n31650f01e76858ce7a0490943426e84a0824bbc8:config/config_test.go:aws-access-token:31\n5ed010c944ccc715cb9245abafd4e97d98d75e9f:config/config_test.go:aws-access-token:31\nad7509e3b47331ce9586743ace635422843b695b:cmd/generate/config/rules/privatekey.go:private-key:22\n717cf1b10be1625875199eca8cdf48883348985f:README.md:aws-access-token:23\n3474c58c9e25fe2b1cee855a35bd1bf8a8c0fae8:cmd/generate/config/rules/generic.go:clojars-api-token:38\na42b32bdf11b6f4ea5c32ec76a1731b4b0c5e52a:cmd/generate/config/rules/generic.go:generic-api-key:40\na42b32bdf11b6f",
                    "rendered": {
                      "text": "b4630b8fcc385ca22e8544f9b:detect/detect_test.go:sidekiq-secret:142\n31650f01e76858ce7a0490943426e84a0824bbc8:config/config_test.go:aws-access-token:31\n5ed010c944ccc715cb9245abafd4e97d98d75e9f:config/config_test.go:aws-access-token:31\nad7509e3b47331ce9586743ace635422843b695b:cmd/generate/config/rules/privatekey.go:private-key:22\n717cf1b10be1625875199eca8cdf48883348985f:README.md:aws-access-token:23\n3474c58c9e25fe2b1cee855a35bd1bf8a8c0fae8:cmd/generate/config/rules/generic.go:clojars-api-token:38\na42b32bdf11b6f4ea5c32ec76a1731b4b0c5e52a:cmd/generate/config/rules/generic.go:generic-api-key:40\na42b32bdf11b6f",
                      "markdown": "`b4630b8fcc385ca22e8544f9b:detect/detect_test.go:sidekiq-secret:142\n31650f01e76858ce7a0490943426e84a0824bbc8:config/config_test.go:aws-access-token:31\n5ed010c944ccc715cb9245abafd4e97d98d75e9f:config/config_test.go:aws-access-token:31\nad7509e3b47331ce9586743ace635422843b695b:cmd/generate/config/rules/privatekey.go:private-key:22\n717cf1b10be1625875199eca8cdf48883348985f:README.md:aws-access-token:23\n3474c58c9e25fe2b1cee855a35bd1bf8a8c0fae8:cmd/generate/config/rules/generic.go:clojars-api-token:38\na42b32bdf11b6f4ea5c32ec76a1731b4b0c5e52a:cmd/generate/config/rules/generic.go:generic-api-key:40\na42b32bdf11b6f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 23,
                  "endLine": 63,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t},\n\t\t\"interpolated variables - ucd\": {\n\t\t\tinvalid: []string{`@password@`, `@LDAP_PASS@`},\n\t\t\tvalid:   []string{`@username@mastodon.example`},\n\t\t},\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t},\n\t\t\"interpolated variables - ucd\": {\n\t\t\tinvalid: []string{`@password@`, `@LDAP_PASS@`},\n\t\t\tvalid:   []string{`@username@mastodon.example`},\n\t\t},\n\t}\n",
                      "markdown": "`\t\t\t},\n\t\t},\n\t\t\"interpolated variables - ucd\": {\n\t\t\tinvalid: []string{`@password@`, `@LDAP_PASS@`},\n\t\t\tvalid:   []string{`@username@mastodon.example`},\n\t\t},\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 23,
                  "endLine": 49,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t},\n\t\t\"interpolated variables - nuget\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t\"interpolated variables - nuget\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n",
                      "markdown": "`\t\t},\n\t\t\"interpolated variables - nuget\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 9,
                  "endLine": 49,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\t},\n\t\t\"interpolated variables - nuget\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t\"interpolated variables - nuget\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n",
                      "markdown": "`\t\t},\n\t\t\"interpolated variables - nuget\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 64,
                  "endLine": 29,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 36,
                  "endLine": 29,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 19,
                  "endLine": 29,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t},\n\t\t\"interpolated variables - ansible\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{{ x }}`, `{{ password }}`, `{{password}}`, `{{ data.proxy_password }}`,\n\t\t\t\t`{{ dict1 | ansible.builtin.combine(dict2) }}`,\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 65,
                  "endLine": 24,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n",
                    "rendered": {
                      "text": "\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n",
                      "markdown": "`\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 51,
                  "endLine": 24,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n",
                    "rendered": {
                      "text": "\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n",
                      "markdown": "`\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 33,
                  "endLine": 24,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n",
                    "rendered": {
                      "text": "\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n",
                      "markdown": "`\t\t\tvalid: []string{`aaaaaaaaaaaaaaaaaaabaa`, `pas*************d`},\n\t\t},\n\t\t\"environment variables\": {\n\t\t\tinvalid: []string{`$2`, `$GIT_PASSWORD`, `${GIT_PASSWORD}`, `$password`},\n\t\t\tvalid:   []string{`$yP@R.@=ibxI`, `$2a6WCust9aE`, `${not_complete1`},\n\t\t},\n\t\t\"interpolated variables - ansible\": {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 34,
                  "endLine": 57,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t\t`%b`, `%c`, `%d`, `% d`, `%e`, `%E`, `%f`, `%F`, `%g`, `%G`, `%o`, `%O`, `%p`, `%q`, `%-s`, `%s`, `%t`, `%T`, `%U`, `%#U`, `%+v`, `%#v`, `%v`, `%x`, `%X`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - python\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{}`, `{0}`, `{10}`,\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t`%b`, `%c`, `%d`, `% d`, `%e`, `%E`, `%f`, `%F`, `%g`, `%G`, `%o`, `%O`, `%p`, `%q`, `%-s`, `%s`, `%t`, `%T`, `%U`, `%#U`, `%+v`, `%#v`, `%v`, `%x`, `%X`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - python\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{}`, `{0}`, `{10}`,\n\t\t\t},\n",
                      "markdown": "`\t\t\t\t`%b`, `%c`, `%d`, `% d`, `%e`, `%E`, `%f`, `%F`, `%g`, `%G`, `%o`, `%O`, `%p`, `%q`, `%-s`, `%s`, `%t`, `%T`, `%U`, `%#U`, `%+v`, `%#v`, `%v`, `%x`, `%X`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - python\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`{}`, `{0}`, `{10}`,\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/base/config_test.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 34,
                  "endLine": 52,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%b`, `%c`, `%d`, `% d`, `%e`, `%E`, `%f`, `%F`, `%g`, `%G`, `%o`, `%O`, `%p`, `%q`, `%-s`, `%s`, `%t`, `%T`, `%U`, `%#U`, `%+v`, `%#v`, `%v`, `%x`, `%X`,\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%b`, `%c`, `%d`, `% d`, `%e`, `%E`, `%f`, `%F`, `%g`, `%G`, `%o`, `%O`, `%p`, `%q`, `%-s`, `%s`, `%t`, `%T`, `%U`, `%#U`, `%+v`, `%#v`, `%v`, `%x`, `%X`,\n\t\t\t},\n",
                      "markdown": "`\t\t\t\t`%MY_PASSWORD%`, `%password%`,\n\t\t\t},\n\t\t},\n\t\t\"interpolated variables - string fmt - golang\": {\n\t\t\tinvalid: []string{\n\t\t\t\t`%b`, `%c`, `%d`, `% d`, `%e`, `%E`, `%f`, `%F`, `%g`, `%G`, `%o`, `%O`, `%p`, `%q`, `%-s`, `%s`, `%t`, `%T`, `%U`, `%#U`, `%+v`, `%#v`, `%v`, `%x`, `%X`,\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/snyk.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 9,
                  "endLine": 37,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t`SNYK_TOKEN ?= \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,      // gitleaks:allow\n\t\t`SNYK_API_KEY ?= \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,    // gitleaks:allow\n\t\t`SNYK_API_TOKEN = \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,   // gitleaks:allow\n\t\t`SNYK_OAUTH_TOKEN = \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`, // gitleaks:allow\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                    "rendered": {
                      "text": "\t\t`SNYK_TOKEN ?= \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,      // gitleaks:allow\n\t\t`SNYK_API_KEY ?= \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,    // gitleaks:allow\n\t\t`SNYK_API_TOKEN = \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,   // gitleaks:allow\n\t\t`SNYK_OAUTH_TOKEN = \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`, // gitleaks:allow\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n",
                      "markdown": "`\t\t`SNYK_TOKEN ?= \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,      // gitleaks:allow\n\t\t`SNYK_API_KEY ?= \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,    // gitleaks:allow\n\t\t`SNYK_API_TOKEN = \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`,   // gitleaks:allow\n\t\t`SNYK_OAUTH_TOKEN = \"12345678-ABCD-ABCD-ABCD-1234567890AB\"`, // gitleaks:allow\n\t}\n\treturn utils.Validate(r, tps, nil)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/snyk.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\"snyk_key\",\n\t\t\"snyk_api_token\",\n\t\t\"snyk_api_key\",\n\t\t\"snyk_oauth_token\",\n\t}\n\n\t// define rule\n",
                    "rendered": {
                      "text": "\t\t\"snyk_key\",\n\t\t\"snyk_api_token\",\n\t\t\"snyk_api_key\",\n\t\t\"snyk_oauth_token\",\n\t}\n\n\t// define rule\n",
                      "markdown": "`\t\t\"snyk_key\",\n\t\t\"snyk_api_token\",\n\t\t\"snyk_api_key\",\n\t\t\"snyk_oauth_token\",\n\t}\n\n\t// define rule\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/finicity.go"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 94,
                  "endLine": 12,
                  "endColumn": 103,
                  "snippet": {
                    "text": "func FinicityClientSecret() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Finicity Client Secret, which could lead to compromised financial service integrations and data breaches.\",\n\t\tRuleID:      \"finicity-client-secret\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"finicity\"}, utils.AlphaNumeric(\"20\"), true),\n\n",
                    "rendered": {
                      "text": "func FinicityClientSecret() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Finicity Client Secret, which could lead to compromised financial service integrations and data breaches.\",\n\t\tRuleID:      \"finicity-client-secret\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"finicity\"}, utils.AlphaNumeric(\"20\"), true),\n\n",
                      "markdown": "`func FinicityClientSecret() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Identified a Finicity Client Secret, which could lead to compromised financial service integrations and data breaches.\",\n\t\tRuleID:      \"finicity-client-secret\",\n\t\tRegex:       utils.GenerateSemiGenericRegex([]string{\"finicity\"}, utils.AlphaNumeric(\"20\"), true),\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/kucoin.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 11,
                  "endLine": 28,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc KucoinSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"kucoin-secret-key\",\n",
                    "rendered": {
                      "text": "\treturn utils.Validate(r, tps, nil)\n}\n\nfunc KucoinSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"kucoin-secret-key\",\n",
                      "markdown": "`\treturn utils.Validate(r, tps, nil)\n}\n\nfunc KucoinSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"kucoin-secret-key\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/config.tmpl"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# This file has been auto-generated. Do not edit manually.\n# If you would like to contribute new rules, please use\n# cmd/generate/config/main.go and follow the contributing guidelines\n# at https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md\n\n# This is the default gitleaks configuration file.\n# Rules and allowlists are defined within this file.\n",
                    "rendered": {
                      "text": "# This file has been auto-generated. Do not edit manually.\n# If you would like to contribute new rules, please use\n# cmd/generate/config/main.go and follow the contributing guidelines\n# at https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md\n\n# This is the default gitleaks configuration file.\n# Rules and allowlists are defined within this file.\n",
                      "markdown": "`# This file has been auto-generated. Do not edit manually.\n# If you would like to contribute new rules, please use\n# cmd/generate/config/main.go and follow the contributing guidelines\n# at https://github.com/gitleaks/gitleaks/blob/master/CONTRIBUTING.md\n\n# This is the default gitleaks configuration file.\n# Rules and allowlists are defined within this file.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/base64_encoded.toml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 23,
                  "endLine": 29,
                  "endColumn": 27,
                  "snippet": {
                    "text": "[[rules]]\n  id = 'aws-iam-unique-identifier'\n  description = 'AWS IAM Unique Identifier'\n  # The funky not group at the beginning consists of ascii ranges\n  regex = '''(?:^|[^!$-&\\(-9<>-~])((?:A3T[A-Z0-9]|ACCA|ABIA|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16})\\b'''\n  tags = ['aws', 'identifier']\n  entropy = 3.2\n",
                    "rendered": {
                      "text": "[[rules]]\n  id = 'aws-iam-unique-identifier'\n  description = 'AWS IAM Unique Identifier'\n  # The funky not group at the beginning consists of ascii ranges\n  regex = '''(?:^|[^!$-&\\(-9<>-~])((?:A3T[A-Z0-9]|ACCA|ABIA|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16})\\b'''\n  tags = ['aws', 'identifier']\n  entropy = 3.2\n",
                      "markdown": "`[[rules]]\n  id = 'aws-iam-unique-identifier'\n  description = 'AWS IAM Unique Identifier'\n  # The funky not group at the beginning consists of ascii ranges\n  regex = '''(?:^|[^!$-&\\(-9<>-~])((?:A3T[A-Z0-9]|ACCA|ABIA|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16})\\b'''\n  tags = ['aws', 'identifier']\n  entropy = 3.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/testdata/config/base64_encoded.toml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 23,
                  "endLine": 1,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# We want to be able to find this key regardless if it's b64 encoded or not\n[[rules]]\n  id = 'private-key'\n  description = 'Private Key'\n",
                    "rendered": {
                      "text": "# We want to be able to find this key regardless if it's b64 encoded or not\n[[rules]]\n  id = 'private-key'\n  description = 'Private Key'\n",
                      "markdown": "`# We want to be able to find this key regardless if it's b64 encoded or not\n[[rules]]\n  id = 'private-key'\n  description = 'Private Key'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/.github/workflows/test.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 33,
                  "endLine": 29,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        run: make test\n\n      - name: Validate Config\n        run: go generate ./... && git diff --exit-code\n",
                    "rendered": {
                      "text": "        run: make test\n\n      - name: Validate Config\n        run: go generate ./... && git diff --exit-code\n",
                      "markdown": "`        run: make test\n\n      - name: Validate Config\n        run: go generate ./... && git diff --exit-code\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 8,
                  "endColumn": 28,
                  "snippet": {
                    "text": "CGO_ENABLED=0 go build -o bin/gitleaks -ldflags \"-X=\"github.com/zricethezav/gitleaks/v8/cmd.Version=${VERSION}\n\nFROM alpine:3.19\nRUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n",
                    "rendered": {
                      "text": "CGO_ENABLED=0 go build -o bin/gitleaks -ldflags \"-X=\"github.com/zricethezav/gitleaks/v8/cmd.Version=${VERSION}\n\nFROM alpine:3.19\nRUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n",
                      "markdown": "`CGO_ENABLED=0 go build -o bin/gitleaks -ldflags \"-X=\"github.com/zricethezav/gitleaks/v8/cmd.Version=${VERSION}\n\nFROM alpine:3.19\nRUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n\nENTRYPOINT [\"gitleaks\"]\n",
                    "rendered": {
                      "text": "RUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n\nENTRYPOINT [\"gitleaks\"]\n",
                      "markdown": "`RUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n\nENTRYPOINT [\"gitleaks\"]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 22,
                  "endLine": 8,
                  "endColumn": 28,
                  "snippet": {
                    "text": "CGO_ENABLED=0 go build -o bin/gitleaks -ldflags \"-X=\"github.com/zricethezav/gitleaks/v8/cmd.Version=${VERSION}\n\nFROM alpine:3.19\nRUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n",
                    "rendered": {
                      "text": "CGO_ENABLED=0 go build -o bin/gitleaks -ldflags \"-X=\"github.com/zricethezav/gitleaks/v8/cmd.Version=${VERSION}\n\nFROM alpine:3.19\nRUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n",
                      "markdown": "`CGO_ENABLED=0 go build -o bin/gitleaks -ldflags \"-X=\"github.com/zricethezav/gitleaks/v8/cmd.Version=${VERSION}\n\nFROM alpine:3.19\nRUN apk add --no-cache bash git openssh-client\nCOPY --from=build /go/src/github.com/zricethezav/gitleaks/bin/* /usr/bin/\n\nRUN git config --global --add safe.directory '*'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/hashicorp_vault.go"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 34,
                  "endLine": 14,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"vault-service-token\",\n\t\tDescription: \"Identified a Vault Service Token, potentially compromising infrastructure security and access to sensitive credentials.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:hvs\\.[\\w-]{90,120}|s\\.(?i:[a-z0-9]{24}))`, false),\n\t\tEntropy:     3.5,\n\t\tKeywords:    []string{\"hvs\", \"s.\"},\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"vault-service-token\",\n\t\tDescription: \"Identified a Vault Service Token, potentially compromising infrastructure security and access to sensitive credentials.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:hvs\\.[\\w-]{90,120}|s\\.(?i:[a-z0-9]{24}))`, false),\n\t\tEntropy:     3.5,\n\t\tKeywords:    []string{\"hvs\", \"s.\"},\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"vault-service-token\",\n\t\tDescription: \"Identified a Vault Service Token, potentially compromising infrastructure security and access to sensitive credentials.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(?:hvs\\.[\\w-]{90,120}|s\\.(?i:[a-z0-9]{24}))`, false),\n\t\tEntropy:     3.5,\n\t\tKeywords:    []string{\"hvs\", \"s.\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/adobe.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 109,
                  "endLine": 28,
                  "endColumn": 118,
                  "snippet": {
                    "text": "func AdobeClientSecret() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Adobe Client Secret, which, if exposed, could allow unauthorized Adobe service access and data manipulation.\",\n\t\tRuleID:      \"adobe-client-secret\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(p8e-)(?i)[a-z0-9]{32}`, true),\n\t\tKeywords:    []string{\"p8e-\"},\n",
                    "rendered": {
                      "text": "func AdobeClientSecret() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Adobe Client Secret, which, if exposed, could allow unauthorized Adobe service access and data manipulation.\",\n\t\tRuleID:      \"adobe-client-secret\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(p8e-)(?i)[a-z0-9]{32}`, true),\n\t\tKeywords:    []string{\"p8e-\"},\n",
                      "markdown": "`func AdobeClientSecret() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Adobe Client Secret, which, if exposed, could allow unauthorized Adobe service access and data manipulation.\",\n\t\tRuleID:      \"adobe-client-secret\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`(p8e-)(?i)[a-z0-9]{32}`, true),\n\t\tKeywords:    []string{\"p8e-\"},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/huggingface.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 21,
                  "endLine": 62,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n",
                    "rendered": {
                      "text": "\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n",
                      "markdown": "`\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/huggingface.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 118,
                  "endLine": 97,
                  "endColumn": 128,
                  "snippet": {
                    "text": "        hf_token = \"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\"  # Intentionally revealing this key for testing purposes\n        io = gr.load(`,\n\t\t`hf_token = \"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\"  # Intentionally revealing this key for testing purposes`,\n\t\t`\"news_train_dataset = datasets.load_dataset('nlpHakdang/aihub-news30k',  data_files = \\\"train_news_text.csv\\\", use_auth_token='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')\\n\",`,\n\t\t`os.environ['HUGGINGFACEHUB_API_TOKEN'] = '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'`,\n\t\tfmt.Sprintf(\"api_org_%s\", secrets.NewSecret(`[a-zA-Z]{34}`)),\n\t}\n",
                    "rendered": {
                      "text": "        hf_token = \"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\"  # Intentionally revealing this key for testing purposes\n        io = gr.load(`,\n\t\t`hf_token = \"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\"  # Intentionally revealing this key for testing purposes`,\n\t\t`\"news_train_dataset = datasets.load_dataset('nlpHakdang/aihub-news30k',  data_files = \\\"train_news_text.csv\\\", use_auth_token='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')\\n\",`,\n\t\t`os.environ['HUGGINGFACEHUB_API_TOKEN'] = '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'`,\n\t\tfmt.Sprintf(\"api_org_%s\", secrets.NewSecret(`[a-zA-Z]{34}`)),\n\t}\n",
                      "markdown": "`        hf_token = \"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\"  # Intentionally revealing this key for testing purposes\n        io = gr.load(`,\n\t\t`hf_token = \"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\"  # Intentionally revealing this key for testing purposes`,\n\t\t`\"news_train_dataset = datasets.load_dataset('nlpHakdang/aihub-news30k',  data_files = \\\"train_news_text.csv\\\", use_auth_token='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')\\n\",`,\n\t\t`os.environ['HUGGINGFACEHUB_API_TOKEN'] = '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'`,\n\t\tfmt.Sprintf(\"api_org_%s\", secrets.NewSecret(`[a-zA-Z]{34}`)),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/huggingface.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 30,
                  "endLine": 62,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n",
                    "rendered": {
                      "text": "\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n",
                      "markdown": "`\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/huggingface.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 17,
                  "snippet": {
                    "text": "gingface-cli login --token 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`,\n\t\t`huggingface-cli login --token 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`,\n\t\t`-H \"Authorization: Bearer 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\"`,\n\t\t`DEV=1 HF_TOKEN=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 poetry run python app.py`,\n\t\t`use_auth_token='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')`,\n\t\t`CI_HUB_USER_TOKEN = \"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\"`,\n\t\t`- Change line 5 and add your Hugging Face token, that is, instead of 'hf_token = \"ADD_YOUR_HUGGING_FACE_TOKEN_HERE\"', you will need to change it to something like'hf_token = \"hf_qyUEZnpMIz",
                    "rendered": {
                      "text": "gingface-cli login --token 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`,\n\t\t`huggingface-cli login --token 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`,\n\t\t`-H \"Authorization: Bearer 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\"`,\n\t\t`DEV=1 HF_TOKEN=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 poetry run python app.py`,\n\t\t`use_auth_token='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')`,\n\t\t`CI_HUB_USER_TOKEN = \"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\"`,\n\t\t`- Change line 5 and add your Hugging Face token, that is, instead of 'hf_token = \"ADD_YOUR_HUGGING_FACE_TOKEN_HERE\"', you will need to change it to something like'hf_token = \"hf_qyUEZnpMIz",
                      "markdown": "`gingface-cli login --token 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`,\n\t\t`huggingface-cli login --token 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`,\n\t\t`-H \"Authorization: Bearer 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\"`,\n\t\t`DEV=1 HF_TOKEN=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 poetry run python app.py`,\n\t\t`use_auth_token='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')`,\n\t\t`CI_HUB_USER_TOKEN = \"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\"`,\n\t\t`- Change line 5 and add your Hugging Face token, that is, instead of 'hf_token = \"ADD_YOUR_HUGGING_FACE_TOKEN_HERE\"', you will need to change it to something like'hf_token = \"hf_qyUEZnpMIz`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/huggingface.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 14,
                  "endLine": 62,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n",
                    "rendered": {
                      "text": "\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n",
                      "markdown": "`\t\t`                    change_dir(cwd)\n\t\tsubdirs = glob.glob('HF_CAASIMULIAComputeServicesBuildTime.HF*.Linux64')\n\t\tif len(subdirs) == 1:`,\n\t\t`        os.environ.get(\"HF_AUTH_TOKEN\",\n\t\t\"hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),`,\n\t\t`# HuggingFace API Token https://huggingface.co/settings/tokens\n\t\tHUGGINGFACE_API_TOKEN=hf_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/alibaba.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 12,
                  "endLine": 26,
                  "endColumn": 21,
                  "snippet": {
                    "text": "}\n\n// TODO\nfunc AlibabaSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Alibaba Cloud Secret Key, potentially allowing unauthorized operations and data access within Alibaba Cloud.\",\n",
                    "rendered": {
                      "text": "}\n\n// TODO\nfunc AlibabaSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Alibaba Cloud Secret Key, potentially allowing unauthorized operations and data access within Alibaba Cloud.\",\n",
                      "markdown": "`}\n\n// TODO\nfunc AlibabaSecretKey() *config.Rule {\n\t// define rule\n\tr := config.Rule{\n\t\tDescription: \"Discovered a potential Alibaba Cloud Secret Key, potentially allowing unauthorized operations and data access within Alibaba Cloud.\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/cmd/generate/config/rules/sendgrid.go"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 82,
                  "endLine": 13,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"sendgrid-api-token\",\n\t\tDescription: \"Detected a SendGrid API token, posing a risk of unauthorized email service operations and data exposure.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`SG\\.(?i)[a-z0-9=_\\-\\.]{66}`, true),\n\n\t\tKeywords: []string{\n",
                    "rendered": {
                      "text": "\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"sendgrid-api-token\",\n\t\tDescription: \"Detected a SendGrid API token, posing a risk of unauthorized email service operations and data exposure.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`SG\\.(?i)[a-z0-9=_\\-\\.]{66}`, true),\n\n\t\tKeywords: []string{\n",
                      "markdown": "`\t// define rule\n\tr := config.Rule{\n\t\tRuleID:      \"sendgrid-api-token\",\n\t\tDescription: \"Detected a SendGrid API token, posing a risk of unauthorized email service operations and data exposure.\",\n\t\tRegex:       utils.GenerateUniqueTokenRegex(`SG\\.(?i)[a-z0-9=_\\-\\.]{66}`, true),\n\n\t\tKeywords: []string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n\t\t\t\"--staged\", \".\")\n\t}\n\tlog.Debug().Msgf(\"executing: %s\", cmd.String())\n",
                    "rendered": {
                      "text": "\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n\t\t\t\"--staged\", \".\")\n\t}\n\tlog.Debug().Msgf(\"executing: %s\", cmd.String())\n",
                      "markdown": "`\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n\t\t\t\"--staged\", \".\")\n\t}\n\tlog.Debug().Msgf(\"executing: %s\", cmd.String())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "endColumn": 5,
                  "snippet": {
                    "text": "func NewGitDiffCmd(source string, staged bool) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n\t\t\t\"--staged\", \".\")\n",
                    "rendered": {
                      "text": "func NewGitDiffCmd(source string, staged bool) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n\t\t\t\"--staged\", \".\")\n",
                      "markdown": "`func NewGitDiffCmd(source string, staged bool) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n\t\t\t\"--staged\", \".\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 4,
                  "endLine": 88,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// the `func (*DiffFilesCmd) Wait()` error in order to release resources.\nfunc NewGitDiffCmd(source string, staged bool) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n",
                    "rendered": {
                      "text": "// the `func (*DiffFilesCmd) Wait()` error in order to release resources.\nfunc NewGitDiffCmd(source string, staged bool) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n",
                      "markdown": "`// the `func (*DiffFilesCmd) Wait()` error in order to release resources.\nfunc NewGitDiffCmd(source string, staged bool) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\", \".\")\n\tif staged {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"diff\", \"-U0\", \"--no-ext-diff\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\targs = append(args, userArgs...)\n\t\tcmd = exec.Command(\"git\", args...)\n\t} else {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"log\", \"-p\", \"-U0\",\n\t\t\t\"--full-history\", \"--all\")\n\t}\n\n",
                    "rendered": {
                      "text": "\t\targs = append(args, userArgs...)\n\t\tcmd = exec.Command(\"git\", args...)\n\t} else {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"log\", \"-p\", \"-U0\",\n\t\t\t\"--full-history\", \"--all\")\n\t}\n\n",
                      "markdown": "`\t\targs = append(args, userArgs...)\n\t\tcmd = exec.Command(\"git\", args...)\n\t} else {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"log\", \"-p\", \"-U0\",\n\t\t\t\"--full-history\", \"--all\")\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t}\n\n\t\targs = append(args, userArgs...)\n\t\tcmd = exec.Command(\"git\", args...)\n\t} else {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"log\", \"-p\", \"-U0\",\n\t\t\t\"--full-history\", \"--all\")\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\targs = append(args, userArgs...)\n\t\tcmd = exec.Command(\"git\", args...)\n\t} else {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"log\", \"-p\", \"-U0\",\n\t\t\t\"--full-history\", \"--all\")\n",
                      "markdown": "`\t\t}\n\n\t\targs = append(args, userArgs...)\n\t\tcmd = exec.Command(\"git\", args...)\n\t} else {\n\t\tcmd = exec.Command(\"git\", \"-C\", sourceClean, \"log\", \"-p\", \"-U0\",\n\t\t\t\"--full-history\", \"--all\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 4,
                  "endLine": 30,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// the `func (*DiffFilesCmd) Wait()` error in order to release resources.\nfunc NewGitLogCmd(source string, logOpts string) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tif logOpts != \"\" {\n\t\targs := []string{\"-C\", sourceClean, \"log\", \"-p\", \"-U0\"}\n\n",
                    "rendered": {
                      "text": "// the `func (*DiffFilesCmd) Wait()` error in order to release resources.\nfunc NewGitLogCmd(source string, logOpts string) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tif logOpts != \"\" {\n\t\targs := []string{\"-C\", sourceClean, \"log\", \"-p\", \"-U0\"}\n\n",
                      "markdown": "`// the `func (*DiffFilesCmd) Wait()` error in order to release resources.\nfunc NewGitLogCmd(source string, logOpts string) (*GitCmd, error) {\n\tsourceClean := filepath.Clean(source)\n\tvar cmd *exec.Cmd\n\tif logOpts != \"\" {\n\t\targs := []string{\"-C\", sourceClean, \"log\", \"-p\", \"-U0\"}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/sources/git.go"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n// GitCmd helps to work with Git's output.\ntype GitCmd struct {\n\tcmd         *exec.Cmd\n\tdiffFilesCh <-chan *gitdiff.File\n\terrCh       <-chan error\n}\n",
                    "rendered": {
                      "text": "\n// GitCmd helps to work with Git's output.\ntype GitCmd struct {\n\tcmd         *exec.Cmd\n\tdiffFilesCh <-chan *gitdiff.File\n\terrCh       <-chan error\n}\n",
                      "markdown": "`\n// GitCmd helps to work with Git's output.\ntype GitCmd struct {\n\tcmd         *exec.Cmd\n\tdiffFilesCh <-chan *gitdiff.File\n\terrCh       <-chan error\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 2,
                  "endLine": 91,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   validation part. You can use `generateSampleSecret` to create a secret for the\n   true positives (`tps` in the example above) used in `validate`.\n\n1. Update `cmd/generate/config/main.go`. Extend `configRules` slice with\n   the `rules.Beamer(),` in `main()`. Try and keep\n   this alphabetically pretty please.\n\n",
                    "rendered": {
                      "text": "   validation part. You can use `generateSampleSecret` to create a secret for the\n   true positives (`tps` in the example above) used in `validate`.\n\n1. Update `cmd/generate/config/main.go`. Extend `configRules` slice with\n   the `rules.Beamer(),` in `main()`. Try and keep\n   this alphabetically pretty please.\n\n",
                      "markdown": "`   validation part. You can use `generateSampleSecret` to create a secret for the\n   true positives (`tps` in the example above) used in `validate`.\n\n1. Update `cmd/generate/config/main.go`. Extend `configRules` slice with\n   the `rules.Beamer(),` in `main()`. Try and keep\n   this alphabetically pretty please.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gitleaks.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 13,
                  "endLine": 25,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n1. Create a `cmd/generate/config/rules/{provider}.go` file.\n   This file is used to generate a new Gitleaks rule.\n   Let's look at `beamer.go` for example. Comments have been added for context.\n\n   ```golang\n   func Beamer() *config.Rule {\n",
                    "rendered": {
                      "text": "\n1. Create a `cmd/generate/config/rules/{provider}.go` file.\n   This file is used to generate a new Gitleaks rule.\n   Let's look at `beamer.go` for example. Comments have been added for context.\n\n   ```golang\n   func Beamer() *config.Rule {\n",
                      "markdown": "`\n1. Create a `cmd/generate/config/rules/{provider}.go` file.\n   This file is used to generate a new Gitleaks rule.\n   Let's look at `beamer.go` for example. Comments have been added for context.\n\n   ```golang\n   func Beamer() *config.Rule {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}