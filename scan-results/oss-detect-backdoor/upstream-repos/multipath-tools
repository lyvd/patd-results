{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 12,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 34,
                  "endLine": 238,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 9,
                  "endLine": 189,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 4,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 35,
                  "endLine": 330,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 59,
                  "endLine": 290,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 30,
                  "endLine": 204,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 63,
                  "endLine": 159,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 51,
                  "endLine": 142,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 21,
                  "endLine": 126,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 43,
                  "endLine": 100,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 7,
                  "endLine": 88,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-2.0"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 63,
                  "endLine": 54,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 59,
                  "endLine": 470,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 30,
                  "endLine": 381,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 57,
                  "endLine": 307,
                  "snippet": {
                    "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 55,
                  "endLine": 299,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 21,
                  "endLine": 203,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 58,
                  "endLine": 172,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 11,
                  "endLine": 159,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 52,
                  "endLine": 139,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 12,
                  "endLine": 426,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 50,
                  "endLine": 414,
                  "endColumn": 56,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 10,
                  "endLine": 366,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 12,
                  "endLine": 347,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 62,
                  "endLine": 299,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 32,
                  "endLine": 224,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 27,
                  "snippet": {
                    "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                    "rendered": {
                      "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                      "markdown": "`introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.1"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 8,
                  "endLine": 30,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 47,
                  "endLine": 340,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n",
                    "rendered": {
                      "text": "  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n",
                      "markdown": "`  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 631,
                  "startColumn": 58,
                  "endLine": 631,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 13,
                  "endLine": 547,
                  "endColumn": 17,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 55,
                  "endLine": 453,
                  "endColumn": 64,
                  "snippet": {
                    "text": "propagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\n",
                    "rendered": {
                      "text": "propagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\n",
                      "markdown": "`propagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 51,
                  "endLine": 354,
                  "endColumn": 55,
                  "snippet": {
                    "text": "under those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\n",
                    "rendered": {
                      "text": "under those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\n",
                      "markdown": "`under those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 62,
                  "endLine": 290,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\n",
                    "rendered": {
                      "text": "\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\n",
                      "markdown": "`\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 63,
                  "endLine": 277,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n",
                    "rendered": {
                      "text": "\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n",
                      "markdown": "`\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 46,
                  "endLine": 267,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n",
                    "rendered": {
                      "text": "    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n",
                      "markdown": "`    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 28,
                  "endLine": 259,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n",
                    "rendered": {
                      "text": "\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n",
                      "markdown": "`\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 3,
                  "endLine": 170,
                  "endColumn": 12,
                  "snippet": {
                    "text": "of having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n",
                    "rendered": {
                      "text": "of having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n",
                      "markdown": "`of having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 41,
                  "endLine": 144,
                  "endColumn": 50,
                  "snippet": {
                    "text": "includes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\n",
                    "rendered": {
                      "text": "includes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\n",
                      "markdown": "`includes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 70,
                  "endLine": 137,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\n",
                    "rendered": {
                      "text": "\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\n",
                      "markdown": "`\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 35,
                  "endLine": 566,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 6,
                  "endLine": 448,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n",
                    "rendered": {
                      "text": "\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n",
                      "markdown": "`\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 424,
                  "startColumn": 53,
                  "endLine": 424,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n",
                    "rendered": {
                      "text": "\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n",
                      "markdown": "`\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 8,
                  "endLine": 401,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\n",
                    "rendered": {
                      "text": "  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\n",
                      "markdown": "`  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 31,
                  "endLine": 380,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n",
                    "rendered": {
                      "text": "    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n",
                      "markdown": "`    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 60,
                  "endLine": 283,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n",
                    "rendered": {
                      "text": "    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n",
                      "markdown": "`    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/GPL-3.0"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 63,
                  "endLine": 63,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n",
                    "rendered": {
                      "text": "\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n",
                      "markdown": "`\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 59,
                  "endLine": 449,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 30,
                  "endLine": 360,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 57,
                  "endLine": 286,
                  "snippet": {
                    "text": "    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 21,
                  "endLine": 190,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 58,
                  "endLine": 159,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 11,
                  "endLine": 146,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 52,
                  "endLine": 126,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 24,
                  "endLine": 60,
                  "endColumn": 28,
                  "snippet": {
                    "text": "software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n",
                    "rendered": {
                      "text": "software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n",
                      "markdown": "`software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 12,
                  "endLine": 405,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 51,
                  "endLine": 393,
                  "endColumn": 57,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 10,
                  "endLine": 345,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 12,
                  "endLine": 326,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 32,
                  "endLine": 211,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 12,
                  "endLine": 56,
                  "endColumn": 18,
                  "snippet": {
                    "text": "the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n",
                    "rendered": {
                      "text": "the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n",
                      "markdown": "`the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/LICENSES/LGPL-2.0"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/prioritizers/Makefile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 41,
                  "endLine": 13,
                  "endColumn": 49,
                  "snippet": {
                    "text": "LDFLAGS += -L$(multipathdir) -L$(mpathutildir)\nLIBDEPS = -lmultipath -lmpathutil -lm -lpthread -lrt\n\n# If you add or remove a prioritizer also update multipath/multipath.conf.5\nLIBS = \\\n\tlibprioalua.so \\\n\tlibprioconst.so \\\n",
                    "rendered": {
                      "text": "LDFLAGS += -L$(multipathdir) -L$(mpathutildir)\nLIBDEPS = -lmultipath -lmpathutil -lm -lpthread -lrt\n\n# If you add or remove a prioritizer also update multipath/multipath.conf.5\nLIBS = \\\n\tlibprioalua.so \\\n\tlibprioconst.so \\\n",
                      "markdown": "`LDFLAGS += -L$(multipathdir) -L$(mpathutildir)\nLIBDEPS = -lmultipath -lmpathutil -lm -lpthread -lrt\n\n# If you add or remove a prioritizer also update multipath/multipath.conf.5\nLIBS = \\\n\tlibprioalua.so \\\n\tlibprioconst.so \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/hp_sw.c"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 17,
                  "endLine": 118,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tio_hdr.dxfer_direction = SG_DXFER_NONE;\n\tio_hdr.cmdp = turCmdBlk;\n\tio_hdr.sbp = sense_buffer;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = 0;\n\n\tif (ioctl(fd, SG_IO, &io_hdr) < 0)\n",
                    "rendered": {
                      "text": "\tio_hdr.dxfer_direction = SG_DXFER_NONE;\n\tio_hdr.cmdp = turCmdBlk;\n\tio_hdr.sbp = sense_buffer;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = 0;\n\n\tif (ioctl(fd, SG_IO, &io_hdr) < 0)\n",
                      "markdown": "`\tio_hdr.dxfer_direction = SG_DXFER_NONE;\n\tio_hdr.cmdp = turCmdBlk;\n\tio_hdr.sbp = sense_buffer;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = 0;\n\n\tif (ioctl(fd, SG_IO, &io_hdr) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/hp_sw.c"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tio_hdr.dxferp = resp;\n\tio_hdr.cmdp = inqCmdBlk;\n\tio_hdr.sbp = sense_b;\n\tio_hdr.timeout = timeout * 1000;\n\n\tif (ioctl(sg_fd, SG_IO, &io_hdr) < 0) {\n\t\tif (errno == ENOTTY)\n",
                    "rendered": {
                      "text": "\tio_hdr.dxferp = resp;\n\tio_hdr.cmdp = inqCmdBlk;\n\tio_hdr.sbp = sense_b;\n\tio_hdr.timeout = timeout * 1000;\n\n\tif (ioctl(sg_fd, SG_IO, &io_hdr) < 0) {\n\t\tif (errno == ENOTTY)\n",
                      "markdown": "`\tio_hdr.dxferp = resp;\n\tio_hdr.cmdp = inqCmdBlk;\n\tio_hdr.sbp = sense_b;\n\tio_hdr.timeout = timeout * 1000;\n\n\tif (ioctl(sg_fd, SG_IO, &io_hdr) < 0) {\n\t\tif (errno == ENOTTY)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/Makefile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 37,
                  "endLine": 12,
                  "endColumn": 45,
                  "snippet": {
                    "text": "LDFLAGS += -L$(multipathdir) -L$(mpathutildir)\nLIBDEPS = -lmultipath -lmpathutil -laio -lpthread -lrt\n\n# If you add or remove a checker also update multipath/multipath.conf.5\nLIBS= \\\n\tlibcheckcciss_tur.so \\\n\tlibcheckreadsector0.so \\\n",
                    "rendered": {
                      "text": "LDFLAGS += -L$(multipathdir) -L$(mpathutildir)\nLIBDEPS = -lmultipath -lmpathutil -laio -lpthread -lrt\n\n# If you add or remove a checker also update multipath/multipath.conf.5\nLIBS= \\\n\tlibcheckcciss_tur.so \\\n\tlibcheckreadsector0.so \\\n",
                      "markdown": "`LDFLAGS += -L$(multipathdir) -L$(mpathutildir)\nLIBDEPS = -lmultipath -lmpathutil -laio -lpthread -lrt\n\n# If you add or remove a checker also update multipath/multipath.conf.5\nLIBS= \\\n\tlibcheckcciss_tur.so \\\n\tlibcheckreadsector0.so \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/file.c"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 7,
                  "endLine": 87,
                  "endColumn": 14,
                  "snippet": {
                    "text": "{\n\tstruct sigaction act, oldact;\n\tsigset_t set, oldset;\n\tstruct flock lock;\n\tint err;\n\n\tmemset(&lock, 0, sizeof(lock));\n",
                    "rendered": {
                      "text": "{\n\tstruct sigaction act, oldact;\n\tsigset_t set, oldset;\n\tstruct flock lock;\n\tint err;\n\n\tmemset(&lock, 0, sizeof(lock));\n",
                      "markdown": "`{\n\tstruct sigaction act, oldact;\n\tsigset_t set, oldset;\n\tstruct flock lock;\n\tint err;\n\n\tmemset(&lock, 0, sizeof(lock));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 617,
                  "startColumn": 1,
                  "endLine": 617,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tmpp_ud = get_udev_for_mpp(cmpp);\n\tif (!mpp_ud)\n\t\treturn true;\n\tenv = udev_device_get_property_value(mpp_ud, \"MPATH_DEVICE_READY\");\n\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n",
                    "rendered": {
                      "text": "\tmpp_ud = get_udev_for_mpp(cmpp);\n\tif (!mpp_ud)\n\t\treturn true;\n\tenv = udev_device_get_property_value(mpp_ud, \"MPATH_DEVICE_READY\");\n\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n",
                      "markdown": "`\tmpp_ud = get_udev_for_mpp(cmpp);\n\tif (!mpp_ud)\n\t\treturn true;\n\tenv = udev_device_get_property_value(mpp_ud, \"MPATH_DEVICE_READY\");\n\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 2,
                  "endLine": 529,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t * path is in \"maybe\" state and timer is running\n\t\t * Send uevent now (see multipath.rules).\n\t\t */\n\t\tenv = udev_device_get_property_value(\n\t\t\tpp->udev, \"FIND_MULTIPATHS_WAIT_UNTIL\");\n\t\tif (env == NULL || !strcmp(env, \"0\"))\n\t\t\treturn;\n",
                    "rendered": {
                      "text": "\t\t * path is in \"maybe\" state and timer is running\n\t\t * Send uevent now (see multipath.rules).\n\t\t */\n\t\tenv = udev_device_get_property_value(\n\t\t\tpp->udev, \"FIND_MULTIPATHS_WAIT_UNTIL\");\n\t\tif (env == NULL || !strcmp(env, \"0\"))\n\t\t\treturn;\n",
                      "markdown": "`\t\t * path is in \"maybe\" state and timer is running\n\t\t * Send uevent now (see multipath.rules).\n\t\t */\n\t\tenv = udev_device_get_property_value(\n\t\t\tpp->udev, \"FIND_MULTIPATHS_WAIT_UNTIL\");\n\t\tif (env == NULL || !strcmp(env, \"0\"))\n\t\t\treturn;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 1,
                  "endLine": 520,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t * Paths that are already classified as multipath\n\t * members don't need another uevent.\n\t */\n\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n",
                    "rendered": {
                      "text": "\t * Paths that are already classified as multipath\n\t * members don't need another uevent.\n\t */\n\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n",
                      "markdown": "`\t * Paths that are already classified as multipath\n\t * members don't need another uevent.\n\t */\n\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 1306,
                  "startColumn": 26,
                  "endLine": 1306,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\tudevice = get_udev_device(dev, dev_type);\n\n\t\t\tif (!udevice) {\n\t\t\t\tcondlog(0, \"%s: cannot find block device\", dev);\n\t\t\t\treturn PATHINFO_FAILED;\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tudevice = get_udev_device(dev, dev_type);\n\n\t\t\tif (!udevice) {\n\t\t\t\tcondlog(0, \"%s: cannot find block device\", dev);\n\t\t\t\treturn PATHINFO_FAILED;\n\t\t\t}\n\n",
                      "markdown": "`\t\t\tudevice = get_udev_device(dev, dev_type);\n\n\t\t\tif (!udevice) {\n\t\t\t\tcondlog(0, \"%s: cannot find block device\", dev);\n\t\t\t\treturn PATHINFO_FAILED;\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 990,
                  "endLine": 990,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tif (send_packet(fd, \"show daemon\") != 0)\n\t\tgoto out;\n\tconf = get_multipath_config();\n\ttimeout = conf->uxsock_timeout;\n\tput_multipath_config(conf);\n\tif (recv_packet(fd, &reply, timeout) != 0)\n\t\tgoto out;\n",
                    "rendered": {
                      "text": "\tif (send_packet(fd, \"show daemon\") != 0)\n\t\tgoto out;\n\tconf = get_multipath_config();\n\ttimeout = conf->uxsock_timeout;\n\tput_multipath_config(conf);\n\tif (recv_packet(fd, &reply, timeout) != 0)\n\t\tgoto out;\n",
                      "markdown": "`\tif (send_packet(fd, \"show daemon\") != 0)\n\t\tgoto out;\n\tconf = get_multipath_config();\n\ttimeout = conf->uxsock_timeout;\n\tput_multipath_config(conf);\n\tif (recv_packet(fd, &reply, timeout) != 0)\n\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 7,
                  "endLine": 621,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n\t\tenv ? env : \"\", rc);\n\treturn rc;\n}\n\n",
                    "rendered": {
                      "text": "\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n\t\tenv ? env : \"\", rc);\n\treturn rc;\n}\n\n",
                      "markdown": "`\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n\t\tenv ? env : \"\", rc);\n\treturn rc;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 1,
                  "endLine": 621,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n\t\tenv ? env : \"\", rc);\n\treturn rc;\n}\n\n",
                    "rendered": {
                      "text": "\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n\t\tenv ? env : \"\", rc);\n\treturn rc;\n}\n\n",
                      "markdown": "`\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n\t\tenv ? env : \"\", rc);\n\treturn rc;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 617,
                  "endLine": 617,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tmpp_ud = get_udev_for_mpp(cmpp);\n\tif (!mpp_ud)\n\t\treturn true;\n\tenv = udev_device_get_property_value(mpp_ud, \"MPATH_DEVICE_READY\");\n\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n",
                    "rendered": {
                      "text": "\tmpp_ud = get_udev_for_mpp(cmpp);\n\tif (!mpp_ud)\n\t\treturn true;\n\tenv = udev_device_get_property_value(mpp_ud, \"MPATH_DEVICE_READY\");\n\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n",
                      "markdown": "`\tmpp_ud = get_udev_for_mpp(cmpp);\n\tif (!mpp_ud)\n\t\treturn true;\n\tenv = udev_device_get_property_value(mpp_ud, \"MPATH_DEVICE_READY\");\n\trc = (env != NULL && !strcmp(env, \"1\"));\n\tudev_device_unref(mpp_ud);\n\tcondlog(4, \"%s: %s: \\\"%s\\\" -> %d\\n\", __func__, cmpp->alias,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 529,
                  "startColumn": 1,
                  "endLine": 529,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t * path is in \"maybe\" state and timer is running\n\t\t * Send uevent now (see multipath.rules).\n\t\t */\n\t\tenv = udev_device_get_property_value(\n\t\t\tpp->udev, \"FIND_MULTIPATHS_WAIT_UNTIL\");\n\t\tif (env == NULL || !strcmp(env, \"0\"))\n\t\t\treturn;\n",
                    "rendered": {
                      "text": "\t\t * path is in \"maybe\" state and timer is running\n\t\t * Send uevent now (see multipath.rules).\n\t\t */\n\t\tenv = udev_device_get_property_value(\n\t\t\tpp->udev, \"FIND_MULTIPATHS_WAIT_UNTIL\");\n\t\tif (env == NULL || !strcmp(env, \"0\"))\n\t\t\treturn;\n",
                      "markdown": "`\t\t * path is in \"maybe\" state and timer is running\n\t\t * Send uevent now (see multipath.rules).\n\t\t */\n\t\tenv = udev_device_get_property_value(\n\t\t\tpp->udev, \"FIND_MULTIPATHS_WAIT_UNTIL\");\n\t\tif (env == NULL || !strcmp(env, \"0\"))\n\t\t\treturn;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 16,
                  "endLine": 523,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n\t\t/*\n\t\t * If FIND_MULTIPATHS_WAIT_UNTIL is not \"0\",\n\t\t * path is in \"maybe\" state and timer is running\n",
                    "rendered": {
                      "text": "\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n\t\t/*\n\t\t * If FIND_MULTIPATHS_WAIT_UNTIL is not \"0\",\n\t\t * path is in \"maybe\" state and timer is running\n",
                      "markdown": "`\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n\t\t/*\n\t\t * If FIND_MULTIPATHS_WAIT_UNTIL is not \"0\",\n\t\t * path is in \"maybe\" state and timer is running\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 520,
                  "endLine": 520,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t * Paths that are already classified as multipath\n\t * members don't need another uevent.\n\t */\n\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n",
                    "rendered": {
                      "text": "\t * Paths that are already classified as multipath\n\t * members don't need another uevent.\n\t */\n\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n",
                      "markdown": "`\t * Paths that are already classified as multipath\n\t * members don't need another uevent.\n\t */\n\tenv = udev_device_get_property_value(\n\t\tpp->udev, \"DM_MULTIPATH_DEVICE_PATH\");\n\n\tif (is_mpath && env != NULL && !strcmp(env, \"1\")) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/configure.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 41,
                  "endLine": 247,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t/* re-order paths in pg to alternate between adapters and host ports\n\t */\n\tif (order_paths_in_pg_by_alt_adapters(pgp, adapters, total_paths)) {\n\t\tcondlog(3, \"Failed to re-order paths in pg by adapters \"\n\t\t\t\"and host ports\");\n\t\tfree_adaptergroup(adapters);\n\t\t/* return failure as original paths are\n",
                    "rendered": {
                      "text": "\t/* re-order paths in pg to alternate between adapters and host ports\n\t */\n\tif (order_paths_in_pg_by_alt_adapters(pgp, adapters, total_paths)) {\n\t\tcondlog(3, \"Failed to re-order paths in pg by adapters \"\n\t\t\t\"and host ports\");\n\t\tfree_adaptergroup(adapters);\n\t\t/* return failure as original paths are\n",
                      "markdown": "`\t/* re-order paths in pg to alternate between adapters and host ports\n\t */\n\tif (order_paths_in_pg_by_alt_adapters(pgp, adapters, total_paths)) {\n\t\tcondlog(3, \"Failed to re-order paths in pg by adapters \"\n\t\t\t\"and host ports\");\n\t\tfree_adaptergroup(adapters);\n\t\t/* return failure as original paths are\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/Makefile"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 21,
                  "endLine": 41,
                  "endColumn": 26,
                  "snippet": {
                    "text": "dict.o:\tdict.c\n\t$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) -Wno-unused-parameter -c -o $@ $<\n\nmake_static = $(shell sed '/^static/!s/^\\([a-z]\\{1,\\} \\)/static \\1/' <$1 >$2)\n\nnvme-ioctl.c: nvme/nvme-ioctl.c\n\t$(Q)$(call make_static,$<,$@)\n",
                    "rendered": {
                      "text": "dict.o:\tdict.c\n\t$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) -Wno-unused-parameter -c -o $@ $<\n\nmake_static = $(shell sed '/^static/!s/^\\([a-z]\\{1,\\} \\)/static \\1/' <$1 >$2)\n\nnvme-ioctl.c: nvme/nvme-ioctl.c\n\t$(Q)$(call make_static,$<,$@)\n",
                      "markdown": "`dict.o:\tdict.c\n\t$(Q)$(CC) $(CPPFLAGS) $(CFLAGS) -Wno-unused-parameter -c -o $@ $<\n\nmake_static = $(shell sed '/^static/!s/^\\([a-z]\\{1,\\} \\)/static \\1/' <$1 >$2)\n\nnvme-ioctl.c: nvme/nvme-ioctl.c\n\t$(Q)$(call make_static,$<,$@)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/alias.c"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 43,
                  "endLine": 1213,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tsnprintf(line + sizeof(line) - 2, 2, \"\\n\");\n\n\tbuf[0] = '\\0';\n\texpect_condlog(3, \"Ignoring too large wwid at 1 in bindings file\\n\");\n\tmock_bindings_file(line);\n\texpect_condlog(3, NOMATCH_STR(\"MPATHa\"));\n\trc = rlookup_binding(NULL, buf, \"MPATHa\");\n",
                    "rendered": {
                      "text": "\tsnprintf(line + sizeof(line) - 2, 2, \"\\n\");\n\n\tbuf[0] = '\\0';\n\texpect_condlog(3, \"Ignoring too large wwid at 1 in bindings file\\n\");\n\tmock_bindings_file(line);\n\texpect_condlog(3, NOMATCH_STR(\"MPATHa\"));\n\trc = rlookup_binding(NULL, buf, \"MPATHa\");\n",
                      "markdown": "`\tsnprintf(line + sizeof(line) - 2, 2, \"\\n\");\n\n\tbuf[0] = '\\0';\n\texpect_condlog(3, \"Ignoring too large wwid at 1 in bindings file\\n\");\n\tmock_bindings_file(line);\n\texpect_condlog(3, NOMATCH_STR(\"MPATHa\"));\n\trc = rlookup_binding(NULL, buf, \"MPATHa\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathc.c"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 34,
                  "endLine": 307,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tif (argc == 2) {\n\t\ttmo = strtol(argv[1], &ep, 10);\n\t\tif (*argv[1] == '\\0' || *ep != '\\0' || tmo < 0) {\n\t\t\tfprintf(stderr, \"ERROR: invalid timeout value\\n\");\n\t\t\treturn 1;\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\tif (argc == 2) {\n\t\ttmo = strtol(argv[1], &ep, 10);\n\t\tif (*argv[1] == '\\0' || *ep != '\\0' || tmo < 0) {\n\t\t\tfprintf(stderr, \"ERROR: invalid timeout value\\n\");\n\t\t\treturn 1;\n\t\t}\n\t}\n",
                      "markdown": "`\tif (argc == 2) {\n\t\ttmo = strtol(argv[1], &ep, 10);\n\t\tif (*argv[1] == '\\0' || *ep != '\\0' || tmo < 0) {\n\t\t\tfprintf(stderr, \"ERROR: invalid timeout value\\n\");\n\t\t\treturn 1;\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_updatepr.c"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tstruct config *conf;\n\n\tconf = get_multipath_config();\n\ttimeout = conf->uxsock_timeout;\n\tput_multipath_config(conf);\n\n\tfd = mpath_connect();\n",
                    "rendered": {
                      "text": "\tstruct config *conf;\n\n\tconf = get_multipath_config();\n\ttimeout = conf->uxsock_timeout;\n\tput_multipath_config(conf);\n\n\tfd = mpath_connect();\n",
                      "markdown": "`\tstruct config *conf;\n\n\tconf = get_multipath_config();\n\ttimeout = conf->uxsock_timeout;\n\tput_multipath_config(conf);\n\n\tfd = mpath_connect();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/man/dmmp_context_timeout_get.3"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nRetrieve timeout value of IPC connection to multipathd daemon.\n.SH \"RETURN\"\nunsigned int. Timeout in milliseconds.\n",
                    "rendered": {
                      "text": "\nRetrieve timeout value of IPC connection to multipathd daemon.\n.SH \"RETURN\"\nunsigned int. Timeout in milliseconds.\n",
                      "markdown": "`\nRetrieve timeout value of IPC connection to multipathd daemon.\n.SH \"RETURN\"\nunsigned int. Timeout in milliseconds.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/man/dmmp_context_timeout_get.3"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 8,
                  "endLine": 13,
                  "endColumn": 17,
                  "snippet": {
                    "text": "If this pointer is NULL, your program will be terminated by assert.\n.SH \"DESCRIPTION\"\n\nRetrieve timeout value of IPC connection to multipathd daemon.\n.SH \"RETURN\"\nunsigned int. Timeout in milliseconds.\n",
                    "rendered": {
                      "text": "If this pointer is NULL, your program will be terminated by assert.\n.SH \"DESCRIPTION\"\n\nRetrieve timeout value of IPC connection to multipathd daemon.\n.SH \"RETURN\"\nunsigned int. Timeout in milliseconds.\n",
                      "markdown": "`If this pointer is NULL, your program will be terminated by assert.\n.SH \"DESCRIPTION\"\n\nRetrieve timeout value of IPC connection to multipathd daemon.\n.SH \"RETURN\"\nunsigned int. Timeout in milliseconds.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/rdac.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 54,
                  "endLine": 247,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t[IDX_(FW_DOWNLOADING)] =\n\tMSG_RDAC_DOWN_TYPE(\"ctlr firmware downloading\"),\n\t[IDX_(QUIESCED)] = MSG_RDAC_DOWN_TYPE(\"ctlr quiesced by admin request\"),\n\t[IDX_(SERVICE_MODE)] = MSG_RDAC_DOWN_TYPE(\"ctlr is in service mode\"),\n\t[IDX_(UNAVAILABLE)] = MSG_RDAC_DOWN_TYPE(\"ctlr is unavailable\"),\n\t[IDX_(INQUIRY_FAILED)] = MSG_RDAC_DOWN_TYPE(\"inquiry failed\"),\n\tNULL,\n",
                    "rendered": {
                      "text": "\t[IDX_(FW_DOWNLOADING)] =\n\tMSG_RDAC_DOWN_TYPE(\"ctlr firmware downloading\"),\n\t[IDX_(QUIESCED)] = MSG_RDAC_DOWN_TYPE(\"ctlr quiesced by admin request\"),\n\t[IDX_(SERVICE_MODE)] = MSG_RDAC_DOWN_TYPE(\"ctlr is in service mode\"),\n\t[IDX_(UNAVAILABLE)] = MSG_RDAC_DOWN_TYPE(\"ctlr is unavailable\"),\n\t[IDX_(INQUIRY_FAILED)] = MSG_RDAC_DOWN_TYPE(\"inquiry failed\"),\n\tNULL,\n",
                      "markdown": "`\t[IDX_(FW_DOWNLOADING)] =\n\tMSG_RDAC_DOWN_TYPE(\"ctlr firmware downloading\"),\n\t[IDX_(QUIESCED)] = MSG_RDAC_DOWN_TYPE(\"ctlr quiesced by admin request\"),\n\t[IDX_(SERVICE_MODE)] = MSG_RDAC_DOWN_TYPE(\"ctlr is in service mode\"),\n\t[IDX_(UNAVAILABLE)] = MSG_RDAC_DOWN_TYPE(\"ctlr is unavailable\"),\n\t[IDX_(INQUIRY_FAILED)] = MSG_RDAC_DOWN_TYPE(\"inquiry failed\"),\n\tNULL,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/rdac.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 17,
                  "endLine": 164,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tio_hdr.dxferp = resp;\n\tio_hdr.cmdp = inqCmdBlk;\n\tio_hdr.sbp = sense_b;\n\tio_hdr.timeout = timeout * 1000;\n\n\tif (ioctl(sg_fd, SG_IO, &io_hdr) < 0 && errno == ENOTTY)\n\t\treturn PATH_WILD;\n",
                    "rendered": {
                      "text": "\tio_hdr.dxferp = resp;\n\tio_hdr.cmdp = inqCmdBlk;\n\tio_hdr.sbp = sense_b;\n\tio_hdr.timeout = timeout * 1000;\n\n\tif (ioctl(sg_fd, SG_IO, &io_hdr) < 0 && errno == ENOTTY)\n\t\treturn PATH_WILD;\n",
                      "markdown": "`\tio_hdr.dxferp = resp;\n\tio_hdr.cmdp = inqCmdBlk;\n\tio_hdr.sbp = sense_b;\n\tio_hdr.timeout = timeout * 1000;\n\n\tif (ioctl(sg_fd, SG_IO, &io_hdr) < 0 && errno == ENOTTY)\n\t\treturn PATH_WILD;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/directio.c"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 16,
                  "endLine": 294,
                  "endColumn": 25,
                  "snippet": {
                    "text": "static int\ncheck_state(int fd, struct directio_context *ct, int sync, int timeout_secs)\n{\n\tstruct timespec\ttimeout = { .tv_nsec = 1000 };\n\tstruct stat\tsb;\n\tint\t\trc;\n\tlong\t\tr;\n",
                    "rendered": {
                      "text": "static int\ncheck_state(int fd, struct directio_context *ct, int sync, int timeout_secs)\n{\n\tstruct timespec\ttimeout = { .tv_nsec = 1000 };\n\tstruct stat\tsb;\n\tint\t\trc;\n\tlong\t\tr;\n",
                      "markdown": "`static int\ncheck_state(int fd, struct directio_context *ct, int sync, int timeout_secs)\n{\n\tstruct timespec\ttimeout = { .tv_nsec = 1000 };\n\tstruct stat\tsb;\n\tint\t\trc;\n\tlong\t\tr;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/checkers/tur.c"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 17,
                  "endLine": 129,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tio_hdr.dxfer_direction = SG_DXFER_NONE;\n\tio_hdr.cmdp = turCmdBlk;\n\tio_hdr.sbp = sense_buffer;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = 0;\n\tif (ioctl(fd, SG_IO, &io_hdr) < 0) {\n\t\tif (errno == ENOTTY) {\n",
                    "rendered": {
                      "text": "\tio_hdr.dxfer_direction = SG_DXFER_NONE;\n\tio_hdr.cmdp = turCmdBlk;\n\tio_hdr.sbp = sense_buffer;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = 0;\n\tif (ioctl(fd, SG_IO, &io_hdr) < 0) {\n\t\tif (errno == ENOTTY) {\n",
                      "markdown": "`\tio_hdr.dxfer_direction = SG_DXFER_NONE;\n\tio_hdr.cmdp = turCmdBlk;\n\tio_hdr.sbp = sense_buffer;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = 0;\n\tif (ioctl(fd, SG_IO, &io_hdr) < 0) {\n\t\tif (errno == ENOTTY) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/libsg.c"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 17,
                  "endLine": 55,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tio_hdr.dxferp = buff;\n\tio_hdr.mx_sb_len = sense_len;\n\tio_hdr.sbp = sense;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = (int)start_block;\n\nretry:\n",
                    "rendered": {
                      "text": "\tio_hdr.dxferp = buff;\n\tio_hdr.mx_sb_len = sense_len;\n\tio_hdr.sbp = sense;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = (int)start_block;\n\nretry:\n",
                      "markdown": "`\tio_hdr.dxferp = buff;\n\tio_hdr.mx_sb_len = sense_len;\n\tio_hdr.sbp = sense;\n\tio_hdr.timeout = timeout * 1000;\n\tio_hdr.pack_id = (int)start_block;\n\nretry:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/blacklist.c"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 3,
                  "endLine": 445,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tudev_list_entry_foreach(list_entry,\n\t\t\t\tudev_device_get_properties_list_entry(udev)) {\n\n\t\t\tenv = udev_list_entry_get_name(list_entry);\n\t\t\tif (!env)\n\t\t\t\tcontinue;\n\n",
                    "rendered": {
                      "text": "\t\tudev_list_entry_foreach(list_entry,\n\t\t\t\tudev_device_get_properties_list_entry(udev)) {\n\n\t\t\tenv = udev_list_entry_get_name(list_entry);\n\t\t\tif (!env)\n\t\t\t\tcontinue;\n\n",
                      "markdown": "`\t\tudev_list_entry_foreach(list_entry,\n\t\t\t\tudev_device_get_properties_list_entry(udev)) {\n\n\t\t\tenv = udev_list_entry_get_name(list_entry);\n\t\t\tif (!env)\n\t\t\t\tcontinue;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/blacklist.c"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 2,
                  "endLine": 460,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t\tr = MATCH_PROPERTY_BLIST;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tenv = NULL;\n\t\t}\n\t\tif (r == MATCH_PROPERTY_BLIST_MISSING &&\n\t\t    (!check_missing_prop || !uid_attr_seen))\n",
                    "rendered": {
                      "text": "\t\t\t\tr = MATCH_PROPERTY_BLIST;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tenv = NULL;\n\t\t}\n\t\tif (r == MATCH_PROPERTY_BLIST_MISSING &&\n\t\t    (!check_missing_prop || !uid_attr_seen))\n",
                      "markdown": "`\t\t\t\tr = MATCH_PROPERTY_BLIST;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tenv = NULL;\n\t\t}\n\t\tif (r == MATCH_PROPERTY_BLIST_MISSING &&\n\t\t    (!check_missing_prop || !uid_attr_seen))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/blacklist.c"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 2,
                  "endLine": 445,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tudev_list_entry_foreach(list_entry,\n\t\t\t\tudev_device_get_properties_list_entry(udev)) {\n\n\t\t\tenv = udev_list_entry_get_name(list_entry);\n\t\t\tif (!env)\n\t\t\t\tcontinue;\n\n",
                    "rendered": {
                      "text": "\t\tudev_list_entry_foreach(list_entry,\n\t\t\t\tudev_device_get_properties_list_entry(udev)) {\n\n\t\t\tenv = udev_list_entry_get_name(list_entry);\n\t\t\tif (!env)\n\t\t\t\tcontinue;\n\n",
                      "markdown": "`\t\tudev_list_entry_foreach(list_entry,\n\t\t\t\tudev_device_get_properties_list_entry(udev)) {\n\n\t\t\tenv = udev_list_entry_get_name(list_entry);\n\t\t\tif (!env)\n\t\t\t\tcontinue;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/blacklist.c"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 19,
                  "endLine": 304,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tLOG_BLIST(\"wwid\", \"whitelisted\", lvl);\n\t\tbreak;\n\tcase MATCH_DEVNODE_BLIST_EXCEPT:\n\t\tLOG_BLIST(\"device node name\", \"whitelisted\", lvl);\n\t\tbreak;\n\tcase MATCH_PROPERTY_BLIST_EXCEPT:\n\t\tLOG_BLIST(\"udev property\", \"whitelisted\", lvl);\n",
                    "rendered": {
                      "text": "\t\tLOG_BLIST(\"wwid\", \"whitelisted\", lvl);\n\t\tbreak;\n\tcase MATCH_DEVNODE_BLIST_EXCEPT:\n\t\tLOG_BLIST(\"device node name\", \"whitelisted\", lvl);\n\t\tbreak;\n\tcase MATCH_PROPERTY_BLIST_EXCEPT:\n\t\tLOG_BLIST(\"udev property\", \"whitelisted\", lvl);\n",
                      "markdown": "`\t\tLOG_BLIST(\"wwid\", \"whitelisted\", lvl);\n\t\tbreak;\n\tcase MATCH_DEVNODE_BLIST_EXCEPT:\n\t\tLOG_BLIST(\"device node name\", \"whitelisted\", lvl);\n\t\tbreak;\n\tcase MATCH_PROPERTY_BLIST_EXCEPT:\n\t\tLOG_BLIST(\"udev property\", \"whitelisted\", lvl);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/blacklist.c"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 19,
                  "endLine": 289,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tLOG_BLIST(\"wwid\", \"blacklisted\", lvl);\n\t\tbreak;\n\tcase MATCH_DEVNODE_BLIST:\n\t\tLOG_BLIST(\"device node name\", \"blacklisted\", lvl);\n\t\tbreak;\n\tcase MATCH_PROPERTY_BLIST:\n\t\tLOG_BLIST(\"udev property\", \"blacklisted\", lvl);\n",
                    "rendered": {
                      "text": "\t\tLOG_BLIST(\"wwid\", \"blacklisted\", lvl);\n\t\tbreak;\n\tcase MATCH_DEVNODE_BLIST:\n\t\tLOG_BLIST(\"device node name\", \"blacklisted\", lvl);\n\t\tbreak;\n\tcase MATCH_PROPERTY_BLIST:\n\t\tLOG_BLIST(\"udev property\", \"blacklisted\", lvl);\n",
                      "markdown": "`\t\tLOG_BLIST(\"wwid\", \"blacklisted\", lvl);\n\t\tbreak;\n\tcase MATCH_DEVNODE_BLIST:\n\t\tLOG_BLIST(\"device node name\", \"blacklisted\", lvl);\n\t\tbreak;\n\tcase MATCH_PROPERTY_BLIST:\n\t\tLOG_BLIST(\"udev property\", \"blacklisted\", lvl);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/wwids.c"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 23,
                  "endLine": 185,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t}\n\t\tptr = strrchr(buf, '\\n');\n\t\tif (ptr == NULL) { /* shouldn't happen, assume it is EOF */\n\t\t\tcondlog(4, \"couldn't find newline, assuming end of file\");\n\t\t\treturn 1;\n\t\t}\n\t\tstart = start + (ptr - buf) + 1;\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tptr = strrchr(buf, '\\n');\n\t\tif (ptr == NULL) { /* shouldn't happen, assume it is EOF */\n\t\t\tcondlog(4, \"couldn't find newline, assuming end of file\");\n\t\t\treturn 1;\n\t\t}\n\t\tstart = start + (ptr - buf) + 1;\n",
                      "markdown": "`\t\t}\n\t\tptr = strrchr(buf, '\\n');\n\t\tif (ptr == NULL) { /* shouldn't happen, assume it is EOF */\n\t\t\tcondlog(4, \"couldn't find newline, assuming end of file\");\n\t\t\treturn 1;\n\t\t}\n\t\tstart = start + (ptr - buf) + 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 31,
                  "endLine": 587,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.blist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp whitelisted\\n\");\n\texpect_condlog(3, \"sdb: wwid xyzzy blacklisted\\n\");\n",
                    "rendered": {
                      "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.blist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp whitelisted\\n\");\n\texpect_condlog(3, \"sdb: wwid xyzzy blacklisted\\n\");\n",
                      "markdown": "`\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.blist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp whitelisted\\n\");\n\texpect_condlog(3, \"sdb: wwid xyzzy blacklisted\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 573,
                  "startColumn": 31,
                  "endLine": 573,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tconf.blist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_PROTOCOL_BLIST);\n",
                    "rendered": {
                      "text": "\tconf.blist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_PROTOCOL_BLIST);\n",
                      "markdown": "`\tconf.blist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_PROTOCOL_BLIST);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 31,
                  "endLine": 560,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVICE_BLIST);\n}\n",
                    "rendered": {
                      "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVICE_BLIST);\n}\n",
                      "markdown": "`\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVICE_BLIST);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 548,
                  "startColumn": 31,
                  "endLine": 548,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVNODE_BLIST);\n}\n\n",
                    "rendered": {
                      "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVNODE_BLIST);\n}\n\n",
                      "markdown": "`\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVNODE_BLIST);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 31,
                  "endLine": 521,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp whitelisted\\n\");\n\texpect_condlog(3, \"sdb: wwid xyzzy whitelisted\\n\");\n",
                    "rendered": {
                      "text": "\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp whitelisted\\n\");\n\texpect_condlog(3, \"sdb: wwid xyzzy whitelisted\\n\");\n",
                      "markdown": "`\tconf.elist_protocol = blist_protocol_fcp;\n\tconf.elist_wwid = blist_wwid_xyzzy;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\texpect_condlog(3, \"sdb: (foo:bar) vendor/product whitelisted\\n\");\n\texpect_condlog(3, \"sdb: protocol scsi:fcp whitelisted\\n\");\n\texpect_condlog(3, \"sdb: wwid xyzzy whitelisted\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 31,
                  "endLine": 418,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tconf.elist_property = blist_property_wwn;\n\tconf.blist_devnode = blist_devnode_sdb;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVNODE_BLIST);\n}\n\n",
                    "rendered": {
                      "text": "\tconf.elist_property = blist_property_wwn;\n\tconf.blist_devnode = blist_devnode_sdb;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVNODE_BLIST);\n}\n\n",
                      "markdown": "`\tconf.elist_property = blist_property_wwn;\n\tconf.blist_devnode = blist_devnode_sdb;\n\texpect_condlog(3, \"sdb: udev property ID_WWN whitelisted\\n\");\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_path(&conf, &test_pp), MATCH_DEVNODE_BLIST);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 31,
                  "endLine": 240,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t\t\t MATCH_NOTHING);\n\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"dasda\"),\n\t\t\t MATCH_NOTHING);\n\texpect_condlog(3, \"hda: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"hda\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n",
                    "rendered": {
                      "text": "\t\t\t\t MATCH_NOTHING);\n\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"dasda\"),\n\t\t\t MATCH_NOTHING);\n\texpect_condlog(3, \"hda: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"hda\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n",
                      "markdown": "`\t\t\t\t MATCH_NOTHING);\n\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"dasda\"),\n\t\t\t MATCH_NOTHING);\n\texpect_condlog(3, \"hda: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"hda\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 36,
                  "endLine": 230,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"sdaa\"),\n\t\t\t MATCH_NOTHING);\n\tif (nvme_multipath_enabled()) {\n\t\texpect_condlog(3, \"nvme0n1: device node name blacklisted\\n\");\n\t\tassert_int_equal(filter_devnode(blist_devnode_default, NULL,\n\t\t\t\t\t\t\"nvme0n1\"),\n\t\t\t\t MATCH_DEVNODE_BLIST);\n",
                    "rendered": {
                      "text": "\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"sdaa\"),\n\t\t\t MATCH_NOTHING);\n\tif (nvme_multipath_enabled()) {\n\t\texpect_condlog(3, \"nvme0n1: device node name blacklisted\\n\");\n\t\tassert_int_equal(filter_devnode(blist_devnode_default, NULL,\n\t\t\t\t\t\t\"nvme0n1\"),\n\t\t\t\t MATCH_DEVNODE_BLIST);\n",
                      "markdown": "`\tassert_int_equal(filter_devnode(blist_devnode_default, NULL, \"sdaa\"),\n\t\t\t MATCH_NOTHING);\n\tif (nvme_multipath_enabled()) {\n\t\texpect_condlog(3, \"nvme0n1: device node name blacklisted\\n\");\n\t\tassert_int_equal(filter_devnode(blist_devnode_default, NULL,\n\t\t\t\t\t\t\"nvme0n1\"),\n\t\t\t\t MATCH_DEVNODE_BLIST);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 31,
                  "endLine": 214,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST_EXCEPT);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdc\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n",
                    "rendered": {
                      "text": "\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST_EXCEPT);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdc\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n",
                      "markdown": "`\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST_EXCEPT);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdc\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 31,
                  "endLine": 211,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nstatic void test_devnode_whitelist(void **state)\n{\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST_EXCEPT);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n",
                    "rendered": {
                      "text": "\nstatic void test_devnode_whitelist(void **state)\n{\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST_EXCEPT);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n",
                      "markdown": "`\nstatic void test_devnode_whitelist(void **state)\n{\n\texpect_condlog(3, \"sdb: device node name whitelisted\\n\");\n\tassert_int_equal(filter_devnode(blist_all, blist_devnode_sdb, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST_EXCEPT);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 31,
                  "endLine": 204,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t\t MATCH_DEVNODE_BLIST);\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdb\"),\n\t\t\t MATCH_NOTHING);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdc\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n",
                    "rendered": {
                      "text": "\t\t\t MATCH_DEVNODE_BLIST);\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdb\"),\n\t\t\t MATCH_NOTHING);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdc\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n",
                      "markdown": "`\t\t\t MATCH_DEVNODE_BLIST);\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdb\"),\n\t\t\t MATCH_NOTHING);\n\texpect_condlog(3, \"sdc: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdc\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/blacklist.c"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 31,
                  "endLine": 199,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nstatic void test_devnode_blacklist(void **state)\n{\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_sdb, NULL, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdb\"),\n",
                    "rendered": {
                      "text": "\nstatic void test_devnode_blacklist(void **state)\n{\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_sdb, NULL, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdb\"),\n",
                      "markdown": "`\nstatic void test_devnode_blacklist(void **state)\n{\n\texpect_condlog(3, \"sdb: device node name blacklisted\\n\");\n\tassert_int_equal(filter_devnode(blist_devnode_sdb, NULL, \"sdb\"),\n\t\t\t MATCH_DEVNODE_BLIST);\n\tassert_int_equal(filter_devnode(blist_devnode_sdb_inv, NULL, \"sdb\"),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/README.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 6,
                  "endLine": 71,
                  "endColumn": 10,
                  "snippet": {
                    "text": "The unit tests are based on the [cmocka test framework](https://cmocka.org/),\nand make use of cmocka's \"mock objects\" feature to simulate how the code behaves\nfor different input values. cmocka achieves this by modifying the symbol\nlookup at link time, substituting \"wrapper functions\" for the originally\ncalled function. The Makefile contains code to make sure that `__wrap_xyz()`\nwrapper functions are automatically passed to the linker with matching\n`-Wl,--wrap` command line arguments, so that tests are correctly rebuilt if\n",
                    "rendered": {
                      "text": "The unit tests are based on the [cmocka test framework](https://cmocka.org/),\nand make use of cmocka's \"mock objects\" feature to simulate how the code behaves\nfor different input values. cmocka achieves this by modifying the symbol\nlookup at link time, substituting \"wrapper functions\" for the originally\ncalled function. The Makefile contains code to make sure that `__wrap_xyz()`\nwrapper functions are automatically passed to the linker with matching\n`-Wl,--wrap` command line arguments, so that tests are correctly rebuilt if\n",
                      "markdown": "`The unit tests are based on the [cmocka test framework](https://cmocka.org/),\nand make use of cmocka's \"mock objects\" feature to simulate how the code behaves\nfor different input values. cmocka achieves this by modifying the symbol\nlookup at link time, substituting \"wrapper functions\" for the originally\ncalled function. The Makefile contains code to make sure that `__wrap_xyz()`\nwrapper functions are automatically passed to the linker with matching\n`-Wl,--wrap` command line arguments, so that tests are correctly rebuilt if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/README.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 72,
                  "endLine": 30,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n## Controlling verbosity for unit tests\n\nSome test programs use the environment variable `MPATHTEST_VERBOSITY` to\ncontrol the log level during test execution.\n\n## Notes on individual tests\n\n",
                    "rendered": {
                      "text": "\n## Controlling verbosity for unit tests\n\nSome test programs use the environment variable `MPATHTEST_VERBOSITY` to\ncontrol the log level during test execution.\n\n## Notes on individual tests\n\n",
                      "markdown": "`\n## Controlling verbosity for unit tests\n\nSome test programs use the environment variable `MPATHTEST_VERBOSITY` to\ncontrol the log level during test execution.\n\n## Notes on individual tests\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 56,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "## Running tests under valgrind\n\nThe unit tests can be run under the valgrind debugger with `make valgrind`\nin the `tests` directory, or `make valgrind-test` in the top directory.\nIf valgrind detects a bad memory access or leak, the test will fail. The\noutput of the test run, including valgrind output, is stored as\n`<testname>.vgr`.\n",
                    "rendered": {
                      "text": "## Running tests under valgrind\n\nThe unit tests can be run under the valgrind debugger with `make valgrind`\nin the `tests` directory, or `make valgrind-test` in the top directory.\nIf valgrind detects a bad memory access or leak, the test will fail. The\noutput of the test run, including valgrind output, is stored as\n`<testname>.vgr`.\n",
                      "markdown": "`## Running tests under valgrind\n\nThe unit tests can be run under the valgrind debugger with `make valgrind`\nin the `tests` directory, or `make valgrind-test` in the top directory.\nIf valgrind detects a bad memory access or leak, the test will fail. The\noutput of the test run, including valgrind output, is stored as\n`<testname>.vgr`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/README.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "# multipath-tools unit tests\n\nUnit tests are built and run by running `make test` in the top directory,\nor simply `make` in the `tests` subdirectory. The test output is saved as\n`<testname>.out`. The test programs are called `<testname>-test`, and can\nbe run standalone e.g. for debugging purposes.\n",
                    "rendered": {
                      "text": "# multipath-tools unit tests\n\nUnit tests are built and run by running `make test` in the top directory,\nor simply `make` in the `tests` subdirectory. The test output is saved as\n`<testname>.out`. The test programs are called `<testname>-test`, and can\nbe run standalone e.g. for debugging purposes.\n",
                      "markdown": "`# multipath-tools unit tests\n\nUnit tests are built and run by running `make test` in the top directory,\nor simply `make` in the `tests` subdirectory. The test output is saved as\n`<testname>.out`. The test programs are called `<testname>-test`, and can\nbe run standalone e.g. for debugging purposes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/lopart.c"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 35,
                  "endLine": 232,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\t\t\"       about the loop device (then recompile or `modprobe loop'), or\\n\"\n\t\t\t\t\"       maybe /dev/loop# has the wrong major number?\\n\");\n\t} else\n\t\tfprintf(stderr, \"mount: could not find any free loop device\\n\");\n\treturn NULL;\n}\n\n",
                    "rendered": {
                      "text": "\t\t\t\t\"       about the loop device (then recompile or `modprobe loop'), or\\n\"\n\t\t\t\t\"       maybe /dev/loop# has the wrong major number?\\n\");\n\t} else\n\t\tfprintf(stderr, \"mount: could not find any free loop device\\n\");\n\treturn NULL;\n}\n\n",
                      "markdown": "`\t\t\t\t\"       about the loop device (then recompile or `modprobe loop'), or\\n\"\n\t\t\t\t\"       maybe /dev/loop# has the wrong major number?\\n\");\n\t} else\n\t\tfprintf(stderr, \"mount: could not find any free loop device\\n\");\n\treturn NULL;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/lopart.c"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 21,
                  "endLine": 228,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\tPROC_DEVICES);\n\t\telse\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device. Maybe this kernel does not know\\n\"\n\t\t\t\t\"       about the loop device (then recompile or `modprobe loop'), or\\n\"\n\t\t\t\t\"       maybe /dev/loop# has the wrong major number?\\n\");\n\t} else\n",
                    "rendered": {
                      "text": "\t\t\t\tPROC_DEVICES);\n\t\telse\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device. Maybe this kernel does not know\\n\"\n\t\t\t\t\"       about the loop device (then recompile or `modprobe loop'), or\\n\"\n\t\t\t\t\"       maybe /dev/loop# has the wrong major number?\\n\");\n\t} else\n",
                      "markdown": "`\t\t\t\tPROC_DEVICES);\n\t\telse\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device. Maybe this kernel does not know\\n\"\n\t\t\t\t\"       about the loop device (then recompile or `modprobe loop'), or\\n\"\n\t\t\t\t\"       maybe /dev/loop# has the wrong major number?\\n\");\n\t} else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/lopart.c"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 21,
                  "endLine": 222,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\t\"       Maybe /dev/loop# has a wrong major number?\\n\");\n\t\telse if (loop_known == -1)\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device, and, according to %s,\\n\"\n\t\t\t\t\"       this kernel does not know about the loop device.\\n\"\n\t\t\t\t\"       (If so, then recompile or `modprobe loop'.)\\n\",\n\t\t\t\tPROC_DEVICES);\n",
                    "rendered": {
                      "text": "\t\t\t\t\"       Maybe /dev/loop# has a wrong major number?\\n\");\n\t\telse if (loop_known == -1)\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device, and, according to %s,\\n\"\n\t\t\t\t\"       this kernel does not know about the loop device.\\n\"\n\t\t\t\t\"       (If so, then recompile or `modprobe loop'.)\\n\",\n\t\t\t\tPROC_DEVICES);\n",
                      "markdown": "`\t\t\t\t\"       Maybe /dev/loop# has a wrong major number?\\n\");\n\t\telse if (loop_known == -1)\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device, and, according to %s,\\n\"\n\t\t\t\t\"       this kernel does not know about the loop device.\\n\"\n\t\t\t\t\"       (If so, then recompile or `modprobe loop'.)\\n\",\n\t\t\t\tPROC_DEVICES);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/lopart.c"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 21,
                  "endLine": 218,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\telse if (!someloop) {\n\t\tif (loop_known == 1)\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device.\\n\"\n\t\t\t\t\"       Maybe /dev/loop# has a wrong major number?\\n\");\n\t\telse if (loop_known == -1)\n\t\t\tfprintf(stderr,\n",
                    "rendered": {
                      "text": "\telse if (!someloop) {\n\t\tif (loop_known == 1)\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device.\\n\"\n\t\t\t\t\"       Maybe /dev/loop# has a wrong major number?\\n\");\n\t\telse if (loop_known == -1)\n\t\t\tfprintf(stderr,\n",
                      "markdown": "`\telse if (!someloop) {\n\t\tif (loop_known == 1)\n\t\t\tfprintf(stderr,\n\t\t\t\t\"mount: Could not find any loop device.\\n\"\n\t\t\t\t\"       Maybe /dev/loop# has a wrong major number?\\n\");\n\t\telse if (loop_known == -1)\n\t\t\tfprintf(stderr,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/lopart.c"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 35,
                  "endLine": 213,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t}\n\n\tif (!somedev)\n\t\tfprintf(stderr, \"mount: could not find any device /dev/loop#\\n\");\n\n\telse if (!someloop) {\n\t\tif (loop_known == 1)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (!somedev)\n\t\tfprintf(stderr, \"mount: could not find any device /dev/loop#\\n\");\n\n\telse if (!someloop) {\n\t\tif (loop_known == 1)\n",
                      "markdown": "`\t}\n\n\tif (!somedev)\n\t\tfprintf(stderr, \"mount: could not find any device /dev/loop#\\n\");\n\n\telse if (!someloop) {\n\t\tif (loop_known == 1)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/uxlsnr.c"
                },
                "region": {
                  "startLine": 596,
                  "startColumn": 35,
                  "endLine": 596,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tif (timespeccmp(&c->expires, &now) > 0)\n\t\treturn;\n\n\tcondlog(2, \"%s: cli[%d]: timed out at %ld.%03ld\", __func__,\n\t\tc->fd, (long)c->expires.tv_sec, c->expires.tv_nsec / 1000000);\n\n\tc->error = -ETIMEDOUT;\n",
                    "rendered": {
                      "text": "\tif (timespeccmp(&c->expires, &now) > 0)\n\t\treturn;\n\n\tcondlog(2, \"%s: cli[%d]: timed out at %ld.%03ld\", __func__,\n\t\tc->fd, (long)c->expires.tv_sec, c->expires.tv_nsec / 1000000);\n\n\tc->error = -ETIMEDOUT;\n",
                      "markdown": "`\tif (timespeccmp(&c->expires, &now) > 0)\n\t\treturn;\n\n\tcondlog(2, \"%s: cli[%d]: timed out at %ld.%03ld\", __func__,\n\t\tc->fd, (long)c->expires.tv_sec, c->expires.tv_nsec / 1000000);\n\n\tc->error = -ETIMEDOUT;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/uxlsnr.c"
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 41,
                  "endLine": 515,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n\t\t\tif (!c->is_root && kw->code != VRB_LIST) {\n\t\t\t\tc->error = -EPERM;\n\t\t\t\tcondlog(0, \"%s: cli[%d]: unauthorized cmd \\\"%s\\\"\",\n\t\t\t\t\t__func__, c->fd, c->cmd);\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\t\tif (!c->is_root && kw->code != VRB_LIST) {\n\t\t\t\tc->error = -EPERM;\n\t\t\t\tcondlog(0, \"%s: cli[%d]: unauthorized cmd \\\"%s\\\"\",\n\t\t\t\t\t__func__, c->fd, c->cmd);\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\n\t\t\tif (!c->is_root && kw->code != VRB_LIST) {\n\t\t\t\tc->error = -EPERM;\n\t\t\t\tcondlog(0, \"%s: cli[%d]: unauthorized cmd \\\"%s\\\"\",\n\t\t\t\t\t__func__, c->fd, c->cmd);\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/uxlsnr.c"
                },
                "region": {
                  "startLine": 723,
                  "startColumn": 1,
                  "endLine": 723,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\t\tbreak;\n\t\t}\n\t\tn_pfds = i;\n\t\ttimeout = get_soonest_timeout(&__timeout);\n\n\t\t/* most of our life is spent in this call */\n\t\tpoll_count = ppoll(polls, n_pfds, timeout, &mask);\n",
                    "rendered": {
                      "text": "\t\t\t\tbreak;\n\t\t}\n\t\tn_pfds = i;\n\t\ttimeout = get_soonest_timeout(&__timeout);\n\n\t\t/* most of our life is spent in this call */\n\t\tpoll_count = ppoll(polls, n_pfds, timeout, &mask);\n",
                      "markdown": "`\t\t\t\tbreak;\n\t\t}\n\t\tn_pfds = i;\n\t\ttimeout = get_soonest_timeout(&__timeout);\n\n\t\t/* most of our life is spent in this call */\n\t\tpoll_count = ppoll(polls, n_pfds, timeout, &mask);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/doc-preclean.pl"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 20,
                  "endLine": 2,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/usr/bin/perl\n# Copyright (C) 2016 Red Hat, Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n",
                    "rendered": {
                      "text": "#!/usr/bin/perl\n# Copyright (C) 2016 Red Hat, Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n",
                      "markdown": "`#!/usr/bin/perl\n# Copyright (C) 2016 Red Hat, Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1645,
                  "startColumn": 44,
                  "endLine": 1645,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tmy $prms = join \" \", @parameterlist;\n\tcheck_sections($file, $declaration_name, \"function\", $sectcheck, $prms);\n\n        # This check emits a lot of warnings at the moment, because many\n        # functions don't have a 'Return' doc section. So until the number\n        # of warnings goes sufficiently down, the check is only performed in\n        # verbose mode.\n",
                    "rendered": {
                      "text": "\tmy $prms = join \" \", @parameterlist;\n\tcheck_sections($file, $declaration_name, \"function\", $sectcheck, $prms);\n\n        # This check emits a lot of warnings at the moment, because many\n        # functions don't have a 'Return' doc section. So until the number\n        # of warnings goes sufficiently down, the check is only performed in\n        # verbose mode.\n",
                      "markdown": "`\tmy $prms = join \" \", @parameterlist;\n\tcheck_sections($file, $declaration_name, \"function\", $sectcheck, $prms);\n\n        # This check emits a lot of warnings at the moment, because many\n        # functions don't have a 'Return' doc section. So until the number\n        # of warnings goes sufficiently down, the check is only performed in\n        # verbose mode.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1592,
                  "startColumn": 53,
                  "endLine": 1592,
                  "endColumn": 57,
                  "snippet": {
                    "text": "          \\)\\)\\s+//x;\n\n    # Yes, this truly is vile.  We are looking for:\n    # 1. Return type (may be nothing if we're looking at a macro)\n    # 2. Function name\n    # 3. Function parameters.\n    #\n",
                    "rendered": {
                      "text": "          \\)\\)\\s+//x;\n\n    # Yes, this truly is vile.  We are looking for:\n    # 1. Return type (may be nothing if we're looking at a macro)\n    # 2. Function name\n    # 3. Function parameters.\n    #\n",
                      "markdown": "`          \\)\\)\\s+//x;\n\n    # Yes, this truly is vile.  We are looking for:\n    # 1. Return type (may be nothing if we're looking at a macro)\n    # 2. Function name\n    # 3. Function parameters.\n    #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1587,
                  "startColumn": 51,
                  "endLine": 1587,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            (?:\n                 [\\w\\s]++          # attribute name\n                 (?:\\([^)]*+\\))?   # attribute arguments\n                 \\s*+,?            # optional comma at the end\n            )+\n          \\)\\)\\s+//x;\n\n",
                    "rendered": {
                      "text": "            (?:\n                 [\\w\\s]++          # attribute name\n                 (?:\\([^)]*+\\))?   # attribute arguments\n                 \\s*+,?            # optional comma at the end\n            )+\n          \\)\\)\\s+//x;\n\n",
                      "markdown": "`            (?:\n                 [\\w\\s]++          # attribute name\n                 (?:\\([^)]*+\\))?   # attribute arguments\n                 \\s*+,?            # optional comma at the end\n            )+\n          \\)\\)\\s+//x;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1515,
                  "startColumn": 28,
                  "endLine": 1515,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\t# however, the original param string may contain\n\t\t\t# spaces, e.g.:  addr[6 + 2]\n\t\t\t# and this appears in @prms as \"addr[6\" since the\n\t\t\t# parameter list is split at spaces;\n\t\t\t# hence just ignore \"[...\" for the sections check;\n\t\t\t$prm_clean =~ s/\\[.*//;\n\n",
                    "rendered": {
                      "text": "\t\t\t# however, the original param string may contain\n\t\t\t# spaces, e.g.:  addr[6 + 2]\n\t\t\t# and this appears in @prms as \"addr[6\" since the\n\t\t\t# parameter list is split at spaces;\n\t\t\t# hence just ignore \"[...\" for the sections check;\n\t\t\t$prm_clean =~ s/\\[.*//;\n\n",
                      "markdown": "`\t\t\t# however, the original param string may contain\n\t\t\t# spaces, e.g.:  addr[6 + 2]\n\t\t\t# and this appears in @prms as \"addr[6\" since the\n\t\t\t# parameter list is split at spaces;\n\t\t\t# hence just ignore \"[...\" for the sections check;\n\t\t\t$prm_clean =~ s/\\[.*//;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1236,
                  "startColumn": 36,
                  "endLine": 1236,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t\treturn 0;\n\t\t}\n\t}\n\tdie(\"Please add the new output type at show_warnings()\");\n}\n\nsub dump_enum($$) {\n",
                    "rendered": {
                      "text": "\t\t\treturn 0;\n\t\t}\n\t}\n\tdie(\"Please add the new output type at show_warnings()\");\n}\n\nsub dump_enum($$) {\n",
                      "markdown": "`\t\t\treturn 0;\n\t\t}\n\t}\n\tdie(\"Please add the new output type at show_warnings()\");\n}\n\nsub dump_enum($$) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 48,
                  "endLine": 358,
                  "endColumn": 52,
                  "snippet": {
                    "text": "# 'function', 'struct', 'union', 'enum', 'typedef'\nmy $decl_type;\n\nmy $doc_start = '^/\\*\\*\\s*$'; # Allow whitespace at end of comment start.\nmy $doc_end = '\\*/';\nmy $doc_com = '\\s*\\*\\s*';\nmy $doc_com_body = '\\s*\\* ?';\n",
                    "rendered": {
                      "text": "# 'function', 'struct', 'union', 'enum', 'typedef'\nmy $decl_type;\n\nmy $doc_start = '^/\\*\\*\\s*$'; # Allow whitespace at end of comment start.\nmy $doc_end = '\\*/';\nmy $doc_com = '\\s*\\*\\s*';\nmy $doc_com_body = '\\s*\\* ?';\n",
                      "markdown": "`# 'function', 'struct', 'union', 'enum', 'typedef'\nmy $decl_type;\n\nmy $doc_start = '^/\\*\\*\\s*$'; # Allow whitespace at end of comment start.\nmy $doc_end = '\\*/';\nmy $doc_com = '\\s*\\*\\s*';\nmy $doc_com_body = '\\s*\\* ?';\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 50,
                  "endLine": 318,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t$verbose = \"$ENV{'KBUILD_VERBOSE'}\";\n}\n\n# Generated docbook code is inserted in a template at a point where\n# docbook v3.1 requires a non-zero sequence of RefEntry's; see:\n# http://www.oasis-open.org/docbook/documentation/reference/html/refentry.html\n# We keep track of number of generated entries and generate a dummy\n",
                    "rendered": {
                      "text": "\t$verbose = \"$ENV{'KBUILD_VERBOSE'}\";\n}\n\n# Generated docbook code is inserted in a template at a point where\n# docbook v3.1 requires a non-zero sequence of RefEntry's; see:\n# http://www.oasis-open.org/docbook/documentation/reference/html/refentry.html\n# We keep track of number of generated entries and generate a dummy\n",
                      "markdown": "`\t$verbose = \"$ENV{'KBUILD_VERBOSE'}\";\n}\n\n# Generated docbook code is inserted in a template at a point where\n# docbook v3.1 requires a non-zero sequence of RefEntry's; see:\n# http://www.oasis-open.org/docbook/documentation/reference/html/refentry.html\n# We keep track of number of generated entries and generate a dummy\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 22,
                  "endLine": 30,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# Still to do:\n# \t- add perldoc documentation\n# \t- Look more closely at some of the scarier bits :)\n\n# 26/05/2001 - \tSupport for separate source and object trees.\n#\t\tReturn error code.\n",
                    "rendered": {
                      "text": "\n# Still to do:\n# \t- add perldoc documentation\n# \t- Look more closely at some of the scarier bits :)\n\n# 26/05/2001 - \tSupport for separate source and object trees.\n#\t\tReturn error code.\n",
                      "markdown": "`\n# Still to do:\n# \t- add perldoc documentation\n# \t- Look more closely at some of the scarier bits :)\n\n# 26/05/2001 - \tSupport for separate source and object trees.\n#\t\tReturn error code.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1596,
                  "startColumn": 30,
                  "endLine": 1596,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    # 2. Function name\n    # 3. Function parameters.\n    #\n    # All the while we have to watch out for function pointer parameters\n    # (which IIRC is what the two sections are for), C types (these\n    # regexps don't even start to express all the possibilities), and\n    # so on.\n",
                    "rendered": {
                      "text": "    # 2. Function name\n    # 3. Function parameters.\n    #\n    # All the while we have to watch out for function pointer parameters\n    # (which IIRC is what the two sections are for), C types (these\n    # regexps don't even start to express all the possibilities), and\n    # so on.\n",
                      "markdown": "`    # 2. Function name\n    # 3. Function parameters.\n    #\n    # All the while we have to watch out for function pointer parameters\n    # (which IIRC is what the two sections are for), C types (these\n    # regexps don't even start to express all the possibilities), and\n    # so on.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1485,
                  "startColumn": 53,
                  "endLine": 1486,
                  "snippet": {
                    "text": "\n\t# strip spaces from $param so that it is one continuous string\n\t# on @parameterlist;\n\t# this fixes a problem where check_sections() cannot find\n\t# a parameter like \"addr[6 + 2]\" because it actually appears\n\t# as \"addr[6\", \"+\", \"2]\" on the parameter list;\n\t# but it's better to maintain the param string unchanged for output,\n\t# so just weaken the string compare in check_sections() to ignore\n",
                    "rendered": {
                      "text": "\n\t# strip spaces from $param so that it is one continuous string\n\t# on @parameterlist;\n\t# this fixes a problem where check_sections() cannot find\n\t# a parameter like \"addr[6 + 2]\" because it actually appears\n\t# as \"addr[6\", \"+\", \"2]\" on the parameter list;\n\t# but it's better to maintain the param string unchanged for output,\n\t# so just weaken the string compare in check_sections() to ignore\n",
                      "markdown": "`\n\t# strip spaces from $param so that it is one continuous string\n\t# on @parameterlist;\n\t# this fixes a problem where check_sections() cannot find\n\t# a parameter like \"addr[6 + 2]\" because it actually appears\n\t# as \"addr[6\", \"+\", \"2]\" on the parameter list;\n\t# but it's better to maintain the param string unchanged for output,\n\t# so just weaken the string compare in check_sections() to ignore\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 25,
                  "endLine": 448,
                  "snippet": {
                    "text": "\n# continue execution near EOF;\n\n# get kernel version from env\nsub get_kernel_version() {\n    my $version = 'unknown kernel version';\n\n    if (defined($ENV{'KERNELVERSION'})) {\n",
                    "rendered": {
                      "text": "\n# continue execution near EOF;\n\n# get kernel version from env\nsub get_kernel_version() {\n    my $version = 'unknown kernel version';\n\n    if (defined($ENV{'KERNELVERSION'})) {\n",
                      "markdown": "`\n# continue execution near EOF;\n\n# get kernel version from env\nsub get_kernel_version() {\n    my $version = 'unknown kernel version';\n\n    if (defined($ENV{'KERNELVERSION'})) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 27,
                  "endLine": 211,
                  "endColumn": 33,
                  "snippet": {
                    "text": "my $warnings = 0;\nmy $anon_struct_union = 0;\n\n# match expressions used to find embedded type information\nmy $type_constant = '\\b``([^\\`]+)``\\b';\nmy $type_constant2 = '\\%([-_\\w]+)';\nmy $type_func = '(\\w+)\\(\\)';\n",
                    "rendered": {
                      "text": "my $warnings = 0;\nmy $anon_struct_union = 0;\n\n# match expressions used to find embedded type information\nmy $type_constant = '\\b``([^\\`]+)``\\b';\nmy $type_constant2 = '\\%([-_\\w]+)';\nmy $type_func = '(\\w+)\\(\\)';\n",
                      "markdown": "`my $warnings = 0;\nmy $anon_struct_union = 0;\n\n# match expressions used to find embedded type information\nmy $type_constant = '\\b``([^\\`]+)``\\b';\nmy $type_constant2 = '\\%([-_\\w]+)';\nmy $type_func = '(\\w+)\\(\\)';\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/kernel-doc"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env perl\n# SPDX-License-Identifier: GPL-2.0\n\nuse warnings;\nuse strict;\n",
                    "rendered": {
                      "text": "#!/usr/bin/env perl\n# SPDX-License-Identifier: GPL-2.0\n\nuse warnings;\nuse strict;\n",
                      "markdown": "`#!/usr/bin/env perl\n# SPDX-License-Identifier: GPL-2.0\n\nuse warnings;\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/native.yaml"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 60,
                  "endLine": 124,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        id: root-test\n        continue-on-error: true\n      - name: show root test output\n        run: for o in tests/*.out; do echo \"===== $o =====\"; cat \"$o\"; done\n      - name: fail\n        run: /bin/false\n        if: ${{ steps.root-test.outcome == 'failure' }}\n",
                    "rendered": {
                      "text": "        id: root-test\n        continue-on-error: true\n      - name: show root test output\n        run: for o in tests/*.out; do echo \"===== $o =====\"; cat \"$o\"; done\n      - name: fail\n        run: /bin/false\n        if: ${{ steps.root-test.outcome == 'failure' }}\n",
                      "markdown": "`        id: root-test\n        continue-on-error: true\n      - name: show root test output\n        run: for o in tests/*.out; do echo \"===== $o =====\"; cat \"$o\"; done\n      - name: fail\n        run: /bin/false\n        if: ${{ steps.root-test.outcome == 'failure' }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/native.yaml"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 12,
                  "endLine": 108,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: cpio -idv < native-${{ matrix.os }}/test-progs.cpio\n        if: ${{ matrix.os == 'opensuse-leap' }}\n      - name: unpack binary archive\n        run: tar xfmv native-${{ matrix.os }}/test-progs.tar\n        if: ${{ matrix.os != 'opensuse-leap' }}\n\n      - name: run root tests\n",
                    "rendered": {
                      "text": "        run: cpio -idv < native-${{ matrix.os }}/test-progs.cpio\n        if: ${{ matrix.os == 'opensuse-leap' }}\n      - name: unpack binary archive\n        run: tar xfmv native-${{ matrix.os }}/test-progs.tar\n        if: ${{ matrix.os != 'opensuse-leap' }}\n\n      - name: run root tests\n",
                      "markdown": "`        run: cpio -idv < native-${{ matrix.os }}/test-progs.cpio\n        if: ${{ matrix.os == 'opensuse-leap' }}\n      - name: unpack binary archive\n        run: tar xfmv native-${{ matrix.os }}/test-progs.tar\n        if: ${{ matrix.os != 'opensuse-leap' }}\n\n      - name: run root tests\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/native.yaml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 43,
                  "endLine": 52,
                  "snippet": {
                    "text": "        run: make -j -Orecurse READLINE=libreadline test\n\n      - name: set archive name\n        # Leap containers have cpio but not tar\n        run: echo ARCHIVE_TGT=test-progs.cpio >> $GITHUB_ENV\n        if: ${{ matrix.os == 'opensuse-leap' }}\n      - name: set archive name\n        run: echo ARCHIVE_TGT=test-progs.tar >> $GITHUB_ENV\n",
                    "rendered": {
                      "text": "        run: make -j -Orecurse READLINE=libreadline test\n\n      - name: set archive name\n        # Leap containers have cpio but not tar\n        run: echo ARCHIVE_TGT=test-progs.cpio >> $GITHUB_ENV\n        if: ${{ matrix.os == 'opensuse-leap' }}\n      - name: set archive name\n        run: echo ARCHIVE_TGT=test-progs.tar >> $GITHUB_ENV\n",
                      "markdown": "`        run: make -j -Orecurse READLINE=libreadline test\n\n      - name: set archive name\n        # Leap containers have cpio but not tar\n        run: echo ARCHIVE_TGT=test-progs.cpio >> $GITHUB_ENV\n        if: ${{ matrix.os == 'opensuse-leap' }}\n      - name: set archive name\n        run: echo ARCHIVE_TGT=test-progs.tar >> $GITHUB_ENV\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/io_err_stat.c"
                },
                "region": {
                  "startLine": 607,
                  "startColumn": 16,
                  "endLine": 607,
                  "endColumn": 25,
                  "snippet": {
                    "text": "{\n\tstruct io_event events[CONCUR_NR_EVENT];\n\tint\t\ti, n;\n\tstruct timespec\ttimeout = { .tv_nsec = timeout_nsecs };\n\n\tpthread_testcancel();\n\tn = io_getevents(ioctx, 1L, CONCUR_NR_EVENT, events, &timeout);\n",
                    "rendered": {
                      "text": "{\n\tstruct io_event events[CONCUR_NR_EVENT];\n\tint\t\ti, n;\n\tstruct timespec\ttimeout = { .tv_nsec = timeout_nsecs };\n\n\tpthread_testcancel();\n\tn = io_getevents(ioctx, 1L, CONCUR_NR_EVENT, events, &timeout);\n",
                      "markdown": "`{\n\tstruct io_event events[CONCUR_NR_EVENT];\n\tint\t\ti, n;\n\tstruct timespec\ttimeout = { .tv_nsec = timeout_nsecs };\n\n\tpthread_testcancel();\n\tn = io_getevents(ioctx, 1L, CONCUR_NR_EVENT, events, &timeout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/config.c"
                },
                "region": {
                  "startLine": 864,
                  "startColumn": 7,
                  "endLine": 864,
                  "endColumn": 17,
                  "snippet": {
                    "text": "#ifdef USE_SYSTEMD\nstatic void set_max_checkint_from_watchdog(struct config *conf)\n{\n\tchar *envp = getenv(\"WATCHDOG_USEC\");\n\tunsigned long checkint;\n\n\tif (envp && sscanf(envp, \"%lu\", &checkint) == 1) {\n",
                    "rendered": {
                      "text": "#ifdef USE_SYSTEMD\nstatic void set_max_checkint_from_watchdog(struct config *conf)\n{\n\tchar *envp = getenv(\"WATCHDOG_USEC\");\n\tunsigned long checkint;\n\n\tif (envp && sscanf(envp, \"%lu\", &checkint) == 1) {\n",
                      "markdown": "`#ifdef USE_SYSTEMD\nstatic void set_max_checkint_from_watchdog(struct config *conf)\n{\n\tchar *envp = getenv(\"WATCHDOG_USEC\");\n\tunsigned long checkint;\n\n\tif (envp && sscanf(envp, \"%lu\", &checkint) == 1) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/print.c"
                },
                "region": {
                  "startLine": 1737,
                  "startColumn": 42,
                  "endLine": 1737,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\tsize_t initial_len = get_strbuf_len(buff);\n\tint rc;\n\n\tif ((rc = append_strbuf_str(buff, \"device node rules:\\n- blacklist:\\n\")) < 0)\n\t\treturn rc;\n\tif ((rc = snprint_blacklist_group(buff, &conf->blist_devnode)) < 0)\n\t\treturn rc;\n",
                    "rendered": {
                      "text": "\tsize_t initial_len = get_strbuf_len(buff);\n\tint rc;\n\n\tif ((rc = append_strbuf_str(buff, \"device node rules:\\n- blacklist:\\n\")) < 0)\n\t\treturn rc;\n\tif ((rc = snprint_blacklist_group(buff, &conf->blist_devnode)) < 0)\n\t\treturn rc;\n",
                      "markdown": "`\tsize_t initial_len = get_strbuf_len(buff);\n\tint rc;\n\n\tif ((rc = append_strbuf_str(buff, \"device node rules:\\n- blacklist:\\n\")) < 0)\n\t\treturn rc;\n\tif ((rc = snprint_blacklist_group(buff, &conf->blist_devnode)) < 0)\n\t\treturn rc;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/alias.c"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 27,
                  "endLine": 696,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t}\n\tif (strlen(*wwid) > WWID_SIZE - 1) {\n\t\tcondlog(3,\n\t\t\t\"Ignoring too large wwid at %u in bindings file\",\n\t\t\tlinenr);\n\t\treturn READ_BINDING_SKIP;\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tif (strlen(*wwid) > WWID_SIZE - 1) {\n\t\tcondlog(3,\n\t\t\t\"Ignoring too large wwid at %u in bindings file\",\n\t\t\tlinenr);\n\t\treturn READ_BINDING_SKIP;\n\t}\n",
                      "markdown": "`\t}\n\tif (strlen(*wwid) > WWID_SIZE - 1) {\n\t\tcondlog(3,\n\t\t\t\"Ignoring too large wwid at %u in bindings file\",\n\t\t\tlinenr);\n\t\treturn READ_BINDING_SKIP;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/alias.c"
                },
                "region": {
                  "startLine": 646,
                  "startColumn": 20,
                  "endLine": 646,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tint rc = -1;\n\n\tif (!alias || *alias == '\\0') {\n\t\tcondlog(3, \"Cannot find binding for empty alias\");\n\t\treturn -1;\n\t}\n\n",
                    "rendered": {
                      "text": "\tint rc = -1;\n\n\tif (!alias || *alias == '\\0') {\n\t\tcondlog(3, \"Cannot find binding for empty alias\");\n\t\treturn -1;\n\t}\n\n",
                      "markdown": "`\tint rc = -1;\n\n\tif (!alias || *alias == '\\0') {\n\t\tcondlog(3, \"Cannot find binding for empty alias\");\n\t\treturn -1;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/Makefile"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 59,
                  "endLine": 122,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t@echo building $@\n\t$(Q)$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $< $($@_TESTDEPS) $($@_OBJDEPS) \\\n\t\t$(LIBDEPS) $($@_LIBDEPS) \\\n\t\t$(shell cat $<.wrap) $(foreach dep,$($@_TESTDEPS),$(shell cat $(dep).wrap))\n",
                    "rendered": {
                      "text": "\t@echo building $@\n\t$(Q)$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $< $($@_TESTDEPS) $($@_OBJDEPS) \\\n\t\t$(LIBDEPS) $($@_LIBDEPS) \\\n\t\t$(shell cat $<.wrap) $(foreach dep,$($@_TESTDEPS),$(shell cat $(dep).wrap))\n",
                      "markdown": "`\t@echo building $@\n\t$(Q)$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $< $($@_TESTDEPS) $($@_OBJDEPS) \\\n\t\t$(LIBDEPS) $($@_LIBDEPS) \\\n\t\t$(shell cat $<.wrap) $(foreach dep,$($@_TESTDEPS),$(shell cat $(dep).wrap))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/Makefile"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 9,
                  "endLine": 122,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t@echo building $@\n\t$(Q)$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $< $($@_TESTDEPS) $($@_OBJDEPS) \\\n\t\t$(LIBDEPS) $($@_LIBDEPS) \\\n\t\t$(shell cat $<.wrap) $(foreach dep,$($@_TESTDEPS),$(shell cat $(dep).wrap))\n",
                    "rendered": {
                      "text": "\t@echo building $@\n\t$(Q)$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $< $($@_TESTDEPS) $($@_OBJDEPS) \\\n\t\t$(LIBDEPS) $($@_LIBDEPS) \\\n\t\t$(shell cat $<.wrap) $(foreach dep,$($@_TESTDEPS),$(shell cat $(dep).wrap))\n",
                      "markdown": "`\t@echo building $@\n\t$(Q)$(CC) $(CFLAGS) -o $@ $(LDFLAGS) $< $($@_TESTDEPS) $($@_OBJDEPS) \\\n\t\t$(LIBDEPS) $($@_LIBDEPS) \\\n\t\t$(shell cat $<.wrap) $(foreach dep,$($@_TESTDEPS),$(shell cat $(dep).wrap))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/Makefile"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 7,
                  "snippet": {
                    "text": "%.o.wrap:\t%.c\n\t$(Q)$(CC) $(OPTFLAGS) $(CPPFLAGS) $($*-test_FLAGS) -E $< | \\\n\t\tsed -n 's/^.*__wrap_\\([a-zA-Z0-9_]*\\).*$$/-Wl,--wrap=\\1/p' | \\\n\t\tsort -u | tr '\\n' ' ' >$@\n\n# Pass the original values of CFLAGS etc. to the sub-make, which will include\n# Makefile.in again. Otherwise, the flags would be added twice.\n",
                    "rendered": {
                      "text": "%.o.wrap:\t%.c\n\t$(Q)$(CC) $(OPTFLAGS) $(CPPFLAGS) $($*-test_FLAGS) -E $< | \\\n\t\tsed -n 's/^.*__wrap_\\([a-zA-Z0-9_]*\\).*$$/-Wl,--wrap=\\1/p' | \\\n\t\tsort -u | tr '\\n' ' ' >$@\n\n# Pass the original values of CFLAGS etc. to the sub-make, which will include\n# Makefile.in again. Otherwise, the flags would be added twice.\n",
                      "markdown": "`%.o.wrap:\t%.c\n\t$(Q)$(CC) $(OPTFLAGS) $(CPPFLAGS) $($*-test_FLAGS) -E $< | \\\n\t\tsed -n 's/^.*__wrap_\\([a-zA-Z0-9_]*\\).*$$/-Wl,--wrap=\\1/p' | \\\n\t\tsort -u | tr '\\n' ' ' >$@\n\n# Pass the original values of CFLAGS etc. to the sub-make, which will include\n# Makefile.in again. Otherwise, the flags would be added twice.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/Makefile"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# See comment in wrap64.h\n%.o.wrap:\t%.c\n\t$(Q)$(CC) $(OPTFLAGS) $(CPPFLAGS) $($*-test_FLAGS) -E $< | \\\n\t\tsed -n 's/^.*__wrap_\\([a-zA-Z0-9_]*\\).*$$/-Wl,--wrap=\\1/p' | \\\n\t\tsort -u | tr '\\n' ' ' >$@\n\n# Pass the original values of CFLAGS etc. to the sub-make, which will include\n",
                    "rendered": {
                      "text": "# See comment in wrap64.h\n%.o.wrap:\t%.c\n\t$(Q)$(CC) $(OPTFLAGS) $(CPPFLAGS) $($*-test_FLAGS) -E $< | \\\n\t\tsed -n 's/^.*__wrap_\\([a-zA-Z0-9_]*\\).*$$/-Wl,--wrap=\\1/p' | \\\n\t\tsort -u | tr '\\n' ' ' >$@\n\n# Pass the original values of CFLAGS etc. to the sub-make, which will include\n",
                      "markdown": "`# See comment in wrap64.h\n%.o.wrap:\t%.c\n\t$(Q)$(CC) $(OPTFLAGS) $(CPPFLAGS) $($*-test_FLAGS) -E $< | \\\n\t\tsed -n 's/^.*__wrap_\\([a-zA-Z0-9_]*\\).*$$/-Wl,--wrap=\\1/p' | \\\n\t\tsort -u | tr '\\n' ' ' >$@\n\n# Pass the original values of CFLAGS etc. to the sub-make, which will include\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/Makefile"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 69,
                  "endLine": 75,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n%.out:\t%-test lib/libchecktur.so\n\t@echo == running $< ==\n\t@LD_LIBRARY_PATH=.:$(mpathutildir):$(mpathcmddir) ./$< >$@ 2>&1 || { cat \"$@\"; false; }\n\n%.vgr:  %-test lib/libchecktur.so\n\t@echo == running valgrind for $< ==\n",
                    "rendered": {
                      "text": "\n%.out:\t%-test lib/libchecktur.so\n\t@echo == running $< ==\n\t@LD_LIBRARY_PATH=.:$(mpathutildir):$(mpathcmddir) ./$< >$@ 2>&1 || { cat \"$@\"; false; }\n\n%.vgr:  %-test lib/libchecktur.so\n\t@echo == running valgrind for $< ==\n",
                      "markdown": "`\n%.out:\t%-test lib/libchecktur.so\n\t@echo == running $< ==\n\t@LD_LIBRARY_PATH=.:$(mpathutildir):$(mpathcmddir) ./$< >$@ 2>&1 || { cat \"$@\"; false; }\n\n%.vgr:  %-test lib/libchecktur.so\n\t@echo == running valgrind for $< ==\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx.rules.in"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "ENV{DM_SUBSYSTEM_UDEV_FLAG1}==\"1\", GOTO=\"mpath_kpartx_end\"\n\n# 11-dm-mpath.rules sets MPATH_UNCHANGED for events that can be ignored.\nENV{MPATH_UNCHANGED}==\"1\", GOTO=\"mpath_kpartx_end\"\n\n# Don't run kpartx now if we know it will fail or hang.\n# This is required for device mapper rules v2 compatibility.\n",
                    "rendered": {
                      "text": "ENV{DM_SUBSYSTEM_UDEV_FLAG1}==\"1\", GOTO=\"mpath_kpartx_end\"\n\n# 11-dm-mpath.rules sets MPATH_UNCHANGED for events that can be ignored.\nENV{MPATH_UNCHANGED}==\"1\", GOTO=\"mpath_kpartx_end\"\n\n# Don't run kpartx now if we know it will fail or hang.\n# This is required for device mapper rules v2 compatibility.\n",
                      "markdown": "`ENV{DM_SUBSYSTEM_UDEV_FLAG1}==\"1\", GOTO=\"mpath_kpartx_end\"\n\n# 11-dm-mpath.rules sets MPATH_UNCHANGED for events that can be ignored.\nENV{MPATH_UNCHANGED}==\"1\", GOTO=\"mpath_kpartx_end\"\n\n# Don't run kpartx now if we know it will fail or hang.\n# This is required for device mapper rules v2 compatibility.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx_id"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 37,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n# Device-mapper not installed; not an error\nif [ ! -x \"$DMSETUP\" ] ; then\n    echo \"$0: dmsetup not found\" >&2\n    exit 0\nfi\n\n",
                    "rendered": {
                      "text": "\n# Device-mapper not installed; not an error\nif [ ! -x \"$DMSETUP\" ] ; then\n    echo \"$0: dmsetup not found\" >&2\n    exit 0\nfi\n\n",
                      "markdown": "`\n# Device-mapper not installed; not an error\nif [ ! -x \"$DMSETUP\" ] ; then\n    echo \"$0: dmsetup not found\" >&2\n    exit 0\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx_id"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#       under the terms of the GNU General Public License as published by the\n#       Free Software Foundation version 2 of the License.\n#\n# This script generates ID information used to generate persistent symlinks.\n# It relies on the UUID strings generated by the various programs; the name\n# of the tables are of no consequence.\n#\n",
                    "rendered": {
                      "text": "#       under the terms of the GNU General Public License as published by the\n#       Free Software Foundation version 2 of the License.\n#\n# This script generates ID information used to generate persistent symlinks.\n# It relies on the UUID strings generated by the various programs; the name\n# of the tables are of no consequence.\n#\n",
                      "markdown": "`#       under the terms of the GNU General Public License as published by the\n#       Free Software Foundation version 2 of the License.\n#\n# This script generates ID information used to generate persistent symlinks.\n# It relies on the UUID strings generated by the various programs; the name\n# of the tables are of no consequence.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/Makefile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 13,
                  "endLine": 28,
                  "endColumn": 18,
                  "snippet": {
                    "text": "RL_CPPFLAGS\t:= -DUSE_LIBEDIT\nRL_LIBDEPS\t:= -ledit\n# See comment in multipathc.c\nifeq ($(shell sed -En 's/.*\\<Function\\s*\\*rl_completion_entry_function;.*/yes/p' /usr/include/editline/readline.h),yes)\nRL_CPPFLAGS += -DBROKEN_RL_COMPLETION_FUNC\nendif\nendif\n",
                    "rendered": {
                      "text": "RL_CPPFLAGS\t:= -DUSE_LIBEDIT\nRL_LIBDEPS\t:= -ledit\n# See comment in multipathc.c\nifeq ($(shell sed -En 's/.*\\<Function\\s*\\*rl_completion_entry_function;.*/yes/p' /usr/include/editline/readline.h),yes)\nRL_CPPFLAGS += -DBROKEN_RL_COMPLETION_FUNC\nendif\nendif\n",
                      "markdown": "`RL_CPPFLAGS\t:= -DUSE_LIBEDIT\nRL_LIBDEPS\t:= -ledit\n# See comment in multipathc.c\nifeq ($(shell sed -En 's/.*\\<Function\\s*\\*rl_completion_entry_function;.*/yes/p' /usr/include/editline/readline.h),yes)\nRL_CPPFLAGS += -DBROKEN_RL_COMPLETION_FUNC\nendif\nendif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/mpathpersist.8.in"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 31,
                  "endLine": 231,
                  "endColumn": 35,
                  "snippet": {
                    "text": "(i.e. list of options and parameters) for \\fBmpathpersist\\fR. Options\nand parameters are separated by one or more whitespace characters (space or TAB).\nLines can, but do not have to, begin with the word \\(dqmpathpersist\\(dq.\nThe \\(dq#\\(dq character, either at the beginning of the line or following\nsome whitespace, denotes the start of a comment that lasts until the end of the\nline. Empty lines are allowed. Continuation of mpathpersist commands over\nmultiple lines is not supported.\n",
                    "rendered": {
                      "text": "(i.e. list of options and parameters) for \\fBmpathpersist\\fR. Options\nand parameters are separated by one or more whitespace characters (space or TAB).\nLines can, but do not have to, begin with the word \\(dqmpathpersist\\(dq.\nThe \\(dq#\\(dq character, either at the beginning of the line or following\nsome whitespace, denotes the start of a comment that lasts until the end of the\nline. Empty lines are allowed. Continuation of mpathpersist commands over\nmultiple lines is not supported.\n",
                      "markdown": "`(i.e. list of options and parameters) for \\fBmpathpersist\\fR. Options\nand parameters are separated by one or more whitespace characters (space or TAB).\nLines can, but do not have to, begin with the word \\(dqmpathpersist\\(dq.\nThe \\(dq#\\(dq character, either at the beginning of the line or following\nsome whitespace, denotes the start of a comment that lasts until the end of the\nline. Empty lines are allowed. Continuation of mpathpersist commands over\nmultiple lines is not supported.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/mpathpersist.8.in"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 19,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": ".TP\n.BI \\--batch-file=\\fIDEVICE\\fB|\\-f \" FILE\"\nRead commands from \\fIFILE\\fR. See section \\(dqBATCH FILES\\(dq below. This\noption can be given at most once.\n.\n.TP\n.B \\--help|\\-h\n",
                    "rendered": {
                      "text": ".TP\n.BI \\--batch-file=\\fIDEVICE\\fB|\\-f \" FILE\"\nRead commands from \\fIFILE\\fR. See section \\(dqBATCH FILES\\(dq below. This\noption can be given at most once.\n.\n.TP\n.B \\--help|\\-h\n",
                      "markdown": "`.TP\n.BI \\--batch-file=\\fIDEVICE\\fB|\\-f \" FILE\"\nRead commands from \\fIFILE\\fR. See section \\(dqBATCH FILES\\(dq below. This\noption can be given at most once.\n.\n.TP\n.B \\--help|\\-h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/mpathpersist.8.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t mpathpersist/mpathpersist.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z mpathpersist/mpathpersist.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATHPERSIST 8 2021-11-12 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t mpathpersist/mpathpersist.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z mpathpersist/mpathpersist.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATHPERSIST 8 2021-11-12 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t mpathpersist/mpathpersist.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z mpathpersist/mpathpersist.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATHPERSIST 8 2021-11-12 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/mpathpersist.8.in"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 16,
                  "endLine": 113,
                  "endColumn": 25,
                  "snippet": {
                    "text": ".\n.TP\n.BI \\--param-sark=\\fISARK\\fB|\\-S \" SARK\"\nPR Out parameter service action reservation key (SARK is in hex).\n.\n.TP\n.B \\--preempt|\\-P\n",
                    "rendered": {
                      "text": ".\n.TP\n.BI \\--param-sark=\\fISARK\\fB|\\-S \" SARK\"\nPR Out parameter service action reservation key (SARK is in hex).\n.\n.TP\n.B \\--preempt|\\-P\n",
                      "markdown": "`.\n.TP\n.BI \\--param-sark=\\fISARK\\fB|\\-S \" SARK\"\nPR Out parameter service action reservation key (SARK is in hex).\n.\n.TP\n.B \\--preempt|\\-P\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/main.c"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 35,
                  "endLine": 222,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t\tif (batch_fn != NULL) {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t\"ERROR: -f option can be used at most once\\n\");\n\t\t\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\t\t\tgoto out;\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t\tif (batch_fn != NULL) {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t\"ERROR: -f option can be used at most once\\n\");\n\t\t\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\t\t\tgoto out;\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t\tif (batch_fn != NULL) {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t\"ERROR: -f option can be used at most once\\n\");\n\t\t\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\t\t\tgoto out;\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/main.c"
                },
                "region": {
                  "startLine": 853,
                  "startColumn": 51,
                  "endLine": 853,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t\"    --param-aptpl|-Z           PR Out parameter 'APTPL'\\n\"\n\t\t\t\"    --read-keys|-k             PR In: Read Keys\\n\"\n\t\t\t\"    --param-rk=RK|-K RK        PR Out parameter reservation key\\n\"\n\t\t\t\"    --param-sark=SARK|-S SARK  PR Out parameter service action\\n\"\n\t\t\t\"                               reservation key (SARK is in hex)\\n\"\n\t\t\t\"    --preempt|-P               PR Out: Preempt\\n\"\n\t\t\t\"    --preempt-abort|-A         PR Out: Preempt and Abort\\n\"\n",
                    "rendered": {
                      "text": "\t\t\t\"    --param-aptpl|-Z           PR Out parameter 'APTPL'\\n\"\n\t\t\t\"    --read-keys|-k             PR In: Read Keys\\n\"\n\t\t\t\"    --param-rk=RK|-K RK        PR Out parameter reservation key\\n\"\n\t\t\t\"    --param-sark=SARK|-S SARK  PR Out parameter service action\\n\"\n\t\t\t\"                               reservation key (SARK is in hex)\\n\"\n\t\t\t\"    --preempt|-P               PR Out: Preempt\\n\"\n\t\t\t\"    --preempt-abort|-A         PR Out: Preempt and Abort\\n\"\n",
                      "markdown": "`\t\t\t\"    --param-aptpl|-Z           PR Out parameter 'APTPL'\\n\"\n\t\t\t\"    --read-keys|-k             PR In: Read Keys\\n\"\n\t\t\t\"    --param-rk=RK|-K RK        PR Out parameter reservation key\\n\"\n\t\t\t\"    --param-sark=SARK|-S SARK  PR Out parameter service action\\n\"\n\t\t\t\"                               reservation key (SARK is in hex)\\n\"\n\t\t\t\"    --preempt|-P               PR Out: Preempt\\n\"\n\t\t\t\"    --preempt-abort|-A         PR Out: Preempt and Abort\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/main.c"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 30,
                  "endLine": 446,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t}\n\t\telse if (num_prin_sa > 1)\n\t\t{\n\t\t\tfprintf (stderr, \" Too many service actions given; choose \"\n\t\t\t\t\t\"one only\\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t\t}\n\t\telse if (num_prin_sa > 1)\n\t\t{\n\t\t\tfprintf (stderr, \" Too many service actions given; choose \"\n\t\t\t\t\t\"one only\\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n",
                      "markdown": "`\t\t}\n\t\telse if (num_prin_sa > 1)\n\t\t{\n\t\t\tfprintf (stderr, \" Too many service actions given; choose \"\n\t\t\t\t\t\"one only\\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/main.c"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 9,
                  "endLine": 440,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\tif (0 == num_prin_sa)\n\t\t{\n\t\t\tfprintf (stderr,\n\t\t\t\t\t\" No service action given for Persistent Reserve IN\\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tif (0 == num_prin_sa)\n\t\t{\n\t\t\tfprintf (stderr,\n\t\t\t\t\t\" No service action given for Persistent Reserve IN\\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n\t\t}\n",
                      "markdown": "`\t\tif (0 == num_prin_sa)\n\t\t{\n\t\t\tfprintf (stderr,\n\t\t\t\t\t\" No service action given for Persistent Reserve IN\\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/main.c"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 28,
                  "endLine": 431,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\tprout = 0;\n\t\tif (num_prout_sa > 0)\n\t\t{\n\t\t\tfprintf (stderr, \" When a service action for Persistent \"\n\t\t\t\t\t\"Reserve Out is chosen the\\n\"\n\t\t\t\t\t\" '--out' option must be given \\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n",
                    "rendered": {
                      "text": "\t\tprout = 0;\n\t\tif (num_prout_sa > 0)\n\t\t{\n\t\t\tfprintf (stderr, \" When a service action for Persistent \"\n\t\t\t\t\t\"Reserve Out is chosen the\\n\"\n\t\t\t\t\t\" '--out' option must be given \\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n",
                      "markdown": "`\t\tprout = 0;\n\t\tif (num_prout_sa > 0)\n\t\t{\n\t\t\tfprintf (stderr, \" When a service action for Persistent \"\n\t\t\t\t\t\"Reserve Out is chosen the\\n\"\n\t\t\t\t\t\" '--out' option must be given \\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/mpathpersist/main.c"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 19,
                  "endLine": 420,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tif ((1 != num_prout_sa) || (0 != num_prin_sa))\n\t\t{\n\t\t\tfprintf (stderr, \" For Persistent Reserve Out only one \"\n\t\t\t\t\t\"appropriate\\n service action must be \"\n\t\t\t\t\t\"chosen \\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t\tif ((1 != num_prout_sa) || (0 != num_prin_sa))\n\t\t{\n\t\t\tfprintf (stderr, \" For Persistent Reserve Out only one \"\n\t\t\t\t\t\"appropriate\\n service action must be \"\n\t\t\t\t\t\"chosen \\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n",
                      "markdown": "`\t\tif ((1 != num_prout_sa) || (0 != num_prin_sa))\n\t\t{\n\t\t\tfprintf (stderr, \" For Persistent Reserve Out only one \"\n\t\t\t\t\t\"appropriate\\n service action must be \"\n\t\t\t\t\t\"chosen \\n\");\n\t\t\tret = MPATH_PR_SYNTAX_ERROR;\n\t\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/foreign.yaml"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 60,
                  "endLine": 126,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        id: root-test\n        continue-on-error: true\n      - name: show root test output\n        run: for o in tests/*.out; do echo \"===== $o =====\"; cat \"$o\"; done\n      - name: fail\n        run: /bin/false\n        if: ${{ steps.root-test.outcome == 'failure' }}\n",
                    "rendered": {
                      "text": "        id: root-test\n        continue-on-error: true\n      - name: show root test output\n        run: for o in tests/*.out; do echo \"===== $o =====\"; cat \"$o\"; done\n      - name: fail\n        run: /bin/false\n        if: ${{ steps.root-test.outcome == 'failure' }}\n",
                      "markdown": "`        id: root-test\n        continue-on-error: true\n      - name: show root test output\n        run: for o in tests/*.out; do echo \"===== $o =====\"; cat \"$o\"; done\n      - name: fail\n        run: /bin/false\n        if: ${{ steps.root-test.outcome == 'failure' }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/foreign.yaml"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 12,
                  "endLine": 107,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        with:\n          name: cross-${{ matrix.os }}-${{ matrix.arch }}\n      - name: unpack binary archive\n        run: tar xfv cross-${{ matrix.os }}-${{ matrix.arch }}/test-progs.tar\n      - name: enable foreign arch\n        uses: dbhi/qus/action@main\n      - name: run tests\n",
                    "rendered": {
                      "text": "        with:\n          name: cross-${{ matrix.os }}-${{ matrix.arch }}\n      - name: unpack binary archive\n        run: tar xfv cross-${{ matrix.os }}-${{ matrix.arch }}/test-progs.tar\n      - name: enable foreign arch\n        uses: dbhi/qus/action@main\n      - name: run tests\n",
                      "markdown": "`        with:\n          name: cross-${{ matrix.os }}-${{ matrix.arch }}\n      - name: unpack binary archive\n        run: tar xfv cross-${{ matrix.os }}-${{ matrix.arch }}/test-progs.tar\n      - name: enable foreign arch\n        uses: dbhi/qus/action@main\n      - name: run tests\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/foreign.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 12,
                  "endLine": 68,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        with:\n          name: cross-${{ matrix.os }}-${{ matrix.arch }}\n      - name: unpack binary archive\n        run: tar xfv cross-${{ matrix.os }}-${{ matrix.arch }}/test-progs.tar\n      - name: enable foreign arch\n        uses: dbhi/qus/action@main\n      - name: run tests\n",
                    "rendered": {
                      "text": "        with:\n          name: cross-${{ matrix.os }}-${{ matrix.arch }}\n      - name: unpack binary archive\n        run: tar xfv cross-${{ matrix.os }}-${{ matrix.arch }}/test-progs.tar\n      - name: enable foreign arch\n        uses: dbhi/qus/action@main\n      - name: run tests\n",
                      "markdown": "`        with:\n          name: cross-${{ matrix.os }}-${{ matrix.arch }}\n      - name: unpack binary archive\n        run: tar xfv cross-${{ matrix.os }}-${{ matrix.arch }}/test-progs.tar\n      - name: enable foreign arch\n        uses: dbhi/qus/action@main\n      - name: run tests\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 25,
                  "endLine": 83,
                  "snippet": {
                    "text": "      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n          make pkg-config valgrind\n",
                    "rendered": {
                      "text": "      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n          make pkg-config valgrind\n",
                      "markdown": "`      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n          make pkg-config valgrind\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 13,
                  "endLine": 82,
                  "snippet": {
                    "text": "        run: sudo modprobe dm_multipath\n      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n",
                    "rendered": {
                      "text": "        run: sudo modprobe dm_multipath\n      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n",
                      "markdown": "`        run: sudo modprobe dm_multipath\n      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 25,
                  "endLine": 24,
                  "snippet": {
                    "text": "    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          make pkg-config valgrind\n",
                    "rendered": {
                      "text": "    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          make pkg-config valgrind\n",
                      "markdown": "`    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          make pkg-config valgrind\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 23,
                  "snippet": {
                    "text": "        cc: [ gcc, clang ]\n    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                    "rendered": {
                      "text": "        cc: [ gcc, clang ]\n    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                      "markdown": "`        cc: [ gcc, clang ]\n    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 12,
                  "endLine": 100,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        run: make -Orecurse -j$(grep -c ^processor /proc/cpuinfo) valgrind-test\n        continue-on-error: true\n      - name: valgrind-results\n        run: cat tests/*.vgr\n      - name: fail if valgrind failed\n        run: /bin/false\n        if: steps.valgrind.outcome != 'success'\n",
                    "rendered": {
                      "text": "        run: make -Orecurse -j$(grep -c ^processor /proc/cpuinfo) valgrind-test\n        continue-on-error: true\n      - name: valgrind-results\n        run: cat tests/*.vgr\n      - name: fail if valgrind failed\n        run: /bin/false\n        if: steps.valgrind.outcome != 'success'\n",
                      "markdown": "`        run: make -Orecurse -j$(grep -c ^processor /proc/cpuinfo) valgrind-test\n        continue-on-error: true\n      - name: valgrind-results\n        run: cat tests/*.vgr\n      - name: fail if valgrind failed\n        run: /bin/false\n        if: steps.valgrind.outcome != 'success'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 14,
                  "endLine": 85,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n          make pkg-config valgrind\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                    "rendered": {
                      "text": "        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n          make pkg-config valgrind\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                      "markdown": "`        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n          make pkg-config valgrind\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 17,
                  "endLine": 82,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n",
                    "rendered": {
                      "text": "      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n",
                      "markdown": "`      - name: brd\n        run: sudo modprobe brd rd_nr=1 rd_size=65536\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc-10\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 12,
                  "endLine": 60,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          OPTFLAGS=\"$OPT\" valgrind-test\n        continue-on-error: true\n      - name: valgrind-results\n        run: cat tests/*.vgr\n      - name: fail if valgrind failed\n        run: /bin/false\n        if: steps.valgrind.outcome != 'success'\n",
                    "rendered": {
                      "text": "          OPTFLAGS=\"$OPT\" valgrind-test\n        continue-on-error: true\n      - name: valgrind-results\n        run: cat tests/*.vgr\n      - name: fail if valgrind failed\n        run: /bin/false\n        if: steps.valgrind.outcome != 'success'\n",
                      "markdown": "`          OPTFLAGS=\"$OPT\" valgrind-test\n        continue-on-error: true\n      - name: valgrind-results\n        run: cat tests/*.vgr\n      - name: fail if valgrind failed\n        run: /bin/false\n        if: steps.valgrind.outcome != 'success'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 27,
                  "endLine": 38,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      - name: zram-device\n        run: echo ZRAM=$(sudo cat /sys/class/zram-control/hot_add) >> $GITHUB_ENV\n      - name: set-zram-size\n        run: echo 1G | sudo tee /sys/block/zram$ZRAM/disksize\n      - name: set CC\n        run: echo CC=${{ matrix.cc }} >> $GITHUB_ENV\n      - name: set optflags\n",
                    "rendered": {
                      "text": "      - name: zram-device\n        run: echo ZRAM=$(sudo cat /sys/class/zram-control/hot_add) >> $GITHUB_ENV\n      - name: set-zram-size\n        run: echo 1G | sudo tee /sys/block/zram$ZRAM/disksize\n      - name: set CC\n        run: echo CC=${{ matrix.cc }} >> $GITHUB_ENV\n      - name: set optflags\n",
                      "markdown": "`      - name: zram-device\n        run: echo ZRAM=$(sudo cat /sys/class/zram-control/hot_add) >> $GITHUB_ENV\n      - name: set-zram-size\n        run: echo 1G | sudo tee /sys/block/zram$ZRAM/disksize\n      - name: set CC\n        run: echo CC=${{ matrix.cc }} >> $GITHUB_ENV\n      - name: set optflags\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 29,
                  "endLine": 36,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      - name: zram\n        run: sudo modprobe zram num_devices=0\n      - name: zram-device\n        run: echo ZRAM=$(sudo cat /sys/class/zram-control/hot_add) >> $GITHUB_ENV\n      - name: set-zram-size\n        run: echo 1G | sudo tee /sys/block/zram$ZRAM/disksize\n      - name: set CC\n",
                    "rendered": {
                      "text": "      - name: zram\n        run: sudo modprobe zram num_devices=0\n      - name: zram-device\n        run: echo ZRAM=$(sudo cat /sys/class/zram-control/hot_add) >> $GITHUB_ENV\n      - name: set-zram-size\n        run: echo 1G | sudo tee /sys/block/zram$ZRAM/disksize\n      - name: set CC\n",
                      "markdown": "`      - name: zram\n        run: sudo modprobe zram num_devices=0\n      - name: zram-device\n        run: echo ZRAM=$(sudo cat /sys/class/zram-control/hot_add) >> $GITHUB_ENV\n      - name: set-zram-size\n        run: echo 1G | sudo tee /sys/block/zram$ZRAM/disksize\n      - name: set CC\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 14,
                  "endLine": 26,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          make pkg-config valgrind\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                    "rendered": {
                      "text": "        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          make pkg-config valgrind\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                      "markdown": "`        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          make pkg-config valgrind\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/build-and-unittest.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                    "rendered": {
                      "text": "    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                      "markdown": "`    steps:\n      - uses: actions/checkout@v2\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/libmpathutil.version"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 2,
                  "endLine": 12,
                  "endColumn": 7,
                  "snippet": {
                    "text": " * for backward compatibility.\n *\n * The ABI versioning only serves to avoid linking with a non-matching ABI, to\n * cut down the set of exported symbols, and to describe it.\n * The version string is LIBMULTIPATH_$MAJOR.$MINOR.$REL.\n *\n * Policy:\n",
                    "rendered": {
                      "text": " * for backward compatibility.\n *\n * The ABI versioning only serves to avoid linking with a non-matching ABI, to\n * cut down the set of exported symbols, and to describe it.\n * The version string is LIBMULTIPATH_$MAJOR.$MINOR.$REL.\n *\n * Policy:\n",
                      "markdown": "` * for backward compatibility.\n *\n * The ABI versioning only serves to avoid linking with a non-matching ABI, to\n * cut down the set of exported symbols, and to describe it.\n * The version string is LIBMULTIPATH_$MAJOR.$MINOR.$REL.\n *\n * Policy:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/msort.c"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 46,
                  "endLine": 215,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t the original array.  Knuth vol. 3 (2nd ed.) exercise 5.2-10.  */\n      char *kp;\n      size_t i;\n      for (i = 0, ip = (char *) b; i < n; i++, ip += s)\n\tif ((kp = tp[i]) != ip)\n\t  {\n\t    size_t j = i;\n",
                    "rendered": {
                      "text": "\t the original array.  Knuth vol. 3 (2nd ed.) exercise 5.2-10.  */\n      char *kp;\n      size_t i;\n      for (i = 0, ip = (char *) b; i < n; i++, ip += s)\n\tif ((kp = tp[i]) != ip)\n\t  {\n\t    size_t j = i;\n",
                      "markdown": "`\t the original array.  Knuth vol. 3 (2nd ed.) exercise 5.2-10.  */\n      char *kp;\n      size_t i;\n      for (i = 0, ip = (char *) b; i < n; i++, ip += s)\n\tif ((kp = tp[i]) != ip)\n\t  {\n\t    size_t j = i;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/msort.c"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 17,
                  "endLine": 215,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t the original array.  Knuth vol. 3 (2nd ed.) exercise 5.2-10.  */\n      char *kp;\n      size_t i;\n      for (i = 0, ip = (char *) b; i < n; i++, ip += s)\n\tif ((kp = tp[i]) != ip)\n\t  {\n\t    size_t j = i;\n",
                    "rendered": {
                      "text": "\t the original array.  Knuth vol. 3 (2nd ed.) exercise 5.2-10.  */\n      char *kp;\n      size_t i;\n      for (i = 0, ip = (char *) b; i < n; i++, ip += s)\n\tif ((kp = tp[i]) != ip)\n\t  {\n\t    size_t j = i;\n",
                      "markdown": "`\t the original array.  Knuth vol. 3 (2nd ed.) exercise 5.2-10.  */\n      char *kp;\n      size_t i;\n      for (i = 0, ip = (char *) b; i < n; i++, ip += s)\n\tif ((kp = tp[i]) != ip)\n\t  {\n\t    size_t j = i;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/msort.c"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 2,
                  "endLine": 205,
                  "endColumn": 6,
                  "snippet": {
                    "text": "      while ((void *) t < tmp_storage)\n\t{\n\t  *t++ = ip;\n\t  ip += s;\n\t}\n      p.s = sizeof (void *);\n      p.var = 3;\n",
                    "rendered": {
                      "text": "      while ((void *) t < tmp_storage)\n\t{\n\t  *t++ = ip;\n\t  ip += s;\n\t}\n      p.s = sizeof (void *);\n      p.var = 3;\n",
                      "markdown": "`      while ((void *) t < tmp_storage)\n\t{\n\t  *t++ = ip;\n\t  ip += s;\n\t}\n      p.s = sizeof (void *);\n      p.var = 3;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.8.in"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 25,
                  "endLine": 224,
                  "endColumn": 33,
                  "snippet": {
                    "text": ".RE\n.TP\n.B \\-d\nDry run, do not create or update devmaps.\n.\n.TP\n.B \\-e\n",
                    "rendered": {
                      "text": ".RE\n.TP\n.B \\-d\nDry run, do not create or update devmaps.\n.\n.TP\n.B \\-e\n",
                      "markdown": "`.RE\n.TP\n.B \\-d\nDry run, do not create or update devmaps.\n.\n.TP\n.B \\-e\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.8.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t multipath/multipath.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipath/multipath.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATH 8 2023-09-08 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t multipath/multipath.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipath/multipath.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATH 8 2023-09-08 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t multipath/multipath.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipath/multipath.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATH 8 2023-09-08 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.8.in"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 3,
                  "endLine": 285,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".BR multipath.conf (5),\n.BR kpartx (8),\n.BR udev (8),\n.BR dmsetup (8),\n.BR hotplug (8).\n.\n.\n",
                    "rendered": {
                      "text": ".BR multipath.conf (5),\n.BR kpartx (8),\n.BR udev (8),\n.BR dmsetup (8),\n.BR hotplug (8).\n.\n.\n",
                      "markdown": "`.BR multipath.conf (5),\n.BR kpartx (8),\n.BR udev (8),\n.BR dmsetup (8),\n.BR hotplug (8).\n.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.8.in"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 75,
                  "endLine": 105,
                  "endColumn": 81,
                  "snippet": {
                    "text": ".\n.TP 1.4i\n.B device node\nfile name of a device node, e.g. \\fI/dev/dm-10\\fR or \\fI/dev/sda\\fR. If the node refers\nto an existing device mapper device representing a multipath map, this selects\nthe map or its paths, depending on the operation mode. Otherwise, it selects a path device.\n.\n",
                    "rendered": {
                      "text": ".\n.TP 1.4i\n.B device node\nfile name of a device node, e.g. \\fI/dev/dm-10\\fR or \\fI/dev/sda\\fR. If the node refers\nto an existing device mapper device representing a multipath map, this selects\nthe map or its paths, depending on the operation mode. Otherwise, it selects a path device.\n.\n",
                      "markdown": "`.\n.TP 1.4i\n.B device node\nfile name of a device node, e.g. \\fI/dev/dm-10\\fR or \\fI/dev/sda\\fR. If the node refers\nto an existing device mapper device representing a multipath map, this selects\nthe map or its paths, depending on the operation mode. Otherwise, it selects a path device.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.8.in"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 9,
                  "endLine": 105,
                  "snippet": {
                    "text": "its components (\"paths\"). The expression may be in one of the following formats:\n.\n.TP 1.4i\n.B device node\nfile name of a device node, e.g. \\fI/dev/dm-10\\fR or \\fI/dev/sda\\fR. If the node refers\nto an existing device mapper device representing a multipath map, this selects\nthe map or its paths, depending on the operation mode. Otherwise, it selects a path device.\n.\n",
                    "rendered": {
                      "text": "its components (\"paths\"). The expression may be in one of the following formats:\n.\n.TP 1.4i\n.B device node\nfile name of a device node, e.g. \\fI/dev/dm-10\\fR or \\fI/dev/sda\\fR. If the node refers\nto an existing device mapper device representing a multipath map, this selects\nthe map or its paths, depending on the operation mode. Otherwise, it selects a path device.\n.\n",
                      "markdown": "`its components (\"paths\"). The expression may be in one of the following formats:\n.\n.TP 1.4i\n.B device node\nfile name of a device node, e.g. \\fI/dev/dm-10\\fR or \\fI/dev/sda\\fR. If the node refers\nto an existing device mapper device representing a multipath map, this selects\nthe map or its paths, depending on the operation mode. Otherwise, it selects a path device.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/Makefile.inc"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 54,
                  "endLine": 21,
                  "endColumn": 60,
                  "snippet": {
                    "text": "# SCSI_DH_MODULES_PRELOAD := scsi_dh_alua scsi_dh_rdac\nSCSI_DH_MODULES_PRELOAD :=\n\nEXTRAVERSION := $(shell rev=$$(git rev-parse --short=7 HEAD 2>/dev/null); echo $${rev:+-g$$rev})\n\n# PKG_CONFIG must be read from the environment to enable compilation\n# in Debian multiarch setups\n",
                    "rendered": {
                      "text": "# SCSI_DH_MODULES_PRELOAD := scsi_dh_alua scsi_dh_rdac\nSCSI_DH_MODULES_PRELOAD :=\n\nEXTRAVERSION := $(shell rev=$$(git rev-parse --short=7 HEAD 2>/dev/null); echo $${rev:+-g$$rev})\n\n# PKG_CONFIG must be read from the environment to enable compilation\n# in Debian multiarch setups\n",
                      "markdown": "`# SCSI_DH_MODULES_PRELOAD := scsi_dh_alua scsi_dh_rdac\nSCSI_DH_MODULES_PRELOAD :=\n\nEXTRAVERSION := $(shell rev=$$(git rev-parse --short=7 HEAD 2>/dev/null); echo $${rev:+-g$$rev})\n\n# PKG_CONFIG must be read from the environment to enable compilation\n# in Debian multiarch setups\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 916,
                  "startColumn": 22,
                  "endLine": 916,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nint nvme_virtual_mgmt(int fd, __u32 cdw10, __u32 cdw11, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode = nvme_admin_virtual_mgmt,\n\t\t.cdw10  = cdw10,\n\t\t.cdw11  = cdw11,\n",
                    "rendered": {
                      "text": "\nint nvme_virtual_mgmt(int fd, __u32 cdw10, __u32 cdw11, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode = nvme_admin_virtual_mgmt,\n\t\t.cdw10  = cdw10,\n\t\t.cdw11  = cdw11,\n",
                      "markdown": "`\nint nvme_virtual_mgmt(int fd, __u32 cdw10, __u32 cdw11, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode = nvme_admin_virtual_mgmt,\n\t\t.cdw10  = cdw10,\n\t\t.cdw11  = cdw11,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 905,
                  "startColumn": 22,
                  "endLine": 905,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nint nvme_self_test_start(int fd, __u32 nsid, __u32 cdw10)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode = nvme_admin_dev_self_test,\n\t\t.nsid = nsid,\n\t\t.cdw10 = cdw10,\n",
                    "rendered": {
                      "text": "\nint nvme_self_test_start(int fd, __u32 nsid, __u32 cdw10)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode = nvme_admin_dev_self_test,\n\t\t.nsid = nsid,\n\t\t.cdw10 = cdw10,\n",
                      "markdown": "`\nint nvme_self_test_start(int fd, __u32 nsid, __u32 cdw10)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode = nvme_admin_dev_self_test,\n\t\t.nsid = nsid,\n\t\t.cdw10 = cdw10,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 892,
                  "startColumn": 22,
                  "endLine": 892,
                  "endColumn": 27,
                  "snippet": {
                    "text": "int nvme_sanitize(int fd, __u8 sanact, __u8 ause, __u8 owpass, __u8 oipbp,\n\t\t  __u8 no_dealloc, __u32 ovrpat)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_sanitize_nvm,\n\t\t.cdw10\t\t= no_dealloc << 9 | oipbp << 8 |\n\t\t\t\t  owpass << NVME_SANITIZE_OWPASS_SHIFT |\n",
                    "rendered": {
                      "text": "int nvme_sanitize(int fd, __u8 sanact, __u8 ause, __u8 owpass, __u8 oipbp,\n\t\t  __u8 no_dealloc, __u32 ovrpat)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_sanitize_nvm,\n\t\t.cdw10\t\t= no_dealloc << 9 | oipbp << 8 |\n\t\t\t\t  owpass << NVME_SANITIZE_OWPASS_SHIFT |\n",
                      "markdown": "`int nvme_sanitize(int fd, __u8 sanact, __u8 ause, __u8 owpass, __u8 oipbp,\n\t\t  __u8 no_dealloc, __u32 ovrpat)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_sanitize_nvm,\n\t\t.cdw10\t\t= no_dealloc << 9 | oipbp << 8 |\n\t\t\t\t  owpass << NVME_SANITIZE_OWPASS_SHIFT |\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 29,
                  "endLine": 872,
                  "endColumn": 34,
                  "snippet": {
                    "text": "int nvme_dir_recv(int fd, __u32 nsid, __u16 dspec, __u8 dtype, __u8 doper,\n                  __u32 data_len, __u32 dw12, void *data, __u32 *result)\n{\n        struct nvme_admin_cmd cmd = {\n                .opcode         = nvme_admin_directive_recv,\n                .addr           = (__u64)(uintptr_t) data,\n                .data_len       = data_len,\n",
                    "rendered": {
                      "text": "int nvme_dir_recv(int fd, __u32 nsid, __u16 dspec, __u8 dtype, __u8 doper,\n                  __u32 data_len, __u32 dw12, void *data, __u32 *result)\n{\n        struct nvme_admin_cmd cmd = {\n                .opcode         = nvme_admin_directive_recv,\n                .addr           = (__u64)(uintptr_t) data,\n                .data_len       = data_len,\n",
                      "markdown": "`int nvme_dir_recv(int fd, __u32 nsid, __u16 dspec, __u8 dtype, __u8 doper,\n                  __u32 data_len, __u32 dw12, void *data, __u32 *result)\n{\n        struct nvme_admin_cmd cmd = {\n                .opcode         = nvme_admin_directive_recv,\n                .addr           = (__u64)(uintptr_t) data,\n                .data_len       = data_len,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 29,
                  "endLine": 852,
                  "endColumn": 34,
                  "snippet": {
                    "text": "int nvme_dir_send(int fd, __u32 nsid, __u16 dspec, __u8 dtype, __u8 doper,\n                  __u32 data_len, __u32 dw12, void *data, __u32 *result)\n{\n        struct nvme_admin_cmd cmd = {\n                .opcode         = nvme_admin_directive_send,\n                .addr           = (__u64)(uintptr_t) data,\n                .data_len       = data_len,\n",
                    "rendered": {
                      "text": "int nvme_dir_send(int fd, __u32 nsid, __u16 dspec, __u8 dtype, __u8 doper,\n                  __u32 data_len, __u32 dw12, void *data, __u32 *result)\n{\n        struct nvme_admin_cmd cmd = {\n                .opcode         = nvme_admin_directive_send,\n                .addr           = (__u64)(uintptr_t) data,\n                .data_len       = data_len,\n",
                      "markdown": "`int nvme_dir_send(int fd, __u32 nsid, __u16 dspec, __u8 dtype, __u8 doper,\n                  __u32 data_len, __u32 dw12, void *data, __u32 *result)\n{\n        struct nvme_admin_cmd cmd = {\n                .opcode         = nvme_admin_directive_send,\n                .addr           = (__u64)(uintptr_t) data,\n                .data_len       = data_len,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 837,
                  "startColumn": 22,
                  "endLine": 837,
                  "endColumn": 27,
                  "snippet": {
                    "text": "int nvme_get_lba_status(int fd, __u64 slba, __u32 mndw, __u8 atype, __u16 rl,\n\t\tvoid *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode =  nvme_admin_get_lba_status,\n\t\t.addr = (__u64)(uintptr_t) data,\n\t\t.cdw10 = slba & 0xffffffff,\n",
                    "rendered": {
                      "text": "int nvme_get_lba_status(int fd, __u64 slba, __u32 mndw, __u8 atype, __u16 rl,\n\t\tvoid *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode =  nvme_admin_get_lba_status,\n\t\t.addr = (__u64)(uintptr_t) data,\n\t\t.cdw10 = slba & 0xffffffff,\n",
                      "markdown": "`int nvme_get_lba_status(int fd, __u64 slba, __u32 mndw, __u8 atype, __u16 rl,\n\t\tvoid *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode =  nvme_admin_get_lba_status,\n\t\t.addr = (__u64)(uintptr_t) data,\n\t\t.cdw10 = slba & 0xffffffff,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 818,
                  "startColumn": 22,
                  "endLine": 818,
                  "endColumn": 27,
                  "snippet": {
                    "text": "int nvme_sec_recv(int fd, __u32 nsid, __u8 nssf, __u16 spsp,\n\t\t  __u8 secp, __u32 al, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_security_recv,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= secp << 24 | spsp << 8 | nssf,\n",
                    "rendered": {
                      "text": "int nvme_sec_recv(int fd, __u32 nsid, __u8 nssf, __u16 spsp,\n\t\t  __u8 secp, __u32 al, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_security_recv,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= secp << 24 | spsp << 8 | nssf,\n",
                      "markdown": "`int nvme_sec_recv(int fd, __u32 nsid, __u8 nssf, __u16 spsp,\n\t\t  __u8 secp, __u32 al, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_security_recv,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= secp << 24 | spsp << 8 | nssf,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 799,
                  "startColumn": 22,
                  "endLine": 799,
                  "endColumn": 27,
                  "snippet": {
                    "text": "int nvme_sec_send(int fd, __u32 nsid, __u8 nssf, __u16 spsp,\n\t\t  __u8 secp, __u32 tl, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_security_send,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n\t\t.data_len\t= data_len,\n",
                    "rendered": {
                      "text": "int nvme_sec_send(int fd, __u32 nsid, __u8 nssf, __u16 spsp,\n\t\t  __u8 secp, __u32 tl, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_security_send,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n\t\t.data_len\t= data_len,\n",
                      "markdown": "`int nvme_sec_send(int fd, __u32 nsid, __u8 nssf, __u16 spsp,\n\t\t  __u8 secp, __u32 tl, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_security_send,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n\t\t.data_len\t= data_len,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 788,
                  "startColumn": 22,
                  "endLine": 788,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nint nvme_fw_commit(int fd, __u8 slot, __u8 action, __u8 bpid)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_activate_fw,\n\t\t.cdw10\t\t= (bpid << 31) | (action << 3) | slot,\n\t};\n",
                    "rendered": {
                      "text": "\nint nvme_fw_commit(int fd, __u8 slot, __u8 action, __u8 bpid)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_activate_fw,\n\t\t.cdw10\t\t= (bpid << 31) | (action << 3) | slot,\n\t};\n",
                      "markdown": "`\nint nvme_fw_commit(int fd, __u8 slot, __u8 action, __u8 bpid)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_activate_fw,\n\t\t.cdw10\t\t= (bpid << 31) | (action << 3) | slot,\n\t};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 22,
                  "endLine": 775,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nint nvme_fw_download(int fd, __u32 offset, __u32 data_len, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_download_fw,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n\t\t.data_len\t= data_len,\n",
                    "rendered": {
                      "text": "\nint nvme_fw_download(int fd, __u32 offset, __u32 data_len, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_download_fw,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n\t\t.data_len\t= data_len,\n",
                      "markdown": "`\nint nvme_fw_download(int fd, __u32 offset, __u32 data_len, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_download_fw,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n\t\t.data_len\t= data_len,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 22,
                  "endLine": 747,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t__u8 buf[0x1000];\n\tstruct nvme_controller_list *cntlist =\n\t\t\t\t\t(struct nvme_controller_list *)buf;\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_attach,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) cntlist,\n",
                    "rendered": {
                      "text": "\t__u8 buf[0x1000];\n\tstruct nvme_controller_list *cntlist =\n\t\t\t\t\t(struct nvme_controller_list *)buf;\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_attach,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) cntlist,\n",
                      "markdown": "`\t__u8 buf[0x1000];\n\tstruct nvme_controller_list *cntlist =\n\t\t\t\t\t(struct nvme_controller_list *)buf;\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_attach,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) cntlist,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 22,
                  "endLine": 730,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nint nvme_ns_delete(int fd, __u32 nsid, __u32 timeout)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_mgmt,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= 1,\n",
                    "rendered": {
                      "text": "\nint nvme_ns_delete(int fd, __u32 nsid, __u32 timeout)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_mgmt,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= 1,\n",
                      "markdown": "`\nint nvme_ns_delete(int fd, __u32 nsid, __u32 timeout)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_mgmt,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= 1,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 713,
                  "startColumn": 22,
                  "endLine": 713,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t.dps\t\t= dps,\n\t\t.nmic\t\t= nmic,\n\t};\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_mgmt,\n\t\t.addr\t\t= (__u64)(uintptr_t) ((void *)&ns),\n\t\t.cdw10\t\t= 0,\n",
                    "rendered": {
                      "text": "\t\t.dps\t\t= dps,\n\t\t.nmic\t\t= nmic,\n\t};\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_mgmt,\n\t\t.addr\t\t= (__u64)(uintptr_t) ((void *)&ns),\n\t\t.cdw10\t\t= 0,\n",
                      "markdown": "`\t\t.dps\t\t= dps,\n\t\t.nmic\t\t= nmic,\n\t};\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_ns_mgmt,\n\t\t.addr\t\t= (__u64)(uintptr_t) ((void *)&ns),\n\t\t.cdw10\t\t= 0,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 693,
                  "startColumn": 22,
                  "endLine": 693,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t__u8 pil, __u8 ms, __u32 timeout)\n{\n\t__u32 cdw10 = lbaf | ms << 4 | pi << 5 | pil << 8 | ses << 9;\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_format_nvm,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                    "rendered": {
                      "text": "\t\t__u8 pil, __u8 ms, __u32 timeout)\n{\n\t__u32 cdw10 = lbaf | ms << 4 | pi << 5 | pil << 8 | ses << 9;\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_format_nvm,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                      "markdown": "`\t\t__u8 pil, __u8 ms, __u32 timeout)\n{\n\t__u32 cdw10 = lbaf | ms << 4 | pi << 5 | pil << 8 | ses << 9;\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_format_nvm,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 552,
                  "startColumn": 22,
                  "endLine": 552,
                  "endColumn": 27,
                  "snippet": {
                    "text": "int nvme_feature(int fd, __u8 opcode, __u32 nsid, __u32 cdw10, __u32 cdw11,\n\t\t __u32 cdw12, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= opcode,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                    "rendered": {
                      "text": "int nvme_feature(int fd, __u8 opcode, __u32 nsid, __u32 cdw10, __u32 cdw11,\n\t\t __u32 cdw12, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= opcode,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                      "markdown": "`int nvme_feature(int fd, __u8 opcode, __u32 nsid, __u32 cdw10, __u32 cdw11,\n\t\t __u32 cdw12, __u32 data_len, void *data, __u32 *result)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= opcode,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 22,
                  "endLine": 419,
                  "endColumn": 27,
                  "snippet": {
                    "text": "int nvme_get_log14(int fd, __u32 nsid, __u8 log_id, __u8 lsp, __u64 lpo,\n                 __u16 lsi, bool rae, __u8 uuid_ix, __u32 data_len, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_get_log_page,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n",
                    "rendered": {
                      "text": "int nvme_get_log14(int fd, __u32 nsid, __u8 log_id, __u8 lsp, __u64 lpo,\n                 __u16 lsi, bool rae, __u8 uuid_ix, __u32 data_len, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_get_log_page,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n",
                      "markdown": "`int nvme_get_log14(int fd, __u32 nsid, __u8 log_id, __u8 lsp, __u64 lpo,\n                 __u16 lsi, bool rae, __u8 uuid_ix, __u32 data_len, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_get_log_page,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 22,
                  "endLine": 347,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nint nvme_identify13(int fd, __u32 nsid, __u32 cdw10, __u32 cdw11, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_identify,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n",
                    "rendered": {
                      "text": "\nint nvme_identify13(int fd, __u32 nsid, __u32 cdw10, __u32 cdw11, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_identify,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n",
                      "markdown": "`\nint nvme_identify13(int fd, __u32 nsid, __u32 cdw10, __u32 cdw11, void *data)\n{\n\tstruct nvme_admin_cmd cmd = {\n\t\t.opcode\t\t= nvme_admin_identify,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) data,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 333,
                  "startColumn": 25,
                  "endLine": 333,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nint nvme_resv_report(int fd, __u32 nsid, __u32 numd, __u32 cdw11, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_report,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= numd,\n",
                    "rendered": {
                      "text": "\nint nvme_resv_report(int fd, __u32 nsid, __u32 numd, __u32 cdw11, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_report,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= numd,\n",
                      "markdown": "`\nint nvme_resv_report(int fd, __u32 nsid, __u32 numd, __u32 cdw11, void *data)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_report,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= numd,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 25,
                  "endLine": 320,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t__le64 payload[1] = { cpu_to_le64(crkey) };\n\t__u32 cdw10 = (rrela & 0x7) | (iekey ? 1 << 3 : 0) | rtype << 8;\n\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_release,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                    "rendered": {
                      "text": "\t__le64 payload[1] = { cpu_to_le64(crkey) };\n\t__u32 cdw10 = (rrela & 0x7) | (iekey ? 1 << 3 : 0) | rtype << 8;\n\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_release,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                      "markdown": "`\t__le64 payload[1] = { cpu_to_le64(crkey) };\n\t__u32 cdw10 = (rrela & 0x7) | (iekey ? 1 << 3 : 0) | rtype << 8;\n\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_release,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 25,
                  "endLine": 303,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t__le64 payload[2] = { cpu_to_le64(crkey), cpu_to_le64(nrkey) };\n\t__u32 cdw10 = (rrega & 0x7) | (iekey ? 1 << 3 : 0) | cptpl << 30;\n\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_register,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                    "rendered": {
                      "text": "\t__le64 payload[2] = { cpu_to_le64(crkey), cpu_to_le64(nrkey) };\n\t__u32 cdw10 = (rrega & 0x7) | (iekey ? 1 << 3 : 0) | cptpl << 30;\n\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_register,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                      "markdown": "`\t__le64 payload[2] = { cpu_to_le64(crkey), cpu_to_le64(nrkey) };\n\t__u32 cdw10 = (rrega & 0x7) | (iekey ? 1 << 3 : 0) | cptpl << 30;\n\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_register,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 25,
                  "endLine": 286,
                  "endColumn": 30,
                  "snippet": {
                    "text": "{\n\t__le64 payload[2] = { cpu_to_le64(crkey), cpu_to_le64(nrkey) };\n\t__u32 cdw10 = (racqa & 0x7) | (iekey ? 1 << 3 : 0) | rtype << 8;\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_acquire,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                    "rendered": {
                      "text": "{\n\t__le64 payload[2] = { cpu_to_le64(crkey), cpu_to_le64(nrkey) };\n\t__u32 cdw10 = (racqa & 0x7) | (iekey ? 1 << 3 : 0) | rtype << 8;\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_acquire,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n",
                      "markdown": "`{\n\t__le64 payload[2] = { cpu_to_le64(crkey), cpu_to_le64(nrkey) };\n\t__u32 cdw10 = (racqa & 0x7) | (iekey ? 1 << 3 : 0) | rtype << 8;\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_resv_acquire,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= cdw10,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 25,
                  "endLine": 251,
                  "endColumn": 30,
                  "snippet": {
                    "text": "int nvme_dsm(int fd, __u32 nsid, __u32 cdw11, struct nvme_dsm_range *dsm,\n\t     __u16 nr_ranges)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_dsm,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) dsm,\n",
                    "rendered": {
                      "text": "int nvme_dsm(int fd, __u32 nsid, __u32 cdw11, struct nvme_dsm_range *dsm,\n\t     __u16 nr_ranges)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_dsm,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) dsm,\n",
                      "markdown": "`int nvme_dsm(int fd, __u32 nsid, __u32 cdw11, struct nvme_dsm_range *dsm,\n\t     __u16 nr_ranges)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_dsm,\n\t\t.nsid\t\t= nsid,\n\t\t.addr\t\t= (__u64)(uintptr_t) dsm,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 25,
                  "endLine": 240,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nint nvme_flush(int fd, __u32 nsid)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_flush,\n\t\t.nsid\t\t= nsid,\n\t};\n",
                    "rendered": {
                      "text": "\nint nvme_flush(int fd, __u32 nsid)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_flush,\n\t\t.nsid\t\t= nsid,\n\t};\n",
                      "markdown": "`\nint nvme_flush(int fd, __u32 nsid)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_flush,\n\t\t.nsid\t\t= nsid,\n\t};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 25,
                  "endLine": 227,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nint nvme_write_uncorrectable(int fd, __u32 nsid, __u64 slba, __u16 nlb)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_write_uncor,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n",
                    "rendered": {
                      "text": "\nint nvme_write_uncorrectable(int fd, __u32 nsid, __u64 slba, __u16 nlb)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_write_uncor,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n",
                      "markdown": "`\nint nvme_write_uncorrectable(int fd, __u32 nsid, __u64 slba, __u16 nlb)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_write_uncor,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 25,
                  "endLine": 212,
                  "endColumn": 30,
                  "snippet": {
                    "text": "int nvme_write_zeros(int fd, __u32 nsid, __u64 slba, __u16 nlb,\n\t\t     __u16 control, __u32 reftag, __u16 apptag, __u16 appmask)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_write_zeroes,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n",
                    "rendered": {
                      "text": "int nvme_write_zeros(int fd, __u32 nsid, __u64 slba, __u16 nlb,\n\t\t     __u16 control, __u32 reftag, __u16 apptag, __u16 appmask)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_write_zeroes,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n",
                      "markdown": "`int nvme_write_zeros(int fd, __u32 nsid, __u64 slba, __u16 nlb,\n\t\t     __u16 control, __u32 reftag, __u16 apptag, __u16 appmask)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_write_zeroes,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 25,
                  "endLine": 184,
                  "endColumn": 30,
                  "snippet": {
                    "text": "int nvme_verify(int fd, __u32 nsid, __u64 slba, __u16 nblocks,\n\t\t__u16 control, __u32 reftag, __u16 apptag, __u16 appmask)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_verify,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n",
                    "rendered": {
                      "text": "int nvme_verify(int fd, __u32 nsid, __u64 slba, __u16 nblocks,\n\t\t__u16 control, __u32 reftag, __u16 apptag, __u16 appmask)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_verify,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n",
                      "markdown": "`int nvme_verify(int fd, __u32 nsid, __u64 slba, __u16 nblocks,\n\t\t__u16 control, __u32 reftag, __u16 apptag, __u16 appmask)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= nvme_cmd_verify,\n\t\t.nsid\t\t= nsid,\n\t\t.cdw10\t\t= slba & 0xffffffff,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t  __u32 data_len, void *data, __u32 metadata_len,\n\t\t  void *metadata, __u32 timeout_ms, __u32 *result)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= opcode,\n\t\t.flags\t\t= flags,\n\t\t.rsvd1\t\t= rsvd,\n",
                    "rendered": {
                      "text": "\t\t  __u32 data_len, void *data, __u32 metadata_len,\n\t\t  void *metadata, __u32 timeout_ms, __u32 *result)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= opcode,\n\t\t.flags\t\t= flags,\n\t\t.rsvd1\t\t= rsvd,\n",
                      "markdown": "`\t\t  __u32 data_len, void *data, __u32 metadata_len,\n\t\t  void *metadata, __u32 timeout_ms, __u32 *result)\n{\n\tstruct nvme_passthru_cmd cmd = {\n\t\t.opcode\t\t= opcode,\n\t\t.flags\t\t= flags,\n\t\t.rsvd1\t\t= rsvd,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/nvme/nvme-ioctl.c"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 33,
                  "endLine": 606,
                  "endColumn": 37,
                  "snippet": {
                    "text": "int nvme_get_property(int fd, int offset, uint64_t *value)\n{\n\tstruct nvme_passthru_cmd pcmd;\n\tstruct nvmf_property_get_command pg = {\n\t\t.opcode\t= nvme_fabrics_command,\n\t\t.fctype\t= nvme_fabrics_type_property_get,\n\t\t.offset\t= cpu_to_le32(offset),\n",
                    "rendered": {
                      "text": "int nvme_get_property(int fd, int offset, uint64_t *value)\n{\n\tstruct nvme_passthru_cmd pcmd;\n\tstruct nvmf_property_get_command pg = {\n\t\t.opcode\t= nvme_fabrics_command,\n\t\t.fctype\t= nvme_fabrics_type_property_get,\n\t\t.offset\t= cpu_to_le32(offset),\n",
                      "markdown": "`int nvme_get_property(int fd, int offset, uint64_t *value)\n{\n\tstruct nvme_passthru_cmd pcmd;\n\tstruct nvmf_property_get_command pg = {\n\t\t.opcode\t= nvme_fabrics_command,\n\t\t.fctype\t= nvme_fabrics_type_property_get,\n\t\t.offset\t= cpu_to_le32(offset),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/libmultipath.version"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 2,
                  "endLine": 12,
                  "endColumn": 7,
                  "snippet": {
                    "text": " * for backward compatibility.\n *\n * The ABI versioning only serves to avoid linking with a non-matching ABI, to\n * cut down the set of exported symbols, and to describe it.\n * The version string is LIBMULTIPATH_$MAJOR.$MINOR.$REL.\n *\n * Policy:\n",
                    "rendered": {
                      "text": " * for backward compatibility.\n *\n * The ABI versioning only serves to avoid linking with a non-matching ABI, to\n * cut down the set of exported symbols, and to describe it.\n * The version string is LIBMULTIPATH_$MAJOR.$MINOR.$REL.\n *\n * Policy:\n",
                      "markdown": "` * for backward compatibility.\n *\n * The ABI versioning only serves to avoid linking with a non-matching ABI, to\n * cut down the set of exported symbols, and to describe it.\n * The version string is LIBMULTIPATH_$MAJOR.$MINOR.$REL.\n *\n * Policy:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/dasd.h"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 1,
                  "endLine": 288,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn  cyl * geo->heads * geo->sectors +\n\t\thead * geo->sectors +\n\t\tptr->b;\n}\n\n",
                    "rendered": {
                      "text": "\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn  cyl * geo->heads * geo->sectors +\n\t\thead * geo->sectors +\n\t\tptr->b;\n}\n\n",
                      "markdown": "`\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn  cyl * geo->heads * geo->sectors +\n\t\thead * geo->sectors +\n\t\tptr->b;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/dasd.h"
                },
                "region": {
                  "startLine": 286,
                  "endLine": 286,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcyl = ptr->hh & 0xFFF0;\n\tcyl <<= 12;\n\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn  cyl * geo->heads * geo->sectors +\n\t\thead * geo->sectors +\n\t\tptr->b;\n",
                    "rendered": {
                      "text": "\tcyl = ptr->hh & 0xFFF0;\n\tcyl <<= 12;\n\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn  cyl * geo->heads * geo->sectors +\n\t\thead * geo->sectors +\n\t\tptr->b;\n",
                      "markdown": "`\tcyl = ptr->hh & 0xFFF0;\n\tcyl <<= 12;\n\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn  cyl * geo->heads * geo->sectors +\n\t\thead * geo->sectors +\n\t\tptr->b;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/dasd.h"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 7,
                  "endLine": 269,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn cyl * geo->heads * geo->sectors +\n\t       head * geo->sectors;\n}\n\n/*\n",
                    "rendered": {
                      "text": "\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn cyl * geo->heads * geo->sectors +\n\t       head * geo->sectors;\n}\n\n/*\n",
                      "markdown": "`\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn cyl * geo->heads * geo->sectors +\n\t       head * geo->sectors;\n}\n\n/*\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/dasd.h"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 267,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcyl = ptr->hh & 0xFFF0;\n\tcyl <<= 12;\n\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn cyl * geo->heads * geo->sectors +\n\t       head * geo->sectors;\n}\n",
                    "rendered": {
                      "text": "\tcyl = ptr->hh & 0xFFF0;\n\tcyl <<= 12;\n\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn cyl * geo->heads * geo->sectors +\n\t       head * geo->sectors;\n}\n",
                      "markdown": "`\tcyl = ptr->hh & 0xFFF0;\n\tcyl <<= 12;\n\tcyl |= ptr->cc;\n\thead = ptr->hh & 0x000F;\n\treturn cyl * geo->heads * geo->sectors +\n\t       head * geo->sectors;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "endLine": 24,
                  "endColumn": 62,
                  "snippet": {
                    "text": "# Note: This program tries hard to clean up, but if tests fail,\n# stale DM or loop devices may keep lurking around.\n\n# Set WORKDIR in environment to existing dir to for persistence\n# WARNING:  existing files will be truncated.\n# If empty, test will be done in temporary dir\n: ${WORKDIR:=}\n",
                    "rendered": {
                      "text": "# Note: This program tries hard to clean up, but if tests fail,\n# stale DM or loop devices may keep lurking around.\n\n# Set WORKDIR in environment to existing dir to for persistence\n# WARNING:  existing files will be truncated.\n# If empty, test will be done in temporary dir\n: ${WORKDIR:=}\n",
                      "markdown": "`# Note: This program tries hard to clean up, but if tests fail,\n# stale DM or loop devices may keep lurking around.\n\n# Set WORKDIR in environment to existing dir to for persistence\n# WARNING:  existing files will be truncated.\n# If empty, test will be done in temporary dir\n: ${WORKDIR:=}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 39,
                  "snippet": {
                    "text": "#     linear mappings into a block device. Other maps should not be touched.\n#  4) kpartx should only delete mappings it created itself beforehand.\n#     In particular, it shouldn't delete LVM LVs, even if they are fully\n#     contained in the block device at hand and thus look like partitions\n#     in the first place. (For historical compatibility reasons, we allow\n#     such mappings to be deleted with the -f/--force flag).\n#  5) DM map names may be changed, thus kpartx shouldn't rely on them to\n",
                    "rendered": {
                      "text": "#     linear mappings into a block device. Other maps should not be touched.\n#  4) kpartx should only delete mappings it created itself beforehand.\n#     In particular, it shouldn't delete LVM LVs, even if they are fully\n#     contained in the block device at hand and thus look like partitions\n#     in the first place. (For historical compatibility reasons, we allow\n#     such mappings to be deleted with the -f/--force flag).\n#  5) DM map names may be changed, thus kpartx shouldn't rely on them to\n",
                      "markdown": "`#     linear mappings into a block device. Other maps should not be touched.\n#  4) kpartx should only delete mappings it created itself beforehand.\n#     In particular, it shouldn't delete LVM LVs, even if they are fully\n#     contained in the block device at hand and thus look like partitions\n#     in the first place. (For historical compatibility reasons, we allow\n#     such mappings to be deleted with the -f/--force flag).\n#  5) DM map names may be changed, thus kpartx shouldn't rely on them to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 1,
                  "endLine": 213,
                  "endColumn": 10,
                  "snippet": {
                    "text": "pop_cleanup\npush_cleanup 'dmsetup remove -f $(basename $LO1P1)'\n\n# dmsetup info $LO1P1\n\nstep \"create partitions on DM devices\"\nmk_partitions /dev/mapper/$SPAN2\n",
                    "rendered": {
                      "text": "pop_cleanup\npush_cleanup 'dmsetup remove -f $(basename $LO1P1)'\n\n# dmsetup info $LO1P1\n\nstep \"create partitions on DM devices\"\nmk_partitions /dev/mapper/$SPAN2\n",
                      "markdown": "`pop_cleanup\npush_cleanup 'dmsetup remove -f $(basename $LO1P1)'\n\n# dmsetup info $LO1P1\n\nstep \"create partitions on DM devices\"\nmk_partitions /dev/mapper/$SPAN2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 74,
                  "endLine": 208,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# dmsetup info $LO2P1\n\n# Set pathological name for partition on $LO1 (same as loop device itself)\ndmsetup rename $(basename $LO1P1) $(basename $LO1)\nLO1P1=/dev/mapper/$(basename $LO1)\npop_cleanup\npush_cleanup 'dmsetup remove -f $(basename $LO1P1)'\n",
                    "rendered": {
                      "text": "\n# dmsetup info $LO2P1\n\n# Set pathological name for partition on $LO1 (same as loop device itself)\ndmsetup rename $(basename $LO1P1) $(basename $LO1)\nLO1P1=/dev/mapper/$(basename $LO1)\npop_cleanup\npush_cleanup 'dmsetup remove -f $(basename $LO1P1)'\n",
                      "markdown": "`\n# dmsetup info $LO2P1\n\n# Set pathological name for partition on $LO1 (same as loop device itself)\ndmsetup rename $(basename $LO1P1) $(basename $LO1)\nLO1P1=/dev/mapper/$(basename $LO1)\npop_cleanup\npush_cleanup 'dmsetup remove -f $(basename $LO1P1)'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 1,
                  "endLine": 205,
                  "endColumn": 10,
                  "snippet": {
                    "text": "[[ -b $LO1P1 ]]\n[[ -b $LO2P1 ]]\n\n# dmsetup info $LO2P1\n\n# Set pathological name for partition on $LO1 (same as loop device itself)\ndmsetup rename $(basename $LO1P1) $(basename $LO1)\n",
                    "rendered": {
                      "text": "[[ -b $LO1P1 ]]\n[[ -b $LO2P1 ]]\n\n# dmsetup info $LO2P1\n\n# Set pathological name for partition on $LO1 (same as loop device itself)\ndmsetup rename $(basename $LO1P1) $(basename $LO1)\n",
                      "markdown": "`[[ -b $LO1P1 ]]\n[[ -b $LO2P1 ]]\n\n# dmsetup info $LO2P1\n\n# Set pathological name for partition on $LO1 (same as loop device itself)\ndmsetup rename $(basename $LO1P1) $(basename $LO1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 1,
                  "endLine": 174,
                  "endColumn": 10,
                  "snippet": {
                    "text": "[[ -b /dev/mapper/$VG-$LV ]]\n\n# dmsetup table /dev/mapper/$VG-$LV\n# dmsetup info /dev/mapper/$VG-$LV\n\nstep \"create partitions on loop devices\"\n\n",
                    "rendered": {
                      "text": "[[ -b /dev/mapper/$VG-$LV ]]\n\n# dmsetup table /dev/mapper/$VG-$LV\n# dmsetup info /dev/mapper/$VG-$LV\n\nstep \"create partitions on loop devices\"\n\n",
                      "markdown": "`[[ -b /dev/mapper/$VG-$LV ]]\n\n# dmsetup table /dev/mapper/$VG-$LV\n# dmsetup info /dev/mapper/$VG-$LV\n\nstep \"create partitions on loop devices\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 1,
                  "endLine": 173,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n[[ -b /dev/mapper/$VG-$LV ]]\n\n# dmsetup table /dev/mapper/$VG-$LV\n# dmsetup info /dev/mapper/$VG-$LV\n\nstep \"create partitions on loop devices\"\n",
                    "rendered": {
                      "text": "\n[[ -b /dev/mapper/$VG-$LV ]]\n\n# dmsetup table /dev/mapper/$VG-$LV\n# dmsetup info /dev/mapper/$VG-$LV\n\nstep \"create partitions on loop devices\"\n",
                      "markdown": "`\n[[ -b /dev/mapper/$VG-$LV ]]\n\n# dmsetup table /dev/mapper/$VG-$LV\n# dmsetup info /dev/mapper/$VG-$LV\n\nstep \"create partitions on loop devices\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 39,
                  "endLine": 152,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# This is a non-kpartx pseudo \"partition\" mapping\nUSER1=user1\npush_cleanup 'dmsetup remove -f $USER1'\ndmsetup create $USER1 <<EOF\n0 $((SIZE/SECTSIZ-OFFS)) linear $DEV1 $OFFS\nEOF\n\n",
                    "rendered": {
                      "text": "\n# This is a non-kpartx pseudo \"partition\" mapping\nUSER1=user1\npush_cleanup 'dmsetup remove -f $USER1'\ndmsetup create $USER1 <<EOF\n0 $((SIZE/SECTSIZ-OFFS)) linear $DEV1 $OFFS\nEOF\n\n",
                      "markdown": "`\n# This is a non-kpartx pseudo \"partition\" mapping\nUSER1=user1\npush_cleanup 'dmsetup remove -f $USER1'\ndmsetup create $USER1 <<EOF\n0 $((SIZE/SECTSIZ-OFFS)) linear $DEV1 $OFFS\nEOF\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 146,
                  "endColumn": 8,
                  "snippet": {
                    "text": "SPAN2=$(basename $LO2)\ndmsetup create $SPAN1 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN1'\n\ndmsetup create $SPAN2 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN2'\n\n# This is a non-kpartx pseudo \"partition\" mapping\n",
                    "rendered": {
                      "text": "SPAN2=$(basename $LO2)\ndmsetup create $SPAN1 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN1'\n\ndmsetup create $SPAN2 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN2'\n\n# This is a non-kpartx pseudo \"partition\" mapping\n",
                      "markdown": "`SPAN2=$(basename $LO2)\ndmsetup create $SPAN1 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN1'\n\ndmsetup create $SPAN2 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN2'\n\n# This is a non-kpartx pseudo \"partition\" mapping\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 22,
                  "endLine": 143,
                  "endColumn": 8,
                  "snippet": {
                    "text": "$((SIZE/SECTSIZ-OFFS)) $((SIZE/SECTSIZ-OFFS)) linear $DEV2 $OFFS\"\n\nSPAN1=kpt\nSPAN2=$(basename $LO2)\ndmsetup create $SPAN1 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN1'\n\ndmsetup create $SPAN2 <<<\"$TABLE\"\n",
                    "rendered": {
                      "text": "$((SIZE/SECTSIZ-OFFS)) $((SIZE/SECTSIZ-OFFS)) linear $DEV2 $OFFS\"\n\nSPAN1=kpt\nSPAN2=$(basename $LO2)\ndmsetup create $SPAN1 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN1'\n\ndmsetup create $SPAN2 <<<\"$TABLE\"\n",
                      "markdown": "`$((SIZE/SECTSIZ-OFFS)) $((SIZE/SECTSIZ-OFFS)) linear $DEV2 $OFFS\"\n\nSPAN1=kpt\nSPAN2=$(basename $LO2)\ndmsetup create $SPAN1 <<<\"$TABLE\"\npush_cleanup 'dmsetup remove -f $SPAN1'\n\ndmsetup create $SPAN2 <<<\"$TABLE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 3,
                  "endLine": 72,
                  "endColumn": 7,
                  "snippet": {
                    "text": "}\n\nwipe_ptable() {\n    dd if=/dev/zero of=$1 bs=1b count=1\n}\n\nstep preparation\n",
                    "rendered": {
                      "text": "}\n\nwipe_ptable() {\n    dd if=/dev/zero of=$1 bs=1b count=1\n}\n\nstep preparation\n",
                      "markdown": "`}\n\nwipe_ptable() {\n    dd if=/dev/zero of=$1 bs=1b count=1\n}\n\nstep preparation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/test-kpartx"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 7,
                  "snippet": {
                    "text": ": ${KPARTX:=}\n# Options to pass to kpartx always\n: ${KPARTX_OPTS:=-s}\n# Time to wait for device nodes to appear (microseconds)\n# Waiting is only needed if \"s\" is not in $KPARTX_OPTS\n: ${WAIT_US:=0}\n\n",
                    "rendered": {
                      "text": ": ${KPARTX:=}\n# Options to pass to kpartx always\n: ${KPARTX_OPTS:=-s}\n# Time to wait for device nodes to appear (microseconds)\n# Waiting is only needed if \"s\" is not in $KPARTX_OPTS\n: ${WAIT_US:=0}\n\n",
                      "markdown": "`: ${KPARTX:=}\n# Options to pass to kpartx always\n: ${KPARTX_OPTS:=-s}\n# Time to wait for device nodes to appear (microseconds)\n# Waiting is only needed if \"s\" is not in $KPARTX_OPTS\n: ${WAIT_US:=0}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx.8"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 6,
                  "endLine": 57,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Delete partition mappings.\n.\n.TP\n.B \\-u\nUpdate partition mappings.\n.\n.TP\n.B \\-l\n",
                    "rendered": {
                      "text": "Delete partition mappings.\n.\n.TP\n.B \\-u\nUpdate partition mappings.\n.\n.TP\n.B \\-l\n",
                      "markdown": "`Delete partition mappings.\n.\n.TP\n.B \\-u\nUpdate partition mappings.\n.\n.TP\n.B \\-l\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx.8"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t kpartx/kpartx.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z  kpartx/kpartx.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH KPARTX 8 2019-04-27 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t kpartx/kpartx.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z  kpartx/kpartx.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH KPARTX 8 2019-04-27 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t kpartx/kpartx.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z  kpartx/kpartx.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH KPARTX 8 2019-04-27 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx.8"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 2,
                  "endLine": 96,
                  "endColumn": 9,
                  "snippet": {
                    "text": ".SH EXAMPLE\n.\\\" ----------------------------------------------------------------------------\n.\nTo mount all the partitions in a raw disk image:\n.IP\nkpartx \\-av disk.img\n.PP\n",
                    "rendered": {
                      "text": ".SH EXAMPLE\n.\\\" ----------------------------------------------------------------------------\n.\nTo mount all the partitions in a raw disk image:\n.IP\nkpartx \\-av disk.img\n.PP\n",
                      "markdown": "`.SH EXAMPLE\n.\\\" ----------------------------------------------------------------------------\n.\nTo mount all the partitions in a raw disk image:\n.IP\nkpartx \\-av disk.img\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 659,
                  "startColumn": 24,
                  "endLine": 659,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t \"block\",\n\t\t\t\t\t\t\t\t param);\n\t\tif (!udevice) {\n\t\t\tcondlog(0, \"%s: can't find path\", param);\n\t\t\treturn 1;\n\t\t}\n\t\tconf = get_multipath_config();\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t\t \"block\",\n\t\t\t\t\t\t\t\t param);\n\t\tif (!udevice) {\n\t\t\tcondlog(0, \"%s: can't find path\", param);\n\t\t\treturn 1;\n\t\t}\n\t\tconf = get_multipath_config();\n",
                      "markdown": "`\t\t\t\t\t\t\t\t \"block\",\n\t\t\t\t\t\t\t\t param);\n\t\tif (!udevice) {\n\t\t\tcondlog(0, \"%s: can't find path\", param);\n\t\t\treturn 1;\n\t\t}\n\t\tconf = get_multipath_config();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 24,
                  "endLine": 445,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\tif (!mpp)\n\t\treturn -ENODEV;\n\n\tcondlog(3, \"list map %s fmt %s (operator)\", param, fmt);\n\n\treturn show_map(reply, mpp, fmt, width);\n}\n",
                    "rendered": {
                      "text": "\tif (!mpp)\n\t\treturn -ENODEV;\n\n\tcondlog(3, \"list map %s fmt %s (operator)\", param, fmt);\n\n\treturn show_map(reply, mpp, fmt, width);\n}\n",
                      "markdown": "`\tif (!mpp)\n\t\treturn -ENODEV;\n\n\tcondlog(3, \"list map %s fmt %s (operator)\", param, fmt);\n\n\treturn show_map(reply, mpp, fmt, width);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 7,
                  "endLine": 434,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tstruct multipath * mpp;\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * param = get_keyparam(v, KEY_MAP);\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\tfieldwidth_t *width __attribute__((cleanup(cleanup_ucharp))) = NULL;\n\n\tif ((width = alloc_multipath_layout()) == NULL)\n",
                    "rendered": {
                      "text": "\tstruct multipath * mpp;\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * param = get_keyparam(v, KEY_MAP);\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\tfieldwidth_t *width __attribute__((cleanup(cleanup_ucharp))) = NULL;\n\n\tif ((width = alloc_multipath_layout()) == NULL)\n",
                      "markdown": "`\tstruct multipath * mpp;\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * param = get_keyparam(v, KEY_MAP);\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\tfieldwidth_t *width __attribute__((cleanup(cleanup_ucharp))) = NULL;\n\n\tif ((width = alloc_multipath_layout()) == NULL)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 421,
                  "startColumn": 7,
                  "endLine": 421,
                  "endColumn": 12,
                  "snippet": {
                    "text": "cli_list_maps_raw (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list maps (operator)\");\n\n",
                    "rendered": {
                      "text": "cli_list_maps_raw (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list maps (operator)\");\n\n",
                      "markdown": "`cli_list_maps_raw (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list maps (operator)\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 7,
                  "endLine": 410,
                  "endColumn": 12,
                  "snippet": {
                    "text": "cli_list_maps_fmt (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list maps (operator)\");\n\n",
                    "rendered": {
                      "text": "cli_list_maps_fmt (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list maps (operator)\");\n\n",
                      "markdown": "`cli_list_maps_fmt (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list maps (operator)\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 7,
                  "endLine": 240,
                  "endColumn": 12,
                  "snippet": {
                    "text": "cli_list_paths_raw (void *v, struct strbuf *reply, void * data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list paths (operator)\");\n\n",
                    "rendered": {
                      "text": "cli_list_paths_raw (void *v, struct strbuf *reply, void * data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list paths (operator)\");\n\n",
                      "markdown": "`cli_list_paths_raw (void *v, struct strbuf *reply, void * data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list paths (operator)\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/cli_handlers.c"
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 7,
                  "endLine": 229,
                  "endColumn": 12,
                  "snippet": {
                    "text": "cli_list_paths_fmt (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list paths (operator)\");\n\n",
                    "rendered": {
                      "text": "cli_list_paths_fmt (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list paths (operator)\");\n\n",
                      "markdown": "`cli_list_paths_fmt (void *v, struct strbuf *reply, void *data)\n{\n\tstruct vectors * vecs = (struct vectors *)data;\n\tchar * fmt = get_keyparam(v, KEY_FMT);\n\n\tcondlog(3, \"list paths (operator)\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/test/Makefile"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nspeed_test: $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\ttime -p ./$(SPD_TEST_EXEC)\n\nclean: dep_clean\n\t$(Q)$(RM) -f $(TEST_EXEC) $(SPD_TEST_EXEC)\n",
                    "rendered": {
                      "text": "\nspeed_test: $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\ttime -p ./$(SPD_TEST_EXEC)\n\nclean: dep_clean\n\t$(Q)$(RM) -f $(TEST_EXEC) $(SPD_TEST_EXEC)\n",
                      "markdown": "`\nspeed_test: $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\ttime -p ./$(SPD_TEST_EXEC)\n\nclean: dep_clean\n\t$(Q)$(RM) -f $(TEST_EXEC) $(SPD_TEST_EXEC)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/test/Makefile"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 27,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t$(MAKE) speed_test\n\nspeed_test: $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\ttime -p ./$(SPD_TEST_EXEC)\n\nclean: dep_clean\n",
                    "rendered": {
                      "text": "\t$(MAKE) speed_test\n\nspeed_test: $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\ttime -p ./$(SPD_TEST_EXEC)\n\nclean: dep_clean\n",
                      "markdown": "`\t$(MAKE) speed_test\n\nspeed_test: $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\ttime -p ./$(SPD_TEST_EXEC)\n\nclean: dep_clean\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/test/Makefile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "all: $(TEST_EXEC) $(SPD_TEST_EXEC)\n\ncheck: $(TEST_EXEC) $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\tvalgrind --quiet --leak-check=full \\\n\t\t--show-reachable=no --show-possibly-lost=no \\\n\t\t--trace-children=yes --error-exitcode=1 \\\n",
                    "rendered": {
                      "text": "all: $(TEST_EXEC) $(SPD_TEST_EXEC)\n\ncheck: $(TEST_EXEC) $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\tvalgrind --quiet --leak-check=full \\\n\t\t--show-reachable=no --show-possibly-lost=no \\\n\t\t--trace-children=yes --error-exitcode=1 \\\n",
                      "markdown": "`all: $(TEST_EXEC) $(SPD_TEST_EXEC)\n\ncheck: $(TEST_EXEC) $(SPD_TEST_EXEC)\n\t$(Q)sudo env LD_LIBRARY_PATH=$(_libdmmpdir):$(_mpathcmddir) \\\n\t\tvalgrind --quiet --leak-check=full \\\n\t\t--show-reachable=no --show-possibly-lost=no \\\n\t\t--trace-children=yes --error-exitcode=1 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/man/dmmp_strerror.3"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 17,
                  "endLine": 22,
                  "endColumn": 26,
                  "snippet": {
                    "text": "* DMMP_ERR_NO_MEMORY -- \"Out of memory\"\n\n* DMMP_ERR_IPC_TIMEOUT -- \"Timeout when communicate with multipathd,\ntry to set bigger timeout value via dmmp_context_timeout_set ()\"\n\n* DMMP_ERR_IPC_ERROR -- \"Error when communicate with multipathd daemon\"\n\n",
                    "rendered": {
                      "text": "* DMMP_ERR_NO_MEMORY -- \"Out of memory\"\n\n* DMMP_ERR_IPC_TIMEOUT -- \"Timeout when communicate with multipathd,\ntry to set bigger timeout value via dmmp_context_timeout_set ()\"\n\n* DMMP_ERR_IPC_ERROR -- \"Error when communicate with multipathd daemon\"\n\n",
                      "markdown": "`* DMMP_ERR_NO_MEMORY -- \"Out of memory\"\n\n* DMMP_ERR_IPC_TIMEOUT -- \"Timeout when communicate with multipathd,\ntry to set bigger timeout value via dmmp_context_timeout_set ()\"\n\n* DMMP_ERR_IPC_ERROR -- \"Error when communicate with multipathd daemon\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 14,
                  "endLine": 68,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        # MUST use >- here, otherwise the condition always evaluates to true\n        if: >-\n          ${{\n              env.ABI_BRANCH != github.ref_name &&\n              (steps.reference.outcome == 'failure' ||\n               steps.compare.outcome == 'failure')\n          }}\n",
                    "rendered": {
                      "text": "        # MUST use >- here, otherwise the condition always evaluates to true\n        if: >-\n          ${{\n              env.ABI_BRANCH != github.ref_name &&\n              (steps.reference.outcome == 'failure' ||\n               steps.compare.outcome == 'failure')\n          }}\n",
                      "markdown": "`        # MUST use >- here, otherwise the condition always evaluates to true\n        if: >-\n          ${{\n              env.ABI_BRANCH != github.ref_name &&\n              (steps.reference.outcome == 'failure' ||\n               steps.compare.outcome == 'failure')\n          }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 22,
                  "endLine": 34,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        uses: dawidd6/action-download-artifact@v2\n        with:\n          workflow: abi.yaml\n          branch: ${{ env.ABI_BRANCH }}\n          name: abi\n          path: reference-abi\n      - name: update\n",
                    "rendered": {
                      "text": "        uses: dawidd6/action-download-artifact@v2\n        with:\n          workflow: abi.yaml\n          branch: ${{ env.ABI_BRANCH }}\n          name: abi\n          path: reference-abi\n      - name: update\n",
                      "markdown": "`        uses: dawidd6/action-download-artifact@v2\n        with:\n          workflow: abi.yaml\n          branch: ${{ env.ABI_BRANCH }}\n          name: abi\n          path: reference-abi\n      - name: update\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 16,
                  "endLine": 24,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    runs-on: ubuntu-20.04\n    steps:\n      - name: set ABI branch\n        if: ${{ env.ABI_BRANCH == '' }}\n        run: echo \"ABI_BRANCH=master\" >> $GITHUB_ENV\n      - name: checkout\n        uses: actions/checkout@v2\n",
                    "rendered": {
                      "text": "    runs-on: ubuntu-20.04\n    steps:\n      - name: set ABI branch\n        if: ${{ env.ABI_BRANCH == '' }}\n        run: echo \"ABI_BRANCH=master\" >> $GITHUB_ENV\n      - name: checkout\n        uses: actions/checkout@v2\n",
                      "markdown": "`    runs-on: ubuntu-20.04\n    steps:\n      - name: set ABI branch\n        if: ${{ env.ABI_BRANCH == '' }}\n        run: echo \"ABI_BRANCH=master\" >> $GITHUB_ENV\n      - name: checkout\n        uses: actions/checkout@v2\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 25,
                  "endLine": 39,
                  "snippet": {
                    "text": "          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          gcc make pkg-config abigail-tools\n",
                    "rendered": {
                      "text": "          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          gcc make pkg-config abigail-tools\n",
                      "markdown": "`          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          gcc make pkg-config abigail-tools\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 13,
                  "endLine": 38,
                  "snippet": {
                    "text": "          branch: ${{ env.ABI_BRANCH }}\n          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                    "rendered": {
                      "text": "          branch: ${{ env.ABI_BRANCH }}\n          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                      "markdown": "`          branch: ${{ env.ABI_BRANCH }}\n          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 14,
                  "endLine": 41,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          gcc make pkg-config abigail-tools\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                    "rendered": {
                      "text": "        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          gcc make pkg-config abigail-tools\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                      "markdown": "`        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n          gcc make pkg-config abigail-tools\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/abi.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 26,
                  "snippet": {
                    "text": "          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                    "rendered": {
                      "text": "          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n",
                      "markdown": "`          name: abi\n          path: reference-abi\n      - name: update\n        run: sudo apt-get update\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes gcc\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/coverity.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 9,
                  "endLine": 41,
                  "snippet": {
                    "text": "        run: tar cfz multipath-tools.tgz cov-int\n      - name: submit results\n        run: >\n          curl\n          --form token=\"$COV_TOKEN\"\n          --form email=\"$COV_EMAIL\"\n          --form file=\"@multipath-tools.tgz\"\n          --form version=\"${{ github.ref_name }}\"\n",
                    "rendered": {
                      "text": "        run: tar cfz multipath-tools.tgz cov-int\n      - name: submit results\n        run: >\n          curl\n          --form token=\"$COV_TOKEN\"\n          --form email=\"$COV_EMAIL\"\n          --form file=\"@multipath-tools.tgz\"\n          --form version=\"${{ github.ref_name }}\"\n",
                      "markdown": "`        run: tar cfz multipath-tools.tgz cov-int\n      - name: submit results\n        run: >\n          curl\n          --form token=\"$COV_TOKEN\"\n          --form email=\"$COV_EMAIL\"\n          --form file=\"@multipath-tools.tgz\"\n          --form version=\"${{ github.ref_name }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/coverity.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 12,
                  "endLine": 37,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          PATH=\"$PWD/coverity/bin:$PATH\"\n          cov-build --dir cov-int make -Orecurse -j\"$(grep -c ^processor /proc/cpuinfo)\"\n      - name: pack results\n        run: tar cfz multipath-tools.tgz cov-int\n      - name: submit results\n        run: >\n          curl\n",
                    "rendered": {
                      "text": "          PATH=\"$PWD/coverity/bin:$PATH\"\n          cov-build --dir cov-int make -Orecurse -j\"$(grep -c ^processor /proc/cpuinfo)\"\n      - name: pack results\n        run: tar cfz multipath-tools.tgz cov-int\n      - name: submit results\n        run: >\n          curl\n",
                      "markdown": "`          PATH=\"$PWD/coverity/bin:$PATH\"\n          cov-build --dir cov-int make -Orecurse -j\"$(grep -c ^processor /proc/cpuinfo)\"\n      - name: pack results\n        run: tar cfz multipath-tools.tgz cov-int\n      - name: submit results\n        run: >\n          curl\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/coverity.yaml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 9,
                  "endLine": 31,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: unpack coverity\n        run: |\n          mkdir -p coverity\n          tar xfz cov-analysis-linux64.tar.gz --strip 1 -C coverity\n      - name: build with cov-build\n        run: >\n          PATH=\"$PWD/coverity/bin:$PATH\"\n",
                    "rendered": {
                      "text": "      - name: unpack coverity\n        run: |\n          mkdir -p coverity\n          tar xfz cov-analysis-linux64.tar.gz --strip 1 -C coverity\n      - name: build with cov-build\n        run: >\n          PATH=\"$PWD/coverity/bin:$PATH\"\n",
                      "markdown": "`      - name: unpack coverity\n        run: |\n          mkdir -p coverity\n          tar xfz cov-analysis-linux64.tar.gz --strip 1 -C coverity\n      - name: build with cov-build\n        run: >\n          PATH=\"$PWD/coverity/bin:$PATH\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/coverity.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 15,
                  "snippet": {
                    "text": "          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n      - name: download coverity\n        run: >\n          curl -o cov-analysis-linux64.tar.gz\n          --form token=\"$COV_TOKEN\"\n          --form project=\"$COV_PROJECT\"\n          https://scan.coverity.com/download/cxx/linux64\n",
                    "rendered": {
                      "text": "          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n      - name: download coverity\n        run: >\n          curl -o cov-analysis-linux64.tar.gz\n          --form token=\"$COV_TOKEN\"\n          --form project=\"$COV_PROJECT\"\n          https://scan.coverity.com/download/cxx/linux64\n",
                      "markdown": "`          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n      - name: download coverity\n        run: >\n          curl -o cov-analysis-linux64.tar.gz\n          --form token=\"$COV_TOKEN\"\n          --form project=\"$COV_PROJECT\"\n          https://scan.coverity.com/download/cxx/linux64\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/coverity.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 14,
                  "endLine": 15,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        uses: actions/checkout@v2\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes\n          gcc make pkg-config\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                    "rendered": {
                      "text": "        uses: actions/checkout@v2\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes\n          gcc make pkg-config\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n",
                      "markdown": "`        uses: actions/checkout@v2\n      - name: dependencies\n        run: >\n          sudo apt-get install --yes\n          gcc make pkg-config\n          libdevmapper-dev libreadline-dev libaio-dev libsystemd-dev\n          libudev-dev libjson-c-dev liburcu-dev libcmocka-dev libedit-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 116,
                  "endColumn": 37,
                  "snippet": {
                    "text": "ENV{.MPATH_DEVICE_READY_OLD}!=\"0\", GOTO=\"scan_import\"\nENV{.DM_SUSPENDED}==\"1\", ENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"scan_import\"\n\nENV{DM_ACTIVATION}=\"1\", ENV{MPATH_UNCHANGED}=\"0\"\n\n# The code to check multipath state ends here. We need to set\n# properties and symlinks regardless whether the map is usable or\n",
                    "rendered": {
                      "text": "ENV{.MPATH_DEVICE_READY_OLD}!=\"0\", GOTO=\"scan_import\"\nENV{.DM_SUSPENDED}==\"1\", ENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"scan_import\"\n\nENV{DM_ACTIVATION}=\"1\", ENV{MPATH_UNCHANGED}=\"0\"\n\n# The code to check multipath state ends here. We need to set\n# properties and symlinks regardless whether the map is usable or\n",
                      "markdown": "`ENV{.MPATH_DEVICE_READY_OLD}!=\"0\", GOTO=\"scan_import\"\nENV{.DM_SUSPENDED}==\"1\", ENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"scan_import\"\n\nENV{DM_ACTIVATION}=\"1\", ENV{MPATH_UNCHANGED}=\"0\"\n\n# The code to check multipath state ends here. We need to set\n# properties and symlinks regardless whether the map is usable or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# For path failed or reinstated events, unset DM_ACTIVATION.\n# This is similar to the DM_SUBSYSTEM_UDEV_FLAG0 case above.\nENV{DM_ACTION}==\"PATH_FAILED|PATH_REINSTATED\", \\\n\tENV{DM_ACTIVATION}=\"0\", ENV{MPATH_UNCHANGED}=\"1\"\n\nLABEL=\"check_mpath_ready\"\n\n",
                    "rendered": {
                      "text": "# For path failed or reinstated events, unset DM_ACTIVATION.\n# This is similar to the DM_SUBSYSTEM_UDEV_FLAG0 case above.\nENV{DM_ACTION}==\"PATH_FAILED|PATH_REINSTATED\", \\\n\tENV{DM_ACTIVATION}=\"0\", ENV{MPATH_UNCHANGED}=\"1\"\n\nLABEL=\"check_mpath_ready\"\n\n",
                      "markdown": "`# For path failed or reinstated events, unset DM_ACTIVATION.\n# This is similar to the DM_SUBSYSTEM_UDEV_FLAG0 case above.\nENV{DM_ACTION}==\"PATH_FAILED|PATH_REINSTATED\", \\\n\tENV{DM_ACTIVATION}=\"0\", ENV{MPATH_UNCHANGED}=\"1\"\n\nLABEL=\"check_mpath_ready\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 1,
                  "endLine": 83,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# It's exactly mpath's job to provide *seamless* device access to any of the\n# paths that are available underneath.\nENV{DM_SUBSYSTEM_UDEV_FLAG0}==\"1\", \\\n\tENV{DM_ACTIVATION}=\"0\", ENV{MPATH_UNCHANGED}=\"1\"\n\n# For path failed or reinstated events, unset DM_ACTIVATION.\n# This is similar to the DM_SUBSYSTEM_UDEV_FLAG0 case above.\n",
                    "rendered": {
                      "text": "# It's exactly mpath's job to provide *seamless* device access to any of the\n# paths that are available underneath.\nENV{DM_SUBSYSTEM_UDEV_FLAG0}==\"1\", \\\n\tENV{DM_ACTIVATION}=\"0\", ENV{MPATH_UNCHANGED}=\"1\"\n\n# For path failed or reinstated events, unset DM_ACTIVATION.\n# This is similar to the DM_SUBSYSTEM_UDEV_FLAG0 case above.\n",
                      "markdown": "`# It's exactly mpath's job to provide *seamless* device access to any of the\n# paths that are available underneath.\nENV{DM_SUBSYSTEM_UDEV_FLAG0}==\"1\", \\\n\tENV{DM_ACTIVATION}=\"0\", ENV{MPATH_UNCHANGED}=\"1\"\n\n# For path failed or reinstated events, unset DM_ACTIVATION.\n# This is similar to the DM_SUBSYSTEM_UDEV_FLAG0 case above.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# i.e. disable the MPATH_UNCHANGED logic and set DM_ACTIVATION=1.\nIMPORT{db}=\"DM_COLDPLUG_SUSPENDED\"\nENV{DM_COLDPLUG_SUSPENDED}==\"1\", ENV{.DM_SUSPENDED}!=\"1\", \\\n\tENV{DM_ACTIVATION}=\"1\", ENV{MPATH_UNCHANGED}=\"0\", \\\n\tPROGRAM=\"@SYSDIR_BIN@/logger -t 11-dm-mpath.rules -p daemon.notice \\\"Forcing activation of previously suspended device\\\"\", \\\n\tGOTO=\"check_mpath_ready\"\n\n",
                    "rendered": {
                      "text": "# i.e. disable the MPATH_UNCHANGED logic and set DM_ACTIVATION=1.\nIMPORT{db}=\"DM_COLDPLUG_SUSPENDED\"\nENV{DM_COLDPLUG_SUSPENDED}==\"1\", ENV{.DM_SUSPENDED}!=\"1\", \\\n\tENV{DM_ACTIVATION}=\"1\", ENV{MPATH_UNCHANGED}=\"0\", \\\n\tPROGRAM=\"@SYSDIR_BIN@/logger -t 11-dm-mpath.rules -p daemon.notice \\\"Forcing activation of previously suspended device\\\"\", \\\n\tGOTO=\"check_mpath_ready\"\n\n",
                      "markdown": "`# i.e. disable the MPATH_UNCHANGED logic and set DM_ACTIVATION=1.\nIMPORT{db}=\"DM_COLDPLUG_SUSPENDED\"\nENV{DM_COLDPLUG_SUSPENDED}==\"1\", ENV{.DM_SUSPENDED}!=\"1\", \\\n\tENV{DM_ACTIVATION}=\"1\", ENV{MPATH_UNCHANGED}=\"0\", \\\n\tPROGRAM=\"@SYSDIR_BIN@/logger -t 11-dm-mpath.rules -p daemon.notice \\\"Forcing activation of previously suspended device\\\"\", \\\n\tGOTO=\"check_mpath_ready\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "endColumn": 50,
                  "snippet": {
                    "text": "# Check the map state directly with multipath -U.\n# This doesn't attempt I/O on the device.\nPROGRAM==\"@BINDIR@/multipath -U -v1 %k\", GOTO=\"paths_ok\"\nENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"check_mpath_unchanged\"\n\nLABEL=\"paths_ok\"\n\n",
                    "rendered": {
                      "text": "# Check the map state directly with multipath -U.\n# This doesn't attempt I/O on the device.\nPROGRAM==\"@BINDIR@/multipath -U -v1 %k\", GOTO=\"paths_ok\"\nENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"check_mpath_unchanged\"\n\nLABEL=\"paths_ok\"\n\n",
                      "markdown": "`# Check the map state directly with multipath -U.\n# This doesn't attempt I/O on the device.\nPROGRAM==\"@BINDIR@/multipath -U -v1 %k\", GOTO=\"paths_ok\"\nENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"check_mpath_unchanged\"\n\nLABEL=\"paths_ok\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 29,
                  "endLine": 47,
                  "endColumn": 79,
                  "snippet": {
                    "text": "# Note that DM_NR_VALID_PATHS is only set for PATH_FAILED|PATH_REINSTATED\n# events.\n# This may not be reliable, as events aren't necessarily received in order.\nENV{DM_NR_VALID_PATHS}==\"0\", ENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"check_mpath_unchanged\"\n\n# Don't run multipath -U during \"coldplug\" after switching root,\n# because paths are just being added to the udev db.\n",
                    "rendered": {
                      "text": "# Note that DM_NR_VALID_PATHS is only set for PATH_FAILED|PATH_REINSTATED\n# events.\n# This may not be reliable, as events aren't necessarily received in order.\nENV{DM_NR_VALID_PATHS}==\"0\", ENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"check_mpath_unchanged\"\n\n# Don't run multipath -U during \"coldplug\" after switching root,\n# because paths are just being added to the udev db.\n",
                      "markdown": "`# Note that DM_NR_VALID_PATHS is only set for PATH_FAILED|PATH_REINSTATED\n# events.\n# This may not be reliable, as events aren't necessarily received in order.\nENV{DM_NR_VALID_PATHS}==\"0\", ENV{MPATH_DEVICE_READY}=\"0\", GOTO=\"check_mpath_unchanged\"\n\n# Don't run multipath -U during \"coldplug\" after switching root,\n# because paths are just being added to the udev db.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 14,
                  "endLine": 30,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# If this uevent didn't come from dm, don't try to update the\n# device state\n# Note that .MPATH_DEVICE_READY_OLD==\"\" here. Thus we won't activate the\n# device below at mpath_is_ready, which is correct.\nENV{DM_COOKIE}!=\"?*\", ENV{DM_ACTION}!=\"PATH_*\", \\\n\tIMPORT{db}=\"DM_COLDPLUG_SUSPENDED\", \\\n\tGOTO=\"check_mpath_ready\"\n",
                    "rendered": {
                      "text": "# If this uevent didn't come from dm, don't try to update the\n# device state\n# Note that .MPATH_DEVICE_READY_OLD==\"\" here. Thus we won't activate the\n# device below at mpath_is_ready, which is correct.\nENV{DM_COOKIE}!=\"?*\", ENV{DM_ACTION}!=\"PATH_*\", \\\n\tIMPORT{db}=\"DM_COLDPLUG_SUSPENDED\", \\\n\tGOTO=\"check_mpath_ready\"\n",
                      "markdown": "`# If this uevent didn't come from dm, don't try to update the\n# device state\n# Note that .MPATH_DEVICE_READY_OLD==\"\" here. Thus we won't activate the\n# device below at mpath_is_ready, which is correct.\nENV{DM_COOKIE}!=\"?*\", ENV{DM_ACTION}!=\"PATH_*\", \\\n\tIMPORT{db}=\"DM_COLDPLUG_SUSPENDED\", \\\n\tGOTO=\"check_mpath_ready\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/11-dm-mpath.rules.in"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 50,
                  "endLine": 27,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\tENV{DM_UDEV_DISABLE_OTHER_RULES_FLAG}=\"\", GOTO=\"scan_import\"\nLABEL=\"mpath_coldplug_end\"\n\n# If this uevent didn't come from dm, don't try to update the\n# device state\n# Note that .MPATH_DEVICE_READY_OLD==\"\" here. Thus we won't activate the\n# device below at mpath_is_ready, which is correct.\n",
                    "rendered": {
                      "text": "\tENV{DM_UDEV_DISABLE_OTHER_RULES_FLAG}=\"\", GOTO=\"scan_import\"\nLABEL=\"mpath_coldplug_end\"\n\n# If this uevent didn't come from dm, don't try to update the\n# device state\n# Note that .MPATH_DEVICE_READY_OLD==\"\" here. Thus we won't activate the\n# device below at mpath_is_ready, which is correct.\n",
                      "markdown": "`\tENV{DM_UDEV_DISABLE_OTHER_RULES_FLAG}=\"\", GOTO=\"scan_import\"\nLABEL=\"mpath_coldplug_end\"\n\n# If this uevent didn't come from dm, don't try to update the\n# device state\n# Note that .MPATH_DEVICE_READY_OLD==\"\" here. Thus we won't activate the\n# device below at mpath_is_ready, which is correct.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 3,
                  "endLine": 108,
                  "endColumn": 43,
                  "snippet": {
                    "text": "   these kernels).\n * `SYSTEMD`: The version number of systemd (e.g. \"244\") to compile the code for.\n   The default is autodetected, assuming that the systemd version in the build\n   environment is the same as on the target system. Override the value to\n   build for a different systemd version, or set it to `\"\"` to build for a\n   system without systemd.\n   **Caution:** multipathd without systemd has been largely untested by the\n",
                    "rendered": {
                      "text": "   these kernels).\n * `SYSTEMD`: The version number of systemd (e.g. \"244\") to compile the code for.\n   The default is autodetected, assuming that the systemd version in the build\n   environment is the same as on the target system. Override the value to\n   build for a different systemd version, or set it to `\"\"` to build for a\n   system without systemd.\n   **Caution:** multipathd without systemd has been largely untested by the\n",
                      "markdown": "`   these kernels).\n * `SYSTEMD`: The version number of systemd (e.g. \"244\") to compile the code for.\n   The default is autodetected, assuming that the systemd version in the build\n   environment is the same as on the target system. Override the value to\n   build for a different systemd version, or set it to `\"\"` to build for a\n   system without systemd.\n   **Caution:** multipathd without systemd has been largely untested by the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 42,
                  "endLine": 252,
                  "endColumn": 46,
                  "snippet": {
                    "text": "--------------------------\n\nIf you want to add special settings for a storage device which is\nnew on the market, follow the instructions at the top of the\nfile `libmultipath/hwtable.c`.\n\nChangelog\n",
                    "rendered": {
                      "text": "--------------------------\n\nIf you want to add special settings for a storage device which is\nnew on the market, follow the instructions at the top of the\nfile `libmultipath/hwtable.c`.\n\nChangelog\n",
                      "markdown": "`--------------------------\n\nIf you want to add special settings for a storage device which is\nnew on the market, follow the instructions at the top of the\nfile `libmultipath/hwtable.c`.\n\nChangelog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 29,
                  "endLine": 112,
                  "endColumn": 33,
                  "snippet": {
                    "text": "   build for a different systemd version, or set it to `\"\"` to build for a\n   system without systemd.\n   **Caution:** multipathd without systemd has been largely untested by the\n   upstream maintainers since at least 2020.\n * `SCSI_DH_MODULES_PRELOAD=\"(list)\"`: specify a space-separated list of SCSI\n   device handler kernel modules to load early during boot. Some\n   multipath-tools functionality depends on these modules being loaded\n",
                    "rendered": {
                      "text": "   build for a different systemd version, or set it to `\"\"` to build for a\n   system without systemd.\n   **Caution:** multipathd without systemd has been largely untested by the\n   upstream maintainers since at least 2020.\n * `SCSI_DH_MODULES_PRELOAD=\"(list)\"`: specify a space-separated list of SCSI\n   device handler kernel modules to load early during boot. Some\n   multipath-tools functionality depends on these modules being loaded\n",
                      "markdown": "`   build for a different systemd version, or set it to `\"\"` to build for a\n   system without systemd.\n   **Caution:** multipathd without systemd has been largely untested by the\n   upstream maintainers since at least 2020.\n * `SCSI_DH_MODULES_PRELOAD=\"(list)\"`: specify a space-separated list of SCSI\n   device handler kernel modules to load early during boot. Some\n   multipath-tools functionality depends on these modules being loaded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 49,
                  "endLine": 252,
                  "endColumn": 54,
                  "snippet": {
                    "text": "--------------------------\n\nIf you want to add special settings for a storage device which is\nnew on the market, follow the instructions at the top of the\nfile `libmultipath/hwtable.c`.\n\nChangelog\n",
                    "rendered": {
                      "text": "--------------------------\n\nIf you want to add special settings for a storage device which is\nnew on the market, follow the instructions at the top of the\nfile `libmultipath/hwtable.c`.\n\nChangelog\n",
                      "markdown": "`--------------------------\n\nIf you want to add special settings for a storage device which is\nnew on the market, follow the instructions at the top of the\nfile `libmultipath/hwtable.c`.\n\nChangelog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 49,
                  "endLine": 184,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    rsync -a $BUILD_HOST:$DESTDIR/ $INSTALL_HOST:$TGTDIR/\n\t\nand adds `$TGTDIR/lib64` to `LD_LIBRARY_PATH` on the installation host, the\nmultipath binaries installed under `$TGTDIR` will find their plugins and\nconfiguration files in the expected compiled-in paths.\n\n### Compiler Options\n",
                    "rendered": {
                      "text": "    rsync -a $BUILD_HOST:$DESTDIR/ $INSTALL_HOST:$TGTDIR/\n\t\nand adds `$TGTDIR/lib64` to `LD_LIBRARY_PATH` on the installation host, the\nmultipath binaries installed under `$TGTDIR` will find their plugins and\nconfiguration files in the expected compiled-in paths.\n\n### Compiler Options\n",
                      "markdown": "`    rsync -a $BUILD_HOST:$DESTDIR/ $INSTALL_HOST:$TGTDIR/\n\t\nand adds `$TGTDIR/lib64` to `LD_LIBRARY_PATH` on the installation host, the\nmultipath binaries installed under `$TGTDIR` will find their plugins and\nconfiguration files in the expected compiled-in paths.\n\n### Compiler Options\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 3,
                  "endLine": 181,
                  "endColumn": 10,
                  "snippet": {
                    "text": "host. On the installation host, the plugins will be expected to be found under\n`/test/opt/lib64/multipath`. If the developer runs\n\n    rsync -a $BUILD_HOST:$DESTDIR/ $INSTALL_HOST:$TGTDIR/\n\t\nand adds `$TGTDIR/lib64` to `LD_LIBRARY_PATH` on the installation host, the\nmultipath binaries installed under `$TGTDIR` will find their plugins and\n",
                    "rendered": {
                      "text": "host. On the installation host, the plugins will be expected to be found under\n`/test/opt/lib64/multipath`. If the developer runs\n\n    rsync -a $BUILD_HOST:$DESTDIR/ $INSTALL_HOST:$TGTDIR/\n\t\nand adds `$TGTDIR/lib64` to `LD_LIBRARY_PATH` on the installation host, the\nmultipath binaries installed under `$TGTDIR` will find their plugins and\n",
                      "markdown": "`host. On the installation host, the plugins will be expected to be found under\n`/test/opt/lib64/multipath`. If the developer runs\n\n    rsync -a $BUILD_HOST:$DESTDIR/ $INSTALL_HOST:$TGTDIR/\n\t\nand adds `$TGTDIR/lib64` to `LD_LIBRARY_PATH` on the installation host, the\nmultipath binaries installed under `$TGTDIR` will find their plugins and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Direct download\n---------------\n\n    wget \"https://github.com/opensvc/multipath-tools/archive/X.Y.Z.tar.gz\" -O multipath-tools-X.Y.Z.tar.gz\n\n\nBrowser\n",
                    "rendered": {
                      "text": "Direct download\n---------------\n\n    wget \"https://github.com/opensvc/multipath-tools/archive/X.Y.Z.tar.gz\" -O multipath-tools-X.Y.Z.tar.gz\n\n\nBrowser\n",
                      "markdown": "`Direct download\n---------------\n\n    wget \"https://github.com/opensvc/multipath-tools/archive/X.Y.Z.tar.gz\" -O multipath-tools-X.Y.Z.tar.gz\n\n\nBrowser\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 29,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n\n\nDirect download\n",
                    "rendered": {
                      "text": "    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n\n\nDirect download\n",
                      "markdown": "`    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n\n\nDirect download\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 3,
                  "endLine": 28,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n\n\n",
                    "rendered": {
                      "text": "\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n\n\n",
                      "markdown": "`\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Git\n---\n\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n",
                    "rendered": {
                      "text": "Git\n---\n\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n",
                      "markdown": "`Git\n---\n\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n    git tag\n    git archive --format=tar.gz --prefix=multipath-tools-X.Y.Z/ X.Y.Z > ../multipath-tools-X.Y.Z.tar.gz\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/README.md"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 24,
                  "snippet": {
                    "text": "\nTo get a specific X.Y.Z release, use one of the following method:\n\n\nGit\n---\n\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n",
                    "rendered": {
                      "text": "\nTo get a specific X.Y.Z release, use one of the following method:\n\n\nGit\n---\n\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n",
                      "markdown": "`\nTo get a specific X.Y.Z release, use one of the following method:\n\n\nGit\n---\n\n    git clone https://github.com/opensvc/multipath-tools.git\n    cd multipath-tools\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/prioritizers/rdac.c"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 31,
                  "endLine": 51,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t    sense_buffer[4] != 'v' ||\n\t    sense_buffer[5] != 'a' ||\n\t    sense_buffer[6] != 'c' ) {\n\t\tpp_rdac_log(0, \"volume access control page in unknown format\");\n\t\tgoto out;\n\t}\n\n",
                    "rendered": {
                      "text": "\t    sense_buffer[4] != 'v' ||\n\t    sense_buffer[5] != 'a' ||\n\t    sense_buffer[6] != 'c' ) {\n\t\tpp_rdac_log(0, \"volume access control page in unknown format\");\n\t\tgoto out;\n\t}\n\n",
                      "markdown": "`\t    sense_buffer[4] != 'v' ||\n\t    sense_buffer[5] != 'a' ||\n\t    sense_buffer[6] != 'c' ) {\n\t\tpp_rdac_log(0, \"volume access control page in unknown format\");\n\t\tgoto out;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/prioritizers/iet.c"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 4,
                  "endLine": 118,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t// if device parsed is the right one\n\t\t\t\tif (device!=NULL && strncmp(device, dev, strlen(device)) == 0) {\n\t\t\t\t\tchar *ip;\n\t\t\t\t\tip = find_regex(dir_entry_p->d_name,\"([0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})\");\n\t\t\t\t\t// if prefferedip and ip fetched matches\n\t\t\t\t\tif (ip!=NULL && strncmp(ip, preferredip, strlen(ip)) == 0) {\n\t\t\t\t\t\t// high prio\n",
                    "rendered": {
                      "text": "\t\t\t\t// if device parsed is the right one\n\t\t\t\tif (device!=NULL && strncmp(device, dev, strlen(device)) == 0) {\n\t\t\t\t\tchar *ip;\n\t\t\t\t\tip = find_regex(dir_entry_p->d_name,\"([0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})\");\n\t\t\t\t\t// if prefferedip and ip fetched matches\n\t\t\t\t\tif (ip!=NULL && strncmp(ip, preferredip, strlen(ip)) == 0) {\n\t\t\t\t\t\t// high prio\n",
                      "markdown": "`\t\t\t\t// if device parsed is the right one\n\t\t\t\tif (device!=NULL && strncmp(device, dev, strlen(device)) == 0) {\n\t\t\t\t\tchar *ip;\n\t\t\t\t\tip = find_regex(dir_entry_p->d_name,\"([0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3})\");\n\t\t\t\t\t// if prefferedip and ip fetched matches\n\t\t\t\t\tif (ip!=NULL && strncmp(ip, preferredip, strlen(ip)) == 0) {\n\t\t\t\t\t\t// high prio\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/propsel.c"
                },
                "region": {
                  "startLine": 1430,
                  "startColumn": 16,
                  "endLine": 1430,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\torigin = \"(default for unknown hardware)\";\n\t\t}\n\t}\n\tcondlog(3, \"%s: timeout for find_multipaths \\\"smart\\\" = %ds %s\",\n\t\tpp->dev, pp->find_multipaths_timeout, origin);\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t\t\torigin = \"(default for unknown hardware)\";\n\t\t}\n\t}\n\tcondlog(3, \"%s: timeout for find_multipaths \\\"smart\\\" = %ds %s\",\n\t\tpp->dev, pp->find_multipaths_timeout, origin);\n\treturn 0;\n}\n",
                      "markdown": "`\t\t\torigin = \"(default for unknown hardware)\";\n\t\t}\n\t}\n\tcondlog(3, \"%s: timeout for find_multipaths \\\"smart\\\" = %ds %s\",\n\t\tpp->dev, pp->find_multipaths_timeout, origin);\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/propsel.c"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 23,
                  "endLine": 639,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t}\n\tpp_set_default(checker_timeout, DEF_TIMEOUT);\nout:\n\tcondlog(3, \"%s checker timeout = %u s %s\", pp->dev, pp->checker_timeout,\n\t\torigin);\n\treturn 0;\n}\n",
                    "rendered": {
                      "text": "\t}\n\tpp_set_default(checker_timeout, DEF_TIMEOUT);\nout:\n\tcondlog(3, \"%s checker timeout = %u s %s\", pp->dev, pp->checker_timeout,\n\t\torigin);\n\treturn 0;\n}\n",
                      "markdown": "`\t}\n\tpp_set_default(checker_timeout, DEF_TIMEOUT);\nout:\n\tcondlog(3, \"%s checker timeout = %u s %s\", pp->dev, pp->checker_timeout,\n\t\torigin);\n\treturn 0;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 3641,
                  "startColumn": 1,
                  "endLine": 3641,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tif (poll_dmevents)\n\t\tpoll_dmevents = dmevent_poll_supported();\n\n\tenvp = getenv(\"LimitNOFILE\");\n\n\tif (envp)\n\t\tcondlog(2,\"Using systemd provided open fds limit of %s\", envp);\n",
                    "rendered": {
                      "text": "\tif (poll_dmevents)\n\t\tpoll_dmevents = dmevent_poll_supported();\n\n\tenvp = getenv(\"LimitNOFILE\");\n\n\tif (envp)\n\t\tcondlog(2,\"Using systemd provided open fds limit of %s\", envp);\n",
                      "markdown": "`\tif (poll_dmevents)\n\t\tpoll_dmevents = dmevent_poll_supported();\n\n\tenvp = getenv(\"LimitNOFILE\");\n\n\tif (envp)\n\t\tcondlog(2,\"Using systemd provided open fds limit of %s\", envp);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 3358,
                  "startColumn": 36,
                  "endLine": 3358,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tres = sched_setscheduler(0, SCHED_RR, &sched_param);\n\n\tif (res == -1)\n\t\tcondlog(2, \"Could not set SCHED_RR at priority %d\",\n\t\t\tsched_param.sched_priority);\n\treturn;\n}\n",
                    "rendered": {
                      "text": "\tres = sched_setscheduler(0, SCHED_RR, &sched_param);\n\n\tif (res == -1)\n\t\tcondlog(2, \"Could not set SCHED_RR at priority %d\",\n\t\t\tsched_param.sched_priority);\n\treturn;\n}\n",
                      "markdown": "`\tres = sched_setscheduler(0, SCHED_RR, &sched_param);\n\n\tif (res == -1)\n\t\tcondlog(2, \"Could not set SCHED_RR at priority %d\",\n\t\t\tsched_param.sched_priority);\n\treturn;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 3057,
                  "startColumn": 30,
                  "endLine": 3057,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tpthread_cleanup_pop(1);\n\n\tif (map_discovery(vecs)) {\n\t\tcondlog(0, \"configure failed at map discovery\");\n\t\tgoto fail;\n\t}\n\n",
                    "rendered": {
                      "text": "\tpthread_cleanup_pop(1);\n\n\tif (map_discovery(vecs)) {\n\t\tcondlog(0, \"configure failed at map discovery\");\n\t\tgoto fail;\n\t}\n\n",
                      "markdown": "`\tpthread_cleanup_pop(1);\n\n\tif (map_discovery(vecs)) {\n\t\tcondlog(0, \"configure failed at map discovery\");\n\t\tgoto fail;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 3038,
                  "startColumn": 30,
                  "endLine": 3038,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t */\n\tret = path_discovery(vecs->pathvec, DI_ALL);\n\tif (ret < 0) {\n\t\tcondlog(0, \"configure failed at path discovery\");\n\t\tgoto fail;\n\t}\n\n",
                    "rendered": {
                      "text": "\t */\n\tret = path_discovery(vecs->pathvec, DI_ALL);\n\tif (ret < 0) {\n\t\tcondlog(0, \"configure failed at path discovery\");\n\t\tgoto fail;\n\t}\n\n",
                      "markdown": "`\t */\n\tret = path_discovery(vecs->pathvec, DI_ALL);\n\tif (ret < 0) {\n\t\tcondlog(0, \"configure failed at path discovery\");\n\t\tgoto fail;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 1650,
                  "startColumn": 18,
                  "endLine": 1650,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\t\tro = uevent_get_disk_ro(uev);\n\t\tif (needs_ro_update(mpp, ro)) {\n\t\t\tcondlog(2, \"%s: update path write_protect to '%d' (uevent)\", uev->kernel, ro);\n\n\t\t\tif (mpp->wait_for_udev)\n\t\t\t\tmpp->wait_for_udev = 2;\n",
                    "rendered": {
                      "text": "\n\t\tro = uevent_get_disk_ro(uev);\n\t\tif (needs_ro_update(mpp, ro)) {\n\t\t\tcondlog(2, \"%s: update path write_protect to '%d' (uevent)\", uev->kernel, ro);\n\n\t\t\tif (mpp->wait_for_udev)\n\t\t\t\tmpp->wait_for_udev = 2;\n",
                      "markdown": "`\n\t\tro = uevent_get_disk_ro(uev);\n\t\tif (needs_ro_update(mpp, ro)) {\n\t\t\tcondlog(2, \"%s: update path write_protect to '%d' (uevent)\", uev->kernel, ro);\n\n\t\t\tif (mpp->wait_for_udev)\n\t\t\t\tmpp->wait_for_udev = 2;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 1418,
                  "startColumn": 28,
                  "endLine": 1418,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t * into a mp->params string to feed the device-mapper\n\t\t */\n\t\tif (update_mpp_paths(mpp, vecs->pathvec)) {\n\t\t\tcondlog(0, \"%s: failed to update paths\",\n\t\t\t\tmpp->alias);\n\t\t\tgoto fail;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t * into a mp->params string to feed the device-mapper\n\t\t */\n\t\tif (update_mpp_paths(mpp, vecs->pathvec)) {\n\t\t\tcondlog(0, \"%s: failed to update paths\",\n\t\t\t\tmpp->alias);\n\t\t\tgoto fail;\n\t\t}\n",
                      "markdown": "`\t\t * into a mp->params string to feed the device-mapper\n\t\t */\n\t\tif (update_mpp_paths(mpp, vecs->pathvec)) {\n\t\t\tcondlog(0, \"%s: failed to update paths\",\n\t\t\t\tmpp->alias);\n\t\t\tgoto fail;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 4027,
                  "startColumn": 33,
                  "endLine": 4027,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tret = prin_do_scsi_ioctl(pp->dev, MPATH_PRIN_RKEY_SA, resp, 0);\n\tif (ret != MPATH_PR_SUCCESS )\n\t{\n\t\tcondlog(0,\"%s : pr in read keys service action failed. Error=%d\", pp->dev, ret);\n\t\tgoto out;\n\t}\n\n",
                    "rendered": {
                      "text": "\tret = prin_do_scsi_ioctl(pp->dev, MPATH_PRIN_RKEY_SA, resp, 0);\n\tif (ret != MPATH_PR_SUCCESS )\n\t{\n\t\tcondlog(0,\"%s : pr in read keys service action failed. Error=%d\", pp->dev, ret);\n\t\tgoto out;\n\t}\n\n",
                      "markdown": "`\tret = prin_do_scsi_ioctl(pp->dev, MPATH_PRIN_RKEY_SA, resp, 0);\n\tif (ret != MPATH_PR_SUCCESS )\n\t{\n\t\tcondlog(0,\"%s : pr in read keys service action failed. Error=%d\", pp->dev, ret);\n\t\tgoto out;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/main.c"
                },
                "region": {
                  "startLine": 2030,
                  "startColumn": 18,
                  "endLine": 2030,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tvector_foreach_slot (vecs->mpvec, mpp, i) {\n\t\tif (mpp->wait_for_udev && --mpp->uev_wait_tick <= 0) {\n\t\t\ttimed_out = 1;\n\t\t\tcondlog(0, \"%s: timeout waiting on creation uevent. enabling reloads\", mpp->alias);\n\t\t\tif (mpp->wait_for_udev > 1 &&\n\t\t\t    update_map(mpp, vecs, 0)) {\n\t\t\t\t/* update_map removed map */\n",
                    "rendered": {
                      "text": "\tvector_foreach_slot (vecs->mpvec, mpp, i) {\n\t\tif (mpp->wait_for_udev && --mpp->uev_wait_tick <= 0) {\n\t\t\ttimed_out = 1;\n\t\t\tcondlog(0, \"%s: timeout waiting on creation uevent. enabling reloads\", mpp->alias);\n\t\t\tif (mpp->wait_for_udev > 1 &&\n\t\t\t    update_map(mpp, vecs, 0)) {\n\t\t\t\t/* update_map removed map */\n",
                      "markdown": "`\tvector_foreach_slot (vecs->mpvec, mpp, i) {\n\t\tif (mpp->wait_for_udev && --mpp->uev_wait_tick <= 0) {\n\t\t\ttimed_out = 1;\n\t\t\tcondlog(0, \"%s: timeout waiting on creation uevent. enabling reloads\", mpp->alias);\n\t\t\tif (mpp->wait_for_udev > 1 &&\n\t\t\t    update_map(mpp, vecs, 0)) {\n\t\t\t\t/* update_map removed map */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/man/libdmmp.h.3"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 48,
                  "endLine": 51,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            printed_bytes += vfprintf(stderr, format, args);\n            userdata = dmmp_context_userdata_get(ctx);\n            if (userdata != NULL)\n                fprintf(stderr, \"(with user data at memory address %p)\",\n                        userdata);\n\n            if (printed_bytes < _DMMP_LOG_STRERR_ALIGN_WIDTH) {\n",
                    "rendered": {
                      "text": "            printed_bytes += vfprintf(stderr, format, args);\n            userdata = dmmp_context_userdata_get(ctx);\n            if (userdata != NULL)\n                fprintf(stderr, \"(with user data at memory address %p)\",\n                        userdata);\n\n            if (printed_bytes < _DMMP_LOG_STRERR_ALIGN_WIDTH) {\n",
                      "markdown": "`            printed_bytes += vfprintf(stderr, format, args);\n            userdata = dmmp_context_userdata_get(ctx);\n            if (userdata != NULL)\n                fprintf(stderr, \"(with user data at memory address %p)\",\n                        userdata);\n\n            if (printed_bytes < _DMMP_LOG_STRERR_ALIGN_WIDTH) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/libdmmp.c"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 40,
                  "endLine": 448,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t/* _process_cmd() already make sure output is not NULL */\n\tif (strncmp(output, \"ok\", strlen(\"ok\")) != 0) {\n\t\trc = DMMP_ERR_BUG;\n\t\t_error(ctx, \"Got unexpected output for cmd '%s': '%s'\",\n\t\t       cmd, output);\n\t}\n\n",
                    "rendered": {
                      "text": "\t/* _process_cmd() already make sure output is not NULL */\n\tif (strncmp(output, \"ok\", strlen(\"ok\")) != 0) {\n\t\trc = DMMP_ERR_BUG;\n\t\t_error(ctx, \"Got unexpected output for cmd '%s': '%s'\",\n\t\t       cmd, output);\n\t}\n\n",
                      "markdown": "`\t/* _process_cmd() already make sure output is not NULL */\n\tif (strncmp(output, \"ok\", strlen(\"ok\")) != 0) {\n\t\trc = DMMP_ERR_BUG;\n\t\t_error(ctx, \"Got unexpected output for cmd '%s': '%s'\",\n\t\t       cmd, output);\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/libdmmp.c"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 39,
                  "endLine": 383,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t\trc = DMMP_ERR_MPATH_NOT_FOUND;\n\t\t\tgoto out;\n\t\t}\n\t\t_error(ctx, \"Got unexpected error for cmd '%s': '%s'\",\n\t\t       cmd, *output);\n\t\trc = DMMP_ERR_BUG;\n\t}\n",
                    "rendered": {
                      "text": "\t\t\trc = DMMP_ERR_MPATH_NOT_FOUND;\n\t\t\tgoto out;\n\t\t}\n\t\t_error(ctx, \"Got unexpected error for cmd '%s': '%s'\",\n\t\t       cmd, *output);\n\t\trc = DMMP_ERR_BUG;\n\t}\n",
                      "markdown": "`\t\t\trc = DMMP_ERR_MPATH_NOT_FOUND;\n\t\t\tgoto out;\n\t\t}\n\t\t_error(ctx, \"Got unexpected error for cmd '%s': '%s'\",\n\t\t       cmd, *output);\n\t\trc = DMMP_ERR_BUG;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/libdmmp.c"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 46,
                  "endLine": 354,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\tif (ctx->tmo != 0)\n\t\t\tipc_tmo = ctx->tmo - elapsed;\n\n\t\t_debug(ctx, \"IPC timeout, but user requested timeout has not \"\n\t\t       \"reached yet, still have %u milliseconds\", ipc_tmo);\n\t\tgoto invoke;\n\t}\n",
                    "rendered": {
                      "text": "\t\tif (ctx->tmo != 0)\n\t\t\tipc_tmo = ctx->tmo - elapsed;\n\n\t\t_debug(ctx, \"IPC timeout, but user requested timeout has not \"\n\t\t       \"reached yet, still have %u milliseconds\", ipc_tmo);\n\t\tgoto invoke;\n\t}\n",
                      "markdown": "`\t\tif (ctx->tmo != 0)\n\t\t\tipc_tmo = ctx->tmo - elapsed;\n\n\t\t_debug(ctx, \"IPC timeout, but user requested timeout has not \"\n\t\t       \"reached yet, still have %u milliseconds\", ipc_tmo);\n\t\tgoto invoke;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/libdmmp.c"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 50,
                  "endLine": 337,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif (clock_gettime(CLOCK_MONOTONIC, &cur_ts) != 0) {\n\t\t\t_error(ctx, \"BUG: Failed to get CLOCK_MONOTONIC time \"\n\t\t\t       \"via clock_gettime(), error %d\", errno);\n\t\t\trc = DMMP_ERR_BUG;\n\t\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif (clock_gettime(CLOCK_MONOTONIC, &cur_ts) != 0) {\n\t\t\t_error(ctx, \"BUG: Failed to get CLOCK_MONOTONIC time \"\n\t\t\t       \"via clock_gettime(), error %d\", errno);\n\t\t\trc = DMMP_ERR_BUG;\n\t\t\tgoto out;\n",
                      "markdown": "`\t\t}\n\n\t\tif (clock_gettime(CLOCK_MONOTONIC, &cur_ts) != 0) {\n\t\t\t_error(ctx, \"BUG: Failed to get CLOCK_MONOTONIC time \"\n\t\t\t       \"via clock_gettime(), error %d\", errno);\n\t\t\trc = DMMP_ERR_BUG;\n\t\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/libdmmp.c"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 49,
                  "endLine": 296,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t*output = NULL;\n\n\tif (clock_gettime(CLOCK_MONOTONIC, &start_ts) != 0) {\n\t\t_error(ctx, \"BUG: Failed to get CLOCK_MONOTONIC time \"\n\t\t       \"via clock_gettime(), error %d\", errno);\n\t\treturn DMMP_ERR_BUG;\n\t}\n",
                    "rendered": {
                      "text": "\t*output = NULL;\n\n\tif (clock_gettime(CLOCK_MONOTONIC, &start_ts) != 0) {\n\t\t_error(ctx, \"BUG: Failed to get CLOCK_MONOTONIC time \"\n\t\t       \"via clock_gettime(), error %d\", errno);\n\t\treturn DMMP_ERR_BUG;\n\t}\n",
                      "markdown": "`\t*output = NULL;\n\n\tif (clock_gettime(CLOCK_MONOTONIC, &start_ts) != 0) {\n\t\t_error(ctx, \"BUG: Failed to get CLOCK_MONOTONIC time \"\n\t\t       \"via clock_gettime(), error %d\", errno);\n\t\treturn DMMP_ERR_BUG;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/log.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 33,
                  "endLine": 150,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\t/* not enough space on tail : rewind */\n\tif (la->head <= la->tail && len > (la->end - la->tail)) {\n\t\tlogdbg(stderr, \"enqueue: rewind tail to %p\\n\", la->tail);\n\t\tif (la->head == la->start ) {\n\t\t\tlogdbg(stderr, \"enqueue: cannot rewind tail, drop msg\\n\");\n\t\t\tla->tail = lastmsg;\n",
                    "rendered": {
                      "text": "\n\t/* not enough space on tail : rewind */\n\tif (la->head <= la->tail && len > (la->end - la->tail)) {\n\t\tlogdbg(stderr, \"enqueue: rewind tail to %p\\n\", la->tail);\n\t\tif (la->head == la->start ) {\n\t\t\tlogdbg(stderr, \"enqueue: cannot rewind tail, drop msg\\n\");\n\t\t\tla->tail = lastmsg;\n",
                      "markdown": "`\n\t/* not enough space on tail : rewind */\n\tif (la->head <= la->tail && len > (la->end - la->tail)) {\n\t\tlogdbg(stderr, \"enqueue: rewind tail to %p\\n\", la->tail);\n\t\tif (la->head == la->start ) {\n\t\t\tlogdbg(stderr, \"enqueue: cannot rewind tail, drop msg\\n\");\n\t\t\tla->tail = lastmsg;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "endColumn": 29,
                  "snippet": {
                    "text": "ENV{FIND_MULTIPATHS_WAIT_UNTIL}!=\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}==\"0\", GOTO=\"end_mpath\"\n\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}=\"1\"\nRUN+=\"@SYSDIR_BIN@/systemctl stop cancel-multipath-wait-$kernel.timer\"\n\n# If \"multipath -u\" failed, no values are imported from the program,\n",
                    "rendered": {
                      "text": "ENV{FIND_MULTIPATHS_WAIT_UNTIL}!=\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}==\"0\", GOTO=\"end_mpath\"\n\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}=\"1\"\nRUN+=\"@SYSDIR_BIN@/systemctl stop cancel-multipath-wait-$kernel.timer\"\n\n# If \"multipath -u\" failed, no values are imported from the program,\n",
                      "markdown": "`ENV{FIND_MULTIPATHS_WAIT_UNTIL}!=\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}==\"0\", GOTO=\"end_mpath\"\n\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}=\"1\"\nRUN+=\"@SYSDIR_BIN@/systemctl stop cancel-multipath-wait-$kernel.timer\"\n\n# If \"multipath -u\" failed, no values are imported from the program,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 83,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# If timeout hasn't expired but we're not in \"maybe\" state anymore, stop timer\n# Do this only once, and only if the timer has been started before\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_CANCELLED\"\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}==\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}!=\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}==\"0\", GOTO=\"end_mpath\"\n\n",
                    "rendered": {
                      "text": "# If timeout hasn't expired but we're not in \"maybe\" state anymore, stop timer\n# Do this only once, and only if the timer has been started before\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_CANCELLED\"\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}==\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}!=\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}==\"0\", GOTO=\"end_mpath\"\n\n",
                      "markdown": "`# If timeout hasn't expired but we're not in \"maybe\" state anymore, stop timer\n# Do this only once, and only if the timer has been started before\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_CANCELLED\"\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}==\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}!=\"?*\", GOTO=\"end_mpath\"\nENV{FIND_MULTIPATHS_WAIT_UNTIL}==\"0\", GOTO=\"end_mpath\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 5,
                  "snippet": {
                    "text": "ACTION!=\"add\", GOTO=\"pretend_mpath\"\nENV{.SAVED_FM_WAIT_UNTIL}==\"?*\", GOTO=\"pretend_mpath\"\n\n# At this point, we are seeing this path for the first time, and it's \"maybe\" multipath.\n\n# The actual start command for the timer.\n#\n",
                    "rendered": {
                      "text": "ACTION!=\"add\", GOTO=\"pretend_mpath\"\nENV{.SAVED_FM_WAIT_UNTIL}==\"?*\", GOTO=\"pretend_mpath\"\n\n# At this point, we are seeing this path for the first time, and it's \"maybe\" multipath.\n\n# The actual start command for the timer.\n#\n",
                      "markdown": "`ACTION!=\"add\", GOTO=\"pretend_mpath\"\nENV{.SAVED_FM_WAIT_UNTIL}==\"?*\", GOTO=\"pretend_mpath\"\n\n# At this point, we are seeing this path for the first time, and it's \"maybe\" multipath.\n\n# The actual start command for the timer.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 52,
                  "endLine": 46,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# Code below here is only run in \"smart\" mode.\n# multipath -u has indicated this is \"maybe\" multipath.\n\n# Note that DM_MULTIPATH_DEVICE_PATH has the value 2 at this point.\n# This value will never propagate to other rules files, because\n# it will be reset to 1 in the \"pretend_multipath\" section below.\n\n",
                    "rendered": {
                      "text": "# Code below here is only run in \"smart\" mode.\n# multipath -u has indicated this is \"maybe\" multipath.\n\n# Note that DM_MULTIPATH_DEVICE_PATH has the value 2 at this point.\n# This value will never propagate to other rules files, because\n# it will be reset to 1 in the \"pretend_multipath\" section below.\n\n",
                      "markdown": "`# Code below here is only run in \"smart\" mode.\n# multipath -u has indicated this is \"maybe\" multipath.\n\n# Note that DM_MULTIPATH_DEVICE_PATH has the value 2 at this point.\n# This value will never propagate to other rules files, because\n# it will be reset to 1 in the \"pretend_multipath\" section below.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 30,
                  "endLine": 94,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# and we are still using the values for DM_MULTIPATH_DEVICE_PATH and\n# FIND_MULTIPATHS_WAIT_UNTIL that were imported from the database.\n# If we are in \"smart\" mode, we need to give up on the path now,\n# since this may have been the timeout event. Without the imports\n# from \"multipath -u\", we can't tell.\nENV{.MPATH_CHECK_PASSED}!=\"?*\", ENV{DM_MULTIPATH_DEVICE_PATH}=\"0\"\n\n",
                    "rendered": {
                      "text": "# and we are still using the values for DM_MULTIPATH_DEVICE_PATH and\n# FIND_MULTIPATHS_WAIT_UNTIL that were imported from the database.\n# If we are in \"smart\" mode, we need to give up on the path now,\n# since this may have been the timeout event. Without the imports\n# from \"multipath -u\", we can't tell.\nENV{.MPATH_CHECK_PASSED}!=\"?*\", ENV{DM_MULTIPATH_DEVICE_PATH}=\"0\"\n\n",
                      "markdown": "`# and we are still using the values for DM_MULTIPATH_DEVICE_PATH and\n# FIND_MULTIPATHS_WAIT_UNTIL that were imported from the database.\n# If we are in \"smart\" mode, we need to give up on the path now,\n# since this may have been the timeout event. Without the imports\n# from \"multipath -u\", we can't tell.\nENV{.MPATH_CHECK_PASSED}!=\"?*\", ENV{DM_MULTIPATH_DEVICE_PATH}=\"0\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 4,
                  "endLine": 80,
                  "endColumn": 13,
                  "snippet": {
                    "text": "GOTO=\"end_mpath\"\n\nLABEL=\"stop_wait\"\n# If timeout hasn't expired but we're not in \"maybe\" state anymore, stop timer\n# Do this only once, and only if the timer has been started before\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_CANCELLED\"\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}==\"?*\", GOTO=\"end_mpath\"\n",
                    "rendered": {
                      "text": "GOTO=\"end_mpath\"\n\nLABEL=\"stop_wait\"\n# If timeout hasn't expired but we're not in \"maybe\" state anymore, stop timer\n# Do this only once, and only if the timer has been started before\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_CANCELLED\"\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}==\"?*\", GOTO=\"end_mpath\"\n",
                      "markdown": "`GOTO=\"end_mpath\"\n\nLABEL=\"stop_wait\"\n# If timeout hasn't expired but we're not in \"maybe\" state anymore, stop timer\n# Do this only once, and only if the timer has been started before\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_CANCELLED\"\nENV{FIND_MULTIPATHS_WAIT_CANCELLED}==\"?*\", GOTO=\"end_mpath\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 53,
                  "endLine": 67,
                  "endColumn": 59,
                  "snippet": {
                    "text": "#\n# Note that this will try to activate multipathd if it isn't running yet.\n# If that fails, the unit starts and expires nonetheless. If multipathd\n# startup needs to wait for other services, this wait time will add up with\n# the --on-active timeout.\n#\n# We must trigger an \"add\" event because LVM2 will only act on those.\n",
                    "rendered": {
                      "text": "#\n# Note that this will try to activate multipathd if it isn't running yet.\n# If that fails, the unit starts and expires nonetheless. If multipathd\n# startup needs to wait for other services, this wait time will add up with\n# the --on-active timeout.\n#\n# We must trigger an \"add\" event because LVM2 will only act on those.\n",
                      "markdown": "`#\n# Note that this will try to activate multipathd if it isn't running yet.\n# If that fails, the unit starts and expires nonetheless. If multipathd\n# startup needs to wait for other services, this wait time will add up with\n# the --on-active timeout.\n#\n# We must trigger an \"add\" event because LVM2 will only act on those.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 46,
                  "endLine": 39,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\tENV{ID_FS_TYPE}=\"mpath_member\", ENV{SYSTEMD_READY}=\"0\", \\\n\tGOTO=\"stop_wait\"\n\n# case 2: this is definitely not multipath, or timeout has expired\nENV{DM_MULTIPATH_DEVICE_PATH}!=\"2\", \\\n\tGOTO=\"stop_wait\"\n\n",
                    "rendered": {
                      "text": "\tENV{ID_FS_TYPE}=\"mpath_member\", ENV{SYSTEMD_READY}=\"0\", \\\n\tGOTO=\"stop_wait\"\n\n# case 2: this is definitely not multipath, or timeout has expired\nENV{DM_MULTIPATH_DEVICE_PATH}!=\"2\", \\\n\tGOTO=\"stop_wait\"\n\n",
                      "markdown": "`\tENV{ID_FS_TYPE}=\"mpath_member\", ENV{SYSTEMD_READY}=\"0\", \\\n\tGOTO=\"stop_wait\"\n\n# case 2: this is definitely not multipath, or timeout has expired\nENV{DM_MULTIPATH_DEVICE_PATH}!=\"2\", \\\n\tGOTO=\"stop_wait\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.rules.in"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 35,
                  "endLine": 21,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nLABEL=\"test_dev\"\n\n# FIND_MULTIPATHS_WAIT_UNTIL is the timeout (in seconds after the\n# epoch).\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_UNTIL\"\nENV{.SAVED_FM_WAIT_UNTIL}=\"$env{FIND_MULTIPATHS_WAIT_UNTIL}\"\n",
                    "rendered": {
                      "text": "\nLABEL=\"test_dev\"\n\n# FIND_MULTIPATHS_WAIT_UNTIL is the timeout (in seconds after the\n# epoch).\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_UNTIL\"\nENV{.SAVED_FM_WAIT_UNTIL}=\"$env{FIND_MULTIPATHS_WAIT_UNTIL}\"\n",
                      "markdown": "`\nLABEL=\"test_dev\"\n\n# FIND_MULTIPATHS_WAIT_UNTIL is the timeout (in seconds after the\n# epoch).\nIMPORT{db}=\"FIND_MULTIPATHS_WAIT_UNTIL\"\nENV{.SAVED_FM_WAIT_UNTIL}=\"$env{FIND_MULTIPATHS_WAIT_UNTIL}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 59,
                  "endLine": 449,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 30,
                  "endLine": 360,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 57,
                  "endLine": 286,
                  "snippet": {
                    "text": "    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 21,
                  "endLine": 190,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 58,
                  "endLine": 159,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 11,
                  "endLine": 146,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 52,
                  "endLine": 126,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 24,
                  "endLine": 60,
                  "endColumn": 28,
                  "snippet": {
                    "text": "software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n",
                    "rendered": {
                      "text": "software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n",
                      "markdown": "`software will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 12,
                  "endLine": 405,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 51,
                  "endLine": 393,
                  "endColumn": 57,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 10,
                  "endLine": 345,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 12,
                  "endLine": 326,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 32,
                  "endLine": 211,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 12,
                  "endLine": 56,
                  "endColumn": 18,
                  "snippet": {
                    "text": "the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n",
                    "rendered": {
                      "text": "the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n",
                      "markdown": "`the original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/COPYING"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 1285,
                  "startColumn": 44,
                  "endLine": 1285,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t\terr = -EOVERFLOW;\n\t\t\tbreak;\n\t\t} else if (invalid) {\n\t\t\tcondlog(2, \"%s: invalid device designator at offset %zd: %02x%02x%02x%02x\",\n\t\t\t\t__func__, d - in, d[0], d[1], d[2], d[3]);\n\t\t\t/*\n\t\t\t * We checked above that the next offset is within limits.\n",
                    "rendered": {
                      "text": "\t\t\terr = -EOVERFLOW;\n\t\t\tbreak;\n\t\t} else if (invalid) {\n\t\t\tcondlog(2, \"%s: invalid device designator at offset %zd: %02x%02x%02x%02x\",\n\t\t\t\t__func__, d - in, d[0], d[1], d[2], d[3]);\n\t\t\t/*\n\t\t\t * We checked above that the next offset is within limits.\n",
                      "markdown": "`\t\t\terr = -EOVERFLOW;\n\t\t\tbreak;\n\t\t} else if (invalid) {\n\t\t\tcondlog(2, \"%s: invalid device designator at offset %zd: %02x%02x%02x%02x\",\n\t\t\t\t__func__, d - in, d[0], d[1], d[2], d[3]);\n\t\t\t/*\n\t\t\t * We checked above that the next offset is within limits.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 1143,
                  "startColumn": 58,
                  "endLine": 1143,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\t\tmemset(&pp->geom, 0, sizeof(pp->geom));\n\t\treturn 1;\n\t}\n\tcondlog(3, \"%s: %u cyl, %u heads, %u sectors/track, start at %lu\",\n\t\tpp->dev, pp->geom.cylinders, pp->geom.heads,\n\t\tpp->geom.sectors, pp->geom.start);\n\treturn 0;\n",
                    "rendered": {
                      "text": "\t\tmemset(&pp->geom, 0, sizeof(pp->geom));\n\t\treturn 1;\n\t}\n\tcondlog(3, \"%s: %u cyl, %u heads, %u sectors/track, start at %lu\",\n\t\tpp->dev, pp->geom.cylinders, pp->geom.heads,\n\t\tpp->geom.sectors, pp->geom.start);\n\treturn 0;\n",
                      "markdown": "`\t\tmemset(&pp->geom, 0, sizeof(pp->geom));\n\t\treturn 1;\n\t}\n\tcondlog(3, \"%s: %u cyl, %u heads, %u sectors/track, start at %lu\",\n\t\tpp->dev, pp->geom.cylinders, pp->geom.heads,\n\t\tpp->geom.sectors, pp->geom.start);\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 868,
                  "startColumn": 18,
                  "endLine": 868,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\t   value, len);\n\t\tif (ret != len)\n\t\t\tlog_sysfs_attr_set_value(3, ret,\n\t\t\t\t\"%s: failed to update I_T Nexus loss timeout\",\n\t\t\t\tpp->dev);\n\t}\n\tudev_device_unref(sas_dev);\n",
                    "rendered": {
                      "text": "\t\t\t\t\t   value, len);\n\t\tif (ret != len)\n\t\t\tlog_sysfs_attr_set_value(3, ret,\n\t\t\t\t\"%s: failed to update I_T Nexus loss timeout\",\n\t\t\t\tpp->dev);\n\t}\n\tudev_device_unref(sas_dev);\n",
                      "markdown": "`\t\t\t\t\t   value, len);\n\t\tif (ret != len)\n\t\t\tlog_sysfs_attr_set_value(3, ret,\n\t\t\t\t\"%s: failed to update I_T Nexus loss timeout\",\n\t\t\t\tpp->dev);\n\t}\n\tudev_device_unref(sas_dev);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 2441,
                  "startColumn": 34,
                  "endLine": 2441,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\tpp->fd = open(udev_device_get_devnode(pp->udev), O_RDONLY);\n\n\tif (pp->fd < 0) {\n\t\tcondlog(4, \"Couldn't open device node for %s: %s\",\n\t\t\tpp->dev, strerror(errno));\n\t\tgoto blank;\n\t}\n",
                    "rendered": {
                      "text": "\t\tpp->fd = open(udev_device_get_devnode(pp->udev), O_RDONLY);\n\n\tif (pp->fd < 0) {\n\t\tcondlog(4, \"Couldn't open device node for %s: %s\",\n\t\t\tpp->dev, strerror(errno));\n\t\tgoto blank;\n\t}\n",
                      "markdown": "`\t\tpp->fd = open(udev_device_get_devnode(pp->udev), O_RDONLY);\n\n\tif (pp->fd < 0) {\n\t\tcondlog(4, \"Couldn't open device node for %s: %s\",\n\t\t\tpp->dev, strerror(errno));\n\t\tgoto blank;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 1460,
                  "startColumn": 25,
                  "endLine": 1460,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\tmemset(buff, 0x0, maxlen);\n\tif (sgio_get_vpd(buff, maxlen, fd, pg) < 0) {\n\t\tint lvl = pg == 0x80 || pg == 0x83 ? 3 : 4;\n\n\t\tcondlog(lvl, \"failed to issue vpd inquiry for pg%02x\",\n\t\t\tpg);\n",
                    "rendered": {
                      "text": "\n\tmemset(buff, 0x0, maxlen);\n\tif (sgio_get_vpd(buff, maxlen, fd, pg) < 0) {\n\t\tint lvl = pg == 0x80 || pg == 0x83 ? 3 : 4;\n\n\t\tcondlog(lvl, \"failed to issue vpd inquiry for pg%02x\",\n\t\t\tpg);\n",
                      "markdown": "`\n\tmemset(buff, 0x0, maxlen);\n\tif (sgio_get_vpd(buff, maxlen, fd, pg) < 0) {\n\t\tint lvl = pg == 0x80 || pg == 0x83 ? 3 : 4;\n\n\t\tcondlog(lvl, \"failed to issue vpd inquiry for pg%02x\",\n\t\t\tpg);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 1460,
                  "startColumn": 11,
                  "endLine": 1460,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\tmemset(buff, 0x0, maxlen);\n\tif (sgio_get_vpd(buff, maxlen, fd, pg) < 0) {\n\t\tint lvl = pg == 0x80 || pg == 0x83 ? 3 : 4;\n\n\t\tcondlog(lvl, \"failed to issue vpd inquiry for pg%02x\",\n\t\t\tpg);\n",
                    "rendered": {
                      "text": "\n\tmemset(buff, 0x0, maxlen);\n\tif (sgio_get_vpd(buff, maxlen, fd, pg) < 0) {\n\t\tint lvl = pg == 0x80 || pg == 0x83 ? 3 : 4;\n\n\t\tcondlog(lvl, \"failed to issue vpd inquiry for pg%02x\",\n\t\t\tpg);\n",
                      "markdown": "`\n\tmemset(buff, 0x0, maxlen);\n\tif (sgio_get_vpd(buff, maxlen, fd, pg) < 0) {\n\t\tint lvl = pg == 0x80 || pg == 0x83 ? 3 : 4;\n\n\t\tcondlog(lvl, \"failed to issue vpd inquiry for pg%02x\",\n\t\t\tpg);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 29,
                  "endLine": 314,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\treturn -EINVAL;\n\t}\n\tif (t > UINT_MAX) {\n\t\tcondlog(3, \"%s: Overflow in timeout value '%s'\",\n\t\t\tpp->dev, attr);\n\t\treturn -ERANGE;\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn -EINVAL;\n\t}\n\tif (t > UINT_MAX) {\n\t\tcondlog(3, \"%s: Overflow in timeout value '%s'\",\n\t\t\tpp->dev, attr);\n\t\treturn -ERANGE;\n\t}\n",
                      "markdown": "`\t\treturn -EINVAL;\n\t}\n\tif (t > UINT_MAX) {\n\t\tcondlog(3, \"%s: Overflow in timeout value '%s'\",\n\t\t\tpp->dev, attr);\n\t\treturn -ERANGE;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 30,
                  "endLine": 309,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n\tt = strtoul(attr, &eptr, 0);\n\tif (attr == eptr || t == ULONG_MAX) {\n\t\tcondlog(3, \"%s: Cannot parse timeout attribute '%s'\",\n\t\t\tpp->dev, attr);\n\t\treturn -EINVAL;\n\t}\n",
                    "rendered": {
                      "text": "\n\tt = strtoul(attr, &eptr, 0);\n\tif (attr == eptr || t == ULONG_MAX) {\n\t\tcondlog(3, \"%s: Cannot parse timeout attribute '%s'\",\n\t\t\tpp->dev, attr);\n\t\treturn -EINVAL;\n\t}\n",
                      "markdown": "`\n\tt = strtoul(attr, &eptr, 0);\n\tif (attr == eptr || t == ULONG_MAX) {\n\t\tcondlog(3, \"%s: Cannot parse timeout attribute '%s'\",\n\t\t\tpp->dev, attr);\n\t\treturn -EINVAL;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/discovery.c"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 20,
                  "endLine": 303,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\tparent = udev_device_get_parent(parent);\n\t}\n\tif (!attr) {\n\t\tcondlog(3, \"%s: No timeout value in sysfs\", pp->dev);\n\t\treturn -ENXIO;\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tparent = udev_device_get_parent(parent);\n\t}\n\tif (!attr) {\n\t\tcondlog(3, \"%s: No timeout value in sysfs\", pp->dev);\n\t\treturn -ENXIO;\n\t}\n\n",
                      "markdown": "`\t\tparent = udev_device_get_parent(parent);\n\t}\n\tif (!attr) {\n\t\tcondlog(3, \"%s: No timeout value in sysfs\", pp->dev);\n\t\treturn -ENXIO;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx.c"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 13,
                  "endLine": 106,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tprintf(\"\\t-a add partition devmappings\\n\");\n\tprintf(\"\\t-r devmappings will be readonly\\n\");\n\tprintf(\"\\t-d del partition devmappings\\n\");\n\tprintf(\"\\t-u update partition devmappings\\n\");\n\tprintf(\"\\t-l list partitions devmappings that would be added by -a\\n\");\n\tprintf(\"\\t-p set device name-partition number delimiter\\n\");\n\tprintf(\"\\t-g force GUID partition table (GPT)\\n\");\n",
                    "rendered": {
                      "text": "\tprintf(\"\\t-a add partition devmappings\\n\");\n\tprintf(\"\\t-r devmappings will be readonly\\n\");\n\tprintf(\"\\t-d del partition devmappings\\n\");\n\tprintf(\"\\t-u update partition devmappings\\n\");\n\tprintf(\"\\t-l list partitions devmappings that would be added by -a\\n\");\n\tprintf(\"\\t-p set device name-partition number delimiter\\n\");\n\tprintf(\"\\t-g force GUID partition table (GPT)\\n\");\n",
                      "markdown": "`\tprintf(\"\\t-a add partition devmappings\\n\");\n\tprintf(\"\\t-r devmappings will be readonly\\n\");\n\tprintf(\"\\t-d del partition devmappings\\n\");\n\tprintf(\"\\t-u update partition devmappings\\n\");\n\tprintf(\"\\t-l list partitions devmappings that would be added by -a\\n\");\n\tprintf(\"\\t-p set device name-partition number delimiter\\n\");\n\tprintf(\"\\t-g force GUID partition table (GPT)\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/kpartx.c"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 32,
                  "endLine": 55,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\nstruct slice slices[MAXSLICES];\n\nenum action { LIST, ADD, DELETE, UPDATE };\n\nstruct pt {\n\tchar *type;\n",
                    "rendered": {
                      "text": "\nstruct slice slices[MAXSLICES];\n\nenum action { LIST, ADD, DELETE, UPDATE };\n\nstruct pt {\n\tchar *type;\n",
                      "markdown": "`\nstruct slice slices[MAXSLICES];\n\nenum action { LIST, ADD, DELETE, UPDATE };\n\nstruct pt {\n\tchar *type;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathc.8"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t multipathd/multipathc.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipathd/multipathc.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATHC 8 2022-09-03 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t multipathd/multipathc.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipathd/multipathc.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATHC 8 2022-09-03 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t multipathd/multipathc.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipathd/multipathc.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATHC 8 2022-09-03 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathc.8"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 50,
                  "endLine": 48,
                  "endColumn": 59,
                  "snippet": {
                    "text": "Depending on build options, the interactive shell\nmay provide command completion and history expansion features.\n.P\nThe optional parameter \\fBtimeout\\fR specifies the timeout to wait for\na reply from \\fBmultipathd\\fR, in milliseconds. The default is 4000 ms.\n.\n.\n",
                    "rendered": {
                      "text": "Depending on build options, the interactive shell\nmay provide command completion and history expansion features.\n.P\nThe optional parameter \\fBtimeout\\fR specifies the timeout to wait for\na reply from \\fBmultipathd\\fR, in milliseconds. The default is 4000 ms.\n.\n.\n",
                      "markdown": "`Depending on build options, the interactive shell\nmay provide command completion and history expansion features.\n.P\nThe optional parameter \\fBtimeout\\fR specifies the timeout to wait for\na reply from \\fBmultipathd\\fR, in milliseconds. The default is 4000 ms.\n.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathc.8"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 26,
                  "snippet": {
                    "text": ".\n.B multipathc \n.RB [\\|\n.IR timeout\n.RB \\|]\n.\n.\n.\\\" ----------------------------------------------------------------------------\n",
                    "rendered": {
                      "text": ".\n.B multipathc \n.RB [\\|\n.IR timeout\n.RB \\|]\n.\n.\n.\\\" ----------------------------------------------------------------------------\n",
                      "markdown": "`.\n.B multipathc \n.RB [\\|\n.IR timeout\n.RB \\|]\n.\n.\n.\\\" ----------------------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/dmevents.c"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 47,
                  "endLine": 219,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t * IOW, don't fail for DM generic errors.\n\t */\n\tif (dm_is_mpath(name) == DM_IS_MPATH_NO) {\n\t\tcondlog(0, \"%s: not a multipath device. can't watch events\",\n\t\t\tname);\n\t\treturn -1;\n\t}\n",
                    "rendered": {
                      "text": "\t * IOW, don't fail for DM generic errors.\n\t */\n\tif (dm_is_mpath(name) == DM_IS_MPATH_NO) {\n\t\tcondlog(0, \"%s: not a multipath device. can't watch events\",\n\t\t\tname);\n\t\treturn -1;\n\t}\n",
                      "markdown": "`\t * IOW, don't fail for DM generic errors.\n\t */\n\tif (dm_is_mpath(name) == DM_IS_MPATH_NO) {\n\t\tcondlog(0, \"%s: not a multipath device. can't watch events\",\n\t\t\tname);\n\t\treturn -1;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_persistent_reserve_out.3"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t libmpathpersist/mpath_persistent_reserve_out.3\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z libmpathpersist/mpath_persistent_reserve_out.3 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATH_PERSISTENT_RESERVE_OUT 3 2024-02-09 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t libmpathpersist/mpath_persistent_reserve_out.3\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z libmpathpersist/mpath_persistent_reserve_out.3 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATH_PERSISTENT_RESERVE_OUT 3 2024-02-09 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t libmpathpersist/mpath_persistent_reserve_out.3\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z libmpathpersist/mpath_persistent_reserve_out.3 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATH_PERSISTENT_RESERVE_OUT 3 2024-02-09 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_persistent_reserve_out.3"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 22,
                  "snippet": {
                    "text": "The file descriptor of a multipath device. Input argument.\n.TP\n.I rq_servact\nPROUT command service action. Input argument.\n.TP\n.I rq_scope\nPersistent reservation scope. The value should be always LU_SCOPE (0h).\n",
                    "rendered": {
                      "text": "The file descriptor of a multipath device. Input argument.\n.TP\n.I rq_servact\nPROUT command service action. Input argument.\n.TP\n.I rq_scope\nPersistent reservation scope. The value should be always LU_SCOPE (0h).\n",
                      "markdown": "`The file descriptor of a multipath device. Input argument.\n.TP\n.I rq_servact\nPROUT command service action. Input argument.\n.TP\n.I rq_scope\nPersistent reservation scope. The value should be always LU_SCOPE (0h).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/man/dmmp_context_timeout_set.3"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 45,
                  "endLine": 17,
                  "endColumn": 54,
                  "snippet": {
                    "text": "0 means infinite, function only return when error or pass.\n.SH \"DESCRIPTION\"\n\nBy default, the IPC to multipathd daemon will timeout after 60 seconds.\n.SH \"RETURN\"\nvoid\n",
                    "rendered": {
                      "text": "0 means infinite, function only return when error or pass.\n.SH \"DESCRIPTION\"\n\nBy default, the IPC to multipathd daemon will timeout after 60 seconds.\n.SH \"RETURN\"\nvoid\n",
                      "markdown": "`0 means infinite, function only return when error or pass.\n.SH \"DESCRIPTION\"\n\nBy default, the IPC to multipathd daemon will timeout after 60 seconds.\n.SH \"RETURN\"\nvoid\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/docs/man/dmmp_context_timeout_set.3"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 12,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": ".IP \"ctx\" 12\nPointer of 'struct dmmp_context'.\nIf this pointer is NULL, your program will be terminated by assert.\n.IP \"tmo\" 12\nTimeout in milliseconds(1 seconds equal 1000 milliseconds).\n0 means infinite, function only return when error or pass.\n.SH \"DESCRIPTION\"\n\n",
                    "rendered": {
                      "text": ".IP \"ctx\" 12\nPointer of 'struct dmmp_context'.\nIf this pointer is NULL, your program will be terminated by assert.\n.IP \"tmo\" 12\nTimeout in milliseconds(1 seconds equal 1000 milliseconds).\n0 means infinite, function only return when error or pass.\n.SH \"DESCRIPTION\"\n\n",
                      "markdown": "`.IP \"ctx\" 12\nPointer of 'struct dmmp_context'.\nIf this pointer is NULL, your program will be terminated by assert.\n.IP \"tmo\" 12\nTimeout in milliseconds(1 seconds equal 1000 milliseconds).\n0 means infinite, function only return when error or pass.\n.SH \"DESCRIPTION\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/Makefile"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 4,
                  "endLine": 82,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\texport KBUILD_BUILD_TIMESTAMP; \\\n\tLC_ALL=C \\\n\tperl docs/kernel-doc -man $$TEMPFILE | \\\n\t    perl docs/split-man.pl docs/man; \\\n\t$(RM) -f $$TEMPFILE\n\ndep_clean:\n",
                    "rendered": {
                      "text": "\texport KBUILD_BUILD_TIMESTAMP; \\\n\tLC_ALL=C \\\n\tperl docs/kernel-doc -man $$TEMPFILE | \\\n\t    perl docs/split-man.pl docs/man; \\\n\t$(RM) -f $$TEMPFILE\n\ndep_clean:\n",
                      "markdown": "`\texport KBUILD_BUILD_TIMESTAMP; \\\n\tLC_ALL=C \\\n\tperl docs/kernel-doc -man $$TEMPFILE | \\\n\t    perl docs/split-man.pl docs/man; \\\n\t$(RM) -f $$TEMPFILE\n\ndep_clean:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/Makefile"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n\tLC_ALL=C \\\n\tperl docs/kernel-doc -man $$TEMPFILE | \\\n\t    perl docs/split-man.pl docs/man; \\\n\t$(RM) -f $$TEMPFILE\n\n",
                    "rendered": {
                      "text": "\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n\tLC_ALL=C \\\n\tperl docs/kernel-doc -man $$TEMPFILE | \\\n\t    perl docs/split-man.pl docs/man; \\\n\t$(RM) -f $$TEMPFILE\n\n",
                      "markdown": "`\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n\tLC_ALL=C \\\n\tperl docs/kernel-doc -man $$TEMPFILE | \\\n\t    perl docs/split-man.pl docs/man; \\\n\t$(RM) -f $$TEMPFILE\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/Makefile"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 9,
                  "endLine": 76,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\ndocs/man/dmmp_strerror.3:\t$(HEADERS)\n\t$(Q)TEMPFILE=$(shell mktemp); \\\n\tcat $^ | perl docs/doc-preclean.pl >$$TEMPFILE; \\\n\t[ \"$KBUILD_BUILD_TIMESTAMP\" ] || \\\n\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n",
                    "rendered": {
                      "text": "\ndocs/man/dmmp_strerror.3:\t$(HEADERS)\n\t$(Q)TEMPFILE=$(shell mktemp); \\\n\tcat $^ | perl docs/doc-preclean.pl >$$TEMPFILE; \\\n\t[ \"$KBUILD_BUILD_TIMESTAMP\" ] || \\\n\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n",
                      "markdown": "`\ndocs/man/dmmp_strerror.3:\t$(HEADERS)\n\t$(Q)TEMPFILE=$(shell mktemp); \\\n\tcat $^ | perl docs/doc-preclean.pl >$$TEMPFILE; \\\n\t[ \"$KBUILD_BUILD_TIMESTAMP\" ] || \\\n\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/Makefile"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ndocs/man/dmmp_strerror.3:\t$(HEADERS)\n\t$(Q)TEMPFILE=$(shell mktemp); \\\n\tcat $^ | perl docs/doc-preclean.pl >$$TEMPFILE; \\\n\t[ \"$KBUILD_BUILD_TIMESTAMP\" ] || \\\n\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n",
                    "rendered": {
                      "text": "\ndocs/man/dmmp_strerror.3:\t$(HEADERS)\n\t$(Q)TEMPFILE=$(shell mktemp); \\\n\tcat $^ | perl docs/doc-preclean.pl >$$TEMPFILE; \\\n\t[ \"$KBUILD_BUILD_TIMESTAMP\" ] || \\\n\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n",
                      "markdown": "`\ndocs/man/dmmp_strerror.3:\t$(HEADERS)\n\t$(Q)TEMPFILE=$(shell mktemp); \\\n\tcat $^ | perl docs/doc-preclean.pl >$$TEMPFILE; \\\n\t[ \"$KBUILD_BUILD_TIMESTAMP\" ] || \\\n\t    KBUILD_BUILD_TIMESTAMP=`git log -n1 --pretty=%cd --date=iso -- $^`; \\\n\texport KBUILD_BUILD_TIMESTAMP; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libdmmp/Makefile"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 32,
                  "snippet": {
                    "text": "# Makefile\n#\n# Copyright (C) 2015 - 2016 Red Hat, Inc.\n# Gris Ge <fge@redhat.com>\n#\ninclude ../Makefile.inc\n",
                    "rendered": {
                      "text": "# Makefile\n#\n# Copyright (C) 2015 - 2016 Red Hat, Inc.\n# Gris Ge <fge@redhat.com>\n#\ninclude ../Makefile.inc\n",
                      "markdown": "`# Makefile\n#\n# Copyright (C) 2015 - 2016 Red Hat, Inc.\n# Gris Ge <fge@redhat.com>\n#\ninclude ../Makefile.inc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 26,
                  "endLine": 584,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tfree_strvec(strvec);\n\t}\n\tif (kw_level == 1)\n\t\tcondlog(1, \"missing '%s' at end of %s\", EOB, file);\nout:\n\tfree(buf);\n\tfree_uniques(uniques);\n",
                    "rendered": {
                      "text": "\t\tfree_strvec(strvec);\n\t}\n\tif (kw_level == 1)\n\t\tcondlog(1, \"missing '%s' at end of %s\", EOB, file);\nout:\n\tfree(buf);\n\tfree_uniques(uniques);\n",
                      "markdown": "`\t\tfree_strvec(strvec);\n\t}\n\tif (kw_level == 1)\n\t\tcondlog(1, \"missing '%s' at end of %s\", EOB, file);\nout:\n\tfree(buf);\n\tfree_uniques(uniques);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 539,
                  "startColumn": 29,
                  "endLine": 539,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\tfree_strvec(strvec);\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t\tcondlog(0, \"unmatched '%s' at line %d of %s\",\n\t\t\t\tEOB, line_nr, file);\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tfree_strvec(strvec);\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t\tcondlog(0, \"unmatched '%s' at line %d of %s\",\n\t\t\t\tEOB, line_nr, file);\n\t\t}\n\n",
                      "markdown": "`\t\t\t\tfree_strvec(strvec);\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t\tcondlog(0, \"unmatched '%s' at line %d of %s\",\n\t\t\t\tEOB, line_nr, file);\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 11,
                  "endLine": 286,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t}\n\n\t\t\tstrlen = cp - start;\n\t\t\ttoken = calloc(1, strlen + 1);\n\n\t\t\tif (!token)\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t}\n\n\t\t\tstrlen = cp - start;\n\t\t\ttoken = calloc(1, strlen + 1);\n\n\t\t\tif (!token)\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t}\n\n\t\t\tstrlen = cp - start;\n\t\t\ttoken = calloc(1, strlen + 1);\n\n\t\t\tif (!token)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 4,
                  "endLine": 281,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tif (in_string && *cp == '\"') {\n\t\t\t\tif (*(cp + 1) == '\"') {\n\t\t\t\t\ttwo_quotes = 1;\n\t\t\t\t\tcp += 2;\n\t\t\t\t\tgoto move_on;\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tif (in_string && *cp == '\"') {\n\t\t\t\tif (*(cp + 1) == '\"') {\n\t\t\t\t\ttwo_quotes = 1;\n\t\t\t\t\tcp += 2;\n\t\t\t\t\tgoto move_on;\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\tif (in_string && *cp == '\"') {\n\t\t\t\tif (*(cp + 1) == '\"') {\n\t\t\t\t\ttwo_quotes = 1;\n\t\t\t\t\tcp += 2;\n\t\t\t\t\tgoto move_on;\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 218,
                  "endLine": 218,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tif (!string)\n\t\treturn NULL;\n\n\tcp = string;\n\n\t/* Skip white spaces */\n\twhile ((isspace((int) *cp) || !isascii((int) *cp)) && *cp != '\\0')\n",
                    "rendered": {
                      "text": "\tif (!string)\n\t\treturn NULL;\n\n\tcp = string;\n\n\t/* Skip white spaces */\n\twhile ((isspace((int) *cp) || !isascii((int) *cp)) && *cp != '\\0')\n",
                      "markdown": "`\tif (!string)\n\t\treturn NULL;\n\n\tcp = string;\n\n\t/* Skip white spaces */\n\twhile ((isspace((int) *cp) || !isascii((int) *cp)) && *cp != '\\0')\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 1,
                  "endLine": 172,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tif (f != fmt &&\n\t\t    (r = append_strbuf_str__(&sbuf, fmt, f - fmt)) < 0)\n\t\t\tgoto out;\n\t\tfmt = f + 1;\n\t\tswitch(*fmt) {\n\t\tcase 'k':\n\t\t\tif ((r = append_strbuf_str(&sbuf, kw->string)) < 0)\n",
                    "rendered": {
                      "text": "\t\tif (f != fmt &&\n\t\t    (r = append_strbuf_str__(&sbuf, fmt, f - fmt)) < 0)\n\t\t\tgoto out;\n\t\tfmt = f + 1;\n\t\tswitch(*fmt) {\n\t\tcase 'k':\n\t\t\tif ((r = append_strbuf_str(&sbuf, kw->string)) < 0)\n",
                      "markdown": "`\t\tif (f != fmt &&\n\t\t    (r = append_strbuf_str__(&sbuf, fmt, f - fmt)) < 0)\n\t\t\tgoto out;\n\t\tfmt = f + 1;\n\t\tswitch(*fmt) {\n\t\tcase 'k':\n\t\t\tif ((r = append_strbuf_str(&sbuf, kw->string)) < 0)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/parser.c"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 10,
                  "endLine": 169,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\tr = append_strbuf_str(&sbuf, fmt);\n\t\t\tgoto out;\n\t\t}\n\t\tif (f != fmt &&\n\t\t    (r = append_strbuf_str__(&sbuf, fmt, f - fmt)) < 0)\n\t\t\tgoto out;\n\t\tfmt = f + 1;\n",
                    "rendered": {
                      "text": "\t\t\tr = append_strbuf_str(&sbuf, fmt);\n\t\t\tgoto out;\n\t\t}\n\t\tif (f != fmt &&\n\t\t    (r = append_strbuf_str__(&sbuf, fmt, f - fmt)) < 0)\n\t\t\tgoto out;\n\t\tfmt = f + 1;\n",
                      "markdown": "`\t\t\tr = append_strbuf_str(&sbuf, fmt);\n\t\t\tgoto out;\n\t\t}\n\t\tif (f != fmt &&\n\t\t    (r = append_strbuf_str__(&sbuf, fmt, f - fmt)) < 0)\n\t\t\tgoto out;\n\t\tfmt = f + 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathutil/debug.h"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 12,
                  "endLine": 30,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\tint __p = (prio);\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n\t\tif (__p <= MAX_VERBOSITY && __p <= libmp_verbosity)\t\\\n\t\t\tdlog(__p, fmt \"\\n\", ##args);\t\t\t\\\n\t} while (0)\n#endif /* DEBUG_H_INCLUDED */\n",
                    "rendered": {
                      "text": "\t\tint __p = (prio);\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n\t\tif (__p <= MAX_VERBOSITY && __p <= libmp_verbosity)\t\\\n\t\t\tdlog(__p, fmt \"\\n\", ##args);\t\t\t\\\n\t} while (0)\n#endif /* DEBUG_H_INCLUDED */\n",
                      "markdown": "`\t\tint __p = (prio);\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\\\n\t\tif (__p <= MAX_VERBOSITY && __p <= libmp_verbosity)\t\\\n\t\t\tdlog(__p, fmt \"\\n\", ##args);\t\t\t\\\n\t} while (0)\n#endif /* DEBUG_H_INCLUDED */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/create-config.mk"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 44,
                  "endLine": 131,
                  "endColumn": 49,
                  "snippet": {
                    "text": "endif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n# $(call TEST_CC_OPTION,option,fallback)\n",
                    "rendered": {
                      "text": "endif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n# $(call TEST_CC_OPTION,option,fallback)\n",
                      "markdown": "`endif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n# $(call TEST_CC_OPTION,option,fallback)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/create-config.mk"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 21,
                  "snippet": {
                    "text": "endif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n# $(call TEST_CC_OPTION,option,fallback)\n",
                    "rendered": {
                      "text": "endif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n# $(call TEST_CC_OPTION,option,fallback)\n",
                      "markdown": "`endif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n# $(call TEST_CC_OPTION,option,fallback)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/create-config.mk"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 83,
                  "endLine": 130,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\tDEFINES += -DNO_DMEVENTS_POLL\nendif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n",
                    "rendered": {
                      "text": "\tDEFINES += -DNO_DMEVENTS_POLL\nendif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n",
                      "markdown": "`\tDEFINES += -DNO_DMEVENTS_POLL\nendif\n\nSYSTEMD := $(strip $(or $(shell $(PKG_CONFIG) --modversion libsystemd 2>/dev/null | awk '{print $$1}'), \\\n\t\t\t$(shell systemctl --version 2>/dev/null | sed -n 's/systemd \\([0-9]*\\).*/\\1/p')))\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/create-config.mk"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 2,
                  "endLine": 78,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nURCU_VERSION = $(shell \\\n\t$(PKG_CONFIG) --modversion liburcu 2>/dev/null | \\\n\t\t\tawk -F. '{ printf(\"-DURCU_VERSION=0x%06x\", 256 * ( 256 * $$1 + $$2) + $$3); }')\n\nDEFINES :=\n\n",
                    "rendered": {
                      "text": "\nURCU_VERSION = $(shell \\\n\t$(PKG_CONFIG) --modversion liburcu 2>/dev/null | \\\n\t\t\tawk -F. '{ printf(\"-DURCU_VERSION=0x%06x\", 256 * ( 256 * $$1 + $$2) + $$3); }')\n\nDEFINES :=\n\n",
                      "markdown": "`\nURCU_VERSION = $(shell \\\n\t$(PKG_CONFIG) --modversion liburcu 2>/dev/null | \\\n\t\t\tawk -F. '{ printf(\"-DURCU_VERSION=0x%06x\", 256 * ( 256 * $$1 + $$2) + $$3); }')\n\nDEFINES :=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/create-config.mk"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 52,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# Check whether a file contains a variable with name $1 in header file $2\ncheck_var = $(shell \\\n\tif grep -Eq \"(^|[[:blank:]])$1([[:blank:]]|=|$$)\" \"$2\"; then \\\n\t\tfound=1; \\\n\t\tstatus=\"yes\"; \\\n\telse \\\n",
                    "rendered": {
                      "text": "\n# Check whether a file contains a variable with name $1 in header file $2\ncheck_var = $(shell \\\n\tif grep -Eq \"(^|[[:blank:]])$1([[:blank:]]|=|$$)\" \"$2\"; then \\\n\t\tfound=1; \\\n\t\tstatus=\"yes\"; \\\n\telse \\\n",
                      "markdown": "`\n# Check whether a file contains a variable with name $1 in header file $2\ncheck_var = $(shell \\\n\tif grep -Eq \"(^|[[:blank:]])$1([[:blank:]]|=|$$)\" \"$2\"; then \\\n\t\tfound=1; \\\n\t\tstatus=\"yes\"; \\\n\telse \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/create-config.mk"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# Check whether a function with name $1 has been declared in header file $2.\ncheck_func = $(shell \\\n\tif grep -Eq \"^(extern[[:blank:]]+)?[^[:blank:]]+[[:blank:]]+$1[[:blank:]]*(.*)*\" \"$2\"; then \\\n\t\tfound=1; \\\n\t\tstatus=\"yes\"; \\\n\telse \\\n",
                    "rendered": {
                      "text": "\n# Check whether a function with name $1 has been declared in header file $2.\ncheck_func = $(shell \\\n\tif grep -Eq \"^(extern[[:blank:]]+)?[^[:blank:]]+[[:blank:]]+$1[[:blank:]]*(.*)*\" \"$2\"; then \\\n\t\tfound=1; \\\n\t\tstatus=\"yes\"; \\\n\telse \\\n",
                      "markdown": "`\n# Check whether a function with name $1 has been declared in header file $2.\ncheck_func = $(shell \\\n\tif grep -Eq \"^(extern[[:blank:]]+)?[^[:blank:]]+[[:blank:]]+$1[[:blank:]]*(.*)*\" \"$2\"; then \\\n\t\tfound=1; \\\n\t\tstatus=\"yes\"; \\\n\telse \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/uevent.c"
                },
                "region": {
                  "startLine": 585,
                  "startColumn": 28,
                  "endLine": 585,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\tservice_uevq(&filter_state.uevq);\n\t}\n\tpthread_cleanup_pop(1);\n\tcondlog(3, \"Terminating uev service queue\");\n\treturn 0;\n}\n\n",
                    "rendered": {
                      "text": "\t\tservice_uevq(&filter_state.uevq);\n\t}\n\tpthread_cleanup_pop(1);\n\tcondlog(3, \"Terminating uev service queue\");\n\treturn 0;\n}\n\n",
                      "markdown": "`\t\tservice_uevq(&filter_state.uevq);\n\t}\n\tpthread_cleanup_pop(1);\n\tcondlog(3, \"Terminating uev service queue\");\n\treturn 0;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/vpd.c"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 67,
                  "snippet": {
                    "text": "/* vendor_id should have less than 8 chars to test space handling */\nstatic const char vendor_id[] = \"Linux\";\nstatic const char test_id[] =\n\t\"A123456789AbcDefB123456789AbcDefC123456789AbcDefD123456789AbcDef\";\n\nint WRAP_IOCTL(int fd, unsigned long request, void *param)\n{\n",
                    "rendered": {
                      "text": "/* vendor_id should have less than 8 chars to test space handling */\nstatic const char vendor_id[] = \"Linux\";\nstatic const char test_id[] =\n\t\"A123456789AbcDefB123456789AbcDefC123456789AbcDefD123456789AbcDef\";\n\nint WRAP_IOCTL(int fd, unsigned long request, void *param)\n{\n",
                      "markdown": "`/* vendor_id should have less than 8 chars to test space handling */\nstatic const char vendor_id[] = \"Linux\";\nstatic const char test_id[] =\n\t\"A123456789AbcDefB123456789AbcDefC123456789AbcDefD123456789AbcDef\";\n\nint WRAP_IOCTL(int fd, unsigned long request, void *param)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/vpd.c"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 126,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tassert_true(srclen % 2 == 0);\n\tfor (sc = src, ds = dst;\n\t     sc < src + srclen &&  ds < dst + dstlen;\n\t     sc += 2, ++ds)\n\t\t*ds = 16 * _hex2bin(sc[0]) + _hex2bin(sc[1]);\n}\n\n",
                    "rendered": {
                      "text": "\tassert_true(srclen % 2 == 0);\n\tfor (sc = src, ds = dst;\n\t     sc < src + srclen &&  ds < dst + dstlen;\n\t     sc += 2, ++ds)\n\t\t*ds = 16 * _hex2bin(sc[0]) + _hex2bin(sc[1]);\n}\n\n",
                      "markdown": "`\tassert_true(srclen % 2 == 0);\n\tfor (sc = src, ds = dst;\n\t     sc < src + srclen &&  ds < dst + dstlen;\n\t     sc += 2, ++ds)\n\t\t*ds = 16 * _hex2bin(sc[0]) + _hex2bin(sc[1]);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/tests/vpd.c"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 5,
                  "endLine": 125,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\tassert_true(srclen % 2 == 0);\n\tfor (sc = src, ds = dst;\n\t     sc < src + srclen &&  ds < dst + dstlen;\n\t     sc += 2, ++ds)\n\t\t*ds = 16 * _hex2bin(sc[0]) + _hex2bin(sc[1]);\n}\n",
                    "rendered": {
                      "text": "\n\tassert_true(srclen % 2 == 0);\n\tfor (sc = src, ds = dst;\n\t     sc < src + srclen &&  ds < dst + dstlen;\n\t     sc += 2, ++ds)\n\t\t*ds = 16 * _hex2bin(sc[0]) + _hex2bin(sc[1]);\n}\n",
                      "markdown": "`\n\tassert_true(srclen % 2 == 0);\n\tfor (sc = src, ds = dst;\n\t     sc < src + srclen &&  ds < dst + dstlen;\n\t     sc += 2, ++ds)\n\t\t*ds = 16 * _hex2bin(sc[0]) + _hex2bin(sc[1]);\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 50,
                  "endLine": 432,
                  "endColumn": 54,
                  "snippet": {
                    "text": ".TP\n.B %A\nThe last action multipathd took on the device. This wildcard is for debugging\nuse, as understanding its meaning requires looking at the code.\n.TP\n.B %0\nThe number of times a path in the device has failed.\n",
                    "rendered": {
                      "text": ".TP\n.B %A\nThe last action multipathd took on the device. This wildcard is for debugging\nuse, as understanding its meaning requires looking at the code.\n.TP\n.B %0\nThe number of times a path in the device has failed.\n",
                      "markdown": "`.TP\n.B %A\nThe last action multipathd took on the device. This wildcard is for debugging\nuse, as understanding its meaning requires looking at the code.\n.TP\n.B %0\nThe number of times a path in the device has failed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 12,
                  "endLine": 249,
                  "endColumn": 16,
                  "snippet": {
                    "text": ".TP\n.B reconfigure\nRereads the configuration, and reloads all changed multipath devices. This\nalso happens at startup, when the service is reload, or when a SIGHUP is\nreceived.\n.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.B reconfigure\nRereads the configuration, and reloads all changed multipath devices. This\nalso happens at startup, when the service is reload, or when a SIGHUP is\nreceived.\n.\n.TP\n",
                      "markdown": "`.TP\n.B reconfigure\nRereads the configuration, and reloads all changed multipath devices. This\nalso happens at startup, when the service is reload, or when a SIGHUP is\nreceived.\n.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 24,
                  "endLine": 93,
                  "endColumn": 33,
                  "snippet": {
                    "text": ".TP\n.B \\-n\n\\fBIGNORED\\fR. Use the option\n\\fIfind_multipaths\\fR to control the treatment of newly detected devices by\nmultipathd. See\n.BR multipath.conf(5).\n.\n",
                    "rendered": {
                      "text": ".TP\n.B \\-n\n\\fBIGNORED\\fR. Use the option\n\\fIfind_multipaths\\fR to control the treatment of newly detected devices by\nmultipathd. See\n.BR multipath.conf(5).\n.\n",
                      "markdown": "`.TP\n.B \\-n\n\\fBIGNORED\\fR. Use the option\n\\fIfind_multipaths\\fR to control the treatment of newly detected devices by\nmultipathd. See\n.BR multipath.conf(5).\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t multipathd/multipathd.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipathd/multipathd.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATHD 8 2024-05-29 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t multipathd/multipathd.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipathd/multipathd.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATHD 8 2024-05-29 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t multipathd/multipathd.8\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipathd/multipathd.8 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATHD 8 2024-05-29 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 625,
                  "startColumn": 23,
                  "endLine": 625,
                  "endColumn": 32,
                  "snippet": {
                    "text": ".\nWhen compiled with systemd support two systemd service files are installed,\n\\fImultipathd.service\\fR and \\fImultipathd.socket\\fR. If enabled, the\n\\fImultipathd.socket\\fR service instructs systemd to intercept the CLI command\nsocket, so that any call to the CLI interface will start-up the daemon if\nrequired. The \\fImultipathd.service\\fR file carries the definitions for\ncontrolling the multipath daemon. The daemon itself uses the \\fBsd_notify\\fR(3)\n",
                    "rendered": {
                      "text": ".\nWhen compiled with systemd support two systemd service files are installed,\n\\fImultipathd.service\\fR and \\fImultipathd.socket\\fR. If enabled, the\n\\fImultipathd.socket\\fR service instructs systemd to intercept the CLI command\nsocket, so that any call to the CLI interface will start-up the daemon if\nrequired. The \\fImultipathd.service\\fR file carries the definitions for\ncontrolling the multipath daemon. The daemon itself uses the \\fBsd_notify\\fR(3)\n",
                      "markdown": "`.\nWhen compiled with systemd support two systemd service files are installed,\n\\fImultipathd.service\\fR and \\fImultipathd.socket\\fR. If enabled, the\n\\fImultipathd.socket\\fR service instructs systemd to intercept the CLI command\nsocket, so that any call to the CLI interface will start-up the daemon if\nrequired. The \\fImultipathd.service\\fR file carries the definitions for\ncontrolling the multipath daemon. The daemon itself uses the \\fBsd_notify\\fR(3)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 46,
                  "endLine": 623,
                  "endColumn": 55,
                  "snippet": {
                    "text": ".SH \"SYSTEMD INTEGRATION\"\n.\\\" ----------------------------------------------------------------------------\n.\nWhen compiled with systemd support two systemd service files are installed,\n\\fImultipathd.service\\fR and \\fImultipathd.socket\\fR. If enabled, the\n\\fImultipathd.socket\\fR service instructs systemd to intercept the CLI command\nsocket, so that any call to the CLI interface will start-up the daemon if\n",
                    "rendered": {
                      "text": ".SH \"SYSTEMD INTEGRATION\"\n.\\\" ----------------------------------------------------------------------------\n.\nWhen compiled with systemd support two systemd service files are installed,\n\\fImultipathd.service\\fR and \\fImultipathd.socket\\fR. If enabled, the\n\\fImultipathd.socket\\fR service instructs systemd to intercept the CLI command\nsocket, so that any call to the CLI interface will start-up the daemon if\n",
                      "markdown": "`.SH \"SYSTEMD INTEGRATION\"\n.\\\" ----------------------------------------------------------------------------\n.\nWhen compiled with systemd support two systemd service files are installed,\n\\fImultipathd.service\\fR and \\fImultipathd.socket\\fR. If enabled, the\n\\fImultipathd.socket\\fR service instructs systemd to intercept the CLI command\nsocket, so that any call to the CLI interface will start-up the daemon if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 21,
                  "endLine": 574,
                  "endColumn": 27,
                  "snippet": {
                    "text": "The host World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %n\nThe target World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %R\nThe host World Wide Port Name (WWPN) of the device, if any.\n",
                    "rendered": {
                      "text": "The host World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %n\nThe target World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %R\nThe host World Wide Port Name (WWPN) of the device, if any.\n",
                      "markdown": "`The host World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %n\nThe target World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %R\nThe host World Wide Port Name (WWPN) of the device, if any.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 571,
                  "startColumn": 19,
                  "endLine": 571,
                  "endColumn": 25,
                  "snippet": {
                    "text": "it is not part of any multipath device.\n.TP\n.B %N\nThe host World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %n\nThe target World Wide Node Name (WWNN) of the device, if any.\n",
                    "rendered": {
                      "text": "it is not part of any multipath device.\n.TP\n.B %N\nThe host World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %n\nThe target World Wide Node Name (WWNN) of the device, if any.\n",
                      "markdown": "`it is not part of any multipath device.\n.TP\n.B %N\nThe host World Wide Node Name (WWNN) of the device, if any.\n.TP\n.B %n\nThe target World Wide Node Name (WWNN) of the device, if any.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 6,
                  "endLine": 532,
                  "snippet": {
                    "text": ".I i/o pending\nThe checker is in the process of determining the device state.\n.TP\n.I i/o timeout\nThe path checker has timed out, failing the device.\n.TP\n.I delayed\nThe device appears usable, but it being delayed for marginal path checking.\n",
                    "rendered": {
                      "text": ".I i/o pending\nThe checker is in the process of determining the device state.\n.TP\n.I i/o timeout\nThe path checker has timed out, failing the device.\n.TP\n.I delayed\nThe device appears usable, but it being delayed for marginal path checking.\n",
                      "markdown": "`.I i/o pending\nThe checker is in the process of determining the device state.\n.TP\n.I i/o timeout\nThe path checker has timed out, failing the device.\n.TP\n.I delayed\nThe device appears usable, but it being delayed for marginal path checking.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 22,
                  "endLine": 394,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".TP\n.B %F\nThe device \\fBfailback\\fR setting. For deferred failbacks, it will either\ninclude the configured time if a deferred failback is not in progress, or\nit will show the current progress of a deferred failback in seconds.\n.TP\n.B %Q\n",
                    "rendered": {
                      "text": ".TP\n.B %F\nThe device \\fBfailback\\fR setting. For deferred failbacks, it will either\ninclude the configured time if a deferred failback is not in progress, or\nit will show the current progress of a deferred failback in seconds.\n.TP\n.B %Q\n",
                      "markdown": "`.TP\n.B %F\nThe device \\fBfailback\\fR setting. For deferred failbacks, it will either\ninclude the configured time if a deferred failback is not in progress, or\nit will show the current progress of a deferred failback in seconds.\n.TP\n.B %Q\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.8.in"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 33,
                  "endLine": 249,
                  "endColumn": 42,
                  "snippet": {
                    "text": ".TP\n.B reconfigure\nRereads the configuration, and reloads all changed multipath devices. This\nalso happens at startup, when the service is reload, or when a SIGHUP is\nreceived.\n.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.B reconfigure\nRereads the configuration, and reloads all changed multipath devices. This\nalso happens at startup, when the service is reload, or when a SIGHUP is\nreceived.\n.\n.TP\n",
                      "markdown": "`.TP\n.B reconfigure\nRereads the configuration, and reloads all changed multipath devices. This\nalso happens at startup, when the service is reload, or when a SIGHUP is\nreceived.\n.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/pidfile.c"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 7,
                  "endLine": 16,
                  "endColumn": 14,
                  "snippet": {
                    "text": "int pidfile_create(const char *pidFile, pid_t pid)\n{\n\tchar buf[20];\n\tstruct flock lock;\n\tint fd, value;\n\n\tif((fd = open(pidFile, O_WRONLY | O_CREAT,\n",
                    "rendered": {
                      "text": "int pidfile_create(const char *pidFile, pid_t pid)\n{\n\tchar buf[20];\n\tstruct flock lock;\n\tint fd, value;\n\n\tif((fd = open(pidFile, O_WRONLY | O_CREAT,\n",
                      "markdown": "`int pidfile_create(const char *pidFile, pid_t pid)\n{\n\tchar buf[20];\n\tstruct flock lock;\n\tint fd, value;\n\n\tif((fd = open(pidFile, O_WRONLY | O_CREAT,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/fpin_handlers.c"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 16,
                  "endLine": 444,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tels_cmd = (uint32_t)fc_event->event_data;\n\ttlv = (struct fc_tlv_desc *)&fpin->fpin_desc[0];\n\tdtag = be32_to_cpu(tlv->desc_tag);\n\tcondlog(4, \"Got CMD in add as 0x%x fpin_cmd 0x%x dtag 0x%x\\n\",\n\t\t\tels_cmd, fpin->fpin_cmd, dtag);\n\n\tif ((fc_event->event_code == FCH_EVT_LINK_FPIN) ||\n",
                    "rendered": {
                      "text": "\tels_cmd = (uint32_t)fc_event->event_data;\n\ttlv = (struct fc_tlv_desc *)&fpin->fpin_desc[0];\n\tdtag = be32_to_cpu(tlv->desc_tag);\n\tcondlog(4, \"Got CMD in add as 0x%x fpin_cmd 0x%x dtag 0x%x\\n\",\n\t\t\tels_cmd, fpin->fpin_cmd, dtag);\n\n\tif ((fc_event->event_code == FCH_EVT_LINK_FPIN) ||\n",
                      "markdown": "`\tels_cmd = (uint32_t)fc_event->event_data;\n\ttlv = (struct fc_tlv_desc *)&fpin->fpin_desc[0];\n\tdtag = be32_to_cpu(tlv->desc_tag);\n\tcondlog(4, \"Got CMD in add as 0x%x fpin_cmd 0x%x dtag 0x%x\\n\",\n\t\t\tels_cmd, fpin->fpin_cmd, dtag);\n\n\tif ((fc_event->event_code == FCH_EVT_LINK_FPIN) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/fpin_handlers.c"
                },
                "region": {
                  "startLine": 422,
                  "startColumn": 23,
                  "endLine": 422,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t */\n\tcount = fpin_parse_li_els_setpath_marginal(host_num, tlv, vecs);\n\tif (count <= 0)\n\t\tcondlog(4, \"Could not find any WWNs, ret = %d\\n\",\n\t\t\t\t\tcount);\n\treturn count;\n}\n",
                    "rendered": {
                      "text": "\t */\n\tcount = fpin_parse_li_els_setpath_marginal(host_num, tlv, vecs);\n\tif (count <= 0)\n\t\tcondlog(4, \"Could not find any WWNs, ret = %d\\n\",\n\t\t\t\t\tcount);\n\treturn count;\n}\n",
                      "markdown": "`\t */\n\tcount = fpin_parse_li_els_setpath_marginal(host_num, tlv, vecs);\n\tif (count <= 0)\n\t\tcondlog(4, \"Could not find any WWNs, ret = %d\\n\",\n\t\t\t\t\tcount);\n\treturn count;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.socket"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 22,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "[Unit]\nDescription=multipathd control socket\nDefaultDependencies=no\nConditionKernelCommandLine=!nompath\nConditionKernelCommandLine=!multipath=off\n",
                    "rendered": {
                      "text": "[Unit]\nDescription=multipathd control socket\nDefaultDependencies=no\nConditionKernelCommandLine=!nompath\nConditionKernelCommandLine=!multipath=off\n",
                      "markdown": "`[Unit]\nDescription=multipathd control socket\nDefaultDependencies=no\nConditionKernelCommandLine=!nompath\nConditionKernelCommandLine=!multipath=off\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipathd/multipathd.socket"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 25,
                  "endLine": 14,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n[Install]\n# Socket activation for multipathd is disabled by default.\n# Activate it here if you find it useful.\n# WantedBy=sockets.target\n",
                    "rendered": {
                      "text": "\n[Install]\n# Socket activation for multipathd is disabled by default.\n# Activate it here if you find it useful.\n# WantedBy=sockets.target\n",
                      "markdown": "`\n[Install]\n# Socket activation for multipathd is disabled by default.\n# Activate it here if you find it useful.\n# WantedBy=sockets.target\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_persistent_reserve_in.3"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t libmpathpersist/mpath_persistent_reserve_in.3\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z libmpathpersist/mpath_persistent_reserve_in.3 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATH_PERSISTENT_RESERVE_IN 3 2024-02-09 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t libmpathpersist/mpath_persistent_reserve_in.3\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z libmpathpersist/mpath_persistent_reserve_in.3 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATH_PERSISTENT_RESERVE_IN 3 2024-02-09 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t libmpathpersist/mpath_persistent_reserve_in.3\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z libmpathpersist/mpath_persistent_reserve_in.3 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MPATH_PERSISTENT_RESERVE_IN 3 2024-02-09 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_persistent_reserve_in.3"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 22,
                  "endLine": 46,
                  "endColumn": 31,
                  "snippet": {
                    "text": "PRIN command service action. Input argument.\n.TP\n.I resp\nThe response from PRIN service action. The caller should manage the memory allocation of this structure.\n.TP\n.I noisy\nTurn on debugging trace: Input argument. 0->Disable, 1->Enable.\n",
                    "rendered": {
                      "text": "PRIN command service action. Input argument.\n.TP\n.I resp\nThe response from PRIN service action. The caller should manage the memory allocation of this structure.\n.TP\n.I noisy\nTurn on debugging trace: Input argument. 0->Disable, 1->Enable.\n",
                      "markdown": "`PRIN command service action. Input argument.\n.TP\n.I resp\nThe response from PRIN service action. The caller should manage the memory allocation of this structure.\n.TP\n.I noisy\nTurn on debugging trace: Input argument. 0->Disable, 1->Enable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_persistent_reserve_in.3"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 12,
                  "endLine": 43,
                  "endColumn": 21,
                  "snippet": {
                    "text": "The file descriptor of a multipath device. Input argument.\n.TP\n.I rq_servact\nPRIN command service action. Input argument.\n.TP\n.I resp\nThe response from PRIN service action. The caller should manage the memory allocation of this structure.\n",
                    "rendered": {
                      "text": "The file descriptor of a multipath device. Input argument.\n.TP\n.I rq_servact\nPRIN command service action. Input argument.\n.TP\n.I resp\nThe response from PRIN service action. The caller should manage the memory allocation of this structure.\n",
                      "markdown": "`The file descriptor of a multipath device. Input argument.\n.TP\n.I rq_servact\nPRIN command service action. Input argument.\n.TP\n.I resp\nThe response from PRIN service action. The caller should manage the memory allocation of this structure.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/spelling.yml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 30,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#   Tells the action to support and generate messages that enable it\n#   to make a commit to update the spelling metadata.\n#\n# `with.ssh_key`\n#   In order to trigger workflows when the commit is made, you can provide a\n#   secret (typically, a write-enabled github deploy key).\n#\n",
                    "rendered": {
                      "text": "#   Tells the action to support and generate messages that enable it\n#   to make a commit to update the spelling metadata.\n#\n# `with.ssh_key`\n#   In order to trigger workflows when the commit is made, you can provide a\n#   secret (typically, a write-enabled github deploy key).\n#\n",
                      "markdown": "`#   Tells the action to support and generate messages that enable it\n#   to make a commit to update the spelling metadata.\n#\n# `with.ssh_key`\n#   In order to trigger workflows when the commit is made, you can provide a\n#   secret (typically, a write-enabled github deploy key).\n#\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/spelling.yml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 9,
                  "endLine": 160,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        experimental_apply_changes_via_bot: 1\n\n  update:\n    name: Update PR\n    permissions:\n      contents: write\n      pull-requests: write\n",
                    "rendered": {
                      "text": "        experimental_apply_changes_via_bot: 1\n\n  update:\n    name: Update PR\n    permissions:\n      contents: write\n      pull-requests: write\n",
                      "markdown": "`        experimental_apply_changes_via_bot: 1\n\n  update:\n    name: Update PR\n    permissions:\n      contents: write\n      pull-requests: write\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/spelling.yml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 23,
                  "endLine": 28,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# `with.experimental_apply_changes_via_bot`\n#   Tells the action to support and generate messages that enable it\n#   to make a commit to update the spelling metadata.\n#\n# `with.ssh_key`\n#   In order to trigger workflows when the commit is made, you can provide a\n",
                    "rendered": {
                      "text": "#\n# `with.experimental_apply_changes_via_bot`\n#   Tells the action to support and generate messages that enable it\n#   to make a commit to update the spelling metadata.\n#\n# `with.ssh_key`\n#   In order to trigger workflows when the commit is made, you can provide a\n",
                      "markdown": "`#\n# `with.experimental_apply_changes_via_bot`\n#   Tells the action to support and generate messages that enable it\n#   to make a commit to update the spelling metadata.\n#\n# `with.ssh_key`\n#   In order to trigger workflows when the commit is made, you can provide a\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/spelling.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 6,
                  "endLine": 24,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#\n# `jobs.update`\n#   This job runs in response to an issue_comment and will push a new commit\n#   to update the spelling metadata.\n#\n# `with.experimental_apply_changes_via_bot`\n#   Tells the action to support and generate messages that enable it\n",
                    "rendered": {
                      "text": "#\n# `jobs.update`\n#   This job runs in response to an issue_comment and will push a new commit\n#   to update the spelling metadata.\n#\n# `with.experimental_apply_changes_via_bot`\n#   Tells the action to support and generate messages that enable it\n",
                      "markdown": "`#\n# `jobs.update`\n#   This job runs in response to an issue_comment and will push a new commit\n#   to update the spelling metadata.\n#\n# `with.experimental_apply_changes_via_bot`\n#   Tells the action to support and generate messages that enable it\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/spelling.yml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 53,
                  "endLine": 20,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# These elements work together to make it happen:\n#\n# `on.issue_comment`\n#   This event listens to comments by users asking to update the metadata.\n#\n# `jobs.update`\n#   This job runs in response to an issue_comment and will push a new commit\n",
                    "rendered": {
                      "text": "# These elements work together to make it happen:\n#\n# `on.issue_comment`\n#   This event listens to comments by users asking to update the metadata.\n#\n# `jobs.update`\n#   This job runs in response to an issue_comment and will push a new commit\n",
                      "markdown": "`# These elements work together to make it happen:\n#\n# `on.issue_comment`\n#   This event listens to comments by users asking to update the metadata.\n#\n# `jobs.update`\n#   This job runs in response to an issue_comment and will push a new commit\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.github/workflows/spelling.yml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 45,
                  "endLine": 58,
                  "snippet": {
                    "text": "#   spelling:\n#     # remove `security-events: write` and `use_sarif: 1`\n#     # remove `experimental_apply_changes_via_bot: 1`\n#     ... otherwise adjust the `with:` as you wish\n\non:\n  push:\n    branches:\n",
                    "rendered": {
                      "text": "#   spelling:\n#     # remove `security-events: write` and `use_sarif: 1`\n#     # remove `experimental_apply_changes_via_bot: 1`\n#     ... otherwise adjust the `with:` as you wish\n\non:\n  push:\n    branches:\n",
                      "markdown": "`#   spelling:\n#     # remove `security-events: write` and `use_sarif: 1`\n#     # remove `experimental_apply_changes_via_bot: 1`\n#     ... otherwise adjust the `with:` as you wish\n\non:\n  push:\n    branches:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 1007,
                  "startColumn": 30,
                  "endLine": 1007,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\tconf->force_sync = 1;\n\t}\n\n\tif ((cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG) && enable_foreign)\n\t\tconf->enable_foreign = strdup(\"\");\n\n\tif (cmd == CMD_USABLE_PATHS) {\n",
                    "rendered": {
                      "text": "\t\tconf->force_sync = 1;\n\t}\n\n\tif ((cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG) && enable_foreign)\n\t\tconf->enable_foreign = strdup(\"\");\n\n\tif (cmd == CMD_USABLE_PATHS) {\n",
                      "markdown": "`\t\tconf->force_sync = 1;\n\t}\n\n\tif ((cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG) && enable_foreign)\n\t\tconf->enable_foreign = strdup(\"\");\n\n\tif (cmd == CMD_USABLE_PATHS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 949,
                  "startColumn": 2,
                  "endLine": 949,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tcmd = CMD_RESET_WWIDS;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tcmd = CMD_ADD_WWID;\n\t\t\tbreak;\n\t\tcase 'R':\n\t\t\tconf->remove_retries = atoi(optarg);\n",
                    "rendered": {
                      "text": "\t\t\tcmd = CMD_RESET_WWIDS;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tcmd = CMD_ADD_WWID;\n\t\t\tbreak;\n\t\tcase 'R':\n\t\t\tconf->remove_retries = atoi(optarg);\n",
                      "markdown": "`\t\t\tcmd = CMD_RESET_WWIDS;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tcmd = CMD_ADD_WWID;\n\t\t\tbreak;\n\t\tcase 'R':\n\t\t\tconf->remove_retries = atoi(optarg);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 946,
                  "startColumn": 2,
                  "endLine": 946,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tcmd = CMD_REMOVE_WWID;\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\tcmd = CMD_RESET_WWIDS;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tcmd = CMD_ADD_WWID;\n",
                    "rendered": {
                      "text": "\t\t\tcmd = CMD_REMOVE_WWID;\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\tcmd = CMD_RESET_WWIDS;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tcmd = CMD_ADD_WWID;\n",
                      "markdown": "`\t\t\tcmd = CMD_REMOVE_WWID;\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\tcmd = CMD_RESET_WWIDS;\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\tcmd = CMD_ADD_WWID;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 943,
                  "startColumn": 2,
                  "endLine": 943,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'w':\n\t\t\tcmd = CMD_REMOVE_WWID;\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\tcmd = CMD_RESET_WWIDS;\n",
                    "rendered": {
                      "text": "\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'w':\n\t\t\tcmd = CMD_REMOVE_WWID;\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\tcmd = CMD_RESET_WWIDS;\n",
                      "markdown": "`\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'w':\n\t\t\tcmd = CMD_REMOVE_WWID;\n\t\t\tbreak;\n\t\tcase 'W':\n\t\t\tcmd = CMD_RESET_WWIDS;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 939,
                  "startColumn": 2,
                  "endLine": 939,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tcmd = CMD_USABLE_PATHS;\n\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'w':\n",
                    "rendered": {
                      "text": "\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tcmd = CMD_USABLE_PATHS;\n\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'w':\n",
                      "markdown": "`\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tcmd = CMD_USABLE_PATHS;\n\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'w':\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 2,
                  "endLine": 935,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tusage(argv[0]);\n\t\t\texit(RTVL_OK);\n\t\tcase 'u':\n\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'U':\n",
                    "rendered": {
                      "text": "\t\t\tusage(argv[0]);\n\t\t\texit(RTVL_OK);\n\t\tcase 'u':\n\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'U':\n",
                      "markdown": "`\t\t\tusage(argv[0]);\n\t\t\texit(RTVL_OK);\n\t\tcase 'u':\n\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tdev_type = DEV_UEVENT;\n\t\t\tbreak;\n\t\tcase 'U':\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 929,
                  "startColumn": 2,
                  "endLine": 929,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tr = dump_config(conf, NULL, NULL) ? RTVL_FAIL : RTVL_OK;\n\t\t\tgoto out;\n\t\tcase 'T':\n\t\t\tcmd = CMD_DUMP_CONFIG;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tusage(argv[0]);\n",
                    "rendered": {
                      "text": "\t\t\tr = dump_config(conf, NULL, NULL) ? RTVL_FAIL : RTVL_OK;\n\t\t\tgoto out;\n\t\tcase 'T':\n\t\t\tcmd = CMD_DUMP_CONFIG;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tusage(argv[0]);\n",
                      "markdown": "`\t\t\tr = dump_config(conf, NULL, NULL) ? RTVL_FAIL : RTVL_OK;\n\t\t\tgoto out;\n\t\tcase 'T':\n\t\t\tcmd = CMD_DUMP_CONFIG;\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\tusage(argv[0]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 902,
                  "startColumn": 3,
                  "endLine": 902,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n\t\t\t\tcmd = CMD_LIST_LONG;\n\t\t\telse\n\t\t\t\tcmd = CMD_LIST_SHORT;\n\n\t\t\tbreak;\n\t\tcase 'M':\n",
                    "rendered": {
                      "text": "\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n\t\t\t\tcmd = CMD_LIST_LONG;\n\t\t\telse\n\t\t\t\tcmd = CMD_LIST_SHORT;\n\n\t\t\tbreak;\n\t\tcase 'M':\n",
                      "markdown": "`\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n\t\t\t\tcmd = CMD_LIST_LONG;\n\t\t\telse\n\t\t\t\tcmd = CMD_LIST_SHORT;\n\n\t\t\tbreak;\n\t\tcase 'M':\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 900,
                  "startColumn": 3,
                  "endLine": 900,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\tcase 'l':\n\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n\t\t\t\tcmd = CMD_LIST_LONG;\n\t\t\telse\n\t\t\t\tcmd = CMD_LIST_SHORT;\n\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\tcase 'l':\n\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n\t\t\t\tcmd = CMD_LIST_LONG;\n\t\t\telse\n\t\t\t\tcmd = CMD_LIST_SHORT;\n\n",
                      "markdown": "`\t\t\tbreak;\n\t\tcase 'l':\n\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n\t\t\t\tcmd = CMD_LIST_LONG;\n\t\t\telse\n\t\t\t\tcmd = CMD_LIST_SHORT;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 896,
                  "startColumn": 2,
                  "endLine": 896,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tcmd = CMD_FLUSH_ONE;\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tcmd = CMD_FLUSH_ALL;\n\t\t\tbreak;\n\t\tcase 'l':\n\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n",
                    "rendered": {
                      "text": "\t\t\tcmd = CMD_FLUSH_ONE;\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tcmd = CMD_FLUSH_ALL;\n\t\t\tbreak;\n\t\tcase 'l':\n\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n",
                      "markdown": "`\t\t\tcmd = CMD_FLUSH_ONE;\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tcmd = CMD_FLUSH_ALL;\n\t\t\tbreak;\n\t\tcase 'l':\n\t\t\tif (optarg && !strncmp(optarg, \"l\", 1))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 2,
                  "endLine": 893,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tconf->skip_delegate = 1;\n\t\t\tbreak;\n\t\tcase 'f':\n\t\t\tcmd = CMD_FLUSH_ONE;\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tcmd = CMD_FLUSH_ALL;\n",
                    "rendered": {
                      "text": "\t\t\tconf->skip_delegate = 1;\n\t\t\tbreak;\n\t\tcase 'f':\n\t\t\tcmd = CMD_FLUSH_ONE;\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tcmd = CMD_FLUSH_ALL;\n",
                      "markdown": "`\t\t\tconf->skip_delegate = 1;\n\t\t\tbreak;\n\t\tcase 'f':\n\t\t\tcmd = CMD_FLUSH_ONE;\n\t\t\tbreak;\n\t\tcase 'F':\n\t\t\tcmd = CMD_FLUSH_ALL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 3,
                  "endLine": 887,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tbreak;\n\t\tcase 'd':\n\t\t\tif (cmd == CMD_CREATE)\n\t\t\t\tcmd = CMD_DRY_RUN;\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tconf->skip_delegate = 1;\n",
                    "rendered": {
                      "text": "\t\t\tbreak;\n\t\tcase 'd':\n\t\t\tif (cmd == CMD_CREATE)\n\t\t\t\tcmd = CMD_DRY_RUN;\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tconf->skip_delegate = 1;\n",
                      "markdown": "`\t\t\tbreak;\n\t\tcase 'd':\n\t\t\tif (cmd == CMD_CREATE)\n\t\t\t\tcmd = CMD_DRY_RUN;\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tconf->skip_delegate = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 883,
                  "startColumn": 2,
                  "endLine": 883,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tbreak;\n\t\tcase 'C':\n\t\t\tcmd = CMD_USABLE_PATHS;\n\t\t\tbreak;\n\t\tcase 'd':\n\t\t\tif (cmd == CMD_CREATE)\n",
                    "rendered": {
                      "text": "\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tbreak;\n\t\tcase 'C':\n\t\t\tcmd = CMD_USABLE_PATHS;\n\t\t\tbreak;\n\t\tcase 'd':\n\t\t\tif (cmd == CMD_CREATE)\n",
                      "markdown": "`\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tbreak;\n\t\tcase 'C':\n\t\t\tcmd = CMD_USABLE_PATHS;\n\t\t\tbreak;\n\t\tcase 'd':\n\t\t\tif (cmd == CMD_CREATE)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 2,
                  "endLine": 880,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tconf->allow_queueing = 1;\n\t\t\tbreak;\n\t\tcase 'c':\n\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tbreak;\n\t\tcase 'C':\n\t\t\tcmd = CMD_USABLE_PATHS;\n",
                    "rendered": {
                      "text": "\t\t\tconf->allow_queueing = 1;\n\t\t\tbreak;\n\t\tcase 'c':\n\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tbreak;\n\t\tcase 'C':\n\t\t\tcmd = CMD_USABLE_PATHS;\n",
                      "markdown": "`\t\t\tconf->allow_queueing = 1;\n\t\t\tbreak;\n\t\tcase 'c':\n\t\t\tcmd = CMD_VALID_PATH;\n\t\t\tbreak;\n\t\tcase 'C':\n\t\t\tcmd = CMD_USABLE_PATHS;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 841,
                  "startColumn": 16,
                  "endLine": 841,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\textern char *optarg;\n\textern int optind;\n\tint r = RTVL_FAIL;\n\tenum mpath_cmds cmd = CMD_CREATE;\n\tenum devtypes dev_type = DEV_NONE;\n\tchar *dev = NULL;\n\tstruct config *conf;\n",
                    "rendered": {
                      "text": "\textern char *optarg;\n\textern int optind;\n\tint r = RTVL_FAIL;\n\tenum mpath_cmds cmd = CMD_CREATE;\n\tenum devtypes dev_type = DEV_NONE;\n\tchar *dev = NULL;\n\tstruct config *conf;\n",
                      "markdown": "`\textern char *optarg;\n\textern int optind;\n\tint r = RTVL_FAIL;\n\tenum mpath_cmds cmd = CMD_CREATE;\n\tenum devtypes dev_type = DEV_NONE;\n\tchar *dev = NULL;\n\tstruct config *conf;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 5,
                  "endLine": 584,
                  "endColumn": 10,
                  "snippet": {
                    "text": "out:\n\tif (r == RTVL_OK &&\n\t    (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG ||\n\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n\t\tcondlog(2, \"Warning: multipath devices exist, but multipathd service is not running\");\n",
                    "rendered": {
                      "text": "out:\n\tif (r == RTVL_OK &&\n\t    (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG ||\n\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n\t\tcondlog(2, \"Warning: multipath devices exist, but multipathd service is not running\");\n",
                      "markdown": "`out:\n\tif (r == RTVL_OK &&\n\t    (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG ||\n\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n\t\tcondlog(2, \"Warning: multipath devices exist, but multipathd service is not running\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 30,
                  "endLine": 583,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nout:\n\tif (r == RTVL_OK &&\n\t    (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG ||\n\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n",
                    "rendered": {
                      "text": "\nout:\n\tif (r == RTVL_OK &&\n\t    (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG ||\n\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n",
                      "markdown": "`\nout:\n\tif (r == RTVL_OK &&\n\t    (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG ||\n\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 569,
                  "startColumn": 25,
                  "endLine": 569,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tgoto out;\n\t}\n\n\tif (cmd != CMD_CREATE && cmd != CMD_DRY_RUN) {\n\t\tr = RTVL_OK;\n\t\tgoto out;\n\t}\n",
                    "rendered": {
                      "text": "\t\tgoto out;\n\t}\n\n\tif (cmd != CMD_CREATE && cmd != CMD_DRY_RUN) {\n\t\tr = RTVL_OK;\n\t\tgoto out;\n\t}\n",
                      "markdown": "`\t\tgoto out;\n\t}\n\n\tif (cmd != CMD_CREATE && cmd != CMD_DRY_RUN) {\n\t\tr = RTVL_OK;\n\t\tgoto out;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 4,
                  "endLine": 486,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t */\n\tif (dev && (dev_type == DEV_DEVNODE ||\n\t\t    dev_type == DEV_UEVENT) &&\n\t    cmd != CMD_REMOVE_WWID &&\n\t    (filter_devnode(conf->blist_devnode,\n\t\t\t    conf->elist_devnode, dev) > 0)) {\n\t\tgoto out;\n",
                    "rendered": {
                      "text": "\t */\n\tif (dev && (dev_type == DEV_DEVNODE ||\n\t\t    dev_type == DEV_UEVENT) &&\n\t    cmd != CMD_REMOVE_WWID &&\n\t    (filter_devnode(conf->blist_devnode,\n\t\t\t    conf->elist_devnode, dev) > 0)) {\n\t\tgoto out;\n",
                      "markdown": "`\t */\n\tif (dev && (dev_type == DEV_DEVNODE ||\n\t\t    dev_type == DEV_UEVENT) &&\n\t    cmd != CMD_REMOVE_WWID &&\n\t    (filter_devnode(conf->blist_devnode,\n\t\t\t    conf->elist_devnode, dev) > 0)) {\n\t\tgoto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 29,
                  "endLine": 216,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\treinstate_paths(mpp);\n\t}\n\n\tif (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG)\n\t\tprint_foreign_topology(libmp_verbosity);\n\n\treturn 0;\n",
                    "rendered": {
                      "text": "\t\t\treinstate_paths(mpp);\n\t}\n\n\tif (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG)\n\t\tprint_foreign_topology(libmp_verbosity);\n\n\treturn 0;\n",
                      "markdown": "`\t\t\treinstate_paths(mpp);\n\t}\n\n\tif (cmd == CMD_LIST_SHORT || cmd == CMD_LIST_LONG)\n\t\tprint_foreign_topology(libmp_verbosity);\n\n\treturn 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 5,
                  "endLine": 209,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\tmpp->bestpg = select_path_group(mpp);\n\n\t\tif (cmd == CMD_LIST_SHORT ||\n\t\t    cmd == CMD_LIST_LONG)\n\t\t\tprint_multipath_topology(mpp, libmp_verbosity);\n\n\t\tif (cmd == CMD_CREATE)\n",
                    "rendered": {
                      "text": "\t\t\tmpp->bestpg = select_path_group(mpp);\n\n\t\tif (cmd == CMD_LIST_SHORT ||\n\t\t    cmd == CMD_LIST_LONG)\n\t\t\tprint_multipath_topology(mpp, libmp_verbosity);\n\n\t\tif (cmd == CMD_CREATE)\n",
                      "markdown": "`\t\t\tmpp->bestpg = select_path_group(mpp);\n\n\t\tif (cmd == CMD_LIST_SHORT ||\n\t\t    cmd == CMD_LIST_LONG)\n\t\t\tprint_multipath_topology(mpp, libmp_verbosity);\n\n\t\tif (cmd == CMD_CREATE)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 38,
                  "endLine": 140,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\t\"  -c      check if a device should be a path in a multipath device\\n\"\n\t\t\"  -C      check if a multipath device has usable paths\\n\"\n\t\t\"  -q      allow queue_if_no_path when multipathd is not running\\n\"\n\t\t\"  -d      dry run, do not create or update devmaps\\n\"\n\t\t\"  -t      display the currently used multipathd configuration\\n\"\n\t\t\"  -T      display the multipathd configuration without builtin defaults\\n\"\n\t\t\"  -r      force devmap reload\\n\"\n",
                    "rendered": {
                      "text": "\t\t\"  -c      check if a device should be a path in a multipath device\\n\"\n\t\t\"  -C      check if a multipath device has usable paths\\n\"\n\t\t\"  -q      allow queue_if_no_path when multipathd is not running\\n\"\n\t\t\"  -d      dry run, do not create or update devmaps\\n\"\n\t\t\"  -t      display the currently used multipathd configuration\\n\"\n\t\t\"  -T      display the multipathd configuration without builtin defaults\\n\"\n\t\t\"  -r      force devmap reload\\n\"\n",
                      "markdown": "`\t\t\"  -c      check if a device should be a path in a multipath device\\n\"\n\t\t\"  -C      check if a multipath device has usable paths\\n\"\n\t\t\"  -q      allow queue_if_no_path when multipathd is not running\\n\"\n\t\t\"  -d      dry run, do not create or update devmaps\\n\"\n\t\t\"  -t      display the currently used multipathd configuration\\n\"\n\t\t\"  -T      display the multipathd configuration without builtin defaults\\n\"\n\t\t\"  -r      force devmap reload\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/main.c"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 62,
                  "endLine": 587,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n\t\tcondlog(2, \"Warning: multipath devices exist, but multipathd service is not running\");\n\n\tif (refwwid)\n\t\tfree(refwwid);\n",
                    "rendered": {
                      "text": "\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n\t\tcondlog(2, \"Warning: multipath devices exist, but multipathd service is not running\");\n\n\tif (refwwid)\n\t\tfree(refwwid);\n",
                      "markdown": "`\t     cmd == CMD_CREATE) &&\n\t    (VECTOR_SIZE(curmp) > 0 || VECTOR_SIZE(newmp) > 0) &&\n\t    !check_daemon())\n\t\tcondlog(2, \"Warning: multipath devices exist, but multipathd service is not running\");\n\n\tif (refwwid)\n\t\tfree(refwwid);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 62,
                  "endLine": 154,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n* Socket activation via multipathd.socket has been disabled by default because\n  it has undesirable side effects (fixes\n  [#76](https://github.com/opensvc/multipath-tools/issues/76), at least partially).\n* The restorequeueing CLI command now only enables queueing if disablequeueing\n  had been sent before.\n* Error messages sent from multipathd to the command line client have been\n",
                    "rendered": {
                      "text": "\n* Socket activation via multipathd.socket has been disabled by default because\n  it has undesirable side effects (fixes\n  [#76](https://github.com/opensvc/multipath-tools/issues/76), at least partially).\n* The restorequeueing CLI command now only enables queueing if disablequeueing\n  had been sent before.\n* Error messages sent from multipathd to the command line client have been\n",
                      "markdown": "`\n* Socket activation via multipathd.socket has been disabled by default because\n  it has undesirable side effects (fixes\n  [#76](https://github.com/opensvc/multipath-tools/issues/76), at least partially).\n* The restorequeueing CLI command now only enables queueing if disablequeueing\n  had been sent before.\n* Error messages sent from multipathd to the command line client have been\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 16,
                  "endLine": 130,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  device mapper udev rules (`DM_UDEV_RULES_VSN==3`, lvm2 >= 2.03.24). They are\n  still compatible with older versions of the device-mapper udev\n  rules (lvm2 < 2.03.24). If lvm2 2.03.24 or newer is installed, it is\n  recommended to update multipath-tools to 0.9.9 or newer.\n  See also [LVM2 2.03.24 release notes](https://gitlab.com/lvmteam/lvm2/-/tags/v2_03_24).\n\n### Bug fixes\n",
                    "rendered": {
                      "text": "  device mapper udev rules (`DM_UDEV_RULES_VSN==3`, lvm2 >= 2.03.24). They are\n  still compatible with older versions of the device-mapper udev\n  rules (lvm2 < 2.03.24). If lvm2 2.03.24 or newer is installed, it is\n  recommended to update multipath-tools to 0.9.9 or newer.\n  See also [LVM2 2.03.24 release notes](https://gitlab.com/lvmteam/lvm2/-/tags/v2_03_24).\n\n### Bug fixes\n",
                      "markdown": "`  device mapper udev rules (`DM_UDEV_RULES_VSN==3`, lvm2 >= 2.03.24). They are\n  still compatible with older versions of the device-mapper udev\n  rules (lvm2 < 2.03.24). If lvm2 2.03.24 or newer is installed, it is\n  recommended to update multipath-tools to 0.9.9 or newer.\n  See also [LVM2 2.03.24 release notes](https://gitlab.com/lvmteam/lvm2/-/tags/v2_03_24).\n\n### Bug fixes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 47,
                  "endLine": 77,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n  `RLIMIT_RTPRIO` (see getrlimit(2)), which corresponds to the `rtprio`\n  setting in limits.conf and to `LimitRTPRIO=` in the systemd unit file. The\n",
                    "rendered": {
                      "text": "\n* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n  `RLIMIT_RTPRIO` (see getrlimit(2)), which corresponds to the `rtprio`\n  setting in limits.conf and to `LimitRTPRIO=` in the systemd unit file. The\n",
                      "markdown": "`\n* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n  `RLIMIT_RTPRIO` (see getrlimit(2)), which corresponds to the `rtprio`\n  setting in limits.conf and to `LimitRTPRIO=` in the systemd unit file. The\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 55,
                  "endLine": 75,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n### User-Visible Changes\n\n* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n",
                    "rendered": {
                      "text": "\n### User-Visible Changes\n\n* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n",
                      "markdown": "`\n### User-Visible Changes\n\n* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 46,
                  "endLine": 14,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n",
                    "rendered": {
                      "text": "\n* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n",
                      "markdown": "`\n* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 5,
                  "endLine": 390,
                  "endColumn": 14,
                  "snippet": {
                    "text": "* Fix a segmentation violation in `list map format` code.\n* Fix use-after-free in code handling path WWID changes by sorting the\n  alias table.\n* Fix timeout handling in unix socket listener code.\n* Fix systemd timers in the initramfs.\n* Fix `find_multipaths_timeout` for unknown hardware.\n* Fix `multipath -ll` output for native NVMe.\n",
                    "rendered": {
                      "text": "* Fix a segmentation violation in `list map format` code.\n* Fix use-after-free in code handling path WWID changes by sorting the\n  alias table.\n* Fix timeout handling in unix socket listener code.\n* Fix systemd timers in the initramfs.\n* Fix `find_multipaths_timeout` for unknown hardware.\n* Fix `multipath -ll` output for native NVMe.\n",
                      "markdown": "`* Fix a segmentation violation in `list map format` code.\n* Fix use-after-free in code handling path WWID changes by sorting the\n  alias table.\n* Fix timeout handling in unix socket listener code.\n* Fix systemd timers in the initramfs.\n* Fix `find_multipaths_timeout` for unknown hardware.\n* Fix `multipath -ll` output for native NVMe.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 11,
                  "endLine": 383,
                  "endColumn": 17,
                  "snippet": {
                    "text": "### Bug Fixes\n\n* Avoid checker thread blocking uevents or other requests for an extended\n  amount of time with a huge amount of path devices, by occasionally\n  interrupting the checker loop.\n* Fix handling the case where a map ended up with no paths while being\n  updated.\n",
                    "rendered": {
                      "text": "### Bug Fixes\n\n* Avoid checker thread blocking uevents or other requests for an extended\n  amount of time with a huge amount of path devices, by occasionally\n  interrupting the checker loop.\n* Fix handling the case where a map ended up with no paths while being\n  updated.\n",
                      "markdown": "`### Bug Fixes\n\n* Avoid checker thread blocking uevents or other requests for an extended\n  amount of time with a huge amount of path devices, by occasionally\n  interrupting the checker loop.\n* Fix handling the case where a map ended up with no paths while being\n  updated.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 1,
                  "endLine": 321,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* True \"multi-architecture\" workflows are now possible on GitHub workflows, to\n  test compilation and run unit tests on different architectures.\n* Containers for test builds are now pulled from ghcr.io rather than from\n  docker hub.\n\n### Other\n\n",
                    "rendered": {
                      "text": "* True \"multi-architecture\" workflows are now possible on GitHub workflows, to\n  test compilation and run unit tests on different architectures.\n* Containers for test builds are now pulled from ghcr.io rather than from\n  docker hub.\n\n### Other\n\n",
                      "markdown": "`* True \"multi-architecture\" workflows are now possible on GitHub workflows, to\n  test compilation and run unit tests on different architectures.\n* Containers for test builds are now pulled from ghcr.io rather than from\n  docker hub.\n\n### Other\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 15,
                  "endLine": 314,
                  "endColumn": 21,
                  "snippet": {
                    "text": "* Added a simple `autoconf`-like mechanism.\n* Use \"quiet build\" by default, verbose build can be enabled using `make V=1`.\n* Reworked the Makefile variables for configuring paths.\n* Don't require perl just for installation of man pages.\n\n### CI\n\n",
                    "rendered": {
                      "text": "* Added a simple `autoconf`-like mechanism.\n* Use \"quiet build\" by default, verbose build can be enabled using `make V=1`.\n* Reworked the Makefile variables for configuring paths.\n* Don't require perl just for installation of man pages.\n\n### CI\n\n",
                      "markdown": "`* Added a simple `autoconf`-like mechanism.\n* Use \"quiet build\" by default, verbose build can be enabled using `make V=1`.\n* Reworked the Makefile variables for configuring paths.\n* Don't require perl just for installation of man pages.\n\n### CI\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 31,
                  "endLine": 237,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n### Other Major Changes\n\n* Prioritizers now use the same timeout logic as path checkers.\n* Reload maps if the path groups aren't properly ordered by priority.\n* Improve logic for updating path priorities.\n* Avoid paths with unknown priority affecting the priority of their path\n",
                    "rendered": {
                      "text": "\n### Other Major Changes\n\n* Prioritizers now use the same timeout logic as path checkers.\n* Reload maps if the path groups aren't properly ordered by priority.\n* Improve logic for updating path priorities.\n* Avoid paths with unknown priority affecting the priority of their path\n",
                      "markdown": "`\n### Other Major Changes\n\n* Prioritizers now use the same timeout logic as path checkers.\n* Reload maps if the path groups aren't properly ordered by priority.\n* Improve logic for updating path priorities.\n* Avoid paths with unknown priority affecting the priority of their path\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 16,
                  "endLine": 213,
                  "endColumn": 22,
                  "snippet": {
                    "text": "* Fix memory and error handling of code using aio in the marginal paths code.\nand the directio checker (fixes\n[#73](https://github.com/opensvc/multipath-tools/issues/73)).\n* Insert compile time settings for paths in man pages correctly.\n\n### Other\n\n",
                    "rendered": {
                      "text": "* Fix memory and error handling of code using aio in the marginal paths code.\nand the directio checker (fixes\n[#73](https://github.com/opensvc/multipath-tools/issues/73)).\n* Insert compile time settings for paths in man pages correctly.\n\n### Other\n\n",
                      "markdown": "`* Fix memory and error handling of code using aio in the marginal paths code.\nand the directio checker (fixes\n[#73](https://github.com/opensvc/multipath-tools/issues/73)).\n* Insert compile time settings for paths in man pages correctly.\n\n### Other\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 3,
                  "endLine": 204,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  - strictly avoid using an alias that is already taken.\n  - cache bindings table in memory.\n  - write bindings file only if changes have been applied, and watch it with inotify.\n  - sort aliases in \"alias order\" by using length+alphabetical sort, allowing\n    more efficient allocation of new aliases\n\n### Bug Fixes\n",
                    "rendered": {
                      "text": "  - strictly avoid using an alias that is already taken.\n  - cache bindings table in memory.\n  - write bindings file only if changes have been applied, and watch it with inotify.\n  - sort aliases in \"alias order\" by using length+alphabetical sort, allowing\n    more efficient allocation of new aliases\n\n### Bug Fixes\n",
                      "markdown": "`  - strictly avoid using an alias that is already taken.\n  - cache bindings table in memory.\n  - write bindings file only if changes have been applied, and watch it with inotify.\n  - sort aliases in \"alias order\" by using length+alphabetical sort, allowing\n    more efficient allocation of new aliases\n\n### Bug Fixes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 62,
                  "endLine": 203,
                  "endColumn": 69,
                  "snippet": {
                    "text": "* Rework of alias selection code:\n  - strictly avoid using an alias that is already taken.\n  - cache bindings table in memory.\n  - write bindings file only if changes have been applied, and watch it with inotify.\n  - sort aliases in \"alias order\" by using length+alphabetical sort, allowing\n    more efficient allocation of new aliases\n\n",
                    "rendered": {
                      "text": "* Rework of alias selection code:\n  - strictly avoid using an alias that is already taken.\n  - cache bindings table in memory.\n  - write bindings file only if changes have been applied, and watch it with inotify.\n  - sort aliases in \"alias order\" by using length+alphabetical sort, allowing\n    more efficient allocation of new aliases\n\n",
                      "markdown": "`* Rework of alias selection code:\n  - strictly avoid using an alias that is already taken.\n  - cache bindings table in memory.\n  - write bindings file only if changes have been applied, and watch it with inotify.\n  - sort aliases in \"alias order\" by using length+alphabetical sort, allowing\n    more efficient allocation of new aliases\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 32,
                  "endLine": 166,
                  "endColumn": 41,
                  "snippet": {
                    "text": "* multipathd now tracks the queueing mode of maps in its internal features\n  string. This is helpful to ensure that maps have the desired queuing\n  status. Without this, it could happen that a map remains in queueing state\n  even after the `no_path_retry` timeout has expired.\n* multipathd's map flushing code has been reworked to avoid hangs if there are\n  no paths but outstanding IO. Thus, if multipathd is running, `multipath -F`\n  can now retry map flushing using the daemon, rather than locally.\n",
                    "rendered": {
                      "text": "* multipathd now tracks the queueing mode of maps in its internal features\n  string. This is helpful to ensure that maps have the desired queuing\n  status. Without this, it could happen that a map remains in queueing state\n  even after the `no_path_retry` timeout has expired.\n* multipathd's map flushing code has been reworked to avoid hangs if there are\n  no paths but outstanding IO. Thus, if multipathd is running, `multipath -F`\n  can now retry map flushing using the daemon, rather than locally.\n",
                      "markdown": "`* multipathd now tracks the queueing mode of maps in its internal features\n  string. This is helpful to ensure that maps have the desired queuing\n  status. Without this, it could happen that a map remains in queueing state\n  even after the `no_path_retry` timeout has expired.\n* multipathd's map flushing code has been reworked to avoid hangs if there are\n  no paths but outstanding IO. Thus, if multipathd is running, `multipath -F`\n  can now retry map flushing using the daemon, rather than locally.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 34,
                  "endLine": 86,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  Otherwise, it will try to set the scheduling priority to the given value.\n  Fixes [#82](https://github.com/opensvc/multipath-tools/issues/82).\n* *Changed normal scheduling:* In order to make sure that multipathd has\n  sufficient priority even if real time scheduling is switched off, the\n  `CPUWeight=` setting in the unit file is set to 1000. This is necessary\n  because regular nice(2) values have no effect in systems with cgroups enabled.\n* *Changed handling of `max_sectors_kb` configuration:* multipathd applies\n",
                    "rendered": {
                      "text": "  Otherwise, it will try to set the scheduling priority to the given value.\n  Fixes [#82](https://github.com/opensvc/multipath-tools/issues/82).\n* *Changed normal scheduling:* In order to make sure that multipathd has\n  sufficient priority even if real time scheduling is switched off, the\n  `CPUWeight=` setting in the unit file is set to 1000. This is necessary\n  because regular nice(2) values have no effect in systems with cgroups enabled.\n* *Changed handling of `max_sectors_kb` configuration:* multipathd applies\n",
                      "markdown": "`  Otherwise, it will try to set the scheduling priority to the given value.\n  Fixes [#82](https://github.com/opensvc/multipath-tools/issues/82).\n* *Changed normal scheduling:* In order to make sure that multipathd has\n  sufficient priority even if real time scheduling is switched off, the\n  `CPUWeight=` setting in the unit file is set to 1000. This is necessary\n  because regular nice(2) values have no effect in systems with cgroups enabled.\n* *Changed handling of `max_sectors_kb` configuration:* multipathd applies\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 23,
                  "endLine": 78,
                  "endColumn": 29,
                  "snippet": {
                    "text": "* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n  `RLIMIT_RTPRIO` (see getrlimit(2)), which corresponds to the `rtprio`\n  setting in limits.conf and to `LimitRTPRIO=` in the systemd unit file. The\n  default in the systemd unit file has been set to 10.  If the limit is set to\n",
                    "rendered": {
                      "text": "* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n  `RLIMIT_RTPRIO` (see getrlimit(2)), which corresponds to the `rtprio`\n  setting in limits.conf and to `LimitRTPRIO=` in the systemd unit file. The\n  default in the systemd unit file has been set to 10.  If the limit is set to\n",
                      "markdown": "`* *Changed realtime scheduling:* multipathd used to run at the highest possible\n  realtime priority, 99. This has always been excessive, and on some\n  distributions (e.g. RHEL 8), it hasn't worked at all.  It is now possible to\n  set multipathd's real time scheduling by setting the hard limit for\n  `RLIMIT_RTPRIO` (see getrlimit(2)), which corresponds to the `rtprio`\n  setting in limits.conf and to `LimitRTPRIO=` in the systemd unit file. The\n  default in the systemd unit file has been set to 10.  If the limit is set to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 24,
                  "endLine": 15,
                  "endColumn": 30,
                  "snippet": {
                    "text": "* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n  All functions that retrieve information about DM maps have been converted\n",
                    "rendered": {
                      "text": "* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n  All functions that retrieve information about DM maps have been converted\n",
                      "markdown": "`* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n  All functions that retrieve information about DM maps have been converted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/NEWS.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 59,
                  "endLine": 14,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n",
                    "rendered": {
                      "text": "\n* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n",
                      "markdown": "`\n* Refactored the path checker loop. Paths are now checked for each multipath\n  map in turn, rather than walking linearly through the list of paths. Paths\n  for different multipath maps will be checked at different time offsets in\n  the `polling_interval` time span, which distributes the load caused by\n  path checking more evenly over time.\n* Refactored a significant part of the libmultipath / libdevmapper interface.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/prioritizers/path_latency.c"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 1,
                  "endLine": 260,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t(void)clock_gettime(CLOCK_MONOTONIC, &tv_after);\n\n\t\ttimespecsub(&tv_after, &tv_before, &tv_diff);\n\t\tdiff = tv_diff.tv_sec * 1000 * 1000 + tv_diff.tv_nsec / 1000;\n\n\t\tif (diff == 0)\n\t\t\t/*\n",
                    "rendered": {
                      "text": "\t\t(void)clock_gettime(CLOCK_MONOTONIC, &tv_after);\n\n\t\ttimespecsub(&tv_after, &tv_before, &tv_diff);\n\t\tdiff = tv_diff.tv_sec * 1000 * 1000 + tv_diff.tv_nsec / 1000;\n\n\t\tif (diff == 0)\n\t\t\t/*\n",
                      "markdown": "`\t\t(void)clock_gettime(CLOCK_MONOTONIC, &tv_after);\n\n\t\ttimespecsub(&tv_after, &tv_before, &tv_diff);\n\t\tdiff = tv_diff.tv_sec * 1000 * 1000 + tv_diff.tv_nsec / 1000;\n\n\t\tif (diff == 0)\n\t\t\t/*\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmultipath/dict.c"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 54,
                  "endLine": 52,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t}\n\tif (res > max || res < min) {\n\t\tres = (res > max) ? max : min;\n\t\tcondlog(1, \"%s line %d, value for %s too %s, capping at %ld\",\n\t\t\tfile, line_nr, (char*)VECTOR_SLOT(strvec, 0),\n\t\t(res == max)? \"large\" : \"small\", res);\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\tif (res > max || res < min) {\n\t\tres = (res > max) ? max : min;\n\t\tcondlog(1, \"%s line %d, value for %s too %s, capping at %ld\",\n\t\t\tfile, line_nr, (char*)VECTOR_SLOT(strvec, 0),\n\t\t(res == max)? \"large\" : \"small\", res);\n\t}\n",
                      "markdown": "`\t}\n\tif (res > max || res < min) {\n\t\tres = (res > max) ? max : min;\n\t\tcondlog(1, \"%s line %d, value for %s too %s, capping at %ld\",\n\t\t\tfile, line_nr, (char*)VECTOR_SLOT(strvec, 0),\n\t\t(res == max)? \"large\" : \"small\", res);\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/gpt.c"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 38,
                  "endLine": 469,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tif (__le64_to_cpu(agpt->my_lba) != lastlba) {\n\t\terror_found++;\n\t\tfprintf(stderr,\n\t\t       \"GPT:Alternate GPT header not at the end of the disk.\\n\");\n#ifdef DEBUG\n\t\tfprintf(stderr,  \"GPT:%\" PRIx64 \" != %\" PRIx64 \"\\n\",\n\t\t       __le64_to_cpu(agpt->my_lba), lastlba);\n",
                    "rendered": {
                      "text": "\tif (__le64_to_cpu(agpt->my_lba) != lastlba) {\n\t\terror_found++;\n\t\tfprintf(stderr,\n\t\t       \"GPT:Alternate GPT header not at the end of the disk.\\n\");\n#ifdef DEBUG\n\t\tfprintf(stderr,  \"GPT:%\" PRIx64 \" != %\" PRIx64 \"\\n\",\n\t\t       __le64_to_cpu(agpt->my_lba), lastlba);\n",
                      "markdown": "`\tif (__le64_to_cpu(agpt->my_lba) != lastlba) {\n\t\terror_found++;\n\t\tfprintf(stderr,\n\t\t       \"GPT:Alternate GPT header not at the end of the disk.\\n\");\n#ifdef DEBUG\n\t\tfprintf(stderr,  \"GPT:%\" PRIx64 \" != %\" PRIx64 \"\\n\",\n\t\t       __le64_to_cpu(agpt->my_lba), lastlba);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/kpartx/gpt.c"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 54,
                  "endLine": 459,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\tif (__le64_to_cpu(pgpt->alternate_lba) != lastlba) {\n\t\terror_found++;\n\t\tfprintf(stderr,\n\t\t       \"GPT:Primary header thinks Alt. header is not at the end of the disk.\\n\");\n#ifdef DEBUG\n\t\tfprintf(stderr,  \"GPT:%\" PRIx64 \" != %\" PRIx64 \"\\n\",\n\t\t       __le64_to_cpu(pgpt->alternate_lba), lastlba);\n",
                    "rendered": {
                      "text": "\tif (__le64_to_cpu(pgpt->alternate_lba) != lastlba) {\n\t\terror_found++;\n\t\tfprintf(stderr,\n\t\t       \"GPT:Primary header thinks Alt. header is not at the end of the disk.\\n\");\n#ifdef DEBUG\n\t\tfprintf(stderr,  \"GPT:%\" PRIx64 \" != %\" PRIx64 \"\\n\",\n\t\t       __le64_to_cpu(pgpt->alternate_lba), lastlba);\n",
                      "markdown": "`\tif (__le64_to_cpu(pgpt->alternate_lba) != lastlba) {\n\t\terror_found++;\n\t\tfprintf(stderr,\n\t\t       \"GPT:Primary header thinks Alt. header is not at the end of the disk.\\n\");\n#ifdef DEBUG\n\t\tfprintf(stderr,  \"GPT:%\" PRIx64 \" != %\" PRIx64 \"\\n\",\n\t\t       __le64_to_cpu(pgpt->alternate_lba), lastlba);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_persist_int.c"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 33,
                  "endLine": 756,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\tif (ret != MPATH_PR_SUCCESS )\n\t{\n\t\tcondlog(0,\"%s : pr in read keys service action failed Error=%d\", mpp->alias, ret);\n\t\tgoto out;\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tif (ret != MPATH_PR_SUCCESS )\n\t{\n\t\tcondlog(0,\"%s : pr in read keys service action failed Error=%d\", mpp->alias, ret);\n\t\tgoto out;\n\t}\n\n",
                      "markdown": "`\n\tif (ret != MPATH_PR_SUCCESS )\n\t{\n\t\tcondlog(0,\"%s : pr in read keys service action failed Error=%d\", mpp->alias, ret);\n\t\tgoto out;\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_pr_ioctl.c"
                },
                "region": {
                  "startLine": 571,
                  "startColumn": 22,
                  "endLine": 571,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\tmx_resp_len = sizeof(struct print_fulldescr_list) + sizeof(struct prin_fulldescr *)*32;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcondlog(0, \"invalid service action, %d\", rq_servact);\n\t\t\tmx_resp_len = 0;\n\t\t\tbreak;\n\t}\n",
                    "rendered": {
                      "text": "\t\t\tmx_resp_len = sizeof(struct print_fulldescr_list) + sizeof(struct prin_fulldescr *)*32;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcondlog(0, \"invalid service action, %d\", rq_servact);\n\t\t\tmx_resp_len = 0;\n\t\t\tbreak;\n\t}\n",
                      "markdown": "`\t\t\tmx_resp_len = sizeof(struct print_fulldescr_list) + sizeof(struct prin_fulldescr *)*32;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tcondlog(0, \"invalid service action, %d\", rq_servact);\n\t\t\tmx_resp_len = 0;\n\t\t\tbreak;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/libmpathpersist/mpath_pr_ioctl.c"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 7,
                  "endLine": 21,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#include \"debug.h\"\n#include \"structs.h\" /* FILE_NAME_SIZE */\n\n#define TIMEOUT 2000\n#define MAXRETRY 5\n\nint prin_do_scsi_ioctl(char * dev, int rq_servact, struct prin_resp *resp, int noisy);\n",
                    "rendered": {
                      "text": "#include \"debug.h\"\n#include \"structs.h\" /* FILE_NAME_SIZE */\n\n#define TIMEOUT 2000\n#define MAXRETRY 5\n\nint prin_do_scsi_ioctl(char * dev, int rq_servact, struct prin_resp *resp, int noisy);\n",
                      "markdown": "`#include \"debug.h\"\n#include \"structs.h\" /* FILE_NAME_SIZE */\n\n#define TIMEOUT 2000\n#define MAXRETRY 5\n\nint prin_do_scsi_ioctl(char * dev, int rq_servact, struct prin_resp *resp, int noisy);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 2055,
                  "startColumn": 52,
                  "endLine": 2055,
                  "endColumn": 60,
                  "snippet": {
                    "text": ".P\nThe use of \\fIqueue_if_no_path\\fR or \\fIno_path_retry\\fR might lead to a\ndeadlock if the \\fIdev_loss_tmo\\fR setting results in a device being removed\nwhile I/O is still queued. The multipath daemon will update the \\fIdev_loss_tmo\\fR\nsetting accordingly to avoid this deadlock. Hence if both values are\nspecified the order of precedence is \\fIno_path_retry, queue_if_no_path, dev_loss_tmo\\fR.\n.\n",
                    "rendered": {
                      "text": ".P\nThe use of \\fIqueue_if_no_path\\fR or \\fIno_path_retry\\fR might lead to a\ndeadlock if the \\fIdev_loss_tmo\\fR setting results in a device being removed\nwhile I/O is still queued. The multipath daemon will update the \\fIdev_loss_tmo\\fR\nsetting accordingly to avoid this deadlock. Hence if both values are\nspecified the order of precedence is \\fIno_path_retry, queue_if_no_path, dev_loss_tmo\\fR.\n.\n",
                      "markdown": "`.P\nThe use of \\fIqueue_if_no_path\\fR or \\fIno_path_retry\\fR might lead to a\ndeadlock if the \\fIdev_loss_tmo\\fR setting results in a device being removed\nwhile I/O is still queued. The multipath daemon will update the \\fIdev_loss_tmo\\fR\nsetting accordingly to avoid this deadlock. Hence if both values are\nspecified the order of precedence is \\fIno_path_retry, queue_if_no_path, dev_loss_tmo\\fR.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1976,
                  "startColumn": 56,
                  "endLine": 1976,
                  "endColumn": 60,
                  "snippet": {
                    "text": ".B \\(dqmarginal_path\\(dq failure tracking\nIf a second failure event (good->bad transition) occurs within\n\\fImarginal_path_double_failed_time\\fR seconds after a failure, high-frequency\nmonitoring is started for the affected path: I/O is sent at a rate of 10 per\nsecond. This is done for \\fImarginal_path_err_sample_time\\fR seconds. During\nthis period, the path is not reinstated. If the\nrate of errors remains below \\fImarginal_path_err_rate_threshold\\fR during the\n",
                    "rendered": {
                      "text": ".B \\(dqmarginal_path\\(dq failure tracking\nIf a second failure event (good->bad transition) occurs within\n\\fImarginal_path_double_failed_time\\fR seconds after a failure, high-frequency\nmonitoring is started for the affected path: I/O is sent at a rate of 10 per\nsecond. This is done for \\fImarginal_path_err_sample_time\\fR seconds. During\nthis period, the path is not reinstated. If the\nrate of errors remains below \\fImarginal_path_err_rate_threshold\\fR during the\n",
                      "markdown": "`.B \\(dqmarginal_path\\(dq failure tracking\nIf a second failure event (good->bad transition) occurs within\n\\fImarginal_path_double_failed_time\\fR seconds after a failure, high-frequency\nmonitoring is started for the affected path: I/O is sent at a rate of 10 per\nsecond. This is done for \\fImarginal_path_err_sample_time\\fR seconds. During\nthis period, the path is not reinstated. If the\nrate of errors remains below \\fImarginal_path_err_rate_threshold\\fR during the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1962,
                  "startColumn": 71,
                  "endLine": 1962,
                  "endColumn": 75,
                  "snippet": {
                    "text": "for some time, and only reinstated if the healthy state appears to be stable.\nIf the \\fImarginal_pathgroups\\fR option is set, the path will reinstated\nimmediately, but placed in a special pathgroup for marginal paths. Marginal\npathgroups will not be used until all other pathgroups have been tried. At the\ntime when the path would normally be reinstated, it will be returned to its\nnormal pathgroup. The logic of determining \\(dqshaky\\(dq condition, as well as\nthe logic when to reinstate, differs between the three methods.\n",
                    "rendered": {
                      "text": "for some time, and only reinstated if the healthy state appears to be stable.\nIf the \\fImarginal_pathgroups\\fR option is set, the path will reinstated\nimmediately, but placed in a special pathgroup for marginal paths. Marginal\npathgroups will not be used until all other pathgroups have been tried. At the\ntime when the path would normally be reinstated, it will be returned to its\nnormal pathgroup. The logic of determining \\(dqshaky\\(dq condition, as well as\nthe logic when to reinstate, differs between the three methods.\n",
                      "markdown": "`for some time, and only reinstated if the healthy state appears to be stable.\nIf the \\fImarginal_pathgroups\\fR option is set, the path will reinstated\nimmediately, but placed in a special pathgroup for marginal paths. Marginal\npathgroups will not be used until all other pathgroups have been tried. At the\ntime when the path would normally be reinstated, it will be returned to its\nnormal pathgroup. The logic of determining \\(dqshaky\\(dq condition, as well as\nthe logic when to reinstate, differs between the three methods.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1472,
                  "startColumn": 31,
                  "endLine": 1472,
                  "endColumn": 35,
                  "snippet": {
                    "text": "Regular expression for an udev property. All\ndevices that have matching udev properties will be excluded/included.\nThe handling of the \\fIproperty\\fR keyword is special,\nbecause devices \\fBmust\\fR have at least one whitelisted udev property;\notherwise they're treated as blacklisted, and the message\n\"\\fIblacklisted, udev property missing\\fR\" is displayed in the logs.\n.\n",
                    "rendered": {
                      "text": "Regular expression for an udev property. All\ndevices that have matching udev properties will be excluded/included.\nThe handling of the \\fIproperty\\fR keyword is special,\nbecause devices \\fBmust\\fR have at least one whitelisted udev property;\notherwise they're treated as blacklisted, and the message\n\"\\fIblacklisted, udev property missing\\fR\" is displayed in the logs.\n.\n",
                      "markdown": "`Regular expression for an udev property. All\ndevices that have matching udev properties will be excluded/included.\nThe handling of the \\fIproperty\\fR keyword is special,\nbecause devices \\fBmust\\fR have at least one whitelisted udev property;\notherwise they're treated as blacklisted, and the message\n\"\\fIblacklisted, udev property missing\\fR\" is displayed in the logs.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1429,
                  "startColumn": 53,
                  "endLine": 1429,
                  "endColumn": 57,
                  "snippet": {
                    "text": "quoted value with an exclamation mark \\fB\"!\"\\fR will invert the matching\nof the rest of the regular expression. For instance, \\fB\"!^sd[a-z]\"\\fR will\nmatch all values that do not start with \\fB\"sd[a-z]\"\\fR. The exclamation mark\ncan be escaped \\fB\"\\\\!\"\\fR to match a literal \\fB!\\fR at the start of a\nregular expression. \\fBNote:\\fR The exclamation mark must be inside quotes,\notherwise it will be treated as starting a comment.\n.LP\n",
                    "rendered": {
                      "text": "quoted value with an exclamation mark \\fB\"!\"\\fR will invert the matching\nof the rest of the regular expression. For instance, \\fB\"!^sd[a-z]\"\\fR will\nmatch all values that do not start with \\fB\"sd[a-z]\"\\fR. The exclamation mark\ncan be escaped \\fB\"\\\\!\"\\fR to match a literal \\fB!\\fR at the start of a\nregular expression. \\fBNote:\\fR The exclamation mark must be inside quotes,\notherwise it will be treated as starting a comment.\n.LP\n",
                      "markdown": "`quoted value with an exclamation mark \\fB\"!\"\\fR will invert the matching\nof the rest of the regular expression. For instance, \\fB\"!^sd[a-z]\"\\fR will\nmatch all values that do not start with \\fB\"sd[a-z]\"\\fR. The exclamation mark\ncan be escaped \\fB\"\\\\!\"\\fR to match a literal \\fB!\\fR at the start of a\nregular expression. \\fBNote:\\fR The exclamation mark must be inside quotes,\notherwise it will be treated as starting a comment.\n.LP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1224,
                  "startColumn": 11,
                  "endLine": 1224,
                  "endColumn": 15,
                  "snippet": {
                    "text": "the same WWID appears. If that happens, it sets up a multipath map. If it\ndoesn\\'t happen until a\ntimeout expires, or if setting up the map fails, a new uevent is triggered for\nthe device; at second encounter in the udev rules, the device will be treated\nas non-multipath and passed on to upper layers.\n\\fBNote:\\fR this may cause delays during device detection if\nthere are single-path devices which aren\\'t blacklisted.\n",
                    "rendered": {
                      "text": "the same WWID appears. If that happens, it sets up a multipath map. If it\ndoesn\\'t happen until a\ntimeout expires, or if setting up the map fails, a new uevent is triggered for\nthe device; at second encounter in the udev rules, the device will be treated\nas non-multipath and passed on to upper layers.\n\\fBNote:\\fR this may cause delays during device detection if\nthere are single-path devices which aren\\'t blacklisted.\n",
                      "markdown": "`the same WWID appears. If that happens, it sets up a multipath map. If it\ndoesn\\'t happen until a\ntimeout expires, or if setting up the map fails, a new uevent is triggered for\nthe device; at second encounter in the udev rules, the device will be treated\nas non-multipath and passed on to upper layers.\n\\fBNote:\\fR this may cause delays during device detection if\nthere are single-path devices which aren\\'t blacklisted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1208,
                  "startColumn": 42,
                  "endLine": 1208,
                  "endColumn": 46,
                  "snippet": {
                    "text": ".TP\n.I on\nBoth multipathd and multipath treat a device as multipath device if the\nconditions for \\fBstrict\\fR are met, or if at least two non-blacklisted paths\nwith the same WWID have been detected. \\fIyes\\fR or \\fI1\\fR is accepted as an\nalias for \\fIon\\fR.\n.TP\n",
                    "rendered": {
                      "text": ".TP\n.I on\nBoth multipathd and multipath treat a device as multipath device if the\nconditions for \\fBstrict\\fR are met, or if at least two non-blacklisted paths\nwith the same WWID have been detected. \\fIyes\\fR or \\fI1\\fR is accepted as an\nalias for \\fIon\\fR.\n.TP\n",
                      "markdown": "`.TP\n.I on\nBoth multipathd and multipath treat a device as multipath device if the\nconditions for \\fBstrict\\fR are met, or if at least two non-blacklisted paths\nwith the same WWID have been detected. \\fIyes\\fR or \\fI1\\fR is accepted as an\nalias for \\fIon\\fR.\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1078,
                  "startColumn": 24,
                  "endLine": 1078,
                  "endColumn": 28,
                  "snippet": {
                    "text": "when a path fail event occurs twice in \\fImarginal_path_double_failed_time\\fR\nsecond due to an IO error, multipathd will fail the path and enqueue this\npath into a queue of which members are sent a couple of continuous direct\nreading asynchronous IOs at a fixed sample rate of 10HZ to start the IO\naccounting process for the path will last for\n\\fImarginal_path_err_sample_time\\fR.\nIf the rate of IO error on a particular path is greater than the\n",
                    "rendered": {
                      "text": "when a path fail event occurs twice in \\fImarginal_path_double_failed_time\\fR\nsecond due to an IO error, multipathd will fail the path and enqueue this\npath into a queue of which members are sent a couple of continuous direct\nreading asynchronous IOs at a fixed sample rate of 10HZ to start the IO\naccounting process for the path will last for\n\\fImarginal_path_err_sample_time\\fR.\nIf the rate of IO error on a particular path is greater than the\n",
                      "markdown": "`when a path fail event occurs twice in \\fImarginal_path_double_failed_time\\fR\nsecond due to an IO error, multipathd will fail the path and enqueue this\npath into a queue of which members are sent a couple of continuous direct\nreading asynchronous IOs at a fixed sample rate of 10HZ to start the IO\naccounting process for the path will last for\n\\fImarginal_path_err_sample_time\\fR.\nIf the rate of IO error on a particular path is greater than the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1063,
                  "startColumn": 31,
                  "endLine": 1063,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\\fImarginal_path_double_failed_time\\fR seconds due to an IO error and all the\nother three parameters are set, multipathd will fail the path and enqueue\nthis path into a queue of which members are sent a couple of continuous\ndirect reading asynchronous IOs at a fixed sample rate of 10HZ to start IO\nerror accounting process. See \"Shaky paths detection\" below.\n.RS\n.TP\n",
                    "rendered": {
                      "text": "\\fImarginal_path_double_failed_time\\fR seconds due to an IO error and all the\nother three parameters are set, multipathd will fail the path and enqueue\nthis path into a queue of which members are sent a couple of continuous\ndirect reading asynchronous IOs at a fixed sample rate of 10HZ to start IO\nerror accounting process. See \"Shaky paths detection\" below.\n.RS\n.TP\n",
                      "markdown": "`\\fImarginal_path_double_failed_time\\fR seconds due to an IO error and all the\nother three parameters are set, multipathd will fail the path and enqueue\nthis path into a queue of which members are sent a couple of continuous\ndirect reading asynchronous IOs at a fixed sample rate of 10HZ to start IO\nerror accounting process. See \"Shaky paths detection\" below.\n.RS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 961,
                  "startColumn": 34,
                  "endLine": 961,
                  "endColumn": 38,
                  "snippet": {
                    "text": "If set to\n.I yes\n, multipathd will start a new path checker loop after exactly one second,\nso that each path check will occur at exactly \\fIpolling_interval\\fR\nseconds. On busy systems path checks might take longer than one second;\nhere the missing ticks will be accounted for on the next round.\nA warning will be printed if path checks take longer than \\fIpolling_interval\\fR\n",
                    "rendered": {
                      "text": "If set to\n.I yes\n, multipathd will start a new path checker loop after exactly one second,\nso that each path check will occur at exactly \\fIpolling_interval\\fR\nseconds. On busy systems path checks might take longer than one second;\nhere the missing ticks will be accounted for on the next round.\nA warning will be printed if path checks take longer than \\fIpolling_interval\\fR\n",
                      "markdown": "`If set to\n.I yes\n, multipathd will start a new path checker loop after exactly one second,\nso that each path check will occur at exactly \\fIpolling_interval\\fR\nseconds. On busy systems path checks might take longer than one second;\nhere the missing ticks will be accounted for on the next round.\nA warning will be printed if path checks take longer than \\fIpolling_interval\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 25,
                  "endLine": 948,
                  "endColumn": 29,
                  "snippet": {
                    "text": "If set to\n.I yes\n, multipathd will call the path checkers in sync mode only.  This means that\nonly one checker will run at a time.  This is useful in the case where many\nmultipathd checkers running in parallel causes significant CPU pressure.\n.RS\n.TP\n",
                    "rendered": {
                      "text": "If set to\n.I yes\n, multipathd will call the path checkers in sync mode only.  This means that\nonly one checker will run at a time.  This is useful in the case where many\nmultipathd checkers running in parallel causes significant CPU pressure.\n.RS\n.TP\n",
                      "markdown": "`If set to\n.I yes\n, multipathd will call the path checkers in sync mode only.  This means that\nonly one checker will run at a time.  This is useful in the case where many\nmultipathd checkers running in parallel causes significant CPU pressure.\n.RS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 854,
                  "startColumn": 47,
                  "endLine": 854,
                  "endColumn": 51,
                  "snippet": {
                    "text": ", multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n.RS\n.TP\nThe default is: \\fBalways\\fR\n",
                    "rendered": {
                      "text": ", multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n.RS\n.TP\nThe default is: \\fBalways\\fR\n",
                      "markdown": "`, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n.RS\n.TP\nThe default is: \\fBalways\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 17,
                  "endLine": 852,
                  "endColumn": 21,
                  "snippet": {
                    "text": "If set to\n.I once\n, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n.RS\n",
                    "rendered": {
                      "text": "If set to\n.I once\n, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n.RS\n",
                      "markdown": "`If set to\n.I once\n, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 46,
                  "endLine": 851,
                  "endColumn": 50,
                  "snippet": {
                    "text": ".B log_checker_err\nIf set to\n.I once\n, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n",
                    "rendered": {
                      "text": ".B log_checker_err\nIf set to\n.I once\n, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n",
                      "markdown": "`.B log_checker_err\nIf set to\n.I once\n, multipathd logs the first path checker error at logging level 2. Any later\nerrors are logged at level 3 until the device is restored. If set to\n.I always\n, multipathd always logs the path checker error at logging level 2.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 3,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".\\\" groff -z -wall -b -e -t multipath/multipath.conf.5\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipath/multipath.conf.5 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATH.CONF 5 2024-08-15 Linux\n",
                    "rendered": {
                      "text": ".\\\" groff -z -wall -b -e -t multipath/multipath.conf.5\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipath/multipath.conf.5 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATH.CONF 5 2024-08-15 Linux\n",
                      "markdown": "`.\\\" groff -z -wall -b -e -t multipath/multipath.conf.5\n.\\\" man --warnings -E UTF-8 -l -Tutf8 -Z multipath/multipath.conf.5 > /dev/null\n.\\\"\n.\\\" Update the date below if you make any significant change.\n.\\\" ----------------------------------------------------------------------------\n.\n.TH MULTIPATH.CONF 5 2024-08-15 Linux\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 2065,
                  "startColumn": 3,
                  "endLine": 2065,
                  "endColumn": 12,
                  "snippet": {
                    "text": ".\\\" ----------------------------------------------------------------------------\n.\n.BR udev (8),\n.BR dmsetup (8),\n.BR multipath (8),\n.BR multipathc (8),\n.BR multipathd (8).\n",
                    "rendered": {
                      "text": ".\\\" ----------------------------------------------------------------------------\n.\n.BR udev (8),\n.BR dmsetup (8),\n.BR multipath (8),\n.BR multipathc (8),\n.BR multipathd (8).\n",
                      "markdown": "`.\\\" ----------------------------------------------------------------------------\n.\n.BR udev (8),\n.BR dmsetup (8),\n.BR multipath (8),\n.BR multipathc (8),\n.BR multipathd (8).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1992,
                  "startColumn": 58,
                  "endLine": 1992,
                  "endColumn": 64,
                  "snippet": {
                    "text": "failures, multipathd \\(dqforgets\\(dq one past failure every\n\\(dqsan_path_err_forget_rate\\(dq ticks; thus if errors don't occur more\noften then once in the forget rate interval, the failure count doesn't\nincrease and the threshold is never reached. Ticks are the time between\npath checks by multipathd, which is variable and controlled by the\n\\fIpolling_interval\\fR and \\fImax_polling_interval\\fR parameters.\n.\n",
                    "rendered": {
                      "text": "failures, multipathd \\(dqforgets\\(dq one past failure every\n\\(dqsan_path_err_forget_rate\\(dq ticks; thus if errors don't occur more\noften then once in the forget rate interval, the failure count doesn't\nincrease and the threshold is never reached. Ticks are the time between\npath checks by multipathd, which is variable and controlled by the\n\\fIpolling_interval\\fR and \\fImax_polling_interval\\fR parameters.\n.\n",
                      "markdown": "`failures, multipathd \\(dqforgets\\(dq one past failure every\n\\(dqsan_path_err_forget_rate\\(dq ticks; thus if errors don't occur more\noften then once in the forget rate interval, the failure count doesn't\nincrease and the threshold is never reached. Ticks are the time between\npath checks by multipathd, which is variable and controlled by the\n\\fIpolling_interval\\fR and \\fImax_polling_interval\\fR parameters.\n.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1982,
                  "startColumn": 51,
                  "endLine": 1982,
                  "endColumn": 57,
                  "snippet": {
                    "text": "rate of errors remains below \\fImarginal_path_err_rate_threshold\\fR during the\nmonitoring period, the path is reinstated. Otherwise, it\nis kept in failed state for \\fImarginal_path_err_recheck_gap_time\\fR, and\nafter that, it is monitored again. For this method, time intervals are measured\nin seconds.\n.TP\n.B \\(dqsan_path_err\\(dq failure tracking\n",
                    "rendered": {
                      "text": "rate of errors remains below \\fImarginal_path_err_rate_threshold\\fR during the\nmonitoring period, the path is reinstated. Otherwise, it\nis kept in failed state for \\fImarginal_path_err_recheck_gap_time\\fR, and\nafter that, it is monitored again. For this method, time intervals are measured\nin seconds.\n.TP\n.B \\(dqsan_path_err\\(dq failure tracking\n",
                      "markdown": "`rate of errors remains below \\fImarginal_path_err_rate_threshold\\fR during the\nmonitoring period, the path is reinstated. Otherwise, it\nis kept in failed state for \\fImarginal_path_err_recheck_gap_time\\fR, and\nafter that, it is monitored again. For this method, time intervals are measured\nin seconds.\n.TP\n.B \\(dqsan_path_err\\(dq failure tracking\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1962,
                  "startColumn": 78,
                  "endLine": 1963,
                  "endColumn": 5,
                  "snippet": {
                    "text": "for some time, and only reinstated if the healthy state appears to be stable.\nIf the \\fImarginal_pathgroups\\fR option is set, the path will reinstated\nimmediately, but placed in a special pathgroup for marginal paths. Marginal\npathgroups will not be used until all other pathgroups have been tried. At the\ntime when the path would normally be reinstated, it will be returned to its\nnormal pathgroup. The logic of determining \\(dqshaky\\(dq condition, as well as\nthe logic when to reinstate, differs between the three methods.\n.TP 8\n",
                    "rendered": {
                      "text": "for some time, and only reinstated if the healthy state appears to be stable.\nIf the \\fImarginal_pathgroups\\fR option is set, the path will reinstated\nimmediately, but placed in a special pathgroup for marginal paths. Marginal\npathgroups will not be used until all other pathgroups have been tried. At the\ntime when the path would normally be reinstated, it will be returned to its\nnormal pathgroup. The logic of determining \\(dqshaky\\(dq condition, as well as\nthe logic when to reinstate, differs between the three methods.\n.TP 8\n",
                      "markdown": "`for some time, and only reinstated if the healthy state appears to be stable.\nIf the \\fImarginal_pathgroups\\fR option is set, the path will reinstated\nimmediately, but placed in a special pathgroup for marginal paths. Marginal\npathgroups will not be used until all other pathgroups have been tried. At the\ntime when the path would normally be reinstated, it will be returned to its\nnormal pathgroup. The logic of determining \\(dqshaky\\(dq condition, as well as\nthe logic when to reinstate, differs between the three methods.\n.TP 8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1928,
                  "startColumn": 63,
                  "endLine": 1928,
                  "endColumn": 69,
                  "snippet": {
                    "text": "The WWID is generated by four methods (in the order of preference):\n.TP 17\n.B uid_attrs\nThe WWID is derived from udev attributes by matching the device node name; cf\n\\fIuid_attrs\\fR above.\n.TP\n.B uid_attribute\n",
                    "rendered": {
                      "text": "The WWID is generated by four methods (in the order of preference):\n.TP 17\n.B uid_attrs\nThe WWID is derived from udev attributes by matching the device node name; cf\n\\fIuid_attrs\\fR above.\n.TP\n.B uid_attribute\n",
                      "markdown": "`The WWID is generated by four methods (in the order of preference):\n.TP 17\n.B uid_attrs\nThe WWID is derived from udev attributes by matching the device node name; cf\n\\fIuid_attrs\\fR above.\n.TP\n.B uid_attribute\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1362,
                  "startColumn": 16,
                  "endLine": 1362,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".B ghost_delay\nSets the number of seconds that multipath will wait after creating a device\nwith only ghost paths before marking it ready for use in systemd. This gives\nthe active paths time to appear before the multipath runs the hardware handler\nto switch the ghost paths to active ones. Setting this to \\fI0\\fR or \\fIno\\fR\nmakes multipath immediately mark a device with only ghost paths as ready.\n.RS\n",
                    "rendered": {
                      "text": ".B ghost_delay\nSets the number of seconds that multipath will wait after creating a device\nwith only ghost paths before marking it ready for use in systemd. This gives\nthe active paths time to appear before the multipath runs the hardware handler\nto switch the ghost paths to active ones. Setting this to \\fI0\\fR or \\fIno\\fR\nmakes multipath immediately mark a device with only ghost paths as ready.\n.RS\n",
                      "markdown": "`.B ghost_delay\nSets the number of seconds that multipath will wait after creating a device\nwith only ghost paths before marking it ready for use in systemd. This gives\nthe active paths time to appear before the multipath runs the hardware handler\nto switch the ghost paths to active ones. Setting this to \\fI0\\fR or \\fIno\\fR\nmakes multipath immediately mark a device with only ghost paths as ready.\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1257,
                  "startColumn": 52,
                  "endLine": 1257,
                  "endColumn": 61,
                  "snippet": {
                    "text": "might timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\nIn these cases it is recommended to increase the CLI timeout to avoid\nthose issues.\n.RS\n.TP\n",
                    "rendered": {
                      "text": "might timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\nIn these cases it is recommended to increase the CLI timeout to avoid\nthose issues.\n.RS\n.TP\n",
                      "markdown": "`might timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\nIn these cases it is recommended to increase the CLI timeout to avoid\nthose issues.\n.RS\n.TP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1254,
                  "startColumn": 5,
                  "endLine": 1254,
                  "endColumn": 14,
                  "snippet": {
                    "text": ".TP\n.B uxsock_timeout\nCLI receive timeout in milliseconds. For larger systems CLI commands\nmight timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\nIn these cases it is recommended to increase the CLI timeout to avoid\n",
                    "rendered": {
                      "text": ".TP\n.B uxsock_timeout\nCLI receive timeout in milliseconds. For larger systems CLI commands\nmight timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\nIn these cases it is recommended to increase the CLI timeout to avoid\n",
                      "markdown": "`.TP\n.B uxsock_timeout\nCLI receive timeout in milliseconds. For larger systems CLI commands\nmight timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\nIn these cases it is recommended to increase the CLI timeout to avoid\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1253,
                  "startColumn": 11,
                  "endLine": 1253,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".\n.TP\n.B uxsock_timeout\nCLI receive timeout in milliseconds. For larger systems CLI commands\nmight timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\n",
                    "rendered": {
                      "text": ".\n.TP\n.B uxsock_timeout\nCLI receive timeout in milliseconds. For larger systems CLI commands\nmight timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\n",
                      "markdown": "`.\n.TP\n.B uxsock_timeout\nCLI receive timeout in milliseconds. For larger systems CLI commands\nmight timeout before the multipathd lock is released and the CLI command\ncan be processed. This will result in errors like\n\"timeout receiving packet\" to be returned from CLI commands.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1242,
                  "startColumn": 5,
                  "endLine": 1242,
                  "endColumn": 14,
                  "snippet": {
                    "text": "(recommended), it's only\napplied to \"known\" devices that have an entry in multipath's hardware table,\neither in the built-in table or in a \\fIdevice\\fR section; other (\"unknown\") devices will\nuse a timeout of only 1 second to avoid booting delays. The value 0 means\n\"use the built-in default\". If \\fIfind_multipath\\fR has a value\nother than \\fIsmart\\fR, this option has no effect.\n.RS\n",
                    "rendered": {
                      "text": "(recommended), it's only\napplied to \"known\" devices that have an entry in multipath's hardware table,\neither in the built-in table or in a \\fIdevice\\fR section; other (\"unknown\") devices will\nuse a timeout of only 1 second to avoid booting delays. The value 0 means\n\"use the built-in default\". If \\fIfind_multipath\\fR has a value\nother than \\fIsmart\\fR, this option has no effect.\n.RS\n",
                      "markdown": "`(recommended), it's only\napplied to \"known\" devices that have an entry in multipath's hardware table,\neither in the built-in table or in a \\fIdevice\\fR section; other (\"unknown\") devices will\nuse a timeout of only 1 second to avoid booting delays. The value 0 means\n\"use the built-in default\". If \\fIfind_multipath\\fR has a value\nother than \\fIsmart\\fR, this option has no effect.\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1237,
                  "startColumn": 67,
                  "endLine": 1237,
                  "endColumn": 76,
                  "snippet": {
                    "text": ".B find_multipaths_timeout\nTimeout, in seconds, to wait for additional paths after detecting the first\none, if \\fIfind_multipaths\n\"smart\"\\fR (see above) is set. If the value is \\fBpositive\\fR, this timeout is used for all\nunknown, non-blacklisted devices encountered. If the value is \\fBnegative\\fR\n(recommended), it's only\napplied to \"known\" devices that have an entry in multipath's hardware table,\n",
                    "rendered": {
                      "text": ".B find_multipaths_timeout\nTimeout, in seconds, to wait for additional paths after detecting the first\none, if \\fIfind_multipaths\n\"smart\"\\fR (see above) is set. If the value is \\fBpositive\\fR, this timeout is used for all\nunknown, non-blacklisted devices encountered. If the value is \\fBnegative\\fR\n(recommended), it's only\napplied to \"known\" devices that have an entry in multipath's hardware table,\n",
                      "markdown": "`.B find_multipaths_timeout\nTimeout, in seconds, to wait for additional paths after detecting the first\none, if \\fIfind_multipaths\n\"smart\"\\fR (see above) is set. If the value is \\fBpositive\\fR, this timeout is used for all\nunknown, non-blacklisted devices encountered. If the value is \\fBnegative\\fR\n(recommended), it's only\napplied to \"known\" devices that have an entry in multipath's hardware table,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1222,
                  "startColumn": 23,
                  "endLine": 1223,
                  "endColumn": 8,
                  "snippet": {
                    "text": "detected yet. When such a device is first encountered in udev rules, it is\ntreated as a multipath device. multipathd waits whether additional paths with\nthe same WWID appears. If that happens, it sets up a multipath map. If it\ndoesn\\'t happen until a\ntimeout expires, or if setting up the map fails, a new uevent is triggered for\nthe device; at second encounter in the udev rules, the device will be treated\nas non-multipath and passed on to upper layers.\n\\fBNote:\\fR this may cause delays during device detection if\n",
                    "rendered": {
                      "text": "detected yet. When such a device is first encountered in udev rules, it is\ntreated as a multipath device. multipathd waits whether additional paths with\nthe same WWID appears. If that happens, it sets up a multipath map. If it\ndoesn\\'t happen until a\ntimeout expires, or if setting up the map fails, a new uevent is triggered for\nthe device; at second encounter in the udev rules, the device will be treated\nas non-multipath and passed on to upper layers.\n\\fBNote:\\fR this may cause delays during device detection if\n",
                      "markdown": "`detected yet. When such a device is first encountered in udev rules, it is\ntreated as a multipath device. multipathd waits whether additional paths with\nthe same WWID appears. If that happens, it sets up a multipath map. If it\ndoesn\\'t happen until a\ntimeout expires, or if setting up the map fails, a new uevent is triggered for\nthe device; at second encounter in the udev rules, the device will be treated\nas non-multipath and passed on to upper layers.\n\\fBNote:\\fR this may cause delays during device detection if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1144,
                  "startColumn": 27,
                  "endLine": 1144,
                  "endColumn": 33,
                  "snippet": {
                    "text": "If this is set to a value greater than 0 and no \\fIsan_path_err\\fR options\nare set, \\fIsan_path_err_recovery_time\\fR will be set to the value of\n\\fIdelay_wait_checks\\fR times \\fImax_polling_interval\\fR. This will give\napproximately the same wait time as delay_wait_checks previously did.\nAlso, \\fIsan_path_err_threshold\\fR will be set to 1. See the\n\\fIsan_path_err_recovery_time\\fR and \\fIsan_path_err_threshold\\fR\noptions, and \"Shaky paths detection\" below for more information.\n",
                    "rendered": {
                      "text": "If this is set to a value greater than 0 and no \\fIsan_path_err\\fR options\nare set, \\fIsan_path_err_recovery_time\\fR will be set to the value of\n\\fIdelay_wait_checks\\fR times \\fImax_polling_interval\\fR. This will give\napproximately the same wait time as delay_wait_checks previously did.\nAlso, \\fIsan_path_err_threshold\\fR will be set to 1. See the\n\\fIsan_path_err_recovery_time\\fR and \\fIsan_path_err_threshold\\fR\noptions, and \"Shaky paths detection\" below for more information.\n",
                      "markdown": "`If this is set to a value greater than 0 and no \\fIsan_path_err\\fR options\nare set, \\fIsan_path_err_recovery_time\\fR will be set to the value of\n\\fIdelay_wait_checks\\fR times \\fImax_polling_interval\\fR. This will give\napproximately the same wait time as delay_wait_checks previously did.\nAlso, \\fIsan_path_err_threshold\\fR will be set to 1. See the\n\\fIsan_path_err_recovery_time\\fR and \\fIsan_path_err_threshold\\fR\noptions, and \"Shaky paths detection\" below for more information.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1047,
                  "startColumn": 3,
                  "endLine": 1047,
                  "endColumn": 12,
                  "snippet": {
                    "text": "If set to a value greater than 0, multipathd will make sure that when path failures\nhas exceeded the san_path_err_threshold within san_path_err_forget_rate then the path\nwill be placed in failed state for san_path_err_recovery_time duration.Once san_path_err_recovery_time\nhas timeout  we will reinstate the failed path .\nsan_path_err_recovery_time value should be in secs.\nSee \"Shaky paths detection\" below.\n.RS\n",
                    "rendered": {
                      "text": "If set to a value greater than 0, multipathd will make sure that when path failures\nhas exceeded the san_path_err_threshold within san_path_err_forget_rate then the path\nwill be placed in failed state for san_path_err_recovery_time duration.Once san_path_err_recovery_time\nhas timeout  we will reinstate the failed path .\nsan_path_err_recovery_time value should be in secs.\nSee \"Shaky paths detection\" below.\n.RS\n",
                      "markdown": "`If set to a value greater than 0, multipathd will make sure that when path failures\nhas exceeded the san_path_err_threshold within san_path_err_forget_rate then the path\nwill be placed in failed state for san_path_err_recovery_time duration.Once san_path_err_recovery_time\nhas timeout  we will reinstate the failed path .\nsan_path_err_recovery_time value should be in secs.\nSee \"Shaky paths detection\" below.\n.RS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 49,
                  "endLine": 1018,
                  "endColumn": 56,
                  "snippet": {
                    "text": ".\n.TP\n.B san_path_err_threshold\nIf set to a value greater than 0, multipathd will watch paths and check how many\ntimes a path has been failed due to errors.If the number of failures on a particular\npath is greater than the san_path_err_threshold, then the path will not reinstate\ntill san_path_err_recovery_time. These path failures should occur within a\n",
                    "rendered": {
                      "text": ".\n.TP\n.B san_path_err_threshold\nIf set to a value greater than 0, multipathd will watch paths and check how many\ntimes a path has been failed due to errors.If the number of failures on a particular\npath is greater than the san_path_err_threshold, then the path will not reinstate\ntill san_path_err_recovery_time. These path failures should occur within a\n",
                      "markdown": "`.\n.TP\n.B san_path_err_threshold\nIf set to a value greater than 0, multipathd will watch paths and check how many\ntimes a path has been failed due to errors.If the number of failures on a particular\npath is greater than the san_path_err_threshold, then the path will not reinstate\ntill san_path_err_recovery_time. These path failures should occur within a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 863,
                  "startColumn": 11,
                  "endLine": 863,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".\n.TP\n.B reservation_key\nThis is the service action reservation key used by mpathpersist. It must be\nset for all multipath devices using persistent reservations, and it must be\nthe same as the RESERVATION KEY field of the PERSISTENT RESERVE OUT parameter\nlist which contains an 8-byte value provided by the application client to the\n",
                    "rendered": {
                      "text": ".\n.TP\n.B reservation_key\nThis is the service action reservation key used by mpathpersist. It must be\nset for all multipath devices using persistent reservations, and it must be\nthe same as the RESERVATION KEY field of the PERSISTENT RESERVE OUT parameter\nlist which contains an 8-byte value provided by the application client to the\n",
                      "markdown": "`.\n.TP\n.B reservation_key\nThis is the service action reservation key used by mpathpersist. It must be\nset for all multipath devices using persistent reservations, and it must be\nthe same as the RESERVATION KEY field of the PERSISTENT RESERVE OUT parameter\nlist which contains an 8-byte value provided by the application client to the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 793,
                  "startColumn": 43,
                  "endLine": 793,
                  "endColumn": 52,
                  "snippet": {
                    "text": ".TP\n.B eh_deadline\nSpecify the maximum number of seconds the SCSI layer will spend doing error\nhandling when scsi devices fail. After this timeout the scsi layer will perform\na full HBA reset. Setting this may be necessary in cases where the rport is\nnever lost, so \\fIfast_io_fail_tmo\\fR and \\fIdev_loss_tmo\\fR will never\ntrigger, but (frequently due to load) scsi commands still hang. \\fBNote:\\fR when\n",
                    "rendered": {
                      "text": ".TP\n.B eh_deadline\nSpecify the maximum number of seconds the SCSI layer will spend doing error\nhandling when scsi devices fail. After this timeout the scsi layer will perform\na full HBA reset. Setting this may be necessary in cases where the rport is\nnever lost, so \\fIfast_io_fail_tmo\\fR and \\fIdev_loss_tmo\\fR will never\ntrigger, but (frequently due to load) scsi commands still hang. \\fBNote:\\fR when\n",
                      "markdown": "`.TP\n.B eh_deadline\nSpecify the maximum number of seconds the SCSI layer will spend doing error\nhandling when scsi devices fail. After this timeout the scsi layer will perform\na full HBA reset. Setting this may be necessary in cases where the rport is\nnever lost, so \\fIfast_io_fail_tmo\\fR and \\fIdev_loss_tmo\\fR will never\ntrigger, but (frequently due to load) scsi commands still hang. \\fBNote:\\fR when\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 723,
                  "startColumn": 10,
                  "endLine": 723,
                  "endColumn": 15,
                  "snippet": {
                    "text": ".I unused\n, multipathd will only disable queueing when the last path is removed if\nnothing currently has the multipath device or any of the kpartx partition\ndevices on top of it open.\n.RS\n.TP\nThe default is: \\fBunused\\fR\n",
                    "rendered": {
                      "text": ".I unused\n, multipathd will only disable queueing when the last path is removed if\nnothing currently has the multipath device or any of the kpartx partition\ndevices on top of it open.\n.RS\n.TP\nThe default is: \\fBunused\\fR\n",
                      "markdown": "`.I unused\n, multipathd will only disable queueing when the last path is removed if\nnothing currently has the multipath device or any of the kpartx partition\ndevices on top of it open.\n.RS\n.TP\nThe default is: \\fBunused\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 686,
                  "startColumn": 11,
                  "endLine": 686,
                  "endColumn": 20,
                  "snippet": {
                    "text": ".\n.TP\n.B checker_timeout\nSpecify the timeout to use for path checkers and prioritizers, in seconds.\nOnly prioritizers that issue scsi commands use checker_timeout.  If a path\ndoes not respond to the checker command after \\fIchecker_timeout\\fR\nseconds have elapsed, it is considered down.\n",
                    "rendered": {
                      "text": ".\n.TP\n.B checker_timeout\nSpecify the timeout to use for path checkers and prioritizers, in seconds.\nOnly prioritizers that issue scsi commands use checker_timeout.  If a path\ndoes not respond to the checker command after \\fIchecker_timeout\\fR\nseconds have elapsed, it is considered down.\n",
                      "markdown": "`.\n.TP\n.B checker_timeout\nSpecify the timeout to use for path checkers and prioritizers, in seconds.\nOnly prioritizers that issue scsi commands use checker_timeout.  If a path\ndoes not respond to the checker command after \\fIchecker_timeout\\fR\nseconds have elapsed, it is considered down.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 7,
                  "endLine": 589,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Used to deal with multiple computers accessing the same Active/Passive storage\ndevices. Only perform automatic failback when the first path of a pathgroup\nbecomes active. This keeps a cluster node from automatically failing back when\nanother node requested the failover.\n.TP\n.I values > 0\nDeferred failback (time to defer in seconds).\n",
                    "rendered": {
                      "text": "Used to deal with multiple computers accessing the same Active/Passive storage\ndevices. Only perform automatic failback when the first path of a pathgroup\nbecomes active. This keeps a cluster node from automatically failing back when\nanother node requested the failover.\n.TP\n.I values > 0\nDeferred failback (time to defer in seconds).\n",
                      "markdown": "`Used to deal with multiple computers accessing the same Active/Passive storage\ndevices. Only perform automatic failback when the first path of a pathgroup\nbecomes active. This keeps a cluster node from automatically failing back when\nanother node requested the failover.\n.TP\n.I values > 0\nDeferred failback (time to defer in seconds).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 36,
                  "endLine": 588,
                  "endColumn": 42,
                  "snippet": {
                    "text": ".I followover\nUsed to deal with multiple computers accessing the same Active/Passive storage\ndevices. Only perform automatic failback when the first path of a pathgroup\nbecomes active. This keeps a cluster node from automatically failing back when\nanother node requested the failover.\n.TP\n.I values > 0\n",
                    "rendered": {
                      "text": ".I followover\nUsed to deal with multiple computers accessing the same Active/Passive storage\ndevices. Only perform automatic failback when the first path of a pathgroup\nbecomes active. This keeps a cluster node from automatically failing back when\nanother node requested the failover.\n.TP\n.I values > 0\n",
                      "markdown": "`.I followover\nUsed to deal with multiple computers accessing the same Active/Passive storage\ndevices. Only perform automatic failback when the first path of a pathgroup\nbecomes active. This keeps a cluster node from automatically failing back when\nanother node requested the failover.\n.TP\n.I values > 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 24,
                  "endLine": 471,
                  "endColumn": 28,
                  "snippet": {
                    "text": ".RS\n.TP 8\n.I preferredip=...\n(Mandatory) Th preferred IP address, in dotted decimal notation, for iSCSI targets.\n.RE\n.TP\nThe default is: \\fB<unset>\\fR\n",
                    "rendered": {
                      "text": ".RS\n.TP 8\n.I preferredip=...\n(Mandatory) Th preferred IP address, in dotted decimal notation, for iSCSI targets.\n.RE\n.TP\nThe default is: \\fB<unset>\\fR\n",
                      "markdown": "`.RS\n.TP 8\n.I preferredip=...\n(Mandatory) Th preferred IP address, in dotted decimal notation, for iSCSI targets.\n.RE\n.TP\nThe default is: \\fB<unset>\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 14,
                  "endLine": 464,
                  "endColumn": 23,
                  "snippet": {
                    "text": "(Mandatory) The preferred \"SDS name\".\n.TP\n.I timeout\n(Optional) The timeout for the INQUIRY, in ms.\n.RE\n.TP 12\n.I iet\n",
                    "rendered": {
                      "text": "(Mandatory) The preferred \"SDS name\".\n.TP\n.I timeout\n(Optional) The timeout for the INQUIRY, in ms.\n.RE\n.TP 12\n.I iet\n",
                      "markdown": "`(Mandatory) The preferred \"SDS name\".\n.TP\n.I timeout\n(Optional) The timeout for the INQUIRY, in ms.\n.RE\n.TP 12\n.I iet\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 463,
                  "startColumn": 2,
                  "endLine": 464,
                  "snippet": {
                    "text": ".I preferredsds\n(Mandatory) The preferred \"SDS name\".\n.TP\n.I timeout\n(Optional) The timeout for the INQUIRY, in ms.\n.RE\n.TP 12\n.I iet\n",
                    "rendered": {
                      "text": ".I preferredsds\n(Mandatory) The preferred \"SDS name\".\n.TP\n.I timeout\n(Optional) The timeout for the INQUIRY, in ms.\n.RE\n.TP 12\n.I iet\n",
                      "markdown": "`.I preferredsds\n(Mandatory) The preferred \"SDS name\".\n.TP\n.I timeout\n(Optional) The timeout for the INQUIRY, in ms.\n.RE\n.TP 12\n.I iet\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 49,
                  "endLine": 396,
                  "endColumn": 53,
                  "snippet": {
                    "text": ".TP\n.I iet\n(iSCSI only)\nGenerate path priority for iSCSI targets based on IP address. Requires\nprio_args keyword.\n.PP\nThe default depends on the \\fBdetect_prio\\fR setting: If \\fBdetect_prio\\fR is\n",
                    "rendered": {
                      "text": ".TP\n.I iet\n(iSCSI only)\nGenerate path priority for iSCSI targets based on IP address. Requires\nprio_args keyword.\n.PP\nThe default depends on the \\fBdetect_prio\\fR setting: If \\fBdetect_prio\\fR is\n",
                      "markdown": "`.TP\n.I iet\n(iSCSI only)\nGenerate path priority for iSCSI targets based on IP address. Requires\nprio_args keyword.\n.PP\nThe default depends on the \\fBdetect_prio\\fR setting: If \\fBdetect_prio\\fR is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 51,
                  "endLine": 297,
                  "endColumn": 5,
                  "snippet": {
                    "text": "of the device node name (e.g. \\fIsd:ATTR\\fR matches \\fIsda\\fR), and\n\\fIATTR\\fR is the name of the udev property to use for matching devices.\n.PP\nIf this option is configured and matches the device\nnode name of a device, it overrides any other configured  methods for\ndetermining the WWID for this device.\n.PP\nThis option cannot be changed during runtime with the multipathd \\fBreconfigure\\fR command.\n",
                    "rendered": {
                      "text": "of the device node name (e.g. \\fIsd:ATTR\\fR matches \\fIsda\\fR), and\n\\fIATTR\\fR is the name of the udev property to use for matching devices.\n.PP\nIf this option is configured and matches the device\nnode name of a device, it overrides any other configured  methods for\ndetermining the WWID for this device.\n.PP\nThis option cannot be changed during runtime with the multipathd \\fBreconfigure\\fR command.\n",
                      "markdown": "`of the device node name (e.g. \\fIsd:ATTR\\fR matches \\fIsda\\fR), and\n\\fIATTR\\fR is the name of the udev property to use for matching devices.\n.PP\nIf this option is configured and matches the device\nnode name of a device, it overrides any other configured  methods for\ndetermining the WWID for this device.\n.PP\nThis option cannot be changed during runtime with the multipathd \\fBreconfigure\\fR command.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 13,
                  "endLine": 293,
                  "endColumn": 19,
                  "snippet": {
                    "text": ".PP\nThe value of this option is a space separated list of records like\n\\(dq\\fItype:ATTR\\fR\\(dq, where \\fItype\\fR is matched against the beginning\nof the device node name (e.g. \\fIsd:ATTR\\fR matches \\fIsda\\fR), and\n\\fIATTR\\fR is the name of the udev property to use for matching devices.\n.PP\nIf this option is configured and matches the device\n",
                    "rendered": {
                      "text": ".PP\nThe value of this option is a space separated list of records like\n\\(dq\\fItype:ATTR\\fR\\(dq, where \\fItype\\fR is matched against the beginning\nof the device node name (e.g. \\fIsd:ATTR\\fR matches \\fIsda\\fR), and\n\\fIATTR\\fR is the name of the udev property to use for matching devices.\n.PP\nIf this option is configured and matches the device\n",
                      "markdown": "`.PP\nThe value of this option is a space separated list of records like\n\\(dq\\fItype:ATTR\\fR\\(dq, where \\fItype\\fR is matched against the beginning\nof the device node name (e.g. \\fIsd:ATTR\\fR matches \\fIsda\\fR), and\n\\fIATTR\\fR is the name of the udev property to use for matching devices.\n.PP\nIf this option is configured and matches the device\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 47,
                  "endLine": 242,
                  "endColumn": 53,
                  "snippet": {
                    "text": "per-multipath option in the configuration file.\n.TP\n.I group_by_node_name\nOne priority group per target node name. Target node names are fetched\nin \\fI/sys/class/fc_transport/target*/node_name\\fR.\n.TP\n.I group_by_tpg\n",
                    "rendered": {
                      "text": "per-multipath option in the configuration file.\n.TP\n.I group_by_node_name\nOne priority group per target node name. Target node names are fetched\nin \\fI/sys/class/fc_transport/target*/node_name\\fR.\n.TP\n.I group_by_tpg\n",
                      "markdown": "`per-multipath option in the configuration file.\n.TP\n.I group_by_node_name\nOne priority group per target node name. Target node names are fetched\nin \\fI/sys/class/fc_transport/target*/node_name\\fR.\n.TP\n.I group_by_tpg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 29,
                  "endLine": 242,
                  "endColumn": 35,
                  "snippet": {
                    "text": "per-multipath option in the configuration file.\n.TP\n.I group_by_node_name\nOne priority group per target node name. Target node names are fetched\nin \\fI/sys/class/fc_transport/target*/node_name\\fR.\n.TP\n.I group_by_tpg\n",
                    "rendered": {
                      "text": "per-multipath option in the configuration file.\n.TP\n.I group_by_node_name\nOne priority group per target node name. Target node names are fetched\nin \\fI/sys/class/fc_transport/target*/node_name\\fR.\n.TP\n.I group_by_tpg\n",
                      "markdown": "`per-multipath option in the configuration file.\n.TP\n.I group_by_node_name\nOne priority group per target node name. Target node names are fetched\nin \\fI/sys/class/fc_transport/target*/node_name\\fR.\n.TP\n.I group_by_tpg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/multipath/multipath.conf.5.in"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 20,
                  "endLine": 214,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".TP\n.I \"historical-service-time 0\"\n(Since 5.8 kernel) Choose the path for the next bunch of I/O based on the\nestimation of future service time based on the history of previous I/O submitted\nto each path.\n.TP\nThe default is: \\fBservice-time 0\\fR\n",
                    "rendered": {
                      "text": ".TP\n.I \"historical-service-time 0\"\n(Since 5.8 kernel) Choose the path for the next bunch of I/O based on the\nestimation of future service time based on the history of previous I/O submitted\nto each path.\n.TP\nThe default is: \\fBservice-time 0\\fR\n",
                      "markdown": "`.TP\n.I \"historical-service-time 0\"\n(Since 5.8 kernel) Choose the path for the next bunch of I/O based on the\nestimation of future service time based on the history of previous I/O submitted\nto each path.\n.TP\nThe default is: \\fBservice-time 0\\fR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/multipath-tools.zip/.mailmap"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 8,
                  "endLine": 3,
                  "endColumn": 13,
                  "snippet": {
                    "text": "#\n# This list is used by git-shortlog to fix a few botched name translations\n# in the git archive, either because the author's full name was messed up\n# and/or not always written the same way, making contributions from the\n# same person appearing not to be so or badly displayed. Also allows for\n# old email addresses to map to new email addresses.\n",
                    "rendered": {
                      "text": "#\n# This list is used by git-shortlog to fix a few botched name translations\n# in the git archive, either because the author's full name was messed up\n# and/or not always written the same way, making contributions from the\n# same person appearing not to be so or badly displayed. Also allows for\n# old email addresses to map to new email addresses.\n",
                      "markdown": "`#\n# This list is used by git-shortlog to fix a few botched name translations\n# in the git archive, either because the author's full name was messed up\n# and/or not always written the same way, making contributions from the\n# same person appearing not to be so or badly displayed. Also allows for\n# old email addresses to map to new email addresses.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}