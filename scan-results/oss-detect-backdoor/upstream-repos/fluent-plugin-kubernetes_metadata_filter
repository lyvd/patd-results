{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-marshal-02/results.html"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "endLine": 77,
                  "snippet": {
                    "text": "&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-ksowqntt_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n",
                    "rendered": {
                      "text": "&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-ksowqntt_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n",
                      "markdown": "`&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-ksowqntt_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-marshal-02/results.html"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40,
                  "endLine": 12,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n",
                    "rendered": {
                      "text": "  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n",
                      "markdown": "`  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/valid_kubernetes_api_server_using_token.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/valid_kubernetes_api_server_using_token.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/valid_kubernetes_api_server_using_token.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_and_journald_fields.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_and_journald_fields.yml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 7,
                  "endLine": 118,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_and_journald_fields.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_and_journald_fields.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/valid_kubernetes_api_server.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/valid_kubernetes_api_server.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/valid_kubernetes_api_server.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_namespace_default.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_namespace_default.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_namespace_default.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_annotations.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_annotations.yml"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 7,
                  "endLine": 167,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_annotations.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_annotations.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_journald_and_kubernetes_fields.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_journald_and_kubernetes_fields.yml"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 7,
                  "endLine": 250,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_journald_and_kubernetes_fields.yml"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 7,
                  "endLine": 166,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_journald_and_kubernetes_fields.yml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 7,
                  "endLine": 118,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_journald_and_kubernetes_fields.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/metadata_from_tag_journald_and_kubernetes_fields.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/release_notes.md"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 20,
                  "endLine": 40,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  replace_invalid_sequence true\n  reserve_data true # this preserves unparsable log lines\n  emit_invalid_record_to_error false # In case of unparsable log lines keep the error log clean\n  reserve_time # the time was already parsed in the source, we don't want to overwrite it with current time.\n</filter>\n```\n",
                    "rendered": {
                      "text": "  replace_invalid_sequence true\n  reserve_data true # this preserves unparsable log lines\n  emit_invalid_record_to_error false # In case of unparsable log lines keep the error log clean\n  reserve_time # the time was already parsed in the source, we don't want to overwrite it with current time.\n</filter>\n```\n",
                      "markdown": "`  replace_invalid_sequence true\n  reserve_data true # this preserves unparsable log lines\n  emit_invalid_record_to_error false # In case of unparsable log lines keep the error log clean\n  reserve_time # the time was already parsed in the source, we don't want to overwrite it with current time.\n</filter>\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 824,
                  "startColumn": 28,
                  "endLine": 824,
                  "endColumn": 94,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 787,
                  "startColumn": 28,
                  "endLine": 787,
                  "endColumn": 94,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 28,
                  "endLine": 753,
                  "endColumn": 94,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 28,
                  "endLine": 724,
                  "endColumn": 94,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 683,
                  "startColumn": 30,
                  "endLine": 683,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 30,
                  "endLine": 638,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 30,
                  "endLine": 597,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 30,
                  "endLine": 559,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 26,
                  "endLine": 522,
                  "endColumn": 92,
                  "snippet": {
                    "text": "      filtered = emit_with_tag('var.log.containers.fabric8-console-controller.98rqc_default_fabric8-console-container-49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459.log', {}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller.98rqc',\n",
                    "rendered": {
                      "text": "      filtered = emit_with_tag('var.log.containers.fabric8-console-controller.98rqc_default_fabric8-console-container-49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459.log', {}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller.98rqc',\n",
                      "markdown": "`      filtered = emit_with_tag('var.log.containers.fabric8-console-controller.98rqc_default_fabric8-console-container-49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459.log', {}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller.98rqc',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 26,
                  "endLine": 499,
                  "endColumn": 92,
                  "snippet": {
                    "text": "      filtered = emit\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller-98rqc',\n",
                    "rendered": {
                      "text": "      filtered = emit\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller-98rqc',\n",
                      "markdown": "`      filtered = emit\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller-98rqc',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 26,
                  "endLine": 477,
                  "endColumn": 92,
                  "snippet": {
                    "text": "      filtered = emit({}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller-98rqc',\n",
                    "rendered": {
                      "text": "      filtered = emit({}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller-98rqc',\n",
                      "markdown": "`      filtered = emit({}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n          'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n        },\n        'kubernetes' => {\n          'pod_name' => 'fabric8-console-controller-98rqc',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 30,
                  "endLine": 451,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 30,
                  "endLine": 415,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        ')\n        expected_kube_metadata = {\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 30,
                  "endLine": 362,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 30,
                  "endLine": 329,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                    "rendered": {
                      "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n",
                      "markdown": "`        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'host' => 'jimmi-redhat.localnet',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 14,
                  "endLine": 321,
                  "endColumn": 80,
                  "snippet": {
                    "text": "          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n        cache['49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'] = {\n          pod_id: 'c76927af-f563-11e4-b32d-54ee7527188d',\n          namespace_id: '898268c8-4a36-11e5-9d81-42010af0194c'\n        }\n",
                    "rendered": {
                      "text": "          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n        cache['49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'] = {\n          pod_id: 'c76927af-f563-11e4-b32d-54ee7527188d',\n          namespace_id: '898268c8-4a36-11e5-9d81-42010af0194c'\n        }\n",
                      "markdown": "`          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n        cache['49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'] = {\n          pod_id: 'c76927af-f563-11e4-b32d-54ee7527188d',\n          namespace_id: '898268c8-4a36-11e5-9d81-42010af0194c'\n        }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 30,
                  "endLine": 298,
                  "endColumn": 96,
                  "snippet": {
                    "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'pod_name' => 'fabric8-console-controller-98rqc',\n",
                    "rendered": {
                      "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'pod_name' => 'fabric8-console-controller-98rqc',\n",
                      "markdown": "`        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker' => {\n            'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'pod_name' => 'fabric8-console-controller-98rqc',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 14,
                  "endLine": 288,
                  "endColumn": 80,
                  "snippet": {
                    "text": "          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n        cache['49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'] = {\n          pod_id: 'c76927af-f563-11e4-b32d-54ee7527188d',\n          namespace_id: '898268c8-4a36-11e5-9d81-42010af0194c'\n        }\n",
                    "rendered": {
                      "text": "          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n        cache['49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'] = {\n          pod_id: 'c76927af-f563-11e4-b32d-54ee7527188d',\n          namespace_id: '898268c8-4a36-11e5-9d81-42010af0194c'\n        }\n",
                      "markdown": "`          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n        cache['49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'] = {\n          pod_id: 'c76927af-f563-11e4-b32d-54ee7527188d',\n          namespace_id: '898268c8-4a36-11e5-9d81-42010af0194c'\n        }\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 28,
                  "endLine": 266,
                  "endColumn": 94,
                  "snippet": {
                    "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'pod_name' => 'fabric8-console-controller-98rqc',\n",
                    "rendered": {
                      "text": "        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'pod_name' => 'fabric8-console-controller-98rqc',\n",
                      "markdown": "`        expected_kube_metadata = {\n          'time' => '2015-05-08T09:22:01Z',\n          'docker'=>{\n            'container_id'=>'49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n          },\n          'kubernetes' => {\n            'pod_name' => 'fabric8-console-controller-98rqc',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 32,
                  "endLine": 193,
                  "endColumn": 98,
                  "snippet": {
                    "text": "          \")\n          expected_kube_metadata = {\n            'docker' => {\n              'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n            },\n            'kubernetes' => {\n              'container_image'=>'fabric8/hawtio-kubernetes:latest',\n",
                    "rendered": {
                      "text": "          \")\n          expected_kube_metadata = {\n            'docker' => {\n              'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n            },\n            'kubernetes' => {\n              'container_image'=>'fabric8/hawtio-kubernetes:latest',\n",
                      "markdown": "`          \")\n          expected_kube_metadata = {\n            'docker' => {\n              'container_id' => '49095a2894da899d3b327c5fde1e056a81376cc9a8f8b09a195f2a92bceed459'\n            },\n            'kubernetes' => {\n              'container_image'=>'fabric8/hawtio-kubernetes:latest',\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 38,
                  "endLine": 12,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 9,
                  "endLine": 815,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_pod_labels true\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_pod_labels true\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_pod_labels true\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 808,
                  "startColumn": 14,
                  "endLine": 808,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        assert_equal(expected_kube_metadata, filtered[0])\n      end\n    end\n    test 'with docker & kubernetes metadata using include ownerrefs metadata' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' },\n                         { name: 'kubernetes_get_api_v1' },\n                         { name: 'kubernetes_get_pod_with_ownerrefs' },\n",
                    "rendered": {
                      "text": "        assert_equal(expected_kube_metadata, filtered[0])\n      end\n    end\n    test 'with docker & kubernetes metadata using include ownerrefs metadata' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' },\n                         { name: 'kubernetes_get_api_v1' },\n                         { name: 'kubernetes_get_pod_with_ownerrefs' },\n",
                      "markdown": "`        assert_equal(expected_kube_metadata, filtered[0])\n      end\n    end\n    test 'with docker & kubernetes metadata using include ownerrefs metadata' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' },\n                         { name: 'kubernetes_get_api_v1' },\n                         { name: 'kubernetes_get_pod_with_ownerrefs' },\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 779,
                  "startColumn": 9,
                  "endLine": 779,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_pod_labels true\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_pod_labels true\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_pod_labels true\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 14,
                  "endLine": 774,
                  "endColumn": 22,
                  "snippet": {
                    "text": "        assert_equal(expected_kube_metadata, filtered[0])\n      end\n    end\n    test 'with docker & kubernetes metadata using skip pod labels config param' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n",
                    "rendered": {
                      "text": "        assert_equal(expected_kube_metadata, filtered[0])\n      end\n    end\n    test 'with docker & kubernetes metadata using skip pod labels config param' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n",
                      "markdown": "`        assert_equal(expected_kube_metadata, filtered[0])\n      end\n    end\n    test 'with docker & kubernetes metadata using skip pod labels config param' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 9,
                  "endLine": 745,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_namespace_labels true\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_namespace_labels true\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n          skip_namespace_labels true\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 14,
                  "endLine": 740,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata using skip namespace labels config param' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata using skip namespace labels config param' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata using skip namespace labels config param' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 715,
                  "startColumn": 9,
                  "endLine": 715,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          skip_labels true\n          skip_container_metadata true\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          skip_labels true\n          skip_container_metadata true\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          skip_labels true\n          skip_container_metadata true\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 710,
                  "startColumn": 14,
                  "endLine": 710,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata using skip config params' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata using skip config params' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata using skip config params' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 9,
                  "endLine": 671,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n        ')\n",
                    "rendered": {
                      "text": "\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n        ')\n",
                      "markdown": "`\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          stats_interval 0\n        ')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 632,
                  "startColumn": 9,
                  "endLine": 632,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"noMatch*\"]\n        ')\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"noMatch*\"]\n        ')\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"noMatch*\"]\n        ')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 591,
                  "startColumn": 9,
                  "endLine": 591,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"^custom.+\", \"two\", \"workspace*\"]\n        ')\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"^custom.+\", \"two\", \"workspace*\"]\n        ')\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"^custom.+\", \"two\", \"workspace*\"]\n        ')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 553,
                  "startColumn": 9,
                  "endLine": 553,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"^custom.+\", \"two\"]\n        ')\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"^custom.+\", \"two\"]\n        ')\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n          annotation_match [ \"^custom.+\", \"two\"]\n        ')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 533,
                  "startColumn": 14,
                  "endLine": 533,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      assert_equal(expected_kube_metadata, filtered[0])\n    end\n\n    test 'with docker metadata, non-kubernetes' do\n      filtered = emit_with_tag('non-kubernetes', {}, '')\n      assert_false(filtered[0].key?(:kubernetes))\n    end\n",
                    "rendered": {
                      "text": "      assert_equal(expected_kube_metadata, filtered[0])\n    end\n\n    test 'with docker metadata, non-kubernetes' do\n      filtered = emit_with_tag('non-kubernetes', {}, '')\n      assert_false(filtered[0].key?(:kubernetes))\n    end\n",
                      "markdown": "`      assert_equal(expected_kube_metadata, filtered[0])\n    end\n\n    test 'with docker metadata, non-kubernetes' do\n      filtered = emit_with_tag('non-kubernetes', {}, '')\n      assert_false(filtered[0].key?(:kubernetes))\n    end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 14,
                  "endLine": 488,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      assert_equal(expected_kube_metadata, filtered[0])\n    end\n\n    test 'with docker & inaccessible kubernetes metadata' do\n      stub_request(:any, 'https://localhost:8443/api').to_return(\n        'body' => {\n          'versions' => ['v1beta3', 'v1']\n",
                    "rendered": {
                      "text": "      assert_equal(expected_kube_metadata, filtered[0])\n    end\n\n    test 'with docker & inaccessible kubernetes metadata' do\n      stub_request(:any, 'https://localhost:8443/api').to_return(\n        'body' => {\n          'versions' => ['v1beta3', 'v1']\n",
                      "markdown": "`      assert_equal(expected_kube_metadata, filtered[0])\n    end\n\n    test 'with docker & inaccessible kubernetes metadata' do\n      stub_request(:any, 'https://localhost:8443/api').to_return(\n        'body' => {\n          'versions' => ['v1beta3', 'v1']\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 14,
                  "endLine": 473,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata but no configured api server' do\n      filtered = emit({}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata but no configured api server' do\n      filtered = emit({}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata but no configured api server' do\n      filtered = emit({}, '')\n      expected_kube_metadata = {\n        'docker'=>{\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 446,
                  "startColumn": 9,
                  "endLine": 446,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          verify_ssl false\n          watch false\n          bearer_token_file test/plugin/test.token\n        ')\n        expected_kube_metadata = {\n",
                    "rendered": {
                      "text": "        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          verify_ssl false\n          watch false\n          bearer_token_file test/plugin/test.token\n        ')\n        expected_kube_metadata = {\n",
                      "markdown": "`        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          verify_ssl false\n          watch false\n          bearer_token_file test/plugin/test.token\n        ')\n        expected_kube_metadata = {\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 14,
                  "endLine": 440,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata using bearer token' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server_using_token' }, { name: 'kubernetes_get_api_v1_using_token' },\n                         { name: 'kubernetes_get_pod_using_token' }, { name: 'kubernetes_get_namespace_default_using_token' }]) do\n        filtered = emit({}, '\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata using bearer token' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server_using_token' }, { name: 'kubernetes_get_api_v1_using_token' },\n                         { name: 'kubernetes_get_pod_using_token' }, { name: 'kubernetes_get_namespace_default_using_token' }]) do\n        filtered = emit({}, '\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata using bearer token' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server_using_token' }, { name: 'kubernetes_get_api_v1_using_token' },\n                         { name: 'kubernetes_get_pod_using_token' }, { name: 'kubernetes_get_namespace_default_using_token' }]) do\n        filtered = emit({}, '\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 9,
                  "endLine": 410,
                  "endColumn": 16,
                  "snippet": {
                    "text": "                         { name: 'kubernetes_get_namespace_default', options: { allow_playback_repeats: true } }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        expected_kube_metadata = {\n",
                    "rendered": {
                      "text": "                         { name: 'kubernetes_get_namespace_default', options: { allow_playback_repeats: true } }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        expected_kube_metadata = {\n",
                      "markdown": "`                         { name: 'kubernetes_get_namespace_default', options: { allow_playback_repeats: true } }]) do\n        filtered = emit({}, '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        expected_kube_metadata = {\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 405,
                  "startColumn": 14,
                  "endLine": 405,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata & namespace_id enabled' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default', options: { allow_playback_repeats: true } }]) do\n        filtered = emit({}, '\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata & namespace_id enabled' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default', options: { allow_playback_repeats: true } }]) do\n        filtered = emit({}, '\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata & namespace_id enabled' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' },\n                         { name: 'kubernetes_get_namespace_default', options: { allow_playback_repeats: true } }]) do\n        filtered = emit({}, '\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 9,
                  "endLine": 394,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1')\n        d.run(default_tag: VAR_LOG_POD_TAG) do\n          d.feed(@time, { 'time' => '2015-05-08T09:22:01Z' })\n",
                    "rendered": {
                      "text": "\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1')\n        d.run(default_tag: VAR_LOG_POD_TAG) do\n          d.feed(@time, { 'time' => '2015-05-08T09:22:01Z' })\n",
                      "markdown": "`\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1')\n        d.run(default_tag: VAR_LOG_POD_TAG) do\n          d.feed(@time, { 'time' => '2015-05-08T09:22:01Z' })\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 14,
                  "endLine": 355,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata' do\n\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({ 'time' => '2015-05-08T09:22:01Z' })\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata' do\n\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({ 'time' => '2015-05-08T09:22:01Z' })\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata' do\n\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        filtered = emit({ 'time' => '2015-05-08T09:22:01Z' })\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 9,
                  "endLine": 317,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n",
                    "rendered": {
                      "text": "      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n",
                      "markdown": "`      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 14,
                  "endLine": 313,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata where id cache hit and metadata is reloaded' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata where id cache hit and metadata is reloaded' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata where id cache hit and metadata is reloaded' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }, { name: 'kubernetes_get_pod' }, { name: 'kubernetes_get_namespace_default' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 9,
                  "endLine": 284,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n",
                    "rendered": {
                      "text": "      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n",
                      "markdown": "`      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        cache = driver.instance.instance_variable_get(:@id_cache)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 14,
                  "endLine": 280,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata where id cache hit and metadata miss' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n",
                    "rendered": {
                      "text": "      end\n    end\n\n    test 'with docker & kubernetes metadata where id cache hit and metadata miss' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n",
                      "markdown": "`      end\n    end\n\n    test 'with docker & kubernetes metadata where id cache hit and metadata miss' do\n      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 9,
                  "endLine": 257,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        stub_request(:any, 'https://localhost:8443/api/v1/namespaces/default/pods/fabric8-console-controller-98rqc').to_raise(SocketError.new('error from pod fetch'))\n",
                    "rendered": {
                      "text": "      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        stub_request(:any, 'https://localhost:8443/api/v1/namespaces/default/pods/fabric8-console-controller-98rqc').to_raise(SocketError.new('error from pod fetch'))\n",
                      "markdown": "`      VCR.use_cassettes([{ name: 'valid_kubernetes_api_server' }, { name: 'kubernetes_get_api_v1' }]) do\n        driver = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        stub_request(:any, 'https://localhost:8443/api/v1/namespaces/default/pods/fabric8-console-controller-98rqc').to_raise(SocketError.new('error from pod fetch'))\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 11,
                  "endLine": 226,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          ]) do\n          filtered = emit_with_tag(VAR_LOG_POD_TAG,{}, \"\n            kubernetes_url https://localhost:8443\n            watch false\n            cache_size 1\n          \")\n          expected_kube_metadata = {\n",
                    "rendered": {
                      "text": "          ]) do\n          filtered = emit_with_tag(VAR_LOG_POD_TAG,{}, \"\n            kubernetes_url https://localhost:8443\n            watch false\n            cache_size 1\n          \")\n          expected_kube_metadata = {\n",
                      "markdown": "`          ]) do\n          filtered = emit_with_tag(VAR_LOG_POD_TAG,{}, \"\n            kubernetes_url https://localhost:8443\n            watch false\n            cache_size 1\n          \")\n          expected_kube_metadata = {\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 11,
                  "endLine": 188,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          ]) do\n          filtered = emit({}, \"\n            kubernetes_url https://localhost:8443\n            watch false\n            cache_size 1\n          \")\n          expected_kube_metadata = {\n",
                    "rendered": {
                      "text": "          ]) do\n          filtered = emit({}, \"\n            kubernetes_url https://localhost:8443\n            watch false\n            cache_size 1\n          \")\n          expected_kube_metadata = {\n",
                      "markdown": "`          ]) do\n          filtered = emit({}, \"\n            kubernetes_url https://localhost:8443\n            watch false\n            cache_size 1\n          \")\n          expected_kube_metadata = {\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 9,
                  "endLine": 167,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n    def emit_with_tag(tag, msg = {}, config = '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n      d = create_driver(config)\n",
                    "rendered": {
                      "text": "\n    def emit_with_tag(tag, msg = {}, config = '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n      d = create_driver(config)\n",
                      "markdown": "`\n    def emit_with_tag(tag, msg = {}, config = '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n      d = create_driver(config)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 9,
                  "endLine": 155,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  sub_test_case 'filter' do\n    def emit(msg = {}, config = '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ', d: nil)\n      d = create_driver(config) if d.nil?\n",
                    "rendered": {
                      "text": "  sub_test_case 'filter' do\n    def emit(msg = {}, config = '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ', d: nil)\n      d = create_driver(config) if d.nil?\n",
                      "markdown": "`  sub_test_case 'filter' do\n    def emit(msg = {}, config = '\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ', d: nil)\n      d = create_driver(config) if d.nil?\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 13,
                  "endLine": 138,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n        Dir.mktmpdir do |dir|\n          d = create_driver(\"\n              watch false\n              secret_dir #{dir}\n            \")\n          assert_equal(d.instance.kubernetes_url, 'https://localhost:8443/api')\n",
                    "rendered": {
                      "text": "\n        Dir.mktmpdir do |dir|\n          d = create_driver(\"\n              watch false\n              secret_dir #{dir}\n            \")\n          assert_equal(d.instance.kubernetes_url, 'https://localhost:8443/api')\n",
                      "markdown": "`\n        Dir.mktmpdir do |dir|\n          d = create_driver(\"\n              watch false\n              secret_dir #{dir}\n            \")\n          assert_equal(d.instance.kubernetes_url, 'https://localhost:8443/api')\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 13,
                  "endLine": 117,
                  "endColumn": 20,
                  "snippet": {
                    "text": "          File.open(expected_token_path, 'w')\n\n          d = create_driver(\"\n              watch false\n              secret_dir #{dir}\n            \")\n\n",
                    "rendered": {
                      "text": "          File.open(expected_token_path, 'w')\n\n          d = create_driver(\"\n              watch false\n              secret_dir #{dir}\n            \")\n\n",
                      "markdown": "`          File.open(expected_token_path, 'w')\n\n          d = create_driver(\"\n              watch false\n              secret_dir #{dir}\n            \")\n\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 11,
                  "endLine": 96,
                  "endColumn": 18,
                  "snippet": {
                    "text": "          create_driver('\n            kubernetes_url https://localhost:8443\n            bearer_token_file test/plugin/test.token\n            watch false\n            verify_ssl false\n          ')\n        end\n",
                    "rendered": {
                      "text": "          create_driver('\n            kubernetes_url https://localhost:8443\n            bearer_token_file test/plugin/test.token\n            watch false\n            verify_ssl false\n          ')\n        end\n",
                      "markdown": "`          create_driver('\n            kubernetes_url https://localhost:8443\n            bearer_token_file test/plugin/test.token\n            watch false\n            verify_ssl false\n          ')\n        end\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 9,
                  "endLine": 82,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      VCR.use_cassette('valid_kubernetes_api_server') do\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        assert_equal('https://localhost:8443', d.instance.kubernetes_url)\n",
                    "rendered": {
                      "text": "      VCR.use_cassette('valid_kubernetes_api_server') do\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        assert_equal('https://localhost:8443', d.instance.kubernetes_url)\n",
                      "markdown": "`      VCR.use_cassette('valid_kubernetes_api_server') do\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n          cache_size 1\n        ')\n        assert_equal('https://localhost:8443', d.instance.kubernetes_url)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 9,
                  "endLine": 71,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      VCR.use_cassette('valid_kubernetes_api_server') do\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n        ')\n        assert_equal('https://localhost:8443', d.instance.kubernetes_url)\n        assert_equal(1000, d.instance.cache_size)\n",
                    "rendered": {
                      "text": "      VCR.use_cassette('valid_kubernetes_api_server') do\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n        ')\n        assert_equal('https://localhost:8443', d.instance.kubernetes_url)\n        assert_equal(1000, d.instance.cache_size)\n",
                      "markdown": "`      VCR.use_cassette('valid_kubernetes_api_server') do\n        d = create_driver('\n          kubernetes_url https://localhost:8443\n          watch false\n        ')\n        assert_equal('https://localhost:8443', d.instance.kubernetes_url)\n        assert_equal(1000, d.instance.cache_size)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 16,
                  "endLine": 7,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_pods.rb"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 70,
                  "endLine": 114,
                  "endColumn": 77,
                  "snippet": {
                    "text": "    def start_pod_watch\n      get_pods_and_start_watcher\n    rescue StandardError => e\n      message = 'start_pod_watch: Exception encountered setting up pod watch ' \\\n                \"from Kubernetes API #{@apiVersion} endpoint \" \\\n                \"#{@kubernetes_url}: #{e.message}\"\n      message += \" (#{e.response})\" if e.respond_to?(:response)\n",
                    "rendered": {
                      "text": "    def start_pod_watch\n      get_pods_and_start_watcher\n    rescue StandardError => e\n      message = 'start_pod_watch: Exception encountered setting up pod watch ' \\\n                \"from Kubernetes API #{@apiVersion} endpoint \" \\\n                \"#{@kubernetes_url}: #{e.message}\"\n      message += \" (#{e.response})\" if e.respond_to?(:response)\n",
                      "markdown": "`    def start_pod_watch\n      get_pods_and_start_watcher\n    rescue StandardError => e\n      message = 'start_pod_watch: Exception encountered setting up pod watch ' \\\n                \"from Kubernetes API #{@apiVersion} endpoint \" \\\n                \"#{@kubernetes_url}: #{e.message}\"\n      message += \" (#{e.response})\" if e.respond_to?(:response)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_pods.rb"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 46,
                  "endLine": 102,
                  "endColumn": 53,
                  "snippet": {
                    "text": "          # Since retries failed for many times, log as errors instead\n          # of info and raise exceptions and trigger Fluentd to restart.\n          message =\n            'Exception encountered parsing pod watch event. The ' \\\n            'connection might have been closed. Retried ' \\\n            \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n          log.error(message, e)\n",
                    "rendered": {
                      "text": "          # Since retries failed for many times, log as errors instead\n          # of info and raise exceptions and trigger Fluentd to restart.\n          message =\n            'Exception encountered parsing pod watch event. The ' \\\n            'connection might have been closed. Retried ' \\\n            \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n          log.error(message, e)\n",
                      "markdown": "`          # Since retries failed for many times, log as errors instead\n          # of info and raise exceptions and trigger Fluentd to restart.\n          message =\n            'Exception encountered parsing pod watch event. The ' \\\n            'connection might have been closed. Retried ' \\\n            \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n          log.error(message, e)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_pods.rb"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 46,
                  "endLine": 89,
                  "endColumn": 53,
                  "snippet": {
                    "text": "          # Instead of raising exceptions and crashing Fluentd, swallow\n          # the exception and reset the watcher.\n          log.info(\n            'Exception encountered parsing pod watch event. The ' \\\n            'connection might have been closed. Sleeping for ' \\\n            \"#{Thread.current[:pod_watch_retry_backoff_interval]} \" \\\n            'seconds and resetting the pod watcher.', e\n",
                    "rendered": {
                      "text": "          # Instead of raising exceptions and crashing Fluentd, swallow\n          # the exception and reset the watcher.\n          log.info(\n            'Exception encountered parsing pod watch event. The ' \\\n            'connection might have been closed. Sleeping for ' \\\n            \"#{Thread.current[:pod_watch_retry_backoff_interval]} \" \\\n            'seconds and resetting the pod watcher.', e\n",
                      "markdown": "`          # Instead of raising exceptions and crashing Fluentd, swallow\n          # the exception and reset the watcher.\n          log.info(\n            'Exception encountered parsing pod watch event. The ' \\\n            'connection might have been closed. Sleeping for ' \\\n            \"#{Thread.current[:pod_watch_retry_backoff_interval]} \" \\\n            'seconds and resetting the pod watcher.', e\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_pods.rb"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 48,
                  "endLine": 76,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            # Since retries failed for many times, log as errors instead\n            # of info and raise exceptions and trigger Fluentd to restart.\n            message =\n              'Exception encountered parsing pod watch event. The ' \\\n              'connection might have been closed. Retried ' \\\n              \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n            log.error(message, e)\n",
                    "rendered": {
                      "text": "            # Since retries failed for many times, log as errors instead\n            # of info and raise exceptions and trigger Fluentd to restart.\n            message =\n              'Exception encountered parsing pod watch event. The ' \\\n              'connection might have been closed. Retried ' \\\n              \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n            log.error(message, e)\n",
                      "markdown": "`            # Since retries failed for many times, log as errors instead\n            # of info and raise exceptions and trigger Fluentd to restart.\n            message =\n              'Exception encountered parsing pod watch event. The ' \\\n              'connection might have been closed. Retried ' \\\n              \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n            log.error(message, e)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_pods.rb"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 48,
                  "endLine": 63,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            # Instead of raising exceptions and crashing Fluentd, swallow\n            # the exception and reset the watcher.\n            log.info(\n              'Exception encountered parsing pod watch event. The ' \\\n              'connection might have been closed. Sleeping for ' \\\n              \"#{Thread.current[:pod_watch_retry_backoff_interval]} \" \\\n              'seconds and resetting the pod watcher.', e\n",
                    "rendered": {
                      "text": "            # Instead of raising exceptions and crashing Fluentd, swallow\n            # the exception and reset the watcher.\n            log.info(\n              'Exception encountered parsing pod watch event. The ' \\\n              'connection might have been closed. Sleeping for ' \\\n              \"#{Thread.current[:pod_watch_retry_backoff_interval]} \" \\\n              'seconds and resetting the pod watcher.', e\n",
                      "markdown": "`            # Instead of raising exceptions and crashing Fluentd, swallow\n            # the exception and reset the watcher.\n            log.info(\n              'Exception encountered parsing pod watch event. The ' \\\n              'connection might have been closed. Sleeping for ' \\\n              \"#{Thread.current[:pod_watch_retry_backoff_interval]} \" \\\n              'seconds and resetting the pod watcher.', e\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_pods.rb"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 54,
                  "endLine": 48,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        # Expected error. Quietly go back through the loop in order to\n        # start watching from the latest resource versions\n        @stats.bump(:pod_watch_gone_errors)\n        log.info('410 Gone encountered. Restarting pod watch to reset resource versions.', e)\n        pod_watcher = nil\n      rescue KubeException => e\n        if e.error_code == 401\n",
                    "rendered": {
                      "text": "        # Expected error. Quietly go back through the loop in order to\n        # start watching from the latest resource versions\n        @stats.bump(:pod_watch_gone_errors)\n        log.info('410 Gone encountered. Restarting pod watch to reset resource versions.', e)\n        pod_watcher = nil\n      rescue KubeException => e\n        if e.error_code == 401\n",
                      "markdown": "`        # Expected error. Quietly go back through the loop in order to\n        # start watching from the latest resource versions\n        @stats.bump(:pod_watch_gone_errors)\n        log.info('410 Gone encountered. Restarting pod watch to reset resource versions.', e)\n        pod_watcher = nil\n      rescue KubeException => e\n        if e.error_code == 401\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 51,
                  "endLine": 17,
                  "snippet": {
                    "text": "            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n  name: Test bundle\n",
                    "rendered": {
                      "text": "            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n  name: Test bundle\n",
                      "markdown": "`            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n  name: Test bundle\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 16,
                  "endLine": 17,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n  name: Test bundle\n",
                    "rendered": {
                      "text": "            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n  name: Test bundle\n",
                      "markdown": "`            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n  name: Test bundle\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 16,
                  "endLine": 16,
                  "endColumn": 25,
                  "snippet": {
                    "text": "            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n",
                    "rendered": {
                      "text": "            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n",
                      "markdown": "`            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\ntest: &test\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 16,
                  "endLine": 15,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\n",
                    "rendered": {
                      "text": "  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\n",
                      "markdown": "`  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 11,
                  "endLine": 14,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  name: Install missing dependecies\n  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n",
                    "rendered": {
                      "text": "  name: Install missing dependecies\n  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n",
                      "markdown": "`  name: Install missing dependecies\n  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n            sudo apt-get install cmake libicu-dev libssl-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.circleci/config.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 11,
                  "endLine": 13,
                  "endColumn": 16,
                  "snippet": {
                    "text": "missingdeps: &missingdeps\n  name: Install missing dependecies\n  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n",
                    "rendered": {
                      "text": "missingdeps: &missingdeps\n  name: Install missing dependecies\n  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n",
                      "markdown": "`missingdeps: &missingdeps\n  name: Install missing dependecies\n  command: |\n            cat /etc/os-release\n            sed -e 's/^# deb-src/deb-src/g' /etc/apt/sources.list > /tmp/sources.list\n            sudo cp /tmp/sources.list /etc/apt/sources.list\n            sudo apt-get --allow-releaseinfo-change update\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-01/readme.md"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 39,
                  "snippet": {
                    "text": "</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-cyvquhgi_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n",
                    "rendered": {
                      "text": "</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-cyvquhgi_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n",
                      "markdown": "`</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-cyvquhgi_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-01/readme.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 41,
                  "endLine": 10,
                  "endColumn": 47,
                  "snippet": {
                    "text": "* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n",
                    "rendered": {
                      "text": "* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n",
                      "markdown": "`* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-marshal-02/readme.md"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 39,
                  "snippet": {
                    "text": "</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-ksowqntt_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n",
                    "rendered": {
                      "text": "</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-ksowqntt_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n",
                      "markdown": "`</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-ksowqntt_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-marshal-02/readme.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 41,
                  "endLine": 10,
                  "endColumn": 47,
                  "snippet": {
                    "text": "* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n",
                    "rendered": {
                      "text": "* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n",
                      "markdown": "`* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_container_init.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_container_init.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_container_init.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_api_v1_using_token.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_api_v1_using_token.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_api_v1_using_token.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 17,
                  "endLine": 230,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch retries when 410 Gone errors are encountered' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@created, @gone, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch retries when 410 Gone errors are encountered' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@created, @gone, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch retries when 410 Gone errors are encountered' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@created, @gone, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 17,
                  "endLine": 220,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch raises a GoneError when a 410 Gone error is received' do\n    @cache['gone_uid'] = {}\n    @client.stub :watch_namespaces, [@gone] do\n      assert_raise KubernetesMetadata::Common::GoneError do\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch raises a GoneError when a 410 Gone error is received' do\n    @cache['gone_uid'] = {}\n    @client.stub :watch_namespaces, [@gone] do\n      assert_raise KubernetesMetadata::Common::GoneError do\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch raises a GoneError when a 410 Gone error is received' do\n    @cache['gone_uid'] = {}\n    @client.stub :watch_namespaces, [@gone] do\n      assert_raise KubernetesMetadata::Common::GoneError do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 17,
                  "endLine": 202,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch continues after retries succeed' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@modified, @error, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch continues after retries succeed' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@modified, @error, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch continues after retries succeed' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@modified, @error, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 30,
                  "endLine": 185,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 17,
                  "endLine": 185,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 30,
                  "endLine": 168,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    assert_nil(@stats[:namespace_watch_error_type_notices])\n  end\n\n  test 'namespace watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    assert_nil(@stats[:namespace_watch_error_type_notices])\n  end\n\n  test 'namespace watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    assert_nil(@stats[:namespace_watch_error_type_notices])\n  end\n\n  test 'namespace watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 17,
                  "endLine": 168,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    assert_nil(@stats[:namespace_watch_error_type_notices])\n  end\n\n  test 'namespace watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    assert_nil(@stats[:namespace_watch_error_type_notices])\n  end\n\n  test 'namespace watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    assert_nil(@stats[:namespace_watch_error_type_notices])\n  end\n\n  test 'namespace watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_namespaces, @initial do\n      @client.stub :watch_namespaces, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 17,
                  "endLine": 152,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch raises Fluent::UnrecoverableError when cannot re-establish connection to k8s API server' do\n    # Stub start_namespace_watch to simulate initial successful connection to API server\n    stub(self).start_namespace_watch\n    # Stub watch_namespaces to simluate not being able to set up watch connection to API server\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch raises Fluent::UnrecoverableError when cannot re-establish connection to k8s API server' do\n    # Stub start_namespace_watch to simulate initial successful connection to API server\n    stub(self).start_namespace_watch\n    # Stub watch_namespaces to simluate not being able to set up watch connection to API server\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch raises Fluent::UnrecoverableError when cannot re-establish connection to k8s API server' do\n    # Stub start_namespace_watch to simulate initial successful connection to API server\n    stub(self).start_namespace_watch\n    # Stub watch_namespaces to simluate not being able to set up watch connection to API server\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "endLine": 143,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch ignores DELETED' do\n    @namespace_cache['deleted_uid'] = {}\n    @client.stub :watch_namespaces, [@deleted] do\n      process_namespace_watcher_notices(start_namespace_watch)\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch ignores DELETED' do\n    @namespace_cache['deleted_uid'] = {}\n    @client.stub :watch_namespaces, [@deleted] do\n      process_namespace_watcher_notices(start_namespace_watch)\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch ignores DELETED' do\n    @namespace_cache['deleted_uid'] = {}\n    @client.stub :watch_namespaces, [@deleted] do\n      process_namespace_watcher_notices(start_namespace_watch)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 17,
                  "endLine": 134,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch updates cache when MODIFIED is received and info is cached' do\n    @namespace_cache['modified_uid'] = {}\n    @client.stub :watch_namespaces, [@modified] do\n      process_namespace_watcher_notices(start_namespace_watch)\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch updates cache when MODIFIED is received and info is cached' do\n    @namespace_cache['modified_uid'] = {}\n    @client.stub :watch_namespaces, [@modified] do\n      process_namespace_watcher_notices(start_namespace_watch)\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch updates cache when MODIFIED is received and info is cached' do\n    @namespace_cache['modified_uid'] = {}\n    @client.stub :watch_namespaces, [@modified] do\n      process_namespace_watcher_notices(start_namespace_watch)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 17,
                  "endLine": 126,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace watch ignores MODIFIED when info not in cache' do\n    @client.stub :watch_namespaces, [@modified] do\n      process_namespace_watcher_notices(start_namespace_watch)\n      assert_equal(false, @namespace_cache.key?('modified_uid'))\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace watch ignores MODIFIED when info not in cache' do\n    @client.stub :watch_namespaces, [@modified] do\n      process_namespace_watcher_notices(start_namespace_watch)\n      assert_equal(false, @namespace_cache.key?('modified_uid'))\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace watch ignores MODIFIED when info not in cache' do\n    @client.stub :watch_namespaces, [@modified] do\n      process_namespace_watcher_notices(start_namespace_watch)\n      assert_equal(false, @namespace_cache.key?('modified_uid'))\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 17,
                  "endLine": 118,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'namespace watch ignores CREATED' do\n    @client.stub :watch_namespaces, [@created] do\n      process_namespace_watcher_notices(start_namespace_watch)\n      assert_equal(false, @namespace_cache.key?('created_uid'))\n",
                    "rendered": {
                      "text": "    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'namespace watch ignores CREATED' do\n    @client.stub :watch_namespaces, [@created] do\n      process_namespace_watcher_notices(start_namespace_watch)\n      assert_equal(false, @namespace_cache.key?('created_uid'))\n",
                      "markdown": "`    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'namespace watch ignores CREATED' do\n    @client.stub :watch_namespaces, [@created] do\n      process_namespace_watcher_notices(start_namespace_watch)\n      assert_equal(false, @namespace_cache.key?('created_uid'))\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 44,
                  "endLine": 105,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'namespace list caches namespaces and watch updates' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :get_namespaces, @initial do\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'namespace list caches namespaces and watch updates' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :get_namespaces, @initial do\n",
                      "markdown": "`    end\n  end\n\n  test 'namespace list caches namespaces and watch updates' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :get_namespaces, @initial do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 33,
                  "endLine": 219,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod MODIFIED cached when hostname matches' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :watch_pods, [@modified] do\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod MODIFIED cached when hostname matches' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :watch_pods, [@modified] do\n",
                      "markdown": "`    end\n  end\n\n  test 'pod MODIFIED cached when hostname matches' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :watch_pods, [@modified] do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 38,
                  "endLine": 12,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 11,
                  "endLine": 329,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch retries when 410 Gone errors are encountered' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@created, @gone, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds because the code sleeps 3 times.\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch retries when 410 Gone errors are encountered' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@created, @gone, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds because the code sleeps 3 times.\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch retries when 410 Gone errors are encountered' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@created, @gone, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds because the code sleeps 3 times.\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 11,
                  "endLine": 317,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch raises a GoneError when a 410 Gone error is received' do\n    @cache['gone_uid'] = {}\n    @client.stub :watch_pods, [@gone] do\n      @last_seen_resource_version = '100'\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch raises a GoneError when a 410 Gone error is received' do\n    @cache['gone_uid'] = {}\n    @client.stub :watch_pods, [@gone] do\n      @last_seen_resource_version = '100'\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch raises a GoneError when a 410 Gone error is received' do\n    @cache['gone_uid'] = {}\n    @client.stub :watch_pods, [@gone] do\n      @last_seen_resource_version = '100'\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 11,
                  "endLine": 299,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch continues after retries succeed' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@modified, @error, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch continues after retries succeed' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@modified, @error, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch continues after retries succeed' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@modified, @error, @modified] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 24,
                  "endLine": 281,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 11,
                  "endLine": 281,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch resets watch retry count when error is received and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@error] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 24,
                  "endLine": 264,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    assert_nil(@stats[:pod_watch_error_type_notices])\n  end\n\n  test 'pod watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    assert_nil(@stats[:pod_watch_error_type_notices])\n  end\n\n  test 'pod watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    assert_nil(@stats[:pod_watch_error_type_notices])\n  end\n\n  test 'pod watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 11,
                  "endLine": 264,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    assert_nil(@stats[:pod_watch_error_type_notices])\n  end\n\n  test 'pod watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                    "rendered": {
                      "text": "    assert_nil(@stats[:pod_watch_error_type_notices])\n  end\n\n  test 'pod watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n",
                      "markdown": "`    assert_nil(@stats[:pod_watch_error_type_notices])\n  end\n\n  test 'pod watch resets watch retry count when exceptions are encountered and connection to k8s API server is re-established' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [[@created, @exception_raised]] do\n        # Force the infinite watch loop to exit after 3 seconds. Verifies that\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 11,
                  "endLine": 248,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch raises Fluent::UnrecoverableError when cannot re-establish connection to k8s API server' do\n    # Stub start_pod_watch to simulate initial successful connection to API server\n    stub(self).start_pod_watch\n    # Stub watch_pods to simluate not being able to set up watch connection to API server\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch raises Fluent::UnrecoverableError when cannot re-establish connection to k8s API server' do\n    # Stub start_pod_watch to simulate initial successful connection to API server\n    stub(self).start_pod_watch\n    # Stub watch_pods to simluate not being able to set up watch connection to API server\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch raises Fluent::UnrecoverableError when cannot re-establish connection to k8s API server' do\n    # Stub start_pod_watch to simulate initial successful connection to API server\n    stub(self).start_pod_watch\n    # Stub watch_pods to simluate not being able to set up watch connection to API server\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 11,
                  "endLine": 239,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch notice is ignored when delete is received' do\n    @cache['deleted_uid'] = {}\n    @client.stub :watch_pods, [@deleted] do\n      process_pod_watcher_notices(start_pod_watch)\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch notice is ignored when delete is received' do\n    @cache['deleted_uid'] = {}\n    @client.stub :watch_pods, [@deleted] do\n      process_pod_watcher_notices(start_pod_watch)\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch notice is ignored when delete is received' do\n    @cache['deleted_uid'] = {}\n    @client.stub :watch_pods, [@deleted] do\n      process_pod_watcher_notices(start_pod_watch)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 11,
                  "endLine": 230,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'pod watch notice is updated when MODIFIED is received' do\n    @cache['modified_uid'] = {}\n    @client.stub :watch_pods, [@modified] do\n      process_pod_watcher_notices(start_pod_watch)\n",
                    "rendered": {
                      "text": "    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'pod watch notice is updated when MODIFIED is received' do\n    @cache['modified_uid'] = {}\n    @client.stub :watch_pods, [@modified] do\n      process_pod_watcher_notices(start_pod_watch)\n",
                      "markdown": "`    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'pod watch notice is updated when MODIFIED is received' do\n    @cache['modified_uid'] = {}\n    @client.stub :watch_pods, [@modified] do\n      process_pod_watcher_notices(start_pod_watch)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 11,
                  "endLine": 211,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    end\n  end\n\n  test 'pod watch notice is ignored when info not cached and MODIFIED is received' do\n    @client.stub :watch_pods, [@modified] do\n      process_pod_watcher_notices(start_pod_watch)\n      assert_equal(false, @cache.key?('modified_uid'))\n",
                    "rendered": {
                      "text": "    end\n  end\n\n  test 'pod watch notice is ignored when info not cached and MODIFIED is received' do\n    @client.stub :watch_pods, [@modified] do\n      process_pod_watcher_notices(start_pod_watch)\n      assert_equal(false, @cache.key?('modified_uid'))\n",
                      "markdown": "`    end\n  end\n\n  test 'pod watch notice is ignored when info not cached and MODIFIED is received' do\n    @client.stub :watch_pods, [@modified] do\n      process_pod_watcher_notices(start_pod_watch)\n      assert_equal(false, @cache.key?('modified_uid'))\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 11,
                  "endLine": 201,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    assert_equal('123', @last_seen_resource_version) # from @modified\n  end\n\n  test 'pod watch notice ignores CREATED' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@created] do\n        process_pod_watcher_notices(start_pod_watch)\n",
                    "rendered": {
                      "text": "    assert_equal('123', @last_seen_resource_version) # from @modified\n  end\n\n  test 'pod watch notice ignores CREATED' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@created] do\n        process_pod_watcher_notices(start_pod_watch)\n",
                      "markdown": "`    assert_equal('123', @last_seen_resource_version) # from @modified\n  end\n\n  test 'pod watch notice ignores CREATED' do\n    @client.stub :get_pods, @initial do\n      @client.stub :watch_pods, [@created] do\n        process_pod_watcher_notices(start_pod_watch)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 32,
                  "endLine": 187,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'pod list caches pods and watch updates' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :get_pods, @initial do\n",
                    "rendered": {
                      "text": "    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'pod list caches pods and watch updates' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :get_pods, @initial do\n",
                      "markdown": "`    ENV['K8S_NODE_NAME'] = orig_env_val\n  end\n\n  test 'pod list caches pods and watch updates' do\n    orig_env_val = ENV['K8S_NODE_NAME']\n    ENV['K8S_NODE_NAME'] = 'aNodeName'\n    @client.stub :get_pods, @initial do\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/plugin/test_watch_pods.rb"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 16,
                  "endLine": 7,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 26,
                  "endLine": 114,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      get_namespaces_and_start_watcher\n    rescue StandardError => e\n      message = 'start_namespace_watch: Exception encountered setting up ' \\\n                \"namespace watch from Kubernetes API #{@apiVersion} endpoint \" \\\n                \"#{@kubernetes_url}: #{e.message}\"\n      message += \" (#{e.response})\" if e.respond_to?(:response)\n      log.debug(message)\n",
                    "rendered": {
                      "text": "      get_namespaces_and_start_watcher\n    rescue StandardError => e\n      message = 'start_namespace_watch: Exception encountered setting up ' \\\n                \"namespace watch from Kubernetes API #{@apiVersion} endpoint \" \\\n                \"#{@kubernetes_url}: #{e.message}\"\n      message += \" (#{e.response})\" if e.respond_to?(:response)\n      log.debug(message)\n",
                      "markdown": "`      get_namespaces_and_start_watcher\n    rescue StandardError => e\n      message = 'start_namespace_watch: Exception encountered setting up ' \\\n                \"namespace watch from Kubernetes API #{@apiVersion} endpoint \" \\\n                \"#{@kubernetes_url}: #{e.message}\"\n      message += \" (#{e.response})\" if e.respond_to?(:response)\n      log.debug(message)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 52,
                  "endLine": 101,
                  "endColumn": 59,
                  "snippet": {
                    "text": "          # Since retries failed for many times, log as errors instead\n          # of info and raise exceptions and trigger Fluentd to restart.\n          message =\n            'Exception encountered parsing namespace watch event. The ' \\\n            'connection might have been closed. Retried ' \\\n            \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n          log.error(message, e)\n",
                    "rendered": {
                      "text": "          # Since retries failed for many times, log as errors instead\n          # of info and raise exceptions and trigger Fluentd to restart.\n          message =\n            'Exception encountered parsing namespace watch event. The ' \\\n            'connection might have been closed. Retried ' \\\n            \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n          log.error(message, e)\n",
                      "markdown": "`          # Since retries failed for many times, log as errors instead\n          # of info and raise exceptions and trigger Fluentd to restart.\n          message =\n            'Exception encountered parsing namespace watch event. The ' \\\n            'connection might have been closed. Retried ' \\\n            \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n          log.error(message, e)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 52,
                  "endLine": 88,
                  "endColumn": 59,
                  "snippet": {
                    "text": "          # Instead of raising exceptions and crashing Fluentd, swallow\n          # the exception and reset the watcher.\n          log.info(\n            'Exception encountered parsing namespace watch event. ' \\\n            'The connection might have been closed. Sleeping for ' \\\n            \"#{Thread.current[:namespace_watch_retry_backoff_interval]} \" \\\n            'seconds and resetting the namespace watcher.', e\n",
                    "rendered": {
                      "text": "          # Instead of raising exceptions and crashing Fluentd, swallow\n          # the exception and reset the watcher.\n          log.info(\n            'Exception encountered parsing namespace watch event. ' \\\n            'The connection might have been closed. Sleeping for ' \\\n            \"#{Thread.current[:namespace_watch_retry_backoff_interval]} \" \\\n            'seconds and resetting the namespace watcher.', e\n",
                      "markdown": "`          # Instead of raising exceptions and crashing Fluentd, swallow\n          # the exception and reset the watcher.\n          log.info(\n            'Exception encountered parsing namespace watch event. ' \\\n            'The connection might have been closed. Sleeping for ' \\\n            \"#{Thread.current[:namespace_watch_retry_backoff_interval]} \" \\\n            'seconds and resetting the namespace watcher.', e\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 54,
                  "endLine": 75,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            # Since retries failed for many times, log as errors instead\n            # of info and raise exceptions and trigger Fluentd to restart.\n            message =\n              'Exception encountered parsing namespace watch event. The ' \\\n              'connection might have been closed. Retried ' \\\n              \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n            log.error(message, e)\n",
                    "rendered": {
                      "text": "            # Since retries failed for many times, log as errors instead\n            # of info and raise exceptions and trigger Fluentd to restart.\n            message =\n              'Exception encountered parsing namespace watch event. The ' \\\n              'connection might have been closed. Retried ' \\\n              \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n            log.error(message, e)\n",
                      "markdown": "`            # Since retries failed for many times, log as errors instead\n            # of info and raise exceptions and trigger Fluentd to restart.\n            message =\n              'Exception encountered parsing namespace watch event. The ' \\\n              'connection might have been closed. Retried ' \\\n              \"#{@watch_retry_max_times} times yet still failing. Restarting.\"\n            log.error(message, e)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 54,
                  "endLine": 62,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            # Instead of raising exceptions and crashing Fluentd, swallow\n            # the exception and reset the watcher.\n            log.info(\n              'Exception encountered parsing namespace watch event. ' \\\n              'The connection might have been closed. Sleeping for ' \\\n              \"#{Thread.current[:namespace_watch_retry_backoff_interval]} \" \\\n              'seconds and resetting the namespace watcher.', e\n",
                    "rendered": {
                      "text": "            # Instead of raising exceptions and crashing Fluentd, swallow\n            # the exception and reset the watcher.\n            log.info(\n              'Exception encountered parsing namespace watch event. ' \\\n              'The connection might have been closed. Sleeping for ' \\\n              \"#{Thread.current[:namespace_watch_retry_backoff_interval]} \" \\\n              'seconds and resetting the namespace watcher.', e\n",
                      "markdown": "`            # Instead of raising exceptions and crashing Fluentd, swallow\n            # the exception and reset the watcher.\n            log.info(\n              'Exception encountered parsing namespace watch event. ' \\\n              'The connection might have been closed. Sleeping for ' \\\n              \"#{Thread.current[:namespace_watch_retry_backoff_interval]} \" \\\n              'seconds and resetting the namespace watcher.', e\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/kubernetes_metadata_watch_namespaces.rb"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 60,
                  "endLine": 47,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        # Expected error. Quietly go back through the loop in order to\n        # start watching from the latest resource versions\n        @stats.bump(:namespace_watch_gone_errors)\n        log.info('410 Gone encountered. Restarting namespace watch to reset resource versions.', e)\n        namespace_watcher = nil\n      rescue KubeException => e\n        if e.error_code == 401\n",
                    "rendered": {
                      "text": "        # Expected error. Quietly go back through the loop in order to\n        # start watching from the latest resource versions\n        @stats.bump(:namespace_watch_gone_errors)\n        log.info('410 Gone encountered. Restarting namespace watch to reset resource versions.', e)\n        namespace_watcher = nil\n      rescue KubeException => e\n        if e.error_code == 401\n",
                      "markdown": "`        # Expected error. Quietly go back through the loop in order to\n        # start watching from the latest resource versions\n        @stats.bump(:namespace_watch_gone_errors)\n        log.info('410 Gone encountered. Restarting namespace watch to reset resource versions.', e)\n        namespace_watcher = nil\n      rescue KubeException => e\n        if e.error_code == 401\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 6,
                  "endLine": 58,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    hashdiff (1.0.1)\n    http (5.2.0)\n      addressable (~> 2.8)\n      base64 (~> 0.1)\n      http-cookie (~> 1.0)\n      http-form_data (~> 2.2)\n      llhttp-ffi (~> 0.5.0)\n",
                    "rendered": {
                      "text": "    hashdiff (1.0.1)\n    http (5.2.0)\n      addressable (~> 2.8)\n      base64 (~> 0.1)\n      http-cookie (~> 1.0)\n      http-form_data (~> 2.2)\n      llhttp-ffi (~> 0.5.0)\n",
                      "markdown": "`    hashdiff (1.0.1)\n    http (5.2.0)\n      addressable (~> 2.8)\n      base64 (~> 0.1)\n      http-cookie (~> 1.0)\n      http-form_data (~> 2.2)\n      llhttp-ffi (~> 0.5.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 12,
                  "snippet": {
                    "text": "      ffi (>= 1.15.5)\n      rake\n    fluentd (1.17.0)\n      base64 (~> 0.2)\n      bundler\n      cool.io (>= 1.4.5, < 2.0.0)\n      csv (~> 3.2)\n",
                    "rendered": {
                      "text": "      ffi (>= 1.15.5)\n      rake\n    fluentd (1.17.0)\n      base64 (~> 0.2)\n      bundler\n      cool.io (>= 1.4.5, < 2.0.0)\n      csv (~> 3.2)\n",
                      "markdown": "`      ffi (>= 1.15.5)\n      rake\n    fluentd (1.17.0)\n      base64 (~> 0.2)\n      bundler\n      cool.io (>= 1.4.5, < 2.0.0)\n      csv (~> 3.2)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 4,
                  "endLine": 15,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    base64 (0.2.0)\n    bump (0.10.0)\n    charlock_holmes (0.7.7)\n    codeclimate-test-reporter (0.6.0)\n",
                    "rendered": {
                      "text": "    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    base64 (0.2.0)\n    bump (0.10.0)\n    charlock_holmes (0.7.7)\n    codeclimate-test-reporter (0.6.0)\n",
                      "markdown": "`    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    base64 (0.2.0)\n    bump (0.10.0)\n    charlock_holmes (0.7.7)\n    codeclimate-test-reporter (0.6.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 1,
                  "endLine": 145,
                  "snippet": {
                    "text": "    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  bump\n  bundler (~> 2.0)\n",
                    "rendered": {
                      "text": "    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  bump\n  bundler (~> 2.0)\n",
                      "markdown": "`    yajl-ruby (1.4.3)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  bump\n  bundler (~> 2.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 5,
                  "endLine": 58,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    hashdiff (1.0.1)\n    http (5.2.0)\n      addressable (~> 2.8)\n      base64 (~> 0.1)\n      http-cookie (~> 1.0)\n      http-form_data (~> 2.2)\n      llhttp-ffi (~> 0.5.0)\n",
                    "rendered": {
                      "text": "    hashdiff (1.0.1)\n    http (5.2.0)\n      addressable (~> 2.8)\n      base64 (~> 0.1)\n      http-cookie (~> 1.0)\n      http-form_data (~> 2.2)\n      llhttp-ffi (~> 0.5.0)\n",
                      "markdown": "`    hashdiff (1.0.1)\n    http (5.2.0)\n      addressable (~> 2.8)\n      base64 (~> 0.1)\n      http-cookie (~> 1.0)\n      http-form_data (~> 2.2)\n      llhttp-ffi (~> 0.5.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 5,
                  "endLine": 36,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      ffi (>= 1.15.5)\n      rake\n    fluentd (1.17.0)\n      base64 (~> 0.2)\n      bundler\n      cool.io (>= 1.4.5, < 2.0.0)\n      csv (~> 3.2)\n",
                    "rendered": {
                      "text": "      ffi (>= 1.15.5)\n      rake\n    fluentd (1.17.0)\n      base64 (~> 0.2)\n      bundler\n      cool.io (>= 1.4.5, < 2.0.0)\n      csv (~> 3.2)\n",
                      "markdown": "`      ffi (>= 1.15.5)\n      rake\n    fluentd (1.17.0)\n      base64 (~> 0.2)\n      bundler\n      cool.io (>= 1.4.5, < 2.0.0)\n      csv (~> 3.2)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/Gemfile.lock"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 3,
                  "endLine": 15,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    base64 (0.2.0)\n    bump (0.10.0)\n    charlock_holmes (0.7.7)\n    codeclimate-test-reporter (0.6.0)\n",
                    "rendered": {
                      "text": "    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    base64 (0.2.0)\n    bump (0.10.0)\n    charlock_holmes (0.7.7)\n    codeclimate-test-reporter (0.6.0)\n",
                      "markdown": "`    addressable (2.8.0)\n      public_suffix (>= 2.0.2, < 5.0)\n    ast (2.4.2)\n    base64 (0.2.0)\n    bump (0.10.0)\n    charlock_holmes (0.7.7)\n    codeclimate-test-reporter (0.6.0)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-01/results.html"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "endLine": 77,
                  "snippet": {
                    "text": "&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-cyvquhgi_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n",
                    "rendered": {
                      "text": "&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-cyvquhgi_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n",
                      "markdown": "`&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-cyvquhgi_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-kube-01-01/results.html"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40,
                  "endLine": 12,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n",
                    "rendered": {
                      "text": "  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n",
                      "markdown": "`  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-baseline-01/readme.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7,
                  "endLine": 40,
                  "snippet": {
                    "text": "</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-clwn63sc_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n",
                    "rendered": {
                      "text": "</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-clwn63sc_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n",
                      "markdown": "`</system>\n\n<source>\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-clwn63sc_*/loader-*/*\n  exclude_path [\"/var/log/pods/**/*/*.gz\",\"/var/log/pods/**/*/*.tmp\"]\n  pos_file \"/var/lib/fluentd/pos/containers-app\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-baseline-01/readme.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 41,
                  "endLine": 10,
                  "endColumn": 47,
                  "snippet": {
                    "text": "* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n",
                    "rendered": {
                      "text": "* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n",
                      "markdown": "`* Run Duration: 5m\n* Payload Source: synthetic\n\n## Latency of logs collected based on the time the log was generated and ingested\n\nTotal Msg| Size | Elapsed (s) | Mean (s)| Min(s) | Max (s)| Median (s)\n---------|------|-------------|---------|--------|--------|---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-baseline-01/results.html"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 7,
                  "endLine": 78,
                  "snippet": {
                    "text": "&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-clwn63sc_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n",
                    "rendered": {
                      "text": "&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-clwn63sc_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n",
                      "markdown": "`&lt;/system&gt;\n\n&lt;source&gt;\n  @type tail\n  @id container-input\n  path /var/log/pods/testhack-clwn63sc_*/loader-*/*\n  exclude_path [&#34;/var/log/pods/**/*/*.gz&#34;,&#34;/var/log/pods/**/*/*.tmp&#34;]\n  pos_file &#34;/var/lib/fluentd/pos/containers-app&#34;\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/doc/benchmark/5m-1-2500lps-256b-baseline-01/results.html"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 40,
                  "endLine": 12,
                  "endColumn": 46,
                  "snippet": {
                    "text": "  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n",
                    "rendered": {
                      "text": "  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n",
                      "markdown": "`  <div>Payload Source: synthetic</div>\n</div>\n<div>\n  Latency of logs collected based on the time the log was generated and ingested\n</div>\n<table border=\"1\">\n  <tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_with_ownerrefs.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_with_ownerrefs.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_with_ownerrefs.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/invalid_api_server_config.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/invalid_api_server_config.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWF\n  response:\n    status:\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWF\n  response:\n    status:\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWF\n  response:\n    status:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/invalid_api_server_config.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_api_v1.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_api_v1.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_api_v1.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_namespace_default_using_token.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_namespace_default_using_token.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_namespace_default_using_token.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_using_token.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_using_token.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n      Authorization:\n      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh\n  response:\n    status:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod_using_token.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_dotted_slashed_labels.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_dotted_slashed_labels.yml"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 7,
                  "endLine": 159,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_dotted_slashed_labels.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_docker_metadata_dotted_slashed_labels.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod.yml"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 38,
                  "endLine": 10,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 34,
                  "snippet": {
                    "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                    "rendered": {
                      "text": "      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n",
                      "markdown": "`      Accept-Encoding:\n      - gzip, deflate\n      User-Agent:\n      - Ruby\n  response:\n    status:\n      code: 200\n      message: OK\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/test/cassettes/kubernetes_get_pod.yml"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                    "rendered": {
                      "text": "# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n",
                      "markdown": "`# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with\n# Kubernetes metadata\n#\n# Copyright 2015 Red Hat, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 129,
                  "endLine": 283,
                  "endColumn": 136,
                  "snippet": {
                    "text": "\n        if @watch\n          if ENV['K8S_NODE_NAME'].nil? || ENV['K8S_NODE_NAME'].strip.empty?\n            log.warn(\"!! The environment variable 'K8S_NODE_NAME' is not set to the node name which can affect the API server and watch efficiency !!\")\n          end\n\n          pod_thread = Thread.new(self, &:set_up_pod_thread)\n",
                    "rendered": {
                      "text": "\n        if @watch\n          if ENV['K8S_NODE_NAME'].nil? || ENV['K8S_NODE_NAME'].strip.empty?\n            log.warn(\"!! The environment variable 'K8S_NODE_NAME' is not set to the node name which can affect the API server and watch efficiency !!\")\n          end\n\n          pod_thread = Thread.new(self, &:set_up_pod_thread)\n",
                      "markdown": "`\n        if @watch\n          if ENV['K8S_NODE_NAME'].nil? || ENV['K8S_NODE_NAME'].strip.empty?\n            log.warn(\"!! The environment variable 'K8S_NODE_NAME' is not set to the node name which can affect the API server and watch efficiency !!\")\n          end\n\n          pod_thread = Thread.new(self, &:set_up_pod_thread)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/lib/fluent/plugin/filter_kubernetes_metadata.rb"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 83,
                  "endLine": 283,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\n        if @watch\n          if ENV['K8S_NODE_NAME'].nil? || ENV['K8S_NODE_NAME'].strip.empty?\n            log.warn(\"!! The environment variable 'K8S_NODE_NAME' is not set to the node name which can affect the API server and watch efficiency !!\")\n          end\n\n          pod_thread = Thread.new(self, &:set_up_pod_thread)\n",
                    "rendered": {
                      "text": "\n        if @watch\n          if ENV['K8S_NODE_NAME'].nil? || ENV['K8S_NODE_NAME'].strip.empty?\n            log.warn(\"!! The environment variable 'K8S_NODE_NAME' is not set to the node name which can affect the API server and watch efficiency !!\")\n          end\n\n          pod_thread = Thread.new(self, &:set_up_pod_thread)\n",
                      "markdown": "`\n        if @watch\n          if ENV['K8S_NODE_NAME'].nil? || ENV['K8S_NODE_NAME'].strip.empty?\n            log.warn(\"!! The environment variable 'K8S_NODE_NAME' is not set to the node name which can affect the API server and watch efficiency !!\")\n          end\n\n          pod_thread = Thread.new(self, &:set_up_pod_thread)\n`"
                    }
                  },
                  "sourceLanguage": "ruby"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 31,
                  "endLine": 158,
                  "endColumn": 73,
                  "snippet": {
                    "text": "    \"namespace_name\": \"default\",\n    \"namespace_id\": \"23437884-8e08-4d95-850b-e94378c9b2fd\",\n    \"namespace_annotations\": {\n      \"fabric8.io/git-commit\": \"5e1116f63df0bac2a80bdae2ebdc563577bbdf3c\"\n    },\n    \"namespace_labels\": {\n      \"product_version\": \"v1.0.0\"\n",
                    "rendered": {
                      "text": "    \"namespace_name\": \"default\",\n    \"namespace_id\": \"23437884-8e08-4d95-850b-e94378c9b2fd\",\n    \"namespace_annotations\": {\n      \"fabric8.io/git-commit\": \"5e1116f63df0bac2a80bdae2ebdc563577bbdf3c\"\n    },\n    \"namespace_labels\": {\n      \"product_version\": \"v1.0.0\"\n",
                      "markdown": "`    \"namespace_name\": \"default\",\n    \"namespace_id\": \"23437884-8e08-4d95-850b-e94378c9b2fd\",\n    \"namespace_annotations\": {\n      \"fabric8.io/git-commit\": \"5e1116f63df0bac2a80bdae2ebdc563577bbdf3c\"\n    },\n    \"namespace_labels\": {\n      \"product_version\": \"v1.0.0\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 20,
                  "endLine": 147,
                  "endColumn": 86,
                  "snippet": {
                    "text": "  \"log\": \"2015/05/05 19:54:41 \\n\",\n  \"stream\": \"stderr\",\n  \"docker\": {\n    \"container_id\": \"df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115\",\n  }\n  \"kubernetes\": {\n    \"host\": \"jimmi-redhat.localnet\",\n",
                    "rendered": {
                      "text": "  \"log\": \"2015/05/05 19:54:41 \\n\",\n  \"stream\": \"stderr\",\n  \"docker\": {\n    \"container_id\": \"df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115\",\n  }\n  \"kubernetes\": {\n    \"host\": \"jimmi-redhat.localnet\",\n",
                      "markdown": "`  \"log\": \"2015/05/05 19:54:41 \\n\",\n  \"stream\": \"stderr\",\n  \"docker\": {\n    \"container_id\": \"df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115\",\n  }\n  \"kubernetes\": {\n    \"host\": \"jimmi-redhat.localnet\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 79,
                  "endLine": 129,
                  "endColumn": 87,
                  "snippet": {
                    "text": "\n## Example input/output\n\nKubernetes creates symlinks to Docker log files in `/var/log/containers/*.log`. Docker logs in JSON format.\n\nAssuming following inputs are coming from a log file named `/var/log/containers/fabric8-console-controller-98rqc_default_fabric8-console-container-df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115.log`:\n\n",
                    "rendered": {
                      "text": "\n## Example input/output\n\nKubernetes creates symlinks to Docker log files in `/var/log/containers/*.log`. Docker logs in JSON format.\n\nAssuming following inputs are coming from a log file named `/var/log/containers/fabric8-console-controller-98rqc_default_fabric8-console-container-df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115.log`:\n\n",
                      "markdown": "`\n## Example input/output\n\nKubernetes creates symlinks to Docker log files in `/var/log/containers/*.log`. Docker logs in JSON format.\n\nAssuming following inputs are coming from a log file named `/var/log/containers/fabric8-console-controller-98rqc_default_fabric8-console-container-df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115.log`:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n## Example input/output\n\nKubernetes creates symlinks to Docker log files in `/var/log/containers/*.log`. Docker logs in JSON format.\n\nAssuming following inputs are coming from a log file named `/var/log/containers/fabric8-console-controller-98rqc_default_fabric8-console-container-df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115.log`:\n\n",
                    "rendered": {
                      "text": "\n## Example input/output\n\nKubernetes creates symlinks to Docker log files in `/var/log/containers/*.log`. Docker logs in JSON format.\n\nAssuming following inputs are coming from a log file named `/var/log/containers/fabric8-console-controller-98rqc_default_fabric8-console-container-df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115.log`:\n\n",
                      "markdown": "`\n## Example input/output\n\nKubernetes creates symlinks to Docker log files in `/var/log/containers/*.log`. Docker logs in JSON format.\n\nAssuming following inputs are coming from a log file named `/var/log/containers/fabric8-console-controller-98rqc_default_fabric8-console-container-df14e0d5ae4c07284fa636d739c8fc2e6b52bc344658de7d3f08c36a2e804115.log`:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 29,
                  "endLine": 113,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n## Environment variables for Kubernetes\n\nIf the name of the Kubernetes node the plugin is running on is set as\nan environment variable with the name `K8S_NODE_NAME`, it will reduce cache\nmisses and needless calls to the Kubernetes API.\n\n",
                    "rendered": {
                      "text": "\n## Environment variables for Kubernetes\n\nIf the name of the Kubernetes node the plugin is running on is set as\nan environment variable with the name `K8S_NODE_NAME`, it will reduce cache\nmisses and needless calls to the Kubernetes API.\n\n",
                      "markdown": "`\n## Environment variables for Kubernetes\n\nIf the name of the Kubernetes node the plugin is running on is set as\nan environment variable with the name `K8S_NODE_NAME`, it will reduce cache\nmisses and needless calls to the Kubernetes API.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 14,
                  "endLine": 89,
                  "snippet": {
                    "text": "    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_type string\n      time_format \"%Y-%m-%dT%H:%M:%S.%NZ\"\n      keep_time_key false\n    </pattern>\n",
                    "rendered": {
                      "text": "    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_type string\n      time_format \"%Y-%m-%dT%H:%M:%S.%NZ\"\n      keep_time_key false\n    </pattern>\n",
                      "markdown": "`    @type multi_format\n    <pattern>\n      format json\n      time_key time\n      time_type string\n      time_format \"%Y-%m-%dT%H:%M:%S.%NZ\"\n      keep_time_key false\n    </pattern>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 7,
                  "endLine": 80,
                  "snippet": {
                    "text": "The config block could look like this:\n```\n<source>\n  @type tail\n  path /var/log/containers/*.log\n  pos_file fluentd-docker.pos\n  read_from_head true\n  tag kubernetes.*\n",
                    "rendered": {
                      "text": "The config block could look like this:\n```\n<source>\n  @type tail\n  path /var/log/containers/*.log\n  pos_file fluentd-docker.pos\n  read_from_head true\n  tag kubernetes.*\n",
                      "markdown": "`The config block could look like this:\n```\n<source>\n  @type tail\n  path /var/log/containers/*.log\n  pos_file fluentd-docker.pos\n  read_from_head true\n  tag kubernetes.*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 22,
                  "endLine": 66,
                  "endColumn": 28,
                  "snippet": {
                    "text": "30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include metadata (`kind` & `name`) in `kubernetes.ownerrefs` about the controller that owns the pod. (default: `false`)\n\n\nReading from a JSON formatted log files with `in_t",
                    "rendered": {
                      "text": "30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include metadata (`kind` & `name`) in `kubernetes.ownerrefs` about the controller that owns the pod. (default: `false`)\n\n\nReading from a JSON formatted log files with `in_t",
                      "markdown": "`30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include metadata (`kind` & `name`) in `kubernetes.ownerrefs` about the controller that owns the pod. (default: `false`)\n\n\nReading from a JSON formatted log files with `in_t`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 22,
                  "endLine": 65,
                  "endColumn": 28,
                  "snippet": {
                    "text": " and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include metadata (`kind` & `name`) in `kubernetes.ownerrefs` about the",
                    "rendered": {
                      "text": " and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include metadata (`kind` & `name`) in `kubernetes.ownerrefs` about the",
                      "markdown": "` and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include metadata (`kind` & `name`) in `kubernetes.ownerrefs` about the`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 79,
                  "endLine": 64,
                  "endColumn": 86,
                  "snippet": {
                    "text": "ce_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include ",
                    "rendered": {
                      "text": "ce_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include ",
                      "markdown": "`ce_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_ownerrefs_metadata` - If set to true, it will include `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 30,
                  "endLine": 64,
                  "endColumn": 36,
                  "snippet": {
                    "text": "ace_id field from the metadata. The fetch_namespace_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_owne",
                    "rendered": {
                      "text": "ace_id field from the metadata. The fetch_namespace_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_owne",
                      "markdown": "`ace_id field from the metadata. The fetch_namespace_metadata function will be skipped. The plugin will be faster and cpu consumption will be less.\n* `stats_interval` - The interval to display cache stats (default: 30s).  Set to 0 to disable stats collection and logging\n* `watch_retry_interval` - The time interval in seconds for retry backoffs when watch connections fail. (default: `10`)\n* `open_timeout` - The time in seconds to wait for a connection to kubernetes service. (default: `3`)\n* `read_timeout` - The time in seconds to wait for a read from kubernetes service. (default: `10`)\n* `include_owne`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 20,
                  "endLine": 47,
                  "endColumn": 27,
                  "snippet": {
                    "text": "` or `docker_id (/var/log/containers)`\n* `cache_size` - size of the cache of Kubernetes metadata to reduce requests to the API server (default: `1000`)\n* `cache_ttl` - TTL in seconds of each cached element. Set to negative value to disable TTL eviction (default: `3600` - 1 hour)\n* `watch` - set up a watch on pods on the API server for updates to metadata (default: `true`)\n* `annotation_match` - Array of regular expressions matching annotation field names. Matched annotations are added to a log record.\n* `allow_orphans` - Modify the namespace and namespace id to the values of `orphaned_namespace_name`",
                    "rendered": {
                      "text": "` or `docker_id (/var/log/containers)`\n* `cache_size` - size of the cache of Kubernetes metadata to reduce requests to the API server (default: `1000`)\n* `cache_ttl` - TTL in seconds of each cached element. Set to negative value to disable TTL eviction (default: `3600` - 1 hour)\n* `watch` - set up a watch on pods on the API server for updates to metadata (default: `true`)\n* `annotation_match` - Array of regular expressions matching annotation field names. Matched annotations are added to a log record.\n* `allow_orphans` - Modify the namespace and namespace id to the values of `orphaned_namespace_name`",
                      "markdown": "`` or `docker_id (/var/log/containers)`\n* `cache_size` - size of the cache of Kubernetes metadata to reduce requests to the API server (default: `1000`)\n* `cache_ttl` - TTL in seconds of each cached element. Set to negative value to disable TTL eviction (default: `3600` - 1 hour)\n* `watch` - set up a watch on pods on the API server for updates to metadata (default: `true`)\n* `annotation_match` - Array of regular expressions matching annotation field names. Matched annotations are added to a log record.\n* `allow_orphans` - Modify the namespace and namespace id to the values of `orphaned_namespace_name``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fluent-plugin-kubernetes_metadata_filter.zip/README.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 55,
                  "endLine": 17,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n## Requirements\n\n| fluent-plugin-kubernetes_metadata_filter  | fluentd | ruby |\n|-------------------|---------|------|\n| >= 2.10.0 | >= v1.10.0 | >= 2.6 |\n| >= 2.5.0 | >= v1.10.0 | >= 2.5 |\n",
                    "rendered": {
                      "text": "\n## Requirements\n\n| fluent-plugin-kubernetes_metadata_filter  | fluentd | ruby |\n|-------------------|---------|------|\n| >= 2.10.0 | >= v1.10.0 | >= 2.6 |\n| >= 2.5.0 | >= v1.10.0 | >= 2.5 |\n",
                      "markdown": "`\n## Requirements\n\n| fluent-plugin-kubernetes_metadata_filter  | fluentd | ruby |\n|-------------------|---------|------|\n| >= 2.10.0 | >= v1.10.0 | >= 2.6 |\n| >= 2.5.0 | >= v1.10.0 | >= 2.5 |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}