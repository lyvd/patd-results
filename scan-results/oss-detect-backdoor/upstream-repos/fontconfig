{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/confdir.sgml.in"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 22,
                  "endLine": 24,
                  "endColumn": 26,
                  "snippet": {
                    "text": "   TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   PERFORMANCE OF THIS SOFTWARE.\n-->\n<!-- this is filled in at make time -->\n<!--@BASECONFIGDIR@-->\n/etc/fonts\n",
                    "rendered": {
                      "text": "   TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   PERFORMANCE OF THIS SOFTWARE.\n-->\n<!-- this is filled in at make time -->\n<!--@BASECONFIGDIR@-->\n/etc/fonts\n",
                      "markdown": "`   TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   PERFORMANCE OF THIS SOFTWARE.\n-->\n<!-- this is filled in at make time -->\n<!--@BASECONFIGDIR@-->\n/etc/fonts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/confdir.sgml.in"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 30,
                  "endLine": 24,
                  "endColumn": 36,
                  "snippet": {
                    "text": "   TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   PERFORMANCE OF THIS SOFTWARE.\n-->\n<!-- this is filled in at make time -->\n<!--@BASECONFIGDIR@-->\n/etc/fonts\n",
                    "rendered": {
                      "text": "   TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   PERFORMANCE OF THIS SOFTWARE.\n-->\n<!-- this is filled in at make time -->\n<!--@BASECONFIGDIR@-->\n/etc/fonts\n",
                      "markdown": "`   TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   PERFORMANCE OF THIS SOFTWARE.\n-->\n<!-- this is filled in at make time -->\n<!--@BASECONFIGDIR@-->\n/etc/fonts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 61,
                  "endLine": 305,
                  "snippet": {
                    "text": "\n</variablelist>\n\nFor example, the format \"%{family|downcase|delete( )}\\n\" will expand\nto the values of the family element in <parameter>pattern</parameter>,\nlower-cased and with spaces removed.\n\n@SINCE@         2.9.0\n",
                    "rendered": {
                      "text": "\n</variablelist>\n\nFor example, the format \"%{family|downcase|delete( )}\\n\" will expand\nto the values of the family element in <parameter>pattern</parameter>,\nlower-cased and with spaces removed.\n\n@SINCE@         2.9.0\n",
                      "markdown": "`\n</variablelist>\n\nFor example, the format \"%{family|downcase|delete( )}\\n\" will expand\nto the values of the family element in <parameter>pattern</parameter>,\nlower-cased and with spaces removed.\n\n@SINCE@         2.9.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 62,
                  "endLine": 224,
                  "snippet": {
                    "text": "\n</variablelist>\n\nFor example, the format \"%{+family,style{%{=unparse}}}\\n\" will expand\nto an unparsed name containing only the family and style element values\nfrom <parameter>pattern</parameter>.\n\n</para><para>\n",
                    "rendered": {
                      "text": "\n</variablelist>\n\nFor example, the format \"%{+family,style{%{=unparse}}}\\n\" will expand\nto an unparsed name containing only the family and style element values\nfrom <parameter>pattern</parameter>.\n\n</para><para>\n",
                      "markdown": "`\n</variablelist>\n\nFor example, the format \"%{+family,style{%{=unparse}}}\\n\" will expand\nto an unparsed name containing only the family and style element values\nfrom <parameter>pattern</parameter>.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 4,
                  "endLine": 166,
                  "endColumn": 12,
                  "snippet": {
                    "text": "a single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\nwill expand the pattern \"%{family} (%{familylang})\\n\" with a pattern\nhaving only the first value of the family and familylang elements, then expands\nit with the second values, then the third, etc.\n\n",
                    "rendered": {
                      "text": "a single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\nwill expand the pattern \"%{family} (%{familylang})\\n\" with a pattern\nhaving only the first value of the family and familylang elements, then expands\nit with the second values, then the third, etc.\n\n",
                      "markdown": "`a single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\nwill expand the pattern \"%{family} (%{familylang})\\n\" with a pattern\nhaving only the first value of the family and familylang elements, then expands\nit with the second values, then the third, etc.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 66,
                  "endLine": 153,
                  "snippet": {
                    "text": "is negated.  The conditional passes if all the element conditions pass.\nThe tag expands the first sub-expression if the conditional passes, and\nexpands the second sub-expression otherwise.\nFor example, the format \"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand\nto \"pass\" if <parameter>pattern</parameter> has size and dpi elements but\nno pixelsize element, and to \"fail\" otherwise.\n\n</para><para>\n",
                    "rendered": {
                      "text": "is negated.  The conditional passes if all the element conditions pass.\nThe tag expands the first sub-expression if the conditional passes, and\nexpands the second sub-expression otherwise.\nFor example, the format \"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand\nto \"pass\" if <parameter>pattern</parameter> has size and dpi elements but\nno pixelsize element, and to \"fail\" otherwise.\n\n</para><para>\n",
                      "markdown": "`is negated.  The conditional passes if all the element conditions pass.\nThe tag expands the first sub-expression if the conditional passes, and\nexpands the second sub-expression otherwise.\nFor example, the format \"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand\nto \"pass\" if <parameter>pattern</parameter> has size and dpi elements but\nno pixelsize element, and to \"fail\" otherwise.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 62,
                  "endLine": 137,
                  "endColumn": 70,
                  "snippet": {
                    "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nonly has the listed elements from the surrounding pattern.\nFor example, the format \"%{+family,familylang{sub-expr}}\" will expand \"sub-expr\"\nwith a sub-pattern consisting only the family and family lang elements of\n<parameter>pattern</parameter>.\n\n",
                    "rendered": {
                      "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nonly has the listed elements from the surrounding pattern.\nFor example, the format \"%{+family,familylang{sub-expr}}\" will expand \"sub-expr\"\nwith a sub-pattern consisting only the family and family lang elements of\n<parameter>pattern</parameter>.\n\n",
                      "markdown": "`comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nonly has the listed elements from the surrounding pattern.\nFor example, the format \"%{+family,familylang{sub-expr}}\" will expand \"sub-expr\"\nwith a sub-pattern consisting only the family and family lang elements of\n<parameter>pattern</parameter>.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 59,
                  "endLine": 127,
                  "endColumn": 67,
                  "snippet": {
                    "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nhas the listed elements removed from it.\nFor example, the format \"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\"\nwith <parameter>pattern</parameter> sans the size and pixelsize elements.\n\n</para><para>\n",
                    "rendered": {
                      "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nhas the listed elements removed from it.\nFor example, the format \"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\"\nwith <parameter>pattern</parameter> sans the size and pixelsize elements.\n\n</para><para>\n",
                      "markdown": "`comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nhas the listed elements removed from it.\nFor example, the format \"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\"\nwith <parameter>pattern</parameter> sans the size and pixelsize elements.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 36,
                  "endLine": 118,
                  "endColumn": 40,
                  "snippet": {
                    "text": "apply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\nto construct the family name followed by the style, then takes the entire\nstring and pads it on the left to be at least forty characters.\n\n</para><para>\n\n",
                    "rendered": {
                      "text": "apply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\nto construct the family name followed by the style, then takes the entire\nstring and pads it on the left to be at least forty characters.\n\n</para><para>\n\n",
                      "markdown": "`apply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\nto construct the family name followed by the style, then takes the entire\nstring and pads it on the left to be at least forty characters.\n\n</para><para>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 25,
                  "endLine": 113,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nA <firstterm>sub-expression</firstterm> tag\nis one that expands a sub-expression.  The tag contents\nare the sub-expression to expand placed inside another set of curly braces.\nSub-expression tags are useful for aligning an entire sub-expression, or to\napply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\n",
                    "rendered": {
                      "text": "\nA <firstterm>sub-expression</firstterm> tag\nis one that expands a sub-expression.  The tag contents\nare the sub-expression to expand placed inside another set of curly braces.\nSub-expression tags are useful for aligning an entire sub-expression, or to\napply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\n",
                      "markdown": "`\nA <firstterm>sub-expression</firstterm> tag\nis one that expands a sub-expression.  The tag contents\nare the sub-expression to expand placed inside another set of curly braces.\nSub-expression tags are useful for aligning an entire sub-expression, or to\napply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 22,
                  "endLine": 98,
                  "endColumn": 30,
                  "snippet": {
                    "text": "If a simple tag contains the string \":-\", the rest of the the tag contents\nwill be used as a default string.  The default string is output if the element\nis not found in the pattern.  For example, the format\n\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string\n\":weight=123\" if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                    "rendered": {
                      "text": "If a simple tag contains the string \":-\", the rest of the the tag contents\nwill be used as a default string.  The default string is output if the element\nis not found in the pattern.  For example, the format\n\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string\n\":weight=123\" if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                      "markdown": "`If a simple tag contains the string \":-\", the rest of the the tag contents\nwill be used as a default string.  The default string is output if the element\nis not found in the pattern.  For example, the format\n\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string\n\":weight=123\" if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nIf a simple tag starts with \":\" and the element is found in the pattern, \":\"\nwill be printed first.  For example, combining this with the =, the format\n\"%{:weight=}\" may expand to \":weight=80\" or to the empty string\nif <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                    "rendered": {
                      "text": "\nIf a simple tag starts with \":\" and the element is found in the pattern, \":\"\nwill be printed first.  For example, combining this with the =, the format\n\"%{:weight=}\" may expand to \":weight=80\" or to the empty string\nif <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                      "markdown": "`\nIf a simple tag starts with \":\" and the element is found in the pattern, \":\"\nwill be printed first.  For example, combining this with the =, the format\n\"%{:weight=}\" may expand to \":weight=80\" or to the empty string\nif <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 29,
                  "endLine": 83,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nIf a simple tag ends with \"=\" and the element is found in the pattern, the\nname of the element followed by \"=\" will be output before the list of values.\nFor example, \"%{weight=}\" may expand to the string \"weight=80\".  Or to the empty\nstring if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                    "rendered": {
                      "text": "\nIf a simple tag ends with \"=\" and the element is found in the pattern, the\nname of the element followed by \"=\" will be output before the list of values.\nFor example, \"%{weight=}\" may expand to the string \"weight=80\".  Or to the empty\nstring if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                      "markdown": "`\nIf a simple tag ends with \"=\" and the element is found in the pattern, the\nname of the element followed by \"=\" will be output before the list of values.\nFor example, \"%{weight=}\" may expand to the string \"weight=80\".  Or to the empty\nstring if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 11,
                  "endLine": 75,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n</para><para>\n\nSimple tags expand to list of all values for an element.  To only choose\none of the values, one can index using the syntax \"%{elt[idx]}\".  For example,\nto get the first family name only, use \"%{family[0]}\".\n\n",
                    "rendered": {
                      "text": "\n</para><para>\n\nSimple tags expand to list of all values for an element.  To only choose\none of the values, one can index using the syntax \"%{elt[idx]}\".  For example,\nto get the first family name only, use \"%{family[0]}\".\n\n",
                      "markdown": "`\n</para><para>\n\nSimple tags expand to list of all values for an element.  To only choose\none of the values, one can index using the syntax \"%{elt[idx]}\".  For example,\nto get the first family name only, use \"%{family[0]}\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 61,
                  "endLine": 305,
                  "snippet": {
                    "text": "\n</variablelist>\n\nFor example, the format \"%{family|downcase|delete( )}\\n\" will expand\nto the values of the family element in <parameter>pattern</parameter>,\nlower-cased and with spaces removed.\n\n@SINCE@         2.9.0\n",
                    "rendered": {
                      "text": "\n</variablelist>\n\nFor example, the format \"%{family|downcase|delete( )}\\n\" will expand\nto the values of the family element in <parameter>pattern</parameter>,\nlower-cased and with spaces removed.\n\n@SINCE@         2.9.0\n",
                      "markdown": "`\n</variablelist>\n\nFor example, the format \"%{family|downcase|delete( )}\\n\" will expand\nto the values of the family element in <parameter>pattern</parameter>,\nlower-cased and with spaces removed.\n\n@SINCE@         2.9.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 62,
                  "endLine": 224,
                  "snippet": {
                    "text": "\n</variablelist>\n\nFor example, the format \"%{+family,style{%{=unparse}}}\\n\" will expand\nto an unparsed name containing only the family and style element values\nfrom <parameter>pattern</parameter>.\n\n</para><para>\n",
                    "rendered": {
                      "text": "\n</variablelist>\n\nFor example, the format \"%{+family,style{%{=unparse}}}\\n\" will expand\nto an unparsed name containing only the family and style element values\nfrom <parameter>pattern</parameter>.\n\n</para><para>\n",
                      "markdown": "`\n</variablelist>\n\nFor example, the format \"%{+family,style{%{=unparse}}}\\n\" will expand\nto an unparsed name containing only the family and style element values\nfrom <parameter>pattern</parameter>.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 4,
                  "endLine": 166,
                  "endColumn": 12,
                  "snippet": {
                    "text": "a single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\nwill expand the pattern \"%{family} (%{familylang})\\n\" with a pattern\nhaving only the first value of the family and familylang elements, then expands\nit with the second values, then the third, etc.\n\n",
                    "rendered": {
                      "text": "a single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\nwill expand the pattern \"%{family} (%{familylang})\\n\" with a pattern\nhaving only the first value of the family and familylang elements, then expands\nit with the second values, then the third, etc.\n\n",
                      "markdown": "`a single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\nwill expand the pattern \"%{family} (%{familylang})\\n\" with a pattern\nhaving only the first value of the family and familylang elements, then expands\nit with the second values, then the third, etc.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 45,
                  "endLine": 162,
                  "endColumn": 51,
                  "snippet": {
                    "text": "is one starting with the string \"[]\" followed by a\ncomma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The list of values for the named elements are walked in\nparallel and the sub-expression expanded each time with a pattern just having\na single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\n",
                    "rendered": {
                      "text": "is one starting with the string \"[]\" followed by a\ncomma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The list of values for the named elements are walked in\nparallel and the sub-expression expanded each time with a pattern just having\na single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\n",
                      "markdown": "`is one starting with the string \"[]\" followed by a\ncomma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The list of values for the named elements are walked in\nparallel and the sub-expression expanded each time with a pattern just having\na single value for those elements, starting from the first value and\ncontinuing as long as any of those elements has a value.\nFor example, the format \"%{[]family,familylang{%{family} (%{familylang})\\n}}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 66,
                  "endLine": 153,
                  "snippet": {
                    "text": "is negated.  The conditional passes if all the element conditions pass.\nThe tag expands the first sub-expression if the conditional passes, and\nexpands the second sub-expression otherwise.\nFor example, the format \"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand\nto \"pass\" if <parameter>pattern</parameter> has size and dpi elements but\nno pixelsize element, and to \"fail\" otherwise.\n\n</para><para>\n",
                    "rendered": {
                      "text": "is negated.  The conditional passes if all the element conditions pass.\nThe tag expands the first sub-expression if the conditional passes, and\nexpands the second sub-expression otherwise.\nFor example, the format \"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand\nto \"pass\" if <parameter>pattern</parameter> has size and dpi elements but\nno pixelsize element, and to \"fail\" otherwise.\n\n</para><para>\n",
                      "markdown": "`is negated.  The conditional passes if all the element conditions pass.\nThe tag expands the first sub-expression if the conditional passes, and\nexpands the second sub-expression otherwise.\nFor example, the format \"%{?size,dpi,!pixelsize{pass}{fail}}\" will expand\nto \"pass\" if <parameter>pattern</parameter> has size and dpi elements but\nno pixelsize element, and to \"fail\" otherwise.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 62,
                  "endLine": 137,
                  "endColumn": 70,
                  "snippet": {
                    "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nonly has the listed elements from the surrounding pattern.\nFor example, the format \"%{+family,familylang{sub-expr}}\" will expand \"sub-expr\"\nwith a sub-pattern consisting only the family and family lang elements of\n<parameter>pattern</parameter>.\n\n",
                    "rendered": {
                      "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nonly has the listed elements from the surrounding pattern.\nFor example, the format \"%{+family,familylang{sub-expr}}\" will expand \"sub-expr\"\nwith a sub-pattern consisting only the family and family lang elements of\n<parameter>pattern</parameter>.\n\n",
                      "markdown": "`comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nonly has the listed elements from the surrounding pattern.\nFor example, the format \"%{+family,familylang{sub-expr}}\" will expand \"sub-expr\"\nwith a sub-pattern consisting only the family and family lang elements of\n<parameter>pattern</parameter>.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 59,
                  "endLine": 127,
                  "endColumn": 67,
                  "snippet": {
                    "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nhas the listed elements removed from it.\nFor example, the format \"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\"\nwith <parameter>pattern</parameter> sans the size and pixelsize elements.\n\n</para><para>\n",
                    "rendered": {
                      "text": "comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nhas the listed elements removed from it.\nFor example, the format \"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\"\nwith <parameter>pattern</parameter> sans the size and pixelsize elements.\n\n</para><para>\n",
                      "markdown": "`comma-separated list of element names, followed by a sub-expression enclosed\nin curly braces.  The sub-expression will be expanded but with a pattern that\nhas the listed elements removed from it.\nFor example, the format \"%{-size,pixelsize{sub-expr}}\" will expand \"sub-expr\"\nwith <parameter>pattern</parameter> sans the size and pixelsize elements.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 25,
                  "endLine": 113,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\nA <firstterm>sub-expression</firstterm> tag\nis one that expands a sub-expression.  The tag contents\nare the sub-expression to expand placed inside another set of curly braces.\nSub-expression tags are useful for aligning an entire sub-expression, or to\napply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\n",
                    "rendered": {
                      "text": "\nA <firstterm>sub-expression</firstterm> tag\nis one that expands a sub-expression.  The tag contents\nare the sub-expression to expand placed inside another set of curly braces.\nSub-expression tags are useful for aligning an entire sub-expression, or to\napply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\n",
                      "markdown": "`\nA <firstterm>sub-expression</firstterm> tag\nis one that expands a sub-expression.  The tag contents\nare the sub-expression to expand placed inside another set of curly braces.\nSub-expression tags are useful for aligning an entire sub-expression, or to\napply converters (explained later) to the entire sub-expression output.\nFor example, the format \"%40{{%{family} %{style}}}\" expands the sub-expression\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 22,
                  "endLine": 98,
                  "endColumn": 30,
                  "snippet": {
                    "text": "If a simple tag contains the string \":-\", the rest of the the tag contents\nwill be used as a default string.  The default string is output if the element\nis not found in the pattern.  For example, the format\n\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string\n\":weight=123\" if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                    "rendered": {
                      "text": "If a simple tag contains the string \":-\", the rest of the the tag contents\nwill be used as a default string.  The default string is output if the element\nis not found in the pattern.  For example, the format\n\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string\n\":weight=123\" if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                      "markdown": "`If a simple tag contains the string \":-\", the rest of the the tag contents\nwill be used as a default string.  The default string is output if the element\nis not found in the pattern.  For example, the format\n\"%{:weight=:-123}\" may expand to \":weight=80\" or to the string\n\":weight=123\" if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 17,
                  "endLine": 90,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nIf a simple tag starts with \":\" and the element is found in the pattern, \":\"\nwill be printed first.  For example, combining this with the =, the format\n\"%{:weight=}\" may expand to \":weight=80\" or to the empty string\nif <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                    "rendered": {
                      "text": "\nIf a simple tag starts with \":\" and the element is found in the pattern, \":\"\nwill be printed first.  For example, combining this with the =, the format\n\"%{:weight=}\" may expand to \":weight=80\" or to the empty string\nif <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                      "markdown": "`\nIf a simple tag starts with \":\" and the element is found in the pattern, \":\"\nwill be printed first.  For example, combining this with the =, the format\n\"%{:weight=}\" may expand to \":weight=80\" or to the empty string\nif <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 29,
                  "endLine": 83,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nIf a simple tag ends with \"=\" and the element is found in the pattern, the\nname of the element followed by \"=\" will be output before the list of values.\nFor example, \"%{weight=}\" may expand to the string \"weight=80\".  Or to the empty\nstring if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                    "rendered": {
                      "text": "\nIf a simple tag ends with \"=\" and the element is found in the pattern, the\nname of the element followed by \"=\" will be output before the list of values.\nFor example, \"%{weight=}\" may expand to the string \"weight=80\".  Or to the empty\nstring if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n",
                      "markdown": "`\nIf a simple tag ends with \"=\" and the element is found in the pattern, the\nname of the element followed by \"=\" will be output before the list of values.\nFor example, \"%{weight=}\" may expand to the string \"weight=80\".  Or to the empty\nstring if <parameter>pattern</parameter> does not have weight set.\n\n</para><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcformat.fncs"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 11,
                  "endLine": 75,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n</para><para>\n\nSimple tags expand to list of all values for an element.  To only choose\none of the values, one can index using the syntax \"%{elt[idx]}\".  For example,\nto get the first family name only, use \"%{family[0]}\".\n\n",
                    "rendered": {
                      "text": "\n</para><para>\n\nSimple tags expand to list of all values for an element.  To only choose\none of the values, one can index using the syntax \"%{elt[idx]}\".  For example,\nto get the first family name only, use \"%{family[0]}\".\n\n",
                      "markdown": "`\n</para><para>\n\nSimple tags expand to list of all values for an element.  To only choose\none of the values, one can index using the syntax \"%{elt[idx]}\".  For example,\nto get the first family name only, use \"%{family[0]}\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 46,
                  "endLine": 214,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t[ ! -f $(builddir)/fontconfig-user.sgml ] && cp -a $(srcdir)/fontconfig-user.sgml $(builddir)/fontconfig-user.sgml || :\nlocal-fontconfig-devel.sgml: $(srcdir)/fontconfig-devel.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-devel.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-devel.sgml ] && cp -a $(srcdir)/fontconfig-devel.sgml $(builddir)/fontconfig-devel.sgml || :\n#\nall-local: $(BUILT_DOCS) $(HTML_DIR)/*\nclean-local:\n",
                    "rendered": {
                      "text": "\t[ ! -f $(builddir)/fontconfig-user.sgml ] && cp -a $(srcdir)/fontconfig-user.sgml $(builddir)/fontconfig-user.sgml || :\nlocal-fontconfig-devel.sgml: $(srcdir)/fontconfig-devel.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-devel.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-devel.sgml ] && cp -a $(srcdir)/fontconfig-devel.sgml $(builddir)/fontconfig-devel.sgml || :\n#\nall-local: $(BUILT_DOCS) $(HTML_DIR)/*\nclean-local:\n",
                      "markdown": "`\t[ ! -f $(builddir)/fontconfig-user.sgml ] && cp -a $(srcdir)/fontconfig-user.sgml $(builddir)/fontconfig-user.sgml || :\nlocal-fontconfig-devel.sgml: $(srcdir)/fontconfig-devel.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-devel.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-devel.sgml ] && cp -a $(srcdir)/fontconfig-devel.sgml $(builddir)/fontconfig-devel.sgml || :\n#\nall-local: $(BUILT_DOCS) $(HTML_DIR)/*\nclean-local:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 45,
                  "endLine": 211,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\t$(DOC2HTML) -V '%use-id-as-filename%' -o $@ local-fontconfig-devel.sgml\nlocal-fontconfig-user.sgml: $(srcdir)/fontconfig-user.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-user.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-user.sgml ] && cp -a $(srcdir)/fontconfig-user.sgml $(builddir)/fontconfig-user.sgml || :\nlocal-fontconfig-devel.sgml: $(srcdir)/fontconfig-devel.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-devel.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-devel.sgml ] && cp -a $(srcdir)/fontconfig-devel.sgml $(builddir)/fontconfig-devel.sgml || :\n",
                    "rendered": {
                      "text": "\t$(DOC2HTML) -V '%use-id-as-filename%' -o $@ local-fontconfig-devel.sgml\nlocal-fontconfig-user.sgml: $(srcdir)/fontconfig-user.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-user.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-user.sgml ] && cp -a $(srcdir)/fontconfig-user.sgml $(builddir)/fontconfig-user.sgml || :\nlocal-fontconfig-devel.sgml: $(srcdir)/fontconfig-devel.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-devel.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-devel.sgml ] && cp -a $(srcdir)/fontconfig-devel.sgml $(builddir)/fontconfig-devel.sgml || :\n",
                      "markdown": "`\t$(DOC2HTML) -V '%use-id-as-filename%' -o $@ local-fontconfig-devel.sgml\nlocal-fontconfig-user.sgml: $(srcdir)/fontconfig-user.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-user.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-user.sgml ] && cp -a $(srcdir)/fontconfig-user.sgml $(builddir)/fontconfig-user.sgml || :\nlocal-fontconfig-devel.sgml: $(srcdir)/fontconfig-devel.sgml\n\t$(AM_V_GEN) $(LN_S) $(srcdir)/fontconfig-devel.sgml $@;\t\\\n\t[ ! -f $(builddir)/fontconfig-devel.sgml ] && cp -a $(srcdir)/fontconfig-devel.sgml $(builddir)/fontconfig-devel.sgml || :\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 76,
                  "endLine": 199,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n\t$(AM_V_GEN) sed -e 's,@BASECONFIGDIR\\@,${BASECONFIGDIR},' $(srcdir)/$@.in | awk '{if (NR > 1) printf(\"\\n\"); printf(\"%s\", $$0);}' > $@\n##\n$(DOC_FUNCS_SGML): $(DOC_FUNCS_FNCS) $(srcdir)/edit-sgml.py $(srcdir)/func.sgml\n$(TXT_FILES): $(DOCS_DEPS)\n",
                    "rendered": {
                      "text": "\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n\t$(AM_V_GEN) sed -e 's,@BASECONFIGDIR\\@,${BASECONFIGDIR},' $(srcdir)/$@.in | awk '{if (NR > 1) printf(\"\\n\"); printf(\"%s\", $$0);}' > $@\n##\n$(DOC_FUNCS_SGML): $(DOC_FUNCS_FNCS) $(srcdir)/edit-sgml.py $(srcdir)/func.sgml\n$(TXT_FILES): $(DOCS_DEPS)\n",
                      "markdown": "`\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n\t$(AM_V_GEN) sed -e 's,@BASECONFIGDIR\\@,${BASECONFIGDIR},' $(srcdir)/$@.in | awk '{if (NR > 1) printf(\"\\n\"); printf(\"%s\", $$0);}' > $@\n##\n$(DOC_FUNCS_SGML): $(DOC_FUNCS_FNCS) $(srcdir)/edit-sgml.py $(srcdir)/func.sgml\n$(TXT_FILES): $(DOCS_DEPS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 12,
                  "endLine": 199,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n\t$(AM_V_GEN) sed -e 's,@BASECONFIGDIR\\@,${BASECONFIGDIR},' $(srcdir)/$@.in | awk '{if (NR > 1) printf(\"\\n\"); printf(\"%s\", $$0);}' > $@\n##\n$(DOC_FUNCS_SGML): $(DOC_FUNCS_FNCS) $(srcdir)/edit-sgml.py $(srcdir)/func.sgml\n$(TXT_FILES): $(DOCS_DEPS)\n",
                    "rendered": {
                      "text": "\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n\t$(AM_V_GEN) sed -e 's,@BASECONFIGDIR\\@,${BASECONFIGDIR},' $(srcdir)/$@.in | awk '{if (NR > 1) printf(\"\\n\"); printf(\"%s\", $$0);}' > $@\n##\n$(DOC_FUNCS_SGML): $(DOC_FUNCS_FNCS) $(srcdir)/edit-sgml.py $(srcdir)/func.sgml\n$(TXT_FILES): $(DOCS_DEPS)\n",
                      "markdown": "`\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n\t$(AM_V_GEN) sed -e 's,@BASECONFIGDIR\\@,${BASECONFIGDIR},' $(srcdir)/$@.in | awk '{if (NR > 1) printf(\"\\n\"); printf(\"%s\", $$0);}' > $@\n##\n$(DOC_FUNCS_SGML): $(DOC_FUNCS_FNCS) $(srcdir)/edit-sgml.py $(srcdir)/func.sgml\n$(TXT_FILES): $(DOCS_DEPS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 195,
                  "endLine": 195,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t$(AM_V_GEN) $(RM) $@; \\\n\t$(DOC2MAN) -o devel-man local-fontconfig-devel.sgml && \\\n\tmv devel-man/manpage.refs func.refs &&\t\\\n\tmv devel-man/*.3 . &&\t\t\t\\\n\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n",
                    "rendered": {
                      "text": "\t$(AM_V_GEN) $(RM) $@; \\\n\t$(DOC2MAN) -o devel-man local-fontconfig-devel.sgml && \\\n\tmv devel-man/manpage.refs func.refs &&\t\\\n\tmv devel-man/*.3 . &&\t\t\t\\\n\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n",
                      "markdown": "`\t$(AM_V_GEN) $(RM) $@; \\\n\t$(DOC2MAN) -o devel-man local-fontconfig-devel.sgml && \\\n\tmv devel-man/manpage.refs func.refs &&\t\\\n\tmv devel-man/*.3 . &&\t\t\t\\\n\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\nconfdir.sgml: $(srcdir)/confdir.sgml.in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/Makefile.am"
                },
                "region": {
                  "startLine": 194,
                  "endLine": 194,
                  "endColumn": 4,
                  "snippet": {
                    "text": "func.refs: local-fontconfig-devel.sgml $(DOCS_DEPS)\n\t$(AM_V_GEN) $(RM) $@; \\\n\t$(DOC2MAN) -o devel-man local-fontconfig-devel.sgml && \\\n\tmv devel-man/manpage.refs func.refs &&\t\\\n\tmv devel-man/*.3 . &&\t\t\t\\\n\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\n",
                    "rendered": {
                      "text": "func.refs: local-fontconfig-devel.sgml $(DOCS_DEPS)\n\t$(AM_V_GEN) $(RM) $@; \\\n\t$(DOC2MAN) -o devel-man local-fontconfig-devel.sgml && \\\n\tmv devel-man/manpage.refs func.refs &&\t\\\n\tmv devel-man/*.3 . &&\t\t\t\\\n\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\n",
                      "markdown": "`func.refs: local-fontconfig-devel.sgml $(DOCS_DEPS)\n\t$(AM_V_GEN) $(RM) $@; \\\n\t$(DOC2MAN) -o devel-man local-fontconfig-devel.sgml && \\\n\tmv devel-man/manpage.refs func.refs &&\t\\\n\tmv devel-man/*.3 . &&\t\t\t\\\n\t$(RM) devel-man/manpage.* &&\t\t\\\n\trmdir devel-man || rm $@ || :\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-validate/fc-validate.sgml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 16,
                  "endLine": 4,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<!doctype refentry PUBLIC \"-//OASIS//DTD DocBook V4.1//EN\" [\n\n<!--\nCopyright © 2012 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                    "rendered": {
                      "text": "<!doctype refentry PUBLIC \"-//OASIS//DTD DocBook V4.1//EN\" [\n\n<!--\nCopyright © 2012 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                      "markdown": "`<!doctype refentry PUBLIC \"-//OASIS//DTD DocBook V4.1//EN\" [\n\n<!--\nCopyright © 2012 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-validate/fc-validate.sgml"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 22,
                  "endLine": 189,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-validate/fc-validate.sgml"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 37,
                  "endLine": 178,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-validate</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n",
                    "rendered": {
                      "text": "  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-validate</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n",
                      "markdown": "`  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-validate</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-validate/fc-validate.sgml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/po-conf/Makevars"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 39,
                  "endLine": 74,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n# regenerate PO files on \"make dist\".  Possible values are \"yes\" and\n# \"no\".  Set this to no if the POT file and PO files are maintained\n# externally.\n",
                    "rendered": {
                      "text": "# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n# regenerate PO files on \"make dist\".  Possible values are \"yes\" and\n# \"no\".  Set this to no if the POT file and PO files are maintained\n# externally.\n",
                      "markdown": "`# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n# regenerate PO files on \"make dist\".  Possible values are \"yes\" and\n# \"no\".  Set this to no if the POT file and PO files are maintained\n# externally.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/po-conf/Makevars"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 59,
                  "endLine": 71,
                  "snippet": {
                    "text": "\n# This tells whether or not to regenerate a PO file when $(DOMAIN).pot\n# has changed.  Possible values are \"yes\" and \"no\".  Set this to no if\n# the POT file is checked in the repository and the version control\n# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n",
                    "rendered": {
                      "text": "\n# This tells whether or not to regenerate a PO file when $(DOMAIN).pot\n# has changed.  Possible values are \"yes\" and \"no\".  Set this to no if\n# the POT file is checked in the repository and the version control\n# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n",
                      "markdown": "`\n# This tells whether or not to regenerate a PO file when $(DOMAIN).pot\n# has changed.  Possible values are \"yes\" and \"no\".  Set this to no if\n# the POT file is checked in the repository and the version control\n# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/po-conf/Makevars"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 66,
                  "endLine": 36,
                  "endColumn": 72,
                  "snippet": {
                    "text": "#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n",
                    "rendered": {
                      "text": "#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n",
                      "markdown": "`#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-query/fc-query.sgml"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 22,
                  "endLine": 189,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-query/fc-query.sgml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 37,
                  "endLine": 160,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-query</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n",
                    "rendered": {
                      "text": "  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-query</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n",
                      "markdown": "`  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-query</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-query/fc-query.sgml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/ee.orth"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 35,
                  "endLine": 37,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# combining marks.\n#\n# Sources also differ on the notation used for the fourth tone: circumflex\n# vs combining line above (U+030D). At the moment, we are not including any\n# of the two.\n#\n# There is also a nasalization mark for vowels (combining tilde), but there\n",
                    "rendered": {
                      "text": "# combining marks.\n#\n# Sources also differ on the notation used for the fourth tone: circumflex\n# vs combining line above (U+030D). At the moment, we are not including any\n# of the two.\n#\n# There is also a nasalization mark for vowels (combining tilde), but there\n",
                      "markdown": "`# combining marks.\n#\n# Sources also differ on the notation used for the fourth tone: circumflex\n# vs combining line above (U+030D). At the moment, we are not including any\n# of the two.\n#\n# There is also a nasalization mark for vowels (combining tilde), but there\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/ee.orth"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 32,
                  "endLine": 41,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# of the two.\n#\n# There is also a nasalization mark for vowels (combining tilde), but there\n# is a need for more research to find which vowels it's used with. The\n# combination of nasalization and tones may also exist, resulting in double\n# accents.\n#\n",
                    "rendered": {
                      "text": "# of the two.\n#\n# There is also a nasalization mark for vowels (combining tilde), but there\n# is a need for more research to find which vowels it's used with. The\n# combination of nasalization and tones may also exist, resulting in double\n# accents.\n#\n",
                      "markdown": "`# of the two.\n#\n# There is also a nasalization mark for vowels (combining tilde), but there\n# is a need for more research to find which vowels it's used with. The\n# combination of nasalization and tones may also exist, resulting in double\n# accents.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/sl.orth"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 23,
                  "endLine": 71,
                  "endColumn": 27,
                  "snippet": {
                    "text": "#1E31\tLATIN SMALL LETTER K WITH ACUTE\n#\n# These are the transliteration target letters which are\n# not used in Slovenian at all\n#\n#0402\tCYRILLIC CAPITAL LETTER DJE (Serbocroatian)\n#0403\tCYRILLIC CAPITAL LETTER GJE\n",
                    "rendered": {
                      "text": "#1E31\tLATIN SMALL LETTER K WITH ACUTE\n#\n# These are the transliteration target letters which are\n# not used in Slovenian at all\n#\n#0402\tCYRILLIC CAPITAL LETTER DJE (Serbocroatian)\n#0403\tCYRILLIC CAPITAL LETTER GJE\n",
                      "markdown": "`#1E31\tLATIN SMALL LETTER K WITH ACUTE\n#\n# These are the transliteration target letters which are\n# not used in Slovenian at all\n#\n#0402\tCYRILLIC CAPITAL LETTER DJE (Serbocroatian)\n#0403\tCYRILLIC CAPITAL LETTER GJE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/mni.orth"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 17,
                  "snippet": {
                    "text": "#\n# Maniputi (mni)\n#\n# Source: Script grammer: http://tdil-dc.in/tdildcMain/articles/283709Script_Grammar_for_Manipuri.pdf 6th page\n# Characters are encirled in Unicode chart http://pravins.fedorapeople.org/Manipuri-characters.pdf\n# documents\ninclude bn.orth\n",
                    "rendered": {
                      "text": "#\n# Maniputi (mni)\n#\n# Source: Script grammer: http://tdil-dc.in/tdildcMain/articles/283709Script_Grammar_for_Manipuri.pdf 6th page\n# Characters are encirled in Unicode chart http://pravins.fedorapeople.org/Manipuri-characters.pdf\n# documents\ninclude bn.orth\n",
                      "markdown": "`#\n# Maniputi (mni)\n#\n# Source: Script grammer: http://tdil-dc.in/tdildcMain/articles/283709Script_Grammar_for_Manipuri.pdf 6th page\n# Characters are encirled in Unicode chart http://pravins.fedorapeople.org/Manipuri-characters.pdf\n# documents\ninclude bn.orth\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-1"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 79,
                  "endLine": 115,
                  "endColumn": 3,
                  "snippet": {
                    "text": "SU\t\tSundanese West Java Austric F., Malayo-Polynesian Br. 26\nSV\t*\tSwedish Sweden, Finland Indo-European F., Germanic Br. 9 SV from Svenska\nSW\t*\tSwahili, kiSwahili Tanzania, Comoro Islands, Kenya, Mozambique, Zaire Niger-Kordofanian F., Non-Mande Br. 48\nTA\t*\tTamil Tamil Nadu (S India), Sri Lanka, Malaysia, Singapore Dravidian F. 71\nTE\t*\tTelugu, Telegu Andhra Pradesh (India) Dravidian F. 73\nTG\t*\tTajik, Tajiki Tadzhikstan Indo-European F., Indo-Iranian Br. 5\nTH\t*\tThai Thailand 50\nTI\t*\tTigrinya N Ethiopia Hamito-Semitic F., Semitic Br. 4\n",
                    "rendered": {
                      "text": "SU\t\tSundanese West Java Austric F., Malayo-Polynesian Br. 26\nSV\t*\tSwedish Sweden, Finland Indo-European F., Germanic Br. 9 SV from Svenska\nSW\t*\tSwahili, kiSwahili Tanzania, Comoro Islands, Kenya, Mozambique, Zaire Niger-Kordofanian F., Non-Mande Br. 48\nTA\t*\tTamil Tamil Nadu (S India), Sri Lanka, Malaysia, Singapore Dravidian F. 71\nTE\t*\tTelugu, Telegu Andhra Pradesh (India) Dravidian F. 73\nTG\t*\tTajik, Tajiki Tadzhikstan Indo-European F., Indo-Iranian Br. 5\nTH\t*\tThai Thailand 50\nTI\t*\tTigrinya N Ethiopia Hamito-Semitic F., Semitic Br. 4\n",
                      "markdown": "`SU\t\tSundanese West Java Austric F., Malayo-Polynesian Br. 26\nSV\t*\tSwedish Sweden, Finland Indo-European F., Germanic Br. 9 SV from Svenska\nSW\t*\tSwahili, kiSwahili Tanzania, Comoro Islands, Kenya, Mozambique, Zaire Niger-Kordofanian F., Non-Mande Br. 48\nTA\t*\tTamil Tamil Nadu (S India), Sri Lanka, Malaysia, Singapore Dravidian F. 71\nTE\t*\tTelugu, Telegu Andhra Pradesh (India) Dravidian F. 73\nTG\t*\tTajik, Tajiki Tadzhikstan Indo-European F., Indo-Iranian Br. 5\nTH\t*\tThai Thailand 50\nTI\t*\tTigrinya N Ethiopia Hamito-Semitic F., Semitic Br. 4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-1"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 98,
                  "endLine": 131,
                  "endColumn": 3,
                  "snippet": {
                    "text": ".\nUK\t*\tUkrainian Ukraine, Canada, U.S.A. Indo-European F., Balto-Slavic Br. 47\nUR\t*\tUrdu Pakistan, India Indo-European F., Indo-Iranian Br. 102 Same as Hindi [HI] except for writing system. See Note 3.\nUZ\t*\tUzbek, Uzbeg, Usbek, Usbeg Uzbekstan, Tadzhikstan, Afghanistan Uralo-Altaic F., Turkic Br. 14\nVI\t*\tVietnamese Viet Nam, Thailand, Cambodia, Laos, New Caledonia, France, Dakar Sino-Tibetan F., Sino-Siamese Br. 65\nVO\t*\tVolap?k Artificial language\nWO\t*\tWolof Senegal, Gambia Niger-Kordofanian F., Non-Mande Br. 7\nXH\t*\tXhosa, Xosa, isiXhosa South Africa, Rhodesia, Swaziland Niger-Kordofanian F., Non-",
                    "rendered": {
                      "text": ".\nUK\t*\tUkrainian Ukraine, Canada, U.S.A. Indo-European F., Balto-Slavic Br. 47\nUR\t*\tUrdu Pakistan, India Indo-European F., Indo-Iranian Br. 102 Same as Hindi [HI] except for writing system. See Note 3.\nUZ\t*\tUzbek, Uzbeg, Usbek, Usbeg Uzbekstan, Tadzhikstan, Afghanistan Uralo-Altaic F., Turkic Br. 14\nVI\t*\tVietnamese Viet Nam, Thailand, Cambodia, Laos, New Caledonia, France, Dakar Sino-Tibetan F., Sino-Siamese Br. 65\nVO\t*\tVolap?k Artificial language\nWO\t*\tWolof Senegal, Gambia Niger-Kordofanian F., Non-Mande Br. 7\nXH\t*\tXhosa, Xosa, isiXhosa South Africa, Rhodesia, Swaziland Niger-Kordofanian F., Non-",
                      "markdown": "`.\nUK\t*\tUkrainian Ukraine, Canada, U.S.A. Indo-European F., Balto-Slavic Br. 47\nUR\t*\tUrdu Pakistan, India Indo-European F., Indo-Iranian Br. 102 Same as Hindi [HI] except for writing system. See Note 3.\nUZ\t*\tUzbek, Uzbeg, Usbek, Usbeg Uzbekstan, Tadzhikstan, Afghanistan Uralo-Altaic F., Turkic Br. 14\nVI\t*\tVietnamese Viet Nam, Thailand, Cambodia, Laos, New Caledonia, France, Dakar Sino-Tibetan F., Sino-Siamese Br. 65\nVO\t*\tVolap?k Artificial language\nWO\t*\tWolof Senegal, Gambia Niger-Kordofanian F., Non-Mande Br. 7\nXH\t*\tXhosa, Xosa, isiXhosa South Africa, Rhodesia, Swaziland Niger-Kordofanian F., Non-`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-1"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 65,
                  "endLine": 82,
                  "endColumn": 69,
                  "snippet": {
                    "text": "MY\t*\tBurmese Burma, Bangladesh Sino-Tibetan F., Tibeto-Burmese Br. 30 MY from Myanmasa\nNA\t\tNauru, Nauruan Nauru Austric F., Malayo-Polynesian Br.\nNE\t*\tNepali, Nepalese Nepal, Uttar Pradesh (India) Indo-European F., Indo-Iranian Br. 16\nNL\t*\tDutch Netherlands, Belgium Indo-European F., Germanic Br. 21 NL from Nederlands\nNO\t*\tNorwegian Norway Indo-European F., Germanic Br. 5\nOC\t*\tOccitan S France Indo-European F., Italic Br. 4\nOM\t*\t(Afan) Oromo, Galla Ethiopia, Kenya Hamito-Semitic F., Cushitic Br. 10\n",
                    "rendered": {
                      "text": "MY\t*\tBurmese Burma, Bangladesh Sino-Tibetan F., Tibeto-Burmese Br. 30 MY from Myanmasa\nNA\t\tNauru, Nauruan Nauru Austric F., Malayo-Polynesian Br.\nNE\t*\tNepali, Nepalese Nepal, Uttar Pradesh (India) Indo-European F., Indo-Iranian Br. 16\nNL\t*\tDutch Netherlands, Belgium Indo-European F., Germanic Br. 21 NL from Nederlands\nNO\t*\tNorwegian Norway Indo-European F., Germanic Br. 5\nOC\t*\tOccitan S France Indo-European F., Italic Br. 4\nOM\t*\t(Afan) Oromo, Galla Ethiopia, Kenya Hamito-Semitic F., Cushitic Br. 10\n",
                      "markdown": "`MY\t*\tBurmese Burma, Bangladesh Sino-Tibetan F., Tibeto-Burmese Br. 30 MY from Myanmasa\nNA\t\tNauru, Nauruan Nauru Austric F., Malayo-Polynesian Br.\nNE\t*\tNepali, Nepalese Nepal, Uttar Pradesh (India) Indo-European F., Indo-Iranian Br. 16\nNL\t*\tDutch Netherlands, Belgium Indo-European F., Germanic Br. 21 NL from Nederlands\nNO\t*\tNorwegian Norway Indo-European F., Germanic Br. 5\nOC\t*\tOccitan S France Indo-European F., Italic Br. 4\nOM\t*\t(Afan) Oromo, Galla Ethiopia, Kenya Hamito-Semitic F., Cushitic Br. 10\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-1"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 88,
                  "endLine": 82,
                  "endColumn": 3,
                  "snippet": {
                    "text": "MT\t*\tMaltese Malta Hamito-Semitic F., Semitic Br.\nMY\t*\tBurmese Burma, Bangladesh Sino-Tibetan F., Tibeto-Burmese Br. 30 MY from Myanmasa\nNA\t\tNauru, Nauruan Nauru Austric F., Malayo-Polynesian Br.\nNE\t*\tNepali, Nepalese Nepal, Uttar Pradesh (India) Indo-European F., Indo-Iranian Br. 16\nNL\t*\tDutch Netherlands, Belgium Indo-European F., Germanic Br. 21 NL from Nederlands\nNO\t*\tNorwegian Norway Indo-European F., Germanic Br. 5\nOC\t*\tOccitan S France Indo-European F., Italic Br. 4\nOM\t*\t(Afan) Oromo, Galla Ethiopia, Kenya Hamito-Semitic F., Cushitic Br. 10\n",
                    "rendered": {
                      "text": "MT\t*\tMaltese Malta Hamito-Semitic F., Semitic Br.\nMY\t*\tBurmese Burma, Bangladesh Sino-Tibetan F., Tibeto-Burmese Br. 30 MY from Myanmasa\nNA\t\tNauru, Nauruan Nauru Austric F., Malayo-Polynesian Br.\nNE\t*\tNepali, Nepalese Nepal, Uttar Pradesh (India) Indo-European F., Indo-Iranian Br. 16\nNL\t*\tDutch Netherlands, Belgium Indo-European F., Germanic Br. 21 NL from Nederlands\nNO\t*\tNorwegian Norway Indo-European F., Germanic Br. 5\nOC\t*\tOccitan S France Indo-European F., Italic Br. 4\nOM\t*\t(Afan) Oromo, Galla Ethiopia, Kenya Hamito-Semitic F., Cushitic Br. 10\n",
                      "markdown": "`MT\t*\tMaltese Malta Hamito-Semitic F., Semitic Br.\nMY\t*\tBurmese Burma, Bangladesh Sino-Tibetan F., Tibeto-Burmese Br. 30 MY from Myanmasa\nNA\t\tNauru, Nauruan Nauru Austric F., Malayo-Polynesian Br.\nNE\t*\tNepali, Nepalese Nepal, Uttar Pradesh (India) Indo-European F., Indo-Iranian Br. 16\nNL\t*\tDutch Netherlands, Belgium Indo-European F., Germanic Br. 21 NL from Nederlands\nNO\t*\tNorwegian Norway Indo-European F., Germanic Br. 5\nOC\t*\tOccitan S France Indo-European F., Italic Br. 4\nOM\t*\t(Afan) Oromo, Galla Ethiopia, Kenya Hamito-Semitic F., Cushitic Br. 10\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/si.orth"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 6,
                  "endLine": 49,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#\n# Sinhala and SLS1134 experts can be contacted at:\n# sinhala-technical at lists.sourceforge.net\n# ltrl at ucsc.cmb.ac.lk\n#\n# Semi Consonants\n0d82-0d83\n",
                    "rendered": {
                      "text": "#\n# Sinhala and SLS1134 experts can be contacted at:\n# sinhala-technical at lists.sourceforge.net\n# ltrl at ucsc.cmb.ac.lk\n#\n# Semi Consonants\n0d82-0d83\n",
                      "markdown": "`#\n# Sinhala and SLS1134 experts can be contacted at:\n# sinhala-technical at lists.sourceforge.net\n# ltrl at ucsc.cmb.ac.lk\n#\n# Semi Consonants\n0d82-0d83\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/si.orth"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 19,
                  "endLine": 48,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# U+0DF4 KUNDDALIYA (Punctuation)\n#\n# Sinhala and SLS1134 experts can be contacted at:\n# sinhala-technical at lists.sourceforge.net\n# ltrl at ucsc.cmb.ac.lk\n#\n# Semi Consonants\n",
                    "rendered": {
                      "text": "# U+0DF4 KUNDDALIYA (Punctuation)\n#\n# Sinhala and SLS1134 experts can be contacted at:\n# sinhala-technical at lists.sourceforge.net\n# ltrl at ucsc.cmb.ac.lk\n#\n# Semi Consonants\n",
                      "markdown": "`# U+0DF4 KUNDDALIYA (Punctuation)\n#\n# Sinhala and SLS1134 experts can be contacted at:\n# sinhala-technical at lists.sourceforge.net\n# ltrl at ucsc.cmb.ac.lk\n#\n# Semi Consonants\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zsye.orth"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 76,
                  "endLine": 138,
                  "snippet": {
                    "text": "# 1F919..1F91E  \t#  9.0  [6] (🤙..🤞)    call me hand..crossed fingers\n# 1F91F         \t# 10.0  [1] (🤟)       love-you gesture\n# 1F920..1F927  \t#  9.0  [8] (🤠..🤧)    cowboy hat face..sneezing face\n# 1F928..1F92F  \t# 10.0  [8] (🤨..🤯)    face with raised eyebrow..exploding head\n# 1F930         \t#  9.0  [1] (🤰)       pregnant woman\n# 1F931..1F932  \t# 10.0  [2] (🤱..🤲)    breast-feeding..palms up together\n# 1F933..1F93A  \t#  9.0  [8] (🤳..🤺)    selfie..person fencing\n# 1F93C..1F93E  \t#  9.0  [3] (🤼..🤾)    people wrestling..person playing handball\n",
                    "rendered": {
                      "text": "# 1F919..1F91E  \t#  9.0  [6] (🤙..🤞)    call me hand..crossed fingers\n# 1F91F         \t# 10.0  [1] (🤟)       love-you gesture\n# 1F920..1F927  \t#  9.0  [8] (🤠..🤧)    cowboy hat face..sneezing face\n# 1F928..1F92F  \t# 10.0  [8] (🤨..🤯)    face with raised eyebrow..exploding head\n# 1F930         \t#  9.0  [1] (🤰)       pregnant woman\n# 1F931..1F932  \t# 10.0  [2] (🤱..🤲)    breast-feeding..palms up together\n# 1F933..1F93A  \t#  9.0  [8] (🤳..🤺)    selfie..person fencing\n# 1F93C..1F93E  \t#  9.0  [3] (🤼..🤾)    people wrestling..person playing handball\n",
                      "markdown": "`# 1F919..1F91E  \t#  9.0  [6] (🤙..🤞)    call me hand..crossed fingers\n# 1F91F         \t# 10.0  [1] (🤟)       love-you gesture\n# 1F920..1F927  \t#  9.0  [8] (🤠..🤧)    cowboy hat face..sneezing face\n# 1F928..1F92F  \t# 10.0  [8] (🤨..🤯)    face with raised eyebrow..exploding head\n# 1F930         \t#  9.0  [1] (🤰)       pregnant woman\n# 1F931..1F932  \t# 10.0  [2] (🤱..🤲)    breast-feeding..palms up together\n# 1F933..1F93A  \t#  9.0  [8] (🤳..🤺)    selfie..person fencing\n# 1F93C..1F93E  \t#  9.0  [3] (🤼..🤾)    people wrestling..person playing handball\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zsye.orth"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 56,
                  "endLine": 122,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# 1F62E..1F62F  \t#  6.1  [2] (😮..😯)    face with open mouth..hushed face\n1F630..1F633  \t#  6.0  [4] (😰..😳)    face with open mouth & cold sweat..flushed face\n# 1F634         \t#  6.1  [1] (😴)       sleeping face\n1F635..1F640  \t#  6.0 [12] (😵..🙀)    dizzy face..weary cat face\n# 1F641..1F642  \t#  7.0  [2] (🙁..🙂)    slightly frowning face..slightly smiling face\n# 1F643..1F644  \t#  8.0  [2] (🙃..🙄)    upside-down face..face with rolling eyes\n1F645..1F64F  \t#  6.0 [11] (🙅..🙏)    person gesturing NO..folded hands\n",
                    "rendered": {
                      "text": "# 1F62E..1F62F  \t#  6.1  [2] (😮..😯)    face with open mouth..hushed face\n1F630..1F633  \t#  6.0  [4] (😰..😳)    face with open mouth & cold sweat..flushed face\n# 1F634         \t#  6.1  [1] (😴)       sleeping face\n1F635..1F640  \t#  6.0 [12] (😵..🙀)    dizzy face..weary cat face\n# 1F641..1F642  \t#  7.0  [2] (🙁..🙂)    slightly frowning face..slightly smiling face\n# 1F643..1F644  \t#  8.0  [2] (🙃..🙄)    upside-down face..face with rolling eyes\n1F645..1F64F  \t#  6.0 [11] (🙅..🙏)    person gesturing NO..folded hands\n",
                      "markdown": "`# 1F62E..1F62F  \t#  6.1  [2] (😮..😯)    face with open mouth..hushed face\n1F630..1F633  \t#  6.0  [4] (😰..😳)    face with open mouth & cold sweat..flushed face\n# 1F634         \t#  6.1  [1] (😴)       sleeping face\n1F635..1F640  \t#  6.0 [12] (😵..🙀)    dizzy face..weary cat face\n# 1F641..1F642  \t#  7.0  [2] (🙁..🙂)    slightly frowning face..slightly smiling face\n# 1F643..1F644  \t#  8.0  [2] (🙃..🙄)    upside-down face..face with rolling eyes\n1F645..1F64F  \t#  6.0 [11] (🙅..🙏)    person gesturing NO..folded hands\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zsye.orth"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 38,
                  "endLine": 100,
                  "endColumn": 45,
                  "snippet": {
                    "text": "# 1F57A         \t#  9.0  [1] (🕺)       man dancing\n# 1F595..1F596  \t#  7.0  [2] (🖕..🖖)    middle finger..vulcan salute\n# 1F5A4         \t#  9.0  [1] (🖤)       black heart\n1F5FB..1F5FF  \t#  6.0  [5] (🗻..🗿)    mount fuji..moai\n# 1F600         \t#  6.1  [1] (😀)       grinning face\n1F601..1F610  \t#  6.0 [16] (😁..😐)    grinning face with smiling eyes..neutral face\n# 1F611         \t#  6.1  [1] (😑)       expressionless face\n",
                    "rendered": {
                      "text": "# 1F57A         \t#  9.0  [1] (🕺)       man dancing\n# 1F595..1F596  \t#  7.0  [2] (🖕..🖖)    middle finger..vulcan salute\n# 1F5A4         \t#  9.0  [1] (🖤)       black heart\n1F5FB..1F5FF  \t#  6.0  [5] (🗻..🗿)    mount fuji..moai\n# 1F600         \t#  6.1  [1] (😀)       grinning face\n1F601..1F610  \t#  6.0 [16] (😁..😐)    grinning face with smiling eyes..neutral face\n# 1F611         \t#  6.1  [1] (😑)       expressionless face\n",
                      "markdown": "`# 1F57A         \t#  9.0  [1] (🕺)       man dancing\n# 1F595..1F596  \t#  7.0  [2] (🖕..🖖)    middle finger..vulcan salute\n# 1F5A4         \t#  9.0  [1] (🖤)       black heart\n1F5FB..1F5FF  \t#  6.0  [5] (🗻..🗿)    mount fuji..moai\n# 1F600         \t#  6.1  [1] (😀)       grinning face\n1F601..1F610  \t#  6.0 [16] (😁..😐)    grinning face with smiling eyes..neutral face\n# 1F611         \t#  6.1  [1] (😑)       expressionless face\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zsye.orth"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 45,
                  "endLine": 64,
                  "endColumn": 50,
                  "snippet": {
                    "text": "2B1B..2B1C    \t#  5.1  [2] (⬛..⬜)    black large square..white large square\n2B50          \t#  5.1  [1] (⭐)       white medium star\n2B55          \t#  5.2  [1] (⭕)       heavy large circle\n1F004         \t#  5.1  [1] (🀄)       mahjong red dragon\n1F0CF         \t#  6.0  [1] (🃏)       joker\n1F18E         \t#  6.0  [1] (🆎)       AB button (blood type)\n1F191..1F19A  \t#  6.0 [10] (🆑..🆚)    CL button..VS button\n",
                    "rendered": {
                      "text": "2B1B..2B1C    \t#  5.1  [2] (⬛..⬜)    black large square..white large square\n2B50          \t#  5.1  [1] (⭐)       white medium star\n2B55          \t#  5.2  [1] (⭕)       heavy large circle\n1F004         \t#  5.1  [1] (🀄)       mahjong red dragon\n1F0CF         \t#  6.0  [1] (🃏)       joker\n1F18E         \t#  6.0  [1] (🆎)       AB button (blood type)\n1F191..1F19A  \t#  6.0 [10] (🆑..🆚)    CL button..VS button\n",
                      "markdown": "`2B1B..2B1C    \t#  5.1  [2] (⬛..⬜)    black large square..white large square\n2B50          \t#  5.1  [1] (⭐)       white medium star\n2B55          \t#  5.2  [1] (⭕)       heavy large circle\n1F004         \t#  5.1  [1] (🀄)       mahjong red dragon\n1F0CF         \t#  6.0  [1] (🃏)       joker\n1F18E         \t#  6.0  [1] (🆎)       AB button (blood type)\n1F191..1F19A  \t#  6.0 [10] (🆑..🆚)    CL button..VS button\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zsye.orth"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# fontconfig/fc-lang/emoji.orth\n#\n# Copyright © 2002 Keith Packard\n# Copyright © 2017 Red Hat, Inc.\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n",
                    "rendered": {
                      "text": "# fontconfig/fc-lang/emoji.orth\n#\n# Copyright © 2002 Keith Packard\n# Copyright © 2017 Red Hat, Inc.\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n",
                      "markdown": "`# fontconfig/fc-lang/emoji.orth\n#\n# Copyright © 2002 Keith Packard\n# Copyright © 2017 Red Hat, Inc.\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/ber_ma.orth"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 26,
                  "endLine": 26,
                  "endColumn": 34,
                  "snippet": {
                    "text": "#\n# Berber in Morocco (ber-MA)\n#\n# Tifinagh is the official script for Berber language(s) in Morocco.\n# The character list comes from Institut Royal de la Culture Amazighe (IRCAM).\n# Sources:\n# http://www.omniglot.com/writing/tifinagh.htm\n",
                    "rendered": {
                      "text": "#\n# Berber in Morocco (ber-MA)\n#\n# Tifinagh is the official script for Berber language(s) in Morocco.\n# The character list comes from Institut Royal de la Culture Amazighe (IRCAM).\n# Sources:\n# http://www.omniglot.com/writing/tifinagh.htm\n",
                      "markdown": "`#\n# Berber in Morocco (ber-MA)\n#\n# Tifinagh is the official script for Berber language(s) in Morocco.\n# The character list comes from Institut Royal de la Culture Amazighe (IRCAM).\n# Sources:\n# http://www.omniglot.com/writing/tifinagh.htm\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 8,
                  "endLine": 412,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    tai\t\t\tTai (Other)\t\t\t\t\tthaïes, autres langues\n*   tam\t\tta\tTamil\t\t\t\t\t\ttamoul\n*   tat\t\ttt\tTatar\t\t\t\t\t\ttatar\n*   tel\t\tte\tTelugu\t\t\t\t\t\ttélougou\n    tem\t\t\tTimne\t\t\t\t\t\ttemne\n    ter\t\t\tTereno\t\t\t\t\t\ttereno\n    tet\t\t\tTetum\t\t\t\t\t\ttetum\n",
                    "rendered": {
                      "text": "    tai\t\t\tTai (Other)\t\t\t\t\tthaïes, autres langues\n*   tam\t\tta\tTamil\t\t\t\t\t\ttamoul\n*   tat\t\ttt\tTatar\t\t\t\t\t\ttatar\n*   tel\t\tte\tTelugu\t\t\t\t\t\ttélougou\n    tem\t\t\tTimne\t\t\t\t\t\ttemne\n    ter\t\t\tTereno\t\t\t\t\t\ttereno\n    tet\t\t\tTetum\t\t\t\t\t\ttetum\n",
                      "markdown": "`    tai\t\t\tTai (Other)\t\t\t\t\tthaïes, autres langues\n*   tam\t\tta\tTamil\t\t\t\t\t\ttamoul\n*   tat\t\ttt\tTatar\t\t\t\t\t\ttatar\n*   tel\t\tte\tTelugu\t\t\t\t\t\ttélougou\n    tem\t\t\tTimne\t\t\t\t\t\ttemne\n    ter\t\t\tTereno\t\t\t\t\t\ttereno\n    tet\t\t\tTetum\t\t\t\t\t\ttetum\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 8,
                  "endLine": 395,
                  "endColumn": 12,
                  "snippet": {
                    "text": "*   sot\t\tst\tSotho, Southern\t\t\t\t\tsotho du Sud\n*   spa\t\tes\tSpanish; Castilian\t\t\t\tespagnol; castillan\n*   alb/sqi*\tsq\tAlbanian\t\t\t\t\talbanais\n    srd\t\tsc\tSardinian\t\t\t\t\tsarde\n*   scc/srp*\tsr\tSerbian\t\t\t\t\t\tserbe\n*\t\tsh\tSerbo-Croatian\t\t\t\t\tserbo-croate\n    srr\t\t\tSerer\t\t\t\t\t\tsérère\n",
                    "rendered": {
                      "text": "*   sot\t\tst\tSotho, Southern\t\t\t\t\tsotho du Sud\n*   spa\t\tes\tSpanish; Castilian\t\t\t\tespagnol; castillan\n*   alb/sqi*\tsq\tAlbanian\t\t\t\t\talbanais\n    srd\t\tsc\tSardinian\t\t\t\t\tsarde\n*   scc/srp*\tsr\tSerbian\t\t\t\t\t\tserbe\n*\t\tsh\tSerbo-Croatian\t\t\t\t\tserbo-croate\n    srr\t\t\tSerer\t\t\t\t\t\tsérère\n",
                      "markdown": "`*   sot\t\tst\tSotho, Southern\t\t\t\t\tsotho du Sud\n*   spa\t\tes\tSpanish; Castilian\t\t\t\tespagnol; castillan\n*   alb/sqi*\tsq\tAlbanian\t\t\t\t\talbanais\n    srd\t\tsc\tSardinian\t\t\t\t\tsarde\n*   scc/srp*\tsr\tSerbian\t\t\t\t\t\tserbe\n*\t\tsh\tSerbo-Croatian\t\t\t\t\tserbo-croate\n    srr\t\t\tSerer\t\t\t\t\t\tsérère\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 8,
                  "endLine": 449,
                  "endColumn": 12,
                  "snippet": {
                    "text": "*   uzb\t\tuz\tUzbek\t\t\t\t\t\touszbek\n    vai\t\t\tVai\t\t\t\t\t\tvaï\n*   ven\t\t\tVenda\t\t\t\t\t\tvenda\n*   vie\t\tvi\tVietnamese\t\t\t\t\tvietnamien\n*   vol\t\tvo\tVolapük\t\t\t\t\t\tvolapük\n*   vot\t\t\tVotic\t\t\t\t\t\tvote\n    wak\t\t\tWakashan languages\t\t\t\twakashennes, langues\n",
                    "rendered": {
                      "text": "*   uzb\t\tuz\tUzbek\t\t\t\t\t\touszbek\n    vai\t\t\tVai\t\t\t\t\t\tvaï\n*   ven\t\t\tVenda\t\t\t\t\t\tvenda\n*   vie\t\tvi\tVietnamese\t\t\t\t\tvietnamien\n*   vol\t\tvo\tVolapük\t\t\t\t\t\tvolapük\n*   vot\t\t\tVotic\t\t\t\t\t\tvote\n    wak\t\t\tWakashan languages\t\t\t\twakashennes, langues\n",
                      "markdown": "`*   uzb\t\tuz\tUzbek\t\t\t\t\t\touszbek\n    vai\t\t\tVai\t\t\t\t\t\tvaï\n*   ven\t\t\tVenda\t\t\t\t\t\tvenda\n*   vie\t\tvi\tVietnamese\t\t\t\t\tvietnamien\n*   vol\t\tvo\tVolapük\t\t\t\t\t\tvolapük\n*   vot\t\t\tVotic\t\t\t\t\t\tvote\n    wak\t\t\tWakashan languages\t\t\t\twakashennes, langues\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 12,
                  "endLine": 306,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    nia\t\t\tNias\t\t\t\t\t\tnias\n    nic\t\t\tNiger-Kordofanian (Other)\t\t\tnigéro-congolaises, autres langues\n    niu\t\t\tNiuean\t\t\t\t\t\tniué\n*   dut/nld*\tnl\tDutch\t\t\t\t\t\tnéerlandais\n    non\t\t\tNorse, Old\t\t\t\t\tnorrois, vieux\n*   nor\t\tno\tNorwegian\t\t\t\t\tnorvégien\n*   nno\t\tnn\tNorwegian Nynorsk; Nynorsk, Norwegian\t\tnorvégien nynorsk; nynorsk, norvégien\n",
                    "rendered": {
                      "text": "    nia\t\t\tNias\t\t\t\t\t\tnias\n    nic\t\t\tNiger-Kordofanian (Other)\t\t\tnigéro-congolaises, autres langues\n    niu\t\t\tNiuean\t\t\t\t\t\tniué\n*   dut/nld*\tnl\tDutch\t\t\t\t\t\tnéerlandais\n    non\t\t\tNorse, Old\t\t\t\t\tnorrois, vieux\n*   nor\t\tno\tNorwegian\t\t\t\t\tnorvégien\n*   nno\t\tnn\tNorwegian Nynorsk; Nynorsk, Norwegian\t\tnorvégien nynorsk; nynorsk, norvégien\n",
                      "markdown": "`    nia\t\t\tNias\t\t\t\t\t\tnias\n    nic\t\t\tNiger-Kordofanian (Other)\t\t\tnigéro-congolaises, autres langues\n    niu\t\t\tNiuean\t\t\t\t\t\tniué\n*   dut/nld*\tnl\tDutch\t\t\t\t\t\tnéerlandais\n    non\t\t\tNorse, Old\t\t\t\t\tnorrois, vieux\n*   nor\t\tno\tNorwegian\t\t\t\t\tnorvégien\n*   nno\t\tnn\tNorwegian Nynorsk; Nynorsk, Norwegian\t\tnorvégien nynorsk; nynorsk, norvégien\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 3,
                  "endLine": 248,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    lol\t\t\tMongo\t\t\t\t\t\tmongo\n    loz\t\t\tLozi\t\t\t\t\t\tlozi\n*   ltz\t\tlb\tLuxembourgish; Letzeburgesch\t\t\tluxembourgeois\n    lua\t\t\tLuba-Lulua\t\t\t\t\tluba-lulua\n    lub\t\t\tLuba-Katanga\t\t\t\t\tluba-katanga\n    lug\t\t\tGanda\t\t\t\t\t\tganda\n    lui\t\t\tLuiseno\t\t\t\t\t\tluiseno\n",
                    "rendered": {
                      "text": "    lol\t\t\tMongo\t\t\t\t\t\tmongo\n    loz\t\t\tLozi\t\t\t\t\t\tlozi\n*   ltz\t\tlb\tLuxembourgish; Letzeburgesch\t\t\tluxembourgeois\n    lua\t\t\tLuba-Lulua\t\t\t\t\tluba-lulua\n    lub\t\t\tLuba-Katanga\t\t\t\t\tluba-katanga\n    lug\t\t\tGanda\t\t\t\t\t\tganda\n    lui\t\t\tLuiseno\t\t\t\t\t\tluiseno\n",
                      "markdown": "`    lol\t\t\tMongo\t\t\t\t\t\tmongo\n    loz\t\t\tLozi\t\t\t\t\t\tlozi\n*   ltz\t\tlb\tLuxembourgish; Letzeburgesch\t\t\tluxembourgeois\n    lua\t\t\tLuba-Lulua\t\t\t\t\tluba-lulua\n    lub\t\t\tLuba-Katanga\t\t\t\t\tluba-katanga\n    lug\t\t\tGanda\t\t\t\t\t\tganda\n    lui\t\t\tLuiseno\t\t\t\t\t\tluiseno\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 12,
                  "endLine": 116,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    dra\t\t\tDravidian (Other)\t\t\t\tdravidiennes, autres langues\n    dua\t\t\tDuala\t\t\t\t\t\tdouala\n    dum\t\t\tDutch, Middle (ca.1050-1350)\t\t\tnéerlandais moyen (ca. 1050-1350)\n*   dut/nld*\tnl\tDutch\t\t\t\t\t\tnéerlandais\n    dyu\t\t\tDyula\t\t\t\t\t\tdioula\n*   dzo\t\tdz\tDzongkha\t\t\t\t\tdzongkha\n    efi\t\t\tEfik\t\t\t\t\t\tefik\n",
                    "rendered": {
                      "text": "    dra\t\t\tDravidian (Other)\t\t\t\tdravidiennes, autres langues\n    dua\t\t\tDuala\t\t\t\t\t\tdouala\n    dum\t\t\tDutch, Middle (ca.1050-1350)\t\t\tnéerlandais moyen (ca. 1050-1350)\n*   dut/nld*\tnl\tDutch\t\t\t\t\t\tnéerlandais\n    dyu\t\t\tDyula\t\t\t\t\t\tdioula\n*   dzo\t\tdz\tDzongkha\t\t\t\t\tdzongkha\n    efi\t\t\tEfik\t\t\t\t\t\tefik\n",
                      "markdown": "`    dra\t\t\tDravidian (Other)\t\t\t\tdravidiennes, autres langues\n    dua\t\t\tDuala\t\t\t\t\t\tdouala\n    dum\t\t\tDutch, Middle (ca.1050-1350)\t\t\tnéerlandais moyen (ca. 1050-1350)\n*   dut/nld*\tnl\tDutch\t\t\t\t\t\tnéerlandais\n    dyu\t\t\tDyula\t\t\t\t\t\tdioula\n*   dzo\t\tdz\tDzongkha\t\t\t\t\tdzongkha\n    efi\t\t\tEfik\t\t\t\t\t\tefik\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 3,
                  "endLine": 72,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    cad\t\t\tCaddo\t\t\t\t\t\tcaddo\n    cai\t\t\tCentral American Indian (Other)\t\t\tindiennes d'Amérique centrale, autres langues\n    car\t\t\tCarib\t\t\t\t\t\tcaribe\n*   cat\t\tca\tCatalan\t\t\t\t\t\tcatalan\n    cau\t\t\tCaucasian (Other)\t\t\t\tcaucasiennes, autres langues\n    ceb\t\t\tCebuano\t\t\t\t\t\tcebuano\n    cel\t\t\tCeltic (Other)\t\t\t\t\tceltiques, autres langues\n",
                    "rendered": {
                      "text": "    cad\t\t\tCaddo\t\t\t\t\t\tcaddo\n    cai\t\t\tCentral American Indian (Other)\t\t\tindiennes d'Amérique centrale, autres langues\n    car\t\t\tCarib\t\t\t\t\t\tcaribe\n*   cat\t\tca\tCatalan\t\t\t\t\t\tcatalan\n    cau\t\t\tCaucasian (Other)\t\t\t\tcaucasiennes, autres langues\n    ceb\t\t\tCebuano\t\t\t\t\t\tcebuano\n    cel\t\t\tCeltic (Other)\t\t\t\t\tceltiques, autres langues\n",
                      "markdown": "`    cad\t\t\tCaddo\t\t\t\t\t\tcaddo\n    cai\t\t\tCentral American Indian (Other)\t\t\tindiennes d'Amérique centrale, autres langues\n    car\t\t\tCarib\t\t\t\t\t\tcaribe\n*   cat\t\tca\tCatalan\t\t\t\t\t\tcatalan\n    cau\t\t\tCaucasian (Other)\t\t\t\tcaucasiennes, autres langues\n    ceb\t\t\tCebuano\t\t\t\t\t\tcebuano\n    cel\t\t\tCeltic (Other)\t\t\t\t\tceltiques, autres langues\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/iso639-2"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    arc\t\t\tAramaic \t\t\t\t\taraméen\n*   arm/hye*\thy\tArmenian \t\t\t\t\tarménien\n    arn\t\t\tAraucanian \t\t\t\t\taraucan\n    arp\t\t\tArapaho \t\t\t\t\tarapaho\n    art\t\t\tArtificial (Other)\t\t\t\tartificielles, autres langues\n    arw\t\t\tArawak \t\t\t\t\t\tarawak\n    asm\t\tas\tAssamese \t\t\t\t\tassamais\n",
                    "rendered": {
                      "text": "    arc\t\t\tAramaic \t\t\t\t\taraméen\n*   arm/hye*\thy\tArmenian \t\t\t\t\tarménien\n    arn\t\t\tAraucanian \t\t\t\t\taraucan\n    arp\t\t\tArapaho \t\t\t\t\tarapaho\n    art\t\t\tArtificial (Other)\t\t\t\tartificielles, autres langues\n    arw\t\t\tArawak \t\t\t\t\t\tarawak\n    asm\t\tas\tAssamese \t\t\t\t\tassamais\n",
                      "markdown": "`    arc\t\t\tAramaic \t\t\t\t\taraméen\n*   arm/hye*\thy\tArmenian \t\t\t\t\tarménien\n    arn\t\t\tAraucanian \t\t\t\t\taraucan\n    arp\t\t\tArapaho \t\t\t\t\tarapaho\n    art\t\t\tArtificial (Other)\t\t\t\tartificielles, autres langues\n    arw\t\t\tArawak \t\t\t\t\t\tarawak\n    asm\t\tas\tAssamese \t\t\t\t\tassamais\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/extract-man-list.py"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 24,
                  "endLine": 87,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# process template for each replacement set\nfor rep in replacement_sets:\n  if 'FUNC+' in rep:\n    man_page_title = rep.get('TITLE', rep['FUNC'])\n  else:\n    man_page_title = rep['FUNC']\n  print(man_page_title)\n",
                    "rendered": {
                      "text": "# process template for each replacement set\nfor rep in replacement_sets:\n  if 'FUNC+' in rep:\n    man_page_title = rep.get('TITLE', rep['FUNC'])\n  else:\n    man_page_title = rep['FUNC']\n  print(man_page_title)\n",
                      "markdown": "`# process template for each replacement set\nfor rep in replacement_sets:\n  if 'FUNC+' in rep:\n    man_page_title = rep.get('TITLE', rep['FUNC'])\n  else:\n    man_page_title = rep['FUNC']\n  print(man_page_title)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/extract-man-list.py"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 50,
                  "endLine": 52,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        chunk = chunk[start:]\n\n      # split at '@' and remove empty lines (keep it simple instead of doing fancy\n      # things with regular expression matches, we control the input after all)\n      lines = [line for line in chunk.split('@') if line.strip()]\n\n      replacement_set = {}\n",
                    "rendered": {
                      "text": "        chunk = chunk[start:]\n\n      # split at '@' and remove empty lines (keep it simple instead of doing fancy\n      # things with regular expression matches, we control the input after all)\n      lines = [line for line in chunk.split('@') if line.strip()]\n\n      replacement_set = {}\n",
                      "markdown": "`        chunk = chunk[start:]\n\n      # split at '@' and remove empty lines (keep it simple instead of doing fancy\n      # things with regular expression matches, we control the input after all)\n      lines = [line for line in chunk.split('@') if line.strip()]\n\n      replacement_set = {}\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/extract-man-list.py"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      if start:\n        chunk = chunk[start:]\n\n      # split at '@' and remove empty lines (keep it simple instead of doing fancy\n      # things with regular expression matches, we control the input after all)\n      lines = [line for line in chunk.split('@') if line.strip()]\n\n",
                    "rendered": {
                      "text": "      if start:\n        chunk = chunk[start:]\n\n      # split at '@' and remove empty lines (keep it simple instead of doing fancy\n      # things with regular expression matches, we control the input after all)\n      lines = [line for line in chunk.split('@') if line.strip()]\n\n",
                      "markdown": "`      if start:\n        chunk = chunk[start:]\n\n      # split at '@' and remove empty lines (keep it simple instead of doing fancy\n      # things with regular expression matches, we control the input after all)\n      lines = [line for line in chunk.split('@') if line.strip()]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcfontset.fncs"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 6,
                  "endLine": 97,
                  "endColumn": 10,
                  "snippet": {
                    "text": "This function is useful for diagnosing font related issues, printing the\ncomplete contents of every pattern in <parameter>set</parameter>. The format\nof the output is designed to be of help to users and developers, and may\nchange at any time.\n@@\n\n@RET@           FcFontSet *\n",
                    "rendered": {
                      "text": "This function is useful for diagnosing font related issues, printing the\ncomplete contents of every pattern in <parameter>set</parameter>. The format\nof the output is designed to be of help to users and developers, and may\nchange at any time.\n@@\n\n@RET@           FcFontSet *\n",
                      "markdown": "`This function is useful for diagnosing font related issues, printing the\ncomplete contents of every pattern in <parameter>set</parameter>. The format\nof the output is designed to be of help to users and developers, and may\nchange at any time.\n@@\n\n@RET@           FcFontSet *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcconfig.fncs"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 66,
                  "endLine": 408,
                  "endColumn": 105,
                  "snippet": {
                    "text": "directory; the built-in default directory can be overridden with the\nFONTCONFIG_PATH environment variable.\n    </para><para>\nThe result of this function is affected by the FONTCONFIG_SYSROOT environment variable or equivalent functionality.\n@@\n\n@RET@           FcBool\n",
                    "rendered": {
                      "text": "directory; the built-in default directory can be overridden with the\nFONTCONFIG_PATH environment variable.\n    </para><para>\nThe result of this function is affected by the FONTCONFIG_SYSROOT environment variable or equivalent functionality.\n@@\n\n@RET@           FcBool\n",
                      "markdown": "`directory; the built-in default directory can be overridden with the\nFONTCONFIG_PATH environment variable.\n    </para><para>\nThe result of this function is affected by the FONTCONFIG_SYSROOT environment variable or equivalent functionality.\n@@\n\n@RET@           FcBool\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcconfig.fncs"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 7,
                  "endLine": 478,
                  "endColumn": 11,
                  "snippet": {
                    "text": "Set 'sysroot' as the system root directory. All file paths used or created with\nthis 'config' (including file properties in patterns) will be considered or\nmade relative to this 'sysroot'. This allows a host to generate caches for\ntargets at build time. This also allows a cache to be re-targeted to a\ndifferent base directory if 'FcConfigGetSysRoot' is used to resolve file paths.\nWhen setting this on the current config this causes changing current config\n(calls FcConfigSetCurrent()).\n",
                    "rendered": {
                      "text": "Set 'sysroot' as the system root directory. All file paths used or created with\nthis 'config' (including file properties in patterns) will be considered or\nmade relative to this 'sysroot'. This allows a host to generate caches for\ntargets at build time. This also allows a cache to be re-targeted to a\ndifferent base directory if 'FcConfigGetSysRoot' is used to resolve file paths.\nWhen setting this on the current config this causes changing current config\n(calls FcConfigSetCurrent()).\n",
                      "markdown": "`Set 'sysroot' as the system root directory. All file paths used or created with\nthis 'config' (including file properties in patterns) will be considered or\nmade relative to this 'sysroot'. This allows a host to generate caches for\ntargets at build time. This also allows a cache to be re-targeted to a\ndifferent base directory if 'FcConfigGetSysRoot' is used to resolve file paths.\nWhen setting this on the current config this causes changing current config\n(calls FcConfigSetCurrent()).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcconfig.fncs"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 31,
                  "endLine": 508,
                  "endColumn": 37,
                  "snippet": {
                    "text": "@TYPE2@         FcConfigFileInfoIter *          @ARG2@          iter\n@PURPOSE@       Set the iterator to point to the next list\n@DESC@\nSet 'iter' to point to the next node in the config file information list.\nIf there is no next node, FcFalse is returned.\n    </para><para>\nThis function isn't MT-safe. <function>FcConfigReference</function> must be called\n",
                    "rendered": {
                      "text": "@TYPE2@         FcConfigFileInfoIter *          @ARG2@          iter\n@PURPOSE@       Set the iterator to point to the next list\n@DESC@\nSet 'iter' to point to the next node in the config file information list.\nIf there is no next node, FcFalse is returned.\n    </para><para>\nThis function isn't MT-safe. <function>FcConfigReference</function> must be called\n",
                      "markdown": "`@TYPE2@         FcConfigFileInfoIter *          @ARG2@          iter\n@PURPOSE@       Set the iterator to point to the next list\n@DESC@\nSet 'iter' to point to the next node in the config file information list.\nIf there is no next node, FcFalse is returned.\n    </para><para>\nThis function isn't MT-safe. <function>FcConfigReference</function> must be called\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcconfig.fncs"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 15,
                  "endLine": 394,
                  "endColumn": 21,
                  "snippet": {
                    "text": "@FUNC@          FcConfigGetFilename\n@TYPE1@         FcConfig *                      @ARG1@          config\n@TYPE2@         const FcChar8 *                 @ARG2@          name\n@PURPOSE@       Find a config file\n@DESC@\nGiven the specified external entity name, return the associated filename.\nThis provides applications a way to convert various configuration file\n",
                    "rendered": {
                      "text": "@FUNC@          FcConfigGetFilename\n@TYPE1@         FcConfig *                      @ARG1@          config\n@TYPE2@         const FcChar8 *                 @ARG2@          name\n@PURPOSE@       Find a config file\n@DESC@\nGiven the specified external entity name, return the associated filename.\nThis provides applications a way to convert various configuration file\n",
                      "markdown": "`@FUNC@          FcConfigGetFilename\n@TYPE1@         FcConfig *                      @ARG1@          config\n@TYPE2@         const FcChar8 *                 @ARG2@          name\n@PURPOSE@       Find a config file\n@DESC@\nGiven the specified external entity name, return the associated filename.\nThis provides applications a way to convert various configuration file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcconfig.fncs"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 15,
                  "endLine": 385,
                  "endColumn": 21,
                  "snippet": {
                    "text": "@RET@           FcChar8 *\n@FUNC@          FcConfigFilename\n@TYPE1@         const FcChar8 *                 @ARG1@          name\n@PURPOSE@       Find a config file\n@DESC@\nThis function is deprecated and is replaced by <function>FcConfigGetFilename</function>.\n@@\n",
                    "rendered": {
                      "text": "@RET@           FcChar8 *\n@FUNC@          FcConfigFilename\n@TYPE1@         const FcChar8 *                 @ARG1@          name\n@PURPOSE@       Find a config file\n@DESC@\nThis function is deprecated and is replaced by <function>FcConfigGetFilename</function>.\n@@\n",
                      "markdown": "`@RET@           FcChar8 *\n@FUNC@          FcConfigFilename\n@TYPE1@         const FcChar8 *                 @ARG1@          name\n@PURPOSE@       Find a config file\n@DESC@\nThis function is deprecated and is replaced by <function>FcConfigGetFilename</function>.\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-devel.sgml"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 37,
                  "endLine": 587,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  </sect2>\n  <sect2><title>FcAtomic</title>\n    <para>\nThese functions provide a safe way to update configuration files, allowing ongoing\nreading of the old configuration file while locked for writing and ensuring that a\nconsistent and complete version of the configuration file is always available.\n    </para>\n",
                    "rendered": {
                      "text": "  </sect2>\n  <sect2><title>FcAtomic</title>\n    <para>\nThese functions provide a safe way to update configuration files, allowing ongoing\nreading of the old configuration file while locked for writing and ensuring that a\nconsistent and complete version of the configuration file is always available.\n    </para>\n",
                      "markdown": "`  </sect2>\n  <sect2><title>FcAtomic</title>\n    <para>\nThese functions provide a safe way to update configuration files, allowing ongoing\nreading of the old configuration file while locked for writing and ensuring that a\nconsistent and complete version of the configuration file is always available.\n    </para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-devel.sgml"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 28,
                  "endLine": 466,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  </para>\n  <sect2><title>Initialization</title>\n    <para>\nThese functions provide some control over how the library is initialized.\n    </para>\n    &fcinit;\n  </sect2>\n",
                    "rendered": {
                      "text": "  </para>\n  <sect2><title>Initialization</title>\n    <para>\nThese functions provide some control over how the library is initialized.\n    </para>\n    &fcinit;\n  </sect2>\n",
                      "markdown": "`  </para>\n  <sect2><title>Initialization</title>\n    <para>\nThese functions provide some control over how the library is initialized.\n    </para>\n    &fcinit;\n  </sect2>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-devel.sgml"
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 71,
                  "endLine": 446,
                  "snippet": {
                    "text": "  </sect2>\n  <sect2><title>FcAtomic</title>\n    <para>\nUsed for locking access to configuration files.  Provides a safe way to update\nconfiguration files.\n    </para>\n  </sect2>\n  <sect2><title>FcCache</title>\n",
                    "rendered": {
                      "text": "  </sect2>\n  <sect2><title>FcAtomic</title>\n    <para>\nUsed for locking access to configuration files.  Provides a safe way to update\nconfiguration files.\n    </para>\n  </sect2>\n  <sect2><title>FcCache</title>\n",
                      "markdown": "`  </sect2>\n  <sect2><title>FcAtomic</title>\n    <para>\nUsed for locking access to configuration files.  Provides a safe way to update\nconfiguration files.\n    </para>\n  </sect2>\n  <sect2><title>FcCache</title>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-devel.sgml"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 52,
                  "endLine": 435,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        Result Code             Meaning\n        -----------------------------------------------------------\n        FcResultMatch           Object exists with the specified ID\n        FcResultNoMatch         Object doesn't exist at all\n        FcResultTypeMismatch    Object exists, but the type doesn't match\n        FcResultNoId            Object exists, but has fewer values\n                                than specified\n",
                    "rendered": {
                      "text": "        Result Code             Meaning\n        -----------------------------------------------------------\n        FcResultMatch           Object exists with the specified ID\n        FcResultNoMatch         Object doesn't exist at all\n        FcResultTypeMismatch    Object exists, but the type doesn't match\n        FcResultNoId            Object exists, but has fewer values\n                                than specified\n",
                      "markdown": "`        Result Code             Meaning\n        -----------------------------------------------------------\n        FcResultMatch           Object exists with the specified ID\n        FcResultNoMatch         Object doesn't exist at all\n        FcResultTypeMismatch    Object exists, but the type doesn't match\n        FcResultNoId            Object exists, but has fewer values\n                                than specified\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-devel.sgml"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 47,
                  "endLine": 415,
                  "endColumn": 51,
                  "snippet": {
                    "text": "public entry points that need global data can take an optional FcConfig*\nargument; passing 0 uses the default configuration.  FcConfig objects hold two\nsets of fonts, the first contains those specified by the configuration, the\nsecond set holds those added by the application at run-time.  Interfaces\nthat need to reference a particular set use one of the FcSetName enumerated\nvalues.\n    </para>\n",
                    "rendered": {
                      "text": "public entry points that need global data can take an optional FcConfig*\nargument; passing 0 uses the default configuration.  FcConfig objects hold two\nsets of fonts, the first contains those specified by the configuration, the\nsecond set holds those added by the application at run-time.  Interfaces\nthat need to reference a particular set use one of the FcSetName enumerated\nvalues.\n    </para>\n",
                      "markdown": "`public entry points that need global data can take an optional FcConfig*\nargument; passing 0 uses the default configuration.  FcConfig objects hold two\nsets of fonts, the first contains those specified by the configuration, the\nsecond set holds those added by the application at run-time.  Interfaces\nthat need to reference a particular set use one of the FcSetName enumerated\nvalues.\n    </para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/meson.build"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 7,
                  "endLine": 182,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    install: true)\nendif\n\nforeach script : tests\n  py = find_program(script)\n  test(script, py)\nendforeach\n",
                    "rendered": {
                      "text": "    install: true)\nendif\n\nforeach script : tests\n  py = find_program(script)\n  test(script, py)\nendforeach\n",
                      "markdown": "`    install: true)\nendif\n\nforeach script : tests\n  py = find_program(script)\n  test(script, py)\nendforeach\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-scan/fc-scan.sgml"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 22,
                  "endLine": 162,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-scan/fc-scan.sgml"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 60,
                  "endLine": 131,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-scan</command> returns error code 0 if at least one font\n    was found or 1 otherwise.</para>\n  </refsect1>\n\n",
                    "rendered": {
                      "text": "\n  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-scan</command> returns error code 0 if at least one font\n    was found or 1 otherwise.</para>\n  </refsect1>\n\n",
                      "markdown": "`\n  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-scan</command> returns error code 0 if at least one font\n    was found or 1 otherwise.</para>\n  </refsect1>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-scan/fc-scan.sgml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/README"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  language. good enough if it covers most frequently used\n  codepoints in it.\n\nTo update existing orth files:\n\n* Please make sure how the changes affects to the existing\n  fonts and no regressions except it is expected behavior.\n",
                    "rendered": {
                      "text": "  language. good enough if it covers most frequently used\n  codepoints in it.\n\nTo update existing orth files:\n\n* Please make sure how the changes affects to the existing\n  fonts and no regressions except it is expected behavior.\n",
                      "markdown": "`  language. good enough if it covers most frequently used\n  codepoints in it.\n\nTo update existing orth files:\n\n* Please make sure how the changes affects to the existing\n  fonts and no regressions except it is expected behavior.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fa.orth"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 3,
                  "endLine": 32,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#   Interchange and Display Mechanism, using Unicode\"\n# * \"Dastur-e Khat-te Fārsi\", Iranian Academy of Persian Language and\n#   Literature, 4th printing, December 2005, ISBN 964-7531-13-3. Available\n#   at http://www.persianacademy.ir/fa/das.aspx\n#\n# We are assuming that:\n# * Most fonts that claim to support an Arabic letter actually do so;\n",
                    "rendered": {
                      "text": "#   Interchange and Display Mechanism, using Unicode\"\n# * \"Dastur-e Khat-te Fārsi\", Iranian Academy of Persian Language and\n#   Literature, 4th printing, December 2005, ISBN 964-7531-13-3. Available\n#   at http://www.persianacademy.ir/fa/das.aspx\n#\n# We are assuming that:\n# * Most fonts that claim to support an Arabic letter actually do so;\n",
                      "markdown": "`#   Interchange and Display Mechanism, using Unicode\"\n# * \"Dastur-e Khat-te Fārsi\", Iranian Academy of Persian Language and\n#   Literature, 4th printing, December 2005, ISBN 964-7531-13-3. Available\n#   at http://www.persianacademy.ir/fa/das.aspx\n#\n# We are assuming that:\n# * Most fonts that claim to support an Arabic letter actually do so;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/pa.orth"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 18,
                  "endLine": 4,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#\n# fontconfig/fc-lang/pa.orth\n#\n# Copyright © 2004 Red Hat, Inc.\n# Copyright © 2009 Roozbeh Pournader\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n",
                    "rendered": {
                      "text": "#\n# fontconfig/fc-lang/pa.orth\n#\n# Copyright © 2004 Red Hat, Inc.\n# Copyright © 2009 Roozbeh Pournader\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n",
                      "markdown": "`#\n# fontconfig/fc-lang/pa.orth\n#\n# Copyright © 2004 Red Hat, Inc.\n# Copyright © 2009 Roozbeh Pournader\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/20-unhint-small-vera.conf"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 30,
                  "endLine": 10,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tdisabled below 8 ppem, but FreeType ignores those, preferring to use\n\tthe data found in the instructed hints.  The initial Vera release\n\tdidn't include the right instructions in the 'prep' table. Fix this\n\tby disabling hinting manually at smaller sizes (< 8ppem)\n -->\n\n\t<match target=\"font\">\n",
                    "rendered": {
                      "text": "\tdisabled below 8 ppem, but FreeType ignores those, preferring to use\n\tthe data found in the instructed hints.  The initial Vera release\n\tdidn't include the right instructions in the 'prep' table. Fix this\n\tby disabling hinting manually at smaller sizes (< 8ppem)\n -->\n\n\t<match target=\"font\">\n",
                      "markdown": "`\tdisabled below 8 ppem, but FreeType ignores those, preferring to use\n\tthe data found in the instructed hints.  The initial Vera release\n\tdidn't include the right instructions in the 'prep' table. Fix this\n\tby disabling hinting manually at smaller sizes (< 8ppem)\n -->\n\n\t<match target=\"font\">\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-legacy.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdlegacy</const>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdlegacy</const>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdlegacy</const>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-legacy.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Use lcdlegacy as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Use lcdlegacy as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Use lcdlegacy as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-bgr.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>bgr</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>bgr</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>bgr</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-bgr.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-autohint.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"autohint\" mode=\"append\"><bool>true</bool></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"autohint\" mode=\"append\"><bool>true</bool></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"autohint\" mode=\"append\"><bool>true</bool></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-autohint.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Use the Autohinter --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Use the Autohinter --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Use the Autohinter --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-vrgb.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>vrgb</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>vrgb</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>vrgb</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-vrgb.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-full.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintfull</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintfull</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintfull</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-full.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-none.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdnone</const>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdnone</const>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdnone</const>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-none.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Use lcdnone as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Use lcdnone as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Use lcdnone as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-medium.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintmedium</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintmedium</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintmedium</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-medium.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/pkg.m4"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 6,
                  "endLine": 56,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n#\n# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n# only at the first occurence in configure.ac, so if the first place\n# it's called might be skipped (such as if it is within an \"if\", you\n# have to call PKG_CHECK_EXISTS manually\n# --------------------------------------------------------------\n",
                    "rendered": {
                      "text": "# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n#\n# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n# only at the first occurence in configure.ac, so if the first place\n# it's called might be skipped (such as if it is within an \"if\", you\n# have to call PKG_CHECK_EXISTS manually\n# --------------------------------------------------------------\n",
                      "markdown": "`# to PKG_CHECK_MODULES(), but does not set variables or print errors.\n#\n# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])\n# only at the first occurence in configure.ac, so if the first place\n# it's called might be skipped (such as if it is within an \"if\", you\n# have to call PKG_CHECK_EXISTS manually\n# --------------------------------------------------------------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/pkg.m4"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 31,
                  "endLine": 40,
                  "endColumn": 35,
                  "snippet": {
                    "text": "fi\nif test -n \"$PKG_CONFIG\"; then\n\t_pkg_min_version=m4_default([$1], [0.9.0])\n\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n\t\tAC_MSG_RESULT([yes])\n\telse\n",
                    "rendered": {
                      "text": "fi\nif test -n \"$PKG_CONFIG\"; then\n\t_pkg_min_version=m4_default([$1], [0.9.0])\n\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n\t\tAC_MSG_RESULT([yes])\n\telse\n",
                      "markdown": "`fi\nif test -n \"$PKG_CONFIG\"; then\n\t_pkg_min_version=m4_default([$1], [0.9.0])\n\tAC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])\n\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n\t\tAC_MSG_RESULT([yes])\n\telse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/pkg.m4"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 15,
                  "endLine": 145,
                  "endColumn": 23,
                  "snippet": {
                    "text": "elif test $pkg_failed = untried; then\n     \tAC_MSG_RESULT([no])\n\tm4_default([$4], [AC_MSG_FAILURE(\n[The pkg-config script could not be found or is too old.  Make sure it\nis in your PATH or set the PKG_CONFIG environment variable to the full\npath to pkg-config.\n\n",
                    "rendered": {
                      "text": "elif test $pkg_failed = untried; then\n     \tAC_MSG_RESULT([no])\n\tm4_default([$4], [AC_MSG_FAILURE(\n[The pkg-config script could not be found or is too old.  Make sure it\nis in your PATH or set the PKG_CONFIG environment variable to the full\npath to pkg-config.\n\n",
                      "markdown": "`elif test $pkg_failed = untried; then\n     \tAC_MSG_RESULT([no])\n\tm4_default([$4], [AC_MSG_FAILURE(\n[The pkg-config script could not be found or is too old.  Make sure it\nis in your PATH or set the PKG_CONFIG environment variable to the full\npath to pkg-config.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/pkg.m4"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 15,
                  "endLine": 22,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n",
                    "rendered": {
                      "text": "#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n",
                      "markdown": "`#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# PKG_PROG_PKG_CONFIG([MIN-VERSION])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 47,
                  "endLine": 123,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n# Create a list of thread flags to try.  Items starting with a \"-\" are\n# C compiler flags, and other items are library names, except for \"none\"\n# which indicates that we try without any flags at all, and \"pthread-config\"\n# which is a program returning the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n",
                    "rendered": {
                      "text": "\n# Create a list of thread flags to try.  Items starting with a \"-\" are\n# C compiler flags, and other items are library names, except for \"none\"\n# which indicates that we try without any flags at all, and \"pthread-config\"\n# which is a program returning the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n",
                      "markdown": "`\n# Create a list of thread flags to try.  Items starting with a \"-\" are\n# C compiler flags, and other items are library names, except for \"none\"\n# which indicates that we try without any flags at all, and \"pthread-config\"\n# which is a program returning the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_pthread.m4"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 54,
                  "endLine": 25,
                  "endColumn": 60,
                  "snippet": {
                    "text": "#   but also link it with them as well. e.g. you should link with\n#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threads programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n",
                    "rendered": {
                      "text": "#   but also link it with them as well. e.g. you should link with\n#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threads programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n",
                      "markdown": "`#   but also link it with them as well. e.g. you should link with\n#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n#\n#   If you are only building threads programs, you may wish to use these\n#   variables in your default LIBS, CFLAGS, and CC:\n#\n#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 24,
                  "endLine": 523,
                  "endColumn": 3,
                  "snippet": {
                    "text": "export XDG_CACHE_HOME=\"\"\nexport old_HOME=\"$HOME\"\nexport temp_HOME=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nexport HOME=\"$temp_HOME\"\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "export XDG_CACHE_HOME=\"\"\nexport old_HOME=\"$HOME\"\nexport temp_HOME=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nexport HOME=\"$temp_HOME\"\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                      "markdown": "`export XDG_CACHE_HOME=\"\"\nexport old_HOME=\"$HOME\"\nexport temp_HOME=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nexport HOME=\"$temp_HOME\"\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 3,
                  "endLine": 505,
                  "endColumn": 9,
                  "snippet": {
                    "text": "if [ -x \"$BUILDTESTDIR\"/test-crbug1004254 ]; then\n    dotest \"MT-safe global config\"\n    prep\n    curl -s -o \"$FONTDIR\"/noto.zip https://noto-website-2.storage.googleapis.com/pkgs/NotoSans-hinted.zip\n    (cd \"$FONTDIR\"; unzip noto.zip)\n    if [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n        touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\n",
                    "rendered": {
                      "text": "if [ -x \"$BUILDTESTDIR\"/test-crbug1004254 ]; then\n    dotest \"MT-safe global config\"\n    prep\n    curl -s -o \"$FONTDIR\"/noto.zip https://noto-website-2.storage.googleapis.com/pkgs/NotoSans-hinted.zip\n    (cd \"$FONTDIR\"; unzip noto.zip)\n    if [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n        touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\n",
                      "markdown": "`if [ -x \"$BUILDTESTDIR\"/test-crbug1004254 ]; then\n    dotest \"MT-safe global config\"\n    prep\n    curl -s -o \"$FONTDIR\"/noto.zip https://noto-website-2.storage.googleapis.com/pkgs/NotoSans-hinted.zip\n    (cd \"$FONTDIR\"; unzip noto.zip)\n    if [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n        touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 3,
                  "endLine": 494,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"Actual Result\"\n    cat \"$BUILDTESTDIR\"/my-out\n    echo \"Expected Result\"\n    cat \"$BUILDTESTDIR\"/my-out.expected\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "    echo \"Actual Result\"\n    cat \"$BUILDTESTDIR\"/my-out\n    echo \"Expected Result\"\n    cat \"$BUILDTESTDIR\"/my-out.expected\n    exit 1\nfi\n\n",
                      "markdown": "`    echo \"Actual Result\"\n    cat \"$BUILDTESTDIR\"/my-out\n    echo \"Expected Result\"\n    cat \"$BUILDTESTDIR\"/my-out.expected\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 3,
                  "endLine": 492,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'my-out', expected output in 'my-out.expected'\"\n    echo \"Actual Result\"\n    cat \"$BUILDTESTDIR\"/my-out\n    echo \"Expected Result\"\n    cat \"$BUILDTESTDIR\"/my-out.expected\n    exit 1\n",
                    "rendered": {
                      "text": "    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'my-out', expected output in 'my-out.expected'\"\n    echo \"Actual Result\"\n    cat \"$BUILDTESTDIR\"/my-out\n    echo \"Expected Result\"\n    cat \"$BUILDTESTDIR\"/my-out.expected\n    exit 1\n",
                      "markdown": "`    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'my-out', expected output in 'my-out.expected'\"\n    echo \"Actual Result\"\n    cat \"$BUILDTESTDIR\"/my-out\n    echo \"Expected Result\"\n    cat \"$BUILDTESTDIR\"/my-out.expected\n    exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 118,
                  "endLine": 486,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    echo \"=\";\n    FONTCONFIG_FILE=\"$BUILDTESTDIR\"/my-fonts.conf $FCLIST - family pixelsize | sort;\n} > \"$BUILDTESTDIR\"/my-out\ntr -d '\\015' <\"$BUILDTESTDIR\"/my-out >\"$BUILDTESTDIR\"/my-out.tmp; mv \"$BUILDTESTDIR\"/my-out.tmp \"$BUILDTESTDIR\"/my-out\nsed -e 's/pixelsize=6/pixelsize=8/g' \"$BUILDTESTDIR\"/\"$EXPECTED\" > \"$BUILDTESTDIR\"/my-out.expected\n\nif cmp \"$BUILDTESTDIR\"/my-out \"$BUILDTESTDIR\"/my-out.expected > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n",
                    "rendered": {
                      "text": "    echo \"=\";\n    FONTCONFIG_FILE=\"$BUILDTESTDIR\"/my-fonts.conf $FCLIST - family pixelsize | sort;\n} > \"$BUILDTESTDIR\"/my-out\ntr -d '\\015' <\"$BUILDTESTDIR\"/my-out >\"$BUILDTESTDIR\"/my-out.tmp; mv \"$BUILDTESTDIR\"/my-out.tmp \"$BUILDTESTDIR\"/my-out\nsed -e 's/pixelsize=6/pixelsize=8/g' \"$BUILDTESTDIR\"/\"$EXPECTED\" > \"$BUILDTESTDIR\"/my-out.expected\n\nif cmp \"$BUILDTESTDIR\"/my-out \"$BUILDTESTDIR\"/my-out.expected > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n",
                      "markdown": "`    echo \"=\";\n    FONTCONFIG_FILE=\"$BUILDTESTDIR\"/my-fonts.conf $FCLIST - family pixelsize | sort;\n} > \"$BUILDTESTDIR\"/my-out\ntr -d '\\015' <\"$BUILDTESTDIR\"/my-out >\"$BUILDTESTDIR\"/my-out.tmp; mv \"$BUILDTESTDIR\"/my-out.tmp \"$BUILDTESTDIR\"/my-out\nsed -e 's/pixelsize=6/pixelsize=8/g' \"$BUILDTESTDIR\"/\"$EXPECTED\" > \"$BUILDTESTDIR\"/my-out.expected\n\nif cmp \"$BUILDTESTDIR\"/my-out \"$BUILDTESTDIR\"/my-out.expected > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 65,
                  "endLine": 485,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    echo \"=\";\n    FONTCONFIG_FILE=\"$BUILDTESTDIR\"/my-fonts.conf $FCLIST - family pixelsize | sort;\n} > \"$BUILDTESTDIR\"/my-out\ntr -d '\\015' <\"$BUILDTESTDIR\"/my-out >\"$BUILDTESTDIR\"/my-out.tmp; mv \"$BUILDTESTDIR\"/my-out.tmp \"$BUILDTESTDIR\"/my-out\nsed -e 's/pixelsize=6/pixelsize=8/g' \"$BUILDTESTDIR\"/\"$EXPECTED\" > \"$BUILDTESTDIR\"/my-out.expected\n\nif cmp \"$BUILDTESTDIR\"/my-out \"$BUILDTESTDIR\"/my-out.expected > /dev/null ; then : ; else\n",
                    "rendered": {
                      "text": "    echo \"=\";\n    FONTCONFIG_FILE=\"$BUILDTESTDIR\"/my-fonts.conf $FCLIST - family pixelsize | sort;\n} > \"$BUILDTESTDIR\"/my-out\ntr -d '\\015' <\"$BUILDTESTDIR\"/my-out >\"$BUILDTESTDIR\"/my-out.tmp; mv \"$BUILDTESTDIR\"/my-out.tmp \"$BUILDTESTDIR\"/my-out\nsed -e 's/pixelsize=6/pixelsize=8/g' \"$BUILDTESTDIR\"/\"$EXPECTED\" > \"$BUILDTESTDIR\"/my-out.expected\n\nif cmp \"$BUILDTESTDIR\"/my-out \"$BUILDTESTDIR\"/my-out.expected > /dev/null ; then : ; else\n",
                      "markdown": "`    echo \"=\";\n    FONTCONFIG_FILE=\"$BUILDTESTDIR\"/my-fonts.conf $FCLIST - family pixelsize | sort;\n} > \"$BUILDTESTDIR\"/my-out\ntr -d '\\015' <\"$BUILDTESTDIR\"/my-out >\"$BUILDTESTDIR\"/my-out.tmp; mv \"$BUILDTESTDIR\"/my-out.tmp \"$BUILDTESTDIR\"/my-out\nsed -e 's/pixelsize=6/pixelsize=8/g' \"$BUILDTESTDIR\"/\"$EXPECTED\" > \"$BUILDTESTDIR\"/my-out.expected\n\nif cmp \"$BUILDTESTDIR\"/my-out \"$BUILDTESTDIR\"/my-out.expected > /dev/null ; then : ; else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 473,
                  "endLine": 474,
                  "endColumn": 4,
                  "snippet": {
                    "text": "if [ -n \"${SOURCE_DATE_EPOCH:-}\" ]; then\n  SOURCE_DATE_EPOCH=${old_epoch}\nfi\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!<include ignore_missing=\\\"yes\\\">$MYCONFIG</include>!\ns!@CACHEDIR@!$MYCACHEDIR</cachedir><cachedir>$MYOWNCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n",
                    "rendered": {
                      "text": "if [ -n \"${SOURCE_DATE_EPOCH:-}\" ]; then\n  SOURCE_DATE_EPOCH=${old_epoch}\nfi\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!<include ignore_missing=\\\"yes\\\">$MYCONFIG</include>!\ns!@CACHEDIR@!$MYCACHEDIR</cachedir><cachedir>$MYOWNCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n",
                      "markdown": "`if [ -n \"${SOURCE_DATE_EPOCH:-}\" ]; then\n  SOURCE_DATE_EPOCH=${old_epoch}\nfi\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!<include ignore_missing=\\\"yes\\\">$MYCONFIG</include>!\ns!@CACHEDIR@!$MYCACHEDIR</cachedir><cachedir>$MYOWNCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 461,
                  "startColumn": 3,
                  "endLine": 462,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    <edit name=\"pixelsize\"><int>8</int></edit>\n  </match>\n</fontconfig>\nEOF\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!<include ignore_missing=\\\"yes\\\">$MYCONFIG</include>!\ns!@CACHEDIR@!$MYOWNCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n",
                    "rendered": {
                      "text": "    <edit name=\"pixelsize\"><int>8</int></edit>\n  </match>\n</fontconfig>\nEOF\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!<include ignore_missing=\\\"yes\\\">$MYCONFIG</include>!\ns!@CACHEDIR@!$MYOWNCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n",
                      "markdown": "`    <edit name=\"pixelsize\"><int>8</int></edit>\n  </match>\n</fontconfig>\nEOF\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!<include ignore_missing=\\\"yes\\\">$MYCONFIG</include>!\ns!@CACHEDIR@!$MYOWNCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 446,
                  "endLine": 447,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nmkdir -p \"$MYCACHEDIR\"\nmkdir -p \"$MYOWNCACHEDIR\"\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!!\ns!@CACHEDIR@!$MYCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n",
                    "rendered": {
                      "text": "\nmkdir -p \"$MYCACHEDIR\"\nmkdir -p \"$MYOWNCACHEDIR\"\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!!\ns!@CACHEDIR@!$MYCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n",
                      "markdown": "`\nmkdir -p \"$MYCACHEDIR\"\nmkdir -p \"$MYOWNCACHEDIR\"\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!!\ns!@CACHEDIR@!$MYCACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/my-fonts.conf\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 4,
                  "endLine": 430,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -rf \"$BUILDTESTDIR\"/sysroot\n\ndotest \"read newer caches when multiple places are allowed to store\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ]; then\n    # epoch 0 has special meaning. increase to avoid epoch 0\n    old_epoch=${SOURCE_DATE_EPOCH}\n",
                    "rendered": {
                      "text": "rm -rf \"$BUILDTESTDIR\"/sysroot\n\ndotest \"read newer caches when multiple places are allowed to store\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ]; then\n    # epoch 0 has special meaning. increase to avoid epoch 0\n    old_epoch=${SOURCE_DATE_EPOCH}\n",
                      "markdown": "`rm -rf \"$BUILDTESTDIR\"/sysroot\n\ndotest \"read newer caches when multiple places are allowed to store\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ]; then\n    # epoch 0 has special meaning. increase to avoid epoch 0\n    old_epoch=${SOURCE_DATE_EPOCH}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 40,
                  "endLine": 417,
                  "endColumn": 45,
                  "snippet": {
                    "text": "$FCCACHE -y \"$BUILDTESTDIR\"/sysroot\n\ndotest \"creating cache file on sysroot\"\nmd5=$(printf \"%s\" \"$FONTDIR\" | $MD5SUM | sed 's/ .*$//')\necho \"checking for cache file $md5\"\nif ! ls \"$BUILDTESTDIR/sysroot/$CACHEDIR/$md5\"*; then\n  echo \"*** Test failed: $TEST\"\n",
                    "rendered": {
                      "text": "$FCCACHE -y \"$BUILDTESTDIR\"/sysroot\n\ndotest \"creating cache file on sysroot\"\nmd5=$(printf \"%s\" \"$FONTDIR\" | $MD5SUM | sed 's/ .*$//')\necho \"checking for cache file $md5\"\nif ! ls \"$BUILDTESTDIR/sysroot/$CACHEDIR/$md5\"*; then\n  echo \"*** Test failed: $TEST\"\n",
                      "markdown": "`$FCCACHE -y \"$BUILDTESTDIR\"/sysroot\n\ndotest \"creating cache file on sysroot\"\nmd5=$(printf \"%s\" \"$FONTDIR\" | $MD5SUM | sed 's/ .*$//')\necho \"checking for cache file $md5\"\nif ! ls \"$BUILDTESTDIR/sysroot/$CACHEDIR/$md5\"*; then\n  echo \"*** Test failed: $TEST\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 2,
                  "endLine": 413,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp \"$FONT1\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nfi\ncp \"$BUILDTESTDIR\"/fonts.conf \"$BUILDTESTDIR\"/sysroot/\"$BUILDTESTDIR\"/fonts.conf\n$FCCACHE -y \"$BUILDTESTDIR\"/sysroot\n\ndotest \"creating cache file on sysroot\"\n",
                    "rendered": {
                      "text": "cp \"$FONT1\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nfi\ncp \"$BUILDTESTDIR\"/fonts.conf \"$BUILDTESTDIR\"/sysroot/\"$BUILDTESTDIR\"/fonts.conf\n$FCCACHE -y \"$BUILDTESTDIR\"/sysroot\n\ndotest \"creating cache file on sysroot\"\n",
                      "markdown": "`cp \"$FONT1\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nfi\ncp \"$BUILDTESTDIR\"/fonts.conf \"$BUILDTESTDIR\"/sysroot/\"$BUILDTESTDIR\"/fonts.conf\n$FCCACHE -y \"$BUILDTESTDIR\"/sysroot\n\ndotest \"creating cache file on sysroot\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 48,
                  "endLine": 409,
                  "endColumn": 3,
                  "snippet": {
                    "text": "prep\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$CACHEDIR\"\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$BUILDTESTDIR\"\ncp \"$FONT1\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "prep\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$CACHEDIR\"\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$BUILDTESTDIR\"\ncp \"$FONT1\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nfi\n",
                      "markdown": "`prep\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$CACHEDIR\"\nmkdir -p \"$BUILDTESTDIR\"/sysroot/\"$BUILDTESTDIR\"\ncp \"$FONT1\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$BUILDTESTDIR\"/sysroot/\"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 3,
                  "endLine": 394,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                    "rendered": {
                      "text": "    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                      "markdown": "`    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 3,
                  "endLine": 392,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"*** Test failed: $TEST\"\n    echo \"cache was created unexpectedly.\"\n    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\n",
                    "rendered": {
                      "text": "    echo \"*** Test failed: $TEST\"\n    echo \"cache was created unexpectedly.\"\n    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\n",
                      "markdown": "`    echo \"*** Test failed: $TEST\"\n    echo \"cache was created unexpectedly.\"\n    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 32,
                  "endLine": 383,
                  "endColumn": 4,
                  "snippet": {
                    "text": "e\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n(cd \"$CACHEDIR\"; ls -1 --color=no ./*cache*) > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nmkdir -p \"$TESTTMPDIR\"/cache.dir\nsed \"s!@FONTDIR@!$TESTTMPDIR/fonts!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMP",
                    "rendered": {
                      "text": "e\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n(cd \"$CACHEDIR\"; ls -1 --color=no ./*cache*) > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nmkdir -p \"$TESTTMPDIR\"/cache.dir\nsed \"s!@FONTDIR@!$TESTTMPDIR/fonts!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMP",
                      "markdown": "`e\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n(cd \"$CACHEDIR\"; ls -1 --color=no ./*cache*) > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nmkdir -p \"$TESTTMPDIR\"/cache.dir\nsed \"s!@FONTDIR@!$TESTTMPDIR/fonts!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMP`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 69,
                  "endLine": 377,
                  "endColumn": 3,
                  "snippet": {
                    "text": "_cache=$(ls -1 --color=no \"$CACHEDIR\"/*cache*)\n_mtime=$(fstat \"%Y\" \"$FONTDIR\")\n_uuid=$(uuidgen)\n_newcache=$(echo \"$_cache\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n(cd \"$CACHEDIR\"; ls -1 --color=no ./*cache*) > \"$BUILDTESTDIR\"/out1\n",
                    "rendered": {
                      "text": "_cache=$(ls -1 --color=no \"$CACHEDIR\"/*cache*)\n_mtime=$(fstat \"%Y\" \"$FONTDIR\")\n_uuid=$(uuidgen)\n_newcache=$(echo \"$_cache\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n(cd \"$CACHEDIR\"; ls -1 --color=no ./*cache*) > \"$BUILDTESTDIR\"/out1\n",
                      "markdown": "`_cache=$(ls -1 --color=no \"$CACHEDIR\"/*cache*)\n_mtime=$(fstat \"%Y\" \"$FONTDIR\")\n_uuid=$(uuidgen)\n_newcache=$(echo \"$_cache\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n(cd \"$CACHEDIR\"; ls -1 --color=no ./*cache*) > \"$BUILDTESTDIR\"/out1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 28,
                  "endLine": 376,
                  "endColumn": 33,
                  "snippet": {
                    "text": "_cache=$(ls -1 --color=no \"$CACHEDIR\"/*cache*)\n_mtime=$(fstat \"%Y\" \"$FONTDIR\")\n_uuid=$(uuidgen)\n_newcache=$(echo \"$_cache\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n",
                    "rendered": {
                      "text": "_cache=$(ls -1 --color=no \"$CACHEDIR\"/*cache*)\n_mtime=$(fstat \"%Y\" \"$FONTDIR\")\n_uuid=$(uuidgen)\n_newcache=$(echo \"$_cache\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n",
                      "markdown": "`_cache=$(ls -1 --color=no \"$CACHEDIR\"/*cache*)\n_mtime=$(fstat \"%Y\" \"$FONTDIR\")\n_uuid=$(uuidgen)\n_newcache=$(echo \"$_cache\" | sed \"s/\\([0-9a-f]*\\)\\(\\-.*\\)/$_uuid\\2/\")\nmv \"$_cache\" \"$_newcache\"\necho \"$_uuid\" > \"$FONTDIR\"/.uuid\ntouch -t \"$(fdate \"$_mtime\")\" \"$FONTDIR\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 4,
                  "endLine": 366,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n\ndotest \"Fallback to uuid\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "rm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n\ndotest \"Fallback to uuid\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                      "markdown": "`rm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n\ndotest \"Fallback to uuid\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 3,
                  "endLine": 359,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                    "rendered": {
                      "text": "    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                      "markdown": "`    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/bind-fonts.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 3,
                  "endLine": 357,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    echo \"*** Test failed: $TEST\"\n    echo \"cache was created unexpectedly.\"\n    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\n",
                    "rendered": {
                      "text": "    echo \"*** Test failed: $TEST\"\n    echo \"cache was created unexpectedly.\"\n    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\n",
                      "markdown": "`    echo \"*** Test failed: $TEST\"\n    echo \"cache was created unexpectedly.\"\n    echo \"Before:\"\n    cat \"$BUILDTESTDIR\"/out1\n    echo \"After:\"\n    cat \"$BUILDTESTDIR\"/out2\n    exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 17,
                  "endLine": 348,
                  "endColumn": 4,
                  "snippet": {
                    "text": "no ./*cache*) > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nmkdir -p \"$TESTTMPDIR\"/cache.dir\n# Once font dir is remapped, we could use $FONTDIR as different one in theory.\n# but we don't use it here and to avoid duplicate entries, set the non-existing\n# directory here.\nsed \"s!@FONTDIR@!$FONTDIR/a!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"",
                    "rendered": {
                      "text": "no ./*cache*) > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nmkdir -p \"$TESTTMPDIR\"/cache.dir\n# Once font dir is remapped, we could use $FONTDIR as different one in theory.\n# but we don't use it here and to avoid duplicate entries, set the non-existing\n# directory here.\nsed \"s!@FONTDIR@!$FONTDIR/a!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"",
                      "markdown": "`no ./*cache*) > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nmkdir -p \"$TESTTMPDIR\"/cache.dir\n# Once font dir is remapped, we could use $FONTDIR as different one in theory.\n# but we don't use it here and to avoid duplicate entries, set the non-existing\n# directory here.\nsed \"s!@FONTDIR@!$FONTDIR/a!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 23,
                  "endLine": 336,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ndotest \"Check consistency of MD5 in cache name\"\nprep\nmkdir -p \"$FONTDIR\"/sub\ncp \"$FONT1\" \"$FONTDIR\"/sub\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/sub\nfi\n",
                    "rendered": {
                      "text": "\ndotest \"Check consistency of MD5 in cache name\"\nprep\nmkdir -p \"$FONTDIR\"/sub\ncp \"$FONT1\" \"$FONTDIR\"/sub\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/sub\nfi\n",
                      "markdown": "`\ndotest \"Check consistency of MD5 in cache name\"\nprep\nmkdir -p \"$FONTDIR\"/sub\ncp \"$FONT1\" \"$FONTDIR\"/sub\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/sub\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 1,
                  "endLine": 328,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$TESTTMP2DIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                    "rendered": {
                      "text": "  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$TESTTMP2DIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                      "markdown": "`  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$TESTTMP2DIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 \"$BUILDTESTDIR\"/bind-fonts.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 1,
                  "endLine": 326,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo \"*** Test failed: $TEST\"\n  echo \"Missing fonts should be available on sandbox\"\n  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\n",
                    "rendered": {
                      "text": "  echo \"*** Test failed: $TEST\"\n  echo \"Missing fonts should be available on sandbox\"\n  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\n",
                      "markdown": "`  echo \"*** Test failed: $TEST\"\n  echo \"Missing fonts should be available on sandbox\"\n  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 1,
                  "endLine": 314,
                  "endColumn": 6,
                  "snippet": {
                    "text": "if grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache wasn't created for dir inside sandbox.\"\n  cat \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2\n  exit 1\nfi\nif [ x\"$(cat $BUILDTESTDIR/xxx)\" != \"x$TESTTMPDIR/fonts/4x6.pcf\" ]; then\n",
                    "rendered": {
                      "text": "if grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache wasn't created for dir inside sandbox.\"\n  cat \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2\n  exit 1\nfi\nif [ x\"$(cat $BUILDTESTDIR/xxx)\" != \"x$TESTTMPDIR/fonts/4x6.pcf\" ]; then\n",
                      "markdown": "`if grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache wasn't created for dir inside sandbox.\"\n  cat \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2\n  exit 1\nfi\nif [ x\"$(cat $BUILDTESTDIR/xxx)\" != \"x$TESTTMPDIR/fonts/4x6.pcf\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 311,
                  "startColumn": 2,
                  "endLine": 311,
                  "endColumn": 8,
                  "snippet": {
                    "text": "  cat \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2\n  exit 1\nfi\nif grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache wasn't created for dir inside sandbox.\"\n  cat \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2\n",
                    "rendered": {
                      "text": "  cat \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2\n  exit 1\nfi\nif grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache wasn't created for dir inside sandbox.\"\n  cat \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2\n",
                      "markdown": "`  cat \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2\n  exit 1\nfi\nif grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache wasn't created for dir inside sandbox.\"\n  cat \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 1,
                  "endLine": 308,
                  "endColumn": 6,
                  "snippet": {
                    "text": "if cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  cat \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2\n  exit 1\nfi\nif grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n",
                    "rendered": {
                      "text": "if cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  cat \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2\n  exit 1\nfi\nif grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n",
                      "markdown": "`if cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  cat \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2\n  exit 1\nfi\nif grep -v -- \"$(cat $BUILDTESTDIR/out1)\" \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 248,
                  "endLine": 302,
                  "endColumn": 254,
                  "snippet": {
                    "text": "ild/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -1 --color=no \"$CACHEDIR\"/*cache* > \"$BUILDTESTDIR\"/out2\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat2\nif cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/update",
                    "rendered": {
                      "text": "ild/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -1 --color=no \"$CACHEDIR\"/*cache* > \"$BUILDTESTDIR\"/out2\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat2\nif cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/update",
                      "markdown": "`ild/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -1 --color=no \"$CACHEDIR\"/*cache* > \"$BUILDTESTDIR\"/out2\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat2\nif cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/update`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 198,
                  "endLine": 302,
                  "endColumn": 204,
                  "snippet": {
                    "text": "MPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -1 --color=no \"$CACHEDIR\"/*cache* > \"$BUILDTESTDIR\"/out2\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat2\nif cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Te",
                    "rendered": {
                      "text": "MPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -1 --color=no \"$CACHEDIR\"/*cache* > \"$BUILDTESTDIR\"/out2\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat2\nif cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Te",
                      "markdown": "`MPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -1 --color=no \"$CACHEDIR\"/*cache* > \"$BUILDTESTDIR\"/out2\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat2\nif cmp \"$BUILDTESTDIR\"/stat1 \"$BUILDTESTDIR\"/stat2 > /dev/null ; then : ; else\n  echo \"*** Te`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 302,
                  "endLine": 301,
                  "endColumn": 308,
                  "snippet": {
                    "text": "WRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/fli",
                    "rendered": {
                      "text": "WRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/fli",
                      "markdown": "`WRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$TESTTMP2DIR\" \"$FONTDIR\" --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/fli`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 2,
                  "endLine": 289,
                  "endColumn": 4,
                  "snippet": {
                    "text": " \"$BUILDTESTDIR\"/stat1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nTESTTMP2DIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\ncp \"$FONT2\" \"$TESTTMP2DIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$TESTTMP2DIR\"\nfi\nsed \"s!@FONTDIR@!$TESTTMPDIR/fonts</dir><dir salt=\"'\"'\"salt-to-make-different\"'\"'\">$FONTDIR!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACH",
                    "rendered": {
                      "text": " \"$BUILDTESTDIR\"/stat1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nTESTTMP2DIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\ncp \"$FONT2\" \"$TESTTMP2DIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$TESTTMP2DIR\"\nfi\nsed \"s!@FONTDIR@!$TESTTMPDIR/fonts</dir><dir salt=\"'\"'\"salt-to-make-different\"'\"'\">$FONTDIR!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACH",
                      "markdown": "` \"$BUILDTESTDIR\"/stat1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nTESTTMP2DIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\ncp \"$FONT2\" \"$TESTTMP2DIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$TESTTMP2DIR\"\nfi\nsed \"s!@FONTDIR@!$TESTTMPDIR/fonts</dir><dir salt=\"'\"'\"salt-to-make-different\"'\"'\">$FONTDIR!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACH`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 284,
                  "startColumn": 54,
                  "endLine": 285,
                  "endColumn": 3,
                  "snippet": {
                    "text": "ls -1 --color=no \"$CACHEDIR\"/*cache*> \"$BUILDTESTDIR\"/out1\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nTESTTMP2DIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\ncp \"$FONT2\" \"$TESTTMP2DIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$TESTTMP2DIR\"\nfi\n",
                    "rendered": {
                      "text": "ls -1 --color=no \"$CACHEDIR\"/*cache*> \"$BUILDTESTDIR\"/out1\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nTESTTMP2DIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\ncp \"$FONT2\" \"$TESTTMP2DIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$TESTTMP2DIR\"\nfi\n",
                      "markdown": "`ls -1 --color=no \"$CACHEDIR\"/*cache*> \"$BUILDTESTDIR\"/out1\nfstat \"%n %s %y %z\" \"$(cat $BUILDTESTDIR/out1)\" > \"$BUILDTESTDIR\"/stat1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\nTESTTMP2DIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\ncp \"$FONT2\" \"$TESTTMP2DIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$TESTTMP2DIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 4,
                  "endLine": 275,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/bind-fonts.conf\n\ndotest \"Different directory content between host and sandbox\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "rm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/bind-fonts.conf\n\ndotest \"Different directory content between host and sandbox\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                      "markdown": "`rm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/bind-fonts.conf\n\ndotest \"Different directory content between host and sandbox\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 1,
                  "endLine": 268,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                    "rendered": {
                      "text": "  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/bind-fonts.conf\n",
                      "markdown": "`  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\nfi\nrm -rf \"$TESTTMPDIR\" \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 \"$BUILDTESTDIR\"/xxx \"$BUILDTESTDIR\"/flist1 \"$BUILDTESTDIR\"/flist2 \"$BUILDTESTDIR\"/bind-fonts.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 1,
                  "endLine": 266,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo \"*** Test failed: $TEST\"\n  echo \"file properties doesn't point to the new places\"\n  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\n",
                    "rendered": {
                      "text": "  echo \"*** Test failed: $TEST\"\n  echo \"file properties doesn't point to the new places\"\n  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\n",
                      "markdown": "`  echo \"*** Test failed: $TEST\"\n  echo \"file properties doesn't point to the new places\"\n  echo \"Expected result:\"\n  cat \"$BUILDTESTDIR\"/flist2\n  echo \"Actual result:\"\n  cat \"$BUILDTESTDIR\"/flist1\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 1,
                  "endLine": 254,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  exit 1\nfi\nif [ x\"$(cat $BUILDTESTDIR/xxx)\" != \"x$TESTTMPDIR/fonts/4x6.pcf\" ]; then\n",
                    "rendered": {
                      "text": "  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  exit 1\nfi\nif [ x\"$(cat $BUILDTESTDIR/xxx)\" != \"x$TESTTMPDIR/fonts/4x6.pcf\" ]; then\n",
                      "markdown": "`  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  exit 1\nfi\nif [ x\"$(cat $BUILDTESTDIR/xxx)\" != \"x$TESTTMPDIR/fonts/4x6.pcf\" ]; then\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 1,
                  "endLine": 252,
                  "endColumn": 6,
                  "snippet": {
                    "text": "  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  exit 1\n",
                    "rendered": {
                      "text": "  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  exit 1\n",
                      "markdown": "`  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  exit 1\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 215,
                  "endLine": 246,
                  "endColumn": 221,
                  "snippet": {
                    "text": "/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out2\nif cmp \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  ",
                    "rendered": {
                      "text": "/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out2\nif cmp \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  ",
                      "markdown": "`/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out2\nif cmp \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/out1\n  echo \"After:\"\n  cat \"$BUILDTESTDIR\"/out2\n  `"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 165,
                  "endLine": 246,
                  "endColumn": 171,
                  "snippet": {
                    "text": " --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out2\nif cmp \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/",
                    "rendered": {
                      "text": " --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out2\nif cmp \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/",
                      "markdown": "` --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out2\nif cmp \"$BUILDTESTDIR\"/out1 \"$BUILDTESTDIR\"/out2 > /dev/null ; then : ; else\n  echo \"*** Test failed: $TEST\"\n  echo \"cache was created/updated.\"\n  echo \"Before:\"\n  cat \"$BUILDTESTDIR\"/`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 269,
                  "endLine": 245,
                  "endColumn": 275,
                  "snippet": {
                    "text": "se for bz106618\"\n    exit 1\nfi\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTE",
                    "rendered": {
                      "text": "se for bz106618\"\n    exit 1\nfi\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTE",
                      "markdown": "`se for bz106618\"\n    exit 1\nfi\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTTMPDIR\"/build/test/bind-fonts.conf \"$TESTTMPDIR\"/build/test/\"$TESTEXE\" | sort > \"$BUILDTESTDIR\"/flist1\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fonts --bind \"$BUILDTESTDIR\"/.. \"$TESTTMPDIR\"/build --dev-bind /dev /dev find \"$TESTTMPDIR\"/fonts/ -type f -name '*.pcf' | sort > \"$BUILDTESTDIR\"/flist2\nls -l \"$CACHEDIR\" > \"$BUILDTE`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 17,
                  "endLine": 233,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n$FCCACHE \"$FONTDIR\"\nsleep 1\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\n# Once font dir is remapped, we could use $FONTDIR as different one in theory.\n# but we don't use it here and to avoid duplicate entries, set the non-existing\n# directory here.\nsed \"s!@FONTDIR@!$FONTDIR/a!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fo",
                    "rendered": {
                      "text": "\n$FCCACHE \"$FONTDIR\"\nsleep 1\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\n# Once font dir is remapped, we could use $FONTDIR as different one in theory.\n# but we don't use it here and to avoid duplicate entries, set the non-existing\n# directory here.\nsed \"s!@FONTDIR@!$FONTDIR/a!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fo",
                      "markdown": "`\n$FCCACHE \"$FONTDIR\"\nsleep 1\nls -l \"$CACHEDIR\" > \"$BUILDTESTDIR\"/out1\nTESTTMPDIR=$(mktemp -d \"$TMPDIR\"/fontconfig.XXXXXXXX)\n# Once font dir is remapped, we could use $FONTDIR as different one in theory.\n# but we don't use it here and to avoid duplicate entries, set the non-existing\n# directory here.\nsed \"s!@FONTDIR@!$FONTDIR/a!\ns!@REMAPDIR@!<remap-dir as-path=\"'\"'\"$FONTDIR\"'\"'\">$TESTTMPDIR/fonts</remap-dir>!\ns!@CACHEDIR@!$TESTTMPDIR/cache.dir!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/bind-fonts.conf\n$BWRAP --bind / / --bind \"$CACHEDIR\" \"$TESTTMPDIR\"/cache.dir --bind \"$FONTDIR\" \"$TESTTMPDIR\"/fo`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 4,
                  "endLine": 222,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\nif [ x\"$BWRAP\" != \"x\" ] && [ \"x$EXEEXT\" = \"x\" ]; then\ndotest \"Basic functionality with the bind-mounted cache dir\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "\nif [ x\"$BWRAP\" != \"x\" ] && [ \"x$EXEEXT\" = \"x\" ]; then\ndotest \"Basic functionality with the bind-mounted cache dir\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                      "markdown": "`\nif [ x\"$BWRAP\" != \"x\" ] && [ \"x$EXEEXT\" = \"x\" ]; then\ndotest \"Basic functionality with the bind-mounted cache dir\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 4,
                  "endLine": 208,
                  "endColumn": 3,
                  "snippet": {
                    "text": "check\n\ndotest \"Keep mtime of the font directory\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\ntouch -t $(fdate 0) \"$FONTDIR\"\nfstat \"%y\" \"$FONTDIR\" > \"$BUILDTESTDIR\"/out1\n$FCCACHE -v \"$FONTDIR\"\n",
                    "rendered": {
                      "text": "check\n\ndotest \"Keep mtime of the font directory\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\ntouch -t $(fdate 0) \"$FONTDIR\"\nfstat \"%y\" \"$FONTDIR\" > \"$BUILDTESTDIR\"/out1\n$FCCACHE -v \"$FONTDIR\"\n",
                      "markdown": "`check\n\ndotest \"Keep mtime of the font directory\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\ntouch -t $(fdate 0) \"$FONTDIR\"\nfstat \"%y\" \"$FONTDIR\" > \"$BUILDTESTDIR\"/out1\n$FCCACHE -v \"$FONTDIR\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 18,
                  "endLine": 203,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp \"$FONT1\" \"$FONTDIR\"\n$FCCACHE \"$FONTDIR\"\nsleep 1\nmkdir \"$FONTDIR\"/a\ncp \"$FONT2\" \"$FONTDIR\"/a\ncheck\n\ndotest \"Keep mtime of the font directory\"\n",
                    "rendered": {
                      "text": "cp \"$FONT1\" \"$FONTDIR\"\n$FCCACHE \"$FONTDIR\"\nsleep 1\nmkdir \"$FONTDIR\"/a\ncp \"$FONT2\" \"$FONTDIR\"/a\ncheck\n\ndotest \"Keep mtime of the font directory\"\n",
                      "markdown": "`cp \"$FONT1\" \"$FONTDIR\"\n$FCCACHE \"$FONTDIR\"\nsleep 1\nmkdir \"$FONTDIR\"/a\ncp \"$FONT2\" \"$FONTDIR\"/a\ncheck\n\ndotest \"Keep mtime of the font directory\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 4,
                  "endLine": 199,
                  "endColumn": 3,
                  "snippet": {
                    "text": "check\n\ndotest \"Dir with an out-of-date cache file\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\n$FCCACHE \"$FONTDIR\"\nsleep 1\nmkdir \"$FONTDIR\"/a\n",
                    "rendered": {
                      "text": "check\n\ndotest \"Dir with an out-of-date cache file\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\n$FCCACHE \"$FONTDIR\"\nsleep 1\nmkdir \"$FONTDIR\"/a\n",
                      "markdown": "`check\n\ndotest \"Dir with an out-of-date cache file\"\nprep\ncp \"$FONT1\" \"$FONTDIR\"\n$FCCACHE \"$FONTDIR\"\nsleep 1\nmkdir \"$FONTDIR\"/a\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 7,
                  "endLine": 194,
                  "endColumn": 3,
                  "snippet": {
                    "text": "prep\nmkdir \"$FONTDIR\"/a\n$FCCACHE \"$FONTDIR\"/a\nsleep 1\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"/a\ncheck\n\ndotest \"Dir with an out-of-date cache file\"\n",
                    "rendered": {
                      "text": "prep\nmkdir \"$FONTDIR\"/a\n$FCCACHE \"$FONTDIR\"/a\nsleep 1\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"/a\ncheck\n\ndotest \"Dir with an out-of-date cache file\"\n",
                      "markdown": "`prep\nmkdir \"$FONTDIR\"/a\n$FCCACHE \"$FONTDIR\"/a\nsleep 1\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"/a\ncheck\n\ndotest \"Dir with an out-of-date cache file\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 2,
                  "endLine": 183,
                  "endColumn": 3,
                  "snippet": {
                    "text": "cp \"$FONT1\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\ncp \"$FONT2\" \"$FONTDIR\"/b/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/b/a\nfi\n",
                    "rendered": {
                      "text": "cp \"$FONT1\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\ncp \"$FONT2\" \"$FONTDIR\"/b/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/b/a\nfi\n",
                      "markdown": "`cp \"$FONT1\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\ncp \"$FONT2\" \"$FONTDIR\"/b/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/b/a\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 20,
                  "endLine": 179,
                  "endColumn": 3,
                  "snippet": {
                    "text": "mkdir \"$FONTDIR\"/a\nmkdir \"$FONTDIR\"/a/a\nmkdir \"$FONTDIR\"/b\nmkdir \"$FONTDIR\"/b/a\ncp \"$FONT1\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\n",
                    "rendered": {
                      "text": "mkdir \"$FONTDIR\"/a\nmkdir \"$FONTDIR\"/a/a\nmkdir \"$FONTDIR\"/b\nmkdir \"$FONTDIR\"/b/a\ncp \"$FONT1\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\n",
                      "markdown": "`mkdir \"$FONTDIR\"/a\nmkdir \"$FONTDIR\"/a/a\nmkdir \"$FONTDIR\"/b\nmkdir \"$FONTDIR\"/b/a\ncp \"$FONT1\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 18,
                  "endLine": 166,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ndotest \"Subdir with a cache file\"\nprep\nmkdir \"$FONTDIR\"/a\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\n",
                    "rendered": {
                      "text": "\ndotest \"Subdir with a cache file\"\nprep\nmkdir \"$FONTDIR\"/a\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\n",
                      "markdown": "`\ndotest \"Subdir with a cache file\"\nprep\nmkdir \"$FONTDIR\"/a\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"/a\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"/a\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 4,
                  "endLine": 156,
                  "endColumn": 3,
                  "snippet": {
                    "text": "check\n\ndotest \"With a subdir\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "check\n\ndotest \"With a subdir\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                      "markdown": "`check\n\ndotest \"With a subdir\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 4,
                  "endLine": 148,
                  "endColumn": 3,
                  "snippet": {
                    "text": "export FONTCONFIG_FILE\n\ndotest \"Basic check\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                    "rendered": {
                      "text": "export FONTCONFIG_FILE\n\ndotest \"Basic check\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n",
                      "markdown": "`export FONTCONFIG_FILE\n\ndotest \"Basic check\"\nprep\ncp \"$FONT1\" \"$FONT2\" \"$FONTDIR\"\nif [ -n \"${SOURCE_DATE_EPOCH:-}\" ] && [ ${#SOURCE_DATE_EPOCH} -gt 0 ]; then\n    touch -m -t \"$(fdate ${SOURCE_DATE_EPOCH})\" \"$FONTDIR\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 138,
                  "endLine": 139,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  TEST=$1\n  test x\"$VERBOSE\" = x || echo \"Running: $TEST\"\n}\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!!\ns!@CACHEDIR@!$CACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/fonts.conf\n\n",
                    "rendered": {
                      "text": "  TEST=$1\n  test x\"$VERBOSE\" = x || echo \"Running: $TEST\"\n}\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!!\ns!@CACHEDIR@!$CACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/fonts.conf\n\n",
                      "markdown": "`  TEST=$1\n  test x\"$VERBOSE\" = x || echo \"Running: $TEST\"\n}\n\nsed \"s!@FONTDIR@!$FONTDIR!\ns!@REMAPDIR@!!\ns!@CACHEDIR@!$CACHEDIR!\" < \"$TESTDIR\"/fonts.conf.in > \"$BUILDTESTDIR\"/fonts.conf\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 61,
                  "endLine": 119,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\techo \"=\";\n\t$FCLIST - family pixelsize | sort;\n    } > \"$BUILDTESTDIR\"/out\n  tr -d '\\015' <\"$BUILDTESTDIR\"/out >\"$BUILDTESTDIR\"/out.tmp; mv \"$BUILDTESTDIR\"/out.tmp \"$BUILDTESTDIR\"/out\n  if cmp \"$BUILDTESTDIR\"/out \"$BUILDTESTDIR\"/\"$EXPECTED\" > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'out', expected output in '$EXPECTED'\"\n",
                    "rendered": {
                      "text": "\techo \"=\";\n\t$FCLIST - family pixelsize | sort;\n    } > \"$BUILDTESTDIR\"/out\n  tr -d '\\015' <\"$BUILDTESTDIR\"/out >\"$BUILDTESTDIR\"/out.tmp; mv \"$BUILDTESTDIR\"/out.tmp \"$BUILDTESTDIR\"/out\n  if cmp \"$BUILDTESTDIR\"/out \"$BUILDTESTDIR\"/\"$EXPECTED\" > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'out', expected output in '$EXPECTED'\"\n",
                      "markdown": "`\techo \"=\";\n\t$FCLIST - family pixelsize | sort;\n    } > \"$BUILDTESTDIR\"/out\n  tr -d '\\015' <\"$BUILDTESTDIR\"/out >\"$BUILDTESTDIR\"/out.tmp; mv \"$BUILDTESTDIR\"/out.tmp \"$BUILDTESTDIR\"/out\n  if cmp \"$BUILDTESTDIR\"/out \"$BUILDTESTDIR\"/\"$EXPECTED\" > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'out', expected output in '$EXPECTED'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.sh"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 22,
                  "endLine": 33,
                  "endColumn": 27,
                  "snippet": {
                    "text": "esac\n\nnormpath() {\n    printf \"%s\" \"$1\" | sed -E 's,/+,/,g'\n}\n\nTESTDIR=${srcdir-\"$MyPWD\"}\n",
                    "rendered": {
                      "text": "esac\n\nnormpath() {\n    printf \"%s\" \"$1\" | sed -E 's,/+,/,g'\n}\n\nTESTDIR=${srcdir-\"$MyPWD\"}\n",
                      "markdown": "`esac\n\nnormpath() {\n    printf \"%s\" \"$1\" | sed -E 's,/+,/,g'\n}\n\nTESTDIR=${srcdir-\"$MyPWD\"}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-d1f48f11.c"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 54,
                  "endLine": 98,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                    "rendered": {
                      "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                      "markdown": "`    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-d1f48f11.c"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 32,
                  "endLine": 96,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                    "rendered": {
                      "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                      "markdown": "`    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcatomic.fncs"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 50,
                  "endLine": 30,
                  "endColumn": 59,
                  "snippet": {
                    "text": "@TYPE1@         const FcChar8   *               @ARG1@          file\n@PURPOSE@       create an FcAtomic object\n@DESC@\nCreates a data structure containing data needed to control access to <parameter>file</parameter>.\nWriting is done to a separate file.  Once that file is complete, the original\nconfiguration file is atomically replaced so that reading process always see\na consistent and complete file without the need to lock for reading.\n",
                    "rendered": {
                      "text": "@TYPE1@         const FcChar8   *               @ARG1@          file\n@PURPOSE@       create an FcAtomic object\n@DESC@\nCreates a data structure containing data needed to control access to <parameter>file</parameter>.\nWriting is done to a separate file.  Once that file is complete, the original\nconfiguration file is atomically replaced so that reading process always see\na consistent and complete file without the need to lock for reading.\n",
                      "markdown": "`@TYPE1@         const FcChar8   *               @ARG1@          file\n@PURPOSE@       create an FcAtomic object\n@DESC@\nCreates a data structure containing data needed to control access to <parameter>file</parameter>.\nWriting is done to a separate file.  Once that file is complete, the original\nconfiguration file is atomically replaced so that reading process always see\na consistent and complete file without the need to lock for reading.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/kr.orth"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# * http://std.dkuug.dk/jtc1/sc2/wg2/docs/n2906.pdf\n#\n# This is for Kanuri as written in the Latin script. An Arabic script\n# orthography is also used (called Ajami), but I could not find much\n# information about it.\n#\n# Q, V, and X are not used.\n",
                    "rendered": {
                      "text": "# * http://std.dkuug.dk/jtc1/sc2/wg2/docs/n2906.pdf\n#\n# This is for Kanuri as written in the Latin script. An Arabic script\n# orthography is also used (called Ajami), but I could not find much\n# information about it.\n#\n# Q, V, and X are not used.\n",
                      "markdown": "`# * http://std.dkuug.dk/jtc1/sc2/wg2/docs/n2906.pdf\n#\n# This is for Kanuri as written in the Latin script. An Arabic script\n# orthography is also used (called Ajami), but I could not find much\n# information about it.\n#\n# Q, V, and X are not used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/kr.orth"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 62,
                  "endLine": 34,
                  "snippet": {
                    "text": "# * http://www.rosettaproject.org/archive/kby/ortho-1\n# * http://std.dkuug.dk/jtc1/sc2/wg2/docs/n2906.pdf\n#\n# This is for Kanuri as written in the Latin script. An Arabic script\n# orthography is also used (called Ajami), but I could not find much\n# information about it.\n#\n# Q, V, and X are not used.\n",
                    "rendered": {
                      "text": "# * http://www.rosettaproject.org/archive/kby/ortho-1\n# * http://std.dkuug.dk/jtc1/sc2/wg2/docs/n2906.pdf\n#\n# This is for Kanuri as written in the Latin script. An Arabic script\n# orthography is also used (called Ajami), but I could not find much\n# information about it.\n#\n# Q, V, and X are not used.\n",
                      "markdown": "`# * http://www.rosettaproject.org/archive/kby/ortho-1\n# * http://std.dkuug.dk/jtc1/sc2/wg2/docs/n2906.pdf\n#\n# This is for Kanuri as written in the Latin script. An Arabic script\n# orthography is also used (called Ajami), but I could not find much\n# information about it.\n#\n# Q, V, and X are not used.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fc-lang.py"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 5,
                  "endLine": 370,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    print('};\\n')\n    print('#define NUM_COUNTRY_SET {}\\n'.format(len(LangCountrySets)))\n\n    # Find ranges for each letter for faster searching\n    # Dump sets start/finish for the fastpath\n    print('static const FcLangCharSetRange  fcLangCharSetRanges[] = {\\n')\n    for c in string.ascii_lowercase: # a-z\n",
                    "rendered": {
                      "text": "    print('};\\n')\n    print('#define NUM_COUNTRY_SET {}\\n'.format(len(LangCountrySets)))\n\n    # Find ranges for each letter for faster searching\n    # Dump sets start/finish for the fastpath\n    print('static const FcLangCharSetRange  fcLangCharSetRanges[] = {\\n')\n    for c in string.ascii_lowercase: # a-z\n",
                      "markdown": "`    print('};\\n')\n    print('#define NUM_COUNTRY_SET {}\\n'.format(len(LangCountrySets)))\n\n    # Find ranges for each letter for faster searching\n    # Dump sets start/finish for the fastpath\n    print('static const FcLangCharSetRange  fcLangCharSetRanges[] = {\\n')\n    for c in string.ascii_lowercase: # a-z\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fc-lang.py"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 35,
                  "endLine": 303,
                  "endColumn": 41,
                  "snippet": {
                    "text": "            if n % 4 == 0:\n                print('   ', end='')\n            found = [k for k, unique_leaf in enumerate(leaves) if leaves_equal(unique_leaf,leaf)] \n            assert found, \"Couldn't find leaf in unique leaves list!\"\n            assert len(found) == 1\n            print(' LEAF({:3},{:3}),'.format(off[i], found[0]), end='')\n            if n % 4 == 3:\n",
                    "rendered": {
                      "text": "            if n % 4 == 0:\n                print('   ', end='')\n            found = [k for k, unique_leaf in enumerate(leaves) if leaves_equal(unique_leaf,leaf)] \n            assert found, \"Couldn't find leaf in unique leaves list!\"\n            assert len(found) == 1\n            print(' LEAF({:3},{:3}),'.format(off[i], found[0]), end='')\n            if n % 4 == 3:\n",
                      "markdown": "`            if n % 4 == 0:\n                print('   ', end='')\n            found = [k for k, unique_leaf in enumerate(leaves) if leaves_equal(unique_leaf,leaf)] \n            assert found, \"Couldn't find leaf in unique leaves list!\"\n            assert len(found) == 1\n            print(' LEAF({:3},{:3}),'.format(off[i], found[0]), end='')\n            if n % 4 == 3:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fc-lang.py"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 38,
                  "endLine": 235,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    # Scan the input until the marker is found\n    # FIXME: this is a bit silly really, might just as well hardcode\n    #        the license header in the script and drop the template\n    for line in tmpl_file:\n        if line.strip() == '@@@':\n            break\n",
                    "rendered": {
                      "text": "\n    # Scan the input until the marker is found\n    # FIXME: this is a bit silly really, might just as well hardcode\n    #        the license header in the script and drop the template\n    for line in tmpl_file:\n        if line.strip() == '@@@':\n            break\n",
                      "markdown": "`\n    # Scan the input until the marker is found\n    # FIXME: this is a bit silly really, might just as well hardcode\n    #        the license header in the script and drop the template\n    for line in tmpl_file:\n        if line.strip() == '@@@':\n            break\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fc-lang.py"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 5,
                  "endLine": 211,
                  "endColumn": 11,
                  "snippet": {
                    "text": "           if is_unique:\n               leaves.append(leaf)\n\n    # Find duplicate charsets\n    duplicate = []\n    for i, s in enumerate(sets):\n        dup_num = None\n",
                    "rendered": {
                      "text": "           if is_unique:\n               leaves.append(leaf)\n\n    # Find duplicate charsets\n    duplicate = []\n    for i, s in enumerate(sets):\n        dup_num = None\n",
                      "markdown": "`           if is_unique:\n               leaves.append(leaf)\n\n    # Find duplicate charsets\n    duplicate = []\n    for i, s in enumerate(sets):\n        dup_num = None\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fc-lang.py"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 5,
                  "endLine": 197,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n        total_leaves += len(charset.leaves)\n\n    # Find unique leaves\n    leaves = []\n    for s in sets:\n       for leaf_num in sorted(s.leaves.keys()):\n",
                    "rendered": {
                      "text": "\n        total_leaves += len(charset.leaves)\n\n    # Find unique leaves\n    leaves = []\n    for s in sets:\n       for leaf_num in sorted(s.leaves.keys()):\n",
                      "markdown": "`\n        total_leaves += len(charset.leaves)\n\n    # Find unique leaves\n    leaves = []\n    for s in sets:\n       for leaf_num in sorted(s.leaves.keys()):\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fc-lang.py"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 47,
                  "endLine": 111,
                  "snippet": {
                    "text": "# Build a single charset from a source file\n#\n# The file format is quite simple, either\n# a single hex value or a pair separated with a dash\ndef parse_orth_file(file_name, lines):\n    charset = CharSet()\n    for fn, num, line in lines:\n        delete_char = line.startswith('-')\n",
                    "rendered": {
                      "text": "# Build a single charset from a source file\n#\n# The file format is quite simple, either\n# a single hex value or a pair separated with a dash\ndef parse_orth_file(file_name, lines):\n    charset = CharSet()\n    for fn, num, line in lines:\n        delete_char = line.startswith('-')\n",
                      "markdown": "`# Build a single charset from a source file\n#\n# The file format is quite simple, either\n# a single hex value or a pair separated with a dash\ndef parse_orth_file(file_name, lines):\n    charset = CharSet()\n    for fn, num, line in lines:\n        delete_char = line.startswith('-')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-match/fc-match.sgml"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 22,
                  "endLine": 250,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-match/fc-match.sgml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-match/fc-match.sgml"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 65,
                  "endLine": 109,
                  "snippet": {
                    "text": "\n    <para><command>&dhpackage;</command> matches\n    <replaceable>pattern</replaceable> (empty\npattern by default) using the normal fontconfig matching rules to find\nthe best font available.  If <option>--sort</option> is given, the sorted list of best\nmatching fonts is displayed.\nThe <option>--all</option> option works like\n<option>--sort</option> except that no pruning is done on the list of fonts.</para>\n",
                    "rendered": {
                      "text": "\n    <para><command>&dhpackage;</command> matches\n    <replaceable>pattern</replaceable> (empty\npattern by default) using the normal fontconfig matching rules to find\nthe best font available.  If <option>--sort</option> is given, the sorted list of best\nmatching fonts is displayed.\nThe <option>--all</option> option works like\n<option>--sort</option> except that no pruning is done on the list of fonts.</para>\n",
                      "markdown": "`\n    <para><command>&dhpackage;</command> matches\n    <replaceable>pattern</replaceable> (empty\npattern by default) using the normal fontconfig matching rules to find\nthe best font available.  If <option>--sort</option> is given, the sorted list of best\nmatching fonts is displayed.\nThe <option>--all</option> option works like\n<option>--sort</option> except that no pruning is done on the list of fonts.</para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-match/fc-match.c"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 4,
                  "endLine": 141,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t    all = 1;\n\t    break;\n\tcase 's':\n\t    sort = 1;\n\t    break;\n\tcase 'v':\n\t    verbose = 1;\n",
                    "rendered": {
                      "text": "\t    all = 1;\n\t    break;\n\tcase 's':\n\t    sort = 1;\n\t    break;\n\tcase 'v':\n\t    verbose = 1;\n",
                      "markdown": "`\t    all = 1;\n\t    break;\n\tcase 's':\n\t    sort = 1;\n\t    break;\n\tcase 'v':\n\t    verbose = 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-match/fc-match.c"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 9,
                  "endLine": 118,
                  "endColumn": 15,
                  "snippet": {
                    "text": "{\n    int\t\t\tverbose = 0;\n    int\t\t\tbrief = 0;\n    int\t\t\tsort = 0, all = 0;\n    const FcChar8\t*format = NULL;\n    const FcChar8\t*format_optarg = NULL;\n    int\t\t\ti;\n",
                    "rendered": {
                      "text": "{\n    int\t\t\tverbose = 0;\n    int\t\t\tbrief = 0;\n    int\t\t\tsort = 0, all = 0;\n    const FcChar8\t*format = NULL;\n    const FcChar8\t*format_optarg = NULL;\n    int\t\t\ti;\n",
                      "markdown": "`{\n    int\t\t\tverbose = 0;\n    int\t\t\tbrief = 0;\n    int\t\t\tsort = 0, all = 0;\n    const FcChar8\t*format = NULL;\n    const FcChar8\t*format_optarg = NULL;\n    int\t\t\ti;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-none.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>none</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>none</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>none</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-none.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Disable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Disable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Disable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ac_check_symbol.m4"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 34,
                  "endLine": 44,
                  "endColumn": 39,
                  "snippet": {
                    "text": "do\nP4_CHECK_SYMBOL($ac_func, $2,\n[changequote(, )dnl\n  ac_tr_func=HAVE_`echo $ac_func | sed -e 'y:abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:' -e 's:[[^A-Z0-9]]:_:'`\nchangequote([, ])dnl\n  AC_DEFINE_UNQUOTED($ac_tr_func) $2], $3)dnl\ndone\n",
                    "rendered": {
                      "text": "do\nP4_CHECK_SYMBOL($ac_func, $2,\n[changequote(, )dnl\n  ac_tr_func=HAVE_`echo $ac_func | sed -e 'y:abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:' -e 's:[[^A-Z0-9]]:_:'`\nchangequote([, ])dnl\n  AC_DEFINE_UNQUOTED($ac_tr_func) $2], $3)dnl\ndone\n",
                      "markdown": "`do\nP4_CHECK_SYMBOL($ac_func, $2,\n[changequote(, )dnl\n  ac_tr_func=HAVE_`echo $ac_func | sed -e 'y:abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:' -e 's:[[^A-Z0-9]]:_:'`\nchangequote([, ])dnl\n  AC_DEFINE_UNQUOTED($ac_tr_func) $2], $3)dnl\ndone\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ac_check_symbol.m4"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 30,
                  "endLine": 21,
                  "endColumn": 35,
                  "snippet": {
                    "text": "changequote([, ])dnl\nac_found=no\nfor ac_header in $2 ; do\n  ac_safe=`echo \"$ac_header\" | sed 'y%./+-%__p_%' `\n  if test $ac_found != \"yes\" ; then\n      if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n            AC_EGREP_HEADER( $symbol, $ac_header, [ac_found=\"$ac_header\"] )\n",
                    "rendered": {
                      "text": "changequote([, ])dnl\nac_found=no\nfor ac_header in $2 ; do\n  ac_safe=`echo \"$ac_header\" | sed 'y%./+-%__p_%' `\n  if test $ac_found != \"yes\" ; then\n      if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n            AC_EGREP_HEADER( $symbol, $ac_header, [ac_found=\"$ac_header\"] )\n",
                      "markdown": "`changequote([, ])dnl\nac_found=no\nfor ac_header in $2 ; do\n  ac_safe=`echo \"$ac_header\" | sed 'y%./+-%__p_%' `\n  if test $ac_found != \"yes\" ; then\n      if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n            AC_EGREP_HEADER( $symbol, $ac_header, [ac_found=\"$ac_header\"] )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 6,
                  "endLine": 517,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n/*\n * quote from SunOS-5.8 sys/inttypes.h:\n * Use at your own risk.  As of February 1996, the committee is squarely\n * behind the fixed sized types; the \"least\" and \"fast\" types are still being\n * discussed.  The probability that the \"fast\" types may be removed before\n * the standard is finalized is high enough that they are not currently\n",
                    "rendered": {
                      "text": "\n/*\n * quote from SunOS-5.8 sys/inttypes.h:\n * Use at your own risk.  As of February 1996, the committee is squarely\n * behind the fixed sized types; the \"least\" and \"fast\" types are still being\n * discussed.  The probability that the \"fast\" types may be removed before\n * the standard is finalized is high enough that they are not currently\n",
                      "markdown": "`\n/*\n * quote from SunOS-5.8 sys/inttypes.h:\n * Use at your own risk.  As of February 1996, the committee is squarely\n * behind the fixed sized types; the \"least\" and \"fast\" types are still being\n * discussed.  The probability that the \"fast\" types may be removed before\n * the standard is finalized is high enough that they are not currently\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 56,
                  "endLine": 442,
                  "endColumn": 60,
                  "snippet": {
                    "text": "/* there a few 32-bit-only dsp-systems that we guard with BYTE_MODEL 8-} */\n/* (btw, those nibble-addressable systems are way off, or so we assume) */\n\ndnl   /* have a look at \"64bit and data size neutrality\" at */\ndnl   /* http://unix.org/version2/whatsnew/login_64bit.html */\ndnl   /* (the shorthand \"ILP\" types always have a \"P\" part) */\n\n",
                    "rendered": {
                      "text": "/* there a few 32-bit-only dsp-systems that we guard with BYTE_MODEL 8-} */\n/* (btw, those nibble-addressable systems are way off, or so we assume) */\n\ndnl   /* have a look at \"64bit and data size neutrality\" at */\ndnl   /* http://unix.org/version2/whatsnew/login_64bit.html */\ndnl   /* (the shorthand \"ILP\" types always have a \"P\" part) */\n\n",
                      "markdown": "`/* there a few 32-bit-only dsp-systems that we guard with BYTE_MODEL 8-} */\n/* (btw, those nibble-addressable systems are way off, or so we assume) */\n\ndnl   /* have a look at \"64bit and data size neutrality\" at */\ndnl   /* http://unix.org/version2/whatsnew/login_64bit.html */\ndnl   /* (the shorthand \"ILP\" types always have a \"P\" part) */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 20,
                  "endLine": 442,
                  "endColumn": 24,
                  "snippet": {
                    "text": "/* there a few 32-bit-only dsp-systems that we guard with BYTE_MODEL 8-} */\n/* (btw, those nibble-addressable systems are way off, or so we assume) */\n\ndnl   /* have a look at \"64bit and data size neutrality\" at */\ndnl   /* http://unix.org/version2/whatsnew/login_64bit.html */\ndnl   /* (the shorthand \"ILP\" types always have a \"P\" part) */\n\n",
                    "rendered": {
                      "text": "/* there a few 32-bit-only dsp-systems that we guard with BYTE_MODEL 8-} */\n/* (btw, those nibble-addressable systems are way off, or so we assume) */\n\ndnl   /* have a look at \"64bit and data size neutrality\" at */\ndnl   /* http://unix.org/version2/whatsnew/login_64bit.html */\ndnl   /* (the shorthand \"ILP\" types always have a \"P\" part) */\n\n",
                      "markdown": "`/* there a few 32-bit-only dsp-systems that we guard with BYTE_MODEL 8-} */\n/* (btw, those nibble-addressable systems are way off, or so we assume) */\n\ndnl   /* have a look at \"64bit and data size neutrality\" at */\ndnl   /* http://unix.org/version2/whatsnew/login_64bit.html */\ndnl   /* (the shorthand \"ILP\" types always have a \"P\" part) */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 675,
                  "startColumn": 5,
                  "endLine": 675,
                  "endColumn": 9,
                  "snippet": {
                    "text": "      ac_dir=`AS_DIRNAME([\"$ac_stdint_h\"])`\n      AS_MKDIR_P([\"$ac_dir\"])\n      rm -f $ac_stdint_h\n      mv $ac_stdint $ac_stdint_h\n    fi\n],[# variables for create stdint.h replacement\nPACKAGE=\"$PACKAGE\"\n",
                    "rendered": {
                      "text": "      ac_dir=`AS_DIRNAME([\"$ac_stdint_h\"])`\n      AS_MKDIR_P([\"$ac_dir\"])\n      rm -f $ac_stdint_h\n      mv $ac_stdint $ac_stdint_h\n    fi\n],[# variables for create stdint.h replacement\nPACKAGE=\"$PACKAGE\"\n",
                      "markdown": "`      ac_dir=`AS_DIRNAME([\"$ac_stdint_h\"])`\n      AS_MKDIR_P([\"$ac_dir\"])\n      rm -f $ac_stdint_h\n      mv $ac_stdint $ac_stdint_h\n    fi\n],[# variables for create stdint.h replacement\nPACKAGE=\"$PACKAGE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 28,
                  "endLine": 617,
                  "snippet": {
                    "text": "/* Maximal type.  */\n# ifdef _HAVE_LONGLONG_UINT64_T\n#  define INTMAX_C(c)   c ## L\n#  define UINTMAX_C(c)  c ## UL\n# else\n#  define INTMAX_C(c)   c ## LL\n#  define UINTMAX_C(c)  c ## ULL\n# endif\n",
                    "rendered": {
                      "text": "/* Maximal type.  */\n# ifdef _HAVE_LONGLONG_UINT64_T\n#  define INTMAX_C(c)   c ## L\n#  define UINTMAX_C(c)  c ## UL\n# else\n#  define INTMAX_C(c)   c ## LL\n#  define UINTMAX_C(c)  c ## ULL\n# endif\n",
                      "markdown": "`/* Maximal type.  */\n# ifdef _HAVE_LONGLONG_UINT64_T\n#  define INTMAX_C(c)   c ## L\n#  define UINTMAX_C(c)  c ## UL\n# else\n#  define INTMAX_C(c)   c ## LL\n#  define UINTMAX_C(c)  c ## ULL\n# endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 608,
                  "startColumn": 28,
                  "endLine": 609,
                  "snippet": {
                    "text": "# define UINT16_C(c)    c ## U\n# define UINT32_C(c)    c ## U\n# ifdef _HAVE_LONGLONG_UINT64_T\n#  define UINT64_C(c)   c ## UL\n# else\n#  define UINT64_C(c)   c ## ULL\n# endif\n\n",
                    "rendered": {
                      "text": "# define UINT16_C(c)    c ## U\n# define UINT32_C(c)    c ## U\n# ifdef _HAVE_LONGLONG_UINT64_T\n#  define UINT64_C(c)   c ## UL\n# else\n#  define UINT64_C(c)   c ## ULL\n# endif\n\n",
                      "markdown": "`# define UINT16_C(c)    c ## U\n# define UINT32_C(c)    c ## U\n# ifdef _HAVE_LONGLONG_UINT64_T\n#  define UINT64_C(c)   c ## UL\n# else\n#  define UINT64_C(c)   c ## ULL\n# endif\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 1,
                  "endLine": 338,
                  "endColumn": 6,
                  "snippet": {
                    "text": "fi\necho \"\" >>$ac_stdint\n\n  cat >>$ac_stdint <<STDINT_EOF\n/* .................... detections part ............................ */\n\n/* whether we need to define bitspecific types from compiler base types */\n",
                    "rendered": {
                      "text": "fi\necho \"\" >>$ac_stdint\n\n  cat >>$ac_stdint <<STDINT_EOF\n/* .................... detections part ............................ */\n\n/* whether we need to define bitspecific types from compiler base types */\n",
                      "markdown": "`fi\necho \"\" >>$ac_stdint\n\n  cat >>$ac_stdint <<STDINT_EOF\n/* .................... detections part ............................ */\n\n/* whether we need to define bitspecific types from compiler base types */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 250,
                  "endLine": 251,
                  "endColumn": 4,
                  "snippet": {
                    "text": "echo \"#endif\" >>$ac_stdint\necho \"#endif\" >>$ac_stdint\nelse\n\ncat >>$ac_stdint <<STDINT_EOF\n\n/* ................... shortcircuit part ........................... */\n\n",
                    "rendered": {
                      "text": "echo \"#endif\" >>$ac_stdint\necho \"#endif\" >>$ac_stdint\nelse\n\ncat >>$ac_stdint <<STDINT_EOF\n\n/* ................... shortcircuit part ........................... */\n\n",
                      "markdown": "`echo \"#endif\" >>$ac_stdint\necho \"#endif\" >>$ac_stdint\nelse\n\ncat >>$ac_stdint <<STDINT_EOF\n\n/* ................... shortcircuit part ........................... */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 58,
                  "endLine": 225,
                  "endColumn": 64,
                  "snippet": {
                    "text": "fi # shortcircut to system \"stdint.h\"\n# ------------------ PREPARE VARIABLES ------------------------------\nif test \"$GCC\" = \"yes\" ; then\nac_cv_stdint_message=\"using gnu compiler \"`$CC --version | head -1`\nelse\nac_cv_stdint_message=\"using $CC\"\nfi\n",
                    "rendered": {
                      "text": "fi # shortcircut to system \"stdint.h\"\n# ------------------ PREPARE VARIABLES ------------------------------\nif test \"$GCC\" = \"yes\" ; then\nac_cv_stdint_message=\"using gnu compiler \"`$CC --version | head -1`\nelse\nac_cv_stdint_message=\"using $CC\"\nfi\n",
                      "markdown": "`fi # shortcircut to system \"stdint.h\"\n# ------------------ PREPARE VARIABLES ------------------------------\nif test \"$GCC\" = \"yes\" ; then\nac_cv_stdint_message=\"using gnu compiler \"`$CC --version | head -1`\nelse\nac_cv_stdint_message=\"using $CC\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 26,
                  "endLine": 176,
                  "endColumn": 31,
                  "snippet": {
                    "text": "dnl therefore we use the autoconf implementation detail CHECK_TYPE_NEW\ndnl instead that is triggered with 3 or more arguments (see types.m4)\n\ninttype_headers=`echo $2 | sed -e 's/,/ /g'`\n\nac_cv_stdint_result=\"(no helpful system typedefs seen)\"\nAX_CHECK_HEADER_STDINT_X(dnl\n",
                    "rendered": {
                      "text": "dnl therefore we use the autoconf implementation detail CHECK_TYPE_NEW\ndnl instead that is triggered with 3 or more arguments (see types.m4)\n\ninttype_headers=`echo $2 | sed -e 's/,/ /g'`\n\nac_cv_stdint_result=\"(no helpful system typedefs seen)\"\nAX_CHECK_HEADER_STDINT_X(dnl\n",
                      "markdown": "`dnl therefore we use the autoconf implementation detail CHECK_TYPE_NEW\ndnl instead that is triggered with 3 or more arguments (see types.m4)\n\ninttype_headers=`echo $2 | sed -e 's/,/ /g'`\n\nac_cv_stdint_result=\"(no helpful system typedefs seen)\"\nAX_CHECK_HEADER_STDINT_X(dnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_create_stdint_h.m4"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 5,
                  "endLine": 139,
                  "endColumn": 11,
                  "snippet": {
                    "text": "AC_MSG_CHECKING([for stdint types])\nac_stdint_h=`echo ifelse($1, , _stdint.h, $1)`\n# try to shortcircuit - if the default include path of the compiler\n# can find a \"stdint.h\" header then we assume that all compilers can.\nAC_CACHE_VAL([ac_cv_header_stdint_t],[\nold_CXXFLAGS=\"$CXXFLAGS\" ; CXXFLAGS=\"\"\nold_CPPFLAGS=\"$CPPFLAGS\" ; CPPFLAGS=\"\"\n",
                    "rendered": {
                      "text": "AC_MSG_CHECKING([for stdint types])\nac_stdint_h=`echo ifelse($1, , _stdint.h, $1)`\n# try to shortcircuit - if the default include path of the compiler\n# can find a \"stdint.h\" header then we assume that all compilers can.\nAC_CACHE_VAL([ac_cv_header_stdint_t],[\nold_CXXFLAGS=\"$CXXFLAGS\" ; CXXFLAGS=\"\"\nold_CPPFLAGS=\"$CPPFLAGS\" ; CPPFLAGS=\"\"\n",
                      "markdown": "`AC_MSG_CHECKING([for stdint types])\nac_stdint_h=`echo ifelse($1, , _stdint.h, $1)`\n# try to shortcircuit - if the default include path of the compiler\n# can find a \"stdint.h\" header then we assume that all compilers can.\nAC_CACHE_VAL([ac_cv_header_stdint_t],[\nold_CXXFLAGS=\"$CXXFLAGS\" ; CXXFLAGS=\"\"\nold_CPPFLAGS=\"$CPPFLAGS\" ; CPPFLAGS=\"\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_cc_for_build.m4"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 43,
                  "endLine": 69,
                  "endColumn": 48,
                  "snippet": {
                    "text": "     for file in conftest.*; do\n       case $file in\n       *.c | *.o | *.obj | *.ilk | *.pdb) ;;\n       *) bfd_cv_build_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n     rm -f conftest*\n",
                    "rendered": {
                      "text": "     for file in conftest.*; do\n       case $file in\n       *.c | *.o | *.obj | *.ilk | *.pdb) ;;\n       *) bfd_cv_build_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n     rm -f conftest*\n",
                      "markdown": "`     for file in conftest.*; do\n       case $file in\n       *.c | *.o | *.obj | *.ilk | *.pdb) ;;\n       *) bfd_cv_build_exeext=`echo $file | sed -e s/conftest//` ;;\n       esac\n     done\n     rm -f conftest*\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/m4/ax_cc_for_build.m4"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# DESCRIPTION\n#\n#   Find a build-time compiler. Sets CC_FOR_BUILD and EXEEXT_FOR_BUILD.\n#\n# LICENSE\n#\n",
                    "rendered": {
                      "text": "#\n# DESCRIPTION\n#\n#   Find a build-time compiler. Sets CC_FOR_BUILD and EXEEXT_FOR_BUILD.\n#\n# LICENSE\n#\n",
                      "markdown": "`#\n# DESCRIPTION\n#\n#   Find a build-time compiler. Sets CC_FOR_BUILD and EXEEXT_FOR_BUILD.\n#\n# LICENSE\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-migration.c"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 54,
                  "endLine": 69,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                    "rendered": {
                      "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                      "markdown": "`    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-migration.c"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 32,
                  "endLine": 67,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                    "rendered": {
                      "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                      "markdown": "`    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-issue110.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 54,
                  "endLine": 97,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                    "rendered": {
                      "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                      "markdown": "`    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-issue110.c"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 32,
                  "endLine": 95,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                    "rendered": {
                      "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                      "markdown": "`    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 18,
                  "endLine": 105,
                  "endColumn": 3,
                  "snippet": {
                    "text": "prep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\nexport FONTCONFIG_FILE=\"$MyPWD\"/fonts-b.conf\ncheck\n",
                    "rendered": {
                      "text": "prep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\nexport FONTCONFIG_FILE=\"$MyPWD\"/fonts-b.conf\ncheck\n",
                      "markdown": "`prep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\nexport FONTCONFIG_FILE=\"$MyPWD\"/fonts-b.conf\ncheck\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 26,
                  "endLine": 103,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ndotest \"mapped check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\nexport FONTCONFIG_FILE=\"$MyPWD\"/fonts-b.conf\n",
                    "rendered": {
                      "text": "\ndotest \"mapped check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\nexport FONTCONFIG_FILE=\"$MyPWD\"/fonts-b.conf\n",
                      "markdown": "`\ndotest \"mapped check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\nexport FONTCONFIG_FILE=\"$MyPWD\"/fonts-b.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 4,
                  "endLine": 102,
                  "endColumn": 3,
                  "snippet": {
                    "text": "check\n\ndotest \"mapped check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\n",
                    "rendered": {
                      "text": "check\n\ndotest \"mapped check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\n",
                      "markdown": "`check\n\ndotest \"mapped check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDB $EXPECTED\n$FCCACHE $FONTDIRA\nmv $FONTDIRA $FONTDIRB\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 26,
                  "endLine": 96,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\ndotest \"Basic check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDA $EXPECTED\n$FCCACHE $FONTDIRA\ncheck\n\n",
                    "rendered": {
                      "text": "\ndotest \"Basic check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDA $EXPECTED\n$FCCACHE $FONTDIRA\ncheck\n\n",
                      "markdown": "`\ndotest \"Basic check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDA $EXPECTED\n$FCCACHE $FONTDIRA\ncheck\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 4,
                  "endLine": 95,
                  "endColumn": 3,
                  "snippet": {
                    "text": "export FONTCONFIG_FILE\n\ndotest \"Basic check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDA $EXPECTED\n$FCCACHE $FONTDIRA\ncheck\n",
                    "rendered": {
                      "text": "export FONTCONFIG_FILE\n\ndotest \"Basic check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDA $EXPECTED\n$FCCACHE $FONTDIRA\ncheck\n",
                      "markdown": "`export FONTCONFIG_FILE\n\ndotest \"Basic check\"\nprep\ncp $FONT1 $FONT2 $FONTDIRA\ncp $EXPECTEDA $EXPECTED\n$FCCACHE $FONTDIRA\ncheck\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 55,
                  "endLine": 88,
                  "endColumn": 4,
                  "snippet": {
                    "text": "s!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\nsed \"s!@FONTDIR@!$FONTDIRA!\" < $EXPECTEDIN > $EXPECTEDA\nsed \"s!@FONTDIR@!$FONTDIRB!\" < $EXPECTEDIN > $EXPECTEDB\n\nFONTCONFIG_FILE=\"$MyPWD\"/fonts-a.conf\nexport FONTCONFIG_FILE\n",
                    "rendered": {
                      "text": "s!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\nsed \"s!@FONTDIR@!$FONTDIRA!\" < $EXPECTEDIN > $EXPECTEDA\nsed \"s!@FONTDIR@!$FONTDIRB!\" < $EXPECTEDIN > $EXPECTEDB\n\nFONTCONFIG_FILE=\"$MyPWD\"/fonts-a.conf\nexport FONTCONFIG_FILE\n",
                      "markdown": "`s!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\nsed \"s!@FONTDIR@!$FONTDIRA!\" < $EXPECTEDIN > $EXPECTEDA\nsed \"s!@FONTDIR@!$FONTDIRB!\" < $EXPECTEDIN > $EXPECTEDB\n\nFONTCONFIG_FILE=\"$MyPWD\"/fonts-a.conf\nexport FONTCONFIG_FILE\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 87,
                  "endColumn": 4,
                  "snippet": {
                    "text": "sed \"s!@FONTDIR@!$FONTDIRB!\ns!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\nsed \"s!@FONTDIR@!$FONTDIRA!\" < $EXPECTEDIN > $EXPECTEDA\nsed \"s!@FONTDIR@!$FONTDIRB!\" < $EXPECTEDIN > $EXPECTEDB\n\nFONTCONFIG_FILE=\"$MyPWD\"/fonts-a.conf\n",
                    "rendered": {
                      "text": "sed \"s!@FONTDIR@!$FONTDIRB!\ns!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\nsed \"s!@FONTDIR@!$FONTDIRA!\" < $EXPECTEDIN > $EXPECTEDA\nsed \"s!@FONTDIR@!$FONTDIRB!\" < $EXPECTEDIN > $EXPECTEDB\n\nFONTCONFIG_FILE=\"$MyPWD\"/fonts-a.conf\n",
                      "markdown": "`sed \"s!@FONTDIR@!$FONTDIRB!\ns!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\nsed \"s!@FONTDIR@!$FONTDIRA!\" < $EXPECTEDIN > $EXPECTEDA\nsed \"s!@FONTDIR@!$FONTDIRB!\" < $EXPECTEDIN > $EXPECTEDB\n\nFONTCONFIG_FILE=\"$MyPWD\"/fonts-a.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 83,
                  "endColumn": 4,
                  "snippet": {
                    "text": "sed \"s!@FONTDIR@!$FONTDIRA!\ns!@MAP@!!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-a.conf\n\nsed \"s!@FONTDIR@!$FONTDIRB!\ns!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\n",
                    "rendered": {
                      "text": "sed \"s!@FONTDIR@!$FONTDIRA!\ns!@MAP@!!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-a.conf\n\nsed \"s!@FONTDIR@!$FONTDIRB!\ns!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\n",
                      "markdown": "`sed \"s!@FONTDIR@!$FONTDIRA!\ns!@MAP@!!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-a.conf\n\nsed \"s!@FONTDIR@!$FONTDIRB!\ns!@MAP@!map=\"'\"'\"$FONTDIRA\"'\"'\"!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-b.conf\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 79,
                  "endColumn": 4,
                  "snippet": {
                    "text": "  TEST=$1\n  test x$VERBOSE = x || echo Running: $TEST\n}\n\nsed \"s!@FONTDIR@!$FONTDIRA!\ns!@MAP@!!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-a.conf\n\n",
                    "rendered": {
                      "text": "  TEST=$1\n  test x$VERBOSE = x || echo Running: $TEST\n}\n\nsed \"s!@FONTDIR@!$FONTDIRA!\ns!@MAP@!!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-a.conf\n\n",
                      "markdown": "`  TEST=$1\n  test x$VERBOSE = x || echo Running: $TEST\n}\n\nsed \"s!@FONTDIR@!$FONTDIRA!\ns!@MAP@!!\ns!@CACHEDIR@!$CACHEDIR!\" < $TESTDIR/fonts.conf.in > fonts-a.conf\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 29,
                  "endLine": 58,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n  if cmp out $BUILDTESTDIR/$EXPECTED > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'out', expected output in '$EXPECTED'\"\n",
                    "rendered": {
                      "text": "  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n  if cmp out $BUILDTESTDIR/$EXPECTED > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'out', expected output in '$EXPECTED'\"\n",
                      "markdown": "`  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n  if cmp out $BUILDTESTDIR/$EXPECTED > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"*** output is in 'out', expected output in '$EXPECTED'\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 35,
                  "endLine": 57,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n  if cmp out $BUILDTESTDIR/$EXPECTED > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n",
                    "rendered": {
                      "text": "  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n  if cmp out $BUILDTESTDIR/$EXPECTED > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n",
                      "markdown": "`  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n  if cmp out $BUILDTESTDIR/$EXPECTED > /dev/null ; then : ; else\n    echo \"*** Test failed: $TEST\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 35,
                  "endLine": 55,
                  "endColumn": 41,
                  "snippet": {
                    "text": "check () {\n  $FCLIST - file family pixelsize | sort > out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n",
                    "rendered": {
                      "text": "check () {\n  $FCLIST - file family pixelsize | sort > out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n",
                      "markdown": "`check () {\n  $FCLIST - file family pixelsize | sort > out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  tr -d '\\015' <out >out.tmp; mv out.tmp out\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test-map.sh"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 35,
                  "endLine": 53,
                  "endColumn": 41,
                  "snippet": {
                    "text": "FONT2=$TESTDIR/8x16.pcf\n\ncheck () {\n  $FCLIST - file family pixelsize | sort > out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n",
                    "rendered": {
                      "text": "FONT2=$TESTDIR/8x16.pcf\n\ncheck () {\n  $FCLIST - file family pixelsize | sort > out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n",
                      "markdown": "`FONT2=$TESTDIR/8x16.pcf\n\ncheck () {\n  $FCLIST - file family pixelsize | sort > out\n  echo \"=\" >> out\n  $FCLIST - file family pixelsize | sort >> out\n  echo \"=\" >> out\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-issue107.c"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 3,
                  "endLine": 242,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    retval++;\n    free (dd);\n    len = strlen ((const char *) doc) + strlen (basedir) + 1;\n    dd = malloc (len);\n    snprintf ((char *) dd, len, (char *) doc, basedir);\n    if (!FcConfigParseAndLoadFromMemory (cfg, dd, FcFalse))\n    {\n",
                    "rendered": {
                      "text": "    retval++;\n    free (dd);\n    len = strlen ((const char *) doc) + strlen (basedir) + 1;\n    dd = malloc (len);\n    snprintf ((char *) dd, len, (char *) doc, basedir);\n    if (!FcConfigParseAndLoadFromMemory (cfg, dd, FcFalse))\n    {\n",
                      "markdown": "`    retval++;\n    free (dd);\n    len = strlen ((const char *) doc) + strlen (basedir) + 1;\n    dd = malloc (len);\n    snprintf ((char *) dd, len, (char *) doc, basedir);\n    if (!FcConfigParseAndLoadFromMemory (cfg, dd, FcFalse))\n    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-issue107.c"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 3,
                  "endLine": 214,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    fprintf (stderr, \"D: Creating %s\\n\", basedir);\n    mkdir_p (basedir);\n    len = strlen ((const char *) doc) + strlen (basedir) + 1;\n    dd = malloc (len);\n    snprintf ((char *) dd, len, (char *) doc, basedir);\n    if (!FcConfigParseAndLoadFromMemory (cfg, dd, FcFalse))\n    {\n",
                    "rendered": {
                      "text": "    fprintf (stderr, \"D: Creating %s\\n\", basedir);\n    mkdir_p (basedir);\n    len = strlen ((const char *) doc) + strlen (basedir) + 1;\n    dd = malloc (len);\n    snprintf ((char *) dd, len, (char *) doc, basedir);\n    if (!FcConfigParseAndLoadFromMemory (cfg, dd, FcFalse))\n    {\n",
                      "markdown": "`    fprintf (stderr, \"D: Creating %s\\n\", basedir);\n    mkdir_p (basedir);\n    len = strlen ((const char *) doc) + strlen (basedir) + 1;\n    dd = malloc (len);\n    snprintf ((char *) dd, len, (char *) doc, basedir);\n    if (!FcConfigParseAndLoadFromMemory (cfg, dd, FcFalse))\n    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-issue107.c"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 54,
                  "endLine": 97,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                    "rendered": {
                      "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                      "markdown": "`    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-issue107.c"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 32,
                  "endLine": 95,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                    "rendered": {
                      "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                      "markdown": "`    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/meson.build"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 194,
                  "endLine": 57,
                  "endColumn": 199,
                  "snippet": {
                    "text": "                               'out.expected')\n  endif\n\n  test('run_test_sh', find_program('run-test.sh'), timeout: 600, env: ['srcdir=@0@'.format(meson.current_source_dir()), 'builddir=@0@'.format(meson.current_build_dir()), 'EXEEXT=@0@'.format(conf.get('EXEEXT')), 'VERBOSE=1'])\nendif\n\nif jsonc_dep.found()\n",
                    "rendered": {
                      "text": "                               'out.expected')\n  endif\n\n  test('run_test_sh', find_program('run-test.sh'), timeout: 600, env: ['srcdir=@0@'.format(meson.current_source_dir()), 'builddir=@0@'.format(meson.current_build_dir()), 'EXEEXT=@0@'.format(conf.get('EXEEXT')), 'VERBOSE=1'])\nendif\n\nif jsonc_dep.found()\n",
                      "markdown": "`                               'out.expected')\n  endif\n\n  test('run_test_sh', find_program('run-test.sh'), timeout: 600, env: ['srcdir=@0@'.format(meson.current_source_dir()), 'builddir=@0@'.format(meson.current_build_dir()), 'EXEEXT=@0@'.format(conf.get('EXEEXT')), 'VERBOSE=1'])\nendif\n\nif jsonc_dep.found()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/meson.build"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 9,
                  "endLine": 49,
                  "endColumn": 14,
                  "snippet": {
                    "text": "fs = import('fs')\n\nif host_machine.system() != 'windows'\n  if conf.get('FREETYPE_PCF_LONG_FAMILY_NAMES')\n    out_expected = fs.copyfile('out.expected-long-family-names',\n                               'out.expected')\n  else\n",
                    "rendered": {
                      "text": "fs = import('fs')\n\nif host_machine.system() != 'windows'\n  if conf.get('FREETYPE_PCF_LONG_FAMILY_NAMES')\n    out_expected = fs.copyfile('out.expected-long-family-names',\n                               'out.expected')\n  else\n",
                      "markdown": "`fs = import('fs')\n\nif host_machine.system() != 'windows'\n  if conf.get('FREETYPE_PCF_LONG_FAMILY_NAMES')\n    out_expected = fs.copyfile('out.expected-long-family-names',\n                               'out.expected')\n  else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/meson.build"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 19,
                  "endLine": 33,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  fname = test_data[0]\n  opts = test_data.length() > 1 ? test_data[1] : {}\n  extra_c_args = opts.get('c_args', [])\n  extra_deps = opts.get('dependencies', [])\n\n  test_name = fname.split('.')[0].underscorify()\n  exe = executable(test_name, fname,\n",
                    "rendered": {
                      "text": "  fname = test_data[0]\n  opts = test_data.length() > 1 ? test_data[1] : {}\n  extra_c_args = opts.get('c_args', [])\n  extra_deps = opts.get('dependencies', [])\n\n  test_name = fname.split('.')[0].underscorify()\n  exe = executable(test_name, fname,\n",
                      "markdown": "`  fname = test_data[0]\n  opts = test_data.length() > 1 ? test_data[1] : {}\n  extra_c_args = opts.get('c_args', [])\n  extra_deps = opts.get('dependencies', [])\n\n  test_name = fname.split('.')[0].underscorify()\n  exe = executable(test_name, fname,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/meson.build"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 26,
                  "snippet": {
                    "text": "foreach test_data : tests\n  fname = test_data[0]\n  opts = test_data.length() > 1 ? test_data[1] : {}\n  extra_c_args = opts.get('c_args', [])\n  extra_deps = opts.get('dependencies', [])\n\n  test_name = fname.split('.')[0].underscorify()\n",
                    "rendered": {
                      "text": "foreach test_data : tests\n  fname = test_data[0]\n  opts = test_data.length() > 1 ? test_data[1] : {}\n  extra_c_args = opts.get('c_args', [])\n  extra_deps = opts.get('dependencies', [])\n\n  test_name = fname.split('.')[0].underscorify()\n",
                      "markdown": "`foreach test_data : tests\n  fname = test_data[0]\n  opts = test_data.length() > 1 ? test_data[1] : {}\n  extra_c_args = opts.get('c_args', [])\n  extra_deps = opts.get('dependencies', [])\n\n  test_name = fname.split('.')[0].underscorify()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcfreetype.c"
                },
                "region": {
                  "startLine": 1197,
                  "startColumn": 30,
                  "endLine": 1197,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t     (nameid < sname->name_id ||\n\t      (nameid == sname->name_id &&\n\t       (mid &&\n\t\tplatform == mapping[mid - 1].platform_id &&\n\t\tnameid == mapping[mid - 1].name_id\n\t       )))))\n\t    max = mid - 1;\n",
                    "rendered": {
                      "text": "\t     (nameid < sname->name_id ||\n\t      (nameid == sname->name_id &&\n\t       (mid &&\n\t\tplatform == mapping[mid - 1].platform_id &&\n\t\tnameid == mapping[mid - 1].name_id\n\t       )))))\n\t    max = mid - 1;\n",
                      "markdown": "`\t     (nameid < sname->name_id ||\n\t      (nameid == sname->name_id &&\n\t       (mid &&\n\t\tplatform == mapping[mid - 1].platform_id &&\n\t\tnameid == mapping[mid - 1].name_id\n\t       )))))\n\t    max = mid - 1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcfreetype.c"
                },
                "region": {
                  "startLine": 930,
                  "startColumn": 20,
                  "endLine": 930,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    }\n\n    for (i = 0; i < NUM_FC_FT_LANGUAGE; i++)\n\tif (fcFtLanguage[i].platform_id == platform_id &&\n\t    (fcFtLanguage[i].language_id == TT_LANGUAGE_DONT_CARE ||\n\t     fcFtLanguage[i].language_id == language_id))\n\t{\n",
                    "rendered": {
                      "text": "    }\n\n    for (i = 0; i < NUM_FC_FT_LANGUAGE; i++)\n\tif (fcFtLanguage[i].platform_id == platform_id &&\n\t    (fcFtLanguage[i].language_id == TT_LANGUAGE_DONT_CARE ||\n\t     fcFtLanguage[i].language_id == language_id))\n\t{\n",
                      "markdown": "`    }\n\n    for (i = 0; i < NUM_FC_FT_LANGUAGE; i++)\n\tif (fcFtLanguage[i].platform_id == platform_id &&\n\t    (fcFtLanguage[i].language_id == TT_LANGUAGE_DONT_CARE ||\n\t     fcFtLanguage[i].language_id == language_id))\n\t{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000707"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Platform)",
            "id": "BD000707"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcfreetype.c"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 20,
                  "endLine": 716,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    FcBool redecoded = FcFalse;\n\n    for (i = 0; i < NUM_FC_FT_ENCODING; i++)\n\tif (fcFtEncoding[i].platform_id == sname->platform_id &&\n\t    (fcFtEncoding[i].encoding_id == TT_ENCODING_DONT_CARE ||\n\t     fcFtEncoding[i].encoding_id == sname->encoding_id))\n\t    break;\n",
                    "rendered": {
                      "text": "    FcBool redecoded = FcFalse;\n\n    for (i = 0; i < NUM_FC_FT_ENCODING; i++)\n\tif (fcFtEncoding[i].platform_id == sname->platform_id &&\n\t    (fcFtEncoding[i].encoding_id == TT_ENCODING_DONT_CARE ||\n\t     fcFtEncoding[i].encoding_id == sname->encoding_id))\n\t    break;\n",
                      "markdown": "`    FcBool redecoded = FcFalse;\n\n    for (i = 0; i < NUM_FC_FT_ENCODING; i++)\n\tif (fcFtEncoding[i].platform_id == sname->platform_id &&\n\t    (fcFtEncoding[i].encoding_id == TT_ENCODING_DONT_CARE ||\n\t     fcFtEncoding[i].encoding_id == sname->encoding_id))\n\t    break;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcfreetype.c"
                },
                "region": {
                  "startLine": 1843,
                  "startColumn": 3,
                  "endLine": 1843,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    /*\n     * Find the font revision (if available)\n     */\n    head = (TT_Header *) FT_Get_Sfnt_Table (face, ft_sfnt_head);\n    if (head)\n    {\n\tif (!FcPatternObjectAddInteger (pat, FC_FONTVERSION_OBJECT, head->Font_Revision))\n",
                    "rendered": {
                      "text": "    /*\n     * Find the font revision (if available)\n     */\n    head = (TT_Header *) FT_Get_Sfnt_Table (face, ft_sfnt_head);\n    if (head)\n    {\n\tif (!FcPatternObjectAddInteger (pat, FC_FONTVERSION_OBJECT, head->Font_Revision))\n",
                      "markdown": "`    /*\n     * Find the font revision (if available)\n     */\n    head = (TT_Header *) FT_Get_Sfnt_Table (face, ft_sfnt_head);\n    if (head)\n    {\n\tif (!FcPatternObjectAddInteger (pat, FC_FONTVERSION_OBJECT, head->Font_Revision))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 59,
                  "endLine": 20,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\thattr='FC_ATTRIBUTE_VISIBILITY_HIDDEN'\n\t\techo \"extern __typeof ($name) $alias $hattr;\" >> $HEAD\n\t\techo \"#define $name $alias\" >> $HEAD\n\t\tifdef=`grep -l '^'$name'[ (]' \"$SRCDIR\"/*.c | sed -n 1p | sed -e 's/^.*\\/\\([^.]*\\)\\.c/__\\1__/'`\n\t\tif [ -z \"$ifdef\" ] ; then\n\t\t\techo \"error: could not locate $name in src/*.c\" 1>&2\n\t\t\texit 1\n",
                    "rendered": {
                      "text": "\t\thattr='FC_ATTRIBUTE_VISIBILITY_HIDDEN'\n\t\techo \"extern __typeof ($name) $alias $hattr;\" >> $HEAD\n\t\techo \"#define $name $alias\" >> $HEAD\n\t\tifdef=`grep -l '^'$name'[ (]' \"$SRCDIR\"/*.c | sed -n 1p | sed -e 's/^.*\\/\\([^.]*\\)\\.c/__\\1__/'`\n\t\tif [ -z \"$ifdef\" ] ; then\n\t\t\techo \"error: could not locate $name in src/*.c\" 1>&2\n\t\t\texit 1\n",
                      "markdown": "`\t\thattr='FC_ATTRIBUTE_VISIBILITY_HIDDEN'\n\t\techo \"extern __typeof ($name) $alias $hattr;\" >> $HEAD\n\t\techo \"#define $name $alias\" >> $HEAD\n\t\tifdef=`grep -l '^'$name'[ (]' \"$SRCDIR\"/*.c | sed -n 1p | sed -e 's/^.*\\/\\([^.]*\\)\\.c/__\\1__/'`\n\t\tif [ -z \"$ifdef\" ] ; then\n\t\t\techo \"error: could not locate $name in src/*.c\" 1>&2\n\t\t\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 47,
                  "endLine": 20,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\thattr='FC_ATTRIBUTE_VISIBILITY_HIDDEN'\n\t\techo \"extern __typeof ($name) $alias $hattr;\" >> $HEAD\n\t\techo \"#define $name $alias\" >> $HEAD\n\t\tifdef=`grep -l '^'$name'[ (]' \"$SRCDIR\"/*.c | sed -n 1p | sed -e 's/^.*\\/\\([^.]*\\)\\.c/__\\1__/'`\n\t\tif [ -z \"$ifdef\" ] ; then\n\t\t\techo \"error: could not locate $name in src/*.c\" 1>&2\n\t\t\texit 1\n",
                    "rendered": {
                      "text": "\t\thattr='FC_ATTRIBUTE_VISIBILITY_HIDDEN'\n\t\techo \"extern __typeof ($name) $alias $hattr;\" >> $HEAD\n\t\techo \"#define $name $alias\" >> $HEAD\n\t\tifdef=`grep -l '^'$name'[ (]' \"$SRCDIR\"/*.c | sed -n 1p | sed -e 's/^.*\\/\\([^.]*\\)\\.c/__\\1__/'`\n\t\tif [ -z \"$ifdef\" ] ; then\n\t\t\techo \"error: could not locate $name in src/*.c\" 1>&2\n\t\t\texit 1\n",
                      "markdown": "`\t\thattr='FC_ATTRIBUTE_VISIBILITY_HIDDEN'\n\t\techo \"extern __typeof ($name) $alias $hattr;\" >> $HEAD\n\t\techo \"#define $name $alias\" >> $HEAD\n\t\tifdef=`grep -l '^'$name'[ (]' \"$SRCDIR\"/*.c | sed -n 1p | sed -e 's/^.*\\/\\([^.]*\\)\\.c/__\\1__/'`\n\t\tif [ -z \"$ifdef\" ] ; then\n\t\t\techo \"error: could not locate $name in src/*.c\" 1>&2\n\t\t\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 31,
                  "endLine": 10,
                  "endColumn": 36,
                  "snippet": {
                    "text": "shift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n",
                    "rendered": {
                      "text": "shift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n",
                      "markdown": "`shift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 10,
                  "endLine": 10,
                  "endColumn": 16,
                  "snippet": {
                    "text": "shift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n",
                    "rendered": {
                      "text": "shift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n",
                      "markdown": "`shift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 39,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "TAIL=$1\nshift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n",
                    "rendered": {
                      "text": "TAIL=$1\nshift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n",
                      "markdown": "`TAIL=$1\nshift\nrm -f $HEAD $TAIL\necho \"#if HAVE_GNUC_ATTRIBUTE\" >> $TAIL\ncat \"$@\" | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//' |\nwhile read name; do\n\tcase $name in\n\tFcCacheDir|FcCacheSubdir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcinit.c"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1,
                  "endLine": 126,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tchar *env_file, *env_path;\n\n\tenv_file = getenv (\"FONTCONFIG_FILE\");\n\tenv_path = getenv (\"FONTCONFIG_PATH\");\n\tif ((env_file != NULL && env_file[0] != 0) ||\n\t    (env_path != NULL && env_path[0] != 0))\n\t    have_own = FcTrue;\n",
                    "rendered": {
                      "text": "\tchar *env_file, *env_path;\n\n\tenv_file = getenv (\"FONTCONFIG_FILE\");\n\tenv_path = getenv (\"FONTCONFIG_PATH\");\n\tif ((env_file != NULL && env_file[0] != 0) ||\n\t    (env_path != NULL && env_path[0] != 0))\n\t    have_own = FcTrue;\n",
                      "markdown": "`\tchar *env_file, *env_path;\n\n\tenv_file = getenv (\"FONTCONFIG_FILE\");\n\tenv_path = getenv (\"FONTCONFIG_PATH\");\n\tif ((env_file != NULL && env_file[0] != 0) ||\n\t    (env_path != NULL && env_path[0] != 0))\n\t    have_own = FcTrue;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcinit.c"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 1,
                  "endLine": 125,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\tFcBool have_own = FcFalse;\n\tchar *env_file, *env_path;\n\n\tenv_file = getenv (\"FONTCONFIG_FILE\");\n\tenv_path = getenv (\"FONTCONFIG_PATH\");\n\tif ((env_file != NULL && env_file[0] != 0) ||\n\t    (env_path != NULL && env_path[0] != 0))\n",
                    "rendered": {
                      "text": "\tFcBool have_own = FcFalse;\n\tchar *env_file, *env_path;\n\n\tenv_file = getenv (\"FONTCONFIG_FILE\");\n\tenv_path = getenv (\"FONTCONFIG_PATH\");\n\tif ((env_file != NULL && env_file[0] != 0) ||\n\t    (env_path != NULL && env_path[0] != 0))\n",
                      "markdown": "`\tFcBool have_own = FcFalse;\n\tchar *env_file, *env_path;\n\n\tenv_file = getenv (\"FONTCONFIG_FILE\");\n\tenv_path = getenv (\"FONTCONFIG_PATH\");\n\tif ((env_file != NULL && env_file[0] != 0) ||\n\t    (env_path != NULL && env_path[0] != 0))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcinit.c"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 9,
                  "endLine": 264,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    /*\n     * Check no more often than rescanInterval seconds\n     */\n    now = time (0);\n    if (config->rescanTime + config->rescanInterval - now > 0)\n\tgoto bail;\n    /*\n",
                    "rendered": {
                      "text": "    /*\n     * Check no more often than rescanInterval seconds\n     */\n    now = time (0);\n    if (config->rescanTime + config->rescanInterval - now > 0)\n\tgoto bail;\n    /*\n",
                      "markdown": "`    /*\n     * Check no more often than rescanInterval seconds\n     */\n    now = time (0);\n    if (config->rescanTime + config->rescanInterval - now > 0)\n\tgoto bail;\n    /*\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcinit.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 26,
                  "endLine": 32,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#pragma message(\"Could not find any system to define atomic_int macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"Could not find any system to define mutex macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_ATOMIC_INT_NIL) || defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"To suppress these warnings, define FC_NO_MT.\")\n",
                    "rendered": {
                      "text": "#pragma message(\"Could not find any system to define atomic_int macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"Could not find any system to define mutex macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_ATOMIC_INT_NIL) || defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"To suppress these warnings, define FC_NO_MT.\")\n",
                      "markdown": "`#pragma message(\"Could not find any system to define atomic_int macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"Could not find any system to define mutex macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_ATOMIC_INT_NIL) || defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"To suppress these warnings, define FC_NO_MT.\")\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcinit.c"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 26,
                  "endLine": 29,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#include <stdlib.h>\n\n#if defined(FC_ATOMIC_INT_NIL)\n#pragma message(\"Could not find any system to define atomic_int macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"Could not find any system to define mutex macros, library may NOT be thread-safe.\")\n",
                    "rendered": {
                      "text": "#include <stdlib.h>\n\n#if defined(FC_ATOMIC_INT_NIL)\n#pragma message(\"Could not find any system to define atomic_int macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"Could not find any system to define mutex macros, library may NOT be thread-safe.\")\n",
                      "markdown": "`#include <stdlib.h>\n\n#if defined(FC_ATOMIC_INT_NIL)\n#pragma message(\"Could not find any system to define atomic_int macros, library may NOT be thread-safe.\")\n#endif\n#if defined(FC_MUTEX_IMPL_NIL)\n#pragma message(\"Could not find any system to define mutex macros, library may NOT be thread-safe.\")\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccache.c"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 13,
                  "endLine": 132,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    if (status == MMAP_NOT_INITIALIZED)\n    {\n\tconst char *env = getenv (\"FONTCONFIG_USE_MMAP\");\n\tFcBool use;\n\tif (env && FcNameBool ((const FcChar8 *) env, &use))\n\t    status =  use ? MMAP_USE : MMAP_DONT_USE;\n",
                    "rendered": {
                      "text": "\n    if (status == MMAP_NOT_INITIALIZED)\n    {\n\tconst char *env = getenv (\"FONTCONFIG_USE_MMAP\");\n\tFcBool use;\n\tif (env && FcNameBool ((const FcChar8 *) env, &use))\n\t    status =  use ? MMAP_USE : MMAP_DONT_USE;\n",
                      "markdown": "`\n    if (status == MMAP_NOT_INITIALIZED)\n    {\n\tconst char *env = getenv (\"FONTCONFIG_USE_MMAP\");\n\tFcBool use;\n\tif (env && FcNameBool ((const FcChar8 *) env, &use))\n\t    status =  use ? MMAP_USE : MMAP_DONT_USE;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccache.c"
                },
                "region": {
                  "startLine": 1816,
                  "startColumn": 43,
                  "endLine": 1816,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n\n    return ret;\n",
                    "rendered": {
                      "text": "\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n\n    return ret;\n",
                      "markdown": "`\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n\n    return ret;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccache.c"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 34,
                  "endLine": 1814,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    if (FcDebug () & FC_DBG_CACHE)\n    {\n\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n",
                    "rendered": {
                      "text": "    if (FcDebug () & FC_DBG_CACHE)\n    {\n\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n",
                      "markdown": "`    if (FcDebug () & FC_DBG_CACHE)\n    {\n\tif (ret)\n\t    printf (\"Created CACHEDIR.TAG at %s\\n\", cache_dir);\n\telse\n\t    printf (\"Unable to create CACHEDIR.TAG at %s\\n\", cache_dir);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccache.c"
                },
                "region": {
                  "startLine": 1693,
                  "startColumn": 7,
                  "endLine": 1693,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#if defined(_WIN32)\n\t_locking (fd, _LK_UNLCK, 1);\n#else\n\tstruct flock fl;\n\n\tfl.l_type = F_UNLCK;\n\tfl.l_whence = SEEK_SET;\n",
                    "rendered": {
                      "text": "#if defined(_WIN32)\n\t_locking (fd, _LK_UNLCK, 1);\n#else\n\tstruct flock fl;\n\n\tfl.l_type = F_UNLCK;\n\tfl.l_whence = SEEK_SET;\n",
                      "markdown": "`#if defined(_WIN32)\n\t_locking (fd, _LK_UNLCK, 1);\n#else\n\tstruct flock fl;\n\n\tfl.l_type = F_UNLCK;\n\tfl.l_whence = SEEK_SET;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccache.c"
                },
                "region": {
                  "startLine": 1663,
                  "startColumn": 11,
                  "endLine": 1663,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t    if (_locking (fd, _LK_LOCK, 1) == -1)\n\t\tgoto bail;\n#else\n\t    struct flock fl;\n\n\t    fl.l_type = F_WRLCK;\n\t    fl.l_whence = SEEK_SET;\n",
                    "rendered": {
                      "text": "\t    if (_locking (fd, _LK_LOCK, 1) == -1)\n\t\tgoto bail;\n#else\n\t    struct flock fl;\n\n\t    fl.l_type = F_WRLCK;\n\t    fl.l_whence = SEEK_SET;\n",
                      "markdown": "`\t    if (_locking (fd, _LK_LOCK, 1) == -1)\n\t\tgoto bail;\n#else\n\t    struct flock fl;\n\n\t    fl.l_type = F_WRLCK;\n\t    fl.l_whence = SEEK_SET;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2603,
                  "startColumn": 12,
                  "endLine": 2603,
                  "endColumn": 16,
                  "snippet": {
                    "text": "a typo which completely prevented it from working (Lubos Lunak\n<l.lunak@suse.cz>)\n\nRemove comma at end of FcResult enum definition for picky compilers.\n\n2.2.95\n\n",
                    "rendered": {
                      "text": "a typo which completely prevented it from working (Lubos Lunak\n<l.lunak@suse.cz>)\n\nRemove comma at end of FcResult enum definition for picky compilers.\n\n2.2.95\n\n",
                      "markdown": "`a typo which completely prevented it from working (Lubos Lunak\n<l.lunak@suse.cz>)\n\nRemove comma at end of FcResult enum definition for picky compilers.\n\n2.2.95\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2586,
                  "startColumn": 35,
                  "endLine": 2586,
                  "endColumn": 44,
                  "snippet": {
                    "text": "<include> configuration elements may now reference a directory.  Files\nin that directory matching [0-9]* are loaded in UTF-8 collating sequence order.\n\n<selectfont> configuration added to control which fonts are used.\n\nfontformat font pattern elements built from the FT_Get_X11_Font_Format\nfunction in newer versions of FreeType.\n",
                    "rendered": {
                      "text": "<include> configuration elements may now reference a directory.  Files\nin that directory matching [0-9]* are loaded in UTF-8 collating sequence order.\n\n<selectfont> configuration added to control which fonts are used.\n\nfontformat font pattern elements built from the FT_Get_X11_Font_Format\nfunction in newer versions of FreeType.\n",
                      "markdown": "`<include> configuration elements may now reference a directory.  Files\nin that directory matching [0-9]* are loaded in UTF-8 collating sequence order.\n\n<selectfont> configuration added to control which fonts are used.\n\nfontformat font pattern elements built from the FT_Get_X11_Font_Format\nfunction in newer versions of FreeType.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2544,
                  "endLine": 2545,
                  "endColumn": 7,
                  "snippet": {
                    "text": "2.2.99\n\nVerify cache for FC_FILE and FC_FAMILY in every entry (#2219)\n\nUpdate blanks list from recent Unicode docs (#86)\n\nVarious small build fixes (#280, #2278, \n\n",
                    "rendered": {
                      "text": "2.2.99\n\nVerify cache for FC_FILE and FC_FAMILY in every entry (#2219)\n\nUpdate blanks list from recent Unicode docs (#86)\n\nVarious small build fixes (#280, #2278, \n\n",
                      "markdown": "`2.2.99\n\nVerify cache for FC_FILE and FC_FAMILY in every entry (#2219)\n\nUpdate blanks list from recent Unicode docs (#86)\n\nVarious small build fixes (#280, #2278, \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2538,
                  "endLine": 2539,
                  "endColumn": 7,
                  "snippet": {
                    "text": "Create prototype /etc/fonts/conf.d directory and populate it with a few\nsample files.  These samples are unused as the file names don't start with\nnumbers.\n\nUpdate documentation.\n\n2.2.99\n\n",
                    "rendered": {
                      "text": "Create prototype /etc/fonts/conf.d directory and populate it with a few\nsample files.  These samples are unused as the file names don't start with\nnumbers.\n\nUpdate documentation.\n\n2.2.99\n\n",
                      "markdown": "`Create prototype /etc/fonts/conf.d directory and populate it with a few\nsample files.  These samples are unused as the file names don't start with\nnumbers.\n\nUpdate documentation.\n\n2.2.99\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2465,
                  "startColumn": 79,
                  "endLine": 2465,
                  "endColumn": 83,
                  "snippet": {
                    "text": "possible, for added FHS compliance.  \nMake fc-cat read both per-directory and global cache files.  \nAdd config file for Persian fonts from Sharif FarsiWeb, Inc.  \nMajor performance improvements by Dirk Mueller, Stephen Kulow, and Michael Matz at SuSE: in particular, speed up FcFontSetMatch, and inline many functions.\nFix treatment of globs in config files, broken since 2.3.2 and discovered by Mathias Clasen.\nDon't use freetype internal headers (patch by Matthias Clasen).  \nFurther space improvements: create langsets statically, so that they can live in .rodata.\n",
                    "rendered": {
                      "text": "possible, for added FHS compliance.  \nMake fc-cat read both per-directory and global cache files.  \nAdd config file for Persian fonts from Sharif FarsiWeb, Inc.  \nMajor performance improvements by Dirk Mueller, Stephen Kulow, and Michael Matz at SuSE: in particular, speed up FcFontSetMatch, and inline many functions.\nFix treatment of globs in config files, broken since 2.3.2 and discovered by Mathias Clasen.\nDon't use freetype internal headers (patch by Matthias Clasen).  \nFurther space improvements: create langsets statically, so that they can live in .rodata.\n",
                      "markdown": "`possible, for added FHS compliance.  \nMake fc-cat read both per-directory and global cache files.  \nAdd config file for Persian fonts from Sharif FarsiWeb, Inc.  \nMajor performance improvements by Dirk Mueller, Stephen Kulow, and Michael Matz at SuSE: in particular, speed up FcFontSetMatch, and inline many functions.\nFix treatment of globs in config files, broken since 2.3.2 and discovered by Mathias Clasen.\nDon't use freetype internal headers (patch by Matthias Clasen).  \nFurther space improvements: create langsets statically, so that they can live in .rodata.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2375,
                  "startColumn": 49,
                  "endLine": 2375,
                  "endColumn": 53,
                  "snippet": {
                    "text": "      Avoid #warning directives on non-GCC compilers. (bug 7683)\n      Chinese/Macau needs the Hong Kong orthography instead of Taiwan (bug 7884)\n      Add Assamese orthography (as.orth). Bug #8050\n      Really only rebuild caches for system fonts at make install time.\n      Fonts matching lang not territory should satisfy sort pattern lang.\n      Prefer Bitstream Vera to DejaVu families.\n      Guess that mac roman names with lots of high bits are actually SJIS.\n",
                    "rendered": {
                      "text": "      Avoid #warning directives on non-GCC compilers. (bug 7683)\n      Chinese/Macau needs the Hong Kong orthography instead of Taiwan (bug 7884)\n      Add Assamese orthography (as.orth). Bug #8050\n      Really only rebuild caches for system fonts at make install time.\n      Fonts matching lang not territory should satisfy sort pattern lang.\n      Prefer Bitstream Vera to DejaVu families.\n      Guess that mac roman names with lots of high bits are actually SJIS.\n",
                      "markdown": "`      Avoid #warning directives on non-GCC compilers. (bug 7683)\n      Chinese/Macau needs the Hong Kong orthography instead of Taiwan (bug 7884)\n      Add Assamese orthography (as.orth). Bug #8050\n      Really only rebuild caches for system fonts at make install time.\n      Fonts matching lang not territory should satisfy sort pattern lang.\n      Prefer Bitstream Vera to DejaVu families.\n      Guess that mac roman names with lots of high bits are actually SJIS.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2369,
                  "startColumn": 42,
                  "endLine": 2369,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      Fix fc-lang to use new charset freezer API.\n      Fontset pattern references are relative to fontset, not array.\n      Add some ignores\n      Only rebuild caches for system fonts at make install time.\n      Fix memory leaks in fc-cache directory cleaning code.\n      Add @EXPAT_LIBS@ to Libs.private in fontconfig.pc (bug 7683)\n      Avoid #warning directives on non-GCC compilers. (bug 7683)\n",
                    "rendered": {
                      "text": "      Fix fc-lang to use new charset freezer API.\n      Fontset pattern references are relative to fontset, not array.\n      Add some ignores\n      Only rebuild caches for system fonts at make install time.\n      Fix memory leaks in fc-cache directory cleaning code.\n      Add @EXPAT_LIBS@ to Libs.private in fontconfig.pc (bug 7683)\n      Avoid #warning directives on non-GCC compilers. (bug 7683)\n",
                      "markdown": "`      Fix fc-lang to use new charset freezer API.\n      Fontset pattern references are relative to fontset, not array.\n      Add some ignores\n      Only rebuild caches for system fonts at make install time.\n      Fix memory leaks in fc-cache directory cleaning code.\n      Add @EXPAT_LIBS@ to Libs.private in fontconfig.pc (bug 7683)\n      Avoid #warning directives on non-GCC compilers. (bug 7683)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2316,
                  "startColumn": 5,
                  "endLine": 2316,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Oops, fc-lang broke when I added cache referencing.\n      Correct reference count when sharing cache file objects.\n      Eliminate .so PLT entries for local symbols. (thanks to Arjan van de Ven)\n      Update architecture signatures for x86-64 and ppc.\n      Parallel build fix for fcalias.h and fcaliastail.h\n      Charset hashing depended on uniqueness of leaves.\n\n",
                    "rendered": {
                      "text": "      Oops, fc-lang broke when I added cache referencing.\n      Correct reference count when sharing cache file objects.\n      Eliminate .so PLT entries for local symbols. (thanks to Arjan van de Ven)\n      Update architecture signatures for x86-64 and ppc.\n      Parallel build fix for fcalias.h and fcaliastail.h\n      Charset hashing depended on uniqueness of leaves.\n\n",
                      "markdown": "`      Oops, fc-lang broke when I added cache referencing.\n      Correct reference count when sharing cache file objects.\n      Eliminate .so PLT entries for local symbols. (thanks to Arjan van de Ven)\n      Update architecture signatures for x86-64 and ppc.\n      Parallel build fix for fcalias.h and fcaliastail.h\n      Charset hashing depended on uniqueness of leaves.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2282,
                  "startColumn": 24,
                  "endLine": 2282,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      Make conf.avail and conf.d work\n\nKeith Packard:\n      Create fc_cachedir at install time. Bug 8157.\n      Reference patterns in FcCacheCopySet.\n      Replace gnu-specific sed command with simple grep.\n      Attempt to fix makealias usage for build on Mac OS X.\n",
                    "rendered": {
                      "text": "      Make conf.avail and conf.d work\n\nKeith Packard:\n      Create fc_cachedir at install time. Bug 8157.\n      Reference patterns in FcCacheCopySet.\n      Replace gnu-specific sed command with simple grep.\n      Attempt to fix makealias usage for build on Mac OS X.\n",
                      "markdown": "`      Make conf.avail and conf.d work\n\nKeith Packard:\n      Create fc_cachedir at install time. Bug 8157.\n      Reference patterns in FcCacheCopySet.\n      Replace gnu-specific sed command with simple grep.\n      Attempt to fix makealias usage for build on Mac OS X.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2278,
                  "startColumn": 5,
                  "endLine": 2278,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Make room for chunks from fonts.conf in conf.avail\n      Re-order old conf.d files\n      Move some section from fonts.conf into conf.avail files\n      Update Makefile.am files\n      Make conf.avail and conf.d work\n\nKeith Packard:\n",
                    "rendered": {
                      "text": "      Make room for chunks from fonts.conf in conf.avail\n      Re-order old conf.d files\n      Move some section from fonts.conf into conf.avail files\n      Update Makefile.am files\n      Make conf.avail and conf.d work\n\nKeith Packard:\n",
                      "markdown": "`      Make room for chunks from fonts.conf in conf.avail\n      Re-order old conf.d files\n      Move some section from fonts.conf into conf.avail files\n      Update Makefile.am files\n      Make conf.avail and conf.d work\n\nKeith Packard:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2273,
                  "startColumn": 5,
                  "endLine": 2273,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Support all five possibilities for sub-pixel\n      Move user and local conf file loading into conf.avail files\n      Number the remaining conf.avail files\n      Update Makefile.am to match conf.avail changes\n      Replace load of conf.d in fonts.conf.in\n      Make room for chunks from fonts.conf in conf.avail\n      Re-order old conf.d files\n",
                    "rendered": {
                      "text": "      Support all five possibilities for sub-pixel\n      Move user and local conf file loading into conf.avail files\n      Number the remaining conf.avail files\n      Update Makefile.am to match conf.avail changes\n      Replace load of conf.d in fonts.conf.in\n      Make room for chunks from fonts.conf in conf.avail\n      Re-order old conf.d files\n",
                      "markdown": "`      Support all five possibilities for sub-pixel\n      Move user and local conf file loading into conf.avail files\n      Number the remaining conf.avail files\n      Update Makefile.am to match conf.avail changes\n      Replace load of conf.d in fonts.conf.in\n      Make room for chunks from fonts.conf in conf.avail\n      Re-order old conf.d files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2256,
                  "startColumn": 5,
                  "endLine": 2256,
                  "endColumn": 13,
                  "snippet": {
                    "text": "2.4.1\n\nKeith Packard:\n      Update installation notes for 2.4 base.\n      Add ppc64 signature. Bug 8227\n      Add signatures for m68k and mipsel (thanks debian buildd)\n      Add warning flags to fc-cache build. Clean up warnings in fc-cache.\n",
                    "rendered": {
                      "text": "2.4.1\n\nKeith Packard:\n      Update installation notes for 2.4 base.\n      Add ppc64 signature. Bug 8227\n      Add signatures for m68k and mipsel (thanks debian buildd)\n      Add warning flags to fc-cache build. Clean up warnings in fc-cache.\n",
                      "markdown": "`2.4.1\n\nKeith Packard:\n      Update installation notes for 2.4 base.\n      Add ppc64 signature. Bug 8227\n      Add signatures for m68k and mipsel (thanks debian buildd)\n      Add warning flags to fc-cache build. Clean up warnings in fc-cache.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2169,
                  "startColumn": 5,
                  "endLine": 2169,
                  "endColumn": 13,
                  "snippet": {
                    "text": "2.4.91 (2.5 RC1)\n\nBehdad Esfahbod (1):\n      Update CaseFolding.txt to Unicode 5.1.0\n\nDwayne Bailey (1):\n      Add/fix *.orth files for South African languages\n",
                    "rendered": {
                      "text": "2.4.91 (2.5 RC1)\n\nBehdad Esfahbod (1):\n      Update CaseFolding.txt to Unicode 5.1.0\n\nDwayne Bailey (1):\n      Add/fix *.orth files for South African languages\n",
                      "markdown": "`2.4.91 (2.5 RC1)\n\nBehdad Esfahbod (1):\n      Update CaseFolding.txt to Unicode 5.1.0\n\nDwayne Bailey (1):\n      Add/fix *.orth files for South African languages\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2155,
                  "startColumn": 5,
                  "endLine": 2155,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n      Update documentation for FcStrCopyFilename (bug 12964).\n      Update documentation for stale FcConfigGetConfig function.\n      Have FcConfigSetCurrent accept the current configuration and simply return\n      Remove references to FcConfigParse and FcConfigLoad.\n      Replace incorrect documentation uses of 'char' with 'FcChar8' (bug 13002).\n",
                    "rendered": {
                      "text": "      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n      Update documentation for FcStrCopyFilename (bug 12964).\n      Update documentation for stale FcConfigGetConfig function.\n      Have FcConfigSetCurrent accept the current configuration and simply return\n      Remove references to FcConfigParse and FcConfigLoad.\n      Replace incorrect documentation uses of 'char' with 'FcChar8' (bug 13002).\n",
                      "markdown": "`      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n      Update documentation for FcStrCopyFilename (bug 12964).\n      Update documentation for stale FcConfigGetConfig function.\n      Have FcConfigSetCurrent accept the current configuration and simply return\n      Remove references to FcConfigParse and FcConfigLoad.\n      Replace incorrect documentation uses of 'char' with 'FcChar8' (bug 13002).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2154,
                  "startColumn": 5,
                  "endLine": 2154,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Use FcLangDifferentTerritory instead of FcLangDifferentCountry.\n      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n      Update documentation for FcStrCopyFilename (bug 12964).\n      Update documentation for stale FcConfigGetConfig function.\n      Have FcConfigSetCurrent accept the current configuration and simply return\n      Remove references to FcConfigParse and FcConfigLoad.\n",
                    "rendered": {
                      "text": "      Use FcLangDifferentTerritory instead of FcLangDifferentCountry.\n      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n      Update documentation for FcStrCopyFilename (bug 12964).\n      Update documentation for stale FcConfigGetConfig function.\n      Have FcConfigSetCurrent accept the current configuration and simply return\n      Remove references to FcConfigParse and FcConfigLoad.\n",
                      "markdown": "`      Use FcLangDifferentTerritory instead of FcLangDifferentCountry.\n      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n      Update documentation for FcStrCopyFilename (bug 12964).\n      Update documentation for stale FcConfigGetConfig function.\n      Have FcConfigSetCurrent accept the current configuration and simply return\n      Remove references to FcConfigParse and FcConfigLoad.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2104,
                  "startColumn": 50,
                  "endLine": 2104,
                  "endColumn": 58,
                  "snippet": {
                    "text": "      Include fcftaliastail.h so that the freetype funcs are exported.\n      Eliminate references to freetype from utility Makefile.am's\n      Distribute new fcftint.h file\n      Create new-version.sh to help with releases, update INSTALL instructions\n      Distribute khmer font aliases\n      Add more files to .gitignore\n      new-version.sh was mis-editing files\n",
                    "rendered": {
                      "text": "      Include fcftaliastail.h so that the freetype funcs are exported.\n      Eliminate references to freetype from utility Makefile.am's\n      Distribute new fcftint.h file\n      Create new-version.sh to help with releases, update INSTALL instructions\n      Distribute khmer font aliases\n      Add more files to .gitignore\n      new-version.sh was mis-editing files\n",
                      "markdown": "`      Include fcftaliastail.h so that the freetype funcs are exported.\n      Eliminate references to freetype from utility Makefile.am's\n      Distribute new fcftint.h file\n      Create new-version.sh to help with releases, update INSTALL instructions\n      Distribute khmer font aliases\n      Add more files to .gitignore\n      new-version.sh was mis-editing files\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2083,
                  "startColumn": 37,
                  "endLine": 2084,
                  "snippet": {
                    "text": "      Use of \":=\" in src/Makefile.am is unportable (bug 14420)\n      Make fc-match behave better when style is unknown (bug 15332)\n      Deal with libtool 2.2 which doesn't let us use LT_ variables. (bug 15692)\n      Allow for RC versions in README update\n      git ignore doltcompile\n\nRyan Schmidt (1):\n      fontconfig build fails if \"head\" is missing or unusable (bug 14304)\n",
                    "rendered": {
                      "text": "      Use of \":=\" in src/Makefile.am is unportable (bug 14420)\n      Make fc-match behave better when style is unknown (bug 15332)\n      Deal with libtool 2.2 which doesn't let us use LT_ variables. (bug 15692)\n      Allow for RC versions in README update\n      git ignore doltcompile\n\nRyan Schmidt (1):\n      fontconfig build fails if \"head\" is missing or unusable (bug 14304)\n",
                      "markdown": "`      Use of \":=\" in src/Makefile.am is unportable (bug 14420)\n      Make fc-match behave better when style is unknown (bug 15332)\n      Deal with libtool 2.2 which doesn't let us use LT_ variables. (bug 15692)\n      Allow for RC versions in README update\n      git ignore doltcompile\n\nRyan Schmidt (1):\n      fontconfig build fails if \"head\" is missing or unusable (bug 14304)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2002,
                  "startColumn": 5,
                  "endLine": 2002,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Remove digits and symbols from some Indic orthographies (bug #20204)\n      Add Divehi (dv) orthography (bug #20207)\n      Extend Crimean Tatar (crh) orthography (bug #19891)\n      Update Serbo-Croatian (sh) orthography (bug #20368)\n      Add Ewe (ee) orthography (bug #20386)\n      Add Herero (hz) orthograhy (bug #20387)\n      Add Akan (ak) and Fanti (fat) orthographies (bug #20390)\n",
                    "rendered": {
                      "text": "      Remove digits and symbols from some Indic orthographies (bug #20204)\n      Add Divehi (dv) orthography (bug #20207)\n      Extend Crimean Tatar (crh) orthography (bug #19891)\n      Update Serbo-Croatian (sh) orthography (bug #20368)\n      Add Ewe (ee) orthography (bug #20386)\n      Add Herero (hz) orthograhy (bug #20387)\n      Add Akan (ak) and Fanti (fat) orthographies (bug #20390)\n",
                      "markdown": "`      Remove digits and symbols from some Indic orthographies (bug #20204)\n      Add Divehi (dv) orthography (bug #20207)\n      Extend Crimean Tatar (crh) orthography (bug #19891)\n      Update Serbo-Croatian (sh) orthography (bug #20368)\n      Add Ewe (ee) orthography (bug #20386)\n      Add Herero (hz) orthograhy (bug #20387)\n      Add Akan (ak) and Fanti (fat) orthographies (bug #20390)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1993,
                  "startColumn": 5,
                  "endLine": 1993,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add Papiamento (pap_aw, pap_an) orthographies (bug #19891)\n      Add Crimean Tatar (crh) orthography (bug #19891)\n      Switch Uzbek (uz) orthography to Latin (bug #19851)\n      Update Azerbaijani in Latin (az_az) to present usage (bug #20173)\n      Rename Avaric orthography from 'ava' to 'av' (bug #20174)\n      Rename Bambara orthography from 'bam' to 'bm' (bug #20175)\n      Rename Fulah orthography from 'ful' to 'ff' (bug #20177)\n",
                    "rendered": {
                      "text": "      Add Papiamento (pap_aw, pap_an) orthographies (bug #19891)\n      Add Crimean Tatar (crh) orthography (bug #19891)\n      Switch Uzbek (uz) orthography to Latin (bug #19851)\n      Update Azerbaijani in Latin (az_az) to present usage (bug #20173)\n      Rename Avaric orthography from 'ava' to 'av' (bug #20174)\n      Rename Bambara orthography from 'bam' to 'bm' (bug #20175)\n      Rename Fulah orthography from 'ful' to 'ff' (bug #20177)\n",
                      "markdown": "`      Add Papiamento (pap_aw, pap_an) orthographies (bug #19891)\n      Add Crimean Tatar (crh) orthography (bug #19891)\n      Switch Uzbek (uz) orthography to Latin (bug #19851)\n      Update Azerbaijani in Latin (az_az) to present usage (bug #20173)\n      Rename Avaric orthography from 'ava' to 'av' (bug #20174)\n      Rename Bambara orthography from 'bam' to 'bm' (bug #20175)\n      Rename Fulah orthography from 'ful' to 'ff' (bug #20177)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1939,
                  "startColumn": 14,
                  "endLine": 1939,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      Reduce number of allocations during FcSortWalk().\n\nDan Nicholson (1):\n      Let make expand fc_cachedir/FC_CACHEDIR (bug #18675)\n\nHarald Fernengel (1):\n      Don't use variables named 'bool' (bug #18851)\n",
                    "rendered": {
                      "text": "      Reduce number of allocations during FcSortWalk().\n\nDan Nicholson (1):\n      Let make expand fc_cachedir/FC_CACHEDIR (bug #18675)\n\nHarald Fernengel (1):\n      Don't use variables named 'bool' (bug #18851)\n",
                      "markdown": "`      Reduce number of allocations during FcSortWalk().\n\nDan Nicholson (1):\n      Let make expand fc_cachedir/FC_CACHEDIR (bug #18675)\n\nHarald Fernengel (1):\n      Don't use variables named 'bool' (bug #18851)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1876,
                  "startColumn": 13,
                  "endLine": 1876,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n      [fcformat] Refactor and restructure code for upcoming changes\n      [fcformat] Add support for subexpressions\n",
                    "rendered": {
                      "text": "      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n      [fcformat] Refactor and restructure code for upcoming changes\n      [fcformat] Add support for subexpressions\n",
                      "markdown": "`      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n      [fcformat] Refactor and restructure code for upcoming changes\n      [fcformat] Add support for subexpressions\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1875,
                  "startColumn": 42,
                  "endLine": 1875,
                  "endColumn": 50,
                  "snippet": {
                    "text": "      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n      [fcformat] Refactor and restructure code for upcoming changes\n",
                    "rendered": {
                      "text": "      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n      [fcformat] Refactor and restructure code for upcoming changes\n",
                      "markdown": "`      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n      [fcformat] Refactor and restructure code for upcoming changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1874,
                  "startColumn": 5,
                  "endLine": 1874,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n",
                    "rendered": {
                      "text": "      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n",
                      "markdown": "`      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n      [cache] After writing cache to file, update the internal copy to reflect this\n      Further update Sinhala orthography (#19288)\n      [fcformat] Add support for width modifiers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 13,
                  "endLine": 1871,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      [fcfreetype] Fix typo in GB2312 encoding name string (#19845)\n      Add ICONV_LIBS to fontconfig.pc.in (#19606)\n      [win32] Fix usage of GetFullPathName()\n      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n",
                    "rendered": {
                      "text": "      [fcfreetype] Fix typo in GB2312 encoding name string (#19845)\n      Add ICONV_LIBS to fontconfig.pc.in (#19606)\n      [win32] Fix usage of GetFullPathName()\n      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n",
                      "markdown": "`      [fcfreetype] Fix typo in GB2312 encoding name string (#19845)\n      Add ICONV_LIBS to fontconfig.pc.in (#19606)\n      [win32] Fix usage of GetFullPathName()\n      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1851,
                  "startColumn": 18,
                  "endLine": 1852,
                  "snippet": {
                    "text": "      Don't use identifier named complex\n      Explicitly chmod() directories (bug #18934)\n      Remove special-casing of FC_FILE in FcPatternPrint()\n      [.gitignore] Update\n      Implement FcPatternFormat and use it in cmdline tools (bug #17107)\n      Fix comparison of family names to ignore leading space properly\n      [fcmatch.c] Fix debug formatting\n      [fcmatch] Use larger multipliers to enforce order\n",
                    "rendered": {
                      "text": "      Don't use identifier named complex\n      Explicitly chmod() directories (bug #18934)\n      Remove special-casing of FC_FILE in FcPatternPrint()\n      [.gitignore] Update\n      Implement FcPatternFormat and use it in cmdline tools (bug #17107)\n      Fix comparison of family names to ignore leading space properly\n      [fcmatch.c] Fix debug formatting\n      [fcmatch] Use larger multipliers to enforce order\n",
                      "markdown": "`      Don't use identifier named complex\n      Explicitly chmod() directories (bug #18934)\n      Remove special-casing of FC_FILE in FcPatternPrint()\n      [.gitignore] Update\n      Implement FcPatternFormat and use it in cmdline tools (bug #17107)\n      Fix comparison of family names to ignore leading space properly\n      [fcmatch.c] Fix debug formatting\n      [fcmatch] Use larger multipliers to enforce order\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1840,
                  "startColumn": 18,
                  "endLine": 1841,
                  "snippet": {
                    "text": "      Don't leak FcValues string loaded through fcxml.c (#17661)\n      Don't call FcPatternGetCharSet in FcSortWalk unless we need to (#17361)\n      Fix two more doc typos\n      [.gitignore] Update\n      Cleanup symlinks in \"make uninstall\" (bug #18885)\n      [fccache] Consistently use FcStat() over stat() (bug #18195)\n      Consistently use FcStat() over stat() in all places\n      Use __builtin_popcount() when available (bug #17592)\n",
                    "rendered": {
                      "text": "      Don't leak FcValues string loaded through fcxml.c (#17661)\n      Don't call FcPatternGetCharSet in FcSortWalk unless we need to (#17361)\n      Fix two more doc typos\n      [.gitignore] Update\n      Cleanup symlinks in \"make uninstall\" (bug #18885)\n      [fccache] Consistently use FcStat() over stat() (bug #18195)\n      Consistently use FcStat() over stat() in all places\n      Use __builtin_popcount() when available (bug #17592)\n",
                      "markdown": "`      Don't leak FcValues string loaded through fcxml.c (#17661)\n      Don't call FcPatternGetCharSet in FcSortWalk unless we need to (#17361)\n      Fix two more doc typos\n      [.gitignore] Update\n      Cleanup symlinks in \"make uninstall\" (bug #18885)\n      [fccache] Consistently use FcStat() over stat() (bug #18195)\n      Consistently use FcStat() over stat() in all places\n      Use __builtin_popcount() when available (bug #17592)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1830,
                  "startColumn": 5,
                  "endLine": 1830,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Get rid of $Id$ tags\n      [doc] Fix signature of FcConfigHome()\n      Fix docs re 'orig' argument of FcPatternBuild and family\n      Update sr.orth to actul subset of Cyrillic used by Serbian (#17208)\n      Add Sindhi .orth file. (#17140)\n      Add WenQuanYi fonts to default conf (#17262, from Mandriva)\n      Handle -h and --help according to GNU Coding Standards (#17104)\n",
                    "rendered": {
                      "text": "      Get rid of $Id$ tags\n      [doc] Fix signature of FcConfigHome()\n      Fix docs re 'orig' argument of FcPatternBuild and family\n      Update sr.orth to actul subset of Cyrillic used by Serbian (#17208)\n      Add Sindhi .orth file. (#17140)\n      Add WenQuanYi fonts to default conf (#17262, from Mandriva)\n      Handle -h and --help according to GNU Coding Standards (#17104)\n",
                      "markdown": "`      Get rid of $Id$ tags\n      [doc] Fix signature of FcConfigHome()\n      Fix docs re 'orig' argument of FcPatternBuild and family\n      Update sr.orth to actul subset of Cyrillic used by Serbian (#17208)\n      Add Sindhi .orth file. (#17140)\n      Add WenQuanYi fonts to default conf (#17262, from Mandriva)\n      Handle -h and --help according to GNU Coding Standards (#17104)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1821,
                  "startColumn": 5,
                  "endLine": 1821,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Update Thai default families (#16223)\n      Add ~/.fonts.conf.d to default config (#17100)\n      [fc-match] Fix list of getopt options in --help\n      Update man pages\n      Add fc-query (#13019)\n      Implement fc-list --verbose (#13015)\n      [doc] Add const decorator for FcPatternDuplicate()\n",
                    "rendered": {
                      "text": "      Update Thai default families (#16223)\n      Add ~/.fonts.conf.d to default config (#17100)\n      [fc-match] Fix list of getopt options in --help\n      Update man pages\n      Add fc-query (#13019)\n      Implement fc-list --verbose (#13015)\n      [doc] Add const decorator for FcPatternDuplicate()\n",
                      "markdown": "`      Update Thai default families (#16223)\n      Add ~/.fonts.conf.d to default config (#17100)\n      [fc-match] Fix list of getopt options in --help\n      Update man pages\n      Add fc-query (#13019)\n      Implement fc-list --verbose (#13015)\n      [doc] Add const decorator for FcPatternDuplicate()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1818,
                  "startColumn": 5,
                  "endLine": 1818,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add orth file for Maithili mai.orth (#15821)\n      Replace RCS Id tags with the file name\n      [doc] Fix signatures of FcPatternGetFTFace and FcPatternGetLangSet (#16272)\n      Update Thai default families (#16223)\n      Add ~/.fonts.conf.d to default config (#17100)\n      [fc-match] Fix list of getopt options in --help\n      Update man pages\n",
                    "rendered": {
                      "text": "      Add orth file for Maithili mai.orth (#15821)\n      Replace RCS Id tags with the file name\n      [doc] Fix signatures of FcPatternGetFTFace and FcPatternGetLangSet (#16272)\n      Update Thai default families (#16223)\n      Add ~/.fonts.conf.d to default config (#17100)\n      [fc-match] Fix list of getopt options in --help\n      Update man pages\n",
                      "markdown": "`      Add orth file for Maithili mai.orth (#15821)\n      Replace RCS Id tags with the file name\n      [doc] Fix signatures of FcPatternGetFTFace and FcPatternGetLangSet (#16272)\n      Update Thai default families (#16223)\n      Add ~/.fonts.conf.d to default config (#17100)\n      [fc-match] Fix list of getopt options in --help\n      Update man pages\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1801,
                  "startColumn": 5,
                  "endLine": 1801,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      [doc] Add ~/fonts.conf.d to user docs\n      Hardcode /etc/fonts instead of @CONFDIR@ in docs (#22911)\n      Bump libtool versions that 2.7.0 (I forgot to do back then)\n      Update .gitignore\n\nKarl Tomlinson (1):\n      Don't change the order of names unnecessarily (#20128)\n",
                    "rendered": {
                      "text": "      [doc] Add ~/fonts.conf.d to user docs\n      Hardcode /etc/fonts instead of @CONFDIR@ in docs (#22911)\n      Bump libtool versions that 2.7.0 (I forgot to do back then)\n      Update .gitignore\n\nKarl Tomlinson (1):\n      Don't change the order of names unnecessarily (#20128)\n",
                      "markdown": "`      [doc] Add ~/fonts.conf.d to user docs\n      Hardcode /etc/fonts instead of @CONFDIR@ in docs (#22911)\n      Bump libtool versions that 2.7.0 (I forgot to do back then)\n      Update .gitignore\n\nKarl Tomlinson (1):\n      Don't change the order of names unnecessarily (#20128)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1753,
                  "startColumn": 15,
                  "endLine": 1753,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      [fc-glyphname] Rename internal arrays to prefix with _fc_\n      Clean up Makefile's a bit\n      [fc-glyphname] Remove Adobe glyphlist\n      [fc-case] Update CaseFolding.txt to Unicode 5.2.0\n      [fc-arch] Beautify the arch template\n      [fc-arch] Rename architecture names to better reflect what they are\n      Bump libtool revision in preparation for release\n",
                    "rendered": {
                      "text": "      [fc-glyphname] Rename internal arrays to prefix with _fc_\n      Clean up Makefile's a bit\n      [fc-glyphname] Remove Adobe glyphlist\n      [fc-case] Update CaseFolding.txt to Unicode 5.2.0\n      [fc-arch] Beautify the arch template\n      [fc-arch] Rename architecture names to better reflect what they are\n      Bump libtool revision in preparation for release\n",
                      "markdown": "`      [fc-glyphname] Rename internal arrays to prefix with _fc_\n      Clean up Makefile's a bit\n      [fc-glyphname] Remove Adobe glyphlist\n      [fc-case] Update CaseFolding.txt to Unicode 5.2.0\n      [fc-arch] Beautify the arch template\n      [fc-arch] Rename architecture names to better reflect what they are\n      Bump libtool revision in preparation for release\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1686,
                  "startColumn": 18,
                  "endLine": 1687,
                  "snippet": {
                    "text": "      Always define FcStat as a function\n      Fix warning\n      Bug 35587 - Add padding to make valgrind and glibc not hate each other\n      [.gitignore] Update\n      Bug 36577 - Updating cache with no-bitmaps disables bitmap fonts...\n      Bug 26718 - \"fc-match sans file\" doesn't work\n      Switch fc-match to use FcPatternFormat()\n      Switch fc-cat to use FcPatternFormat()\n",
                    "rendered": {
                      "text": "      Always define FcStat as a function\n      Fix warning\n      Bug 35587 - Add padding to make valgrind and glibc not hate each other\n      [.gitignore] Update\n      Bug 36577 - Updating cache with no-bitmaps disables bitmap fonts...\n      Bug 26718 - \"fc-match sans file\" doesn't work\n      Switch fc-match to use FcPatternFormat()\n      Switch fc-cat to use FcPatternFormat()\n",
                      "markdown": "`      Always define FcStat as a function\n      Fix warning\n      Bug 35587 - Add padding to make valgrind and glibc not hate each other\n      [.gitignore] Update\n      Bug 36577 - Updating cache with no-bitmaps disables bitmap fonts...\n      Bug 26718 - \"fc-match sans file\" doesn't work\n      Switch fc-match to use FcPatternFormat()\n      Switch fc-cat to use FcPatternFormat()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1677,
                  "startColumn": 5,
                  "endLine": 1677,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Doc nit\n      Fix assertion failure on le32d4\n      Remove AM_MAINTAINER_MODE\n      Update CaseFolding.txt to Unicode 6.0\n      Remove --enable-maintainer-mode from autogen.sh\n      Bug 20113 - Uighur (ug) orthography incomplete\n      Bug 30566 - fcformat.c:interpret_enumerate() passes uninitialized idx to FcPatternGetLangSet()\n",
                    "rendered": {
                      "text": "      Doc nit\n      Fix assertion failure on le32d4\n      Remove AM_MAINTAINER_MODE\n      Update CaseFolding.txt to Unicode 6.0\n      Remove --enable-maintainer-mode from autogen.sh\n      Bug 20113 - Uighur (ug) orthography incomplete\n      Bug 30566 - fcformat.c:interpret_enumerate() passes uninitialized idx to FcPatternGetLangSet()\n",
                      "markdown": "`      Doc nit\n      Fix assertion failure on le32d4\n      Remove AM_MAINTAINER_MODE\n      Update CaseFolding.txt to Unicode 6.0\n      Remove --enable-maintainer-mode from autogen.sh\n      Bug 20113 - Uighur (ug) orthography incomplete\n      Bug 30566 - fcformat.c:interpret_enumerate() passes uninitialized idx to FcPatternGetLangSet()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1644,
                  "startColumn": 5,
                  "endLine": 1644,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n      More doc typo fixes\n",
                    "rendered": {
                      "text": "      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n      More doc typo fixes\n",
                      "markdown": "`      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n      More doc typo fixes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1643,
                  "startColumn": 33,
                  "endLine": 1643,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Behdad Esfahbod (54):\n      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n",
                    "rendered": {
                      "text": "Behdad Esfahbod (54):\n      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n",
                      "markdown": "`Behdad Esfahbod (54):\n      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1631,
                  "startColumn": 5,
                  "endLine": 1631,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Bug 19128 - Handling whitespace in aliases\n      Fix distcheck error\n      Update the version info\n      Update to detect the uncommited changes properly\n      Fix a build issue\n      Fix a build fail on some environment\n      Fix a build fail on some environment.\n",
                    "rendered": {
                      "text": "      Bug 19128 - Handling whitespace in aliases\n      Fix distcheck error\n      Update the version info\n      Update to detect the uncommited changes properly\n      Fix a build issue\n      Fix a build fail on some environment\n      Fix a build fail on some environment.\n",
                      "markdown": "`      Bug 19128 - Handling whitespace in aliases\n      Fix distcheck error\n      Update the version info\n      Update to detect the uncommited changes properly\n      Fix a build issue\n      Fix a build fail on some environment\n      Fix a build fail on some environment.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1630,
                  "startColumn": 5,
                  "endLine": 1630,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Check null value for given object to avoid possibly segfaulting\n      Bug 19128 - Handling whitespace in aliases\n      Fix distcheck error\n      Update the version info\n      Update to detect the uncommited changes properly\n      Fix a build issue\n      Fix a build fail on some environment\n",
                    "rendered": {
                      "text": "      Check null value for given object to avoid possibly segfaulting\n      Bug 19128 - Handling whitespace in aliases\n      Fix distcheck error\n      Update the version info\n      Update to detect the uncommited changes properly\n      Fix a build issue\n      Fix a build fail on some environment\n",
                      "markdown": "`      Check null value for given object to avoid possibly segfaulting\n      Bug 19128 - Handling whitespace in aliases\n      Fix distcheck error\n      Update the version info\n      Update to detect the uncommited changes properly\n      Fix a build issue\n      Fix a build fail on some environment\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1622,
                  "startColumn": 12,
                  "endLine": 1622,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      Get rid of the unexpected family name\n      Bug 44826 - <alias> must contain only a single <family>\n      Bug 46169 - Pointer error in FcConfigGlobMatch\n      Do not update stream->pos when seeking is failed.\n      Bug 27385 - lcdfilter settings for freetype-2.3.12 not available in fontconfig-2.8.0\n      Add brx.orth and sat.orth\n      Bug 41694 - FcCache functions have random-number-generator side effects\n",
                    "rendered": {
                      "text": "      Get rid of the unexpected family name\n      Bug 44826 - <alias> must contain only a single <family>\n      Bug 46169 - Pointer error in FcConfigGlobMatch\n      Do not update stream->pos when seeking is failed.\n      Bug 27385 - lcdfilter settings for freetype-2.3.12 not available in fontconfig-2.8.0\n      Add brx.orth and sat.orth\n      Bug 41694 - FcCache functions have random-number-generator side effects\n",
                      "markdown": "`      Get rid of the unexpected family name\n      Bug 44826 - <alias> must contain only a single <family>\n      Bug 46169 - Pointer error in FcConfigGlobMatch\n      Do not update stream->pos when seeking is failed.\n      Bug 27385 - lcdfilter settings for freetype-2.3.12 not available in fontconfig-2.8.0\n      Add brx.orth and sat.orth\n      Bug 41694 - FcCache functions have random-number-generator side effects\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 46,
                  "endLine": 1591,
                  "endColumn": 50,
                  "snippet": {
                    "text": "      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n",
                    "rendered": {
                      "text": "      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n",
                      "markdown": "`      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1584,
                  "startColumn": 36,
                  "endLine": 1584,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      fcdefault: fallback if the environment variables are empty\n      Add the default language to the pattern prior to do build the substitution\n      fcdefault: no need to set FC_LANG in FcDefaultSubstitute() anymore\n      fcdefault: Add the lang object at FcConfigSubstituteWithPat() only when kind is FcMatchPattern\n      Bug 50525 - superfluous whitespace in the style\n      Bump libtool revision\n      doc: Fix distcheck error again...\n",
                    "rendered": {
                      "text": "      fcdefault: fallback if the environment variables are empty\n      Add the default language to the pattern prior to do build the substitution\n      fcdefault: no need to set FC_LANG in FcDefaultSubstitute() anymore\n      fcdefault: Add the lang object at FcConfigSubstituteWithPat() only when kind is FcMatchPattern\n      Bug 50525 - superfluous whitespace in the style\n      Bump libtool revision\n      doc: Fix distcheck error again...\n",
                      "markdown": "`      fcdefault: fallback if the environment variables are empty\n      Add the default language to the pattern prior to do build the substitution\n      fcdefault: no need to set FC_LANG in FcDefaultSubstitute() anymore\n      fcdefault: Add the lang object at FcConfigSubstituteWithPat() only when kind is FcMatchPattern\n      Bug 50525 - superfluous whitespace in the style\n      Bump libtool revision\n      doc: Fix distcheck error again...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1563,
                  "startColumn": 90,
                  "endLine": 1563,
                  "endColumn": 94,
                  "snippet": {
                    "text": "      Fix a build issue again when no regex functions available\n      C++11 requires a space between literal and identifier\n      Bug 47721 - Add ChromeOS fonts to 30-metric-aliases.conf\n      Create CACHEDIR.TAG when fc-cache is run or only when the cache directory is created at the runtime.\n      Add --enable-iconv option to configure\n      Bug 27765 - FcMatch() returns style in wrong language\n      Disable iconv support anyway...\n",
                    "rendered": {
                      "text": "      Fix a build issue again when no regex functions available\n      C++11 requires a space between literal and identifier\n      Bug 47721 - Add ChromeOS fonts to 30-metric-aliases.conf\n      Create CACHEDIR.TAG when fc-cache is run or only when the cache directory is created at the runtime.\n      Add --enable-iconv option to configure\n      Bug 27765 - FcMatch() returns style in wrong language\n      Disable iconv support anyway...\n",
                      "markdown": "`      Fix a build issue again when no regex functions available\n      C++11 requires a space between literal and identifier\n      Bug 47721 - Add ChromeOS fonts to 30-metric-aliases.conf\n      Create CACHEDIR.TAG when fc-cache is run or only when the cache directory is created at the runtime.\n      Add --enable-iconv option to configure\n      Bug 27765 - FcMatch() returns style in wrong language\n      Disable iconv support anyway...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1537,
                  "startColumn": 32,
                  "endLine": 1537,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      Get rid of the prerequisites from the sufix rules\n      Bug 39914 - Please tag the cache directory with CACHEDIR.TAG\n      fc-cache: improvement of the fix for Bug#39914.\n      fcmatch: Set FcResultMatch at the end if the return value is valid.\n      Bug 47703 - SimSun default family\n      Bug 17722 - Don't overwrite user's configurations in default config\n      Fix a memory leak in FcDirScanConfig()\n",
                    "rendered": {
                      "text": "      Get rid of the prerequisites from the sufix rules\n      Bug 39914 - Please tag the cache directory with CACHEDIR.TAG\n      fc-cache: improvement of the fix for Bug#39914.\n      fcmatch: Set FcResultMatch at the end if the return value is valid.\n      Bug 47703 - SimSun default family\n      Bug 17722 - Don't overwrite user's configurations in default config\n      Fix a memory leak in FcDirScanConfig()\n",
                      "markdown": "`      Get rid of the prerequisites from the sufix rules\n      Bug 39914 - Please tag the cache directory with CACHEDIR.TAG\n      fc-cache: improvement of the fix for Bug#39914.\n      fcmatch: Set FcResultMatch at the end if the return value is valid.\n      Bug 47703 - SimSun default family\n      Bug 17722 - Don't overwrite user's configurations in default config\n      Fix a memory leak in FcDirScanConfig()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1530,
                  "startColumn": 11,
                  "endLine": 1530,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\nAkira TAGOH (60):\n      [doc] Update the path for cache files and the version.\n      [doc] Update for cachedir.\n      Revert \"Fix a build fail on some environment.\"\n      Revert \"Fix a build fail on some environment\"\n      Fix a build issue due to the use of non-portable variables\n",
                    "rendered": {
                      "text": "\nAkira TAGOH (60):\n      [doc] Update the path for cache files and the version.\n      [doc] Update for cachedir.\n      Revert \"Fix a build fail on some environment.\"\n      Revert \"Fix a build fail on some environment\"\n      Fix a build issue due to the use of non-portable variables\n",
                      "markdown": "`\nAkira TAGOH (60):\n      [doc] Update the path for cache files and the version.\n      [doc] Update for cachedir.\n      Revert \"Fix a build fail on some environment.\"\n      Revert \"Fix a build fail on some environment\"\n      Fix a build issue due to the use of non-portable variables\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1529,
                  "startColumn": 11,
                  "endLine": 1529,
                  "endColumn": 19,
                  "snippet": {
                    "text": "2.9.91 (2.10 RC1)\n\nAkira TAGOH (60):\n      [doc] Update the path for cache files and the version.\n      [doc] Update for cachedir.\n      Revert \"Fix a build fail on some environment.\"\n      Revert \"Fix a build fail on some environment\"\n",
                    "rendered": {
                      "text": "2.9.91 (2.10 RC1)\n\nAkira TAGOH (60):\n      [doc] Update the path for cache files and the version.\n      [doc] Update for cachedir.\n      Revert \"Fix a build fail on some environment.\"\n      Revert \"Fix a build fail on some environment\"\n",
                      "markdown": "`2.9.91 (2.10 RC1)\n\nAkira TAGOH (60):\n      [doc] Update the path for cache files and the version.\n      [doc] Update for cachedir.\n      Revert \"Fix a build fail on some environment.\"\n      Revert \"Fix a build fail on some environment\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1520,
                  "startColumn": 5,
                  "endLine": 1520,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Rename configure.in to configure.ac\n      Bug 18726 - RFE: help write locale-specific tests\n      Bump libtool revision\n      Update INSTALL\n\nMarius Tolzmann (2):\n      Fix newline in warning about deprecated config includes\n",
                    "rendered": {
                      "text": "      Rename configure.in to configure.ac\n      Bug 18726 - RFE: help write locale-specific tests\n      Bump libtool revision\n      Update INSTALL\n\nMarius Tolzmann (2):\n      Fix newline in warning about deprecated config includes\n",
                      "markdown": "`      Rename configure.in to configure.ac\n      Bug 18726 - RFE: help write locale-specific tests\n      Bump libtool revision\n      Update INSTALL\n\nMarius Tolzmann (2):\n      Fix newline in warning about deprecated config includes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1507,
                  "startColumn": 5,
                  "endLine": 1507,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Update CaseFolding.txt to Unicode 6.1\n      Fix a build fail with gcc 2.95, not supporting the flexible array members.\n      Bump libtool revision\n      Update INSTALL\n\n2.9.92 (2.10 RC2)\n\n",
                    "rendered": {
                      "text": "      Update CaseFolding.txt to Unicode 6.1\n      Fix a build fail with gcc 2.95, not supporting the flexible array members.\n      Bump libtool revision\n      Update INSTALL\n\n2.9.92 (2.10 RC2)\n\n",
                      "markdown": "`      Update CaseFolding.txt to Unicode 6.1\n      Fix a build fail with gcc 2.95, not supporting the flexible array members.\n      Bump libtool revision\n      Update INSTALL\n\n2.9.92 (2.10 RC2)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1504,
                  "startColumn": 5,
                  "endLine": 1504,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nAkira TAGOH (5):\n      Bug 34266 - configs silently ignored if libxml2 doesn't support SAX1 interface\n      Update CaseFolding.txt to Unicode 6.1\n      Fix a build fail with gcc 2.95, not supporting the flexible array members.\n      Bump libtool revision\n      Update INSTALL\n",
                    "rendered": {
                      "text": "\nAkira TAGOH (5):\n      Bug 34266 - configs silently ignored if libxml2 doesn't support SAX1 interface\n      Update CaseFolding.txt to Unicode 6.1\n      Fix a build fail with gcc 2.95, not supporting the flexible array members.\n      Bump libtool revision\n      Update INSTALL\n",
                      "markdown": "`\nAkira TAGOH (5):\n      Bug 34266 - configs silently ignored if libxml2 doesn't support SAX1 interface\n      Update CaseFolding.txt to Unicode 6.1\n      Fix a build fail with gcc 2.95, not supporting the flexible array members.\n      Bump libtool revision\n      Update INSTALL\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1485,
                  "startColumn": 5,
                  "endLine": 1485,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Use automake variable instead of cleaning files in clean-local\n      Bug 56531 - autogen.sh fails due to missing 'm4' directory\n      Bug 57114 - regression on FcFontMatch with namelang\n      Update CaseFolding.txt to Unicode 6.2\n      Bug 57286 - Remove UnBatang and Baekmuk Batang from monospace in 65-nonlatin.conf\n\nBehdad Esfahbod (1):\n",
                    "rendered": {
                      "text": "      Use automake variable instead of cleaning files in clean-local\n      Bug 56531 - autogen.sh fails due to missing 'm4' directory\n      Bug 57114 - regression on FcFontMatch with namelang\n      Update CaseFolding.txt to Unicode 6.2\n      Bug 57286 - Remove UnBatang and Baekmuk Batang from monospace in 65-nonlatin.conf\n\nBehdad Esfahbod (1):\n",
                      "markdown": "`      Use automake variable instead of cleaning files in clean-local\n      Bug 56531 - autogen.sh fails due to missing 'm4' directory\n      Bug 57114 - regression on FcFontMatch with namelang\n      Update CaseFolding.txt to Unicode 6.2\n      Bug 57286 - Remove UnBatang and Baekmuk Batang from monospace in 65-nonlatin.conf\n\nBehdad Esfahbod (1):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1391,
                  "startColumn": 5,
                  "endLine": 1391,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix a build fail on mingw\n      Fix a typo in the manpages template\n      Bug 29312 - RFE: feature to indicate which characters are missing to satisfy the language support\n      Update the date in README properly\n\nBehdad Esfahbod (73):\n      Fix typo\n",
                    "rendered": {
                      "text": "      Fix a build fail on mingw\n      Fix a typo in the manpages template\n      Bug 29312 - RFE: feature to indicate which characters are missing to satisfy the language support\n      Update the date in README properly\n\nBehdad Esfahbod (73):\n      Fix typo\n",
                      "markdown": "`      Fix a build fail on mingw\n      Fix a typo in the manpages template\n      Bug 29312 - RFE: feature to indicate which characters are missing to satisfy the language support\n      Update the date in README properly\n\nBehdad Esfahbod (73):\n      Fix typo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1329,
                  "startColumn": 5,
                  "endLine": 1329,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Use AM_MISSING_PROG instead of hardcoding missing\n      Bug 50733 - Add font-file hash?\n      Bug 60312 - DIST_SUBDIRS should never appear in a conditional\n      Update _FcMatchers definition logic\n      Bump the cache version to 4\n      Add Culmus foundry to the vendor list\n      Bug 60748 - broken conf.d/10-autohint.conf and conf.d/10-unhinted.conf\n",
                    "rendered": {
                      "text": "      Use AM_MISSING_PROG instead of hardcoding missing\n      Bug 50733 - Add font-file hash?\n      Bug 60312 - DIST_SUBDIRS should never appear in a conditional\n      Update _FcMatchers definition logic\n      Bump the cache version to 4\n      Add Culmus foundry to the vendor list\n      Bug 60748 - broken conf.d/10-autohint.conf and conf.d/10-unhinted.conf\n",
                      "markdown": "`      Use AM_MISSING_PROG instead of hardcoding missing\n      Bug 50733 - Add font-file hash?\n      Bug 60312 - DIST_SUBDIRS should never appear in a conditional\n      Update _FcMatchers definition logic\n      Bump the cache version to 4\n      Add Culmus foundry to the vendor list\n      Bug 60748 - broken conf.d/10-autohint.conf and conf.d/10-unhinted.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1245,
                  "startColumn": 5,
                  "endLine": 1245,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      exit with the error code when FcNameParse() failed\n      Add missing doc for FcStrListFirst and fix a typo\n      Bump libtool revision\n      Update CaseFolding.txt to Unicode 6.3\n\nJan Alexander Steffens (heftig) (1):\n      Further changes to 30-metric-aliases.conf\n",
                    "rendered": {
                      "text": "      exit with the error code when FcNameParse() failed\n      Add missing doc for FcStrListFirst and fix a typo\n      Bump libtool revision\n      Update CaseFolding.txt to Unicode 6.3\n\nJan Alexander Steffens (heftig) (1):\n      Further changes to 30-metric-aliases.conf\n",
                      "markdown": "`      exit with the error code when FcNameParse() failed\n      Add missing doc for FcStrListFirst and fix a typo\n      Bump libtool revision\n      Update CaseFolding.txt to Unicode 6.3\n\nJan Alexander Steffens (heftig) (1):\n      Further changes to 30-metric-aliases.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 5,
                  "endLine": 1205,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add missing #include <sys/statvfs.h> in fcstat.c\n      Fix incompatible API on AIX with random_r and initstate_r\n      Fallback to lstat() in case the filesystem doesn't support d_type in struct dirent\n      Update doc to include the version info of `since when'\n      Bug 73291 - poppler does not show fl ligature\n      Add README describes the criteria to add/modify the orthography files\n      Fix autoconf warning, warning: AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS\n",
                    "rendered": {
                      "text": "      Add missing #include <sys/statvfs.h> in fcstat.c\n      Fix incompatible API on AIX with random_r and initstate_r\n      Fallback to lstat() in case the filesystem doesn't support d_type in struct dirent\n      Update doc to include the version info of `since when'\n      Bug 73291 - poppler does not show fl ligature\n      Add README describes the criteria to add/modify the orthography files\n      Fix autoconf warning, warning: AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS\n",
                      "markdown": "`      Add missing #include <sys/statvfs.h> in fcstat.c\n      Fix incompatible API on AIX with random_r and initstate_r\n      Fallback to lstat() in case the filesystem doesn't support d_type in struct dirent\n      Update doc to include the version info of `since when'\n      Bug 73291 - poppler does not show fl ligature\n      Add README describes the criteria to add/modify the orthography files\n      Fix autoconf warning, warning: AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1199,
                  "startColumn": 5,
                  "endLine": 1199,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Update zh_hk.orth\n      clean up the unused files\n      Add missing license headers\n      Update the use of autotools' macro\n      Fix a crash issue when empty strings are set to the BDF properties\n      Add a doc for FcDirCacheRescan\n      Add missing #include <sys/statvfs.h> in fcstat.c\n",
                    "rendered": {
                      "text": "      Update zh_hk.orth\n      clean up the unused files\n      Add missing license headers\n      Update the use of autotools' macro\n      Fix a crash issue when empty strings are set to the BDF properties\n      Add a doc for FcDirCacheRescan\n      Add missing #include <sys/statvfs.h> in fcstat.c\n",
                      "markdown": "`      Update zh_hk.orth\n      clean up the unused files\n      Add missing license headers\n      Update the use of autotools' macro\n      Fix a crash issue when empty strings are set to the BDF properties\n      Add a doc for FcDirCacheRescan\n      Add missing #include <sys/statvfs.h> in fcstat.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1196,
                  "startColumn": 5,
                  "endLine": 1196,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix a build issue on platforms where doesn't support readlink()\n      Improve the performance issue on rescanning directories\n      Bug 73686 - confdir is not set correctly in fontconfig.pc\n      Update zh_hk.orth\n      clean up the unused files\n      Add missing license headers\n      Update the use of autotools' macro\n",
                    "rendered": {
                      "text": "      Fix a build issue on platforms where doesn't support readlink()\n      Improve the performance issue on rescanning directories\n      Bug 73686 - confdir is not set correctly in fontconfig.pc\n      Update zh_hk.orth\n      clean up the unused files\n      Add missing license headers\n      Update the use of autotools' macro\n",
                      "markdown": "`      Fix a build issue on platforms where doesn't support readlink()\n      Improve the performance issue on rescanning directories\n      Bug 73686 - confdir is not set correctly in fontconfig.pc\n      Update zh_hk.orth\n      clean up the unused files\n      Add missing license headers\n      Update the use of autotools' macro\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1180,
                  "startColumn": 5,
                  "endLine": 1180,
                  "endColumn": 13,
                  "snippet": {
                    "text": "Akira TAGOH (31):\n      do not build test-migration for Win32\n      Fix build issue on Debian/kFreeBSD 7.0\n      Update ax_pthread.m4 to the latest version\n      Fix the dynamic loading issue on NetBSD\n      Use stat() if there are no d_type in struct dirent\n      Fix a build issue on Solaris 10\n",
                    "rendered": {
                      "text": "Akira TAGOH (31):\n      do not build test-migration for Win32\n      Fix build issue on Debian/kFreeBSD 7.0\n      Update ax_pthread.m4 to the latest version\n      Fix the dynamic loading issue on NetBSD\n      Use stat() if there are no d_type in struct dirent\n      Fix a build issue on Solaris 10\n",
                      "markdown": "`Akira TAGOH (31):\n      do not build test-migration for Win32\n      Fix build issue on Debian/kFreeBSD 7.0\n      Update ax_pthread.m4 to the latest version\n      Fix the dynamic loading issue on NetBSD\n      Use stat() if there are no d_type in struct dirent\n      Fix a build issue on Solaris 10\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1148,
                  "startColumn": 5,
                  "endLine": 1148,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Comments\n      Remove HASH from matching priorities\n      Fixup previous commit\n      Update mingw32 MemoryBarrier from HarfBuzz\n      More mingw32 MemoryBarrier() fixup\n      Symlinks fix for DESTDIR\n      Revert \"Symlinks fix for DESTDIR\"\n",
                    "rendered": {
                      "text": "      Comments\n      Remove HASH from matching priorities\n      Fixup previous commit\n      Update mingw32 MemoryBarrier from HarfBuzz\n      More mingw32 MemoryBarrier() fixup\n      Symlinks fix for DESTDIR\n      Revert \"Symlinks fix for DESTDIR\"\n",
                      "markdown": "`      Comments\n      Remove HASH from matching priorities\n      Fixup previous commit\n      Update mingw32 MemoryBarrier from HarfBuzz\n      More mingw32 MemoryBarrier() fixup\n      Symlinks fix for DESTDIR\n      Revert \"Symlinks fix for DESTDIR\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1141,
                  "startColumn": 5,
                  "endLine": 1141,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Deprecate FC_HASH and don't compute it\n      Remove unused FcHash code now that FC_HASH is deprecated\n      Update list of blanks to Unicode 6.3.0\n      Update blanks to Unicode 7.0\n      Change charset parse/unparse format to be human readable\n      Minor\n      Fix charset unparse after recent changes\n",
                    "rendered": {
                      "text": "      Deprecate FC_HASH and don't compute it\n      Remove unused FcHash code now that FC_HASH is deprecated\n      Update list of blanks to Unicode 6.3.0\n      Update blanks to Unicode 7.0\n      Change charset parse/unparse format to be human readable\n      Minor\n      Fix charset unparse after recent changes\n",
                      "markdown": "`      Deprecate FC_HASH and don't compute it\n      Remove unused FcHash code now that FC_HASH is deprecated\n      Update list of blanks to Unicode 6.3.0\n      Update blanks to Unicode 7.0\n      Change charset parse/unparse format to be human readable\n      Minor\n      Fix charset unparse after recent changes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1140,
                  "startColumn": 5,
                  "endLine": 1140,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      [ko.orth] Remove U+3164 HANGUL FILLER\n      Deprecate FC_HASH and don't compute it\n      Remove unused FcHash code now that FC_HASH is deprecated\n      Update list of blanks to Unicode 6.3.0\n      Update blanks to Unicode 7.0\n      Change charset parse/unparse format to be human readable\n      Minor\n",
                    "rendered": {
                      "text": "      [ko.orth] Remove U+3164 HANGUL FILLER\n      Deprecate FC_HASH and don't compute it\n      Remove unused FcHash code now that FC_HASH is deprecated\n      Update list of blanks to Unicode 6.3.0\n      Update blanks to Unicode 7.0\n      Change charset parse/unparse format to be human readable\n      Minor\n",
                      "markdown": "`      [ko.orth] Remove U+3164 HANGUL FILLER\n      Deprecate FC_HASH and don't compute it\n      Remove unused FcHash code now that FC_HASH is deprecated\n      Update list of blanks to Unicode 6.3.0\n      Update blanks to Unicode 7.0\n      Change charset parse/unparse format to be human readable\n      Minor\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1124,
                  "startColumn": 5,
                  "endLine": 1124,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Note FcConfigSetCurrent() increases the refcount in document\n      Add FcRangeGetDouble()\n      Revert \"Bug 73291 - poppler does not show fl ligature\"\n      Update aliases for new URW fonts\n      Returns False if no fonts found\n      fc-cache: make a fail if no fonts processed on a given path\n      fc-cache: Add an option to raise an error if no fonts found\n",
                    "rendered": {
                      "text": "      Note FcConfigSetCurrent() increases the refcount in document\n      Add FcRangeGetDouble()\n      Revert \"Bug 73291 - poppler does not show fl ligature\"\n      Update aliases for new URW fonts\n      Returns False if no fonts found\n      fc-cache: make a fail if no fonts processed on a given path\n      fc-cache: Add an option to raise an error if no fonts found\n",
                      "markdown": "`      Note FcConfigSetCurrent() increases the refcount in document\n      Add FcRangeGetDouble()\n      Revert \"Bug 73291 - poppler does not show fl ligature\"\n      Update aliases for new URW fonts\n      Returns False if no fonts found\n      fc-cache: make a fail if no fonts processed on a given path\n      fc-cache: Add an option to raise an error if no fonts found\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1112,
                  "startColumn": 5,
                  "endLine": 1112,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Workaround another race condition issue\n      Read the config files and fonts on the sysroot when --sysroot is given to fc-cache\n      Fix a segfault\n      Update CaseFolding.txt to Unicode 7.0\n      Don't read/write from/to the XDG dirs if the home directory is disabled\n      Rework for 5004e8e01f5de30ad01904e57ea0eda006ab3a0c\n      Fix a crash when no sysroot is given and failed to load the default fonts.conf\n",
                    "rendered": {
                      "text": "      Workaround another race condition issue\n      Read the config files and fonts on the sysroot when --sysroot is given to fc-cache\n      Fix a segfault\n      Update CaseFolding.txt to Unicode 7.0\n      Don't read/write from/to the XDG dirs if the home directory is disabled\n      Rework for 5004e8e01f5de30ad01904e57ea0eda006ab3a0c\n      Fix a crash when no sysroot is given and failed to load the default fonts.conf\n",
                      "markdown": "`      Workaround another race condition issue\n      Read the config files and fonts on the sysroot when --sysroot is given to fc-cache\n      Fix a segfault\n      Update CaseFolding.txt to Unicode 7.0\n      Don't read/write from/to the XDG dirs if the home directory is disabled\n      Rework for 5004e8e01f5de30ad01904e57ea0eda006ab3a0c\n      Fix a crash when no sysroot is given and failed to load the default fonts.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 5,
                  "endLine": 1073,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Copy the real size of struct dirent\n      Rework again to copy the struct dirent\n      Hardcode the blanks in the library\n      Update the script to recognize the escaped space\n      Fix a build issue when $(srcdir) != $(builddir)\n      Don't add FC_LANG when it has \"und\"\n      Fix the array allocation\n",
                    "rendered": {
                      "text": "      Copy the real size of struct dirent\n      Rework again to copy the struct dirent\n      Hardcode the blanks in the library\n      Update the script to recognize the escaped space\n      Fix a build issue when $(srcdir) != $(builddir)\n      Don't add FC_LANG when it has \"und\"\n      Fix the array allocation\n",
                      "markdown": "`      Copy the real size of struct dirent\n      Rework again to copy the struct dirent\n      Hardcode the blanks in the library\n      Update the script to recognize the escaped space\n      Fix a build issue when $(srcdir) != $(builddir)\n      Don't add FC_LANG when it has \"und\"\n      Fix the array allocation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1012,
                  "startColumn": 5,
                  "endLine": 1012,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Avoid an error message on testing when no fonts.conf installed\n      Add hintstyle templates and make hintslight default\n      Revert \"Workaround another race condition issue\"\n      Update libtool revision\n\nBehdad Esfahbod (6):\n      Revert changes made to FcConfigAppFontAddDir() recently\n",
                    "rendered": {
                      "text": "      Avoid an error message on testing when no fonts.conf installed\n      Add hintstyle templates and make hintslight default\n      Revert \"Workaround another race condition issue\"\n      Update libtool revision\n\nBehdad Esfahbod (6):\n      Revert changes made to FcConfigAppFontAddDir() recently\n",
                      "markdown": "`      Avoid an error message on testing when no fonts.conf installed\n      Add hintstyle templates and make hintslight default\n      Revert \"Workaround another race condition issue\"\n      Update libtool revision\n\nBehdad Esfahbod (6):\n      Revert changes made to FcConfigAppFontAddDir() recently\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 998,
                  "startColumn": 5,
                  "endLine": 998,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Don't return FcFalse even when no fonts dirs is configured\n      Add a warning for blank in fonts.conf\n      Fix a memory leak in FcFreeTypeQueryFace\n      Update CaseFolding.txt to Unicode 8.0\n      Bug 90867 - Memory Leak during error case in fccharset\n      Fix the broken cache more.\n      Fail on make runtime as needed instead of configure if no python installed\n",
                    "rendered": {
                      "text": "      Don't return FcFalse even when no fonts dirs is configured\n      Add a warning for blank in fonts.conf\n      Fix a memory leak in FcFreeTypeQueryFace\n      Update CaseFolding.txt to Unicode 8.0\n      Bug 90867 - Memory Leak during error case in fccharset\n      Fix the broken cache more.\n      Fail on make runtime as needed instead of configure if no python installed\n",
                      "markdown": "`      Don't return FcFalse even when no fonts dirs is configured\n      Add a warning for blank in fonts.conf\n      Fix a memory leak in FcFreeTypeQueryFace\n      Update CaseFolding.txt to Unicode 8.0\n      Bug 90867 - Memory Leak during error case in fccharset\n      Fix the broken cache more.\n      Fail on make runtime as needed instead of configure if no python installed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 994,
                  "startColumn": 21,
                  "endLine": 994,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      Add one more debugging option to see transformation on font-matching\n      Fix a crash when no objects are available after filtering\n      No need to be public\n      mark as private at this moment\n      Don't return FcFalse even when no fonts dirs is configured\n      Add a warning for blank in fonts.conf\n      Fix a memory leak in FcFreeTypeQueryFace\n",
                    "rendered": {
                      "text": "      Add one more debugging option to see transformation on font-matching\n      Fix a crash when no objects are available after filtering\n      No need to be public\n      mark as private at this moment\n      Don't return FcFalse even when no fonts dirs is configured\n      Add a warning for blank in fonts.conf\n      Fix a memory leak in FcFreeTypeQueryFace\n",
                      "markdown": "`      Add one more debugging option to see transformation on font-matching\n      Fix a crash when no objects are available after filtering\n      No need to be public\n      mark as private at this moment\n      Don't return FcFalse even when no fonts dirs is configured\n      Add a warning for blank in fonts.conf\n      Fix a memory leak in FcFreeTypeQueryFace\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 974,
                  "startColumn": 5,
                  "endLine": 974,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nAkira TAGOH (8):\n      Modernize fc-blanks.py\n      Update URL\n      Bug 95477 - FcAtomicLock fails when SELinux denies link() syscall with EACCES\n      45-latin.conf: Add some Windows fonts to categorize them properly\n      Correct one for the previous change\n",
                    "rendered": {
                      "text": "\nAkira TAGOH (8):\n      Modernize fc-blanks.py\n      Update URL\n      Bug 95477 - FcAtomicLock fails when SELinux denies link() syscall with EACCES\n      45-latin.conf: Add some Windows fonts to categorize them properly\n      Correct one for the previous change\n",
                      "markdown": "`\nAkira TAGOH (8):\n      Modernize fc-blanks.py\n      Update URL\n      Bug 95477 - FcAtomicLock fails when SELinux denies link() syscall with EACCES\n      45-latin.conf: Add some Windows fonts to categorize them properly\n      Correct one for the previous change\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 965,
                  "startColumn": 5,
                  "endLine": 965,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Check python installed in autogen.sh\n      Fix some errors related to python3\n      Bug 96676 - Check range of FcWeightFromOpenType argument\n      Update libtool revision\n\nTobias Stoeckmann (1):\n      Properly validate offsets in cache files.\n",
                    "rendered": {
                      "text": "      Check python installed in autogen.sh\n      Fix some errors related to python3\n      Bug 96676 - Check range of FcWeightFromOpenType argument\n      Update libtool revision\n\nTobias Stoeckmann (1):\n      Properly validate offsets in cache files.\n",
                      "markdown": "`      Check python installed in autogen.sh\n      Fix some errors related to python3\n      Bug 96676 - Check range of FcWeightFromOpenType argument\n      Update libtool revision\n\nTobias Stoeckmann (1):\n      Properly validate offsets in cache files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 961,
                  "startColumn": 5,
                  "endLine": 961,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nAkira TAGOH (6):\n      Add --with-default-hinting to configure\n      Update CaseFolding.txt to Unicode 9.0\n      Check python installed in autogen.sh\n      Fix some errors related to python3\n      Bug 96676 - Check range of FcWeightFromOpenType argument\n",
                    "rendered": {
                      "text": "\nAkira TAGOH (6):\n      Add --with-default-hinting to configure\n      Update CaseFolding.txt to Unicode 9.0\n      Check python installed in autogen.sh\n      Fix some errors related to python3\n      Bug 96676 - Check range of FcWeightFromOpenType argument\n",
                      "markdown": "`\nAkira TAGOH (6):\n      Add --with-default-hinting to configure\n      Update CaseFolding.txt to Unicode 9.0\n      Check python installed in autogen.sh\n      Fix some errors related to python3\n      Bug 96676 - Check range of FcWeightFromOpenType argument\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 955,
                  "startColumn": 5,
                  "endLine": 955,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nMasamichi Hosoda (2):\n      Fix PostScript font alias name\n      Update aliases for URW June 2016\n\n2.12.1\n\n",
                    "rendered": {
                      "text": "\nMasamichi Hosoda (2):\n      Fix PostScript font alias name\n      Update aliases for URW June 2016\n\n2.12.1\n\n",
                      "markdown": "`\nMasamichi Hosoda (2):\n      Fix PostScript font alias name\n      Update aliases for URW June 2016\n\n2.12.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 945,
                  "startColumn": 5,
                  "endLine": 945,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Update a bit for the changes in FreeType 2.7.1\n      Add the description of FC_LANG envvar to the doc\n      Bug 101202 - fontconfig FTBFS if docbook-utils is installed\n      Update libtool revision\n\nAlan Coopersmith (1):\n      Correct cache version info in doc/fontconfig-user.sgml\n",
                    "rendered": {
                      "text": "      Update a bit for the changes in FreeType 2.7.1\n      Add the description of FC_LANG envvar to the doc\n      Bug 101202 - fontconfig FTBFS if docbook-utils is installed\n      Update libtool revision\n\nAlan Coopersmith (1):\n      Correct cache version info in doc/fontconfig-user.sgml\n",
                      "markdown": "`      Update a bit for the changes in FreeType 2.7.1\n      Add the description of FC_LANG envvar to the doc\n      Bug 101202 - fontconfig FTBFS if docbook-utils is installed\n      Update libtool revision\n\nAlan Coopersmith (1):\n      Correct cache version info in doc/fontconfig-user.sgml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 942,
                  "startColumn": 5,
                  "endLine": 942,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix FcCacheOffsetsValid()\n      Fix the build issue with gperf 3.1\n      Fix the build issue on GNU/Hurd\n      Update a bit for the changes in FreeType 2.7.1\n      Add the description of FC_LANG envvar to the doc\n      Bug 101202 - fontconfig FTBFS if docbook-utils is installed\n      Update libtool revision\n",
                    "rendered": {
                      "text": "      Fix FcCacheOffsetsValid()\n      Fix the build issue with gperf 3.1\n      Fix the build issue on GNU/Hurd\n      Update a bit for the changes in FreeType 2.7.1\n      Add the description of FC_LANG envvar to the doc\n      Bug 101202 - fontconfig FTBFS if docbook-utils is installed\n      Update libtool revision\n",
                      "markdown": "`      Fix FcCacheOffsetsValid()\n      Fix the build issue with gperf 3.1\n      Fix the build issue on GNU/Hurd\n      Update a bit for the changes in FreeType 2.7.1\n      Add the description of FC_LANG envvar to the doc\n      Bug 101202 - fontconfig FTBFS if docbook-utils is installed\n      Update libtool revision\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 928,
                  "startColumn": 32,
                  "endLine": 928,
                  "endColumn": 40,
                  "snippet": {
                    "text": "      Treat C.UTF-8 and C.utf8 locales as built in the C library.\n\nMasamichi Hosoda (1):\n      Bug 99360 - Fix cache file update on MinGW\n\n2.12.3\n\n",
                    "rendered": {
                      "text": "      Treat C.UTF-8 and C.utf8 locales as built in the C library.\n\nMasamichi Hosoda (1):\n      Bug 99360 - Fix cache file update on MinGW\n\n2.12.3\n\n",
                      "markdown": "`      Treat C.UTF-8 and C.utf8 locales as built in the C library.\n\nMasamichi Hosoda (1):\n      Bug 99360 - Fix cache file update on MinGW\n\n2.12.3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 5,
                  "endLine": 907,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Force regenerate fcobjshash.h when updating Makefile\n      Fix the build failure when srcdir != builddir and have gperf 3.1 or later installed\n      Add a testcase for Bug#131804\n      Update libtool revision\n      Fix distcheck error\n\nFlorent Rougon (6):\n",
                    "rendered": {
                      "text": "      Force regenerate fcobjshash.h when updating Makefile\n      Fix the build failure when srcdir != builddir and have gperf 3.1 or later installed\n      Add a testcase for Bug#131804\n      Update libtool revision\n      Fix distcheck error\n\nFlorent Rougon (6):\n",
                      "markdown": "`      Force regenerate fcobjshash.h when updating Makefile\n      Fix the build failure when srcdir != builddir and have gperf 3.1 or later installed\n      Add a testcase for Bug#131804\n      Update libtool revision\n      Fix distcheck error\n\nFlorent Rougon (6):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 883,
                  "startColumn": 5,
                  "endLine": 883,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n\nBehdad Esfahbod (14):\n      Pass --pic to gperf\n",
                    "rendered": {
                      "text": "      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n\nBehdad Esfahbod (14):\n      Pass --pic to gperf\n",
                      "markdown": "`      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n\nBehdad Esfahbod (14):\n      Pass --pic to gperf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 5,
                  "endLine": 882,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Polish und_zmth.orth more for Cambria Math and Minion Math\n      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n\nBehdad Esfahbod (14):\n",
                    "rendered": {
                      "text": "      Polish und_zmth.orth more for Cambria Math and Minion Math\n      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n\nBehdad Esfahbod (14):\n",
                      "markdown": "`      Polish und_zmth.orth more for Cambria Math and Minion Math\n      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n\nBehdad Esfahbod (14):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 5,
                  "endLine": 880,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add und_zmth.orth to support Math in lang\n      Polish und_zmth.orth for Libertinus Math\n      Polish und_zmth.orth more for Cambria Math and Minion Math\n      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n",
                    "rendered": {
                      "text": "      Add und_zmth.orth to support Math in lang\n      Polish und_zmth.orth for Libertinus Math\n      Polish und_zmth.orth more for Cambria Math and Minion Math\n      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n",
                      "markdown": "`      Add und_zmth.orth to support Math in lang\n      Polish und_zmth.orth for Libertinus Math\n      Polish und_zmth.orth more for Cambria Math and Minion Math\n      Update similar to emoji's\n      fc-blanks: fall back to the static data available in repo if downloaded data is corrupted\n      Update docs\n      Update libtool versioning\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 5,
                  "endLine": 852,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      und_zsye.orth: polish to get for NotoEmoji-Regular.ttf\n      Revert \"Keep the same behavior to the return value of FcConfigParseAndLoad\"\n      Fix again to keep the same behavior to the return value of FcConfigParseAndLoad\n      Update libtool revision\n\nBehdad Esfahbod (2):\n      Minor\n",
                    "rendered": {
                      "text": "      und_zsye.orth: polish to get for NotoEmoji-Regular.ttf\n      Revert \"Keep the same behavior to the return value of FcConfigParseAndLoad\"\n      Fix again to keep the same behavior to the return value of FcConfigParseAndLoad\n      Update libtool revision\n\nBehdad Esfahbod (2):\n      Minor\n",
                      "markdown": "`      und_zsye.orth: polish to get for NotoEmoji-Regular.ttf\n      Revert \"Keep the same behavior to the return value of FcConfigParseAndLoad\"\n      Fix again to keep the same behavior to the return value of FcConfigParseAndLoad\n      Update libtool revision\n\nBehdad Esfahbod (2):\n      Minor\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 788,
                  "startColumn": 5,
                  "endLine": 788,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Inline FcFreeTypeCheckGlyph()\n      Call FT_Get_Advance() only as long as we need to determine font width type\n      Minor\n      Update documentation for removal of blanks\n      Merge branch 'faster'\n      Add FcFreeTypeQueryAll()\n      Document FcFreeTypeQueryAll()\n",
                    "rendered": {
                      "text": "      Inline FcFreeTypeCheckGlyph()\n      Call FT_Get_Advance() only as long as we need to determine font width type\n      Minor\n      Update documentation for removal of blanks\n      Merge branch 'faster'\n      Add FcFreeTypeQueryAll()\n      Document FcFreeTypeQueryAll()\n",
                      "markdown": "`      Inline FcFreeTypeCheckGlyph()\n      Call FT_Get_Advance() only as long as we need to determine font width type\n      Minor\n      Update documentation for removal of blanks\n      Merge branch 'faster'\n      Add FcFreeTypeQueryAll()\n      Document FcFreeTypeQueryAll()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 5,
                  "endLine": 741,
                  "snippet": {
                    "text": "      Destroy the alias and UUID tables when all of caches is unloaded\n      cleanup\n      abstract hash table functions\n      update\n      Fix memory leak\n      Fix a typo\n      Don't call FcStat when the alias has already been added\n      Add a testcase for bind-mounted cachedir\n",
                    "rendered": {
                      "text": "      Destroy the alias and UUID tables when all of caches is unloaded\n      cleanup\n      abstract hash table functions\n      update\n      Fix memory leak\n      Fix a typo\n      Don't call FcStat when the alias has already been added\n      Add a testcase for bind-mounted cachedir\n",
                      "markdown": "`      Destroy the alias and UUID tables when all of caches is unloaded\n      cleanup\n      abstract hash table functions\n      update\n      Fix memory leak\n      Fix a typo\n      Don't call FcStat when the alias has already been added\n      Add a testcase for bind-mounted cachedir\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 18,
                  "endLine": 723,
                  "snippet": {
                    "text": "      Fix a compiler warning\n      Update libtool revision\n      Bump version to 2.12.6\n      doc: trivial update\n      Add the ruleset description support\n      workaround to avoid modifying by gettextize\n      missing an open parenthesis\n      another workaround to avoid modifying by gettextize...\n",
                    "rendered": {
                      "text": "      Fix a compiler warning\n      Update libtool revision\n      Bump version to 2.12.6\n      doc: trivial update\n      Add the ruleset description support\n      workaround to avoid modifying by gettextize\n      missing an open parenthesis\n      another workaround to avoid modifying by gettextize...\n",
                      "markdown": "`      Fix a compiler warning\n      Update libtool revision\n      Bump version to 2.12.6\n      doc: trivial update\n      Add the ruleset description support\n      workaround to avoid modifying by gettextize\n      missing an open parenthesis\n      another workaround to avoid modifying by gettextize...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 5,
                  "endLine": 720,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix again to keep the same behavior to the return value of FcConfigParseAndLoad\n      cleanup\n      Fix a compiler warning\n      Update libtool revision\n      Bump version to 2.12.6\n      doc: trivial update\n      Add the ruleset description support\n",
                    "rendered": {
                      "text": "      Fix again to keep the same behavior to the return value of FcConfigParseAndLoad\n      cleanup\n      Fix a compiler warning\n      Update libtool revision\n      Bump version to 2.12.6\n      doc: trivial update\n      Add the ruleset description support\n",
                      "markdown": "`      Fix again to keep the same behavior to the return value of FcConfigParseAndLoad\n      cleanup\n      Fix a compiler warning\n      Update libtool revision\n      Bump version to 2.12.6\n      doc: trivial update\n      Add the ruleset description support\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 12,
                  "endLine": 692,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      Add missing doc of FcDirCacheCreateUUID\n      Replace uuid in the table properly when -r\n      Add a test case for uuid creation\n      Do not update mtime with creating .uuid\n      Disable uuid related code on Win32\n      Try to get current instance of FcConfig as far as possible\n      do not check the existence of itstool on win32\n",
                    "rendered": {
                      "text": "      Add missing doc of FcDirCacheCreateUUID\n      Replace uuid in the table properly when -r\n      Add a test case for uuid creation\n      Do not update mtime with creating .uuid\n      Disable uuid related code on Win32\n      Try to get current instance of FcConfig as far as possible\n      do not check the existence of itstool on win32\n",
                      "markdown": "`      Add missing doc of FcDirCacheCreateUUID\n      Replace uuid in the table properly when -r\n      Add a test case for uuid creation\n      Do not update mtime with creating .uuid\n      Disable uuid related code on Win32\n      Try to get current instance of FcConfig as far as possible\n      do not check the existence of itstool on win32\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 687,
                  "startColumn": 5,
                  "endLine": 687,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nAkira TAGOH (13):\n      cleanup files\n      Update .uuid only when -r is given but not -f.\n      Returns false if key is already available in the table\n      Add missing doc of FcDirCacheCreateUUID\n      Replace uuid in the table properly when -r\n",
                    "rendered": {
                      "text": "\nAkira TAGOH (13):\n      cleanup files\n      Update .uuid only when -r is given but not -f.\n      Returns false if key is already available in the table\n      Add missing doc of FcDirCacheCreateUUID\n      Replace uuid in the table properly when -r\n",
                      "markdown": "`\nAkira TAGOH (13):\n      cleanup files\n      Update .uuid only when -r is given but not -f.\n      Returns false if key is already available in the table\n      Add missing doc of FcDirCacheCreateUUID\n      Replace uuid in the table properly when -r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 22,
                  "endLine": 612,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      Fix memory leak\n      Fix the build issue with gperf\n      Fix missing closing bracket in FcStrIsAbsoluteFilename()\n      Update the issue tracker URL\n      Fix distcheck fail\n      Add .gitlab-ci.yml\n      Bump the libtool revision\n",
                    "rendered": {
                      "text": "      Fix memory leak\n      Fix the build issue with gperf\n      Fix missing closing bracket in FcStrIsAbsoluteFilename()\n      Update the issue tracker URL\n      Fix distcheck fail\n      Add .gitlab-ci.yml\n      Bump the libtool revision\n",
                      "markdown": "`      Fix memory leak\n      Fix the build issue with gperf\n      Fix missing closing bracket in FcStrIsAbsoluteFilename()\n      Update the issue tracker URL\n      Fix distcheck fail\n      Add .gitlab-ci.yml\n      Bump the libtool revision\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 5,
                  "endLine": 612,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix memory leak\n      Fix the build issue with gperf\n      Fix missing closing bracket in FcStrIsAbsoluteFilename()\n      Update the issue tracker URL\n      Fix distcheck fail\n      Add .gitlab-ci.yml\n      Bump the libtool revision\n",
                    "rendered": {
                      "text": "      Fix memory leak\n      Fix the build issue with gperf\n      Fix missing closing bracket in FcStrIsAbsoluteFilename()\n      Update the issue tracker URL\n      Fix distcheck fail\n      Add .gitlab-ci.yml\n      Bump the libtool revision\n",
                      "markdown": "`      Fix memory leak\n      Fix the build issue with gperf\n      Fix missing closing bracket in FcStrIsAbsoluteFilename()\n      Update the issue tracker URL\n      Fix distcheck fail\n      Add .gitlab-ci.yml\n      Bump the libtool revision\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 590,
                  "startColumn": 5,
                  "endLine": 590,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix -Wstringop-truncation warning\n      Fix double-free\n      Add a test case for bz#106618\n      Update CaseFolding.txt to Unicode 11\n      Remove .uuid when no font files exists on a directory\n      Fix the leak of file handle\n      Fix memory leak\n",
                    "rendered": {
                      "text": "      Fix -Wstringop-truncation warning\n      Fix double-free\n      Add a test case for bz#106618\n      Update CaseFolding.txt to Unicode 11\n      Remove .uuid when no font files exists on a directory\n      Fix the leak of file handle\n      Fix memory leak\n",
                      "markdown": "`      Fix -Wstringop-truncation warning\n      Fix double-free\n      Add a test case for bz#106618\n      Update CaseFolding.txt to Unicode 11\n      Remove .uuid when no font files exists on a directory\n      Fix the leak of file handle\n      Fix memory leak\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 5,
                  "endLine": 535,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      No need to remap for uuid based\n      Update the test case that is looking for uuid based on host\n      Distribute archive in xz instead of bz2\n      Update CaseFolding.txt to Unicode 12.1\n      fc-validate: returns an error code when missing some glyphs\n      Correct the comment for FC_LANG in fontconfig.h\n      Fix a typo in the description of FcWeightFromOpenTypeDouble\n",
                    "rendered": {
                      "text": "      No need to remap for uuid based\n      Update the test case that is looking for uuid based on host\n      Distribute archive in xz instead of bz2\n      Update CaseFolding.txt to Unicode 12.1\n      fc-validate: returns an error code when missing some glyphs\n      Correct the comment for FC_LANG in fontconfig.h\n      Fix a typo in the description of FcWeightFromOpenTypeDouble\n",
                      "markdown": "`      No need to remap for uuid based\n      Update the test case that is looking for uuid based on host\n      Distribute archive in xz instead of bz2\n      Update CaseFolding.txt to Unicode 12.1\n      fc-validate: returns an error code when missing some glyphs\n      Correct the comment for FC_LANG in fontconfig.h\n      Fix a typo in the description of FcWeightFromOpenTypeDouble\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 533,
                  "startColumn": 5,
                  "endLine": 533,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix unexpected cache name by double-slash in path\n      Fallback uuid-based name to read a cache if no MD5-based cache available\n      No need to remap for uuid based\n      Update the test case that is looking for uuid based on host\n      Distribute archive in xz instead of bz2\n      Update CaseFolding.txt to Unicode 12.1\n      fc-validate: returns an error code when missing some glyphs\n",
                    "rendered": {
                      "text": "      Fix unexpected cache name by double-slash in path\n      Fallback uuid-based name to read a cache if no MD5-based cache available\n      No need to remap for uuid based\n      Update the test case that is looking for uuid based on host\n      Distribute archive in xz instead of bz2\n      Update CaseFolding.txt to Unicode 12.1\n      fc-validate: returns an error code when missing some glyphs\n",
                      "markdown": "`      Fix unexpected cache name by double-slash in path\n      Fallback uuid-based name to read a cache if no MD5-based cache available\n      No need to remap for uuid based\n      Update the test case that is looking for uuid based on host\n      Distribute archive in xz instead of bz2\n      Update CaseFolding.txt to Unicode 12.1\n      fc-validate: returns an error code when missing some glyphs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 22,
                  "endLine": 518,
                  "snippet": {
                    "text": "      Add reset-dirs element\n      Add salt attribute to dir and remap-dir elements\n      Update doc for salt\n      trivial testcase update\n      Add back if !OS_WIN32 line\n      Fix build issues on MinGW\n      Use alternative function for realpath on Win32\n      Fix make check fail on MinGW again\n",
                    "rendered": {
                      "text": "      Add reset-dirs element\n      Add salt attribute to dir and remap-dir elements\n      Update doc for salt\n      trivial testcase update\n      Add back if !OS_WIN32 line\n      Fix build issues on MinGW\n      Use alternative function for realpath on Win32\n      Fix make check fail on MinGW again\n",
                      "markdown": "`      Add reset-dirs element\n      Add salt attribute to dir and remap-dir elements\n      Update doc for salt\n      trivial testcase update\n      Add back if !OS_WIN32 line\n      Fix build issues on MinGW\n      Use alternative function for realpath on Win32\n      Fix make check fail on MinGW again\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 5,
                  "endLine": 516,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix a typo\n      Add reset-dirs element\n      Add salt attribute to dir and remap-dir elements\n      Update doc for salt\n      trivial testcase update\n      Add back if !OS_WIN32 line\n      Fix build issues on MinGW\n",
                    "rendered": {
                      "text": "      Fix a typo\n      Add reset-dirs element\n      Add salt attribute to dir and remap-dir elements\n      Update doc for salt\n      trivial testcase update\n      Add back if !OS_WIN32 line\n      Fix build issues on MinGW\n",
                      "markdown": "`      Fix a typo\n      Add reset-dirs element\n      Add salt attribute to dir and remap-dir elements\n      Update doc for salt\n      trivial testcase update\n      Add back if !OS_WIN32 line\n      Fix build issues on MinGW\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 511,
                  "startColumn": 5,
                  "endLine": 511,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add new element remap-dir instead of extending dir element\n      Trim the last slash\n      Update testcase\n      Update deps to run CI\n      Drop unnecessary line to include uuid.h\n      Fix a typo\n      Add reset-dirs element\n",
                    "rendered": {
                      "text": "      Add new element remap-dir instead of extending dir element\n      Trim the last slash\n      Update testcase\n      Update deps to run CI\n      Drop unnecessary line to include uuid.h\n      Fix a typo\n      Add reset-dirs element\n",
                      "markdown": "`      Add new element remap-dir instead of extending dir element\n      Trim the last slash\n      Update testcase\n      Update deps to run CI\n      Drop unnecessary line to include uuid.h\n      Fix a typo\n      Add reset-dirs element\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 5,
                  "endLine": 510,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix make check fail on run-test-conf.sh\n      Add new element remap-dir instead of extending dir element\n      Trim the last slash\n      Update testcase\n      Update deps to run CI\n      Drop unnecessary line to include uuid.h\n      Fix a typo\n",
                    "rendered": {
                      "text": "      Fix make check fail on run-test-conf.sh\n      Add new element remap-dir instead of extending dir element\n      Trim the last slash\n      Update testcase\n      Update deps to run CI\n      Drop unnecessary line to include uuid.h\n      Fix a typo\n",
                      "markdown": "`      Fix make check fail on run-test-conf.sh\n      Add new element remap-dir instead of extending dir element\n      Trim the last slash\n      Update testcase\n      Update deps to run CI\n      Drop unnecessary line to include uuid.h\n      Fix a typo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 500,
                  "startColumn": 5,
                  "endLine": 500,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix make check on cross-compiled env\n      Add build test for MinGW\n      Fix make distcheck error\n      Update requirement for gettext\n      Correct configure option to cross-compile\n      Install wine for CI on MinGW\n      Don't test bind-mount thing for MinGW\n",
                    "rendered": {
                      "text": "      Fix make check on cross-compiled env\n      Add build test for MinGW\n      Fix make distcheck error\n      Update requirement for gettext\n      Correct configure option to cross-compile\n      Install wine for CI on MinGW\n      Don't test bind-mount thing for MinGW\n",
                      "markdown": "`      Fix make check on cross-compiled env\n      Add build test for MinGW\n      Fix make distcheck error\n      Update requirement for gettext\n      Correct configure option to cross-compile\n      Install wine for CI on MinGW\n      Don't test bind-mount thing for MinGW\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 483,
                  "startColumn": 41,
                  "endLine": 483,
                  "endColumn": 49,
                  "snippet": {
                    "text": "      Enable bubblewrap test case\n      Use FC_PATH_MAX instead of PATH_MAX\n      Use Rachana instead of Meera for Malayalam\n      Add doc for description element and update fonts.dtd\n      Fix FcFontList doesn't return a font with FC_COLOR=true\n      Add a test case for FcFontList\n      Warn when constant name is used for unexpected object\n",
                    "rendered": {
                      "text": "      Enable bubblewrap test case\n      Use FC_PATH_MAX instead of PATH_MAX\n      Use Rachana instead of Meera for Malayalam\n      Add doc for description element and update fonts.dtd\n      Fix FcFontList doesn't return a font with FC_COLOR=true\n      Add a test case for FcFontList\n      Warn when constant name is used for unexpected object\n",
                      "markdown": "`      Enable bubblewrap test case\n      Use FC_PATH_MAX instead of PATH_MAX\n      Use Rachana instead of Meera for Malayalam\n      Add doc for description element and update fonts.dtd\n      Fix FcFontList doesn't return a font with FC_COLOR=true\n      Add a test case for FcFontList\n      Warn when constant name is used for unexpected object\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 12,
                  "endLine": 476,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      add missing the case of prefix=\"default\" as documented\n      Fix test case\n      CI: Add more logs\n      Do not update mtime when removing .uuid file\n      Do not try updating mtime when unlink was failed\n      Do not run a test case for .uuid deletion\n      Drop Mitra Mono from 65-nonlatin.conf\n",
                    "rendered": {
                      "text": "      add missing the case of prefix=\"default\" as documented\n      Fix test case\n      CI: Add more logs\n      Do not update mtime when removing .uuid file\n      Do not try updating mtime when unlink was failed\n      Do not run a test case for .uuid deletion\n      Drop Mitra Mono from 65-nonlatin.conf\n",
                      "markdown": "`      add missing the case of prefix=\"default\" as documented\n      Fix test case\n      CI: Add more logs\n      Do not update mtime when removing .uuid file\n      Do not try updating mtime when unlink was failed\n      Do not run a test case for .uuid deletion\n      Drop Mitra Mono from 65-nonlatin.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 5,
                  "endLine": 472,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix CI\n      Add more prefix support in <dir> element\n      Update fonts.dtd for last commit\n      Update docs for 1aa8b700\n      add missing the case of prefix=\"default\" as documented\n      Fix test case\n      CI: Add more logs\n",
                    "rendered": {
                      "text": "      Fix CI\n      Add more prefix support in <dir> element\n      Update fonts.dtd for last commit\n      Update docs for 1aa8b700\n      add missing the case of prefix=\"default\" as documented\n      Fix test case\n      CI: Add more logs\n",
                      "markdown": "`      Fix CI\n      Add more prefix support in <dir> element\n      Update fonts.dtd for last commit\n      Update docs for 1aa8b700\n      add missing the case of prefix=\"default\" as documented\n      Fix test case\n      CI: Add more logs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 5,
                  "endLine": 471,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add a test case for d1f48f11\n      Fix CI\n      Add more prefix support in <dir> element\n      Update fonts.dtd for last commit\n      Update docs for 1aa8b700\n      add missing the case of prefix=\"default\" as documented\n      Fix test case\n",
                    "rendered": {
                      "text": "      Add a test case for d1f48f11\n      Fix CI\n      Add more prefix support in <dir> element\n      Update fonts.dtd for last commit\n      Update docs for 1aa8b700\n      add missing the case of prefix=\"default\" as documented\n      Fix test case\n",
                      "markdown": "`      Add a test case for d1f48f11\n      Fix CI\n      Add more prefix support in <dir> element\n      Update fonts.dtd for last commit\n      Update docs for 1aa8b700\n      add missing the case of prefix=\"default\" as documented\n      Fix test case\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 5,
                  "endLine": 357,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n\nAlan Coopersmith (1):\n",
                    "rendered": {
                      "text": "      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n\nAlan Coopersmith (1):\n",
                      "markdown": "`      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n\nAlan Coopersmith (1):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 21,
                  "endLine": 356,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      Drop duplicated BUILT_SOURCES in doc/Makefile.am\n      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n\n",
                    "rendered": {
                      "text": "      Drop duplicated BUILT_SOURCES in doc/Makefile.am\n      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n\n",
                      "markdown": "`      Drop duplicated BUILT_SOURCES in doc/Makefile.am\n      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 5,
                  "endLine": 355,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add examples section in fc-match(1)\n      Drop duplicated BUILT_SOURCES in doc/Makefile.am\n      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n",
                    "rendered": {
                      "text": "      Add examples section in fc-match(1)\n      Drop duplicated BUILT_SOURCES in doc/Makefile.am\n      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n",
                      "markdown": "`      Add examples section in fc-match(1)\n      Drop duplicated BUILT_SOURCES in doc/Makefile.am\n      Initialize shell variables to be sure\n      Update README that missed changes mistakenly\n      new-version.sh: update version in meson.build\n      Update version in meson.build to sync up with configure.ac\n      new-version.sh: commit meson.build when bumpping\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 5,
                  "endLine": 349,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Add Regular style when no meta data available to guess a style\n      Make sure a combination of family and familylang is available\n      Split up a code again coming from different copyright notice\n      Update COPYING\n      Use memcpy instead of strcpy\n      Evaluate mingw64_env to setup properly on CI\n      Add examples section in fc-match(1)\n",
                    "rendered": {
                      "text": "      Add Regular style when no meta data available to guess a style\n      Make sure a combination of family and familylang is available\n      Split up a code again coming from different copyright notice\n      Update COPYING\n      Use memcpy instead of strcpy\n      Evaluate mingw64_env to setup properly on CI\n      Add examples section in fc-match(1)\n",
                      "markdown": "`      Add Regular style when no meta data available to guess a style\n      Make sure a combination of family and familylang is available\n      Split up a code again coming from different copyright notice\n      Update COPYING\n      Use memcpy instead of strcpy\n      Evaluate mingw64_env to setup properly on CI\n      Add examples section in fc-match(1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 5,
                  "endLine": 345,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      fc-scan: add --sysroot option\n      Construct fullname from family and style\n      Add fullname later once FcConfigSubstitute() is done\n      Update meson.build\n      Add Regular style when no meta data available to guess a style\n      Make sure a combination of family and familylang is available\n      Split up a code again coming from different copyright notice\n",
                    "rendered": {
                      "text": "      fc-scan: add --sysroot option\n      Construct fullname from family and style\n      Add fullname later once FcConfigSubstitute() is done\n      Update meson.build\n      Add Regular style when no meta data available to guess a style\n      Make sure a combination of family and familylang is available\n      Split up a code again coming from different copyright notice\n",
                      "markdown": "`      fc-scan: add --sysroot option\n      Construct fullname from family and style\n      Add fullname later once FcConfigSubstitute() is done\n      Update meson.build\n      Add Regular style when no meta data available to guess a style\n      Make sure a combination of family and familylang is available\n      Split up a code again coming from different copyright notice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 9,
                  "endLine": 256,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      Fix missing <dir> element for WINDOWSFONTDIR in meson\n      Refactoring configure.ac to add <dir> element around font paths\n      Fix build fail when missing docbook and/or disabling doc-build\n      ci: Update CA cert related thing for Python on Windows\n      Add support for XDG_DATA_DIRS\n      Better wording for comments in config\n      Revert constructing fullname property from family and style properties\n",
                    "rendered": {
                      "text": "      Fix missing <dir> element for WINDOWSFONTDIR in meson\n      Refactoring configure.ac to add <dir> element around font paths\n      Fix build fail when missing docbook and/or disabling doc-build\n      ci: Update CA cert related thing for Python on Windows\n      Add support for XDG_DATA_DIRS\n      Better wording for comments in config\n      Revert constructing fullname property from family and style properties\n",
                      "markdown": "`      Fix missing <dir> element for WINDOWSFONTDIR in meson\n      Refactoring configure.ac to add <dir> element around font paths\n      Fix build fail when missing docbook and/or disabling doc-build\n      ci: Update CA cert related thing for Python on Windows\n      Add support for XDG_DATA_DIRS\n      Better wording for comments in config\n      Revert constructing fullname property from family and style properties\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 32,
                  "endLine": 251,
                  "endColumn": 36,
                  "snippet": {
                    "text": "2.13.94 (2.14 RC4)\n\nAkira TAGOH (10):\n      Add back fullname property at scan matching phase\n      Overwrite symlinks for config files\n      Fix missing <dir> element for WINDOWSFONTDIR in meson\n      Refactoring configure.ac to add <dir> element around font paths\n",
                    "rendered": {
                      "text": "2.13.94 (2.14 RC4)\n\nAkira TAGOH (10):\n      Add back fullname property at scan matching phase\n      Overwrite symlinks for config files\n      Fix missing <dir> element for WINDOWSFONTDIR in meson\n      Refactoring configure.ac to add <dir> element around font paths\n",
                      "markdown": "`2.13.94 (2.14 RC4)\n\nAkira TAGOH (10):\n      Add back fullname property at scan matching phase\n      Overwrite symlinks for config files\n      Fix missing <dir> element for WINDOWSFONTDIR in meson\n      Refactoring configure.ac to add <dir> element around font paths\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 5,
                  "endLine": 201,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Apply the change made by 23e46d1 again\n      Initialize variable\n      Add more description for fc-conflist.1 and FcConfigFileInfoIterInit.3\n      Update CaseFolding.txt to Unicode 14\n      Add an user font directory for Win32 to the default font path\n      Add test/wrapper-script.sh to the archive\n      Fix possible memory leaks in FcPatternObjectAddWithBinding\n",
                    "rendered": {
                      "text": "      Apply the change made by 23e46d1 again\n      Initialize variable\n      Add more description for fc-conflist.1 and FcConfigFileInfoIterInit.3\n      Update CaseFolding.txt to Unicode 14\n      Add an user font directory for Win32 to the default font path\n      Add test/wrapper-script.sh to the archive\n      Fix possible memory leaks in FcPatternObjectAddWithBinding\n",
                      "markdown": "`      Apply the change made by 23e46d1 again\n      Initialize variable\n      Add more description for fc-conflist.1 and FcConfigFileInfoIterInit.3\n      Update CaseFolding.txt to Unicode 14\n      Add an user font directory for Win32 to the default font path\n      Add test/wrapper-script.sh to the archive\n      Fix possible memory leaks in FcPatternObjectAddWithBinding\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 5,
                  "endLine": 176,
                  "endColumn": 13,
                  "snippet": {
                    "text": "2.14\n\nAlan Coopersmith (1):\n      Update address for reporting msgid bugs from bugzilla to gitlab\n\n2.13.96 (2.14 RC6)\n\n",
                    "rendered": {
                      "text": "2.14\n\nAlan Coopersmith (1):\n      Update address for reporting msgid bugs from bugzilla to gitlab\n\n2.13.96 (2.14 RC6)\n\n",
                      "markdown": "`2.14\n\nAlan Coopersmith (1):\n      Update address for reporting msgid bugs from bugzilla to gitlab\n\n2.13.96 (2.14 RC6)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 9,
                  "endLine": 166,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      meson: add 'cache-dir' option\n      meson: add 'template-dir', 'baseconfig-dir', 'config-dir', and 'xml-dir' options\n      ci: update windows image to a 2022-server based one\n      ci: update macOS image\n\nXavier Claessens (3):\n      meson: Do not run fc-cache when installing into a DESTDIR\n",
                    "rendered": {
                      "text": "      meson: add 'cache-dir' option\n      meson: add 'template-dir', 'baseconfig-dir', 'config-dir', and 'xml-dir' options\n      ci: update windows image to a 2022-server based one\n      ci: update macOS image\n\nXavier Claessens (3):\n      meson: Do not run fc-cache when installing into a DESTDIR\n",
                      "markdown": "`      meson: add 'cache-dir' option\n      meson: add 'template-dir', 'baseconfig-dir', 'config-dir', and 'xml-dir' options\n      ci: update windows image to a 2022-server based one\n      ci: update macOS image\n\nXavier Claessens (3):\n      meson: Do not run fc-cache when installing into a DESTDIR\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 9,
                  "endLine": 165,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      meson: add 'additional-fonts-dirs' option\n      meson: add 'cache-dir' option\n      meson: add 'template-dir', 'baseconfig-dir', 'config-dir', and 'xml-dir' options\n      ci: update windows image to a 2022-server based one\n      ci: update macOS image\n\nXavier Claessens (3):\n",
                    "rendered": {
                      "text": "      meson: add 'additional-fonts-dirs' option\n      meson: add 'cache-dir' option\n      meson: add 'template-dir', 'baseconfig-dir', 'config-dir', and 'xml-dir' options\n      ci: update windows image to a 2022-server based one\n      ci: update macOS image\n\nXavier Claessens (3):\n",
                      "markdown": "`      meson: add 'additional-fonts-dirs' option\n      meson: add 'cache-dir' option\n      meson: add 'template-dir', 'baseconfig-dir', 'config-dir', and 'xml-dir' options\n      ci: update windows image to a 2022-server based one\n      ci: update macOS image\n\nXavier Claessens (3):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Ignore LC_CTYPE if set to \"UTF-8\"\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nlilinjie (1):\n      fix typo\n",
                    "rendered": {
                      "text": "      Ignore LC_CTYPE if set to \"UTF-8\"\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nlilinjie (1):\n      fix typo\n",
                      "markdown": "`      Ignore LC_CTYPE if set to \"UTF-8\"\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nlilinjie (1):\n      fix typo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 12,
                  "endLine": 118,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      meson: modify gperf test to remove sh dependency\n\nJason Francis (1):\n      meson: Update freetype2 git repository to upstream\n\nJean Abou Samra (1):\n      Ignore LC_CTYPE if set to \"UTF-8\"\n",
                    "rendered": {
                      "text": "      meson: modify gperf test to remove sh dependency\n\nJason Francis (1):\n      meson: Update freetype2 git repository to upstream\n\nJean Abou Samra (1):\n      Ignore LC_CTYPE if set to \"UTF-8\"\n",
                      "markdown": "`      meson: modify gperf test to remove sh dependency\n\nJason Francis (1):\n      meson: Update freetype2 git repository to upstream\n\nJean Abou Samra (1):\n      Ignore LC_CTYPE if set to \"UTF-8\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 5,
                  "endLine": 104,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Store artifacts for meson windows CI\n      Add FC_DESKTOP_NAME property\n      Add --with-default-sub-pixel-rendering option\n      Update po-conf/POTFILES.in\n      Ignore null pointer on Fc*Destroy functions\n      Convert tabs to spaces\n      Convert more tabs to spaces in docs\n",
                    "rendered": {
                      "text": "      Store artifacts for meson windows CI\n      Add FC_DESKTOP_NAME property\n      Add --with-default-sub-pixel-rendering option\n      Update po-conf/POTFILES.in\n      Ignore null pointer on Fc*Destroy functions\n      Convert tabs to spaces\n      Convert more tabs to spaces in docs\n",
                      "markdown": "`      Store artifacts for meson windows CI\n      Add FC_DESKTOP_NAME property\n      Add --with-default-sub-pixel-rendering option\n      Update po-conf/POTFILES.in\n      Ignore null pointer on Fc*Destroy functions\n      Convert tabs to spaces\n      Convert more tabs to spaces in docs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 5,
                  "endLine": 70,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Change index type to 16 bit and bump cache version to 9\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nSefa Eyeoglu (1):\n      Add optional 11-lcdfilter-none configuration\n",
                    "rendered": {
                      "text": "      Change index type to 16 bit and bump cache version to 9\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nSefa Eyeoglu (1):\n      Add optional 11-lcdfilter-none configuration\n",
                      "markdown": "`      Change index type to 16 bit and bump cache version to 9\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nSefa Eyeoglu (1):\n      Add optional 11-lcdfilter-none configuration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 5,
                  "endLine": 51,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n      Update so version\n\nBen Wagner (1):\n      Fix leak of `reason` in _FcConfigParse when not complaining\n",
                    "rendered": {
                      "text": "      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n      Update so version\n\nBen Wagner (1):\n      Fix leak of `reason` in _FcConfigParse when not complaining\n",
                      "markdown": "`      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n      Update so version\n\nBen Wagner (1):\n      Fix leak of `reason` in _FcConfigParse when not complaining\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 9,
                  "endLine": 48,
                  "snippet": {
                    "text": "      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n      .gitlab-ci: Update\n      CI: Update\n      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n      Update so version\n",
                    "rendered": {
                      "text": "      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n      .gitlab-ci: Update\n      CI: Update\n      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n      Update so version\n",
                      "markdown": "`      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n      .gitlab-ci: Update\n      CI: Update\n      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n      Update so version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 47,
                  "snippet": {
                    "text": "      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n      .gitlab-ci: Update\n      CI: Update\n      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n",
                    "rendered": {
                      "text": "      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n      .gitlab-ci: Update\n      CI: Update\n      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n",
                      "markdown": "`      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n      .gitlab-ci: Update\n      CI: Update\n      CI: static build only for rawhide\n      Use memmove instead of memcpy\n      Rename README to NEWS and add README.md\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 5,
                  "endLine": 42,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Create a symlink with relative path\n      Fix an error of \"initializer element is not constant\"\n      Update CaseFolding.txt to Unicode 15.1\n      Update the encoding table for Simplified Chinese\n      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n",
                    "rendered": {
                      "text": "      Create a symlink with relative path\n      Fix an error of \"initializer element is not constant\"\n      Update CaseFolding.txt to Unicode 15.1\n      Update the encoding table for Simplified Chinese\n      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n",
                      "markdown": "`      Create a symlink with relative path\n      Fix an error of \"initializer element is not constant\"\n      Update CaseFolding.txt to Unicode 15.1\n      Update the encoding table for Simplified Chinese\n      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n      Add iconv detection for meson build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 5,
                  "endLine": 41,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Fix uninitialized memory access when failing memory allocation.\n      Create a symlink with relative path\n      Fix an error of \"initializer element is not constant\"\n      Update CaseFolding.txt to Unicode 15.1\n      Update the encoding table for Simplified Chinese\n      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n",
                    "rendered": {
                      "text": "      Fix uninitialized memory access when failing memory allocation.\n      Create a symlink with relative path\n      Fix an error of \"initializer element is not constant\"\n      Update CaseFolding.txt to Unicode 15.1\n      Update the encoding table for Simplified Chinese\n      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n",
                      "markdown": "`      Fix uninitialized memory access when failing memory allocation.\n      Create a symlink with relative path\n      Fix an error of \"initializer element is not constant\"\n      Update CaseFolding.txt to Unicode 15.1\n      Update the encoding table for Simplified Chinese\n      Retry to decode strings in the name table as UTF-16BE in some cases.\n      Work around decoding strings in Macintosh encoding for the name table.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 5,
                  "endLine": 24,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Bump version to 2.14.2\n      Clean up unused code\n      Add another test case for flatpak\n      Update 65-nonlatin.conf for macOS\n      Change the order of the properties to the order of fontconfig cache format\n      Add missing property descriptions\n      Add namedinstance property\n",
                    "rendered": {
                      "text": "      Bump version to 2.14.2\n      Clean up unused code\n      Add another test case for flatpak\n      Update 65-nonlatin.conf for macOS\n      Change the order of the properties to the order of fontconfig cache format\n      Add missing property descriptions\n      Add namedinstance property\n",
                      "markdown": "`      Bump version to 2.14.2\n      Clean up unused code\n      Add another test case for flatpak\n      Update 65-nonlatin.conf for macOS\n      Change the order of the properties to the order of fontconfig cache format\n      Add missing property descriptions\n      Add namedinstance property\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2447,
                  "startColumn": 64,
                  "endLine": 2448,
                  "snippet": {
                    "text": "because subsequent directories might exist.\nPut directory names into global cache (reported by Ronny V. Vindenes).\nTreat zh-hk fonts differently from zh-tw fonts.  This patch may cause\nfontconfig to treat A-X fonts differently from A-Y fonts; please mail\nthe fontconfig list if this causes any problems.\nFix for unaligned memory accesses (Andreas Schwab).\nFix treatment of cache directory as read from cache file; don't use\nstring equality to determine if we have the right file, use inode\n",
                    "rendered": {
                      "text": "because subsequent directories might exist.\nPut directory names into global cache (reported by Ronny V. Vindenes).\nTreat zh-hk fonts differently from zh-tw fonts.  This patch may cause\nfontconfig to treat A-X fonts differently from A-Y fonts; please mail\nthe fontconfig list if this causes any problems.\nFix for unaligned memory accesses (Andreas Schwab).\nFix treatment of cache directory as read from cache file; don't use\nstring equality to determine if we have the right file, use inode\n",
                      "markdown": "`because subsequent directories might exist.\nPut directory names into global cache (reported by Ronny V. Vindenes).\nTreat zh-hk fonts differently from zh-tw fonts.  This patch may cause\nfontconfig to treat A-X fonts differently from A-Y fonts; please mail\nthe fontconfig list if this causes any problems.\nFix for unaligned memory accesses (Andreas Schwab).\nFix treatment of cache directory as read from cache file; don't use\nstring equality to determine if we have the right file, use inode\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2409,
                  "startColumn": 8,
                  "endLine": 2409,
                  "endColumn": 14,
                  "snippet": {
                    "text": "add orth for Lingala (reported by Denis Jacquerye).  Remove debian/\ndirectory.  Add a configuration file that disables hinting for the\nLohit Gujarati font (since the hinting distorts some glyphs quite\nbadly).  Sort directory entries while scanning them from disk;\nprevents Heisenbugs due to file ordering in a directory (due to Egmont\nKoblinger).  Fix Wine's problem with finding fonts.  (Reported by\nBernhard Rosenkraenzer.)  Fix the issues with GNU libiconv vs. libc\n",
                    "rendered": {
                      "text": "add orth for Lingala (reported by Denis Jacquerye).  Remove debian/\ndirectory.  Add a configuration file that disables hinting for the\nLohit Gujarati font (since the hinting distorts some glyphs quite\nbadly).  Sort directory entries while scanning them from disk;\nprevents Heisenbugs due to file ordering in a directory (due to Egmont\nKoblinger).  Fix Wine's problem with finding fonts.  (Reported by\nBernhard Rosenkraenzer.)  Fix the issues with GNU libiconv vs. libc\n",
                      "markdown": "`add orth for Lingala (reported by Denis Jacquerye).  Remove debian/\ndirectory.  Add a configuration file that disables hinting for the\nLohit Gujarati font (since the hinting distorts some glyphs quite\nbadly).  Sort directory entries while scanning them from disk;\nprevents Heisenbugs due to file ordering in a directory (due to Egmont\nKoblinger).  Fix Wine's problem with finding fonts.  (Reported by\nBernhard Rosenkraenzer.)  Fix the issues with GNU libiconv vs. libc\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2376,
                  "startColumn": 54,
                  "endLine": 2376,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      Chinese/Macau needs the Hong Kong orthography instead of Taiwan (bug 7884)\n      Add Assamese orthography (as.orth). Bug #8050\n      Really only rebuild caches for system fonts at make install time.\n      Fonts matching lang not territory should satisfy sort pattern lang.\n      Prefer Bitstream Vera to DejaVu families.\n      Guess that mac roman names with lots of high bits are actually SJIS.\n      Document FC_DEBUG values (bug 6393). Document name \\ escape syntax.\n",
                    "rendered": {
                      "text": "      Chinese/Macau needs the Hong Kong orthography instead of Taiwan (bug 7884)\n      Add Assamese orthography (as.orth). Bug #8050\n      Really only rebuild caches for system fonts at make install time.\n      Fonts matching lang not territory should satisfy sort pattern lang.\n      Prefer Bitstream Vera to DejaVu families.\n      Guess that mac roman names with lots of high bits are actually SJIS.\n      Document FC_DEBUG values (bug 6393). Document name \\ escape syntax.\n",
                      "markdown": "`      Chinese/Macau needs the Hong Kong orthography instead of Taiwan (bug 7884)\n      Add Assamese orthography (as.orth). Bug #8050\n      Really only rebuild caches for system fonts at make install time.\n      Fonts matching lang not territory should satisfy sort pattern lang.\n      Prefer Bitstream Vera to DejaVu families.\n      Guess that mac roman names with lots of high bits are actually SJIS.\n      Document FC_DEBUG values (bug 6393). Document name \\ escape syntax.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2327,
                  "startColumn": 5,
                  "endLine": 2327,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      file ftglue.c was initially added on branch fc-2_4_branch.\n      2005-11-23 Frederic Crozat <fcrozat@mandriva.com>: reviewed by: plam\n      file 10-fonts-persian.conf was initially added on branch fc-2_4_branch.\n      Sort directory entries while scanning them from disk; prevents Heisenbugs\n      file ln.orth was initially added on branch fc-2_4_branch.\n      Fix typos in orth files. Reported by Denis Jacquerye.\n      On Windows, unlink before rename. Reported by Tim Evans.\n",
                    "rendered": {
                      "text": "      file ftglue.c was initially added on branch fc-2_4_branch.\n      2005-11-23 Frederic Crozat <fcrozat@mandriva.com>: reviewed by: plam\n      file 10-fonts-persian.conf was initially added on branch fc-2_4_branch.\n      Sort directory entries while scanning them from disk; prevents Heisenbugs\n      file ln.orth was initially added on branch fc-2_4_branch.\n      Fix typos in orth files. Reported by Denis Jacquerye.\n      On Windows, unlink before rename. Reported by Tim Evans.\n",
                      "markdown": "`      file ftglue.c was initially added on branch fc-2_4_branch.\n      2005-11-23 Frederic Crozat <fcrozat@mandriva.com>: reviewed by: plam\n      file 10-fonts-persian.conf was initially added on branch fc-2_4_branch.\n      Sort directory entries while scanning them from disk; prevents Heisenbugs\n      file ln.orth was initially added on branch fc-2_4_branch.\n      Fix typos in orth files. Reported by Denis Jacquerye.\n      On Windows, unlink before rename. Reported by Tim Evans.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2284,
                  "startColumn": 26,
                  "endLine": 2284,
                  "endColumn": 31,
                  "snippet": {
                    "text": "Keith Packard:\n      Create fc_cachedir at install time. Bug 8157.\n      Reference patterns in FcCacheCopySet.\n      Replace gnu-specific sed command with simple grep.\n      Attempt to fix makealias usage for build on Mac OS X.\n      Accept locale environment variables that do not contain territory.\n      Merge branch 'jhcloos'\n",
                    "rendered": {
                      "text": "Keith Packard:\n      Create fc_cachedir at install time. Bug 8157.\n      Reference patterns in FcCacheCopySet.\n      Replace gnu-specific sed command with simple grep.\n      Attempt to fix makealias usage for build on Mac OS X.\n      Accept locale environment variables that do not contain territory.\n      Merge branch 'jhcloos'\n",
                      "markdown": "`Keith Packard:\n      Create fc_cachedir at install time. Bug 8157.\n      Reference patterns in FcCacheCopySet.\n      Replace gnu-specific sed command with simple grep.\n      Attempt to fix makealias usage for build on Mac OS X.\n      Accept locale environment variables that do not contain territory.\n      Merge branch 'jhcloos'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2239,
                  "startColumn": 54,
                  "endLine": 2239,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      Use explicit platform/nameid order when scanning ttf files.\n      Warn (and recover) from config file without <cachedir> elements.\n      Avoid writing uninitialized structure pad bytes to cache files.\n      Fix grep pattern in makealias to work on non-Gnu grep (bug 8368).\n      Add FcFreeTypeQueryFace external API. Bug #7311.\n      Segfault scanning non-font files. Disallow scan edit of user vars. (#8767)\n      Add space between type and formal in devel man pages (bug 8935)\n",
                    "rendered": {
                      "text": "      Use explicit platform/nameid order when scanning ttf files.\n      Warn (and recover) from config file without <cachedir> elements.\n      Avoid writing uninitialized structure pad bytes to cache files.\n      Fix grep pattern in makealias to work on non-Gnu grep (bug 8368).\n      Add FcFreeTypeQueryFace external API. Bug #7311.\n      Segfault scanning non-font files. Disallow scan edit of user vars. (#8767)\n      Add space between type and formal in devel man pages (bug 8935)\n",
                      "markdown": "`      Use explicit platform/nameid order when scanning ttf files.\n      Warn (and recover) from config file without <cachedir> elements.\n      Avoid writing uninitialized structure pad bytes to cache files.\n      Fix grep pattern in makealias to work on non-Gnu grep (bug 8368).\n      Add FcFreeTypeQueryFace external API. Bug #7311.\n      Segfault scanning non-font files. Disallow scan edit of user vars. (#8767)\n      Add space between type and formal in devel man pages (bug 8935)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2239,
                  "startColumn": 9,
                  "endLine": 2239,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      Use explicit platform/nameid order when scanning ttf files.\n      Warn (and recover) from config file without <cachedir> elements.\n      Avoid writing uninitialized structure pad bytes to cache files.\n      Fix grep pattern in makealias to work on non-Gnu grep (bug 8368).\n      Add FcFreeTypeQueryFace external API. Bug #7311.\n      Segfault scanning non-font files. Disallow scan edit of user vars. (#8767)\n      Add space between type and formal in devel man pages (bug 8935)\n",
                    "rendered": {
                      "text": "      Use explicit platform/nameid order when scanning ttf files.\n      Warn (and recover) from config file without <cachedir> elements.\n      Avoid writing uninitialized structure pad bytes to cache files.\n      Fix grep pattern in makealias to work on non-Gnu grep (bug 8368).\n      Add FcFreeTypeQueryFace external API. Bug #7311.\n      Segfault scanning non-font files. Disallow scan edit of user vars. (#8767)\n      Add space between type and formal in devel man pages (bug 8935)\n",
                      "markdown": "`      Use explicit platform/nameid order when scanning ttf files.\n      Warn (and recover) from config file without <cachedir> elements.\n      Avoid writing uninitialized structure pad bytes to cache files.\n      Fix grep pattern in makealias to work on non-Gnu grep (bug 8368).\n      Add FcFreeTypeQueryFace external API. Bug #7311.\n      Segfault scanning non-font files. Disallow scan edit of user vars. (#8767)\n      Add space between type and formal in devel man pages (bug 8935)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2198,
                  "startColumn": 65,
                  "endLine": 2198,
                  "endColumn": 71,
                  "snippet": {
                    "text": "      Leave generated headers out of distribution (bug 12734).\n      Move <cachedir> elements to the end of fonts.conf.\n      Add BRAILLE PATTERN BLANK to list of blank glyphs.\n      Replace makealias pattern with something supported by POSIX grep (bug 11083)\n      FcInit should return FcFalse when FcInitLoadConfigAndFonts fails. (bug 10976)\n      There is no U+1257 (bug 10899).\n      Spelling errors in documentation. (bug 10879).\n",
                    "rendered": {
                      "text": "      Leave generated headers out of distribution (bug 12734).\n      Move <cachedir> elements to the end of fonts.conf.\n      Add BRAILLE PATTERN BLANK to list of blank glyphs.\n      Replace makealias pattern with something supported by POSIX grep (bug 11083)\n      FcInit should return FcFalse when FcInitLoadConfigAndFonts fails. (bug 10976)\n      There is no U+1257 (bug 10899).\n      Spelling errors in documentation. (bug 10879).\n",
                      "markdown": "`      Leave generated headers out of distribution (bug 12734).\n      Move <cachedir> elements to the end of fonts.conf.\n      Add BRAILLE PATTERN BLANK to list of blank glyphs.\n      Replace makealias pattern with something supported by POSIX grep (bug 11083)\n      FcInit should return FcFalse when FcInitLoadConfigAndFonts fails. (bug 10976)\n      There is no U+1257 (bug 10899).\n      Spelling errors in documentation. (bug 10879).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2150,
                  "startColumn": 28,
                  "endLine": 2150,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      Clean up exported names in fontconfig.h.\n      Track line numbers in sgml edit tool input.\n      Typo error in function name: Inverval -> interval\n      Don't check cache file time stamps when cleaning cache dir.\n      Use FcLangDifferentTerritory instead of FcLangDifferentCountry.\n      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n",
                    "rendered": {
                      "text": "      Clean up exported names in fontconfig.h.\n      Track line numbers in sgml edit tool input.\n      Typo error in function name: Inverval -> interval\n      Don't check cache file time stamps when cleaning cache dir.\n      Use FcLangDifferentTerritory instead of FcLangDifferentCountry.\n      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n",
                      "markdown": "`      Clean up exported names in fontconfig.h.\n      Track line numbers in sgml edit tool input.\n      Typo error in function name: Inverval -> interval\n      Don't check cache file time stamps when cleaning cache dir.\n      Use FcLangDifferentTerritory instead of FcLangDifferentCountry.\n      Verify documentation covers exposed symbols.\n      Document previously undocumented functions. (bug 12963)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 2084,
                  "startColumn": 5,
                  "endLine": 2084,
                  "endColumn": 10,
                  "snippet": {
                    "text": "      Make fc-match behave better when style is unknown (bug 15332)\n      Deal with libtool 2.2 which doesn't let us use LT_ variables. (bug 15692)\n      Allow for RC versions in README update\n      git ignore doltcompile\n\nRyan Schmidt (1):\n      fontconfig build fails if \"head\" is missing or unusable (bug 14304)\n",
                    "rendered": {
                      "text": "      Make fc-match behave better when style is unknown (bug 15332)\n      Deal with libtool 2.2 which doesn't let us use LT_ variables. (bug 15692)\n      Allow for RC versions in README update\n      git ignore doltcompile\n\nRyan Schmidt (1):\n      fontconfig build fails if \"head\" is missing or unusable (bug 14304)\n",
                      "markdown": "`      Make fc-match behave better when style is unknown (bug 15332)\n      Deal with libtool 2.2 which doesn't let us use LT_ variables. (bug 15692)\n      Allow for RC versions in README update\n      git ignore doltcompile\n\nRyan Schmidt (1):\n      fontconfig build fails if \"head\" is missing or unusable (bug 14304)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1997,
                  "startColumn": 48,
                  "endLine": 1997,
                  "endColumn": 56,
                  "snippet": {
                    "text": "      Rename Avaric orthography from 'ava' to 'av' (bug #20174)\n      Rename Bambara orthography from 'bam' to 'bm' (bug #20175)\n      Rename Fulah orthography from 'ful' to 'ff' (bug #20177)\n      Change Kashmiri (ks) orthography to Arabic script (bug #20200)\n      Tighten Central Khmer (km) orthography (bug #20202)\n      Remove digits and symbols from some Indic orthographies (bug #20204)\n      Add Divehi (dv) orthography (bug #20207)\n",
                    "rendered": {
                      "text": "      Rename Avaric orthography from 'ava' to 'av' (bug #20174)\n      Rename Bambara orthography from 'bam' to 'bm' (bug #20175)\n      Rename Fulah orthography from 'ful' to 'ff' (bug #20177)\n      Change Kashmiri (ks) orthography to Arabic script (bug #20200)\n      Tighten Central Khmer (km) orthography (bug #20202)\n      Remove digits and symbols from some Indic orthographies (bug #20204)\n      Add Divehi (dv) orthography (bug #20207)\n",
                      "markdown": "`      Rename Avaric orthography from 'ava' to 'av' (bug #20174)\n      Rename Bambara orthography from 'bam' to 'bm' (bug #20175)\n      Rename Fulah orthography from 'ful' to 'ff' (bug #20177)\n      Change Kashmiri (ks) orthography to Arabic script (bug #20200)\n      Tighten Central Khmer (km) orthography (bug #20202)\n      Remove digits and symbols from some Indic orthographies (bug #20204)\n      Add Divehi (dv) orthography (bug #20207)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1960,
                  "startColumn": 46,
                  "endLine": 1960,
                  "endColumn": 54,
                  "snippet": {
                    "text": "      Add config for new Indic fonts (bug #17856)\n\nRoozbeh Pournader (60):\n      Correct Sindhi orthography to use Arabic script (bug #17140)\n      Remove Sinhala characters not in modern use (bug #19288)\n      Add Filipino orth, alias Tagalog to Filipino (bug #19846)\n      Split Mongolian orth to Mongolia and China (bug #19847)\n",
                    "rendered": {
                      "text": "      Add config for new Indic fonts (bug #17856)\n\nRoozbeh Pournader (60):\n      Correct Sindhi orthography to use Arabic script (bug #17140)\n      Remove Sinhala characters not in modern use (bug #19288)\n      Add Filipino orth, alias Tagalog to Filipino (bug #19846)\n      Split Mongolian orth to Mongolia and China (bug #19847)\n",
                      "markdown": "`      Add config for new Indic fonts (bug #17856)\n\nRoozbeh Pournader (60):\n      Correct Sindhi orthography to use Arabic script (bug #17140)\n      Remove Sinhala characters not in modern use (bug #19288)\n      Add Filipino orth, alias Tagalog to Filipino (bug #19846)\n      Split Mongolian orth to Mongolia and China (bug #19847)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1939,
                  "startColumn": 14,
                  "endLine": 1939,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      Reduce number of allocations during FcSortWalk().\n\nDan Nicholson (1):\n      Let make expand fc_cachedir/FC_CACHEDIR (bug #18675)\n\nHarald Fernengel (1):\n      Don't use variables named 'bool' (bug #18851)\n",
                    "rendered": {
                      "text": "      Reduce number of allocations during FcSortWalk().\n\nDan Nicholson (1):\n      Let make expand fc_cachedir/FC_CACHEDIR (bug #18675)\n\nHarald Fernengel (1):\n      Don't use variables named 'bool' (bug #18851)\n",
                      "markdown": "`      Reduce number of allocations during FcSortWalk().\n\nDan Nicholson (1):\n      Let make expand fc_cachedir/FC_CACHEDIR (bug #18675)\n\nHarald Fernengel (1):\n      Don't use variables named 'bool' (bug #18851)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1906,
                  "startColumn": 10,
                  "endLine": 1906,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      [fcxml] Embed 8 static FcPStack objects in FcConfigParse\n      [fcxml] Embed 64 static FcVStack objects in FcConfigParse\n      [fcxml.c] Embed a static 64-byte attr buffer in FcPStack\n      Call git tools using \"git cmd\" instead of \"git-cmd\" syntax\n      Replace 'KEITH PACKARD' with 'THE AUTHOR(S)' in license text in all files\n      [fcformat] Fix default-value handling\n      Document FcPatternFormat() format\n",
                    "rendered": {
                      "text": "      [fcxml] Embed 8 static FcPStack objects in FcConfigParse\n      [fcxml] Embed 64 static FcVStack objects in FcConfigParse\n      [fcxml.c] Embed a static 64-byte attr buffer in FcPStack\n      Call git tools using \"git cmd\" instead of \"git-cmd\" syntax\n      Replace 'KEITH PACKARD' with 'THE AUTHOR(S)' in license text in all files\n      [fcformat] Fix default-value handling\n      Document FcPatternFormat() format\n",
                      "markdown": "`      [fcxml] Embed 8 static FcPStack objects in FcConfigParse\n      [fcxml] Embed 64 static FcVStack objects in FcConfigParse\n      [fcxml.c] Embed a static 64-byte attr buffer in FcPStack\n      Call git tools using \"git cmd\" instead of \"git-cmd\" syntax\n      Replace 'KEITH PACKARD' with 'THE AUTHOR(S)' in license text in all files\n      [fcformat] Fix default-value handling\n      Document FcPatternFormat() format\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1871,
                  "startColumn": 13,
                  "endLine": 1871,
                  "endColumn": 21,
                  "snippet": {
                    "text": "      [fcfreetype] Fix typo in GB2312 encoding name string (#19845)\n      Add ICONV_LIBS to fontconfig.pc.in (#19606)\n      [win32] Fix usage of GetFullPathName()\n      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n",
                    "rendered": {
                      "text": "      [fcfreetype] Fix typo in GB2312 encoding name string (#19845)\n      Add ICONV_LIBS to fontconfig.pc.in (#19606)\n      [win32] Fix usage of GetFullPathName()\n      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n",
                      "markdown": "`      [fcfreetype] Fix typo in GB2312 encoding name string (#19845)\n      Add ICONV_LIBS to fontconfig.pc.in (#19606)\n      [win32] Fix usage of GetFullPathName()\n      [win32] Expand \"APPSHAREFONTDIR\" to ../share/fonts relative to binary location\n      [win32] Do not remove leading '\\\\' such that network paths work\n      [fccache] Make sure the cache is current when reusing from open caches\n      Update Sinhala orthography (#19288)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1846,
                  "startColumn": 35,
                  "endLine": 1846,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      Consistently use FcStat() over stat() in all places\n      Use __builtin_popcount() when available (bug #17592)\n      Fix compile with old FreeType that doesn't have FT_Select_Size() (bug #17498)\n      Implement fc-list --quiet ala grep (bug #17141)\n      [65-fonts-persian.conf] Set foundry in target=scan instead of target=font\n      Don't use identifier named complex\n      Explicitly chmod() directories (bug #18934)\n",
                    "rendered": {
                      "text": "      Consistently use FcStat() over stat() in all places\n      Use __builtin_popcount() when available (bug #17592)\n      Fix compile with old FreeType that doesn't have FT_Select_Size() (bug #17498)\n      Implement fc-list --quiet ala grep (bug #17141)\n      [65-fonts-persian.conf] Set foundry in target=scan instead of target=font\n      Don't use identifier named complex\n      Explicitly chmod() directories (bug #18934)\n",
                      "markdown": "`      Consistently use FcStat() over stat() in all places\n      Use __builtin_popcount() when available (bug #17592)\n      Fix compile with old FreeType that doesn't have FT_Select_Size() (bug #17498)\n      Implement fc-list --quiet ala grep (bug #17141)\n      [65-fonts-persian.conf] Set foundry in target=scan instead of target=font\n      Don't use identifier named complex\n      Explicitly chmod() directories (bug #18934)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1643,
                  "startColumn": 33,
                  "endLine": 1643,
                  "endColumn": 39,
                  "snippet": {
                    "text": "Behdad Esfahbod (54):\n      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n",
                    "rendered": {
                      "text": "Behdad Esfahbod (54):\n      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n",
                      "markdown": "`Behdad Esfahbod (54):\n      [fc-cache] Document -r argument in man page\n      [doc] Fix typo\n      Bug 25508 configure assumes bash > 2.0 is on system\n      Update INSTALL\n      Add note about autogen.sh to INSTALL\n      Fix doc typo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 84,
                  "endLine": 1592,
                  "snippet": {
                    "text": "      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n      Extra ',' in AC_ARG_WITH(arch causes arch to never be autodetected\n",
                    "rendered": {
                      "text": "      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n      Extra ',' in AC_ARG_WITH(arch causes arch to never be autodetected\n",
                      "markdown": "`      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n      Extra ',' in AC_ARG_WITH(arch causes arch to never be autodetected\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 57,
                  "endLine": 1591,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n",
                    "rendered": {
                      "text": "      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n",
                      "markdown": "`      Generate bzip2-compressed tarball too\n\nJeremy Huddleston (1):\n      fcarch: Check for architecture signature at compile time rather than configure time\n\nKeith Packard (3):\n      Use posix_fadvise to speed startup\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1454,
                  "startColumn": 59,
                  "endLine": 1455,
                  "snippet": {
                    "text": "      Trying to fix distcheck\n      Fix build around true/false\n      Work around Sun CPP\n      Really fix cross-compiling and building of tools this time\n      Second try to make Sun CPP happy\n      Ugh, add Tools.mk\n      Minor\n      Don't use blanks for fc-query\n",
                    "rendered": {
                      "text": "      Trying to fix distcheck\n      Fix build around true/false\n      Work around Sun CPP\n      Really fix cross-compiling and building of tools this time\n      Second try to make Sun CPP happy\n      Ugh, add Tools.mk\n      Minor\n      Don't use blanks for fc-query\n",
                      "markdown": "`      Trying to fix distcheck\n      Fix build around true/false\n      Work around Sun CPP\n      Really fix cross-compiling and building of tools this time\n      Second try to make Sun CPP happy\n      Ugh, add Tools.mk\n      Minor\n      Don't use blanks for fc-query\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1357,
                  "startColumn": 39,
                  "endLine": 1357,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      Fix fc-cache crash caused by looking up NULL object incorrectly\n      Fix FC_PRGNAME default\n      Fix readlink failure\n      Accept digits as part of OpenType script tags\n      Fix crash with FcConfigSetCurrent(NULL)\n\nChristoph J. Thompson (1):\n",
                    "rendered": {
                      "text": "      Fix fc-cache crash caused by looking up NULL object incorrectly\n      Fix FC_PRGNAME default\n      Fix readlink failure\n      Accept digits as part of OpenType script tags\n      Fix crash with FcConfigSetCurrent(NULL)\n\nChristoph J. Thompson (1):\n",
                      "markdown": "`      Fix fc-cache crash caused by looking up NULL object incorrectly\n      Fix FC_PRGNAME default\n      Fix readlink failure\n      Accept digits as part of OpenType script tags\n      Fix crash with FcConfigSetCurrent(NULL)\n\nChristoph J. Thompson (1):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1348,
                  "startColumn": 15,
                  "endLine": 1348,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nBehdad Esfahbod (12):\n      Resepct $NOCONFIGURE\n      Ensure we find the uninstalled fontconfig header\n      Copy all values from pattern to font if the font doesn't have the element\n      Minor\n      Bug 59379 - FC_PRGNAME\n",
                    "rendered": {
                      "text": "\nBehdad Esfahbod (12):\n      Resepct $NOCONFIGURE\n      Ensure we find the uninstalled fontconfig header\n      Copy all values from pattern to font if the font doesn't have the element\n      Minor\n      Bug 59379 - FC_PRGNAME\n",
                      "markdown": "`\nBehdad Esfahbod (12):\n      Resepct $NOCONFIGURE\n      Ensure we find the uninstalled fontconfig header\n      Copy all values from pattern to font if the font doesn't have the element\n      Minor\n      Bug 59379 - FC_PRGNAME\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1336,
                  "startColumn": 16,
                  "endLine": 1336,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      Bug 60783 - Add Liberation Sans Narrow to 30-metric-aliases.conf\n      Fix a typo\n      Fix a crash when the object is non-builtin object\n      Fix broken sort order with FcFontSort()\n      Fix a memory leak\n      Bug 59456 - Adding a --sysroot like option to fc-cache\n      Do not copy FC_*LANG_OBJECT even if it's not available on the pattern\n",
                    "rendered": {
                      "text": "      Bug 60783 - Add Liberation Sans Narrow to 30-metric-aliases.conf\n      Fix a typo\n      Fix a crash when the object is non-builtin object\n      Fix broken sort order with FcFontSort()\n      Fix a memory leak\n      Bug 59456 - Adding a --sysroot like option to fc-cache\n      Do not copy FC_*LANG_OBJECT even if it's not available on the pattern\n",
                      "markdown": "`      Bug 60783 - Add Liberation Sans Narrow to 30-metric-aliases.conf\n      Fix a typo\n      Fix a crash when the object is non-builtin object\n      Fix broken sort order with FcFontSort()\n      Fix a memory leak\n      Bug 59456 - Adding a --sysroot like option to fc-cache\n      Do not copy FC_*LANG_OBJECT even if it's not available on the pattern\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 16,
                  "endLine": 1073,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      Copy the real size of struct dirent\n      Rework again to copy the struct dirent\n      Hardcode the blanks in the library\n      Update the script to recognize the escaped space\n      Fix a build issue when $(srcdir) != $(builddir)\n      Don't add FC_LANG when it has \"und\"\n      Fix the array allocation\n",
                    "rendered": {
                      "text": "      Copy the real size of struct dirent\n      Rework again to copy the struct dirent\n      Hardcode the blanks in the library\n      Update the script to recognize the escaped space\n      Fix a build issue when $(srcdir) != $(builddir)\n      Don't add FC_LANG when it has \"und\"\n      Fix the array allocation\n",
                      "markdown": "`      Copy the real size of struct dirent\n      Rework again to copy the struct dirent\n      Hardcode the blanks in the library\n      Update the script to recognize the escaped space\n      Fix a build issue when $(srcdir) != $(builddir)\n      Don't add FC_LANG when it has \"und\"\n      Fix the array allocation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 1065,
                  "startColumn": 19,
                  "endLine": 1066,
                  "snippet": {
                    "text": "\nAkira TAGOH (18):\n      Fix a typo in docs\n      Add pkg.m4 to git\n      Fix a build fail on some non-POSIX platforms\n      ifdef'd the unnecessary code for win32\n      Fix pointer cast warning on win32\n      filter can be null\n",
                    "rendered": {
                      "text": "\nAkira TAGOH (18):\n      Fix a typo in docs\n      Add pkg.m4 to git\n      Fix a build fail on some non-POSIX platforms\n      ifdef'd the unnecessary code for win32\n      Fix pointer cast warning on win32\n      filter can be null\n",
                      "markdown": "`\nAkira TAGOH (18):\n      Fix a typo in docs\n      Add pkg.m4 to git\n      Fix a build fail on some non-POSIX platforms\n      ifdef'd the unnecessary code for win32\n      Fix pointer cast warning on win32\n      filter can be null\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 20,
                  "endLine": 875,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      Add more code points to und-zsye.orth\n      Keep the same behavior to the return value of FcConfigParseAndLoad\n      Do not ship fcobjshash.gperf in archive\n      Accept 4 digit script tag in FcLangNormalize().\n      Fix to work the debugging option on fc-validate\n      Add und_zmth.orth to support Math in lang\n      Polish und_zmth.orth for Libertinus Math\n",
                    "rendered": {
                      "text": "      Add more code points to und-zsye.orth\n      Keep the same behavior to the return value of FcConfigParseAndLoad\n      Do not ship fcobjshash.gperf in archive\n      Accept 4 digit script tag in FcLangNormalize().\n      Fix to work the debugging option on fc-validate\n      Add und_zmth.orth to support Math in lang\n      Polish und_zmth.orth for Libertinus Math\n",
                      "markdown": "`      Add more code points to und-zsye.orth\n      Keep the same behavior to the return value of FcConfigParseAndLoad\n      Do not ship fcobjshash.gperf in archive\n      Accept 4 digit script tag in FcLangNormalize().\n      Fix to work the debugging option on fc-validate\n      Add und_zmth.orth to support Math in lang\n      Polish und_zmth.orth for Libertinus Math\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 26,
                  "endLine": 747,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      Add a testcase for bind-mounted cachedir\n      cleanup\n      Use smaller prime for hash size\n      Fix the testcase for env not enabled PCF_CONFIG_OPTION_LONG_FAMILY_NAMES in freetype\n      thread-safe functions in fchash.c\n      Fix distcheck error\n      Fix \"make check\" fail again\n",
                    "rendered": {
                      "text": "      Add a testcase for bind-mounted cachedir\n      cleanup\n      Use smaller prime for hash size\n      Fix the testcase for env not enabled PCF_CONFIG_OPTION_LONG_FAMILY_NAMES in freetype\n      thread-safe functions in fchash.c\n      Fix distcheck error\n      Fix \"make check\" fail again\n",
                      "markdown": "`      Add a testcase for bind-mounted cachedir\n      cleanup\n      Use smaller prime for hash size\n      Fix the testcase for env not enabled PCF_CONFIG_OPTION_LONG_FAMILY_NAMES in freetype\n      thread-safe functions in fchash.c\n      Fix distcheck error\n      Fix \"make check\" fail again\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 20,
                  "endLine": 732,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      Correct debugging messages to load/scan config\n      Add the check of PCF_CONFIG_OPTION_LONG_FAMILY_NAMES back\n      Use uuid-based cache filename if uuid is assigned to dirs\n      Add new API to find out a font from current search path\n      Replace the font path in FcPattern to what it is actually located.\n      Replace the original path to the new one\n      Replace the path of subdirs in caches as well\n",
                    "rendered": {
                      "text": "      Correct debugging messages to load/scan config\n      Add the check of PCF_CONFIG_OPTION_LONG_FAMILY_NAMES back\n      Use uuid-based cache filename if uuid is assigned to dirs\n      Add new API to find out a font from current search path\n      Replace the font path in FcPattern to what it is actually located.\n      Replace the original path to the new one\n      Replace the path of subdirs in caches as well\n",
                      "markdown": "`      Correct debugging messages to load/scan config\n      Add the check of PCF_CONFIG_OPTION_LONG_FAMILY_NAMES back\n      Use uuid-based cache filename if uuid is assigned to dirs\n      Add new API to find out a font from current search path\n      Replace the font path in FcPattern to what it is actually located.\n      Replace the original path to the new one\n      Replace the path of subdirs in caches as well\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 38,
                  "endLine": 498,
                  "snippet": {
                    "text": "      Fix build issue on Win32.\n      autogen.sh: Make AUTORECONF_FLAGS overwritable\n      Ifdef'ed unnecessary code for Win32\n      Fix make check on cross-compiled env\n      Add build test for MinGW\n      Fix make distcheck error\n      Update requirement for gettext\n      Correct configure option to cross-compile\n",
                    "rendered": {
                      "text": "      Fix build issue on Win32.\n      autogen.sh: Make AUTORECONF_FLAGS overwritable\n      Ifdef'ed unnecessary code for Win32\n      Fix make check on cross-compiled env\n      Add build test for MinGW\n      Fix make distcheck error\n      Update requirement for gettext\n      Correct configure option to cross-compile\n",
                      "markdown": "`      Fix build issue on Win32.\n      autogen.sh: Make AUTORECONF_FLAGS overwritable\n      Ifdef'ed unnecessary code for Win32\n      Fix make check on cross-compiled env\n      Add build test for MinGW\n      Fix make distcheck error\n      Update requirement for gettext\n      Correct configure option to cross-compile\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 411,
                  "startColumn": 15,
                  "endLine": 411,
                  "endColumn": 24,
                  "snippet": {
                    "text": "Niklas Guertler (3):\n      Allow multiple default system font directories in the fallback config, and set them to the default dirs on Darwin.\n      Add <dir> XML tags to default values for FC_DEFAULT_FONTS on non-Darwin systems\n      Increased timeout for meson tests to 600sec to make tests work on Darwin\n\nNirbheek Chauhan (2):\n      fcatomic: Fix EXC_BAD_ACCESS on iOS ARM64\n",
                    "rendered": {
                      "text": "Niklas Guertler (3):\n      Allow multiple default system font directories in the fallback config, and set them to the default dirs on Darwin.\n      Add <dir> XML tags to default values for FC_DEFAULT_FONTS on non-Darwin systems\n      Increased timeout for meson tests to 600sec to make tests work on Darwin\n\nNirbheek Chauhan (2):\n      fcatomic: Fix EXC_BAD_ACCESS on iOS ARM64\n",
                      "markdown": "`Niklas Guertler (3):\n      Allow multiple default system font directories in the fallback config, and set them to the default dirs on Darwin.\n      Add <dir> XML tags to default values for FC_DEFAULT_FONTS on non-Darwin systems\n      Increased timeout for meson tests to 600sec to make tests work on Darwin\n\nNirbheek Chauhan (2):\n      fcatomic: Fix EXC_BAD_ACCESS on iOS ARM64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 44,
                  "endLine": 303,
                  "snippet": {
                    "text": "\nXavier Claessens (3):\n      Meson: Fallback to gperf subproject on all platforms\n      Meson: Do not wrap fccache insallation script\n      Windows: Fix symlink privilege error detection\n\nratijas (1):\n      Fix closing tag bracket typo in doc/fontconfig-user.sgml\n",
                    "rendered": {
                      "text": "\nXavier Claessens (3):\n      Meson: Fallback to gperf subproject on all platforms\n      Meson: Do not wrap fccache insallation script\n      Windows: Fix symlink privilege error detection\n\nratijas (1):\n      Fix closing tag bracket typo in doc/fontconfig-user.sgml\n",
                      "markdown": "`\nXavier Claessens (3):\n      Meson: Fallback to gperf subproject on all platforms\n      Meson: Do not wrap fccache insallation script\n      Windows: Fix symlink privilege error detection\n\nratijas (1):\n      Fix closing tag bracket typo in doc/fontconfig-user.sgml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 25,
                  "endLine": 296,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      meson: remove unused stdin_wrapper.py script\n      fcformat: fix compiler warnings with clang on Android\n      ci: add meson android aarch64 build\n      meson: error out in script if gperf preprocessing failed\n      meson: fix cross-compilation issues with gperf header file preprocessing\n      meson: fix subproject build regression\n\n",
                    "rendered": {
                      "text": "      meson: remove unused stdin_wrapper.py script\n      fcformat: fix compiler warnings with clang on Android\n      ci: add meson android aarch64 build\n      meson: error out in script if gperf preprocessing failed\n      meson: fix cross-compilation issues with gperf header file preprocessing\n      meson: fix subproject build regression\n\n",
                      "markdown": "`      meson: remove unused stdin_wrapper.py script\n      fcformat: fix compiler warnings with clang on Android\n      ci: add meson android aarch64 build\n      meson: error out in script if gperf preprocessing failed\n      meson: fix cross-compilation issues with gperf header file preprocessing\n      meson: fix subproject build regression\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 43,
                  "endLine": 294,
                  "snippet": {
                    "text": "      Fix stripping whitespace from end of family in FcPatternAddFullname\n\nTim-Philipp Müller (6):\n      meson: remove unused stdin_wrapper.py script\n      fcformat: fix compiler warnings with clang on Android\n      ci: add meson android aarch64 build\n      meson: error out in script if gperf preprocessing failed\n      meson: fix cross-compilation issues with gperf header file preprocessing\n",
                    "rendered": {
                      "text": "      Fix stripping whitespace from end of family in FcPatternAddFullname\n\nTim-Philipp Müller (6):\n      meson: remove unused stdin_wrapper.py script\n      fcformat: fix compiler warnings with clang on Android\n      ci: add meson android aarch64 build\n      meson: error out in script if gperf preprocessing failed\n      meson: fix cross-compilation issues with gperf header file preprocessing\n",
                      "markdown": "`      Fix stripping whitespace from end of family in FcPatternAddFullname\n\nTim-Philipp Müller (6):\n      meson: remove unused stdin_wrapper.py script\n      fcformat: fix compiler warnings with clang on Android\n      ci: add meson android aarch64 build\n      meson: error out in script if gperf preprocessing failed\n      meson: fix cross-compilation issues with gperf header file preprocessing\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 48,
                  "endLine": 247,
                  "snippet": {
                    "text": "      Remove Bugzilla references\n      Fix run-test.sh to work with BSD mktemp\n      Restore fcatomic compatibility with Mac OS X 10.4.\n      Fix FC_DEFAULT_FONTS on macOS and with BSD sed\n\n2.13.94 (2.14 RC4)\n\nAkira TAGOH (10):\n",
                    "rendered": {
                      "text": "      Remove Bugzilla references\n      Fix run-test.sh to work with BSD mktemp\n      Restore fcatomic compatibility with Mac OS X 10.4.\n      Fix FC_DEFAULT_FONTS on macOS and with BSD sed\n\n2.13.94 (2.14 RC4)\n\nAkira TAGOH (10):\n",
                      "markdown": "`      Remove Bugzilla references\n      Fix run-test.sh to work with BSD mktemp\n      Restore fcatomic compatibility with Mac OS X 10.4.\n      Fix FC_DEFAULT_FONTS on macOS and with BSD sed\n\n2.13.94 (2.14 RC4)\n\nAkira TAGOH (10):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 34,
                  "endLine": 243,
                  "snippet": {
                    "text": "      Ensure config.h is always included before stdlib headers\n\nRyan Schmidt (5):\n      Avoid PCRE syntax when using grep\n      Remove Bugzilla references\n      Fix run-test.sh to work with BSD mktemp\n      Restore fcatomic compatibility with Mac OS X 10.4.\n      Fix FC_DEFAULT_FONTS on macOS and with BSD sed\n",
                    "rendered": {
                      "text": "      Ensure config.h is always included before stdlib headers\n\nRyan Schmidt (5):\n      Avoid PCRE syntax when using grep\n      Remove Bugzilla references\n      Fix run-test.sh to work with BSD mktemp\n      Restore fcatomic compatibility with Mac OS X 10.4.\n      Fix FC_DEFAULT_FONTS on macOS and with BSD sed\n",
                      "markdown": "`      Ensure config.h is always included before stdlib headers\n\nRyan Schmidt (5):\n      Avoid PCRE syntax when using grep\n      Remove Bugzilla references\n      Fix run-test.sh to work with BSD mktemp\n      Restore fcatomic compatibility with Mac OS X 10.4.\n      Fix FC_DEFAULT_FONTS on macOS and with BSD sed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 14,
                  "endLine": 135,
                  "endColumn": 20,
                  "snippet": {
                    "text": "      Use the latest stable release image for CI for mingw\n      Real fix of 91114d18c\n      Fix test cases for wrong use of remap-dir\n      Add back sort command\n      Add config files to enable/disable antialias\n      Enable 10-sub-pixel-rgb.conf by default\n\n",
                    "rendered": {
                      "text": "      Use the latest stable release image for CI for mingw\n      Real fix of 91114d18c\n      Fix test cases for wrong use of remap-dir\n      Add back sort command\n      Add config files to enable/disable antialias\n      Enable 10-sub-pixel-rgb.conf by default\n\n",
                      "markdown": "`      Use the latest stable release image for CI for mingw\n      Real fix of 91114d18c\n      Fix test cases for wrong use of remap-dir\n      Add back sort command\n      Add config files to enable/disable antialias\n      Enable 10-sub-pixel-rgb.conf by default\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Ignore LC_CTYPE if set to \"UTF-8\"\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nlilinjie (1):\n      fix typo\n",
                    "rendered": {
                      "text": "      Ignore LC_CTYPE if set to \"UTF-8\"\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nlilinjie (1):\n      fix typo\n",
                      "markdown": "`      Ignore LC_CTYPE if set to \"UTF-8\"\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nlilinjie (1):\n      fix typo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 29,
                  "endLine": 118,
                  "endColumn": 34,
                  "snippet": {
                    "text": "      meson: modify gperf test to remove sh dependency\n\nJason Francis (1):\n      meson: Update freetype2 git repository to upstream\n\nJean Abou Samra (1):\n      Ignore LC_CTYPE if set to \"UTF-8\"\n",
                    "rendered": {
                      "text": "      meson: modify gperf test to remove sh dependency\n\nJason Francis (1):\n      meson: Update freetype2 git repository to upstream\n\nJean Abou Samra (1):\n      Ignore LC_CTYPE if set to \"UTF-8\"\n",
                      "markdown": "`      meson: modify gperf test to remove sh dependency\n\nJason Francis (1):\n      meson: Update freetype2 git repository to upstream\n\nJean Abou Samra (1):\n      Ignore LC_CTYPE if set to \"UTF-8\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/NEWS"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 5,
                  "endLine": 70,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      Change index type to 16 bit and bump cache version to 9\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nSefa Eyeoglu (1):\n      Add optional 11-lcdfilter-none configuration\n",
                    "rendered": {
                      "text": "      Change index type to 16 bit and bump cache version to 9\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nSefa Eyeoglu (1):\n      Add optional 11-lcdfilter-none configuration\n",
                      "markdown": "`      Change index type to 16 bit and bump cache version to 9\n\nOndrej Balaz (1):\n      Expand ~ in glob\n\nSefa Eyeoglu (1):\n      Add optional 11-lcdfilter-none configuration\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-bz106632.c"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 33,
                  "endLine": 274,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    }\n    FcFontSetDestroy (fs);\n    fprintf (stderr, \"D: Copying %s to %s\\n\", FONTFILE, fontdir);\n    snprintf (cmd, 512, \"sleep 1; cp -a %s %s; sleep 1\", FONTFILE, fontdir);\n    (void) system (cmd);\n    fprintf (stderr, \"D: Reinitializing\\n\");\n    if (FcConfigUptoDate(config))\n",
                    "rendered": {
                      "text": "    }\n    FcFontSetDestroy (fs);\n    fprintf (stderr, \"D: Copying %s to %s\\n\", FONTFILE, fontdir);\n    snprintf (cmd, 512, \"sleep 1; cp -a %s %s; sleep 1\", FONTFILE, fontdir);\n    (void) system (cmd);\n    fprintf (stderr, \"D: Reinitializing\\n\");\n    if (FcConfigUptoDate(config))\n",
                      "markdown": "`    }\n    FcFontSetDestroy (fs);\n    fprintf (stderr, \"D: Copying %s to %s\\n\", FONTFILE, fontdir);\n    snprintf (cmd, 512, \"sleep 1; cp -a %s %s; sleep 1\", FONTFILE, fontdir);\n    (void) system (cmd);\n    fprintf (stderr, \"D: Reinitializing\\n\");\n    if (FcConfigUptoDate(config))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-bz106632.c"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 33,
                  "endLine": 196,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    mkdir_p ((const char *) cachedir);\n\n    fprintf (stderr, \"D: Copying %s to %s\\n\", FONTFILE, fontdir);\n    snprintf (cmd, 512, \"sleep 1; cp -a %s %s; sleep 1\", FONTFILE, fontdir);\n    (void) system (cmd);\n\n    fprintf (stderr, \"D: Loading a config\\n\");\n",
                    "rendered": {
                      "text": "    mkdir_p ((const char *) cachedir);\n\n    fprintf (stderr, \"D: Copying %s to %s\\n\", FONTFILE, fontdir);\n    snprintf (cmd, 512, \"sleep 1; cp -a %s %s; sleep 1\", FONTFILE, fontdir);\n    (void) system (cmd);\n\n    fprintf (stderr, \"D: Loading a config\\n\");\n",
                      "markdown": "`    mkdir_p ((const char *) cachedir);\n\n    fprintf (stderr, \"D: Copying %s to %s\\n\", FONTFILE, fontdir);\n    snprintf (cmd, 512, \"sleep 1; cp -a %s %s; sleep 1\", FONTFILE, fontdir);\n    (void) system (cmd);\n\n    fprintf (stderr, \"D: Loading a config\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-bz106632.c"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 54,
                  "endLine": 82,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                    "rendered": {
                      "text": "    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n",
                      "markdown": "`    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    free (parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/test-bz106632.c"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 32,
                  "endLine": 80,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                    "rendered": {
                      "text": "    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n",
                      "markdown": "`    if (!parent)\n\treturn FcFalse;\n    if (access (parent, F_OK) == 0)\n\tret = mkdir (dir, 0755) == 0 && chmod (dir, 0755) == 0;\n    else if (access (parent, F_OK) == -1)\n\tret = mkdir_p (parent) && (mkdir (dir, 0755) == 0) && chmod (dir, 0755) == 0;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 32,
                  "endLine": 95,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\techo\n\techo \"You must have autoreconf installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n\n",
                    "rendered": {
                      "text": "\techo\n\techo \"You must have autoreconf installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n\n",
                      "markdown": "`\techo\n\techo \"You must have autoreconf installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 32,
                  "endLine": 88,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\techo\n\techo \"You must have autopoint installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n($AUTORECONF --version) < /dev/null > /dev/null 2>&1 || {\n",
                    "rendered": {
                      "text": "\techo\n\techo \"You must have autopoint installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n($AUTORECONF --version) < /dev/null > /dev/null 2>&1 || {\n",
                      "markdown": "`\techo\n\techo \"You must have autopoint installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n($AUTORECONF --version) < /dev/null > /dev/null 2>&1 || {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 32,
                  "endLine": 81,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\techo\n\techo \"You must have gettext installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at  ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n($AUTOPOINT --version) < /dev/null > /dev/null 2>&1 || {\n",
                    "rendered": {
                      "text": "\techo\n\techo \"You must have gettext installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at  ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n($AUTOPOINT --version) < /dev/null > /dev/null 2>&1 || {\n",
                      "markdown": "`\techo\n\techo \"You must have gettext installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at  ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n($AUTOPOINT --version) < /dev/null > /dev/null 2>&1 || {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 32,
                  "endLine": 74,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\techo\n\techo \"You must have libtool 1.4 installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\nfi\n($GETTEXTIZE --version) < /dev/null > /dev/null 2>&1 || {\n",
                    "rendered": {
                      "text": "\techo\n\techo \"You must have libtool 1.4 installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\nfi\n($GETTEXTIZE --version) < /dev/null > /dev/null 2>&1 || {\n",
                      "markdown": "`\techo\n\techo \"You must have libtool 1.4 installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution,\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\nfi\n($GETTEXTIZE --version) < /dev/null > /dev/null 2>&1 || {\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 32,
                  "endLine": 57,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\techo\n\techo \"You must have gperf installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution.\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n\n",
                    "rendered": {
                      "text": "\techo\n\techo \"You must have gperf installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution.\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n\n",
                      "markdown": "`\techo\n\techo \"You must have gperf installed to compile $PROJECT.\"\n\techo \"Install the appropriate package for your distribution.\"\n\techo \"or get the source tarball at ftp://ftp.gnu.org/pub/gnu/\"\n\tDIE=1\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 78,
                  "endLine": 110,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\nif test -z \"$AUTOGEN_SUBDIR_MODE\" -a -z \"$NOCONFIGURE\"; then\n        if test -z \"$*\"; then\n                echo \"I am going to run ./configure with no arguments - if you wish \"\n                echo \"to pass any to it, please specify them on the $0 command line.\"\n        fi\nfi\n",
                    "rendered": {
                      "text": "\nif test -z \"$AUTOGEN_SUBDIR_MODE\" -a -z \"$NOCONFIGURE\"; then\n        if test -z \"$*\"; then\n                echo \"I am going to run ./configure with no arguments - if you wish \"\n                echo \"to pass any to it, please specify them on the $0 command line.\"\n        fi\nfi\n",
                      "markdown": "`\nif test -z \"$AUTOGEN_SUBDIR_MODE\" -a -z \"$NOCONFIGURE\"; then\n        if test -z \"$*\"; then\n                echo \"I am going to run ./configure with no arguments - if you wish \"\n                echo \"to pass any to it, please specify them on the $0 command line.\"\n        fi\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 24,
                  "endLine": 104,
                  "endColumn": 32,
                  "snippet": {
                    "text": "fi\n\ntest $TEST_TYPE $FILE || {\n\techo \"You must run this script in the top-level $PROJECT directory\"\n\texit 1\n}\n\n",
                    "rendered": {
                      "text": "fi\n\ntest $TEST_TYPE $FILE || {\n\techo \"You must run this script in the top-level $PROJECT directory\"\n\texit 1\n}\n\n",
                      "markdown": "`fi\n\ntest $TEST_TYPE $FILE || {\n\techo \"You must run this script in the top-level $PROJECT directory\"\n\texit 1\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/autogen.sh"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 41,
                  "endLine": 63,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nhave_libtool=false\nif $LIBTOOLIZE --version < /dev/null > /dev/null 2>&1 ; then\n\tlibtool_version=`$LIBTOOLIZE --version | sed 's/^.* \\([0-9][.][0-9.]*\\)[^ ]*$/\\1/'`\n\tcase $libtool_version in\n\t    1.4*|1.5*|1.6*|1.7*|2*)\n\t\thave_libtool=true\n",
                    "rendered": {
                      "text": "\nhave_libtool=false\nif $LIBTOOLIZE --version < /dev/null > /dev/null 2>&1 ; then\n\tlibtool_version=`$LIBTOOLIZE --version | sed 's/^.* \\([0-9][.][0-9.]*\\)[^ ]*$/\\1/'`\n\tcase $libtool_version in\n\t    1.4*|1.5*|1.6*|1.7*|2*)\n\t\thave_libtool=true\n",
                      "markdown": "`\nhave_libtool=false\nif $LIBTOOLIZE --version < /dev/null > /dev/null 2>&1 ; then\n\tlibtool_version=`$LIBTOOLIZE --version | sed 's/^.* \\([0-9][.][0-9.]*\\)[^ ]*$/\\1/'`\n\tcase $libtool_version in\n\t    1.4*|1.5*|1.6*|1.7*|2*)\n\t\thave_libtool=true\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fontconfig-zip.in"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 60,
                  "endLine": 4,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# Build distribution zipfiles for fontconfig on Win32. (This script\n# obviously needs to be run in Cygwin or similar.) Separate runtime\n# and developer zipfiles.\n\nZIP=/tmp/fontconfig-@VERSION@.zip\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# Build distribution zipfiles for fontconfig on Win32. (This script\n# obviously needs to be run in Cygwin or similar.) Separate runtime\n# and developer zipfiles.\n\nZIP=/tmp/fontconfig-@VERSION@.zip\n",
                      "markdown": "`#!/bin/sh\n\n# Build distribution zipfiles for fontconfig on Win32. (This script\n# obviously needs to be run in Cygwin or similar.) Separate runtime\n# and developer zipfiles.\n\nZIP=/tmp/fontconfig-@VERSION@.zip\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-list/fc-list.sgml"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 22,
                  "endLine": 212,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-list/fc-list.sgml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-pattern/fc-pattern.sgml"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 22,
                  "endLine": 189,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-pattern/fc-pattern.sgml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-cache/fc-cache.sgml"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 22,
                  "endLine": 234,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-cache/fc-cache.sgml"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 42,
                  "endLine": 202,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        <listitem>\n          <para>These files are generated by <command>&dhpackage;</command>\n            and contain maps from file names to font properties. They are\n            read by the fontconfig library at application startup to locate\n            appropriate fonts.</para>\n        </listitem>\n      </varlistentry>\n",
                    "rendered": {
                      "text": "        <listitem>\n          <para>These files are generated by <command>&dhpackage;</command>\n            and contain maps from file names to font properties. They are\n            read by the fontconfig library at application startup to locate\n            appropriate fonts.</para>\n        </listitem>\n      </varlistentry>\n",
                      "markdown": "`        <listitem>\n          <para>These files are generated by <command>&dhpackage;</command>\n            and contain maps from file names to font properties. They are\n            read by the fontconfig library at application startup to locate\n            appropriate fonts.</para>\n        </listitem>\n      </varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-cache/fc-cache.sgml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 44,
                  "endLine": 15,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 22,
                  "endLine": 23,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\necho \\\n'Library Export\t\t\t\t\t\t\tDocumentation'\ndiff -y $header $doc | grep '[<>]'\nexit 1\n",
                    "rendered": {
                      "text": "\necho \\\n'Library Export\t\t\t\t\t\t\tDocumentation'\ndiff -y $header $doc | grep '[<>]'\nexit 1\n",
                      "markdown": "`\necho \\\n'Library Export\t\t\t\t\t\t\tDocumentation'\ndiff -y $header $doc | grep '[<>]'\nexit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 36,
                  "endLine": 23,
                  "endColumn": 5,
                  "snippet": {
                    "text": "fi\n\necho \\\n'Library Export\t\t\t\t\t\t\tDocumentation'\ndiff -y $header $doc | grep '[<>]'\nexit 1\n",
                    "rendered": {
                      "text": "fi\n\necho \\\n'Library Export\t\t\t\t\t\t\tDocumentation'\ndiff -y $header $doc | grep '[<>]'\nexit 1\n",
                      "markdown": "`fi\n\necho \\\n'Library Export\t\t\t\t\t\t\tDocumentation'\ndiff -y $header $doc | grep '[<>]'\nexit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 15,
                  "endColumn": 5,
                  "snippet": {
                    "text": " sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\nif cmp $doc $header > /dev/null; then\n\texit 0\n",
                    "rendered": {
                      "text": " sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\nif cmp $doc $header > /dev/null; then\n\texit 0\n",
                      "markdown": "` sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\nif cmp $doc $header > /dev/null; then\n\texit 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 42,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": " sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\nif cmp $doc $header > /dev/null; then\n",
                    "rendered": {
                      "text": " sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\nif cmp $doc $header > /dev/null; then\n",
                      "markdown": "` sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\nif cmp $doc $header > /dev/null; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 13,
                  "endColumn": 5,
                  "snippet": {
                    "text": " cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\n",
                    "rendered": {
                      "text": " cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\n",
                      "markdown": "` cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\nsort -u > $doc\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 6,
                  "snippet": {
                    "text": " grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\n",
                    "rendered": {
                      "text": " grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\n",
                      "markdown": "` grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\nawk '{print $2}' |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "endColumn": 5,
                  "snippet": {
                    "text": "cat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\n",
                    "rendered": {
                      "text": "cat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\n",
                      "markdown": "`cat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\ngrep '@FUNC[+]*@' $top_srcdir/doc/*.fncs |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 9,
                  "endLine": 9,
                  "endColumn": 5,
                  "snippet": {
                    "text": "(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\n",
                    "rendered": {
                      "text": "(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\n",
                      "markdown": "`(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 19,
                  "endLine": 8,
                  "endColumn": 24,
                  "snippet": {
                    "text": "top_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n",
                    "rendered": {
                      "text": "top_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n",
                      "markdown": "`top_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "top_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n",
                    "rendered": {
                      "text": "top_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n",
                      "markdown": "`top_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n sort -u > $header\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 33,
                  "endLine": 7,
                  "endColumn": 39,
                  "snippet": {
                    "text": "trap \"rm $header $doc\"  0 1 15\ntop_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n",
                    "rendered": {
                      "text": "trap \"rm $header $doc\"  0 1 15\ntop_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n",
                      "markdown": "`trap \"rm $header $doc\"  0 1 15\ntop_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/check-missing-doc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "doc=fontconfig-doc\ntrap \"rm $header $doc\"  0 1 15\ntop_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n",
                    "rendered": {
                      "text": "doc=fontconfig-doc\ntrap \"rm $header $doc\"  0 1 15\ntop_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n",
                      "markdown": "`doc=fontconfig-doc\ntrap \"rm $header $doc\"  0 1 15\ntop_srcdir=${top_srcdir-\"..\"}\n(\ncat $top_srcdir/fontconfig/*.h  | grep '^Fc' | \n grep -v FcPublic | sed 's/[^a-zA-Z0-9].*//';\n cat $top_srcdir/fontconfig/*.h  | \n sed -n 's/#define \\(Fc[a-zA-Z]*\\)(.*$/\\1/p') |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 879,
                  "startColumn": 10,
                  "endLine": 879,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  </para>\n  <para>\n<emphasis>FONTCONFIG_USE_MMAP</emphasis>\nis used to control the use of mmap(2) for the cache files if available. this take a boolean value. fontconfig will checks if the cache files are stored on the filesystem that is safe to use mmap(2). explicitly setting this environment variable will causes skipping this check and enforce to use or not use mmap(2) anyway.\n  </para>\n  <para>\n<emphasis>SOURCE_DATE_EPOCH</emphasis>\n",
                    "rendered": {
                      "text": "  </para>\n  <para>\n<emphasis>FONTCONFIG_USE_MMAP</emphasis>\nis used to control the use of mmap(2) for the cache files if available. this take a boolean value. fontconfig will checks if the cache files are stored on the filesystem that is safe to use mmap(2). explicitly setting this environment variable will causes skipping this check and enforce to use or not use mmap(2) anyway.\n  </para>\n  <para>\n<emphasis>SOURCE_DATE_EPOCH</emphasis>\n",
                      "markdown": "`  </para>\n  <para>\n<emphasis>FONTCONFIG_USE_MMAP</emphasis>\nis used to control the use of mmap(2) for the cache files if available. this take a boolean value. fontconfig will checks if the cache files are stored on the filesystem that is safe to use mmap(2). explicitly setting this environment variable will causes skipping this check and enforce to use or not use mmap(2) anyway.\n  </para>\n  <para>\n<emphasis>SOURCE_DATE_EPOCH</emphasis>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 818,
                  "startColumn": 33,
                  "endLine": 818,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  <para>\n<emphasis>fonts.conf</emphasis>\ncontains configuration information for the fontconfig library\nconsisting of directories to look at for font information as well as\ninstructions on editing program specified font patterns before attempting to\nmatch the available fonts.  It is in XML format.\n  </para>\n",
                    "rendered": {
                      "text": "  <para>\n<emphasis>fonts.conf</emphasis>\ncontains configuration information for the fontconfig library\nconsisting of directories to look at for font information as well as\ninstructions on editing program specified font patterns before attempting to\nmatch the available fonts.  It is in XML format.\n  </para>\n",
                      "markdown": "`  <para>\n<emphasis>fonts.conf</emphasis>\ncontains configuration information for the fontconfig library\nconsisting of directories to look at for font information as well as\ninstructions on editing program specified font patterns before attempting to\nmatch the available fonts.  It is in XML format.\n  </para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 18,
                  "endLine": 498,
                  "endColumn": 22,
                  "snippet": {
                    "text": "an Unicode code point or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;langset&gt;</literal></title><para>\nThis element holds at least one <literal>&lt;string&gt;</literal> element of\na RFC-3066-style languages or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;name&gt;</literal></title><para>\n",
                    "rendered": {
                      "text": "an Unicode code point or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;langset&gt;</literal></title><para>\nThis element holds at least one <literal>&lt;string&gt;</literal> element of\na RFC-3066-style languages or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;name&gt;</literal></title><para>\n",
                      "markdown": "`an Unicode code point or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;langset&gt;</literal></title><para>\nThis element holds at least one <literal>&lt;string&gt;</literal> element of\na RFC-3066-style languages or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;name&gt;</literal></title><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 18,
                  "endLine": 494,
                  "endColumn": 22,
                  "snippet": {
                    "text": "representation.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;charset&gt;</literal></title><para>\nThis element holds at least one <literal>&lt;int&gt;</literal> element of\nan Unicode code point or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;langset&gt;</literal></title><para>\n",
                    "rendered": {
                      "text": "representation.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;charset&gt;</literal></title><para>\nThis element holds at least one <literal>&lt;int&gt;</literal> element of\nan Unicode code point or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;langset&gt;</literal></title><para>\n",
                      "markdown": "`representation.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;charset&gt;</literal></title><para>\nThis element holds at least one <literal>&lt;int&gt;</literal> element of\nan Unicode code point or more.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;langset&gt;</literal></title><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 74,
                  "endLine": 486,
                  "endColumn": 3,
                  "snippet": {
                    "text": "instead of -.5).\n  </para></refsect2>\n  <refsect2><title><literal>&lt;matrix&gt;</literal></title><para>\nThis element holds four numerical expressions of an affine transformation.\nAt their simplest these will be four <literal>&lt;double&gt;</literal> elements\nbut they can also be more involved expressions.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;range&gt;</literal></title><para>\n",
                    "rendered": {
                      "text": "instead of -.5).\n  </para></refsect2>\n  <refsect2><title><literal>&lt;matrix&gt;</literal></title><para>\nThis element holds four numerical expressions of an affine transformation.\nAt their simplest these will be four <literal>&lt;double&gt;</literal> elements\nbut they can also be more involved expressions.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;range&gt;</literal></title><para>\n",
                      "markdown": "`instead of -.5).\n  </para></refsect2>\n  <refsect2><title><literal>&lt;matrix&gt;</literal></title><para>\nThis element holds four numerical expressions of an affine transformation.\nAt their simplest these will be four <literal>&lt;double&gt;</literal> elements\nbut they can also be more involved expressions.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;range&gt;</literal></title><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 54,
                  "endLine": 471,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n    </programlisting>\n",
                    "rendered": {
                      "text": "\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n    </programlisting>\n",
                      "markdown": "`\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n    </programlisting>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 30,
                  "endLine": 471,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n    </programlisting>\n",
                    "rendered": {
                      "text": "\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n    </programlisting>\n",
                      "markdown": "`\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n    </programlisting>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 54,
                  "endLine": 470,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n",
                    "rendered": {
                      "text": "\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n",
                      "markdown": "`\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n\"delete_all\"            Delete all values       Delete all values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 54,
                  "endLine": 469,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                    "rendered": {
                      "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                      "markdown": "`\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 30,
                  "endLine": 469,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                    "rendered": {
                      "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                      "markdown": "`\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 54,
                  "endLine": 468,
                  "endColumn": 58,
                  "snippet": {
                    "text": "---------------------------------------------------------------------\n\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n",
                    "rendered": {
                      "text": "---------------------------------------------------------------------\n\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n",
                      "markdown": "`---------------------------------------------------------------------\n\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 58,
                  "endLine": 456,
                  "endColumn": 62,
                  "snippet": {
                    "text": "  </para></refsect2>\n  <refsect2><title><literal>&lt;edit name=\"property\" mode=\"assign\" binding=\"weak\"&gt;</literal></title><para>\nThis element contains a list of expression elements (any of the value or\noperator elements).  The expression elements are evaluated at run-time and\nmodify the property \"property\".  The modification depends on whether\n\"property\" was matched by one of the associated <literal>&lt;test&gt;</literal> elements, if so, the\nmodification may affect the first matched value.  Any values inserted into\n",
                    "rendered": {
                      "text": "  </para></refsect2>\n  <refsect2><title><literal>&lt;edit name=\"property\" mode=\"assign\" binding=\"weak\"&gt;</literal></title><para>\nThis element contains a list of expression elements (any of the value or\noperator elements).  The expression elements are evaluated at run-time and\nmodify the property \"property\".  The modification depends on whether\n\"property\" was matched by one of the associated <literal>&lt;test&gt;</literal> elements, if so, the\nmodification may affect the first matched value.  Any values inserted into\n",
                      "markdown": "`  </para></refsect2>\n  <refsect2><title><literal>&lt;edit name=\"property\" mode=\"assign\" binding=\"weak\"&gt;</literal></title><para>\nThis element contains a list of expression elements (any of the value or\noperator elements).  The expression elements are evaluated at run-time and\nmodify the property \"property\".  The modification depends on whether\n\"property\" was matched by one of the associated <literal>&lt;test&gt;</literal> elements, if so, the\nmodification may affect the first matched value.  Any values inserted into\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 125,
                  "endLine": 330,
                  "endColumn": 129,
                  "snippet": {
                    "text": "ix. please see XDG Base Directory Specification for more details. If 'prefix' is set to \"relative\", the path of current file will be added prior to the value.\n  </para><para>\n'salt' property affects to determine cache filename. this is useful for example when having different fonts sets on same path at container and share fonts from host on different font path.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;cachedir prefix=\"default\"&gt;</literal></title><para>\nThis element contains a directory name that is supposed to be stored or read\nthe cache of font information.  If multiple elements are",
                    "rendered": {
                      "text": "ix. please see XDG Base Directory Specification for more details. If 'prefix' is set to \"relative\", the path of current file will be added prior to the value.\n  </para><para>\n'salt' property affects to determine cache filename. this is useful for example when having different fonts sets on same path at container and share fonts from host on different font path.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;cachedir prefix=\"default\"&gt;</literal></title><para>\nThis element contains a directory name that is supposed to be stored or read\nthe cache of font information.  If multiple elements are",
                      "markdown": "`ix. please see XDG Base Directory Specification for more details. If 'prefix' is set to \"relative\", the path of current file will be added prior to the value.\n  </para><para>\n'salt' property affects to determine cache filename. this is useful for example when having different fonts sets on same path at container and share fonts from host on different font path.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;cachedir prefix=\"default\"&gt;</literal></title><para>\nThis element contains a directory name that is supposed to be stored or read\nthe cache of font information.  If multiple elements are`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 55,
                  "endLine": 263,
                  "endColumn": 59,
                  "snippet": {
                    "text": "MATCH            1    Brief information about font matching\nMATCHV           2    Extensive font matching information\nEDIT             4    Monitor match/test/edit execution\nFONTSET          8    Track loading of font information at startup\nCACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\n",
                    "rendered": {
                      "text": "MATCH            1    Brief information about font matching\nMATCHV           2    Extensive font matching information\nEDIT             4    Monitor match/test/edit execution\nFONTSET          8    Track loading of font information at startup\nCACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\n",
                      "markdown": "`MATCH            1    Brief information about font matching\nMATCHV           2    Extensive font matching information\nEDIT             4    Monitor match/test/edit execution\nFONTSET          8    Track loading of font information at startup\nCACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 20,
                  "endLine": 668,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  &lt;!--\n    Alias well known font names to available TrueType fonts.\n    These substitute TrueType faces for similar Type1\n    faces to improve screen appearance.\n  --&gt;\n  &lt;alias&gt;\n    &lt;family&gt;Times&lt;/family&gt;\n",
                    "rendered": {
                      "text": "  &lt;!--\n    Alias well known font names to available TrueType fonts.\n    These substitute TrueType faces for similar Type1\n    faces to improve screen appearance.\n  --&gt;\n  &lt;alias&gt;\n    &lt;family&gt;Times&lt;/family&gt;\n",
                      "markdown": "`  &lt;!--\n    Alias well known font names to available TrueType fonts.\n    These substitute TrueType faces for similar Type1\n    faces to improve screen appearance.\n  --&gt;\n  &lt;alias&gt;\n    &lt;family&gt;Times&lt;/family&gt;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 615,
                  "startColumn": 3,
                  "endLine": 615,
                  "endColumn": 9,
                  "snippet": {
                    "text": "&lt;!-- &confdir;/fonts.conf file to configure system font access --&gt;\n&lt;fontconfig&gt;\n  &lt;!--\n    Find fonts in these directories\n  --&gt;\n  &lt;dir&gt;/usr/share/fonts&lt;/dir&gt;\n  &lt;dir&gt;/usr/X11R6/lib/X11/fonts&lt;/dir&gt;\n",
                    "rendered": {
                      "text": "&lt;!-- &confdir;/fonts.conf file to configure system font access --&gt;\n&lt;fontconfig&gt;\n  &lt;!--\n    Find fonts in these directories\n  --&gt;\n  &lt;dir&gt;/usr/share/fonts&lt;/dir&gt;\n  &lt;dir&gt;/usr/X11R6/lib/X11/fonts&lt;/dir&gt;\n",
                      "markdown": "`&lt;!-- &confdir;/fonts.conf file to configure system font access --&gt;\n&lt;fontconfig&gt;\n  &lt;!--\n    Find fonts in these directories\n  --&gt;\n  &lt;dir&gt;/usr/share/fonts&lt;/dir&gt;\n  &lt;dir&gt;/usr/X11R6/lib/X11/fonts&lt;/dir&gt;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 57,
                  "endLine": 469,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                    "rendered": {
                      "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                      "markdown": "`\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 33,
                  "endLine": 469,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                    "rendered": {
                      "text": "\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n",
                      "markdown": "`\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n\"delete\"                Delete matching value   Delete all values\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 57,
                  "endLine": 468,
                  "endColumn": 63,
                  "snippet": {
                    "text": "---------------------------------------------------------------------\n\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n",
                    "rendered": {
                      "text": "---------------------------------------------------------------------\n\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n",
                      "markdown": "`---------------------------------------------------------------------\n\"assign\"                Replace matching value  Replace all values\n\"assign_replace\"        Replace all values      Replace all values\n\"prepend\"               Insert before matching  Insert at head of list\n\"prepend_first\"         Insert at head of list  Insert at head of list\n\"append\"                Append after matching   Append at end of list\n\"append_last\"           Append at end of list   Append at end of list\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 11,
                  "endLine": 374,
                  "endColumn": 18,
                  "snippet": {
                    "text": "This element contains a directory name where will be mapped\nas the path 'as-path' in cached information.\nThis is useful if the directory name is an alias\n(via a bind mount or symlink) to another directory in the system for\nwhich cached font information is likely to exist.\n  </para><para>\n'salt' property affects to determine cache filename as same as <literal>&lt;dir&gt;</literal> element.\n",
                    "rendered": {
                      "text": "This element contains a directory name where will be mapped\nas the path 'as-path' in cached information.\nThis is useful if the directory name is an alias\n(via a bind mount or symlink) to another directory in the system for\nwhich cached font information is likely to exist.\n  </para><para>\n'salt' property affects to determine cache filename as same as <literal>&lt;dir&gt;</literal> element.\n",
                      "markdown": "`This element contains a directory name where will be mapped\nas the path 'as-path' in cached information.\nThis is useful if the directory name is an alias\n(via a bind mount or symlink) to another directory in the system for\nwhich cached font information is likely to exist.\n  </para><para>\n'salt' property affects to determine cache filename as same as <literal>&lt;dir&gt;</literal> element.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 11,
                  "endLine": 321,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    </programlisting>\n  </para>\n<refsect2><title><literal>&lt;fontconfig&gt;</literal></title><para>\nThis is the top level element for a font configuration and can contain\n<literal>&lt;dir&gt;</literal>, <literal>&lt;cachedir&gt;</literal>, <literal>&lt;include&gt;</literal>, <literal>&lt;match&gt;</literal> and <literal>&lt;alias&gt;</literal> elements in any order.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;dir prefix=\"default\" salt=\"\"&gt;</literal></title><para>\n",
                    "rendered": {
                      "text": "    </programlisting>\n  </para>\n<refsect2><title><literal>&lt;fontconfig&gt;</literal></title><para>\nThis is the top level element for a font configuration and can contain\n<literal>&lt;dir&gt;</literal>, <literal>&lt;cachedir&gt;</literal>, <literal>&lt;include&gt;</literal>, <literal>&lt;match&gt;</literal> and <literal>&lt;alias&gt;</literal> elements in any order.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;dir prefix=\"default\" salt=\"\"&gt;</literal></title><para>\n",
                      "markdown": "`    </programlisting>\n  </para>\n<refsect2><title><literal>&lt;fontconfig&gt;</literal></title><para>\nThis is the top level element for a font configuration and can contain\n<literal>&lt;dir&gt;</literal>, <literal>&lt;cachedir&gt;</literal>, <literal>&lt;include&gt;</literal>, <literal>&lt;match&gt;</literal> and <literal>&lt;alias&gt;</literal> elements in any order.\n  </para></refsect2>\n  <refsect2><title><literal>&lt;dir prefix=\"default\" salt=\"\"&gt;</literal></title><para>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 21,
                  "endLine": 267,
                  "endColumn": 28,
                  "snippet": {
                    "text": "CACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\nSCAN           128    Watch font files being scanned to build caches\nSCANV          256    Verbose font file scanning information\nMEMORY         512    Monitor fontconfig memory usage\nCONFIG        1024    Monitor which config files are loaded\n",
                    "rendered": {
                      "text": "CACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\nSCAN           128    Watch font files being scanned to build caches\nSCANV          256    Verbose font file scanning information\nMEMORY         512    Monitor fontconfig memory usage\nCONFIG        1024    Monitor which config files are loaded\n",
                      "markdown": "`CACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\nSCAN           128    Watch font files being scanned to build caches\nSCANV          256    Verbose font file scanning information\nMEMORY         512    Monitor fontconfig memory usage\nCONFIG        1024    Monitor which config files are loaded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fontconfig-user.sgml"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 21,
                  "endLine": 264,
                  "endColumn": 28,
                  "snippet": {
                    "text": "MATCHV           2    Extensive font matching information\nEDIT             4    Monitor match/test/edit execution\nFONTSET          8    Track loading of font information at startup\nCACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\nSCAN           128    Watch font files being scanned to build caches\n",
                    "rendered": {
                      "text": "MATCHV           2    Extensive font matching information\nEDIT             4    Monitor match/test/edit execution\nFONTSET          8    Track loading of font information at startup\nCACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\nSCAN           128    Watch font files being scanned to build caches\n",
                      "markdown": "`MATCHV           2    Extensive font matching information\nEDIT             4    Monitor match/test/edit execution\nFONTSET          8    Track loading of font information at startup\nCACHE           16    Watch cache files being written\nCACHEV          32    Extensive cache file writing information\nPARSE           64    (no longer in use)\nSCAN           128    Watch font files being scanned to build caches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcpattern.fncs"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 44,
                  "endLine": 393,
                  "endColumn": 48,
                  "snippet": {
                    "text": "@PURPOSE@       Remove one object of the specified type from the pattern\n@DESC@\nRemoves the value associated with the property `object' at position `id', returning\nwhether the property existed and had a value at that position or not.\n@@\n\n@RET@           void\n",
                    "rendered": {
                      "text": "@PURPOSE@       Remove one object of the specified type from the pattern\n@DESC@\nRemoves the value associated with the property `object' at position `id', returning\nwhether the property existed and had a value at that position or not.\n@@\n\n@RET@           void\n",
                      "markdown": "`@PURPOSE@       Remove one object of the specified type from the pattern\n@DESC@\nRemoves the value associated with the property `object' at position `id', returning\nwhether the property existed and had a value at that position or not.\n@@\n\n@RET@           void\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcpattern.fncs"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 55,
                  "endLine": 392,
                  "endColumn": 59,
                  "snippet": {
                    "text": "@TYPE3@         int%                            @ARG3@          id\n@PURPOSE@       Remove one object of the specified type from the pattern\n@DESC@\nRemoves the value associated with the property `object' at position `id', returning\nwhether the property existed and had a value at that position or not.\n@@\n\n",
                    "rendered": {
                      "text": "@TYPE3@         int%                            @ARG3@          id\n@PURPOSE@       Remove one object of the specified type from the pattern\n@DESC@\nRemoves the value associated with the property `object' at position `id', returning\nwhether the property existed and had a value at that position or not.\n@@\n\n",
                      "markdown": "`@TYPE3@         int%                            @ARG3@          id\n@PURPOSE@       Remove one object of the specified type from the pattern\n@DESC@\nRemoves the value associated with the property `object' at position `id', returning\nwhether the property existed and had a value at that position or not.\n@@\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcpattern.fncs"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 39,
                  "endLine": 120,
                  "endColumn": 43,
                  "snippet": {
                    "text": "@DESC@\nAdds a single value to the list of values associated with the property named\n`object<parameter>.  If `append</parameter> is FcTrue, the value is added at the end of any\nexisting list, otherwise it is inserted at the beginning.  `value' is saved\n(with FcValueSave) when inserted into the pattern so that the library\nretains no reference to any application-supplied data structure.\n@@\n",
                    "rendered": {
                      "text": "@DESC@\nAdds a single value to the list of values associated with the property named\n`object<parameter>.  If `append</parameter> is FcTrue, the value is added at the end of any\nexisting list, otherwise it is inserted at the beginning.  `value' is saved\n(with FcValueSave) when inserted into the pattern so that the library\nretains no reference to any application-supplied data structure.\n@@\n",
                      "markdown": "`@DESC@\nAdds a single value to the list of values associated with the property named\n`object<parameter>.  If `append</parameter> is FcTrue, the value is added at the end of any\nexisting list, otherwise it is inserted at the beginning.  `value' is saved\n(with FcValueSave) when inserted into the pattern so that the library\nretains no reference to any application-supplied data structure.\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcpattern.fncs"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 73,
                  "endLine": 119,
                  "endColumn": 77,
                  "snippet": {
                    "text": "@PURPOSE@       Add a value to a pattern\n@DESC@\nAdds a single value to the list of values associated with the property named\n`object<parameter>.  If `append</parameter> is FcTrue, the value is added at the end of any\nexisting list, otherwise it is inserted at the beginning.  `value' is saved\n(with FcValueSave) when inserted into the pattern so that the library\nretains no reference to any application-supplied data structure.\n",
                    "rendered": {
                      "text": "@PURPOSE@       Add a value to a pattern\n@DESC@\nAdds a single value to the list of values associated with the property named\n`object<parameter>.  If `append</parameter> is FcTrue, the value is added at the end of any\nexisting list, otherwise it is inserted at the beginning.  `value' is saved\n(with FcValueSave) when inserted into the pattern so that the library\nretains no reference to any application-supplied data structure.\n",
                      "markdown": "`@PURPOSE@       Add a value to a pattern\n@DESC@\nAdds a single value to the list of values associated with the property named\n`object<parameter>.  If `append</parameter> is FcTrue, the value is added at the end of any\nexisting list, otherwise it is inserted at the beginning.  `value' is saved\n(with FcValueSave) when inserted into the pattern so that the library\nretains no reference to any application-supplied data structure.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fccache.fncs"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 47,
                  "endLine": 108,
                  "endColumn": 51,
                  "snippet": {
                    "text": "@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Delete .uuid file\n@DESC@\nThis is to delete .uuid file containing an UUID at a font directory of\n<parameter>dir</parameter>.\n@SINCE@         2.13.1\n@@\n",
                    "rendered": {
                      "text": "@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Delete .uuid file\n@DESC@\nThis is to delete .uuid file containing an UUID at a font directory of\n<parameter>dir</parameter>.\n@SINCE@         2.13.1\n@@\n",
                      "markdown": "`@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Delete .uuid file\n@DESC@\nThis is to delete .uuid file containing an UUID at a font directory of\n<parameter>dir</parameter>.\n@SINCE@         2.13.1\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fccache.fncs"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 33,
                  "endLine": 96,
                  "endColumn": 37,
                  "snippet": {
                    "text": "@TYPE1@         FcChar8 *                       @ARG1@          dir\n@TYPE2@         FcBool%                         @ARG2@          force\n@TYPE3@         FcConfig *                      @ARG3@          config\n@PURPOSE@       Create .uuid file at a directory\n@DESC@\nThis function is deprecated. it doesn't take any effects.\n@SINCE@         2.12.92\n",
                    "rendered": {
                      "text": "@TYPE1@         FcChar8 *                       @ARG1@          dir\n@TYPE2@         FcBool%                         @ARG2@          force\n@TYPE3@         FcConfig *                      @ARG3@          config\n@PURPOSE@       Create .uuid file at a directory\n@DESC@\nThis function is deprecated. it doesn't take any effects.\n@SINCE@         2.12.92\n",
                      "markdown": "`@TYPE1@         FcChar8 *                       @ARG1@          dir\n@TYPE2@         FcBool%                         @ARG2@          force\n@TYPE3@         FcConfig *                      @ARG3@          config\n@PURPOSE@       Create .uuid file at a directory\n@DESC@\nThis function is deprecated. it doesn't take any effects.\n@SINCE@         2.12.92\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fccache.fncs"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 38,
                  "endLine": 86,
                  "endColumn": 42,
                  "snippet": {
                    "text": "@TYPE1@         const FcConfig *                @ARG1@          config\n@PURPOSE@       Create CACHEDIR.TAG at cache directory.\n@DESC@\nThis tries to create CACHEDIR.TAG file at the cache directory registered\nto <parameter>config</parameter>.\n@SINCE@         2.9.91\n@@\n",
                    "rendered": {
                      "text": "@TYPE1@         const FcConfig *                @ARG1@          config\n@PURPOSE@       Create CACHEDIR.TAG at cache directory.\n@DESC@\nThis tries to create CACHEDIR.TAG file at the cache directory registered\nto <parameter>config</parameter>.\n@SINCE@         2.9.91\n@@\n",
                      "markdown": "`@TYPE1@         const FcConfig *                @ARG1@          config\n@PURPOSE@       Create CACHEDIR.TAG at cache directory.\n@DESC@\nThis tries to create CACHEDIR.TAG file at the cache directory registered\nto <parameter>config</parameter>.\n@SINCE@         2.9.91\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fccache.fncs"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 35,
                  "endLine": 84,
                  "endColumn": 39,
                  "snippet": {
                    "text": "@RET@           void\n@FUNC@          FcCacheCreateTagFile\n@TYPE1@         const FcConfig *                @ARG1@          config\n@PURPOSE@       Create CACHEDIR.TAG at cache directory.\n@DESC@\nThis tries to create CACHEDIR.TAG file at the cache directory registered\nto <parameter>config</parameter>.\n",
                    "rendered": {
                      "text": "@RET@           void\n@FUNC@          FcCacheCreateTagFile\n@TYPE1@         const FcConfig *                @ARG1@          config\n@PURPOSE@       Create CACHEDIR.TAG at cache directory.\n@DESC@\nThis tries to create CACHEDIR.TAG file at the cache directory registered\nto <parameter>config</parameter>.\n",
                      "markdown": "`@RET@           void\n@FUNC@          FcCacheCreateTagFile\n@TYPE1@         const FcConfig *                @ARG1@          config\n@PURPOSE@       Create CACHEDIR.TAG at cache directory.\n@DESC@\nThis tries to create CACHEDIR.TAG file at the cache directory registered\nto <parameter>config</parameter>.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcdircache.fncs"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 58,
                  "endLine": 63,
                  "endColumn": 66,
                  "snippet": {
                    "text": "@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Re-scan a directory cache\n@DESC@\nRe-scan directories only at <parameter>dir</parameter> and update the cache.\nreturns NULL if failed.\n@SINCE@         2.11.1\n@@\n",
                    "rendered": {
                      "text": "@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Re-scan a directory cache\n@DESC@\nRe-scan directories only at <parameter>dir</parameter> and update the cache.\nreturns NULL if failed.\n@SINCE@         2.11.1\n@@\n",
                      "markdown": "`@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Re-scan a directory cache\n@DESC@\nRe-scan directories only at <parameter>dir</parameter> and update the cache.\nreturns NULL if failed.\n@SINCE@         2.11.1\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcdircache.fncs"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 24,
                  "endLine": 63,
                  "endColumn": 28,
                  "snippet": {
                    "text": "@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Re-scan a directory cache\n@DESC@\nRe-scan directories only at <parameter>dir</parameter> and update the cache.\nreturns NULL if failed.\n@SINCE@         2.11.1\n@@\n",
                    "rendered": {
                      "text": "@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Re-scan a directory cache\n@DESC@\nRe-scan directories only at <parameter>dir</parameter> and update the cache.\nreturns NULL if failed.\n@SINCE@         2.11.1\n@@\n",
                      "markdown": "`@TYPE2@         FcConfig *                      @ARG2@          config\n@PURPOSE@       Re-scan a directory cache\n@DESC@\nRe-scan directories only at <parameter>dir</parameter> and update the cache.\nreturns NULL if failed.\n@SINCE@         2.11.1\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcstring.fncs"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 40,
                  "endLine": 76,
                  "endColumn": 44,
                  "snippet": {
                    "text": "@DESC@\nConverts the next Unicode char from <parameter>src</parameter> into\n<parameter>dst</parameter> and returns the number of bytes containing the\nchar. <parameter>src</parameter> must be at least <parameter>len</parameter>\nbytes long.  Bytes of <parameter>src</parameter> are combined into 16-bit\nunits according to <parameter>endian</parameter>.\n@@\n",
                    "rendered": {
                      "text": "@DESC@\nConverts the next Unicode char from <parameter>src</parameter> into\n<parameter>dst</parameter> and returns the number of bytes containing the\nchar. <parameter>src</parameter> must be at least <parameter>len</parameter>\nbytes long.  Bytes of <parameter>src</parameter> are combined into 16-bit\nunits according to <parameter>endian</parameter>.\n@@\n",
                      "markdown": "`@DESC@\nConverts the next Unicode char from <parameter>src</parameter> into\n<parameter>dst</parameter> and returns the number of bytes containing the\nchar. <parameter>src</parameter> must be at least <parameter>len</parameter>\nbytes long.  Bytes of <parameter>src</parameter> are combined into 16-bit\nunits according to <parameter>endian</parameter>.\n@@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/fcstring.fncs"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 41,
                  "endLine": 35,
                  "endColumn": 45,
                  "snippet": {
                    "text": "@DESC@\nConverts the next Unicode char from <parameter>src</parameter> into\n<parameter>dst</parameter> and returns the number of bytes containing the\nchar.  <parameter>src</parameter> must be at least\n<parameter>len</parameter> bytes long.\n@@\n\n",
                    "rendered": {
                      "text": "@DESC@\nConverts the next Unicode char from <parameter>src</parameter> into\n<parameter>dst</parameter> and returns the number of bytes containing the\nchar.  <parameter>src</parameter> must be at least\n<parameter>len</parameter> bytes long.\n@@\n\n",
                      "markdown": "`@DESC@\nConverts the next Unicode char from <parameter>src</parameter> into\n<parameter>dst</parameter> and returns the number of bytes containing the\nchar.  <parameter>src</parameter> must be at least\n<parameter>len</parameter> bytes long.\n@@\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/edit-sgml.py"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 54,
                  "endLine": 155,
                  "endColumn": 59,
                  "snippet": {
                    "text": "        # special-case inline optional substitution (hard-codes specific pattern in funcs.sgml because we're lazy)\n        output_line = re.sub(r'@\\?(RET)@@RET@@:@(void)@;@', lambda m: rep.get(m.group(1) + tag_suffix, m.group(2)), t_line)\n        # replace any substitution tags with their respective substitution text\n        output_line = re.sub(r'@(\\w+)@', lambda m: rep.get(m.group(1) + tag_suffix, ''), output_line)\n        print(output_line, file=fout)\n\n# process template for each replacement set\n",
                    "rendered": {
                      "text": "        # special-case inline optional substitution (hard-codes specific pattern in funcs.sgml because we're lazy)\n        output_line = re.sub(r'@\\?(RET)@@RET@@:@(void)@;@', lambda m: rep.get(m.group(1) + tag_suffix, m.group(2)), t_line)\n        # replace any substitution tags with their respective substitution text\n        output_line = re.sub(r'@(\\w+)@', lambda m: rep.get(m.group(1) + tag_suffix, ''), output_line)\n        print(output_line, file=fout)\n\n# process template for each replacement set\n",
                      "markdown": "`        # special-case inline optional substitution (hard-codes specific pattern in funcs.sgml because we're lazy)\n        output_line = re.sub(r'@\\?(RET)@@RET@@:@(void)@;@', lambda m: rep.get(m.group(1) + tag_suffix, m.group(2)), t_line)\n        # replace any substitution tags with their respective substitution text\n        output_line = re.sub(r'@(\\w+)@', lambda m: rep.get(m.group(1) + tag_suffix, ''), output_line)\n        print(output_line, file=fout)\n\n# process template for each replacement set\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/edit-sgml.py"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 73,
                  "endLine": 153,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    else:\n      if not skip_lines:\n        # special-case inline optional substitution (hard-codes specific pattern in funcs.sgml because we're lazy)\n        output_line = re.sub(r'@\\?(RET)@@RET@@:@(void)@;@', lambda m: rep.get(m.group(1) + tag_suffix, m.group(2)), t_line)\n        # replace any substitution tags with their respective substitution text\n        output_line = re.sub(r'@(\\w+)@', lambda m: rep.get(m.group(1) + tag_suffix, ''), output_line)\n        print(output_line, file=fout)\n",
                    "rendered": {
                      "text": "    else:\n      if not skip_lines:\n        # special-case inline optional substitution (hard-codes specific pattern in funcs.sgml because we're lazy)\n        output_line = re.sub(r'@\\?(RET)@@RET@@:@(void)@;@', lambda m: rep.get(m.group(1) + tag_suffix, m.group(2)), t_line)\n        # replace any substitution tags with their respective substitution text\n        output_line = re.sub(r'@(\\w+)@', lambda m: rep.get(m.group(1) + tag_suffix, ''), output_line)\n        print(output_line, file=fout)\n",
                      "markdown": "`    else:\n      if not skip_lines:\n        # special-case inline optional substitution (hard-codes specific pattern in funcs.sgml because we're lazy)\n        output_line = re.sub(r'@\\?(RET)@@RET@@:@(void)@;@', lambda m: rep.get(m.group(1) + tag_suffix, m.group(2)), t_line)\n        # replace any substitution tags with their respective substitution text\n        output_line = re.sub(r'@(\\w+)@', lambda m: rep.get(m.group(1) + tag_suffix, ''), output_line)\n        print(output_line, file=fout)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/edit-sgml.py"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 46,
                  "endLine": 70,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    chunk = chunk[start:]\n\n  # split at '@' and remove empty lines (keep it simple instead of doing fancy\n  # things with regular expression matches, we control the input after all)\n  lines = [line for line in chunk.split('@') if line.strip()]\n\n  replacement_set = {}\n",
                    "rendered": {
                      "text": "    chunk = chunk[start:]\n\n  # split at '@' and remove empty lines (keep it simple instead of doing fancy\n  # things with regular expression matches, we control the input after all)\n  lines = [line for line in chunk.split('@') if line.strip()]\n\n  replacement_set = {}\n",
                      "markdown": "`    chunk = chunk[start:]\n\n  # split at '@' and remove empty lines (keep it simple instead of doing fancy\n  # things with regular expression matches, we control the input after all)\n  lines = [line for line in chunk.split('@') if line.strip()]\n\n  replacement_set = {}\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/doc/edit-sgml.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  if start:\n    chunk = chunk[start:]\n\n  # split at '@' and remove empty lines (keep it simple instead of doing fancy\n  # things with regular expression matches, we control the input after all)\n  lines = [line for line in chunk.split('@') if line.strip()]\n\n",
                    "rendered": {
                      "text": "  if start:\n    chunk = chunk[start:]\n\n  # split at '@' and remove empty lines (keep it simple instead of doing fancy\n  # things with regular expression matches, we control the input after all)\n  lines = [line for line in chunk.split('@') if line.strip()]\n\n",
                      "markdown": "`  if start:\n    chunk = chunk[start:]\n\n  # split at '@' and remove empty lines (keep it simple instead of doing fancy\n  # things with regular expression matches, we control the input after all)\n  lines = [line for line in chunk.split('@') if line.strip()]\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/ho.orth"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 9,
                  "endLine": 28,
                  "snippet": {
                    "text": "# Hiri Motu (HO)\n#\n# I found one sample of Hiri Motu text, a translation of the first part of\n# Genesis at\n# http://rosettaproject.org:8080/live/search/showpages?ethnocode=POM&doctype=gen&version=1&scale=six\n#\n# It appears to use only ASCII glyphs, so we'll go with that for now\n#\n",
                    "rendered": {
                      "text": "# Hiri Motu (HO)\n#\n# I found one sample of Hiri Motu text, a translation of the first part of\n# Genesis at\n# http://rosettaproject.org:8080/live/search/showpages?ethnocode=POM&doctype=gen&version=1&scale=six\n#\n# It appears to use only ASCII glyphs, so we'll go with that for now\n#\n",
                      "markdown": "`# Hiri Motu (HO)\n#\n# I found one sample of Hiri Motu text, a translation of the first part of\n# Genesis at\n# http://rosettaproject.org:8080/live/search/showpages?ethnocode=POM&doctype=gen&version=1&scale=six\n#\n# It appears to use only ASCII glyphs, so we'll go with that for now\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/dz.orth"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 14,
                  "endLine": 27,
                  "snippet": {
                    "text": "#\n# Dzongkha (DZ)\n#\n# Uses Tibetan script\n#\ninclude bo.orth\n",
                    "rendered": {
                      "text": "#\n# Dzongkha (DZ)\n#\n# Uses Tibetan script\n#\ninclude bo.orth\n",
                      "markdown": "`#\n# Dzongkha (DZ)\n#\n# Uses Tibetan script\n#\ninclude bo.orth\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/Makefile.am"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 69,
                  "endLine": 36,
                  "endColumn": 73,
                  "snippet": {
                    "text": "# NOTE:\n#\n# The order of the orth files here is extremely important (part of the cache\n# format) and should not be modified.  New orth files should be added at the\n# end.  No files should be removed either.\n#\nORTH = \\\n",
                    "rendered": {
                      "text": "# NOTE:\n#\n# The order of the orth files here is extremely important (part of the cache\n# format) and should not be modified.  New orth files should be added at the\n# end.  No files should be removed either.\n#\nORTH = \\\n",
                      "markdown": "`# NOTE:\n#\n# The order of the orth files here is extremely important (part of the cache\n# format) and should not be modified.  New orth files should be added at the\n# end.  No files should be removed either.\n#\nORTH = \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/Makefile.am"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 57,
                  "endLine": 329,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n",
                    "rendered": {
                      "text": "\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n",
                      "markdown": "`\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/Makefile.am"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 45,
                  "endLine": 329,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n",
                    "rendered": {
                      "text": "\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n",
                      "markdown": "`\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/Makefile.am"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 25,
                  "endLine": 329,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n",
                    "rendered": {
                      "text": "\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n",
                      "markdown": "`\t$(AM_V_GEN) echo \"<?xml version=\\\"1.0\\\"?>\" > $@ && \\\n\t\techo \"<!DOCTYPE fontconfig SYSTEM \\\"urn:fontconfig:fonts.dtd\\\">\" >> $@ && \\\n\t\techo \"<fontconfig>\" >> $@ && \\\n\tfor i in `echo $(ORTH) | sed -e 's/ /\\n/g' | grep -v _ | sed -e 's/\\.orth$$//g' | sort`; do \\\n\t\techo \"  <!-- $$i* -> $$i -->\" >> $@; \\\n\t\techo \"  <match>\" >> $@; \\\n\t\techo \"    <test name=\\\"lang\\\" compare=\\\"contains\\\"><string>$$i</string></test>\" >> $@; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/da.orth"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 19,
                  "endLine": 30,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#\twww.evertype.com\n#\twww.eki.ee/letter\n# Note:\n#\tThe sources cited at www.evertype.com appear to have unified\n#\tall of the nordic languages making the orthography significantly\n#\tlarger than needed for Danish.  The orthography used here is\n#\tjust that from eki.ee with the evertype.com additions commented out\n",
                    "rendered": {
                      "text": "#\twww.evertype.com\n#\twww.eki.ee/letter\n# Note:\n#\tThe sources cited at www.evertype.com appear to have unified\n#\tall of the nordic languages making the orthography significantly\n#\tlarger than needed for Danish.  The orthography used here is\n#\tjust that from eki.ee with the evertype.com additions commented out\n",
                      "markdown": "`#\twww.evertype.com\n#\twww.eki.ee/letter\n# Note:\n#\tThe sources cited at www.evertype.com appear to have unified\n#\tall of the nordic languages making the orthography significantly\n#\tlarger than needed for Danish.  The orthography used here is\n#\tjust that from eki.ee with the evertype.com additions commented out\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-conflist/fc-conflist.sgml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 22,
                  "endLine": 144,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-conflist/fc-conflist.sgml"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 37,
                  "endLine": 133,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-conflist</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n",
                    "rendered": {
                      "text": "  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-conflist</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n",
                      "markdown": "`  <refsect1>\n    <title>RETURN CODES</title>\n    <para><command>fc-conflist</command> returns error code 0 for successful parsing,\n    or 1 if any errors occurred or if at least one font face could not be opened.</para>\n  </refsect1>\n\n  <refsect1>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-conflist/fc-conflist.sgml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-conflist/fc-conflist.sgml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 16,
                  "endLine": 4,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<!doctype refentry PUBLIC \"-//OASIS//DTD DocBook V4.1//EN\" [\n\n<!--\nCopyright © 2014 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                    "rendered": {
                      "text": "<!doctype refentry PUBLIC \"-//OASIS//DTD DocBook V4.1//EN\" [\n\n<!--\nCopyright © 2014 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                      "markdown": "`<!doctype refentry PUBLIC \"-//OASIS//DTD DocBook V4.1//EN\" [\n\n<!--\nCopyright © 2014 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/its/fontconfig.its"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 16,
                  "endLine": 3,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<?xml version=\"1.0\"?>\n<!--\nCopyright © 2018 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                    "rendered": {
                      "text": "<?xml version=\"1.0\"?>\n<!--\nCopyright © 2018 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                      "markdown": "`<?xml version=\"1.0\"?>\n<!--\nCopyright © 2018 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/its/fontconfig.loc"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 16,
                  "endLine": 3,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<?xml version=\"1.0\"?>\n<!--\nCopyright © 2018 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                    "rendered": {
                      "text": "<?xml version=\"1.0\"?>\n<!--\nCopyright © 2018 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n",
                      "markdown": "`<?xml version=\"1.0\"?>\n<!--\nCopyright © 2018 Red Hat, Inc.\n\nPermission to use, copy, modify, distribute, and sell this software and its\ndocumentation for any purpose is hereby granted without fee, provided that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/09-autohint-if-no-hinting.conf"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 59,
                  "endLine": 12,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"autohint\" mode=\"append\"><bool>true</bool></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"autohint\" mode=\"append\"><bool>true</bool></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"autohint\" mode=\"append\"><bool>true</bool></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/09-autohint-if-no-hinting.conf"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 10,
                  "endLine": 9,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  <match target=\"font\">\n    <test name=\"fonthashint\"><bool>false</bool></test>\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "  <match target=\"font\">\n    <test name=\"fonthashint\"><bool>false</bool></test>\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`  <match target=\"font\">\n    <test name=\"fonthashint\"><bool>false</bool></test>\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-none.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintnone</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintnone</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintnone</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-none.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-vbgr.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>vbgr</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>vbgr</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>vbgr</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-vbgr.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/65-nonlatin.conf"
                },
                "region": {
                  "startLine": 226,
                  "startColumn": 43,
                  "endLine": 226,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\t\t<family>Noto Sans Oriya UI</family><!-- or -->\n\t\t\t<family>Noto Sans Sinhala UI</family><!-- si -->\n\t\t\t<family>Noto Sans Tamil UI</family><!-- ta -->\n\t\t\t<family>Noto Sans Telugu UI</family><!-- te -->\n\t\t\t<family>Noto Sans Thai UI</family><!-- th -->\n\t\t\t<family>Leelawadee UI</family><!-- bug, th, jv, km, lo -->\n\t\t\t<family>Nirmala UI</family><!-- Indic -->\n",
                    "rendered": {
                      "text": "\t\t\t<family>Noto Sans Oriya UI</family><!-- or -->\n\t\t\t<family>Noto Sans Sinhala UI</family><!-- si -->\n\t\t\t<family>Noto Sans Tamil UI</family><!-- ta -->\n\t\t\t<family>Noto Sans Telugu UI</family><!-- te -->\n\t\t\t<family>Noto Sans Thai UI</family><!-- th -->\n\t\t\t<family>Leelawadee UI</family><!-- bug, th, jv, km, lo -->\n\t\t\t<family>Nirmala UI</family><!-- Indic -->\n",
                      "markdown": "`\t\t\t<family>Noto Sans Oriya UI</family><!-- or -->\n\t\t\t<family>Noto Sans Sinhala UI</family><!-- si -->\n\t\t\t<family>Noto Sans Tamil UI</family><!-- ta -->\n\t\t\t<family>Noto Sans Telugu UI</family><!-- te -->\n\t\t\t<family>Noto Sans Thai UI</family><!-- th -->\n\t\t\t<family>Leelawadee UI</family><!-- bug, th, jv, km, lo -->\n\t\t\t<family>Nirmala UI</family><!-- Indic -->\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/Makefile.am"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t90-synthetic.conf\n\nREADME: $(srcdir)/README.in\n\tsed \"s|\\@TEMPLATEDIR\\@|$(templatedir)|\" $< > $@\n\n35-lang-normalize.conf: ../fc-lang/Makefile.am\n\tcd ../fc-lang && $(MAKE) $(AM_MAKEFLAGS) $(top_builddir)/conf.d/35-lang-normalize.conf\n",
                    "rendered": {
                      "text": "\t90-synthetic.conf\n\nREADME: $(srcdir)/README.in\n\tsed \"s|\\@TEMPLATEDIR\\@|$(templatedir)|\" $< > $@\n\n35-lang-normalize.conf: ../fc-lang/Makefile.am\n\tcd ../fc-lang && $(MAKE) $(AM_MAKEFLAGS) $(top_builddir)/conf.d/35-lang-normalize.conf\n",
                      "markdown": "`\t90-synthetic.conf\n\nREADME: $(srcdir)/README.in\n\tsed \"s|\\@TEMPLATEDIR\\@|$(templatedir)|\" $< > $@\n\n35-lang-normalize.conf: ../fc-lang/Makefile.am\n\tcd ../fc-lang && $(MAKE) $(AM_MAKEFLAGS) $(top_builddir)/conf.d/35-lang-normalize.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 2,
                  "endLine": 145,
                  "endColumn": 3,
                  "snippet": {
                    "text": "    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nfi\nmv /tmp/fc-build.log . || :\nexit $r\n",
                    "rendered": {
                      "text": "    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nfi\nmv /tmp/fc-build.log . || :\nexit $r\n",
                      "markdown": "`    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nfi\nmv /tmp/fc-build.log . || :\nexit $r\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 40,
                  "endLine": 142,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nfi\nmv /tmp/fc-build.log . || :\n",
                    "rendered": {
                      "text": "        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nfi\nmv /tmp/fc-build.log . || :\n",
                      "markdown": "`        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nfi\nmv /tmp/fc-build.log . || :\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 43,
                  "endLine": 139,
                  "endColumn": 48,
                  "snippet": {
                    "text": "        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                    "rendered": {
                      "text": "        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                      "markdown": "`        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        meson dist -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 43,
                  "endLine": 136,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                    "rendered": {
                      "text": "    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                      "markdown": "`    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        meson install -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 42,
                  "endLine": 134,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    fi\n    buildopt+=(--default-library=$type)\n    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n",
                    "rendered": {
                      "text": "    fi\n    buildopt+=(--default-library=$type)\n    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n",
                      "markdown": "`    fi\n    buildopt+=(--default-library=$type)\n    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 121,
                  "endLine": 133,
                  "endColumn": 126,
                  "snippet": {
                    "text": "        . .gitlab-ci/$FC_DISTRO_NAME-cross.sh\n    fi\n    buildopt+=(--default-library=$type)\n    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                    "rendered": {
                      "text": "        . .gitlab-ci/$FC_DISTRO_NAME-cross.sh\n    fi\n    buildopt+=(--default-library=$type)\n    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                      "markdown": "`        . .gitlab-ci/$FC_DISTRO_NAME-cross.sh\n    fi\n    buildopt+=(--default-library=$type)\n    meson setup --prefix=\"$PREFIX\" -Dnls=enabled -Dcache-build=disabled -Diconv=enabled ${buildopt[*]} \"$BUILDDIR\" 2>&1 | tee /tmp/fc-build.log || r=$?\n    meson compile -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        meson test -v -C \"$BUILDDIR\" 2>&1 | tee -a /tmp/fc-build.log || r=$?\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 3,
                  "endLine": 108,
                  "endColumn": 8,
                  "snippet": {
                    "text": "        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nelif [ x\"$buildsys\" == \"xmeson\" ]; then\n    pip install meson\n    for i in \"${enable[@]}\"; do\n        buildopt+=(-D$i=true)\n    done\n",
                    "rendered": {
                      "text": "        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nelif [ x\"$buildsys\" == \"xmeson\" ]; then\n    pip install meson\n    for i in \"${enable[@]}\"; do\n        buildopt+=(-D$i=true)\n    done\n",
                      "markdown": "`        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nelif [ x\"$buildsys\" == \"xmeson\" ]; then\n    pip install meson\n    for i in \"${enable[@]}\"; do\n        buildopt+=(-D$i=true)\n    done\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 34,
                  "endLine": 105,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nelif [ x\"$buildsys\" == \"xmeson\" ]; then\n    pip install meson\n",
                    "rendered": {
                      "text": "        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nelif [ x\"$buildsys\" == \"xmeson\" ]; then\n    pip install meson\n",
                      "markdown": "`        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\nelif [ x\"$buildsys\" == \"xmeson\" ]; then\n    pip install meson\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 32,
                  "endLine": 102,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                    "rendered": {
                      "text": "        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                      "markdown": "`        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $distcheck -eq 1 ]; then\n        $MAKE distcheck V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 30,
                  "endLine": 99,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                    "rendered": {
                      "text": "    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                      "markdown": "`    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n    if [ $enable_install -eq 1 ]; then\n        $MAKE install V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 20,
                  "endLine": 97,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    mkdir \"$BUILDDIR\" \"$PREFIX\"\n    cd \"$BUILDDIR\"\n    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n",
                    "rendered": {
                      "text": "    mkdir \"$BUILDDIR\" \"$PREFIX\"\n    cd \"$BUILDDIR\"\n    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n",
                      "markdown": "`    mkdir \"$BUILDDIR\" \"$PREFIX\"\n    cd \"$BUILDDIR\"\n    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 80,
                  "endLine": 96,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    rm -rf \"$BUILDDIR\" \"$PREFIX\" || :\n    mkdir \"$BUILDDIR\" \"$PREFIX\"\n    cd \"$BUILDDIR\"\n    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                    "rendered": {
                      "text": "    rm -rf \"$BUILDDIR\" \"$PREFIX\" || :\n    mkdir \"$BUILDDIR\" \"$PREFIX\"\n    cd \"$BUILDDIR\"\n    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n",
                      "markdown": "`    rm -rf \"$BUILDDIR\" \"$PREFIX\" || :\n    mkdir \"$BUILDDIR\" \"$PREFIX\"\n    cd \"$BUILDDIR\"\n    ../autogen.sh --prefix=\"$PREFIX\" --disable-cache-build ${buildopt[*]} 2>&1 | tee /tmp/fc-build.log || r=$?\n    $MAKE V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n    if [ $disable_check -eq 0 ]; then\n        $MAKE check V=1 2>&1 | tee -a /tmp/fc-build.log || r=$?\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/build.sh"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 54,
                  "snippet": {
                    "text": "    'xmingw') cross=1 ;;\n    *) cross=0 ;;\nesac\n\nenv\nr=0\n\nif [ x\"$buildsys\" == \"xautotools\" ]; then\n    for i in \"${enable[@]}\"; do\n",
                    "rendered": {
                      "text": "    'xmingw') cross=1 ;;\n    *) cross=0 ;;\nesac\n\nenv\nr=0\n\nif [ x\"$buildsys\" == \"xautotools\" ]; then\n    for i in \"${enable[@]}\"; do\n",
                      "markdown": "`    'xmingw') cross=1 ;;\n    *) cross=0 ;;\nesac\n\nenv\nr=0\n\nif [ x\"$buildsys\" == \"xautotools\" ]; then\n    for i in \"${enable[@]}\"; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/other.yml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 5,
                  "endLine": 117,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  script:\n    - export PATH=\"$HOME/.local/bin:$PATH\"\n    - |\n      cat > android-cross-file.txt <<EOF\n      [constants]\n      ndk_path    = '/android/ndk'\n      toolchain   = ndk_path + '/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android'\n",
                    "rendered": {
                      "text": "  script:\n    - export PATH=\"$HOME/.local/bin:$PATH\"\n    - |\n      cat > android-cross-file.txt <<EOF\n      [constants]\n      ndk_path    = '/android/ndk'\n      toolchain   = ndk_path + '/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android'\n",
                      "markdown": "`  script:\n    - export PATH=\"$HOME/.local/bin:$PATH\"\n    - |\n      cat > android-cross-file.txt <<EOF\n      [constants]\n      ndk_path    = '/android/ndk'\n      toolchain   = ndk_path + '/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android'\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/other.yml"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 5,
                  "endLine": 112,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    paths:\n      - \"build/meson-logs/*.txt\"\n  before_script:\n    - dnf install -y python3-pip gcc ninja-build gperf\n    - pip3 install --user meson\n  script:\n    - export PATH=\"$HOME/.local/bin:$PATH\"\n",
                    "rendered": {
                      "text": "    paths:\n      - \"build/meson-logs/*.txt\"\n  before_script:\n    - dnf install -y python3-pip gcc ninja-build gperf\n    - pip3 install --user meson\n  script:\n    - export PATH=\"$HOME/.local/bin:$PATH\"\n",
                      "markdown": "`    paths:\n      - \"build/meson-logs/*.txt\"\n  before_script:\n    - dnf install -y python3-pip gcc ninja-build gperf\n    - pip3 install --user meson\n  script:\n    - export PATH=\"$HOME/.local/bin:$PATH\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/other.yml"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 21,
                  "endLine": 93,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    - $env:PATH += \";C:\\msys64\\usr\\bin;C:\\msys64\\mingw64/bin;C:\\msys64\\mingw32/bin\"\n    # XXX: Copied from https://gitlab.freedesktop.org/gstreamer/gst-ci/blob/master/gitlab/ci_template.yml#L487\n    # For some reason docker build hangs if this is included in the image, needs more troubleshooting\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman-key --init && pacman-key --populate msys2 && pacman-key --refresh-keys || true\"\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman -Syuu --noconfirm\"\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman -Sy --noconfirm --needed mingw-w64-x86_64-toolchain ninja\"\n",
                    "rendered": {
                      "text": "\n    - $env:PATH += \";C:\\msys64\\usr\\bin;C:\\msys64\\mingw64/bin;C:\\msys64\\mingw32/bin\"\n    # XXX: Copied from https://gitlab.freedesktop.org/gstreamer/gst-ci/blob/master/gitlab/ci_template.yml#L487\n    # For some reason docker build hangs if this is included in the image, needs more troubleshooting\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman-key --init && pacman-key --populate msys2 && pacman-key --refresh-keys || true\"\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman -Syuu --noconfirm\"\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman -Sy --noconfirm --needed mingw-w64-x86_64-toolchain ninja\"\n",
                      "markdown": "`\n    - $env:PATH += \";C:\\msys64\\usr\\bin;C:\\msys64\\mingw64/bin;C:\\msys64\\mingw32/bin\"\n    # XXX: Copied from https://gitlab.freedesktop.org/gstreamer/gst-ci/blob/master/gitlab/ci_template.yml#L487\n    # For some reason docker build hangs if this is included in the image, needs more troubleshooting\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman-key --init && pacman-key --populate msys2 && pacman-key --refresh-keys || true\"\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman -Syuu --noconfirm\"\n    - C:\\msys64\\usr\\bin\\bash -c \"pacman -Sy --noconfirm --needed mingw-w64-x86_64-toolchain ninja\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/other.yml"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 10,
                  "endLine": 75,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    # Get ninja\n    - curl -L -o ninja-mac.zip https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip\n    - unzip ninja-mac.zip\n    - sudo cp ninja /usr/local/bin\n  script:\n    - CERT_PATH=$(python3 -m certifi) && export SSL_CERT_FILE=${CERT_PATH} && export REQUESTS_CA_BUNDLE=${CERT_PATH} && meson setup -Diconv=enabled build\n    - meson compile --verbose -C build\n",
                    "rendered": {
                      "text": "    # Get ninja\n    - curl -L -o ninja-mac.zip https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip\n    - unzip ninja-mac.zip\n    - sudo cp ninja /usr/local/bin\n  script:\n    - CERT_PATH=$(python3 -m certifi) && export SSL_CERT_FILE=${CERT_PATH} && export REQUESTS_CA_BUNDLE=${CERT_PATH} && meson setup -Diconv=enabled build\n    - meson compile --verbose -C build\n",
                      "markdown": "`    # Get ninja\n    - curl -L -o ninja-mac.zip https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip\n    - unzip ninja-mac.zip\n    - sudo cp ninja /usr/local/bin\n  script:\n    - CERT_PATH=$(python3 -m certifi) && export SSL_CERT_FILE=${CERT_PATH} && export REQUESTS_CA_BUNDLE=${CERT_PATH} && meson setup -Diconv=enabled build\n    - meson compile --verbose -C build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/other.yml"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 5,
                  "endLine": 73,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    # Anther way t install certificates\n    - open /Applications/Python\\ 3.8/Install\\ Certificates.command\n    # Get ninja\n    - curl -L -o ninja-mac.zip https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip\n    - unzip ninja-mac.zip\n    - sudo cp ninja /usr/local/bin\n  script:\n",
                    "rendered": {
                      "text": "    # Anther way t install certificates\n    - open /Applications/Python\\ 3.8/Install\\ Certificates.command\n    # Get ninja\n    - curl -L -o ninja-mac.zip https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip\n    - unzip ninja-mac.zip\n    - sudo cp ninja /usr/local/bin\n  script:\n",
                      "markdown": "`    # Anther way t install certificates\n    - open /Applications/Python\\ 3.8/Install\\ Certificates.command\n    # Get ninja\n    - curl -L -o ninja-mac.zip https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-mac.zip\n    - unzip ninja-mac.zip\n    - sudo cp ninja /usr/local/bin\n  script:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/other.yml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 28,
                  "endLine": 66,
                  "snippet": {
                    "text": "    paths:\n      - \"build/meson-logs/*txt\"\n  before_script:\n    - pip3 install --upgrade pip\n    # Make sure meson is up to date\n    - pip3 install -U meson\n    # Need to install certificates for python\n    - pip3 install --upgrade certifi\n",
                    "rendered": {
                      "text": "    paths:\n      - \"build/meson-logs/*txt\"\n  before_script:\n    - pip3 install --upgrade pip\n    # Make sure meson is up to date\n    - pip3 install -U meson\n    # Need to install certificates for python\n    - pip3 install --upgrade certifi\n",
                      "markdown": "`    paths:\n      - \"build/meson-logs/*txt\"\n  before_script:\n    - pip3 install --upgrade pip\n    # Make sure meson is up to date\n    - pip3 install -U meson\n    # Need to install certificates for python\n    - pip3 install --upgrade certifi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 44,
                  "endLine": 216,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                    "rendered": {
                      "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                      "markdown": "`    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 21,
                  "snippet": {
                    "text": "# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:\n\n{# You're looking at the template here, so you can ignore the below\n   warning. This is the right file to edit #}\n#######################################\n#                                     #\n",
                    "rendered": {
                      "text": "# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:\n\n{# You're looking at the template here, so you can ignore the below\n   warning. This is the right file to edit #}\n#######################################\n#                                     #\n",
                      "markdown": "`# vim: set expandtab shiftwidth=2 tabstop=8 textwidth=0 filetype=yaml:\n\n{# You're looking at the template here, so you can ignore the below\n   warning. This is the right file to edit #}\n#######################################\n#                                     #\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 5,
                  "endLine": 340,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  script:\n    - |\n      mkdir public || :\n      cp -a build*/doc/fontconfig-user.html build*/doc/fontconfig-devel public/\n  artifacts:\n    paths:\n      - public\n",
                    "rendered": {
                      "text": "  script:\n    - |\n      mkdir public || :\n      cp -a build*/doc/fontconfig-user.html build*/doc/fontconfig-devel public/\n  artifacts:\n    paths:\n      - public\n",
                      "markdown": "`  script:\n    - |\n      mkdir public || :\n      cp -a build*/doc/fontconfig-user.html build*/doc/fontconfig-devel public/\n  artifacts:\n    paths:\n      - public\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 5,
                  "endLine": 217,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n\n",
                    "rendered": {
                      "text": "    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n\n",
                      "markdown": "`    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 44,
                  "endLine": 216,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                    "rendered": {
                      "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                      "markdown": "`    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 32,
                  "endLine": 175,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n.check_tainted: &check_tainted |\n  # make sure the kernel is not tainted\n  if [[ \"$(ssh localhost -p 5555 cat /proc/sys/kernel/tainted)\" -gt 0 ]];\n  then\n    echo tainted kernel ;\n    exit 1 ;\n",
                    "rendered": {
                      "text": "\n.check_tainted: &check_tainted |\n  # make sure the kernel is not tainted\n  if [[ \"$(ssh localhost -p 5555 cat /proc/sys/kernel/tainted)\" -gt 0 ]];\n  then\n    echo tainted kernel ;\n    exit 1 ;\n",
                      "markdown": "`\n.check_tainted: &check_tainted |\n  # make sure the kernel is not tainted\n  if [[ \"$(ssh localhost -p 5555 cat /proc/sys/kernel/tainted)\" -gt 0 ]];\n  then\n    echo tainted kernel ;\n    exit 1 ;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 28,
                  "endLine": 143,
                  "snippet": {
                    "text": "  stage: container_clean\n  image: golang:alpine\n  before_script:\n    - apk add python3 py-pip git\n    - pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates\n  script:\n    - ci-fairy -v --authfile $AUTHFILE delete-image\n            --repository $FDO_DISTRIBUTION_NAME/$FDO_DISTRIBUTION_VERSION\n",
                    "rendered": {
                      "text": "  stage: container_clean\n  image: golang:alpine\n  before_script:\n    - apk add python3 py-pip git\n    - pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates\n  script:\n    - ci-fairy -v --authfile $AUTHFILE delete-image\n            --repository $FDO_DISTRIBUTION_NAME/$FDO_DISTRIBUTION_VERSION\n",
                      "markdown": "`  stage: container_clean\n  image: golang:alpine\n  before_script:\n    - apk add python3 py-pip git\n    - pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates\n  script:\n    - ci-fairy -v --authfile $AUTHFILE delete-image\n            --repository $FDO_DISTRIBUTION_NAME/$FDO_DISTRIBUTION_VERSION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci/ci.template"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 35,
                  "endLine": 40,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  FDO_UPSTREAM_REPO: fontconfig/fontconfig\n  GIT_DEPTH: 1\n\n# these tags should be updated each time the list of packages is updated\n# changing these will force rebuilding the associated image\n# Note: these tags have no meaning and are not tied to a particular\n# fontconfig version\n",
                    "rendered": {
                      "text": "  FDO_UPSTREAM_REPO: fontconfig/fontconfig\n  GIT_DEPTH: 1\n\n# these tags should be updated each time the list of packages is updated\n# changing these will force rebuilding the associated image\n# Note: these tags have no meaning and are not tied to a particular\n# fontconfig version\n",
                      "markdown": "`  FDO_UPSTREAM_REPO: fontconfig/fontconfig\n  GIT_DEPTH: 1\n\n# these tags should be updated each time the list of packages is updated\n# changing these will force rebuilding the associated image\n# Note: these tags have no meaning and are not tied to a particular\n# fontconfig version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-cat/fc-cat.sgml"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 22,
                  "endLine": 176,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                    "rendered": {
                      "text": "  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n",
                      "markdown": "`  </refsect1>\n</refentry>\n\n<!-- Keep this comment at the end of the file\nLocal variables:\nmode: sgml\nsgml-omittag:t\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-cat/fc-cat.sgml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 44,
                  "endLine": 37,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                    "rendered": {
                      "text": "        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n",
                      "markdown": "`        The docbook-to-man binary is found in the docbook-to-man package.\n        Please remember that if you create the nroff version in one of the\n        debian/rules file targets (such as build), you will need to include\n        docbook-to-man in your Build-Depends control field.\n\n  -->\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 38,
                  "endLine": 94,
                  "endColumn": 42,
                  "snippet": {
                    "text": "fi\nif [ $(ls \"$TESTCACHE2DIR\"|wc -l) == 2 ]; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"Too much cache files created at runtime cache dir.\"\n    ls \"$TESTCACHE2DIR\"\n    exit 1\nfi\n",
                    "rendered": {
                      "text": "fi\nif [ $(ls \"$TESTCACHE2DIR\"|wc -l) == 2 ]; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"Too much cache files created at runtime cache dir.\"\n    ls \"$TESTCACHE2DIR\"\n    exit 1\nfi\n",
                      "markdown": "`fi\nif [ $(ls \"$TESTCACHE2DIR\"|wc -l) == 2 ]; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"Too much cache files created at runtime cache dir.\"\n    ls \"$TESTCACHE2DIR\"\n    exit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 38,
                  "endLine": 88,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# Check the amount of cache files\nif [ $(ls \"$TESTCACHE1DIR\"|wc -l) == 2 ]; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"Too much cache files created at host cache dir.\"\n    ls \"$TESTCACHE1DIR\"\n    exit 1\nfi\n",
                    "rendered": {
                      "text": "# Check the amount of cache files\nif [ $(ls \"$TESTCACHE1DIR\"|wc -l) == 2 ]; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"Too much cache files created at host cache dir.\"\n    ls \"$TESTCACHE1DIR\"\n    exit 1\nfi\n",
                      "markdown": "`# Check the amount of cache files\nif [ $(ls \"$TESTCACHE1DIR\"|wc -l) == 2 ]; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"Too much cache files created at host cache dir.\"\n    ls \"$TESTCACHE1DIR\"\n    exit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 3,
                  "endLine": 77,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if grep bar.pcf \"$TESTRESULT2\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT2\"\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "if grep bar.pcf \"$TESTRESULT2\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT2\"\n    exit 1\nfi\n\n",
                      "markdown": "`if grep bar.pcf \"$TESTRESULT2\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT2\"\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 8,
                  "snippet": {
                    "text": "touch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTCACHE2DIR\"/*\n$BWRAP --bind / / --bind \"$TESTCACHE2DIR\" /usr/lib/fontconfig/cache --bind \"$TESTFONT2DIR\" /usr/share/fonts --bind \"$TESTBUILD2DIR\" /usr/share/fontconfig --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTBUILD2DIR\"/fonts.conf $FCMATCH Fixed file > \"$TESTRESULT2\"\n\nif grep bar.pcf \"$TESTRESULT2\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT2\"\n",
                    "rendered": {
                      "text": "touch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTCACHE2DIR\"/*\n$BWRAP --bind / / --bind \"$TESTCACHE2DIR\" /usr/lib/fontconfig/cache --bind \"$TESTFONT2DIR\" /usr/share/fonts --bind \"$TESTBUILD2DIR\" /usr/share/fontconfig --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTBUILD2DIR\"/fonts.conf $FCMATCH Fixed file > \"$TESTRESULT2\"\n\nif grep bar.pcf \"$TESTRESULT2\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT2\"\n",
                      "markdown": "`touch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTCACHE2DIR\"/*\n$BWRAP --bind / / --bind \"$TESTCACHE2DIR\" /usr/lib/fontconfig/cache --bind \"$TESTFONT2DIR\" /usr/share/fonts --bind \"$TESTBUILD2DIR\" /usr/share/fontconfig --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTBUILD2DIR\"/fonts.conf $FCMATCH Fixed file > \"$TESTRESULT2\"\n\nif grep bar.pcf \"$TESTRESULT2\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT2\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 8,
                  "snippet": {
                    "text": "if grep foo.pcf \"$TESTRESULT1\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT1\"\n    exit 1\nfi\n\n",
                    "rendered": {
                      "text": "if grep foo.pcf \"$TESTRESULT1\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT1\"\n    exit 1\nfi\n\n",
                      "markdown": "`if grep foo.pcf \"$TESTRESULT1\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT1\"\n    exit 1\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 2,
                  "endLine": 61,
                  "endColumn": 8,
                  "snippet": {
                    "text": "touch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTCACHE1DIR\"/*\n$BWRAP --bind / / --bind \"$TESTCACHE1DIR\" /usr/lib/fontconfig/cache --bind \"$TESTFONT1DIR\" /usr/share/fonts --bind \"$TESTBUILD1DIR\" /usr/share/fontconfig --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTBUILD1DIR\"/fonts.conf $FCMATCH Fixed file > \"$TESTRESULT1\"\n\nif grep foo.pcf \"$TESTRESULT1\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT1\"\n",
                    "rendered": {
                      "text": "touch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTCACHE1DIR\"/*\n$BWRAP --bind / / --bind \"$TESTCACHE1DIR\" /usr/lib/fontconfig/cache --bind \"$TESTFONT1DIR\" /usr/share/fonts --bind \"$TESTBUILD1DIR\" /usr/share/fontconfig --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTBUILD1DIR\"/fonts.conf $FCMATCH Fixed file > \"$TESTRESULT1\"\n\nif grep foo.pcf \"$TESTRESULT1\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT1\"\n",
                      "markdown": "`touch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTCACHE1DIR\"/*\n$BWRAP --bind / / --bind \"$TESTCACHE1DIR\" /usr/lib/fontconfig/cache --bind \"$TESTFONT1DIR\" /usr/share/fonts --bind \"$TESTBUILD1DIR\" /usr/share/fontconfig --dev-bind /dev /dev --setenv FONTCONFIG_FILE \"$TESTBUILD1DIR\"/fonts.conf $FCMATCH Fixed file > \"$TESTRESULT1\"\n\nif grep foo.pcf \"$TESTRESULT1\" > /dev/null; then : ; else\n    echo \"*** Test failed: $TEST\"\n    echo \"file property doesn't point to the expected file.\"\n    cat \"$TESTRESULT1\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 35,
                  "endLine": 26,
                  "endColumn": 3,
                  "snippet": {
                    "text": "mkdir -p \"$TESTBUILD2DIR\"/build\nmkdir -p \"$TESTRUNDIR\"/fonts\nmkdir -p \"$TESTRUNDIR\"/fonts-cache\ncp \"$FONT1\" \"$TESTFONT1DIR\"/foo.pcf\ncp \"$FONT1\" \"$TESTFONT2DIR\"/bar.pcf\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"/*\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT2DIR\"\n",
                    "rendered": {
                      "text": "mkdir -p \"$TESTBUILD2DIR\"/build\nmkdir -p \"$TESTRUNDIR\"/fonts\nmkdir -p \"$TESTRUNDIR\"/fonts-cache\ncp \"$FONT1\" \"$TESTFONT1DIR\"/foo.pcf\ncp \"$FONT1\" \"$TESTFONT2DIR\"/bar.pcf\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"/*\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT2DIR\"\n",
                      "markdown": "`mkdir -p \"$TESTBUILD2DIR\"/build\nmkdir -p \"$TESTRUNDIR\"/fonts\nmkdir -p \"$TESTRUNDIR\"/fonts-cache\ncp \"$FONT1\" \"$TESTFONT1DIR\"/foo.pcf\ncp \"$FONT1\" \"$TESTFONT2DIR\"/bar.pcf\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"/*\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT2DIR\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/run-test.d/remap-flatpak.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 34,
                  "endLine": 25,
                  "endColumn": 3,
                  "snippet": {
                    "text": "mkdir -p \"$TESTBUILD1DIR\"/build\nmkdir -p \"$TESTBUILD2DIR\"/build\nmkdir -p \"$TESTRUNDIR\"/fonts\nmkdir -p \"$TESTRUNDIR\"/fonts-cache\ncp \"$FONT1\" \"$TESTFONT1DIR\"/foo.pcf\ncp \"$FONT1\" \"$TESTFONT2DIR\"/bar.pcf\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"/*\n",
                    "rendered": {
                      "text": "mkdir -p \"$TESTBUILD1DIR\"/build\nmkdir -p \"$TESTBUILD2DIR\"/build\nmkdir -p \"$TESTRUNDIR\"/fonts\nmkdir -p \"$TESTRUNDIR\"/fonts-cache\ncp \"$FONT1\" \"$TESTFONT1DIR\"/foo.pcf\ncp \"$FONT1\" \"$TESTFONT2DIR\"/bar.pcf\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"/*\n",
                      "markdown": "`mkdir -p \"$TESTBUILD1DIR\"/build\nmkdir -p \"$TESTBUILD2DIR\"/build\nmkdir -p \"$TESTRUNDIR\"/fonts\nmkdir -p \"$TESTRUNDIR\"/fonts-cache\ncp \"$FONT1\" \"$TESTFONT1DIR\"/foo.pcf\ncp \"$FONT1\" \"$TESTFONT2DIR\"/bar.pcf\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"\ntouch -m -t $(date -d @0 +%y%m%d%H%M.%S) \"$TESTFONT1DIR\"/*\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcmatch.c"
                },
                "region": {
                  "startLine": 982,
                  "startColumn": 7,
                  "endLine": 982,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    }\n    if (FcDebug () & FC_DBG_MATCH2)\n    {\n\tchar *env = getenv (\"FC_DBG_MATCH_FILTER\");\n\tFcObjectSet *os = NULL;\n\n\tif (env)\n",
                    "rendered": {
                      "text": "    }\n    if (FcDebug () & FC_DBG_MATCH2)\n    {\n\tchar *env = getenv (\"FC_DBG_MATCH_FILTER\");\n\tFcObjectSet *os = NULL;\n\n\tif (env)\n",
                      "markdown": "`    }\n    if (FcDebug () & FC_DBG_MATCH2)\n    {\n\tchar *env = getenv (\"FC_DBG_MATCH_FILTER\");\n\tFcObjectSet *os = NULL;\n\n\tif (env)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 35,
                  "endLine": 183,
                  "snippet": {
                    "text": "\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n    if args.output_file:\n        sys.stdout = open(args.output_file, 'w', encoding='utf-8')\n",
                    "rendered": {
                      "text": "\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n    if args.output_file:\n        sys.stdout = open(args.output_file, 'w', encoding='utf-8')\n",
                      "markdown": "`\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n    if args.output_file:\n        sys.stdout = open(args.output_file, 'w', encoding='utf-8')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 22,
                  "endLine": 181,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n",
                    "rendered": {
                      "text": "                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n",
                      "markdown": "`                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 19,
                  "endLine": 180,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    if fold['count'] > maxFoldChars:\n                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n",
                    "rendered": {
                      "text": "                    if fold['count'] > maxFoldChars:\n                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n",
                      "markdown": "`                    if fold['count'] > maxFoldChars:\n                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 19,
                  "endLine": 160,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                            fold['method'] = CaseFoldMethod.RANGE\n                        fold['count'] = 1\n                        folds.append(fold)\n                    expand = utf8_size (lower[0]) - utf8_size(upper)\n                else:\n                    fold = {}\n                    fold['upper'] = upper\n",
                    "rendered": {
                      "text": "                            fold['method'] = CaseFoldMethod.RANGE\n                        fold['count'] = 1\n                        folds.append(fold)\n                    expand = utf8_size (lower[0]) - utf8_size(upper)\n                else:\n                    fold = {}\n                    fold['upper'] = upper\n",
                      "markdown": "`                            fold['method'] = CaseFoldMethod.RANGE\n                        fold['count'] = 1\n                        folds.append(fold)\n                    expand = utf8_size (lower[0]) - utf8_size(upper)\n                else:\n                    fold = {}\n                    fold['upper'] = upper\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 38,
                  "endLine": 196,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    \n    # Scan the input until the marker is found\n    # FIXME: this is a bit silly really, might just as well harcode\n    #        the license header in the script and drop the template\n    for line in tmpl_file:\n        if line.strip() == '@@@':\n            break\n",
                    "rendered": {
                      "text": "    \n    # Scan the input until the marker is found\n    # FIXME: this is a bit silly really, might just as well harcode\n    #        the license header in the script and drop the template\n    for line in tmpl_file:\n        if line.strip() == '@@@':\n            break\n",
                      "markdown": "`    \n    # Scan the input until the marker is found\n    # FIXME: this is a bit silly really, might just as well harcode\n    #        the license header in the script and drop the template\n    for line in tmpl_file:\n        if line.strip() == '@@@':\n            break\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 35,
                  "endLine": 183,
                  "snippet": {
                    "text": "\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n    if args.output_file:\n        sys.stdout = open(args.output_file, 'w', encoding='utf-8')\n",
                    "rendered": {
                      "text": "\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n    if args.output_file:\n        sys.stdout = open(args.output_file, 'w', encoding='utf-8')\n",
                      "markdown": "`\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n    if args.output_file:\n        sys.stdout = open(args.output_file, 'w', encoding='utf-8')\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 22,
                  "endLine": 181,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n",
                    "rendered": {
                      "text": "                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n",
                      "markdown": "`                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n    # Open output file\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 19,
                  "endLine": 180,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    if fold['count'] > maxFoldChars:\n                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n",
                    "rendered": {
                      "text": "                    if fold['count'] > maxFoldChars:\n                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n",
                      "markdown": "`                    if fold['count'] > maxFoldChars:\n                        maxFoldChars = fold['count']\n\n                    expand = fold['count'] - utf8_size(upper)\n                    if expand > maxExpand:\n                        maxExpand = expand\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/fc-case.py"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 19,
                  "endLine": 160,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                            fold['method'] = CaseFoldMethod.RANGE\n                        fold['count'] = 1\n                        folds.append(fold)\n                    expand = utf8_size (lower[0]) - utf8_size(upper)\n                else:\n                    fold = {}\n                    fold['upper'] = upper\n",
                    "rendered": {
                      "text": "                            fold['method'] = CaseFoldMethod.RANGE\n                        fold['count'] = 1\n                        folds.append(fold)\n                    expand = utf8_size (lower[0]) - utf8_size(upper)\n                else:\n                    fold = {}\n                    fold['upper'] = upper\n",
                      "markdown": "`                            fold['method'] = CaseFoldMethod.RANGE\n                        fold['count'] = 1\n                        folds.append(fold)\n                    expand = utf8_size (lower[0]) - utf8_size(upper)\n                else:\n                    fold = {}\n                    fold['upper'] = upper\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fonts.conf.in"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 48,
                  "endLine": 16,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\tmost environments.  If you have a reasonably normal environment and\n\thave found problems with this configuration, they are probably\n\tthings that others will also want fixed.  Please submit any problems\n\tto the fontconfig issue tracking system located at fontconfig.org\n\n\tNote that the normal 'make install' procedure for fontconfig is to\n\treplace any existing fonts.conf file with the new version.  Place\n",
                    "rendered": {
                      "text": "\tmost environments.  If you have a reasonably normal environment and\n\thave found problems with this configuration, they are probably\n\tthings that others will also want fixed.  Please submit any problems\n\tto the fontconfig issue tracking system located at fontconfig.org\n\n\tNote that the normal 'make install' procedure for fontconfig is to\n\treplace any existing fonts.conf file with the new version.  Place\n",
                      "markdown": "`\tmost environments.  If you have a reasonably normal environment and\n\thave found problems with this configuration, they are probably\n\tthings that others will also want fixed.  Please submit any problems\n\tto the fontconfig issue tracking system located at fontconfig.org\n\n\tNote that the normal 'make install' procedure for fontconfig is to\n\treplace any existing fonts.conf file with the new version.  Place\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/INSTALL"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 3,
                  "endLine": 33,
                  "endColumn": 11,
                  "snippet": {
                    "text": " 5.\tUpdate the Fontconfig Devel wiki page\n \thttps://www.freedesktop.org/wiki/Software/fontconfig/Devel/\n\t\n 6.\tUpdate the fontconfig documentation\n\n\t\tscp -rp doc/fontconfig-user.html doc/fontconfig-devel freedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig\n\n",
                    "rendered": {
                      "text": " 5.\tUpdate the Fontconfig Devel wiki page\n \thttps://www.freedesktop.org/wiki/Software/fontconfig/Devel/\n\t\n 6.\tUpdate the fontconfig documentation\n\n\t\tscp -rp doc/fontconfig-user.html doc/fontconfig-devel freedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig\n\n",
                      "markdown": "` 5.\tUpdate the Fontconfig Devel wiki page\n \thttps://www.freedesktop.org/wiki/Software/fontconfig/Devel/\n\t\n 6.\tUpdate the fontconfig documentation\n\n\t\tscp -rp doc/fontconfig-user.html doc/fontconfig-devel freedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/INSTALL"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 11,
                  "snippet": {
                    "text": " \n \t\tfreedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig/release\n\t\n 5.\tUpdate the Fontconfig Devel wiki page\n \thttps://www.freedesktop.org/wiki/Software/fontconfig/Devel/\n\t\n 6.\tUpdate the fontconfig documentation\n",
                    "rendered": {
                      "text": " \n \t\tfreedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig/release\n\t\n 5.\tUpdate the Fontconfig Devel wiki page\n \thttps://www.freedesktop.org/wiki/Software/fontconfig/Devel/\n\t\n 6.\tUpdate the fontconfig documentation\n",
                      "markdown": "` \n \t\tfreedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig/release\n\t\n 5.\tUpdate the Fontconfig Devel wiki page\n \thttps://www.freedesktop.org/wiki/Software/fontconfig/Devel/\n\t\n 6.\tUpdate the fontconfig documentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/INSTALL"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 35,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\n 6.\tUpdate the fontconfig documentation\n\n\t\tscp -rp doc/fontconfig-user.html doc/fontconfig-devel freedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig\n\n 7.\tCompute md5sums for release files:\n\t\tmd5sum fontconfig-2.4.x.tar.gz ChangeLog-2.4.x\n",
                    "rendered": {
                      "text": "\t\n 6.\tUpdate the fontconfig documentation\n\n\t\tscp -rp doc/fontconfig-user.html doc/fontconfig-devel freedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig\n\n 7.\tCompute md5sums for release files:\n\t\tmd5sum fontconfig-2.4.x.tar.gz ChangeLog-2.4.x\n",
                      "markdown": "`\t\n 6.\tUpdate the fontconfig documentation\n\n\t\tscp -rp doc/fontconfig-user.html doc/fontconfig-devel freedesktop.org:/srv/www.freedesktop.org/www/software/fontconfig\n\n 7.\tCompute md5sums for release files:\n\t\tmd5sum fontconfig-2.4.x.tar.gz ChangeLog-2.4.x\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/INSTALL"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 27,
                  "endLine": 5,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n\t$ ./configure --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man\n\nIf you checked out from the git repository (as opposed to downloading a\ntarball), you need to run autogen.sh instead of configure:\n\n\t$ ./autogen.sh --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man\n",
                    "rendered": {
                      "text": "\n\t$ ./configure --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man\n\nIf you checked out from the git repository (as opposed to downloading a\ntarball), you need to run autogen.sh instead of configure:\n\n\t$ ./autogen.sh --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man\n",
                      "markdown": "`\n\t$ ./configure --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man\n\nIf you checked out from the git repository (as opposed to downloading a\ntarball), you need to run autogen.sh instead of configure:\n\n\t$ ./autogen.sh --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/COPYING"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 2,
                  "endLine": 151,
                  "endColumn": 7,
                  "snippet": {
                    "text": " *\n * Contributor(s):\n *\tChris Wilson <chris@chris-wilson.co.uk>\n * Red Hat Author(s): Behdad Esfahbod\n * Google Author(s): Behdad Esfahbod\n */\n\n",
                    "rendered": {
                      "text": " *\n * Contributor(s):\n *\tChris Wilson <chris@chris-wilson.co.uk>\n * Red Hat Author(s): Behdad Esfahbod\n * Google Author(s): Behdad Esfahbod\n */\n\n",
                      "markdown": "` *\n * Contributor(s):\n *\tChris Wilson <chris@chris-wilson.co.uk>\n * Red Hat Author(s): Behdad Esfahbod\n * Google Author(s): Behdad Esfahbod\n */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/COPYING"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 25,
                  "endLine": 128,
                  "endColumn": 30,
                  "snippet": {
                    "text": " * Atomic int and pointer operations.  Originally copied from HarfBuzz.\n *\n * Copyright © 2007  Chris Wilson\n * Copyright © 2009,2010  Red Hat, Inc.\n * Copyright © 2011,2012,2013  Google, Inc.\n *\n * Permission is hereby granted, without written agreement and without\n",
                    "rendered": {
                      "text": " * Atomic int and pointer operations.  Originally copied from HarfBuzz.\n *\n * Copyright © 2007  Chris Wilson\n * Copyright © 2009,2010  Red Hat, Inc.\n * Copyright © 2011,2012,2013  Google, Inc.\n *\n * Permission is hereby granted, without written agreement and without\n",
                      "markdown": "` * Atomic int and pointer operations.  Originally copied from HarfBuzz.\n *\n * Copyright © 2007  Chris Wilson\n * Copyright © 2009,2010  Red Hat, Inc.\n * Copyright © 2011,2012,2013  Google, Inc.\n *\n * Permission is hereby granted, without written agreement and without\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/COPYING"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 2,
                  "endLine": 69,
                  "endColumn": 7,
                  "snippet": {
                    "text": " *\n * Contributor(s):\n *\tChris Wilson <chris@chris-wilson.co.uk>\n * Red Hat Author(s): Behdad Esfahbod\n * Google Author(s): Behdad Esfahbod\n */\n\n",
                    "rendered": {
                      "text": " *\n * Contributor(s):\n *\tChris Wilson <chris@chris-wilson.co.uk>\n * Red Hat Author(s): Behdad Esfahbod\n * Google Author(s): Behdad Esfahbod\n */\n\n",
                      "markdown": "` *\n * Contributor(s):\n *\tChris Wilson <chris@chris-wilson.co.uk>\n * Red Hat Author(s): Behdad Esfahbod\n * Google Author(s): Behdad Esfahbod\n */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/COPYING"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 25,
                  "endLine": 46,
                  "endColumn": 30,
                  "snippet": {
                    "text": " * Mutex operations.  Originally copied from HarfBuzz.\n *\n * Copyright © 2007  Chris Wilson\n * Copyright © 2009,2010  Red Hat, Inc.\n * Copyright © 2011,2012,2013  Google, Inc.\n *\n * Permission is hereby granted, without written agreement and without\n",
                    "rendered": {
                      "text": " * Mutex operations.  Originally copied from HarfBuzz.\n *\n * Copyright © 2007  Chris Wilson\n * Copyright © 2009,2010  Red Hat, Inc.\n * Copyright © 2011,2012,2013  Google, Inc.\n *\n * Permission is hereby granted, without written agreement and without\n",
                      "markdown": "` * Mutex operations.  Originally copied from HarfBuzz.\n *\n * Copyright © 2007  Chris Wilson\n * Copyright © 2009,2010  Red Hat, Inc.\n * Copyright © 2011,2012,2013  Google, Inc.\n *\n * Permission is hereby granted, without written agreement and without\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/COPYING"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 76,
                  "endLine": 7,
                  "endColumn": 81,
                  "snippet": {
                    "text": "Copyright © 2005 Patrick Lam\nCopyright © 2007 Dwayne Bailey and Translate.org.za\nCopyright © 2009 Roozbeh Pournader\nCopyright © 2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020 Red Hat, Inc.\nCopyright © 2008 Danilo Šegan\nCopyright © 2012 Google, Inc.\n\n",
                    "rendered": {
                      "text": "Copyright © 2005 Patrick Lam\nCopyright © 2007 Dwayne Bailey and Translate.org.za\nCopyright © 2009 Roozbeh Pournader\nCopyright © 2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020 Red Hat, Inc.\nCopyright © 2008 Danilo Šegan\nCopyright © 2012 Google, Inc.\n\n",
                      "markdown": "`Copyright © 2005 Patrick Lam\nCopyright © 2007 Dwayne Bailey and Translate.org.za\nCopyright © 2009 Roozbeh Pournader\nCopyright © 2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020 Red Hat, Inc.\nCopyright © 2008 Danilo Šegan\nCopyright © 2012 Google, Inc.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Tools.mk"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t$(AM_V_GEN) \\\n\t$(RM) $(TARG) && \\\n\t$(PYTHON) $(TOOL) $(ARGS) --template $< --output $(TARG).tmp && \\\n\tmv $(TARG).tmp $(TARG) || ( $(RM) $(TARG).tmp && false )\nnoinst_HEADERS=$(TARG)\n\nALIAS_FILES = fcalias.h fcaliastail.h\n",
                    "rendered": {
                      "text": "\t$(AM_V_GEN) \\\n\t$(RM) $(TARG) && \\\n\t$(PYTHON) $(TOOL) $(ARGS) --template $< --output $(TARG).tmp && \\\n\tmv $(TARG).tmp $(TARG) || ( $(RM) $(TARG).tmp && false )\nnoinst_HEADERS=$(TARG)\n\nALIAS_FILES = fcalias.h fcaliastail.h\n",
                      "markdown": "`\t$(AM_V_GEN) \\\n\t$(RM) $(TARG) && \\\n\t$(PYTHON) $(TOOL) $(ARGS) --template $< --output $(TARG).tmp && \\\n\tmv $(TARG).tmp $(TARG) || ( $(RM) $(TARG).tmp && false )\nnoinst_HEADERS=$(TARG)\n\nALIAS_FILES = fcalias.h fcaliastail.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/configure.ac"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 20,
                  "endLine": 776,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n\tDOCMAN3=`cat $tmp | awk '{ printf (\"%s.3 \", $1); }'`\n\techo DOCMAN3 $DOCMAN3\n\trm -f $tmp\nelse\n",
                    "rendered": {
                      "text": "\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n\tDOCMAN3=`cat $tmp | awk '{ printf (\"%s.3 \", $1); }'`\n\techo DOCMAN3 $DOCMAN3\n\trm -f $tmp\nelse\n",
                      "markdown": "`\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n\tDOCMAN3=`cat $tmp | awk '{ printf (\"%s.3 \", $1); }'`\n\techo DOCMAN3 $DOCMAN3\n\trm -f $tmp\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/configure.ac"
                },
                "region": {
                  "startLine": 772,
                  "startColumn": 25,
                  "endLine": 772,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nif test \"x$enable_docs\" = xyes; then\n\ttmp=funcs.$$\n\tcat $srcdir/doc/*.fncs | awk '\n\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n",
                    "rendered": {
                      "text": "\nif test \"x$enable_docs\" = xyes; then\n\ttmp=funcs.$$\n\tcat $srcdir/doc/*.fncs | awk '\n\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n",
                      "markdown": "`\nif test \"x$enable_docs\" = xyes; then\n\ttmp=funcs.$$\n\tcat $srcdir/doc/*.fncs | awk '\n\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/configure.ac"
                },
                "region": {
                  "startLine": 772,
                  "endLine": 772,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"x$enable_docs\" = xyes; then\n\ttmp=funcs.$$\n\tcat $srcdir/doc/*.fncs | awk '\n\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n",
                    "rendered": {
                      "text": "\nif test \"x$enable_docs\" = xyes; then\n\ttmp=funcs.$$\n\tcat $srcdir/doc/*.fncs | awk '\n\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n",
                      "markdown": "`\nif test \"x$enable_docs\" = xyes; then\n\ttmp=funcs.$$\n\tcat $srcdir/doc/*.fncs | awk '\n\t/^@TITLE@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@FUNC@/\t{ if (!done) { printf (\"%s\\n\", $2); done = 1; } }\n\t/^@@/\t\t{ done = 0; }' > $tmp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/configure.ac"
                },
                "region": {
                  "startLine": 573,
                  "startColumn": 2,
                  "endLine": 573,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t;;\n*)\n\tFC_FONTPATH=`echo $FC_ADD_FONTS |\n\t\t\tsed -e 's/^/<dir>/' -e 's/$/<\\/dir>/' -e 's/,/<\\/dir> <dir>/g'`\n\t;;\nesac\n\n",
                    "rendered": {
                      "text": "\t;;\n*)\n\tFC_FONTPATH=`echo $FC_ADD_FONTS |\n\t\t\tsed -e 's/^/<dir>/' -e 's/$/<\\/dir>/' -e 's/,/<\\/dir> <dir>/g'`\n\t;;\nesac\n\n",
                      "markdown": "`\t;;\n*)\n\tFC_FONTPATH=`echo $FC_ADD_FONTS |\n\t\t\tsed -e 's/^/<dir>/' -e 's/$/<\\/dir>/' -e 's/,/<\\/dir> <dir>/g'`\n\t;;\nesac\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/configure.ac"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 56,
                  "endLine": 183,
                  "endColumn": 62,
                  "snippet": {
                    "text": "AC_FUNC_MMAP\nAC_CHECK_FUNCS([link mkstemp mkostemp _mktemp_s mkdtemp getopt getopt_long getprogname getexecname rand random lrand48 random_r rand_r readlink fstatvfs fstatfs lstat strerror strerror_r])\n\nAC_SEARCH_LIBS([fabs], [m], [], [AC_MSG_ERROR([unable to find the fabs() function])])\n\ndnl AC_CHECK_FUNCS doesn't check for header files.\ndnl posix_fadvise() may be not available in older libc.\n",
                    "rendered": {
                      "text": "AC_FUNC_MMAP\nAC_CHECK_FUNCS([link mkstemp mkostemp _mktemp_s mkdtemp getopt getopt_long getprogname getexecname rand random lrand48 random_r rand_r readlink fstatvfs fstatfs lstat strerror strerror_r])\n\nAC_SEARCH_LIBS([fabs], [m], [], [AC_MSG_ERROR([unable to find the fabs() function])])\n\ndnl AC_CHECK_FUNCS doesn't check for header files.\ndnl posix_fadvise() may be not available in older libc.\n",
                      "markdown": "`AC_FUNC_MMAP\nAC_CHECK_FUNCS([link mkstemp mkostemp _mktemp_s mkdtemp getopt getopt_long getprogname getexecname rand random lrand48 random_r rand_r readlink fstatvfs fstatfs lstat strerror strerror_r])\n\nAC_SEARCH_LIBS([fabs], [m], [], [AC_MSG_ERROR([unable to find the fabs() function])])\n\ndnl AC_CHECK_FUNCS doesn't check for header files.\ndnl posix_fadvise() may be not available in older libc.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/README.md"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 25,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "ternative fonts can be selected if fonts are missing.\n* identify the set of fonts required to completely cover a set of languages.\n* have GUI configuration tools built as it uses an XML-based configuration file (though with autodiscovery, we believe this need is minimized).\n* efficiently and quickly find the fonts you need among the set of fonts you have installed, even if you have installed thousands of fonts, while minimizing memory usage.\n* be used in concert with the X Render Extension and [FreeType](https://www.freedesktop.org/wiki/Software/FreeType/) to implement high quality, anti-aliased and",
                    "rendered": {
                      "text": "ternative fonts can be selected if fonts are missing.\n* identify the set of fonts required to completely cover a set of languages.\n* have GUI configuration tools built as it uses an XML-based configuration file (though with autodiscovery, we believe this need is minimized).\n* efficiently and quickly find the fonts you need among the set of fonts you have installed, even if you have installed thousands of fonts, while minimizing memory usage.\n* be used in concert with the X Render Extension and [FreeType](https://www.freedesktop.org/wiki/Software/FreeType/) to implement high quality, anti-aliased and",
                      "markdown": "`ternative fonts can be selected if fonts are missing.\n* identify the set of fonts required to completely cover a set of languages.\n* have GUI configuration tools built as it uses an XML-based configuration file (though with autodiscovery, we believe this need is minimized).\n* efficiently and quickly find the fonts you need among the set of fonts you have installed, even if you have installed thousands of fonts, while minimizing memory usage.\n* be used in concert with the X Render Extension and [FreeType](https://www.freedesktop.org/wiki/Software/FreeType/) to implement high quality, anti-aliased and`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 24,
                  "endLine": 47,
                  "snippet": {
                    "text": "003A..003B\t#\tP \t# :..\t#\tCOLON..SEMICOLON\n003C..003E\t#\tR \t# <..>\tLESS-THAN SIGN..GREATER-THAN SIGN\n003F\t#\tP \t# ?\tQUESTION MARK\n0040\t#\tN \t# @\tCOMMERCIAL AT\n0041..005A\t#\tA \t# A..Z\tLATIN CAPITAL LETTER A..Z\n005B\t#\tO \t# [\tLEFT SQUARE BRACKET\n005C\t#\tN \t# \\\tREVERSE SOLIDUS\n005D\t#\tC \t# ]\tRIGHT SQUARE BRACKET\n",
                    "rendered": {
                      "text": "003A..003B\t#\tP \t# :..\t#\tCOLON..SEMICOLON\n003C..003E\t#\tR \t# <..>\tLESS-THAN SIGN..GREATER-THAN SIGN\n003F\t#\tP \t# ?\tQUESTION MARK\n0040\t#\tN \t# @\tCOMMERCIAL AT\n0041..005A\t#\tA \t# A..Z\tLATIN CAPITAL LETTER A..Z\n005B\t#\tO \t# [\tLEFT SQUARE BRACKET\n005C\t#\tN \t# \\\tREVERSE SOLIDUS\n005D\t#\tC \t# ]\tRIGHT SQUARE BRACKET\n",
                      "markdown": "`003A..003B\t#\tP \t# :..\t#\tCOLON..SEMICOLON\n003C..003E\t#\tR \t# <..>\tLESS-THAN SIGN..GREATER-THAN SIGN\n003F\t#\tP \t# ?\tQUESTION MARK\n0040\t#\tN \t# @\tCOMMERCIAL AT\n0041..005A\t#\tA \t# A..Z\tLATIN CAPITAL LETTER A..Z\n005B\t#\tO \t# [\tLEFT SQUARE BRACKET\n005C\t#\tN \t# \\\tREVERSE SOLIDUS\n005D\t#\tC \t# ]\tRIGHT SQUARE BRACKET\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 39,
                  "endLine": 139,
                  "endColumn": 47,
                  "snippet": {
                    "text": "1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n1D540..1D544\t#\tA \t# 𝕀..𝕄\tMATHEMATICAL DOUBLE-STRUCK CAPITAL I..M\n1D546\t#\tA \t# 𝕆\tMATHEMATICAL DOUBLE-STRUCK CAPITAL O\n",
                    "rendered": {
                      "text": "1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n1D540..1D544\t#\tA \t# 𝕀..𝕄\tMATHEMATICAL DOUBLE-STRUCK CAPITAL I..M\n1D546\t#\tA \t# 𝕆\tMATHEMATICAL DOUBLE-STRUCK CAPITAL O\n",
                      "markdown": "`1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n1D540..1D544\t#\tA \t# 𝕀..𝕄\tMATHEMATICAL DOUBLE-STRUCK CAPITAL I..M\n1D546\t#\tA \t# 𝕆\tMATHEMATICAL DOUBLE-STRUCK CAPITAL O\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 39,
                  "endLine": 138,
                  "endColumn": 47,
                  "snippet": {
                    "text": "1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n1D540..1D544\t#\tA \t# 𝕀..𝕄\tMATHEMATICAL DOUBLE-STRUCK CAPITAL I..M\n",
                    "rendered": {
                      "text": "1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n1D540..1D544\t#\tA \t# 𝕀..𝕄\tMATHEMATICAL DOUBLE-STRUCK CAPITAL I..M\n",
                      "markdown": "`1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n1D540..1D544\t#\tA \t# 𝕀..𝕄\tMATHEMATICAL DOUBLE-STRUCK CAPITAL I..M\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 28,
                  "endLine": 137,
                  "endColumn": 36,
                  "snippet": {
                    "text": "1D400..1D454\t#\tA \t# 𝐀..𝑔\tMATHEMATICAL BOLD CAPITAL A..ITALIC SMALL G\n1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n",
                    "rendered": {
                      "text": "1D400..1D454\t#\tA \t# 𝐀..𝑔\tMATHEMATICAL BOLD CAPITAL A..ITALIC SMALL G\n1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n",
                      "markdown": "`1D400..1D454\t#\tA \t# 𝐀..𝑔\tMATHEMATICAL BOLD CAPITAL A..ITALIC SMALL G\n1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n1D53B..1D53E\t#\tA \t# 𝔻..𝔾\tMATHEMATICAL DOUBLE-STRUCK CAPITAL D..G\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 39,
                  "endLine": 136,
                  "endColumn": 47,
                  "snippet": {
                    "text": "27E9\t#\tC \t# ⟩\tMATHEMATICAL RIGHT ANGLE BRACKET\n1D400..1D454\t#\tA \t# 𝐀..𝑔\tMATHEMATICAL BOLD CAPITAL A..ITALIC SMALL G\n1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n",
                    "rendered": {
                      "text": "27E9\t#\tC \t# ⟩\tMATHEMATICAL RIGHT ANGLE BRACKET\n1D400..1D454\t#\tA \t# 𝐀..𝑔\tMATHEMATICAL BOLD CAPITAL A..ITALIC SMALL G\n1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n",
                      "markdown": "`27E9\t#\tC \t# ⟩\tMATHEMATICAL RIGHT ANGLE BRACKET\n1D400..1D454\t#\tA \t# 𝐀..𝑔\tMATHEMATICAL BOLD CAPITAL A..ITALIC SMALL G\n1D456..1D49C\t#\tA \t# 𝑖..𝒜\tMATHEMATICAL ITALIC SMALL I..SCRIPT CAPITAL A\n1D49E..1D49F\t#\tA \t# 𝒞..𝒟\tMATHEMATICAL SCRIPT CAPITAL C..D\n1D4A2\t#\tA \t# 𝒢\tMATHEMATICAL SCRIPT CAPITAL G\n1D4A5..1D4A6\t#\tA \t# 𝒥..𝒦\tMATHEMATICAL SCRIPT CAPITAL J..K\n1D4A9..1D4AC\t#\tA \t# 𝒩..𝒬\tMATHEMATICAL SCRIPT CAPITAL N..Q\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 22,
                  "endLine": 93,
                  "endColumn": 30,
                  "snippet": {
                    "text": "210E..210F\t#\tN \t# ℎ..ℏ\tPLANCK CONSTANT.. OVER TWO PI\n2110..2113\t#\tA \t# ℐ..ℓ\tSCRIPT CAPITAL I..SMALL L\n2115\t#\tA \t# ℕ\tDOUBLE-STRUCK CAPITAL N\n2118..211D\t#\tA \t# ℘..ℝ\tSCRIPT CAPITAL P..DOUBLE-STRUCK CAPITAL R\n2124\t#\tA \t# ℤ\tDOUBLE-STRUCK CAPITAL Z\n2200..2201\t#\tU \t# ∀..∁\tFOR ALL..COMPLEMENT\n2202\t#\tN \t# ∂\tPARTIAL DIFFERENTIAL\n",
                    "rendered": {
                      "text": "210E..210F\t#\tN \t# ℎ..ℏ\tPLANCK CONSTANT.. OVER TWO PI\n2110..2113\t#\tA \t# ℐ..ℓ\tSCRIPT CAPITAL I..SMALL L\n2115\t#\tA \t# ℕ\tDOUBLE-STRUCK CAPITAL N\n2118..211D\t#\tA \t# ℘..ℝ\tSCRIPT CAPITAL P..DOUBLE-STRUCK CAPITAL R\n2124\t#\tA \t# ℤ\tDOUBLE-STRUCK CAPITAL Z\n2200..2201\t#\tU \t# ∀..∁\tFOR ALL..COMPLEMENT\n2202\t#\tN \t# ∂\tPARTIAL DIFFERENTIAL\n",
                      "markdown": "`210E..210F\t#\tN \t# ℎ..ℏ\tPLANCK CONSTANT.. OVER TWO PI\n2110..2113\t#\tA \t# ℐ..ℓ\tSCRIPT CAPITAL I..SMALL L\n2115\t#\tA \t# ℕ\tDOUBLE-STRUCK CAPITAL N\n2118..211D\t#\tA \t# ℘..ℝ\tSCRIPT CAPITAL P..DOUBLE-STRUCK CAPITAL R\n2124\t#\tA \t# ℤ\tDOUBLE-STRUCK CAPITAL Z\n2200..2201\t#\tU \t# ∀..∁\tFOR ALL..COMPLEMENT\n2202\t#\tN \t# ∂\tPARTIAL DIFFERENTIAL\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 22,
                  "endLine": 91,
                  "endColumn": 30,
                  "snippet": {
                    "text": "20E1\t#\tD \t# ⃡\tCOMBINING LEFT RIGHT ARROW ABOVE\n2102\t#\tA \t# ℂ\tDOUBLE-STRUCK CAPITAL C\n210E..210F\t#\tN \t# ℎ..ℏ\tPLANCK CONSTANT.. OVER TWO PI\n2110..2113\t#\tA \t# ℐ..ℓ\tSCRIPT CAPITAL I..SMALL L\n2115\t#\tA \t# ℕ\tDOUBLE-STRUCK CAPITAL N\n2118..211D\t#\tA \t# ℘..ℝ\tSCRIPT CAPITAL P..DOUBLE-STRUCK CAPITAL R\n2124\t#\tA \t# ℤ\tDOUBLE-STRUCK CAPITAL Z\n",
                    "rendered": {
                      "text": "20E1\t#\tD \t# ⃡\tCOMBINING LEFT RIGHT ARROW ABOVE\n2102\t#\tA \t# ℂ\tDOUBLE-STRUCK CAPITAL C\n210E..210F\t#\tN \t# ℎ..ℏ\tPLANCK CONSTANT.. OVER TWO PI\n2110..2113\t#\tA \t# ℐ..ℓ\tSCRIPT CAPITAL I..SMALL L\n2115\t#\tA \t# ℕ\tDOUBLE-STRUCK CAPITAL N\n2118..211D\t#\tA \t# ℘..ℝ\tSCRIPT CAPITAL P..DOUBLE-STRUCK CAPITAL R\n2124\t#\tA \t# ℤ\tDOUBLE-STRUCK CAPITAL Z\n",
                      "markdown": "`20E1\t#\tD \t# ⃡\tCOMBINING LEFT RIGHT ARROW ABOVE\n2102\t#\tA \t# ℂ\tDOUBLE-STRUCK CAPITAL C\n210E..210F\t#\tN \t# ℎ..ℏ\tPLANCK CONSTANT.. OVER TWO PI\n2110..2113\t#\tA \t# ℐ..ℓ\tSCRIPT CAPITAL I..SMALL L\n2115\t#\tA \t# ℕ\tDOUBLE-STRUCK CAPITAL N\n2118..211D\t#\tA \t# ℘..ℝ\tSCRIPT CAPITAL P..DOUBLE-STRUCK CAPITAL R\n2124\t#\tA \t# ℤ\tDOUBLE-STRUCK CAPITAL Z\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/und_zmth.orth"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# fontconfig/fc-lang/emoji.orth\n#\n# Copyright © 2002 Keith Packard\n# Copyright © 2017 Red Hat, Inc.\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n",
                    "rendered": {
                      "text": "# fontconfig/fc-lang/emoji.orth\n#\n# Copyright © 2002 Keith Packard\n# Copyright © 2017 Red Hat, Inc.\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n",
                      "markdown": "`# fontconfig/fc-lang/emoji.orth\n#\n# Copyright © 2002 Keith Packard\n# Copyright © 2017 Red Hat, Inc.\n#\n# Permission to use, copy, modify, distribute, and sell this software and its\n# documentation for any purpose is hereby granted without fee, provided that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/sd.orth"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 40,
                  "endLine": 26,
                  "endColumn": 48,
                  "snippet": {
                    "text": "#\n# Sindhi (sd)\n#\n# Sindhi is mostly written in the Arabic script in both Pakistan and India.\n#\n# Sources:\n# * http://www.user.uni-hannover.de/nhtcapri/sindhi-alphabet.html\n",
                    "rendered": {
                      "text": "#\n# Sindhi (sd)\n#\n# Sindhi is mostly written in the Arabic script in both Pakistan and India.\n#\n# Sources:\n# * http://www.user.uni-hannover.de/nhtcapri/sindhi-alphabet.html\n",
                      "markdown": "`#\n# Sindhi (sd)\n#\n# Sindhi is mostly written in the Arabic script in both Pakistan and India.\n#\n# Sources:\n# * http://www.user.uni-hannover.de/nhtcapri/sindhi-alphabet.html\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/fj.orth"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 53,
                  "endLine": 28,
                  "endColumn": 59,
                  "snippet": {
                    "text": "#\n# Orthography guessed from http://www.deeptrans.com/deeptrans/german.html\n#\n# There may be diacritical marks used, but I couldn't find any information\n# about them, nor any Fijian text using them.\n#\n# Fijian doesn't use h, x, z and uses f, j and p in loan words\n",
                    "rendered": {
                      "text": "#\n# Orthography guessed from http://www.deeptrans.com/deeptrans/german.html\n#\n# There may be diacritical marks used, but I couldn't find any information\n# about them, nor any Fijian text using them.\n#\n# Fijian doesn't use h, x, z and uses f, j and p in loan words\n",
                      "markdown": "`#\n# Orthography guessed from http://www.deeptrans.com/deeptrans/german.html\n#\n# There may be diacritical marks used, but I couldn't find any information\n# about them, nor any Fijian text using them.\n#\n# Fijian doesn't use h, x, z and uses f, j and p in loan words\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/km.orth"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 42,
                  "endLine": 27,
                  "endColumn": 50,
                  "snippet": {
                    "text": "#\n# Central Khmer (km)\n#\n# Taken from the Unicode coverage of Khmer script and Unicode character\n# notes\n#\n1780-179C\n",
                    "rendered": {
                      "text": "#\n# Central Khmer (km)\n#\n# Taken from the Unicode coverage of Khmer script and Unicode character\n# notes\n#\n1780-179C\n",
                      "markdown": "`#\n# Central Khmer (km)\n#\n# Taken from the Unicode coverage of Khmer script and Unicode character\n# notes\n#\n1780-179C\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/az_az.orth"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 72,
                  "endLine": 30,
                  "snippet": {
                    "text": "#\n# The complete orthography was from http://www.evertype.com\n#\n# This had been verified with the latin and cyrillic orthographies found at\n# http://www.eki.ee/letter\n#\n# Cyrillic was removed because the switch to Latin is almost finished.\n# The letter “ä” is also deprecated and replaced with “ə” since 1992.\n",
                    "rendered": {
                      "text": "#\n# The complete orthography was from http://www.evertype.com\n#\n# This had been verified with the latin and cyrillic orthographies found at\n# http://www.eki.ee/letter\n#\n# Cyrillic was removed because the switch to Latin is almost finished.\n# The letter “ä” is also deprecated and replaced with “ə” since 1992.\n",
                      "markdown": "`#\n# The complete orthography was from http://www.evertype.com\n#\n# This had been verified with the latin and cyrillic orthographies found at\n# http://www.eki.ee/letter\n#\n# Cyrillic was removed because the switch to Latin is almost finished.\n# The letter “ä” is also deprecated and replaced with “ə” since 1992.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/ja.orth"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 24,
                  "endLine": 158,
                  "snippet": {
                    "text": "0x30C3\t# KATAKANA LETTER SMALL TU\n0x30C4\t# KATAKANA LETTER TU\n0x30C5\t# KATAKANA LETTER DU\n0x30C6\t# KATAKANA LETTER TE\n0x30C7\t# KATAKANA LETTER DE\n0x30C8\t# KATAKANA LETTER TO\n0x30C9\t# KATAKANA LETTER DO\n0x30CA\t# KATAKANA LETTER NA\n",
                    "rendered": {
                      "text": "0x30C3\t# KATAKANA LETTER SMALL TU\n0x30C4\t# KATAKANA LETTER TU\n0x30C5\t# KATAKANA LETTER DU\n0x30C6\t# KATAKANA LETTER TE\n0x30C7\t# KATAKANA LETTER DE\n0x30C8\t# KATAKANA LETTER TO\n0x30C9\t# KATAKANA LETTER DO\n0x30CA\t# KATAKANA LETTER NA\n",
                      "markdown": "`0x30C3\t# KATAKANA LETTER SMALL TU\n0x30C4\t# KATAKANA LETTER TU\n0x30C5\t# KATAKANA LETTER DU\n0x30C6\t# KATAKANA LETTER TE\n0x30C7\t# KATAKANA LETTER DE\n0x30C8\t# KATAKANA LETTER TO\n0x30C9\t# KATAKANA LETTER DO\n0x30CA\t# KATAKANA LETTER NA\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/ja.orth"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 24,
                  "endLine": 71,
                  "snippet": {
                    "text": "0x3063\t# HIRAGANA LETTER SMALL TU\n0x3064\t# HIRAGANA LETTER TU\n0x3065\t# HIRAGANA LETTER DU\n0x3066\t# HIRAGANA LETTER TE\n0x3067\t# HIRAGANA LETTER DE\n0x3068\t# HIRAGANA LETTER TO\n0x3069\t# HIRAGANA LETTER DO\n0x306A\t# HIRAGANA LETTER NA\n",
                    "rendered": {
                      "text": "0x3063\t# HIRAGANA LETTER SMALL TU\n0x3064\t# HIRAGANA LETTER TU\n0x3065\t# HIRAGANA LETTER DU\n0x3066\t# HIRAGANA LETTER TE\n0x3067\t# HIRAGANA LETTER DE\n0x3068\t# HIRAGANA LETTER TO\n0x3069\t# HIRAGANA LETTER DO\n0x306A\t# HIRAGANA LETTER NA\n",
                      "markdown": "`0x3063\t# HIRAGANA LETTER SMALL TU\n0x3064\t# HIRAGANA LETTER TU\n0x3065\t# HIRAGANA LETTER DU\n0x3066\t# HIRAGANA LETTER TE\n0x3067\t# HIRAGANA LETTER DE\n0x3068\t# HIRAGANA LETTER TO\n0x3069\t# HIRAGANA LETTER DO\n0x306A\t# HIRAGANA LETTER NA\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/an.orth"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 66,
                  "endLine": 28,
                  "snippet": {
                    "text": "# Aragonese (an)\n#\n# Source:\n# * Consello d’a Fabla Aragonesa, \"Normas graficas de l’aragonés\", at\n# http://www.charrando.com/normasgraficas.pdf\n# \n0041-005A\n0061-007A\n",
                    "rendered": {
                      "text": "# Aragonese (an)\n#\n# Source:\n# * Consello d’a Fabla Aragonesa, \"Normas graficas de l’aragonés\", at\n# http://www.charrando.com/normasgraficas.pdf\n# \n0041-005A\n0061-007A\n",
                      "markdown": "`# Aragonese (an)\n#\n# Source:\n# * Consello d’a Fabla Aragonesa, \"Normas graficas de l’aragonés\", at\n# http://www.charrando.com/normasgraficas.pdf\n# \n0041-005A\n0061-007A\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/jv.orth"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 48,
                  "endLine": 30,
                  "endColumn": 56,
                  "snippet": {
                    "text": "# http://www.omniglot.com/writing/javanese.htm\n# http://en.wikipedia.org/wiki/Javanese_language\n#\n# The historical Javanese script is not the main script anymore. Latin has\n# replaced it.\n#\n0041-005A\n",
                    "rendered": {
                      "text": "# http://www.omniglot.com/writing/javanese.htm\n# http://en.wikipedia.org/wiki/Javanese_language\n#\n# The historical Javanese script is not the main script anymore. Latin has\n# replaced it.\n#\n0041-005A\n",
                      "markdown": "`# http://www.omniglot.com/writing/javanese.htm\n# http://en.wikipedia.org/wiki/Javanese_language\n#\n# The historical Javanese script is not the main script anymore. Latin has\n# replaced it.\n#\n0041-005A\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-lang/jv.orth"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 25,
                  "endLine": 30,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# http://www.omniglot.com/writing/javanese.htm\n# http://en.wikipedia.org/wiki/Javanese_language\n#\n# The historical Javanese script is not the main script anymore. Latin has\n# replaced it.\n#\n0041-005A\n",
                    "rendered": {
                      "text": "# http://www.omniglot.com/writing/javanese.htm\n# http://en.wikipedia.org/wiki/Javanese_language\n#\n# The historical Javanese script is not the main script anymore. Latin has\n# replaced it.\n#\n0041-005A\n",
                      "markdown": "`# http://www.omniglot.com/writing/javanese.htm\n# http://en.wikipedia.org/wiki/Javanese_language\n#\n# The historical Javanese script is not the main script anymore. Latin has\n# replaced it.\n#\n0041-005A\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-light.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdlight</const>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdlight</const>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcdlight</const>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-light.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Use lcdlight as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Use lcdlight as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Use lcdlight as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-rgb.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>rgb</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>rgb</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"rgba\" mode=\"append\"><const>rgb</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-sub-pixel-rgb.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Enable sub-pixel rendering --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/link_confs.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 28,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    args = parser.parse_args()\n\n    if os.path.isabs(args.confpath):\n        destdir = os.environ.get('DESTDIR')\n        if destdir:\n            # c:\\destdir + c:\\prefix must produce c:\\destdir\\prefix\n            confpath = str(PurePath(destdir, *PurePath(args.confpath).parts[1:]))\n",
                    "rendered": {
                      "text": "    args = parser.parse_args()\n\n    if os.path.isabs(args.confpath):\n        destdir = os.environ.get('DESTDIR')\n        if destdir:\n            # c:\\destdir + c:\\prefix must produce c:\\destdir\\prefix\n            confpath = str(PurePath(destdir, *PurePath(args.confpath).parts[1:]))\n",
                      "markdown": "`    args = parser.parse_args()\n\n    if os.path.isabs(args.confpath):\n        destdir = os.environ.get('DESTDIR')\n        if destdir:\n            # c:\\destdir + c:\\prefix must produce c:\\destdir\\prefix\n            confpath = str(PurePath(destdir, *PurePath(args.confpath).parts[1:]))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/link_confs.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 21,
                  "endLine": 17,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    args = parser.parse_args()\n\n    if os.path.isabs(args.confpath):\n        destdir = os.environ.get('DESTDIR')\n        if destdir:\n            # c:\\destdir + c:\\prefix must produce c:\\destdir\\prefix\n            confpath = str(PurePath(destdir, *PurePath(args.confpath).parts[1:]))\n",
                    "rendered": {
                      "text": "    args = parser.parse_args()\n\n    if os.path.isabs(args.confpath):\n        destdir = os.environ.get('DESTDIR')\n        if destdir:\n            # c:\\destdir + c:\\prefix must produce c:\\destdir\\prefix\n            confpath = str(PurePath(destdir, *PurePath(args.confpath).parts[1:]))\n",
                      "markdown": "`    args = parser.parse_args()\n\n    if os.path.isabs(args.confpath):\n        destdir = os.environ.get('DESTDIR')\n        if destdir:\n            # c:\\destdir + c:\\prefix must produce c:\\destdir\\prefix\n            confpath = str(PurePath(destdir, *PurePath(args.confpath).parts[1:]))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-unhinted.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hinting\" mode=\"append\"><bool>false</bool></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hinting\" mode=\"append\"><bool>false</bool></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hinting\" mode=\"append\"><bool>false</bool></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-unhinted.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Disable hinting --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Disable hinting --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Disable hinting --> \n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-default.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcddefault</const>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcddefault</const>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit mode=\"append\" name=\"lcdfilter\">\n      <const>lcddefault</const>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/11-lcdfilter-default.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "<!--  Use lcddefault as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "<!--  Use lcddefault as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`<!--  Use lcddefault as default for LCD filter -->\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-slight.conf"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 59,
                  "endLine": 11,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintslight</const></edit>\n  </match>\n",
                    "rendered": {
                      "text": "      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintslight</const></edit>\n  </match>\n",
                      "markdown": "`      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n    -->\n    <edit name=\"hintstyle\" mode=\"append\"><const>hintslight</const></edit>\n  </match>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/conf.d/10-hinting-slight.conf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 10,
                  "endLine": 8,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                    "rendered": {
                      "text": "\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n",
                      "markdown": "`\n  <match target=\"pattern\">\n    <!--\n      This sort of configuration is available on the major desktop environments\n      and we don't have to break it with \"assign\" unconditionally. however, we\n      want to set something for others. So we use \"append\" here to get this working\n      in both cases so that most clients would takes a look at the first place only.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/Makefile.am"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tcp $(srcdir)/out.expected-long-family-names $(builddir)/out.expected\nelse\n$(builddir)/out.expected: $(srcdir)/out.expected-no-long-family-names Makefile\n\tcp $(srcdir)/out.expected-no-long-family-names $(builddir)/out.expected\nendif\n\nAM_CPPFLAGS = -I$(top_srcdir) -I$(top_builddir)\n",
                    "rendered": {
                      "text": "\tcp $(srcdir)/out.expected-long-family-names $(builddir)/out.expected\nelse\n$(builddir)/out.expected: $(srcdir)/out.expected-no-long-family-names Makefile\n\tcp $(srcdir)/out.expected-no-long-family-names $(builddir)/out.expected\nendif\n\nAM_CPPFLAGS = -I$(top_srcdir) -I$(top_builddir)\n",
                      "markdown": "`\tcp $(srcdir)/out.expected-long-family-names $(builddir)/out.expected\nelse\n$(builddir)/out.expected: $(srcdir)/out.expected-no-long-family-names Makefile\n\tcp $(srcdir)/out.expected-no-long-family-names $(builddir)/out.expected\nendif\n\nAM_CPPFLAGS = -I$(top_srcdir) -I$(top_builddir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/test/Makefile.am"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nif FREETYPE_PCF_LONG_FAMILY_NAMES\n$(builddir)/out.expected: $(srcdir)/out.expected-long-family-names Makefile\n\tcp $(srcdir)/out.expected-long-family-names $(builddir)/out.expected\nelse\n$(builddir)/out.expected: $(srcdir)/out.expected-no-long-family-names Makefile\n\tcp $(srcdir)/out.expected-no-long-family-names $(builddir)/out.expected\n",
                    "rendered": {
                      "text": "\nif FREETYPE_PCF_LONG_FAMILY_NAMES\n$(builddir)/out.expected: $(srcdir)/out.expected-long-family-names Makefile\n\tcp $(srcdir)/out.expected-long-family-names $(builddir)/out.expected\nelse\n$(builddir)/out.expected: $(srcdir)/out.expected-no-long-family-names Makefile\n\tcp $(srcdir)/out.expected-no-long-family-names $(builddir)/out.expected\n",
                      "markdown": "`\nif FREETYPE_PCF_LONG_FAMILY_NAMES\n$(builddir)/out.expected: $(srcdir)/out.expected-long-family-names Makefile\n\tcp $(srcdir)/out.expected-long-family-names $(builddir)/out.expected\nelse\n$(builddir)/out.expected: $(srcdir)/out.expected-no-long-family-names Makefile\n\tcp $(srcdir)/out.expected-no-long-family-names $(builddir)/out.expected\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccompat.c"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 28,
                  "endLine": 93,
                  "endColumn": 92,
                  "snippet": {
                    "text": "static int\nmkstemp (char *template)\n{\n    static const char s[] = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    int fd, i;\n    size_t l;\n\n",
                    "rendered": {
                      "text": "static int\nmkstemp (char *template)\n{\n    static const char s[] = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    int fd, i;\n    size_t l;\n\n",
                      "markdown": "`static int\nmkstemp (char *template)\n{\n    static const char s[] = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    int fd, i;\n    size_t l;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccompat.c"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 71,
                  "endLine": 271,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    if (access ((char *) parent, F_OK) == 0)\n\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;\n    else if (access ((char *) parent, F_OK) == -1)\n\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    FcStrFree (parent);\n",
                    "rendered": {
                      "text": "    if (access ((char *) parent, F_OK) == 0)\n\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;\n    else if (access ((char *) parent, F_OK) == -1)\n\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    FcStrFree (parent);\n",
                      "markdown": "`    if (access ((char *) parent, F_OK) == 0)\n\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;\n    else if (access ((char *) parent, F_OK) == -1)\n\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;\n    else\n\tret = FcFalse;\n    FcStrFree (parent);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccompat.c"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 41,
                  "endLine": 269,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    if (!parent)\n\treturn FcFalse;\n    if (access ((char *) parent, F_OK) == 0)\n\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;\n    else if (access ((char *) parent, F_OK) == -1)\n\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;\n    else\n",
                    "rendered": {
                      "text": "    if (!parent)\n\treturn FcFalse;\n    if (access ((char *) parent, F_OK) == 0)\n\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;\n    else if (access ((char *) parent, F_OK) == -1)\n\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;\n    else\n",
                      "markdown": "`    if (!parent)\n\treturn FcFalse;\n    if (access ((char *) parent, F_OK) == 0)\n\tret = mkdir ((char *) dir, 0755) == 0 && chmod ((char *) dir, 0755) == 0;\n    else if (access ((char *) parent, F_OK) == -1)\n\tret = FcMakeDirectory (parent) && (mkdir ((char *) dir, 0755) == 0) && chmod ((char *) dir, 0755) == 0;\n    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccompat.c"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 10,
                  "endLine": 233,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#elif HAVE_RAND_R\n    static unsigned int seed;\n\n    seed = time (NULL);\n    result = rand_r (&seed);\n#elif HAVE_RAND\n    static FcBool initialized = FcFalse;\n",
                    "rendered": {
                      "text": "#elif HAVE_RAND_R\n    static unsigned int seed;\n\n    seed = time (NULL);\n    result = rand_r (&seed);\n#elif HAVE_RAND\n    static FcBool initialized = FcFalse;\n",
                      "markdown": "`#elif HAVE_RAND_R\n    static unsigned int seed;\n\n    seed = time (NULL);\n    result = rand_r (&seed);\n#elif HAVE_RAND\n    static FcBool initialized = FcFalse;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccfg.c"
                },
                "region": {
                  "startLine": 2665,
                  "startColumn": 16,
                  "endLine": 2665,
                  "endColumn": 25,
                  "snippet": {
                    "text": "FcStrSet *\nFcConfigXdgDataDirs (void)\n{\n    const char *env = getenv (\"XDG_DATA_DIRS\");\n    FcStrSet *ret = FcStrSetCreate ();\n\n    if (env)\n",
                    "rendered": {
                      "text": "FcStrSet *\nFcConfigXdgDataDirs (void)\n{\n    const char *env = getenv (\"XDG_DATA_DIRS\");\n    FcStrSet *ret = FcStrSetCreate ();\n\n    if (env)\n",
                      "markdown": "`FcStrSet *\nFcConfigXdgDataDirs (void)\n{\n    const char *env = getenv (\"XDG_DATA_DIRS\");\n    FcStrSet *ret = FcStrSetCreate ();\n\n    if (env)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccfg.c"
                },
                "region": {
                  "startLine": 2637,
                  "startColumn": 16,
                  "endLine": 2637,
                  "endColumn": 25,
                  "snippet": {
                    "text": "FcChar8 *\nFcConfigXdgDataHome (void)\n{\n    const char *env = getenv (\"XDG_DATA_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n",
                    "rendered": {
                      "text": "FcChar8 *\nFcConfigXdgDataHome (void)\n{\n    const char *env = getenv (\"XDG_DATA_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n",
                      "markdown": "`FcChar8 *\nFcConfigXdgDataHome (void)\n{\n    const char *env = getenv (\"XDG_DATA_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccfg.c"
                },
                "region": {
                  "startLine": 2609,
                  "startColumn": 16,
                  "endLine": 2609,
                  "endColumn": 25,
                  "snippet": {
                    "text": "FcChar8 *\nFcConfigXdgConfigHome (void)\n{\n    const char *env = getenv (\"XDG_CONFIG_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n",
                    "rendered": {
                      "text": "FcChar8 *\nFcConfigXdgConfigHome (void)\n{\n    const char *env = getenv (\"XDG_CONFIG_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n",
                      "markdown": "`FcChar8 *\nFcConfigXdgConfigHome (void)\n{\n    const char *env = getenv (\"XDG_CONFIG_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccfg.c"
                },
                "region": {
                  "startLine": 2581,
                  "startColumn": 16,
                  "endLine": 2581,
                  "endColumn": 25,
                  "snippet": {
                    "text": "FcChar8 *\nFcConfigXdgCacheHome (void)\n{\n    const char *env = getenv (\"XDG_CACHE_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n",
                    "rendered": {
                      "text": "FcChar8 *\nFcConfigXdgCacheHome (void)\n{\n    const char *env = getenv (\"XDG_CACHE_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n",
                      "markdown": "`FcChar8 *\nFcConfigXdgCacheHome (void)\n{\n    const char *env = getenv (\"XDG_CACHE_HOME\");\n    FcChar8 *ret = NULL;\n\n    if (!_FcConfigHomeEnabled)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccfg.c"
                },
                "region": {
                  "startLine": 2488,
                  "startColumn": 4,
                  "endLine": 2488,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    int\t    i;\n\n    npath = 2;\t/* default dir + null */\n    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");\n    if (env)\n    {\n\te = env;\n",
                    "rendered": {
                      "text": "    int\t    i;\n\n    npath = 2;\t/* default dir + null */\n    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");\n    if (env)\n    {\n\te = env;\n",
                      "markdown": "`    int\t    i;\n\n    npath = 2;\t/* default dir + null */\n    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");\n    if (env)\n    {\n\te = env;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccfg.c"
                },
                "region": {
                  "startLine": 2488,
                  "startColumn": 3,
                  "endLine": 2488,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    int\t    i;\n\n    npath = 2;\t/* default dir + null */\n    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");\n    if (env)\n    {\n\te = env;\n",
                    "rendered": {
                      "text": "    int\t    i;\n\n    npath = 2;\t/* default dir + null */\n    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");\n    if (env)\n    {\n\te = env;\n",
                      "markdown": "`    int\t    i;\n\n    npath = 2;\t/* default dir + null */\n    env = (FcChar8 *) getenv (\"FONTCONFIG_PATH\");\n    if (env)\n    {\n\te = env;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcxml.c"
                },
                "region": {
                  "startLine": 3424,
                  "startColumn": 7,
                  "endLine": 3424,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    while (ret && (e = readdir (d)))\n    {\n\tint d_len;\n#define TAIL\t    \".conf\"\n#define TAIL_LEN    5\n\t/*\n\t * Add all files of the form [0-9]*.conf\n",
                    "rendered": {
                      "text": "    while (ret && (e = readdir (d)))\n    {\n\tint d_len;\n#define TAIL\t    \".conf\"\n#define TAIL_LEN    5\n\t/*\n\t * Add all files of the form [0-9]*.conf\n",
                      "markdown": "`    while (ret && (e = readdir (d)))\n    {\n\tint d_len;\n#define TAIL\t    \".conf\"\n#define TAIL_LEN    5\n\t/*\n\t * Add all files of the form [0-9]*.conf\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccharset.c"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 28,
                  "endLine": 989,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tfor (i = 0; i < 256; i += 32)\n\t\t{\n\t\t    if (*cm != *checkm)\n\t\t\tprintf (\"Mismatching sets at 0x%08x: 0x%08x != 0x%08x\\n\",\n\t\t\t\tci.ucs4 + i, *cm, *checkm);\n\t\t    cm++;\n\t\t    checkm++;\n",
                    "rendered": {
                      "text": "\t\tfor (i = 0; i < 256; i += 32)\n\t\t{\n\t\t    if (*cm != *checkm)\n\t\t\tprintf (\"Mismatching sets at 0x%08x: 0x%08x != 0x%08x\\n\",\n\t\t\t\tci.ucs4 + i, *cm, *checkm);\n\t\t    cm++;\n\t\t    checkm++;\n",
                      "markdown": "`\t\tfor (i = 0; i < 256; i += 32)\n\t\t{\n\t\t    if (*cm != *checkm)\n\t\t\tprintf (\"Mismatching sets at 0x%08x: 0x%08x != 0x%08x\\n\",\n\t\t\t\tci.ucs4 + i, *cm, *checkm);\n\t\t    cm++;\n\t\t    checkm++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccharset.c"
                },
                "region": {
                  "startLine": 977,
                  "startColumn": 26,
                  "endLine": 977,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n\t    {\n\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);\n\t\tFcCharSetIterNext (check, &checki);\n\t    }\n\t    else\n",
                    "rendered": {
                      "text": "\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n\t    {\n\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);\n\t\tFcCharSetIterNext (check, &checki);\n\t    }\n\t    else\n",
                      "markdown": "`\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n\t    {\n\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);\n\t\tFcCharSetIterNext (check, &checki);\n\t    }\n\t    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccharset.c"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 28,
                  "endLine": 972,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t{\n\t    if (ci.ucs4 < checki.ucs4)\n\t    {\n\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);\n\t\tFcCharSetIterNext (c, &ci);\n\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n",
                    "rendered": {
                      "text": "\t{\n\t    if (ci.ucs4 < checki.ucs4)\n\t    {\n\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);\n\t\tFcCharSetIterNext (c, &ci);\n\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n",
                      "markdown": "`\t{\n\t    if (ci.ucs4 < checki.ucs4)\n\t    {\n\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);\n\t\tFcCharSetIterNext (c, &ci);\n\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccharset.c"
                },
                "region": {
                  "startLine": 977,
                  "startColumn": 21,
                  "endLine": 977,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n\t    {\n\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);\n\t\tFcCharSetIterNext (check, &checki);\n\t    }\n\t    else\n",
                    "rendered": {
                      "text": "\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n\t    {\n\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);\n\t\tFcCharSetIterNext (check, &checki);\n\t    }\n\t    else\n",
                      "markdown": "`\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n\t    {\n\t\tprintf (\"Extra leaf node at 0x%x\\n\", checki.ucs4);\n\t\tFcCharSetIterNext (check, &checki);\n\t    }\n\t    else\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fccharset.c"
                },
                "region": {
                  "startLine": 972,
                  "startColumn": 23,
                  "endLine": 972,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t{\n\t    if (ci.ucs4 < checki.ucs4)\n\t    {\n\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);\n\t\tFcCharSetIterNext (c, &ci);\n\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n",
                    "rendered": {
                      "text": "\t{\n\t    if (ci.ucs4 < checki.ucs4)\n\t    {\n\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);\n\t\tFcCharSetIterNext (c, &ci);\n\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n",
                      "markdown": "`\t{\n\t    if (ci.ucs4 < checki.ucs4)\n\t    {\n\t\tprintf (\"Missing leaf node at 0x%x\\n\", ci.ucs4);\n\t\tFcCharSetIterNext (c, &ci);\n\t    }\n\t    else if (checki.ucs4 < ci.ucs4)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcformat.c"
                },
                "region": {
                  "startLine": 709,
                  "startColumn": 43,
                  "endLine": 709,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tidx = strtol ((const char *) c->format, (char **) &c->format, 10);\n\tif (idx < 0)\n\t{\n\t    message (\"expected non-negative number at %d\",\n\t\t     c->format-1 - c->format_orig + 1);\n\t    return FcFalse;\n\t}\n",
                    "rendered": {
                      "text": "\tidx = strtol ((const char *) c->format, (char **) &c->format, 10);\n\tif (idx < 0)\n\t{\n\t    message (\"expected non-negative number at %d\",\n\t\t     c->format-1 - c->format_orig + 1);\n\t    return FcFalse;\n\t}\n",
                      "markdown": "`\tidx = strtol ((const char *) c->format, (char **) &c->format, 10);\n\tif (idx < 0)\n\t{\n\t    message (\"expected non-negative number at %d\",\n\t\t     c->format-1 - c->format_orig + 1);\n\t    return FcFalse;\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcformat.c"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 34,
                  "endLine": 256,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n    if (p == c->word)\n    {\n\tmessage (\"expected character data at %d\",\n\t\t c->format - c->format_orig + 1);\n\treturn FcFalse;\n    }\n",
                    "rendered": {
                      "text": "\n    if (p == c->word)\n    {\n\tmessage (\"expected character data at %d\",\n\t\t c->format - c->format_orig + 1);\n\treturn FcFalse;\n    }\n",
                      "markdown": "`\n    if (p == c->word)\n    {\n\tmessage (\"expected character data at %d\",\n\t\t c->format - c->format_orig + 1);\n\treturn FcFalse;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcformat.c"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 30,
                  "endLine": 224,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n    if (p == c->word)\n    {\n\tmessage (\"expected identifier at %d\",\n\t\t c->format - c->format_orig + 1);\n\treturn FcFalse;\n    }\n",
                    "rendered": {
                      "text": "\n    if (p == c->word)\n    {\n\tmessage (\"expected identifier at %d\",\n\t\t c->format - c->format_orig + 1);\n\treturn FcFalse;\n    }\n",
                      "markdown": "`\n    if (p == c->word)\n    {\n\tmessage (\"expected identifier at %d\",\n\t\t c->format - c->format_orig + 1);\n\treturn FcFalse;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcformat.c"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 28,
                  "endLine": 159,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t    message (\"format ended while expecting '%c'\",\n\t\t     term);\n\telse\n\t    message (\"expected '%c' at %d\",\n\t\t     term, c->format - c->format_orig + 1);\n    }\n    return res;\n",
                    "rendered": {
                      "text": "\t    message (\"format ended while expecting '%c'\",\n\t\t     term);\n\telse\n\t    message (\"expected '%c' at %d\",\n\t\t     term, c->format - c->format_orig + 1);\n    }\n    return res;\n",
                      "markdown": "`\t    message (\"format ended while expecting '%c'\",\n\t\t     term);\n\telse\n\t    message (\"expected '%c' at %d\",\n\t\t     term, c->format - c->format_orig + 1);\n    }\n    return res;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcname.c"
                },
                "region": {
                  "startLine": 377,
                  "startColumn": 4,
                  "endLine": 377,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t    size_t len = strlen ((const char *) string);\n\t    int si, ei;\n\n\t    sc = malloc (len + 1);\n\t    ec = malloc (len + 1);\n\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)\n\t    {\n",
                    "rendered": {
                      "text": "\t    size_t len = strlen ((const char *) string);\n\t    int si, ei;\n\n\t    sc = malloc (len + 1);\n\t    ec = malloc (len + 1);\n\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)\n\t    {\n",
                      "markdown": "`\t    size_t len = strlen ((const char *) string);\n\t    int si, ei;\n\n\t    sc = malloc (len + 1);\n\t    ec = malloc (len + 1);\n\t    if (sc && ec && sscanf ((char *) string, \"[%s %[^]]]\", sc, ec) == 2)\n\t    {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/fcatomic.c"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 18,
                  "endLine": 163,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t */\n\tif (FcStat (atomic->lck, &lck_stat) >= 0)\n\t{\n\t    time_t  now = time (0);\n\t    if ((long int) (now - lck_stat.st_mtime) > 10 * 60)\n\t    {\n#ifdef HAVE_LINK\n",
                    "rendered": {
                      "text": "\t */\n\tif (FcStat (atomic->lck, &lck_stat) >= 0)\n\t{\n\t    time_t  now = time (0);\n\t    if ((long int) (now - lck_stat.st_mtime) > 10 * 60)\n\t    {\n#ifdef HAVE_LINK\n",
                      "markdown": "`\t */\n\tif (FcStat (atomic->lck, &lck_stat) >= 0)\n\t{\n\t    time_t  now = time (0);\n\t    if ((long int) (now - lck_stat.st_mtime) > 10 * 60)\n\t    {\n#ifdef HAVE_LINK\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 52,
                  "endLine": 9,
                  "endColumn": 57,
                  "snippet": {
                    "text": "import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n",
                    "rendered": {
                      "text": "import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n",
                      "markdown": "`import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 31,
                  "endLine": 9,
                  "endColumn": 37,
                  "snippet": {
                    "text": "import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n",
                    "rendered": {
                      "text": "import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n",
                      "markdown": "`import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/makealias.py"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 6,
                  "snippet": {
                    "text": "import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n",
                    "rendered": {
                      "text": "import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n",
                      "markdown": "`import argparse\nfrom collections import OrderedDict\n\n# cat fontconfig/fontconfig.h | grep '^Fc[^ ]* *(' | sed -e 's/ *(.*$//'\n\ndef extract(fname):\n    with open(fname, 'r', encoding='utf-8') as f:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/Makefile.am"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n$(builddir)/fcobjshash.h: Makefile fcobjshash.gperf\n\t$(AM_V_GEN) $(GPERF) --pic -m 100 fcobjshash.gperf > $@.tmp && \\\n\tmv -f $@.tmp $@ || ( $(RM) $@.tmp && false )\n\nEXTRA_DIST += \\\n\tfcobjshash.gperf.h\n",
                    "rendered": {
                      "text": "\n$(builddir)/fcobjshash.h: Makefile fcobjshash.gperf\n\t$(AM_V_GEN) $(GPERF) --pic -m 100 fcobjshash.gperf > $@.tmp && \\\n\tmv -f $@.tmp $@ || ( $(RM) $@.tmp && false )\n\nEXTRA_DIST += \\\n\tfcobjshash.gperf.h\n",
                      "markdown": "`\n$(builddir)/fcobjshash.h: Makefile fcobjshash.gperf\n\t$(AM_V_GEN) $(GPERF) --pic -m 100 fcobjshash.gperf > $@.tmp && \\\n\tmv -f $@.tmp $@ || ( $(RM) $@.tmp && false )\n\nEXTRA_DIST += \\\n\tfcobjshash.gperf.h\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/Makefile.am"
                },
                "region": {
                  "startLine": 120,
                  "endLine": 120,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\t/^$$/||/^#/ { next; }; \\\n\t\t{ if (!no_write) print; next; }; \\\n\t' - > $@.tmp && \\\n\tmv -f $@.tmp fcobjshash.gperf && touch $@ || ( $(RM) $@.tmp && false )\n\n$(builddir)/fcobjshash.h: Makefile fcobjshash.gperf\n\t$(AM_V_GEN) $(GPERF) --pic -m 100 fcobjshash.gperf > $@.tmp && \\\n",
                    "rendered": {
                      "text": "\t\t/^$$/||/^#/ { next; }; \\\n\t\t{ if (!no_write) print; next; }; \\\n\t' - > $@.tmp && \\\n\tmv -f $@.tmp fcobjshash.gperf && touch $@ || ( $(RM) $@.tmp && false )\n\n$(builddir)/fcobjshash.h: Makefile fcobjshash.gperf\n\t$(AM_V_GEN) $(GPERF) --pic -m 100 fcobjshash.gperf > $@.tmp && \\\n",
                      "markdown": "`\t\t/^$$/||/^#/ { next; }; \\\n\t\t{ if (!no_write) print; next; }; \\\n\t' - > $@.tmp && \\\n\tmv -f $@.tmp fcobjshash.gperf && touch $@ || ( $(RM) $@.tmp && false )\n\n$(builddir)/fcobjshash.h: Makefile fcobjshash.gperf\n\t$(AM_V_GEN) $(GPERF) --pic -m 100 fcobjshash.gperf > $@.tmp && \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/src/Makefile.am"
                },
                "region": {
                  "startLine": 114,
                  "endLine": 114,
                  "endColumn": 5,
                  "snippet": {
                    "text": "stamp-fcobjshash.gperf: fcobjshash.gperf.h fcobjs.h\n\t$(AM_V_GEN) $(CPP) -I$(top_srcdir) $(CPPFLAGS) $< | \\\n\t$(SED) 's/^ *//;s/ *, */,/' | \\\n\tawk ' \\\n\t\t/CUT_OUT_BEGIN/ { no_write=1; next; }; \\\n\t\t/CUT_OUT_END/ { no_write=0; next; }; \\\n\t\t/^$$/||/^#/ { next; }; \\\n",
                    "rendered": {
                      "text": "stamp-fcobjshash.gperf: fcobjshash.gperf.h fcobjs.h\n\t$(AM_V_GEN) $(CPP) -I$(top_srcdir) $(CPPFLAGS) $< | \\\n\t$(SED) 's/^ *//;s/ *, */,/' | \\\n\tawk ' \\\n\t\t/CUT_OUT_BEGIN/ { no_write=1; next; }; \\\n\t\t/CUT_OUT_END/ { no_write=0; next; }; \\\n\t\t/^$$/||/^#/ { next; }; \\\n",
                      "markdown": "`stamp-fcobjshash.gperf: fcobjshash.gperf.h fcobjs.h\n\t$(AM_V_GEN) $(CPP) -I$(top_srcdir) $(CPPFLAGS) $< | \\\n\t$(SED) 's/^ *//;s/ *, */,/' | \\\n\tawk ' \\\n\t\t/CUT_OUT_BEGIN/ { no_write=1; next; }; \\\n\t\t/CUT_OUT_END/ { no_write=0; next; }; \\\n\t\t/^$$/||/^#/ { next; }; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/po/Makevars"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 39,
                  "endLine": 74,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n# regenerate PO files on \"make dist\".  Possible values are \"yes\" and\n# \"no\".  Set this to no if the POT file and PO files are maintained\n# externally.\n",
                    "rendered": {
                      "text": "# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n# regenerate PO files on \"make dist\".  Possible values are \"yes\" and\n# \"no\".  Set this to no if the POT file and PO files are maintained\n# externally.\n",
                      "markdown": "`# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n# regenerate PO files on \"make dist\".  Possible values are \"yes\" and\n# \"no\".  Set this to no if the POT file and PO files are maintained\n# externally.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/po/Makevars"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 59,
                  "endLine": 71,
                  "snippet": {
                    "text": "\n# This tells whether or not to regenerate a PO file when $(DOMAIN).pot\n# has changed.  Possible values are \"yes\" and \"no\".  Set this to no if\n# the POT file is checked in the repository and the version control\n# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n",
                    "rendered": {
                      "text": "\n# This tells whether or not to regenerate a PO file when $(DOMAIN).pot\n# has changed.  Possible values are \"yes\" and \"no\".  Set this to no if\n# the POT file is checked in the repository and the version control\n# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n",
                      "markdown": "`\n# This tells whether or not to regenerate a PO file when $(DOMAIN).pot\n# has changed.  Possible values are \"yes\" and \"no\".  Set this to no if\n# the POT file is checked in the repository and the version control\n# program ignores timestamps.\nPO_DEPENDS_ON_POT = yes\n\n# This tells whether or not to forcibly update $(DOMAIN).pot and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/po/Makevars"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 66,
                  "endLine": 36,
                  "endColumn": 72,
                  "snippet": {
                    "text": "#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n",
                    "rendered": {
                      "text": "#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n",
                      "markdown": "`#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fc-case/Makefile.am"
                },
                "region": {
                  "startLine": 32,
                  "endLine": 32,
                  "endColumn": 6,
                  "snippet": {
                    "text": "DIST = $(srcdir)/CaseFolding.txt\n\nupdate:\n\tcurl -s -o $(srcdir)/CaseFolding.txt http://www.unicode.org/Public/UNIDATA/CaseFolding.txt\n\ninclude $(top_srcdir)/Tools.mk\n\n",
                    "rendered": {
                      "text": "DIST = $(srcdir)/CaseFolding.txt\n\nupdate:\n\tcurl -s -o $(srcdir)/CaseFolding.txt http://www.unicode.org/Public/UNIDATA/CaseFolding.txt\n\ninclude $(top_srcdir)/Tools.mk\n\n",
                      "markdown": "`DIST = $(srcdir)/CaseFolding.txt\n\nupdate:\n\tcurl -s -o $(srcdir)/CaseFolding.txt http://www.unicode.org/Public/UNIDATA/CaseFolding.txt\n\ninclude $(top_srcdir)/Tools.mk\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 13,
                  "endLine": 125,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t#\n\t\n\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\nfi\n",
                    "rendered": {
                      "text": "\t#\n\t\n\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\nfi\n",
                      "markdown": "`\t#\n\t\n\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\nfi\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 1,
                  "endLine": 90,
                  "endColumn": 9,
                  "snippet": {
                    "text": "date=`date '+%Y-%m-%d'`\n\n#\n# Update the readme file\n# \nif [ $version != $last ]; then\n\t#\n",
                    "rendered": {
                      "text": "date=`date '+%Y-%m-%d'`\n\n#\n# Update the readme file\n# \nif [ $version != $last ]; then\n\t#\n",
                      "markdown": "`date=`date '+%Y-%m-%d'`\n\n#\n# Update the readme file\n# \nif [ $version != $last ]; then\n\t#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tawk -F. '{ printf (\"major=%d\\nminor=%d\\nrevision=%d\\n\",\n\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\n",
                    "rendered": {
                      "text": "\tawk -F. '{ printf (\"major=%d\\nminor=%d\\nrevision=%d\\n\",\n\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\n",
                      "markdown": "`\tawk -F. '{ printf (\"major=%d\\nminor=%d\\nrevision=%d\\n\",\n\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 140,
                  "endLine": 141,
                  "endColumn": 4,
                  "snippet": {
                    "text": "$test git tag -s -m \"Version $version\" $version\n\n# Make distributed change log\n\ngit log --stat $last.. > ChangeLog-$version\n\n",
                    "rendered": {
                      "text": "$test git tag -s -m \"Version $version\" $version\n\n# Make distributed change log\n\ngit log --stat $last.. > ChangeLog-$version\n\n",
                      "markdown": "`$test git tag -s -m \"Version $version\" $version\n\n# Make distributed change log\n\ngit log --stat $last.. > ChangeLog-$version\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 5,
                  "endLine": 137,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tNEWS\n\n# tag the tree\n$test git tag -s -m \"Version $version\" $version\n\n# Make distributed change log\n\n",
                    "rendered": {
                      "text": "\tNEWS\n\n# tag the tree\n$test git tag -s -m \"Version $version\" $version\n\n# Make distributed change log\n\n",
                      "markdown": "`\tNEWS\n\n# tag the tree\n$test git tag -s -m \"Version $version\" $version\n\n# Make distributed change log\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 5,
                  "endLine": 130,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tmv NEWS.tmp NEWS\nfi\n\n$test git commit -m\"Bump version to $version\" \\\n\tconfigure.ac \\\n\tfontconfig/fontconfig.h \\\n\tmeson.build \\\n",
                    "rendered": {
                      "text": "\tmv NEWS.tmp NEWS\nfi\n\n$test git commit -m\"Bump version to $version\" \\\n\tconfigure.ac \\\n\tfontconfig/fontconfig.h \\\n\tmeson.build \\\n",
                      "markdown": "`\tmv NEWS.tmp NEWS\nfi\n\n$test git commit -m\"Bump version to $version\" \\\n\tconfigure.ac \\\n\tfontconfig/fontconfig.h \\\n\tmeson.build \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\nfi\n\n$test git commit -m\"Bump version to $version\" \\\n",
                    "rendered": {
                      "text": "\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\nfi\n\n$test git commit -m\"Bump version to $version\" \\\n",
                      "markdown": "`\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\nfi\n\n$test git commit -m\"Bump version to $version\" \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 124,
                  "endLine": 124,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t# previous changelogs\n\t#\n\t\n\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\n",
                    "rendered": {
                      "text": "\t# previous changelogs\n\t#\n\t\n\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\n",
                      "markdown": "`\t# previous changelogs\n\t#\n\t\n\tsed -n '/^2\\.[0-9.]*/,$p' NEWS) > NEWS.tmp ||\n\t\t(echo \"NEWS update failed\"; exit 1)\n\t\n\tmv NEWS.tmp NEWS\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 60,
                  "endLine": 119,
                  "snippet": {
                    "text": "\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n\t#\n",
                    "rendered": {
                      "text": "\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n\t#\n",
                      "markdown": "`\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n\t#\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 45,
                  "endLine": 118,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n",
                    "rendered": {
                      "text": "\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n",
                      "markdown": "`\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n",
                    "rendered": {
                      "text": "\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n",
                      "markdown": "`\t\n\techo $version_note\n\techo\n\tgit log --no-merges --pretty=short $last.. | git shortlog | cat\n\t\n\t#\n\t# previous changelogs\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 51,
                  "endLine": 98,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t#\n\t(sed '/^2\\.[0-9.]*/,$d' NEWS |\n\t\tsed -r -e \"s/Version.*/Version $version_note/\" \\\n\t\t    -e \"s/[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/$date/\" | awk '\n\t\t    /^[ \\t]/ {\n\t\t\t\tgsub (\"^[ \\t]*\", \"\");\n\t\t\t\tgsub (\"[ \\t]*$\", \"\");\n",
                    "rendered": {
                      "text": "\t#\n\t(sed '/^2\\.[0-9.]*/,$d' NEWS |\n\t\tsed -r -e \"s/Version.*/Version $version_note/\" \\\n\t\t    -e \"s/[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/$date/\" | awk '\n\t\t    /^[ \\t]/ {\n\t\t\t\tgsub (\"^[ \\t]*\", \"\");\n\t\t\t\tgsub (\"[ \\t]*$\", \"\");\n",
                      "markdown": "`\t#\n\t(sed '/^2\\.[0-9.]*/,$d' NEWS |\n\t\tsed -r -e \"s/Version.*/Version $version_note/\" \\\n\t\t    -e \"s/[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/$date/\" | awk '\n\t\t    /^[ \\t]/ {\n\t\t\t\tgsub (\"^[ \\t]*\", \"\");\n\t\t\t\tgsub (\"[ \\t]*$\", \"\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 1,
                  "endLine": 97,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t# header\n\t#\n\t(sed '/^2\\.[0-9.]*/,$d' NEWS |\n\t\tsed -r -e \"s/Version.*/Version $version_note/\" \\\n\t\t    -e \"s/[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/$date/\" | awk '\n\t\t    /^[ \\t]/ {\n\t\t\t\tgsub (\"^[ \\t]*\", \"\");\n",
                    "rendered": {
                      "text": "\t# header\n\t#\n\t(sed '/^2\\.[0-9.]*/,$d' NEWS |\n\t\tsed -r -e \"s/Version.*/Version $version_note/\" \\\n\t\t    -e \"s/[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/$date/\" | awk '\n\t\t    /^[ \\t]/ {\n\t\t\t\tgsub (\"^[ \\t]*\", \"\");\n",
                      "markdown": "`\t# header\n\t#\n\t(sed '/^2\\.[0-9.]*/,$d' NEWS |\n\t\tsed -r -e \"s/Version.*/Version $version_note/\" \\\n\t\t    -e \"s/[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/$date/\" | awk '\n\t\t    /^[ \\t]/ {\n\t\t\t\tgsub (\"^[ \\t]*\", \"\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tlast=\"$last_note.0\"\n\t;;\n*)\n\techo 'cannot find previous changelog' 1>&2\n\texit 1\nesac\n\n",
                    "rendered": {
                      "text": "\tlast=\"$last_note.0\"\n\t;;\n*)\n\techo 'cannot find previous changelog' 1>&2\n\texit 1\nesac\n\n",
                      "markdown": "`\tlast=\"$last_note.0\"\n\t;;\n*)\n\techo 'cannot find previous changelog' 1>&2\n\texit 1\nesac\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "endColumn": 5,
                  "snippet": {
                    "text": "#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n\tsed 's/ (2\\.[0-9]* RC[0-9]*)//'`\ncase $last_note in\n2.*.*)\n\tlast=$last_note\n",
                    "rendered": {
                      "text": "#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n\tsed 's/ (2\\.[0-9]* RC[0-9]*)//'`\ncase $last_note in\n2.*.*)\n\tlast=$last_note\n",
                      "markdown": "`#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n\tsed 's/ (2\\.[0-9]* RC[0-9]*)//'`\ncase $last_note in\n2.*.*)\n\tlast=$last_note\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# Find previous version in NEWS\n#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n\tsed 's/ (2\\.[0-9]* RC[0-9]*)//'`\ncase $last_note in\n2.*.*)\n",
                    "rendered": {
                      "text": "# Find previous version in NEWS\n#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n\tsed 's/ (2\\.[0-9]* RC[0-9]*)//'`\ncase $last_note in\n2.*.*)\n",
                      "markdown": "`# Find previous version in NEWS\n#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n\tsed 's/ (2\\.[0-9]* RC[0-9]*)//'`\ncase $last_note in\n2.*.*)\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 1,
                  "endLine": 67,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\tprintf (\"%d.%d.%d\\n\", $1, $2, $3); }'`\n\t\t\n#\n# Find previous version in NEWS\n#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n",
                    "rendered": {
                      "text": "\t\tprintf (\"%d.%d.%d\\n\", $1, $2, $3); }'`\n\t\t\n#\n# Find previous version in NEWS\n#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n",
                      "markdown": "`\t\tprintf (\"%d.%d.%d\\n\", $1, $2, $3); }'`\n\t\t\n#\n# Find previous version in NEWS\n#\nlast_note=`grep '^2\\.[0-9.]*' NEWS |\n\thead -1 |\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 29,
                  "endLine": 57,
                  "endColumn": 34,
                  "snippet": {
                    "text": "#\n# Compute pretty form of new version number\n#\nversion_note=`echo $version | awk -F. '{ \n\tif ($3 > 90) \n\t\tprintf (\"%d.%d.%d (%d.%d RC%d)\\n\",\n\t\t\t$1, $2, $3, $1, $2 + 1, $3 - 90);\n",
                    "rendered": {
                      "text": "#\n# Compute pretty form of new version number\n#\nversion_note=`echo $version | awk -F. '{ \n\tif ($3 > 90) \n\t\tprintf (\"%d.%d.%d (%d.%d RC%d)\\n\",\n\t\t\t$1, $2, $3, $1, $2 + 1, $3 - 90);\n",
                      "markdown": "`#\n# Compute pretty form of new version number\n#\nversion_note=`echo $version | awk -F. '{ \n\tif ($3 > 90) \n\t\tprintf (\"%d.%d.%d (%d.%d RC%d)\\n\",\n\t\t\t$1, $2, $3, $1, $2 + 1, $3 - 90);\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 52,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n\t-e \"/^#define FC_MINOR/s/[0-9][0-9]*/$minor/\" \\\n\t-e \"/^#define FC_REVISION/s/[0-9][0-9]*/$revision/\"\n\nsed -i meson.build -e \"/version: /s/2\\.[0-9.]*/$version/\"\n\n#\n# Compute pretty form of new version number\n",
                    "rendered": {
                      "text": "\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n\t-e \"/^#define FC_MINOR/s/[0-9][0-9]*/$minor/\" \\\n\t-e \"/^#define FC_REVISION/s/[0-9][0-9]*/$revision/\"\n\nsed -i meson.build -e \"/version: /s/2\\.[0-9.]*/$version/\"\n\n#\n# Compute pretty form of new version number\n",
                      "markdown": "`\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n\t-e \"/^#define FC_MINOR/s/[0-9][0-9]*/$minor/\" \\\n\t-e \"/^#define FC_REVISION/s/[0-9][0-9]*/$revision/\"\n\nsed -i meson.build -e \"/version: /s/2\\.[0-9.]*/$version/\"\n\n#\n# Compute pretty form of new version number\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 47,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\nsed -i fontconfig/fontconfig.h \\\n\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n\t-e \"/^#define FC_MINOR/s/[0-9][0-9]*/$minor/\" \\\n\t-e \"/^#define FC_REVISION/s/[0-9][0-9]*/$revision/\"\n",
                    "rendered": {
                      "text": "# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\nsed -i fontconfig/fontconfig.h \\\n\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n\t-e \"/^#define FC_MINOR/s/[0-9][0-9]*/$minor/\" \\\n\t-e \"/^#define FC_REVISION/s/[0-9][0-9]*/$revision/\"\n",
                      "markdown": "`# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\nsed -i fontconfig/fontconfig.h \\\n\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n\t-e \"/^#define FC_MINOR/s/[0-9][0-9]*/$minor/\" \\\n\t-e \"/^#define FC_REVISION/s/[0-9][0-9]*/$revision/\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 44,
                  "endLine": 45,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\nsed -i fontconfig/fontconfig.h \\\n\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n",
                    "rendered": {
                      "text": "\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\nsed -i fontconfig/fontconfig.h \\\n\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n",
                      "markdown": "`\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n\nsed -i configure.ac -e \"/^AC_INIT(/s/2\\.[0-9.]*/$version/\"\n\nsed -i fontconfig/fontconfig.h \\\n\t-e \"/^#define FC_MAJOR/s/[0-9][0-9]*/$major/\" \\\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/new-version.sh"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "endColumn": 5,
                  "snippet": {
                    "text": "esac\n\neval `echo $version | \n\tawk -F. '{ printf (\"major=%d\\nminor=%d\\nrevision=%d\\n\",\n\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n",
                    "rendered": {
                      "text": "esac\n\neval `echo $version | \n\tawk -F. '{ printf (\"major=%d\\nminor=%d\\nrevision=%d\\n\",\n\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n",
                      "markdown": "`esac\n\neval `echo $version | \n\tawk -F. '{ printf (\"major=%d\\nminor=%d\\nrevision=%d\\n\",\n\t\t\t   $1, $2, $3); }'`\n\t\t\t   \n# Update the version numbers\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 44,
                  "endLine": 275,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                    "rendered": {
                      "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                      "markdown": "`    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 5,
                  "endLine": 828,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  script:\n    - |\n      mkdir public || :\n      cp -a build*/doc/fontconfig-user.html build*/doc/fontconfig-devel public/\n  artifacts:\n    paths:\n      - public\n",
                    "rendered": {
                      "text": "  script:\n    - |\n      mkdir public || :\n      cp -a build*/doc/fontconfig-user.html build*/doc/fontconfig-devel public/\n  artifacts:\n    paths:\n      - public\n",
                      "markdown": "`  script:\n    - |\n      mkdir public || :\n      cp -a build*/doc/fontconfig-user.html build*/doc/fontconfig-devel public/\n  artifacts:\n    paths:\n      - public\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 5,
                  "endLine": 276,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n\n",
                    "rendered": {
                      "text": "    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n\n",
                      "markdown": "`    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 44,
                  "endLine": 275,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                    "rendered": {
                      "text": "    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n",
                      "markdown": "`    - echo \"MAKEFLAGS=\\\"$MAKEFLAGS\\\"\" >> fcenv\n    - echo \"MAKE=\\\"$MAKE\\\"\" >> fcenv\n    - \"scp fcenv vm:~/$CI_PROJECT_NAME/.gitlab-ci/fcenv\"\n    - /app/vmctl exec \"cd $CI_PROJECT_NAME ; bash .gitlab-ci/build.sh ${buildopt[@]}\" && touch .success || true\n    - scp -r vm:$CI_PROJECT_NAME/build $BUILDDIR\n\n    - *check_tainted\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 32,
                  "endLine": 234,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n.check_tainted: &check_tainted |\n  # make sure the kernel is not tainted\n  if [[ \"$(ssh localhost -p 5555 cat /proc/sys/kernel/tainted)\" -gt 0 ]];\n  then\n    echo tainted kernel ;\n    exit 1 ;\n",
                    "rendered": {
                      "text": "\n.check_tainted: &check_tainted |\n  # make sure the kernel is not tainted\n  if [[ \"$(ssh localhost -p 5555 cat /proc/sys/kernel/tainted)\" -gt 0 ]];\n  then\n    echo tainted kernel ;\n    exit 1 ;\n",
                      "markdown": "`\n.check_tainted: &check_tainted |\n  # make sure the kernel is not tainted\n  if [[ \"$(ssh localhost -p 5555 cat /proc/sys/kernel/tainted)\" -gt 0 ]];\n  then\n    echo tainted kernel ;\n    exit 1 ;\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 28,
                  "endLine": 170,
                  "snippet": {
                    "text": "  stage: container_clean\n  image: golang:alpine\n  before_script:\n    - apk add python3 py-pip git\n    - pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates\n  script:\n    - ci-fairy -v --authfile $AUTHFILE delete-image\n            --repository $FDO_DISTRIBUTION_NAME/$FDO_DISTRIBUTION_VERSION\n",
                    "rendered": {
                      "text": "  stage: container_clean\n  image: golang:alpine\n  before_script:\n    - apk add python3 py-pip git\n    - pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates\n  script:\n    - ci-fairy -v --authfile $AUTHFILE delete-image\n            --repository $FDO_DISTRIBUTION_NAME/$FDO_DISTRIBUTION_VERSION\n",
                      "markdown": "`  stage: container_clean\n  image: golang:alpine\n  before_script:\n    - apk add python3 py-pip git\n    - pip3 install git+http://gitlab.freedesktop.org/freedesktop/ci-templates\n  script:\n    - ci-fairy -v --authfile $AUTHFILE delete-image\n            --repository $FDO_DISTRIBUTION_NAME/$FDO_DISTRIBUTION_VERSION\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 116,
                  "endLine": 143,
                  "endColumn": 122,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '13.2'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '13.2'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '13.2'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 106,
                  "endLine": 143,
                  "endColumn": 111,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '13.2'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '13.2'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '13.2'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 116,
                  "endLine": 131,
                  "endColumn": 122,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '14.0'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '14.0'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '14.0'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 106,
                  "endLine": 131,
                  "endColumn": 111,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '14.0'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '14.0'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '14.0'\n    FDO_DISTRIBUTION_PACKAGES: 'gcc autoconf automake libtool gettext gperf expat libxml2 freetype2 json-c git ninja wget python3 py39-pip pkgconf gmake gettext-runtime'\n    FDO_DISTRIBUTION_TAG: $FREEBSD_TAG\n    FDO_DISTRIBUTION_EXEC: $FREEBSD_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 214,
                  "endLine": 119,
                  "endColumn": 220,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '39'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '39'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '39'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 155,
                  "endLine": 119,
                  "endColumn": 160,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '39'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '39'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '39'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 214,
                  "endLine": 109,
                  "endColumn": 220,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 155,
                  "endLine": 109,
                  "endColumn": 160,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 214,
                  "endLine": 99,
                  "endColumn": 220,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: 'rawhide'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: 'rawhide'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: 'rawhide'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 155,
                  "endLine": 99,
                  "endColumn": 160,
                  "snippet": {
                    "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: 'rawhide'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                    "rendered": {
                      "text": "  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: 'rawhide'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n",
                      "markdown": "`  variables:\n    GIT_STRATEGY: none\n    FDO_DISTRIBUTION_VERSION: 'rawhide'\n    FDO_DISTRIBUTION_PACKAGES: '@buildsys-build autoconf automake libtool gettext gettext-devel gperf expat-devel libxml2-devel freetype-devel json-c-devel git docbook-utils docbook-utils-pdf bubblewrap ninja-build wget python3-pip mingw64-expat mingw64-gcc mingw64-gettext mingw64-freetype mingw64-libxml2 wine'\n    FDO_DISTRIBUTION_TAG: $FEDORA_TAG\n    FDO_DISTRIBUTION_EXEC: $FEDORA_EXEC\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/.gitlab-ci.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 35,
                  "endLine": 40,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  FDO_UPSTREAM_REPO: fontconfig/fontconfig\n  GIT_DEPTH: 1\n\n# these tags should be updated each time the list of packages is updated\n# changing these will force rebuilding the associated image\n# Note: these tags have no meaning and are not tied to a particular\n# fontconfig version\n",
                    "rendered": {
                      "text": "  FDO_UPSTREAM_REPO: fontconfig/fontconfig\n  GIT_DEPTH: 1\n\n# these tags should be updated each time the list of packages is updated\n# changing these will force rebuilding the associated image\n# Note: these tags have no meaning and are not tied to a particular\n# fontconfig version\n",
                      "markdown": "`  FDO_UPSTREAM_REPO: fontconfig/fontconfig\n  GIT_DEPTH: 1\n\n# these tags should be updated each time the list of packages is updated\n# changing these will force rebuilding the associated image\n# Note: these tags have no meaning and are not tied to a particular\n# fontconfig version\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fonts.dtd"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 32,
                  "endLine": 136,
                  "endColumn": 36,
                  "snippet": {
                    "text": "<!ELEMENT rescan (int)>\n\n<!--\n    Edit list of available fonts at startup/reload time\n -->\n<!ELEMENT selectfont (rejectfont | acceptfont)* >\n\n",
                    "rendered": {
                      "text": "<!ELEMENT rescan (int)>\n\n<!--\n    Edit list of available fonts at startup/reload time\n -->\n<!ELEMENT selectfont (rejectfont | acceptfont)* >\n\n",
                      "markdown": "`<!ELEMENT rescan (int)>\n\n<!--\n    Edit list of available fonts at startup/reload time\n -->\n<!ELEMENT selectfont (rejectfont | acceptfont)* >\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/fonts.dtd"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 50,
                  "endLine": 137,
                  "snippet": {
                    "text": "<!ELEMENT rescan (int)>\n\n<!--\n    Edit list of available fonts at startup/reload time\n -->\n<!ELEMENT selectfont (rejectfont | acceptfont)* >\n\n<!ELEMENT rejectfont (glob | pattern)*>\n",
                    "rendered": {
                      "text": "<!ELEMENT rescan (int)>\n\n<!--\n    Edit list of available fonts at startup/reload time\n -->\n<!ELEMENT selectfont (rejectfont | acceptfont)* >\n\n<!ELEMENT rejectfont (glob | pattern)*>\n",
                      "markdown": "`<!ELEMENT rescan (int)>\n\n<!--\n    Edit list of available fonts at startup/reload time\n -->\n<!ELEMENT selectfont (rejectfont | acceptfont)* >\n\n<!ELEMENT rejectfont (glob | pattern)*>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/meson.build"
                },
                "region": {
                  "startLine": 281,
                  "startColumn": 18,
                  "endLine": 281,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  type = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n\n  conf_name = opts.get('conf-name', 'ALIGNOF_@0@'.format(type.to_upper()))\n\n  conf.set(conf_name, cc.alignment(type))\nendforeach\n",
                    "rendered": {
                      "text": "  type = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n\n  conf_name = opts.get('conf-name', 'ALIGNOF_@0@'.format(type.to_upper()))\n\n  conf.set(conf_name, cc.alignment(type))\nendforeach\n",
                      "markdown": "`  type = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n\n  conf_name = opts.get('conf-name', 'ALIGNOF_@0@'.format(type.to_upper()))\n\n  conf.set(conf_name, cc.alignment(type))\nendforeach\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/meson.build"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 18,
                  "endLine": 272,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  type = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n\n  conf_name = opts.get('conf-name', 'SIZEOF_@0@'.format(type.to_upper()))\n\n  conf.set(conf_name, cc.sizeof(type))\nendforeach\n",
                    "rendered": {
                      "text": "  type = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n\n  conf_name = opts.get('conf-name', 'SIZEOF_@0@'.format(type.to_upper()))\n\n  conf.set(conf_name, cc.sizeof(type))\nendforeach\n",
                      "markdown": "`  type = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n\n  conf_name = opts.get('conf-name', 'SIZEOF_@0@'.format(type.to_upper()))\n\n  conf.set(conf_name, cc.sizeof(type))\nendforeach\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/meson.build"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 19,
                  "endLine": 236,
                  "endColumn": 24,
                  "snippet": {
                    "text": "foreach check : check_funcs\n  name = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n  extra_deps = opts.get('dependencies', [])\n\n  if cc.has_function(name, dependencies: extra_deps)\n    conf.set('HAVE_@0@'.format(name.to_upper()), 1)\n",
                    "rendered": {
                      "text": "foreach check : check_funcs\n  name = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n  extra_deps = opts.get('dependencies', [])\n\n  if cc.has_function(name, dependencies: extra_deps)\n    conf.set('HAVE_@0@'.format(name.to_upper()), 1)\n",
                      "markdown": "`foreach check : check_funcs\n  name = check[0]\n  opts = check.length() > 1 ? check[1] : {}\n  extra_deps = opts.get('dependencies', [])\n\n  if cc.has_function(name, dependencies: extra_deps)\n    conf.set('HAVE_@0@'.format(name.to_upper()), 1)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/meson.build"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 55,
                  "endLine": 185,
                  "endColumn": 60,
                  "snippet": {
                    "text": "endif\n\ni18n = import('i18n')\ngettext_args = [ '--msgid-bugs-address=@0@'.format(conf.get('PACKAGE_BUGREPORT')) ]\n\n# Check for libintl.h\nopt_nls = get_option('nls')\n",
                    "rendered": {
                      "text": "endif\n\ni18n = import('i18n')\ngettext_args = [ '--msgid-bugs-address=@0@'.format(conf.get('PACKAGE_BUGREPORT')) ]\n\n# Check for libintl.h\nopt_nls = get_option('nls')\n",
                      "markdown": "`endif\n\ni18n = import('i18n')\ngettext_args = [ '--msgid-bugs-address=@0@'.format(conf.get('PACKAGE_BUGREPORT')) ]\n\n# Check for libintl.h\nopt_nls = get_option('nls')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 233,
                  "endLine": 233,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\ngitignore: $(srcdir)/.gitignore gitignore-recurse\n",
                    "rendered": {
                      "text": "\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\ngitignore: $(srcdir)/.gitignore gitignore-recurse\n",
                      "markdown": "`\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\ngitignore: $(srcdir)/.gitignore gitignore-recurse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 16,
                  "endLine": 232,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\n",
                    "rendered": {
                      "text": "\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\n",
                      "markdown": "`\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 9,
                  "endLine": 232,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\n",
                    "rendered": {
                      "text": "\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\n",
                      "markdown": "`\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\nall: $(srcdir)/.gitignore gitignore-recurse-maybe\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 231,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\n",
                    "rendered": {
                      "text": "\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\n",
                      "markdown": "`\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 29,
                  "endLine": 230,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\t\".dirstamp\" \\\n\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n",
                    "rendered": {
                      "text": "\t\t\t\".dirstamp\" \\\n\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n",
                      "markdown": "`\t\t\t\".dirstamp\" \\\n\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 230,
                  "endLine": 230,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t\t\".dirstamp\" \\\n\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n",
                    "rendered": {
                      "text": "\t\t\t\".dirstamp\" \\\n\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n",
                      "markdown": "`\t\t\t\".dirstamp\" \\\n\t\t; do echo /$$x; done; \\\n\t} | \\\n\tsed \"s@^/`echo \"$(srcdir)\" | sed 's/\\(.\\)/[\\1]/g'`/@/@\" | \\\n\tsed 's@/[.]/@/@g' | \\\n\tLC_ALL=C sort | uniq > $@.tmp && \\\n\tmv $@.tmp $@;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 3,
                  "endLine": 83,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t  echo '-include $$(top_srcdir)/git.mk'; \\\n\t\t\t} > $$x.tmp || failed=1; \\\n\t\t\tif test x$$failed = x; then \\\n\t\t\t\tmv $$x.tmp $$x || failed=1; \\\n\t\t\tfi; \\\n\t\t\tif test x$$failed = x; then : else \\\n\t\t\t\techo Failed updating $$x; >&2 \\\n",
                    "rendered": {
                      "text": "\t\t\t  echo '-include $$(top_srcdir)/git.mk'; \\\n\t\t\t} > $$x.tmp || failed=1; \\\n\t\t\tif test x$$failed = x; then \\\n\t\t\t\tmv $$x.tmp $$x || failed=1; \\\n\t\t\tfi; \\\n\t\t\tif test x$$failed = x; then : else \\\n\t\t\t\techo Failed updating $$x; >&2 \\\n",
                      "markdown": "`\t\t\t  echo '-include $$(top_srcdir)/git.mk'; \\\n\t\t\t} > $$x.tmp || failed=1; \\\n\t\t\tif test x$$failed = x; then \\\n\t\t\t\tmv $$x.tmp $$x || failed=1; \\\n\t\t\tfi; \\\n\t\t\tif test x$$failed = x; then : else \\\n\t\t\t\techo Failed updating $$x; >&2 \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 4,
                  "endLine": 78,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\telse \\\n\t\t\tfailed=; \\\n\t\t\techo \"Updating $$x\"; \\\n\t\t\t{ cat $$x; \\\n\t\t\t  echo ''; \\\n\t\t\t  echo '-include $$(top_srcdir)/git.mk'; \\\n\t\t\t} > $$x.tmp || failed=1; \\\n",
                    "rendered": {
                      "text": "\t\telse \\\n\t\t\tfailed=; \\\n\t\t\techo \"Updating $$x\"; \\\n\t\t\t{ cat $$x; \\\n\t\t\t  echo ''; \\\n\t\t\t  echo '-include $$(top_srcdir)/git.mk'; \\\n\t\t\t} > $$x.tmp || failed=1; \\\n",
                      "markdown": "`\t\telse \\\n\t\t\tfailed=; \\\n\t\t\techo \"Updating $$x\"; \\\n\t\t\t{ cat $$x; \\\n\t\t\t  echo ''; \\\n\t\t\t  echo '-include $$(top_srcdir)/git.mk'; \\\n\t\t\t} > $$x.tmp || failed=1; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 4,
                  "endLine": 73,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n\t\t\techo $$x already includes git.mk; \\\n\t\telse \\\n\t\t\tfailed=; \\\n",
                    "rendered": {
                      "text": "\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n\t\t\techo $$x already includes git.mk; \\\n\t\telse \\\n\t\t\tfailed=; \\\n",
                      "markdown": "`\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n\t\t\techo $$x already includes git.mk; \\\n\t\telse \\\n\t\t\tfailed=; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 7,
                  "snippet": {
                    "text": "git-mk-install:\n\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n\t\t\techo $$x already includes git.mk; \\\n\t\telse \\\n",
                    "rendered": {
                      "text": "git-mk-install:\n\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n\t\t\techo $$x already includes git.mk; \\\n\t\telse \\\n",
                      "markdown": "`git-mk-install:\n\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n\t\t\techo $$x already includes git.mk; \\\n\t\telse \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 22,
                  "snippet": {
                    "text": "git-all: git-mk-install\n\ngit-mk-install:\n\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n",
                    "rendered": {
                      "text": "git-all: git-mk-install\n\ngit-mk-install:\n\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n",
                      "markdown": "`git-all: git-mk-install\n\ngit-mk-install:\n\t@echo Installing git makefile\n\t@any_failed=; \\\n\t\tfind \"`test -z \"$(top_srcdir)\" && echo . || echo \"$(top_srcdir)\"`\" -name Makefile.am | while read x; do \\\n\t\tif grep 'include .*/git.mk' $$x >/dev/null; then \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 27,
                  "snippet": {
                    "text": "# KNOWN ISSUES:\n#\n# - Recursive configure doesn't work as $(top_srcdir)/git.mk inside the\n#   submodule doesn't find us.  If you have configure.{in,ac} files in\n#   subdirs, add a proxy git.mk file in those dirs that simply does:\n#   \"include $(top_srcdir)/../git.mk\".  Add more ..'s to your taste.\n#   And add those files to git.  See vte/gnome-pty-helper/git.mk for\n",
                    "rendered": {
                      "text": "# KNOWN ISSUES:\n#\n# - Recursive configure doesn't work as $(top_srcdir)/git.mk inside the\n#   submodule doesn't find us.  If you have configure.{in,ac} files in\n#   subdirs, add a proxy git.mk file in those dirs that simply does:\n#   \"include $(top_srcdir)/../git.mk\".  Add more ..'s to your taste.\n#   And add those files to git.  See vte/gnome-pty-helper/git.mk for\n",
                      "markdown": "`# KNOWN ISSUES:\n#\n# - Recursive configure doesn't work as $(top_srcdir)/git.mk inside the\n#   submodule doesn't find us.  If you have configure.{in,ac} files in\n#   subdirs, add a proxy git.mk file in those dirs that simply does:\n#   \"include $(top_srcdir)/../git.mk\".  Add more ..'s to your taste.\n#   And add those files to git.  See vte/gnome-pty-helper/git.mk for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 61,
                  "endLine": 43,
                  "endColumn": 66,
                  "snippet": {
                    "text": "# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see\n# Makefile.am.sample in the git.mk git repo.\n#\n# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,\n# not tarballs.  It serves no useful purpose in tarballs and clutters the\n# build dir.\n#\n",
                    "rendered": {
                      "text": "# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see\n# Makefile.am.sample in the git.mk git repo.\n#\n# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,\n# not tarballs.  It serves no useful purpose in tarballs and clutters the\n# build dir.\n#\n",
                      "markdown": "`# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see\n# Makefile.am.sample in the git.mk git repo.\n#\n# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,\n# not tarballs.  It serves no useful purpose in tarballs and clutters the\n# build dir.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 34,
                  "endLine": 41,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# the directories involved and I'll diagnose.\n#\n# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see\n# Makefile.am.sample in the git.mk git repo.\n#\n# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,\n# not tarballs.  It serves no useful purpose in tarballs and clutters the\n",
                    "rendered": {
                      "text": "# the directories involved and I'll diagnose.\n#\n# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see\n# Makefile.am.sample in the git.mk git repo.\n#\n# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,\n# not tarballs.  It serves no useful purpose in tarballs and clutters the\n",
                      "markdown": "`# the directories involved and I'll diagnose.\n#\n# For a list of toplevel files that should be in MAINTAINERCLEANFILES, see\n# Makefile.am.sample in the git.mk git repo.\n#\n# Don't EXTRA_DIST this file.  It is supposed to only live in git clones,\n# not tarballs.  It serves no useful purpose in tarballs and clutters the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 9,
                  "endLine": 36,
                  "endColumn": 17,
                  "snippet": {
                    "text": "# ignore them.  See \"man gitignore\".\n#\n# If \"make maintainer-clean\" removes the files but they are not recognized\n# by this script (that is, if \"git status\" shows untracked files still), send\n# me the output of \"git status\" as well as your Makefile.am and Makefile for\n# the directories involved and I'll diagnose.\n#\n",
                    "rendered": {
                      "text": "# ignore them.  See \"man gitignore\".\n#\n# If \"make maintainer-clean\" removes the files but they are not recognized\n# by this script (that is, if \"git status\" shows untracked files still), send\n# me the output of \"git status\" as well as your Makefile.am and Makefile for\n# the directories involved and I'll diagnose.\n#\n",
                      "markdown": "`# ignore them.  See \"man gitignore\".\n#\n# If \"make maintainer-clean\" removes the files but they are not recognized\n# by this script (that is, if \"git status\" shows untracked files still), send\n# me the output of \"git status\" as well as your Makefile.am and Makefile for\n# the directories involved and I'll diagnose.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 50,
                  "endLine": 16,
                  "endColumn": 55,
                  "snippet": {
                    "text": "# Bugs, etc, should be reported upstream at:\n#   https://github.com/behdad/git.mk\n#\n# To use in your project, import this file in your git repo's toplevel,\n# then do \"make -f git.mk\".  This modifies all Makefile.am files in\n# your project to -include git.mk.  Remember to add that line to new\n# Makefile.am files you create in your project, or just rerun the\n",
                    "rendered": {
                      "text": "# Bugs, etc, should be reported upstream at:\n#   https://github.com/behdad/git.mk\n#\n# To use in your project, import this file in your git repo's toplevel,\n# then do \"make -f git.mk\".  This modifies all Makefile.am files in\n# your project to -include git.mk.  Remember to add that line to new\n# Makefile.am files you create in your project, or just rerun the\n",
                      "markdown": "`# Bugs, etc, should be reported upstream at:\n#   https://github.com/behdad/git.mk\n#\n# To use in your project, import this file in your git repo's toplevel,\n# then do \"make -f git.mk\".  This modifies all Makefile.am files in\n# your project to -include git.mk.  Remember to add that line to new\n# Makefile.am files you create in your project, or just rerun the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/git.mk"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 22,
                  "snippet": {
                    "text": "# git.mk\n#\n# Copyright 2009, Red Hat, Inc.\n# Copyright 2010,2011 Behdad Esfahbod\n# Written by Behdad Esfahbod\n#\n",
                    "rendered": {
                      "text": "# git.mk\n#\n# Copyright 2009, Red Hat, Inc.\n# Copyright 2010,2011 Behdad Esfahbod\n# Written by Behdad Esfahbod\n#\n",
                      "markdown": "`# git.mk\n#\n# Copyright 2009, Red Hat, Inc.\n# Copyright 2010,2011 Behdad Esfahbod\n# Written by Behdad Esfahbod\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 75,
                  "endLine": 179,
                  "endColumn": 83,
                  "snippet": {
                    "text": "check-versions:\n\t@$(GREP) -e \"^[[:space:]]*version[[:space:]]*:[[:space:]]*'$(VERSION)',\" $(srcdir)/meson.build >/dev/null || { \\\n\t  echo \"======================================================================================\"; \\\n\t  echo \"Meson version does not seem to match autotools version $(VERSION), update meson.build!\"; \\\n\t  echo \"======================================================================================\"; \\\n\t  exit 1; \\\n\t}\n",
                    "rendered": {
                      "text": "check-versions:\n\t@$(GREP) -e \"^[[:space:]]*version[[:space:]]*:[[:space:]]*'$(VERSION)',\" $(srcdir)/meson.build >/dev/null || { \\\n\t  echo \"======================================================================================\"; \\\n\t  echo \"Meson version does not seem to match autotools version $(VERSION), update meson.build!\"; \\\n\t  echo \"======================================================================================\"; \\\n\t  exit 1; \\\n\t}\n",
                      "markdown": "`check-versions:\n\t@$(GREP) -e \"^[[:space:]]*version[[:space:]]*:[[:space:]]*'$(VERSION)',\" $(srcdir)/meson.build >/dev/null || { \\\n\t  echo \"======================================================================================\"; \\\n\t  echo \"Meson version does not seem to match autotools version $(VERSION), update meson.build!\"; \\\n\t  echo \"======================================================================================\"; \\\n\t  exit 1; \\\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 171,
                  "endLine": 171,
                  "endColumn": 4,
                  "snippet": {
                    "text": "debuild-dirs: distdir\n\t$(RM) $(PACKAGE)_$(VERSION).orig.tar.gz\n\t$(RM) -r $(distdir).orig\n\tcp -a $(distdir) $(distdir).orig\n\t$(RM) -r $(distdir).orig/debian\n\nDISTCHECK_CONFIGURE_FLAGS =\n",
                    "rendered": {
                      "text": "debuild-dirs: distdir\n\t$(RM) $(PACKAGE)_$(VERSION).orig.tar.gz\n\t$(RM) -r $(distdir).orig\n\tcp -a $(distdir) $(distdir).orig\n\t$(RM) -r $(distdir).orig/debian\n\nDISTCHECK_CONFIGURE_FLAGS =\n",
                      "markdown": "`debuild-dirs: distdir\n\t$(RM) $(PACKAGE)_$(VERSION).orig.tar.gz\n\t$(RM) -r $(distdir).orig\n\tcp -a $(distdir) $(distdir).orig\n\t$(RM) -r $(distdir).orig/debian\n\nDISTCHECK_CONFIGURE_FLAGS =\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 2,
                  "endLine": 129,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t$(mkinstalldirs) $(DESTDIR)$(baseconfigdir) $(DESTDIR)$(fc_cachedir)\n\tif [ -f $(DESTDIR)$(baseconfigdir)/fonts.conf ]; then \\\n\t  echo \"backing up existing $(DESTDIR)$(baseconfigdir)/fonts.conf\"; \\\n\t  mv $(DESTDIR)$(baseconfigdir)/fonts.conf $(DESTDIR)$(baseconfigdir)/fonts.conf.bak; \\\n\tfi\n\tif [ -f $(srcdir)/fonts.conf ]; then \\\n\t  echo \" $(INSTALL_DATA) $(srcdir)/fonts.conf $(DESTDIR)$(baseconfigdir)/fonts.conf\"; \\\n",
                    "rendered": {
                      "text": "\t$(mkinstalldirs) $(DESTDIR)$(baseconfigdir) $(DESTDIR)$(fc_cachedir)\n\tif [ -f $(DESTDIR)$(baseconfigdir)/fonts.conf ]; then \\\n\t  echo \"backing up existing $(DESTDIR)$(baseconfigdir)/fonts.conf\"; \\\n\t  mv $(DESTDIR)$(baseconfigdir)/fonts.conf $(DESTDIR)$(baseconfigdir)/fonts.conf.bak; \\\n\tfi\n\tif [ -f $(srcdir)/fonts.conf ]; then \\\n\t  echo \" $(INSTALL_DATA) $(srcdir)/fonts.conf $(DESTDIR)$(baseconfigdir)/fonts.conf\"; \\\n",
                      "markdown": "`\t$(mkinstalldirs) $(DESTDIR)$(baseconfigdir) $(DESTDIR)$(fc_cachedir)\n\tif [ -f $(DESTDIR)$(baseconfigdir)/fonts.conf ]; then \\\n\t  echo \"backing up existing $(DESTDIR)$(baseconfigdir)/fonts.conf\"; \\\n\t  mv $(DESTDIR)$(baseconfigdir)/fonts.conf $(DESTDIR)$(baseconfigdir)/fonts.conf.bak; \\\n\tfi\n\tif [ -f $(srcdir)/fonts.conf ]; then \\\n\t  echo \" $(INSTALL_DATA) $(srcdir)/fonts.conf $(DESTDIR)$(baseconfigdir)/fonts.conf\"; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 123,
                  "endLine": 123,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\t\t-e 's,@PACKAGE\\@,$(PACKAGE),g' \\\n\t\t-e 's,@VERSION\\@,$(VERSION),g' \\\n\t\t$(srcdir)/$@.in > $@.tmp && \\\n\tmv $@.tmp $@\n\ninstall-data-local: fonts.conf\n\t$(mkinstalldirs) $(DESTDIR)$(baseconfigdir) $(DESTDIR)$(fc_cachedir)\n",
                    "rendered": {
                      "text": "\t\t-e 's,@PACKAGE\\@,$(PACKAGE),g' \\\n\t\t-e 's,@VERSION\\@,$(VERSION),g' \\\n\t\t$(srcdir)/$@.in > $@.tmp && \\\n\tmv $@.tmp $@\n\ninstall-data-local: fonts.conf\n\t$(mkinstalldirs) $(DESTDIR)$(baseconfigdir) $(DESTDIR)$(fc_cachedir)\n",
                      "markdown": "`\t\t-e 's,@PACKAGE\\@,$(PACKAGE),g' \\\n\t\t-e 's,@VERSION\\@,$(VERSION),g' \\\n\t\t$(srcdir)/$@.in > $@.tmp && \\\n\tmv $@.tmp $@\n\ninstall-data-local: fonts.conf\n\t$(mkinstalldirs) $(DESTDIR)$(baseconfigdir) $(DESTDIR)$(fc_cachedir)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "endColumn": 5,
                  "snippet": {
                    "text": "FC_CONFIGDIR = $(subst $(BASECONFIGDIR)/,,$(CONFIGDIR))\n\nfonts.conf: fonts.conf.in Makefile\n\tsed \\\n\t\t-e 's,@FC_CACHEDIR\\@,$(FC_CACHEDIR),g' \\\n\t\t-e 's,@FC_DEFAULT_FONTS\\@,\t$(FC_DEFAULT_FONTS),g' \\\n\t\t-e 's,@FC_FONTPATH\\@,$(FC_FONTPATH),g' \\\n",
                    "rendered": {
                      "text": "FC_CONFIGDIR = $(subst $(BASECONFIGDIR)/,,$(CONFIGDIR))\n\nfonts.conf: fonts.conf.in Makefile\n\tsed \\\n\t\t-e 's,@FC_CACHEDIR\\@,$(FC_CACHEDIR),g' \\\n\t\t-e 's,@FC_DEFAULT_FONTS\\@,\t$(FC_DEFAULT_FONTS),g' \\\n\t\t-e 's,@FC_FONTPATH\\@,$(FC_FONTPATH),g' \\\n",
                      "markdown": "`FC_CONFIGDIR = $(subst $(BASECONFIGDIR)/,,$(CONFIGDIR))\n\nfonts.conf: fonts.conf.in Makefile\n\tsed \\\n\t\t-e 's,@FC_CACHEDIR\\@,$(FC_CACHEDIR),g' \\\n\t\t-e 's,@FC_DEFAULT_FONTS\\@,\t$(FC_DEFAULT_FONTS),g' \\\n\t\t-e 's,@FC_FONTPATH\\@,$(FC_FONTPATH),g' \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 9,
                  "endLine": 107,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\telse \\\n\t  test -f $@ || \\\n\t  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \\\n\t  echo A git checkout and git-log is required to generate this file >> $@); \\\n\tfi\n\n.PHONY: ChangeLog\n",
                    "rendered": {
                      "text": "\telse \\\n\t  test -f $@ || \\\n\t  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \\\n\t  echo A git checkout and git-log is required to generate this file >> $@); \\\n\tfi\n\n.PHONY: ChangeLog\n",
                      "markdown": "`\telse \\\n\t  test -f $@ || \\\n\t  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \\\n\t  echo A git checkout and git-log is required to generate this file >> $@); \\\n\tfi\n\n.PHONY: ChangeLog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 10,
                  "endLine": 106,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t      (test -f $@ || echo git-log is required to generate this file >> $@)); \\\n\telse \\\n\t  test -f $@ || \\\n\t  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \\\n\t  echo A git checkout and git-log is required to generate this file >> $@); \\\n\tfi\n\n",
                    "rendered": {
                      "text": "\t      (test -f $@ || echo git-log is required to generate this file >> $@)); \\\n\telse \\\n\t  test -f $@ || \\\n\t  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \\\n\t  echo A git checkout and git-log is required to generate this file >> $@); \\\n\tfi\n\n",
                      "markdown": "`\t      (test -f $@ || echo git-log is required to generate this file >> $@)); \\\n\telse \\\n\t  test -f $@ || \\\n\t  (echo A git checkout and git-log is required to generate ChangeLog >&2 && \\\n\t  echo A git checkout and git-log is required to generate this file >> $@); \\\n\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 5,
                  "endLine": 100,
                  "endColumn": 9,
                  "snippet": {
                    "text": "$(srcdir)/ChangeLog:\n\tif test -d \"$(srcdir)/.git\"; then \\\n\t  (GIT_DIR=$(top_srcdir)/.git $(GIT) log --stat) | fmt --split-only > $@.tmp \\\n\t  && mv -f $@.tmp $@ \\\n\t  || ($(RM) $@.tmp; \\\n\t      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \\\n\t      (test -f $@ || echo git-log is required to generate this file >> $@)); \\\n",
                    "rendered": {
                      "text": "$(srcdir)/ChangeLog:\n\tif test -d \"$(srcdir)/.git\"; then \\\n\t  (GIT_DIR=$(top_srcdir)/.git $(GIT) log --stat) | fmt --split-only > $@.tmp \\\n\t  && mv -f $@.tmp $@ \\\n\t  || ($(RM) $@.tmp; \\\n\t      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \\\n\t      (test -f $@ || echo git-log is required to generate this file >> $@)); \\\n",
                      "markdown": "`$(srcdir)/ChangeLog:\n\tif test -d \"$(srcdir)/.git\"; then \\\n\t  (GIT_DIR=$(top_srcdir)/.git $(GIT) log --stat) | fmt --split-only > $@.tmp \\\n\t  && mv -f $@.tmp $@ \\\n\t  || ($(RM) $@.tmp; \\\n\t      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \\\n\t      (test -f $@ || echo git-log is required to generate this file >> $@)); \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 51,
                  "endLine": 99,
                  "endColumn": 56,
                  "snippet": {
                    "text": "ChangeLog: $(srcdir)/ChangeLog\n$(srcdir)/ChangeLog:\n\tif test -d \"$(srcdir)/.git\"; then \\\n\t  (GIT_DIR=$(top_srcdir)/.git $(GIT) log --stat) | fmt --split-only > $@.tmp \\\n\t  && mv -f $@.tmp $@ \\\n\t  || ($(RM) $@.tmp; \\\n\t      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \\\n",
                    "rendered": {
                      "text": "ChangeLog: $(srcdir)/ChangeLog\n$(srcdir)/ChangeLog:\n\tif test -d \"$(srcdir)/.git\"; then \\\n\t  (GIT_DIR=$(top_srcdir)/.git $(GIT) log --stat) | fmt --split-only > $@.tmp \\\n\t  && mv -f $@.tmp $@ \\\n\t  || ($(RM) $@.tmp; \\\n\t      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \\\n",
                      "markdown": "`ChangeLog: $(srcdir)/ChangeLog\n$(srcdir)/ChangeLog:\n\tif test -d \"$(srcdir)/.git\"; then \\\n\t  (GIT_DIR=$(top_srcdir)/.git $(GIT) log --stat) | fmt --split-only > $@.tmp \\\n\t  && mv -f $@.tmp $@ \\\n\t  || ($(RM) $@.tmp; \\\n\t      echo Failed to generate ChangeLog, your ChangeLog may be outdated >&2; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/fontconfig.zip/Makefile.am"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 25,
                  "endLine": 92,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  RUN_FC_CACHE_TEST=test -z \"$(DESTDIR)\"\nendif\n\n# Creating ChangeLog from git log:\n\nMAINTAINERCLEANFILES += $(srcdir)/ChangeLog\nEXTRA_DIST += ChangeLog\n",
                    "rendered": {
                      "text": "  RUN_FC_CACHE_TEST=test -z \"$(DESTDIR)\"\nendif\n\n# Creating ChangeLog from git log:\n\nMAINTAINERCLEANFILES += $(srcdir)/ChangeLog\nEXTRA_DIST += ChangeLog\n",
                      "markdown": "`  RUN_FC_CACHE_TEST=test -z \"$(DESTDIR)\"\nendif\n\n# Creating ChangeLog from git log:\n\nMAINTAINERCLEANFILES += $(srcdir)/ChangeLog\nEXTRA_DIST += ChangeLog\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}