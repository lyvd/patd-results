{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifinto.xml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 45,
                  "endLine": 58,
                  "endColumn": 53,
                  "snippet": {
                    "text": "complete.</para>\n<para>The default file threshold size is 14 bytes, which is 1 bigger\nthan GIF file stamp (6 bytes) plus a GIF file screen descriptor (7\nbytes), so a GIF file with only GIF stamp and screen descriptor will\nnot be renamed.</para>\n</listitem>\n</varlistentry>\n",
                    "rendered": {
                      "text": "complete.</para>\n<para>The default file threshold size is 14 bytes, which is 1 bigger\nthan GIF file stamp (6 bytes) plus a GIF file screen descriptor (7\nbytes), so a GIF file with only GIF stamp and screen descriptor will\nnot be renamed.</para>\n</listitem>\n</varlistentry>\n",
                      "markdown": "`complete.</para>\n<para>The default file threshold size is 14 bytes, which is 1 bigger\nthan GIF file stamp (6 bytes) plus a GIF file screen descriptor (7\nbytes), so a GIF file with only GIF stamp and screen descriptor will\nnot be renamed.</para>\n</listitem>\n</varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifinto.xml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 45,
                  "endLine": 57,
                  "endColumn": 53,
                  "snippet": {
                    "text": "the result is an empty file, or the pipeline did not\ncomplete.</para>\n<para>The default file threshold size is 14 bytes, which is 1 bigger\nthan GIF file stamp (6 bytes) plus a GIF file screen descriptor (7\nbytes), so a GIF file with only GIF stamp and screen descriptor will\nnot be renamed.</para>\n</listitem>\n",
                    "rendered": {
                      "text": "the result is an empty file, or the pipeline did not\ncomplete.</para>\n<para>The default file threshold size is 14 bytes, which is 1 bigger\nthan GIF file stamp (6 bytes) plus a GIF file screen descriptor (7\nbytes), so a GIF file with only GIF stamp and screen descriptor will\nnot be renamed.</para>\n</listitem>\n",
                      "markdown": "`the result is an empty file, or the pipeline did not\ncomplete.</para>\n<para>The default file threshold size is 14 bytes, which is 1 bigger\nthan GIF file stamp (6 bytes) plus a GIF file screen descriptor (7\nbytes), so a GIF file with only GIF stamp and screen descriptor will\nnot be renamed.</para>\n</listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 39,
                  "endLine": 73,
                  "snippet": {
                    "text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                    "rendered": {
                      "text": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                      "markdown": "`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 40 by 40\n8888888888888888888888888888888888888885\n8888888888888888888888888888888888888855\n",
                    "rendered": {
                      "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 40 by 40\n8888888888888888888888888888888888888885\n8888888888888888888888888888888888888855\n",
                      "markdown": "`\nimage # 1\nimage left 0\nimage top 0\nimage bits 40 by 40\n8888888888888888888888888888888888888885\n8888888888888888888888888888888888888855\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n\trgb 000 157 000 is 2\n",
                    "rendered": {
                      "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n\trgb 000 157 000 is 2\n",
                      "markdown": "`pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n\trgb 000 157 000 is 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n",
                    "rendered": {
                      "text": "screen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n",
                      "markdown": "`screen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                    "rendered": {
                      "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                      "markdown": "`screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\n",
                    "rendered": {
                      "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\n",
                      "markdown": "`screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/giffixed.ico"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 15,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n",
                    "rendered": {
                      "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n",
                      "markdown": "`screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/history.adoc"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 33,
                  "endLine": 59,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\nVersion 5.0, released in June 2012, fulfilled almost all the to-do\nitems from 18 years of backlog.  It made the library thread-safe, added\ndirect support for GIF89 graphics control blocks, and tossed out large\namounts of obsolete utility code.\n\nMore recent version of the code (5.1.0 and onwards) have been hardened\n",
                    "rendered": {
                      "text": "\nVersion 5.0, released in June 2012, fulfilled almost all the to-do\nitems from 18 years of backlog.  It made the library thread-safe, added\ndirect support for GIF89 graphics control blocks, and tossed out large\namounts of obsolete utility code.\n\nMore recent version of the code (5.1.0 and onwards) have been hardened\n",
                      "markdown": "`\nVersion 5.0, released in June 2012, fulfilled almost all the to-do\nitems from 18 years of backlog.  It made the library thread-safe, added\ndirect support for GIF89 graphics control blocks, and tossed out large\namounts of obsolete utility code.\n\nMore recent version of the code (5.1.0 and onwards) have been hardened\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/history.adoc"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 14,
                  "endColumn": 3,
                  "snippet": {
                    "text": "images. The DOS code was written by Gershon Elber using Borland C\nunder MS-DOS sometime between the issue of GIF87 and mid-1989 (1.0 was\ndated 14 June 1989; one portion, getarg.c, was dated 11 Mar 88).\n\nAt some time no later than the end of 1989 Eric S. Raymond (aka \"ESR\")\nported this DOS version to System V Unix. Between 1989 and 1992 ESR\nreworked various portions of the API, improving and simplifying \nthe code's interface.\n",
                    "rendered": {
                      "text": "images. The DOS code was written by Gershon Elber using Borland C\nunder MS-DOS sometime between the issue of GIF87 and mid-1989 (1.0 was\ndated 14 June 1989; one portion, getarg.c, was dated 11 Mar 88).\n\nAt some time no later than the end of 1989 Eric S. Raymond (aka \"ESR\")\nported this DOS version to System V Unix. Between 1989 and 1992 ESR\nreworked various portions of the API, improving and simplifying \nthe code's interface.\n",
                      "markdown": "`images. The DOS code was written by Gershon Elber using Borland C\nunder MS-DOS sometime between the issue of GIF87 and mid-1989 (1.0 was\ndated 14 June 1989; one portion, getarg.c, was dated 11 Mar 88).\n\nAt some time no later than the end of 1989 Eric S. Raymond (aka \"ESR\")\nported this DOS version to System V Unix. Between 1989 and 1992 ESR\nreworked various portions of the API, improving and simplifying \nthe code's interface.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/history.adoc"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 42,
                  "endLine": 41,
                  "endColumn": 48,
                  "snippet": {
                    "text": "under  ESR's name in 1996.  But other files do date Toshio's first release\nto 1994.  Toshio shipped 4.0 in December 1998.\n\nSubsequently, the project shipped for some time as \"libungif\" with\nsupport for compressed GIFs removed to avoid the LZW patent issues.\nCompression support was merged back in after the last blocking patent\nexpired in 2004; this became release 4.0.0.  After that merge the\n",
                    "rendered": {
                      "text": "under  ESR's name in 1996.  But other files do date Toshio's first release\nto 1994.  Toshio shipped 4.0 in December 1998.\n\nSubsequently, the project shipped for some time as \"libungif\" with\nsupport for compressed GIFs removed to avoid the LZW patent issues.\nCompression support was merged back in after the last blocking patent\nexpired in 2004; this became release 4.0.0.  After that merge the\n",
                      "markdown": "`under  ESR's name in 1996.  But other files do date Toshio's first release\nto 1994.  Toshio shipped 4.0 in December 1998.\n\nSubsequently, the project shipped for some time as \"libungif\" with\nsupport for compressed GIFs removed to avoid the LZW patent issues.\nCompression support was merged back in after the last blocking patent\nexpired in 2004; this became release 4.0.0.  After that merge the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/history.adoc"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 14,
                  "endColumn": 13,
                  "snippet": {
                    "text": "under MS-DOS sometime between the issue of GIF87 and mid-1989 (1.0 was\ndated 14 June 1989; one portion, getarg.c, was dated 11 Mar 88).\n\nAt some time no later than the end of 1989 Eric S. Raymond (aka \"ESR\")\nported this DOS version to System V Unix. Between 1989 and 1992 ESR\nreworked various portions of the API, improving and simplifying \nthe code's interface.\n",
                    "rendered": {
                      "text": "under MS-DOS sometime between the issue of GIF87 and mid-1989 (1.0 was\ndated 14 June 1989; one portion, getarg.c, was dated 11 Mar 88).\n\nAt some time no later than the end of 1989 Eric S. Raymond (aka \"ESR\")\nported this DOS version to System V Unix. Between 1989 and 1992 ESR\nreworked various portions of the API, improving and simplifying \nthe code's interface.\n",
                      "markdown": "`under MS-DOS sometime between the issue of GIF87 and mid-1989 (1.0 was\ndated 14 June 1989; one portion, getarg.c, was dated 11 Mar 88).\n\nAt some time no later than the end of 1989 Eric S. Raymond (aka \"ESR\")\nported this DOS version to System V Unix. Between 1989 and 1992 ESR\nreworked various portions of the API, improving and simplifying \nthe code's interface.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/history.adoc"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 22,
                  "endLine": 4,
                  "endColumn": 31,
                  "snippet": {
                    "text": "= History of GIFLIB =\n\nGIF (Graphics Interchange Format) was originally developed on the\nCompuServe timesharing service in the late 1980s.  It was described\nby a GIF standard issued in 1987 and revised in 1989.  A copy of the\nGIF89 standard is included in the doc/ directory.\n\n",
                    "rendered": {
                      "text": "= History of GIFLIB =\n\nGIF (Graphics Interchange Format) was originally developed on the\nCompuServe timesharing service in the late 1980s.  It was described\nby a GIF standard issued in 1987 and revised in 1989.  A copy of the\nGIF89 standard is included in the doc/ directory.\n\n",
                      "markdown": "`= History of GIFLIB =\n\nGIF (Graphics Interchange Format) was originally developed on the\nCompuServe timesharing service in the late 1980s.  It was described\nby a GIF standard issued in 1987 and revised in 1989.  A copy of the\nGIF89 standard is included in the doc/ directory.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1235,
                  "startColumn": 43,
                  "endLine": 1235,
                  "endColumn": 47,
                  "snippet": {
                    "text": "the sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\nspecification was written in the late 1980s.  That kind of limit\ndisappeared in the mid-1990s.  Until 5.0, GIFLIB ignored this flag on\ninput and zeroed it on output; now it is read and preserved if\n",
                    "rendered": {
                      "text": "the sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\nspecification was written in the late 1980s.  That kind of limit\ndisappeared in the mid-1990s.  Until 5.0, GIFLIB ignored this flag on\ninput and zeroed it on output; now it is read and preserved if\n",
                      "markdown": "`the sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\nspecification was written in the late 1980s.  That kind of limit\ndisappeared in the mid-1990s.  Until 5.0, GIFLIB ignored this flag on\ninput and zeroed it on output; now it is read and preserved if\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1211,
                  "startColumn": 45,
                  "endLine": 1211,
                  "endColumn": 49,
                  "snippet": {
                    "text": "<para>The GIF format seems to have been designed with the idea that viewers\nwould render multiple images in a GIF on a common canvas, giving an effect like\na picture wall.  The 'logical screen descriptor block' (LSDB), 6 bytes right\nafter the 6-byte GIF stamp and version header at the beginning of a\nGIF file, includes both two-byte canvas width and canvas height\nfields and a canvas background color.  Each image, besides height and\nwidth, also has 'left' and 'top' cordinates specifying where it is to\n",
                    "rendered": {
                      "text": "<para>The GIF format seems to have been designed with the idea that viewers\nwould render multiple images in a GIF on a common canvas, giving an effect like\na picture wall.  The 'logical screen descriptor block' (LSDB), 6 bytes right\nafter the 6-byte GIF stamp and version header at the beginning of a\nGIF file, includes both two-byte canvas width and canvas height\nfields and a canvas background color.  Each image, besides height and\nwidth, also has 'left' and 'top' cordinates specifying where it is to\n",
                      "markdown": "`<para>The GIF format seems to have been designed with the idea that viewers\nwould render multiple images in a GIF on a common canvas, giving an effect like\na picture wall.  The 'logical screen descriptor block' (LSDB), 6 bytes right\nafter the 6-byte GIF stamp and version header at the beginning of a\nGIF file, includes both two-byte canvas width and canvas height\nfields and a canvas background color.  Each image, besides height and\nwidth, also has 'left' and 'top' cordinates specifying where it is to\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1193,
                  "startColumn": 17,
                  "endLine": 1193,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<para>A sequential filter skeleton will usually look like the example file\ngiffilter.c in util.</para>\n\n<para>Please look at the utilities in the util directory for more ideas once\nyou feel comfortable with these skeletons.  Also try to follow the coding\nstandards of this package if you want the maintainer to officially add your new\nutility to it.</para>\n",
                    "rendered": {
                      "text": "<para>A sequential filter skeleton will usually look like the example file\ngiffilter.c in util.</para>\n\n<para>Please look at the utilities in the util directory for more ideas once\nyou feel comfortable with these skeletons.  Also try to follow the coding\nstandards of this package if you want the maintainer to officially add your new\nutility to it.</para>\n",
                      "markdown": "`<para>A sequential filter skeleton will usually look like the example file\ngiffilter.c in util.</para>\n\n<para>Please look at the utilities in the util directory for more ideas once\nyou feel comfortable with these skeletons.  Also try to follow the coding\nstandards of this package if you want the maintainer to officially add your new\nutility to it.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1117,
                  "startColumn": 64,
                  "endLine": 1118,
                  "snippet": {
                    "text": "<itemizedlist>\n<listitem><para>  All functions exported by this library now have DGif,\nEGif, or Gif as a name prefix.</para></listitem>\n<listitem><para>The default GIF version to write is now computed at\nwrite time from the types of an image's extension blocks. (Formerly\nEGifSpew() behaved this way, but the sequential-writing code didn't.)\nThe result of this computation is available through the new function\nEGifGetGifVersion().</para></listitem>\n",
                    "rendered": {
                      "text": "<itemizedlist>\n<listitem><para>  All functions exported by this library now have DGif,\nEGif, or Gif as a name prefix.</para></listitem>\n<listitem><para>The default GIF version to write is now computed at\nwrite time from the types of an image's extension blocks. (Formerly\nEGifSpew() behaved this way, but the sequential-writing code didn't.)\nThe result of this computation is available through the new function\nEGifGetGifVersion().</para></listitem>\n",
                      "markdown": "`<itemizedlist>\n<listitem><para>  All functions exported by this library now have DGif,\nEGif, or Gif as a name prefix.</para></listitem>\n<listitem><para>The default GIF version to write is now computed at\nwrite time from the types of an image's extension blocks. (Formerly\nEGifSpew() behaved this way, but the sequential-writing code didn't.)\nThe result of this computation is available through the new function\nEGifGetGifVersion().</para></listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1100,
                  "startColumn": 70,
                  "endLine": 1101,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n<itemizedlist>\n<listitem><para>New functions DGifSavedExtensionToGCB() and\nEGifGCBToSavedExtension() make it easy to read and edit GIF89 graphics\ncontrol blocks in saved images.</para></listitem>\n<listitem><para>The new function DGifGetGifVersion() is convenient\nfor people doing sequential reads.</para></listitem>\n</itemizedlist>\n",
                    "rendered": {
                      "text": "\n<itemizedlist>\n<listitem><para>New functions DGifSavedExtensionToGCB() and\nEGifGCBToSavedExtension() make it easy to read and edit GIF89 graphics\ncontrol blocks in saved images.</para></listitem>\n<listitem><para>The new function DGifGetGifVersion() is convenient\nfor people doing sequential reads.</para></listitem>\n</itemizedlist>\n",
                      "markdown": "`\n<itemizedlist>\n<listitem><para>New functions DGifSavedExtensionToGCB() and\nEGifGCBToSavedExtension() make it easy to read and edit GIF89 graphics\ncontrol blocks in saved images.</para></listitem>\n<listitem><para>The new function DGifGetGifVersion() is convenient\nfor people doing sequential reads.</para></listitem>\n</itemizedlist>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 659,
                  "startColumn": 69,
                  "endLine": 659,
                  "endColumn": 73,
                  "snippet": {
                    "text": "the main procedure, the command line CtrlStr, and the addresses of\nall parameters, parse the command line, and update the parameters.</para>\n\n<para>The CtrlStr defines what types of variables should follow. Look at the\nbeginning of getarg.c for exact usage.</para>\n\n<para>Returns false if successful, returns true on failure.</para>\n",
                    "rendered": {
                      "text": "the main procedure, the command line CtrlStr, and the addresses of\nall parameters, parse the command line, and update the parameters.</para>\n\n<para>The CtrlStr defines what types of variables should follow. Look at the\nbeginning of getarg.c for exact usage.</para>\n\n<para>Returns false if successful, returns true on failure.</para>\n",
                      "markdown": "`the main procedure, the command line CtrlStr, and the addresses of\nall parameters, parse the command line, and update the parameters.</para>\n\n<para>The CtrlStr defines what types of variables should follow. Look at the\nbeginning of getarg.c for exact usage.</para>\n\n<para>Returns false if successful, returns true on failure.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 657,
                  "startColumn": 43,
                  "endLine": 657,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n<para>Main routine of this module.  Given argc &amp; argv as received by\nthe main procedure, the command line CtrlStr, and the addresses of\nall parameters, parse the command line, and update the parameters.</para>\n\n<para>The CtrlStr defines what types of variables should follow. Look at the\nbeginning of getarg.c for exact usage.</para>\n",
                    "rendered": {
                      "text": "\n<para>Main routine of this module.  Given argc &amp; argv as received by\nthe main procedure, the command line CtrlStr, and the addresses of\nall parameters, parse the command line, and update the parameters.</para>\n\n<para>The CtrlStr defines what types of variables should follow. Look at the\nbeginning of getarg.c for exact usage.</para>\n",
                      "markdown": "`\n<para>Main routine of this module.  Given argc &amp; argv as received by\nthe main procedure, the command line CtrlStr, and the addresses of\nall parameters, parse the command line, and update the parameters.</para>\n\n<para>The CtrlStr defines what types of variables should follow. Look at the\nbeginning of getarg.c for exact usage.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 37,
                  "endLine": 396,
                  "endColumn": 41,
                  "snippet": {
                    "text": "</programlisting>\n\n<para>Draw text on a filled rectangle.  The rectangle will be sized to fit\nthe text, with upper left hand corner at (x, y) on the saved image.\nThe `border' argument specifies a pixel margin around the text.  The\n`bg' argument is the color table index to fill the rectangle with;\n`fg' is the color table index to draw the text with.</para>\n",
                    "rendered": {
                      "text": "</programlisting>\n\n<para>Draw text on a filled rectangle.  The rectangle will be sized to fit\nthe text, with upper left hand corner at (x, y) on the saved image.\nThe `border' argument specifies a pixel margin around the text.  The\n`bg' argument is the color table index to fill the rectangle with;\n`fg' is the color table index to draw the text with.</para>\n",
                      "markdown": "`</programlisting>\n\n<para>Draw text on a filled rectangle.  The rectangle will be sized to fit\nthe text, with upper left hand corner at (x, y) on the saved image.\nThe `border' argument specifies a pixel margin around the text.  The\n`bg' argument is the color table index to fill the rectangle with;\n`fg' is the color table index to draw the text with.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 10,
                  "endLine": 384,
                  "endColumn": 14,
                  "snippet": {
                    "text": "</programlisting>\n\n<para>Draw a (filled) rectangle on the saved image.  Upper left corner of\nthe box is at image pixels (x, y), width is w, height is h.  Use the\nspecified color index.</para>\n\n<programlisting id=\"GifDrawBoxedText\">\n",
                    "rendered": {
                      "text": "</programlisting>\n\n<para>Draw a (filled) rectangle on the saved image.  Upper left corner of\nthe box is at image pixels (x, y), width is w, height is h.  Use the\nspecified color index.</para>\n\n<programlisting id=\"GifDrawBoxedText\">\n",
                      "markdown": "`</programlisting>\n\n<para>Draw a (filled) rectangle on the saved image.  Upper left corner of\nthe box is at image pixels (x, y), width is w, height is h.  Use the\nspecified color index.</para>\n\n<programlisting id=\"GifDrawBoxedText\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 69,
                  "endLine": 373,
                  "snippet": {
                    "text": "        const int color)\n</programlisting>\n\n<para>Draw a box on the saved image.  Upper left corner of the box is at\nimage pixels (x, y), width is w, height is h.  Use the specified color\nindex.</para>\n\n<programlisting id=\"GifDrawRectangle\">\n",
                    "rendered": {
                      "text": "        const int color)\n</programlisting>\n\n<para>Draw a box on the saved image.  Upper left corner of the box is at\nimage pixels (x, y), width is w, height is h.  Use the specified color\nindex.</para>\n\n<programlisting id=\"GifDrawRectangle\">\n",
                      "markdown": "`        const int color)\n</programlisting>\n\n<para>Draw a box on the saved image.  Upper left corner of the box is at\nimage pixels (x, y), width is w, height is h.  Use the specified color\nindex.</para>\n\n<programlisting id=\"GifDrawRectangle\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 26,
                  "endLine": 362,
                  "endColumn": 30,
                  "snippet": {
                    "text": "</programlisting>\n\n<para>Draw text using the 8x8 utility font on the saved image.  Upper\nleft corner of the text is at image pixel (x, y).  Use the specified\ncolor index.</para>\n\n<programlisting id=\"GifDrawBox\">\n",
                    "rendered": {
                      "text": "</programlisting>\n\n<para>Draw text using the 8x8 utility font on the saved image.  Upper\nleft corner of the text is at image pixel (x, y).  Use the specified\ncolor index.</para>\n\n<programlisting id=\"GifDrawBox\">\n",
                      "markdown": "`</programlisting>\n\n<para>Draw text using the 8x8 utility font on the saved image.  Upper\nleft corner of the text is at image pixel (x, y).  Use the specified\ncolor index.</para>\n\n<programlisting id=\"GifDrawBox\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 49,
                  "endLine": 326,
                  "endColumn": 58,
                  "snippet": {
                    "text": "<para>With these functions you can extract the data from a graphics\ncontrol extension associated with a saved image into a\nGraphicsControlBlock, modify it, and write it back out.  Note that if\nthe specified saved image doesn't have a graphics control extension,\nDGifSavedExtensionToGCB() will fill the GCB with default values and\nreturn GIF_ERROR (which can be ignored); EGifGCBToSavedExtension()\nwill create a new leading extension block.</para>\n",
                    "rendered": {
                      "text": "<para>With these functions you can extract the data from a graphics\ncontrol extension associated with a saved image into a\nGraphicsControlBlock, modify it, and write it back out.  Note that if\nthe specified saved image doesn't have a graphics control extension,\nDGifSavedExtensionToGCB() will fill the GCB with default values and\nreturn GIF_ERROR (which can be ignored); EGifGCBToSavedExtension()\nwill create a new leading extension block.</para>\n",
                      "markdown": "`<para>With these functions you can extract the data from a graphics\ncontrol extension associated with a saved image into a\nGraphicsControlBlock, modify it, and write it back out.  Note that if\nthe specified saved image doesn't have a graphics control extension,\nDGifSavedExtensionToGCB() will fill the GCB with default values and\nreturn GIF_ERROR (which can be ignored); EGifGCBToSavedExtension()\nwill create a new leading extension block.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 67,
                  "endLine": 324,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t    int ImageIndex);\n</programlisting>\n\n<para>With these functions you can extract the data from a graphics\ncontrol extension associated with a saved image into a\nGraphicsControlBlock, modify it, and write it back out.  Note that if\nthe specified saved image doesn't have a graphics control extension,\nDGifSavedExtensionToGCB() will fill the GCB with default values and\n",
                    "rendered": {
                      "text": "\t\t\t    int ImageIndex);\n</programlisting>\n\n<para>With these functions you can extract the data from a graphics\ncontrol extension associated with a saved image into a\nGraphicsControlBlock, modify it, and write it back out.  Note that if\nthe specified saved image doesn't have a graphics control extension,\nDGifSavedExtensionToGCB() will fill the GCB with default values and\n",
                      "markdown": "`\t\t\t    int ImageIndex);\n</programlisting>\n\n<para>With these functions you can extract the data from a graphics\ncontrol extension associated with a saved image into a\nGraphicsControlBlock, modify it, and write it back out.  Note that if\nthe specified saved image doesn't have a graphics control extension,\nDGifSavedExtensionToGCB() will fill the GCB with default values and\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 28,
                  "endLine": 298,
                  "endColumn": 37,
                  "snippet": {
                    "text": "</sect1>\n<sect1><title>Graphics control extension handling</title>\n\n<para>GIF89 added a graphics control extension block, but versions\nof GIFLIB before 5.0 weren't much help in reading or modifying them.  \nThis lack has been remedied with the following structure and functions:</para>\n\n",
                    "rendered": {
                      "text": "</sect1>\n<sect1><title>Graphics control extension handling</title>\n\n<para>GIF89 added a graphics control extension block, but versions\nof GIFLIB before 5.0 weren't much help in reading or modifying them.  \nThis lack has been remedied with the following structure and functions:</para>\n\n",
                      "markdown": "`</sect1>\n<sect1><title>Graphics control extension handling</title>\n\n<para>GIF89 added a graphics control extension block, but versions\nof GIFLIB before 5.0 weren't much help in reading or modifying them.  \nThis lack has been remedied with the following structure and functions:</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 22,
                  "endLine": 296,
                  "endColumn": 31,
                  "snippet": {
                    "text": "EGifSpew() calls.</para>\n\n</sect1>\n<sect1><title>Graphics control extension handling</title>\n\n<para>GIF89 added a graphics control extension block, but versions\nof GIFLIB before 5.0 weren't much help in reading or modifying them.  \n",
                    "rendered": {
                      "text": "EGifSpew() calls.</para>\n\n</sect1>\n<sect1><title>Graphics control extension handling</title>\n\n<para>GIF89 added a graphics control extension block, but versions\nof GIFLIB before 5.0 weren't much help in reading or modifying them.  \n",
                      "markdown": "`EGifSpew() calls.</para>\n\n</sect1>\n<sect1><title>Graphics control extension handling</title>\n\n<para>GIF89 added a graphics control extension block, but versions\nof GIFLIB before 5.0 weren't much help in reading or modifying them.  \n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 56,
                  "endLine": 206,
                  "endColumn": 60,
                  "snippet": {
                    "text": "structures in gif_lib.h).  When you have modified the image to taste,\nwrite it out with EGifSpew().</para>\n\n<para>One detail that may not be clear from just looking at the\nstructures is how extension blocks and sub-blocks are stored.  Each\nExtensionBlock structure represents an extension data block.  Those\nwith a zero function code represent continuation data blocks attached\n",
                    "rendered": {
                      "text": "structures in gif_lib.h).  When you have modified the image to taste,\nwrite it out with EGifSpew().</para>\n\n<para>One detail that may not be clear from just looking at the\nstructures is how extension blocks and sub-blocks are stored.  Each\nExtensionBlock structure represents an extension data block.  Those\nwith a zero function code represent continuation data blocks attached\n",
                      "markdown": "`structures in gif_lib.h).  When you have modified the image to taste,\nwrite it out with EGifSpew().</para>\n\n<para>One detail that may not be clear from just looking at the\nstructures is how extension blocks and sub-blocks are stored.  Each\nExtensionBlock structure represents an extension data block.  Those\nwith a zero function code represent continuation data blocks attached\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 49,
                  "endLine": 107,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n<para>The user almost never writes into this structure (exception: it\nmay occasionally be useful to alter things in the SavedImages array and\nTrailing member), but can read any of these items at any time it is\nvalid (Image information is invalid until the first image has been read;\nread; SavedImages information is valid only after a DGifSlurp() call).</para>\n\n",
                    "rendered": {
                      "text": "\n<para>The user almost never writes into this structure (exception: it\nmay occasionally be useful to alter things in the SavedImages array and\nTrailing member), but can read any of these items at any time it is\nvalid (Image information is invalid until the first image has been read;\nread; SavedImages information is valid only after a DGifSlurp() call).</para>\n\n",
                      "markdown": "`\n<para>The user almost never writes into this structure (exception: it\nmay occasionally be useful to alter things in the SavedImages array and\nTrailing member), but can read any of these items at any time it is\nvalid (Image information is invalid until the first image has been read;\nread; SavedImages information is valid only after a DGifSlurp() call).</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 31,
                  "endLine": 47,
                  "endColumn": 35,
                  "snippet": {
                    "text": "code is collected into a service library which is used in all the utilities in\n`util'.  It can be used in any application needs to read/write the GIF\nfile format.  This document does <emphasis>not</emphasis> explain the GIF file\nformat and assumes you know it, at least to the level of the GIF file\nstructure.</para>\n\n</sect1>\n",
                    "rendered": {
                      "text": "code is collected into a service library which is used in all the utilities in\n`util'.  It can be used in any application needs to read/write the GIF\nfile format.  This document does <emphasis>not</emphasis> explain the GIF file\nformat and assumes you know it, at least to the level of the GIF file\nstructure.</para>\n\n</sect1>\n",
                      "markdown": "`code is collected into a service library which is used in all the utilities in\n`util'.  It can be used in any application needs to read/write the GIF\nfile format.  This document does <emphasis>not</emphasis> explain the GIF file\nformat and assumes you know it, at least to the level of the GIF file\nstructure.</para>\n\n</sect1>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1235,
                  "startColumn": 50,
                  "endLine": 1235,
                  "endColumn": 56,
                  "snippet": {
                    "text": "the sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\nspecification was written in the late 1980s.  That kind of limit\ndisappeared in the mid-1990s.  Until 5.0, GIFLIB ignored this flag on\ninput and zeroed it on output; now it is read and preserved if\n",
                    "rendered": {
                      "text": "the sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\nspecification was written in the late 1980s.  That kind of limit\ndisappeared in the mid-1990s.  Until 5.0, GIFLIB ignored this flag on\ninput and zeroed it on output; now it is read and preserved if\n",
                      "markdown": "`the sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\nspecification was written in the late 1980s.  That kind of limit\ndisappeared in the mid-1990s.  Until 5.0, GIFLIB ignored this flag on\ninput and zeroed it on output; now it is read and preserved if\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1232,
                  "startColumn": 3,
                  "endLine": 1232,
                  "endColumn": 9,
                  "snippet": {
                    "text": "analog television of the day, which had rectangular pixel-equivalents.</para>\n\n<para>Yet another ignored feature of both the LSDB and sub-images is\nthe sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\n",
                    "rendered": {
                      "text": "analog television of the day, which had rectangular pixel-equivalents.</para>\n\n<para>Yet another ignored feature of both the LSDB and sub-images is\nthe sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\n",
                      "markdown": "`analog television of the day, which had rectangular pixel-equivalents.</para>\n\n<para>Yet another ignored feature of both the LSDB and sub-images is\nthe sort flag, which is supposed to signal whether the colors in the\nassociated color map are sorted by decreasing importance in case the\ndisplay device can only render a limited number of them.  This feature\nreflected the high cost of dual-port memory at the time the GIF\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1218,
                  "startColumn": 28,
                  "endLine": 1218,
                  "endColumn": 36,
                  "snippet": {
                    "text": "be placed on the canvas.</para>\n\n<para>GIFLIB can read and set these fields; the gifpos and giftool\nutilities will enable you to script such changes.  But browsers and\nmodern image viewers ignore them. Nowadays multiple-image GIFs are \ngenerally used either as animations in which each sub-image is a frame\nor as image libraries, with the GIF client handling compositing into\n",
                    "rendered": {
                      "text": "be placed on the canvas.</para>\n\n<para>GIFLIB can read and set these fields; the gifpos and giftool\nutilities will enable you to script such changes.  But browsers and\nmodern image viewers ignore them. Nowadays multiple-image GIFs are \ngenerally used either as animations in which each sub-image is a frame\nor as image libraries, with the GIF client handling compositing into\n",
                      "markdown": "`be placed on the canvas.</para>\n\n<para>GIFLIB can read and set these fields; the gifpos and giftool\nutilities will enable you to script such changes.  But browsers and\nmodern image viewers ignore them. Nowadays multiple-image GIFs are \ngenerally used either as animations in which each sub-image is a frame\nor as image libraries, with the GIF client handling compositing into\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1210,
                  "startColumn": 29,
                  "endLine": 1210,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n<para>The GIF format seems to have been designed with the idea that viewers\nwould render multiple images in a GIF on a common canvas, giving an effect like\na picture wall.  The 'logical screen descriptor block' (LSDB), 6 bytes right\nafter the 6-byte GIF stamp and version header at the beginning of a\nGIF file, includes both two-byte canvas width and canvas height\nfields and a canvas background color.  Each image, besides height and\n",
                    "rendered": {
                      "text": "\n<para>The GIF format seems to have been designed with the idea that viewers\nwould render multiple images in a GIF on a common canvas, giving an effect like\na picture wall.  The 'logical screen descriptor block' (LSDB), 6 bytes right\nafter the 6-byte GIF stamp and version header at the beginning of a\nGIF file, includes both two-byte canvas width and canvas height\nfields and a canvas background color.  Each image, besides height and\n",
                      "markdown": "`\n<para>The GIF format seems to have been designed with the idea that viewers\nwould render multiple images in a GIF on a common canvas, giving an effect like\na picture wall.  The 'logical screen descriptor block' (LSDB), 6 bytes right\nafter the 6-byte GIF stamp and version header at the beginning of a\nGIF file, includes both two-byte canvas width and canvas height\nfields and a canvas background color.  Each image, besides height and\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1118,
                  "startColumn": 5,
                  "endLine": 1118,
                  "endColumn": 11,
                  "snippet": {
                    "text": "<listitem><para>  All functions exported by this library now have DGif,\nEGif, or Gif as a name prefix.</para></listitem>\n<listitem><para>The default GIF version to write is now computed at\nwrite time from the types of an image's extension blocks. (Formerly\nEGifSpew() behaved this way, but the sequential-writing code didn't.)\nThe result of this computation is available through the new function\nEGifGetGifVersion().</para></listitem>\n",
                    "rendered": {
                      "text": "<listitem><para>  All functions exported by this library now have DGif,\nEGif, or Gif as a name prefix.</para></listitem>\n<listitem><para>The default GIF version to write is now computed at\nwrite time from the types of an image's extension blocks. (Formerly\nEGifSpew() behaved this way, but the sequential-writing code didn't.)\nThe result of this computation is available through the new function\nEGifGetGifVersion().</para></listitem>\n",
                      "markdown": "`<listitem><para>  All functions exported by this library now have DGif,\nEGif, or Gif as a name prefix.</para></listitem>\n<listitem><para>The default GIF version to write is now computed at\nwrite time from the types of an image's extension blocks. (Formerly\nEGifSpew() behaved this way, but the sequential-writing code didn't.)\nThe result of this computation is available through the new function\nEGifGetGifVersion().</para></listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 1034,
                  "startColumn": 4,
                  "endLine": 1034,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n<para>It sometimes may be desired to write the compressed code as is\nwithout decoding it.  For example a filter for a GIF file that change\nonly screen size (GifPos), does not need the exact pixel values.\nPiping out the compressed image as is makes this process much\nfaster.</para>\n\n",
                    "rendered": {
                      "text": "\n<para>It sometimes may be desired to write the compressed code as is\nwithout decoding it.  For example a filter for a GIF file that change\nonly screen size (GifPos), does not need the exact pixel values.\nPiping out the compressed image as is makes this process much\nfaster.</para>\n\n",
                      "markdown": "`\n<para>It sometimes may be desired to write the compressed code as is\nwithout decoding it.  For example a filter for a GIF file that change\nonly screen size (GifPos), does not need the exact pixel values.\nPiping out the compressed image as is makes this process much\nfaster.</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 40,
                  "endLine": 924,
                  "endColumn": 46,
                  "snippet": {
                    "text": "file. if error occurs returns GIF_ERROR (see gif_lib.h), otherwise\nGIF_OK.</para>\n\n<para>This routine should be called each time a new image must be\ndumped to the file.</para>\n\n<programlisting id=\"EGifPutLine\">\n",
                    "rendered": {
                      "text": "file. if error occurs returns GIF_ERROR (see gif_lib.h), otherwise\nGIF_OK.</para>\n\n<para>This routine should be called each time a new image must be\ndumped to the file.</para>\n\n<programlisting id=\"EGifPutLine\">\n",
                      "markdown": "`file. if error occurs returns GIF_ERROR (see gif_lib.h), otherwise\nGIF_OK.</para>\n\n<para>This routine should be called each time a new image must be\ndumped to the file.</para>\n\n<programlisting id=\"EGifPutLine\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 905,
                  "startColumn": 24,
                  "endLine": 905,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        ColorMapObject *GifColorMap)\n</programlisting>\n\n<para>Update the GifFile Screen parameters, in GifFile structure and in\nthe real file.  If error occurs, returns GIF_ERROR (see gif_lib.h),\notherwise GIF_OK.</para>\n\n",
                    "rendered": {
                      "text": "        ColorMapObject *GifColorMap)\n</programlisting>\n\n<para>Update the GifFile Screen parameters, in GifFile structure and in\nthe real file.  If error occurs, returns GIF_ERROR (see gif_lib.h),\notherwise GIF_OK.</para>\n\n",
                      "markdown": "`        ColorMapObject *GifColorMap)\n</programlisting>\n\n<para>Update the GifFile Screen parameters, in GifFile structure and in\nthe real file.  If error occurs, returns GIF_ERROR (see gif_lib.h),\notherwise GIF_OK.</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 718,
                  "startColumn": 33,
                  "endLine": 718,
                  "endColumn": 41,
                  "snippet": {
                    "text": "<varlistentry>\n<term>2. ScreenDescRecordType </term>\n<listitem>\n<para>screen information.  As the screen info is automatically read in when the file is open, this should not happen.</para>\n</listitem>\n</varlistentry>\n\n",
                    "rendered": {
                      "text": "<varlistentry>\n<term>2. ScreenDescRecordType </term>\n<listitem>\n<para>screen information.  As the screen info is automatically read in when the file is open, this should not happen.</para>\n</listitem>\n</varlistentry>\n\n",
                      "markdown": "`<varlistentry>\n<term>2. ScreenDescRecordType </term>\n<listitem>\n<para>screen information.  As the screen info is automatically read in when the file is open, this should not happen.</para>\n</listitem>\n</varlistentry>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 693,
                  "startColumn": 15,
                  "endLine": 693,
                  "endColumn": 23,
                  "snippet": {
                    "text": "int DGifGetScreenDesc(GifFileType *GifFile)\n</programlisting>\n\n<para>Reads the screen information into the GifFile structure. Note this\nroutine is automatically called once a file is opened, and therefore\nusually need not be called explicitly.</para>\n\n",
                    "rendered": {
                      "text": "int DGifGetScreenDesc(GifFileType *GifFile)\n</programlisting>\n\n<para>Reads the screen information into the GifFile structure. Note this\nroutine is automatically called once a file is opened, and therefore\nusually need not be called explicitly.</para>\n\n",
                      "markdown": "`int DGifGetScreenDesc(GifFileType *GifFile)\n</programlisting>\n\n<para>Reads the screen information into the GifFile structure. Note this\nroutine is automatically called once a file is opened, and therefore\nusually need not be called explicitly.</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 28,
                  "endLine": 543,
                  "endColumn": 36,
                  "snippet": {
                    "text": "<term><errorname>D_GIF_ERR_NO_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"No screen descriptor detected\"\n   Each GIF file should have screen descriptor in its header. This error will\n   be generated if no such descriptor was found.</para>\n</listitem>\n</varlistentry>\n",
                    "rendered": {
                      "text": "<term><errorname>D_GIF_ERR_NO_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"No screen descriptor detected\"\n   Each GIF file should have screen descriptor in its header. This error will\n   be generated if no such descriptor was found.</para>\n</listitem>\n</varlistentry>\n",
                      "markdown": "`<term><errorname>D_GIF_ERR_NO_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"No screen descriptor detected\"\n   Each GIF file should have screen descriptor in its header. This error will\n   be generated if no such descriptor was found.</para>\n</listitem>\n</varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 49,
                  "endLine": 542,
                  "endColumn": 57,
                  "snippet": {
                    "text": "<varlistentry>\n<term><errorname>D_GIF_ERR_NO_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"No screen descriptor detected\"\n   Each GIF file should have screen descriptor in its header. This error will\n   be generated if no such descriptor was found.</para>\n</listitem>\n",
                    "rendered": {
                      "text": "<varlistentry>\n<term><errorname>D_GIF_ERR_NO_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"No screen descriptor detected\"\n   Each GIF file should have screen descriptor in its header. This error will\n   be generated if no such descriptor was found.</para>\n</listitem>\n",
                      "markdown": "`<varlistentry>\n<term><errorname>D_GIF_ERR_NO_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"No screen descriptor detected\"\n   Each GIF file should have screen descriptor in its header. This error will\n   be generated if no such descriptor was found.</para>\n</listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 45,
                  "endLine": 438,
                  "endColumn": 53,
                  "snippet": {
                    "text": "<listitem>\n   <para>Message printed using PrintGifError: \"Screen Descriptor\n   already been set\" Attempt to write second screen descriptor to same\n   GIF file. GIF file should have exactly one screen descriptor which\n   should be set directly after the file is opened.</para>\n</listitem>\n</varlistentry>\n",
                    "rendered": {
                      "text": "<listitem>\n   <para>Message printed using PrintGifError: \"Screen Descriptor\n   already been set\" Attempt to write second screen descriptor to same\n   GIF file. GIF file should have exactly one screen descriptor which\n   should be set directly after the file is opened.</para>\n</listitem>\n</varlistentry>\n",
                      "markdown": "`<listitem>\n   <para>Message printed using PrintGifError: \"Screen Descriptor\n   already been set\" Attempt to write second screen descriptor to same\n   GIF file. GIF file should have exactly one screen descriptor which\n   should be set directly after the file is opened.</para>\n</listitem>\n</varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 44,
                  "endLine": 437,
                  "endColumn": 52,
                  "snippet": {
                    "text": "<term><errorname>E_GIF_ERR_HAS_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"Screen Descriptor\n   already been set\" Attempt to write second screen descriptor to same\n   GIF file. GIF file should have exactly one screen descriptor which\n   should be set directly after the file is opened.</para>\n</listitem>\n",
                    "rendered": {
                      "text": "<term><errorname>E_GIF_ERR_HAS_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"Screen Descriptor\n   already been set\" Attempt to write second screen descriptor to same\n   GIF file. GIF file should have exactly one screen descriptor which\n   should be set directly after the file is opened.</para>\n</listitem>\n",
                      "markdown": "`<term><errorname>E_GIF_ERR_HAS_SCRN_DSCR</errorname></term>\n<listitem>\n   <para>Message printed using PrintGifError: \"Screen Descriptor\n   already been set\" Attempt to write second screen descriptor to same\n   GIF file. GIF file should have exactly one screen descriptor which\n   should be set directly after the file is opened.</para>\n</listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 66,
                  "endLine": 184,
                  "snippet": {
                    "text": "GifFileType *DGifOpenFileHandle(int FileHandle, int *ErrorCode)\n</programlisting>\n\n<para>Open a new GIF file using the given FileHandle, and read its Screen\ninformation.</para>\n\n<para>If any error occurs, NULL is returned and ErrorCode is set (if\nnon-NULL).</para>\n",
                    "rendered": {
                      "text": "GifFileType *DGifOpenFileHandle(int FileHandle, int *ErrorCode)\n</programlisting>\n\n<para>Open a new GIF file using the given FileHandle, and read its Screen\ninformation.</para>\n\n<para>If any error occurs, NULL is returned and ErrorCode is set (if\nnon-NULL).</para>\n",
                      "markdown": "`GifFileType *DGifOpenFileHandle(int FileHandle, int *ErrorCode)\n</programlisting>\n\n<para>Open a new GIF file using the given FileHandle, and read its Screen\ninformation.</para>\n\n<para>If any error occurs, NULL is returned and ErrorCode is set (if\nnon-NULL).</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 31,
                  "endLine": 174,
                  "endColumn": 39,
                  "snippet": {
                    "text": "</programlisting>\n\n<para>Open a new GIF file (in binary mode, if under Windows) using the\ngiven GifFileName, and read its Screen information.</para>\n\n<para>If any error occurs, NULL is returned and ErrorCode is set (if\nnon-NULL).</para>\n",
                    "rendered": {
                      "text": "</programlisting>\n\n<para>Open a new GIF file (in binary mode, if under Windows) using the\ngiven GifFileName, and read its Screen information.</para>\n\n<para>If any error occurs, NULL is returned and ErrorCode is set (if\nnon-NULL).</para>\n",
                      "markdown": "`</programlisting>\n\n<para>Open a new GIF file (in binary mode, if under Windows) using the\ngiven GifFileName, and read its Screen information.</para>\n\n<para>If any error occurs, NULL is returned and ErrorCode is set (if\nnon-NULL).</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 56,
                  "endLine": 107,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n<para>The user almost never writes into this structure (exception: it\nmay occasionally be useful to alter things in the SavedImages array and\nTrailing member), but can read any of these items at any time it is\nvalid (Image information is invalid until the first image has been read;\nread; SavedImages information is valid only after a DGifSlurp() call).</para>\n\n",
                    "rendered": {
                      "text": "\n<para>The user almost never writes into this structure (exception: it\nmay occasionally be useful to alter things in the SavedImages array and\nTrailing member), but can read any of these items at any time it is\nvalid (Image information is invalid until the first image has been read;\nread; SavedImages information is valid only after a DGifSlurp() call).</para>\n\n",
                      "markdown": "`\n<para>The user almost never writes into this structure (exception: it\nmay occasionally be useful to alter things in the SavedImages array and\nTrailing member), but can read any of these items at any time it is\nvalid (Image information is invalid until the first image has been read;\nread; SavedImages information is valid only after a DGifSlurp() call).</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 65,
                  "endLine": 54,
                  "snippet": {
                    "text": "</sect1>\n<sect1><title>Credit and Blame</title>\n\n<para>Gershon wrote: \"This library was written because I couldn't find\nanything similar and I wanted one.  I was inspired by the RLE Utah tool kit,\nwhich I hoped to port to an IBM PC, but found it to be too machine specific,\nand its compression ratio too low.  I compromised on the GIF format, but I am\nnot sure how long 8 bits per pixel will be enough.\"</para>\n",
                    "rendered": {
                      "text": "</sect1>\n<sect1><title>Credit and Blame</title>\n\n<para>Gershon wrote: \"This library was written because I couldn't find\nanything similar and I wanted one.  I was inspired by the RLE Utah tool kit,\nwhich I hoped to port to an IBM PC, but found it to be too machine specific,\nand its compression ratio too low.  I compromised on the GIF format, but I am\nnot sure how long 8 bits per pixel will be enough.\"</para>\n",
                      "markdown": "`</sect1>\n<sect1><title>Credit and Blame</title>\n\n<para>Gershon wrote: \"This library was written because I couldn't find\nanything similar and I wanted one.  I was inspired by the RLE Utah tool kit,\nwhich I hoped to port to an IBM PC, but found it to be too machine specific,\nand its compression ratio too low.  I compromised on the GIF format, but I am\nnot sure how long 8 bits per pixel will be enough.\"</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 24,
                  "endLine": 44,
                  "endColumn": 33,
                  "snippet": {
                    "text": "Incorporated.</para>\n\n<para>This document explains the GIF library code in directory `lib'.  The\ncode is collected into a service library which is used in all the utilities in\n`util'.  It can be used in any application needs to read/write the GIF\nfile format.  This document does <emphasis>not</emphasis> explain the GIF file\nformat and assumes you know it, at least to the level of the GIF file\n",
                    "rendered": {
                      "text": "Incorporated.</para>\n\n<para>This document explains the GIF library code in directory `lib'.  The\ncode is collected into a service library which is used in all the utilities in\n`util'.  It can be used in any application needs to read/write the GIF\nfile format.  This document does <emphasis>not</emphasis> explain the GIF file\nformat and assumes you know it, at least to the level of the GIF file\n",
                      "markdown": "`Incorporated.</para>\n\n<para>This document explains the GIF library code in directory `lib'.  The\ncode is collected into a service library which is used in all the utilities in\n`util'.  It can be used in any application needs to read/write the GIF\nfile format.  This document does <emphasis>not</emphasis> explain the GIF file\nformat and assumes you know it, at least to the level of the GIF file\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gif_lib.xml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 38,
                  "endLine": 40,
                  "endColumn": 47,
                  "snippet": {
                    "text": "<sect1><title>Introduction</title>\n\n<para>The Graphics Interchange Format(c) is the Copyright property of\nCompuServe Incorporated.  GIF(sm) is a Service Mark property of CompuServe\nIncorporated.</para>\n\n<para>This document explains the GIF library code in directory `lib'.  The\n",
                    "rendered": {
                      "text": "<sect1><title>Introduction</title>\n\n<para>The Graphics Interchange Format(c) is the Copyright property of\nCompuServe Incorporated.  GIF(sm) is a Service Mark property of CompuServe\nIncorporated.</para>\n\n<para>This document explains the GIF library code in directory `lib'.  The\n",
                      "markdown": "`<sect1><title>Introduction</title>\n\n<para>The Graphics Interchange Format(c) is the Copyright property of\nCompuServe Incorporated.  GIF(sm) is a Service Mark property of CompuServe\nIncorporated.</para>\n\n<para>This document explains the GIF library code in directory `lib'.  The\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/00README"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 60,
                  "endLine": 3,
                  "endColumn": 3,
                  "snippet": {
                    "text": "This directory contains documentation on the API and tools. \nThe most convenient way to view it is with a browser pointed\nat the project website, but...\n\nAn introduction to the package is in intro.xml\n\n",
                    "rendered": {
                      "text": "This directory contains documentation on the API and tools. \nThe most convenient way to view it is with a browser pointed\nat the project website, but...\n\nAn introduction to the package is in intro.xml\n\n",
                      "markdown": "`This directory contains documentation on the API and tools. \nThe most convenient way to view it is with a browser pointed\nat the project website, but...\n\nAn introduction to the package is in intro.xml\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbg.xml"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 35,
                  "endLine": 105,
                  "endColumn": 43,
                  "snippet": {
                    "text": "<listitem>\n<para> What to use as the primary background color to scale. This\ncolor is scaled between the minimum intensity (min) and maximum\nintensity (max) from one end of the screen to the other as defined by\ndir.  See below (-m &amp; -M) for min &amp; max. Default is Blue (0,\n0, 255).</para>\n</listitem>\n",
                    "rendered": {
                      "text": "<listitem>\n<para> What to use as the primary background color to scale. This\ncolor is scaled between the minimum intensity (min) and maximum\nintensity (max) from one end of the screen to the other as defined by\ndir.  See below (-m &amp; -M) for min &amp; max. Default is Blue (0,\n0, 255).</para>\n</listitem>\n",
                      "markdown": "`<listitem>\n<para> What to use as the primary background color to scale. This\ncolor is scaled between the minimum intensity (min) and maximum\nintensity (max) from one end of the screen to the other as defined by\ndir.  See below (-m &amp; -M) for min &amp; max. Default is Blue (0,\n0, 255).</para>\n</listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbg.xml"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 61,
                  "endLine": 91,
                  "snippet": {
                    "text": "</variablelist>\n<para>The compass directions may be use as synonyms for the above directions, so\nfor example \"NE\" is equal to \"TR\".</para>\n<para>Direction is case insensitive. The default direction is Top\n(North).</para>\n</listitem>\n</varlistentry>\n<varlistentry>\n",
                    "rendered": {
                      "text": "</variablelist>\n<para>The compass directions may be use as synonyms for the above directions, so\nfor example \"NE\" is equal to \"TR\".</para>\n<para>Direction is case insensitive. The default direction is Top\n(North).</para>\n</listitem>\n</varlistentry>\n<varlistentry>\n",
                      "markdown": "`</variablelist>\n<para>The compass directions may be use as synonyms for the above directions, so\nfor example \"NE\" is equal to \"TR\".</para>\n<para>Direction is case insensitive. The default direction is Top\n(North).</para>\n</listitem>\n</varlistentry>\n<varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbg.xml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 19,
                  "endLine": 86,
                  "endColumn": 24,
                  "snippet": {
                    "text": "<listitem><para>for left</para></listitem></varlistentry>\n<varlistentry>\n<term>\"TL\"</term>\n<listitem><para>for Top Left</para></listitem></varlistentry>\n</variablelist>\n<para>The compass directions may be use as synonyms for the above directions, so\nfor example \"NE\" is equal to \"TR\".</para>\n",
                    "rendered": {
                      "text": "<listitem><para>for left</para></listitem></varlistentry>\n<varlistentry>\n<term>\"TL\"</term>\n<listitem><para>for Top Left</para></listitem></varlistentry>\n</variablelist>\n<para>The compass directions may be use as synonyms for the above directions, so\nfor example \"NE\" is equal to \"TR\".</para>\n",
                      "markdown": "`<listitem><para>for left</para></listitem></varlistentry>\n<varlistentry>\n<term>\"TL\"</term>\n<listitem><para>for Top Left</para></listitem></varlistentry>\n</variablelist>\n<para>The compass directions may be use as synonyms for the above directions, so\nfor example \"NE\" is equal to \"TR\".</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbg.xml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 19,
                  "endLine": 68,
                  "endColumn": 24,
                  "snippet": {
                    "text": "<listitem><para>for Top</para></listitem></varlistentry>\n<varlistentry>\n<term>\"TR\"</term>\n<listitem><para>for Top Right</para></listitem></varlistentry>\n<varlistentry>\n<term>\"R\"</term>\n<listitem><para>for Right</para></listitem></varlistentry>\n",
                    "rendered": {
                      "text": "<listitem><para>for Top</para></listitem></varlistentry>\n<varlistentry>\n<term>\"TR\"</term>\n<listitem><para>for Top Right</para></listitem></varlistentry>\n<varlistentry>\n<term>\"R\"</term>\n<listitem><para>for Right</para></listitem></varlistentry>\n",
                      "markdown": "`<listitem><para>for Top</para></listitem></varlistentry>\n<varlistentry>\n<term>\"TR\"</term>\n<listitem><para>for Top Right</para></listitem></varlistentry>\n<varlistentry>\n<term>\"R\"</term>\n<listitem><para>for Right</para></listitem></varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/porsche.dmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 320, Height = 200.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 320, Height = 200.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 320, Height = 200.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/porsche.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 320, Height = 200.\n\tColorResolution = 4, BitsPerPixel = 5, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 320, Height = 200.\n\tColorResolution = 4, BitsPerPixel = 5, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 320, Height = 200.\n\tColorResolution = 4, BitsPerPixel = 5, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 44,
                  "endLine": 756,
                  "endColumn": 48,
                  "snippet": {
                    "text": "* Functions for drawing text and boxes on saved images are documented.\n* The distribution is now issued under a simple X-Consortium-style license.\n* Can now generate package RPMs and LSM automatically.\n* Home page with Web-acessible documentation at http://www.ccil.org/~esr/giflib\n\nBug fixes\n---------\n",
                    "rendered": {
                      "text": "* Functions for drawing text and boxes on saved images are documented.\n* The distribution is now issued under a simple X-Consortium-style license.\n* Can now generate package RPMs and LSM automatically.\n* Home page with Web-acessible documentation at http://www.ccil.org/~esr/giflib\n\nBug fixes\n---------\n",
                      "markdown": "`* Functions for drawing text and boxes on saved images are documented.\n* The distribution is now issued under a simple X-Consortium-style license.\n* Can now generate package RPMs and LSM automatically.\n* Home page with Web-acessible documentation at http://www.ccil.org/~esr/giflib\n\nBug fixes\n---------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 72,
                  "endLine": 682,
                  "snippet": {
                    "text": "  Appalachian Trail.\n* The qprintf methods of the library are now deprecated.  Do not use \n  GifQuietPrint or GifQprintf.  These should have been pushed out into the\n  utility helper library instead of sitting around in the library proper at\n  the same time as the getarg functions were moved out.  Getting rid of these\n  will let us get rid of our dependence on stdarg.h/varargs.h (Which a Gif\n  reading library has no business requiring.)\n\n",
                    "rendered": {
                      "text": "  Appalachian Trail.\n* The qprintf methods of the library are now deprecated.  Do not use \n  GifQuietPrint or GifQprintf.  These should have been pushed out into the\n  utility helper library instead of sitting around in the library proper at\n  the same time as the getarg functions were moved out.  Getting rid of these\n  will let us get rid of our dependence on stdarg.h/varargs.h (Which a Gif\n  reading library has no business requiring.)\n\n",
                      "markdown": "`  Appalachian Trail.\n* The qprintf methods of the library are now deprecated.  Do not use \n  GifQuietPrint or GifQprintf.  These should have been pushed out into the\n  utility helper library instead of sitting around in the library proper at\n  the same time as the getarg functions were moved out.  Getting rid of these\n  will let us get rid of our dependence on stdarg.h/varargs.h (Which a Gif\n  reading library has no business requiring.)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 50,
                  "endLine": 530,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\nNew API Features\n----------------\n* The default GIF version to write is now computed at write time from\n  the types of an image's extension blocks, but can be overridden with \n  EGifSetGifVersion().\n* EGifSpew() is now thread-safe. \n",
                    "rendered": {
                      "text": "\nNew API Features\n----------------\n* The default GIF version to write is now computed at write time from\n  the types of an image's extension blocks, but can be overridden with \n  EGifSetGifVersion().\n* EGifSpew() is now thread-safe. \n",
                      "markdown": "`\nNew API Features\n----------------\n* The default GIF version to write is now computed at write time from\n  the types of an image's extension blocks, but can be overridden with \n  EGifSetGifVersion().\n* EGifSpew() is now thread-safe. \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 47,
                  "endLine": 509,
                  "endColumn": 56,
                  "snippet": {
                    "text": "  standards files from CompuServe.\n* The documentation now includes \"What's In A GIF\", a very detailed narrative\n  description of the file format.\n* The -A option of gifasm (for inserting a loop control block) is documented.\n* The documentation directory includes a copy of the original GIF87 \n  specification as well as GIF89's.\n* The project now has a logo.\n",
                    "rendered": {
                      "text": "  standards files from CompuServe.\n* The documentation now includes \"What's In A GIF\", a very detailed narrative\n  description of the file format.\n* The -A option of gifasm (for inserting a loop control block) is documented.\n* The documentation directory includes a copy of the original GIF87 \n  specification as well as GIF89's.\n* The project now has a logo.\n",
                      "markdown": "`  standards files from CompuServe.\n* The documentation now includes \"What's In A GIF\", a very detailed narrative\n  description of the file format.\n* The -A option of gifasm (for inserting a loop control block) is documented.\n* The documentation directory includes a copy of the original GIF87 \n  specification as well as GIF89's.\n* The project now has a logo.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 24,
                  "endLine": 494,
                  "endColumn": 33,
                  "snippet": {
                    "text": "* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n* A new utility, giftool, supports a wide variety of filtering operations\n  on GIFs, including: setting background and transparency colors, changing\n  interlacing, setting image delays, setting the user-input flag, and setting\n",
                    "rendered": {
                      "text": "* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n* A new utility, giftool, supports a wide variety of filtering operations\n  on GIFs, including: setting background and transparency colors, changing\n  interlacing, setting image delays, setting the user-input flag, and setting\n",
                      "markdown": "`* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n* A new utility, giftool, supports a wide variety of filtering operations\n  on GIFs, including: setting background and transparency colors, changing\n  interlacing, setting image delays, setting the user-input flag, and setting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 37,
                  "endLine": 492,
                  "endColumn": 45,
                  "snippet": {
                    "text": "* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n* A new utility, giftool, supports a wide variety of filtering operations\n",
                    "rendered": {
                      "text": "* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n* A new utility, giftool, supports a wide variety of filtering operations\n",
                      "markdown": "`* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n* A new utility, giftool, supports a wide variety of filtering operations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 33,
                  "endLine": 491,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  (previously required) size option is missing.\n* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n",
                    "rendered": {
                      "text": "  (previously required) size option is missing.\n* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n",
                      "markdown": "`  (previously required) size option is missing.\n* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n  including the graphics control information for transparency and delay time.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 56,
                  "endLine": 490,
                  "endColumn": 65,
                  "snippet": {
                    "text": "* To go with its new name, gif2raw now dumps raw pixels from a GIF if the\n  (previously required) size option is missing.\n* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n",
                    "rendered": {
                      "text": "* To go with its new name, gif2raw now dumps raw pixels from a GIF if the\n  (previously required) size option is missing.\n* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n",
                      "markdown": "`* To go with its new name, gif2raw now dumps raw pixels from a GIF if the\n  (previously required) size option is missing.\n* Standalone rgb2gif is gone; the same capability is now a mode of gif2rgb.\n* giftext displays the parsed contents of GIF89 graphics control blocks.\n* gifbuild handles GIF89 graphics control blocks and Netscape animation\n  loop blocks; it can can display and update either.\n* gifrotate and other filter utilities now preserve extension blocks, \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 1,
                  "endLine": 468,
                  "endColumn": 10,
                  "snippet": {
                    "text": "* Lennie Araki's Windows C++ wrapper is gone. It's eight years old,\n  unmaintained, he has dropped out of sight, and a better one needs to\n  be written to use the high-level GIFLIB API and GIF89 graphics\n  control extension support.  We'll carry such a wrapper when we have\n  a maintainer for it.\n* EGifSetVersion(), introduced in 4.2, is gone. The library always\n  writes GIF87 or GIF89 as required by the data. This change helps\n",
                    "rendered": {
                      "text": "* Lennie Araki's Windows C++ wrapper is gone. It's eight years old,\n  unmaintained, he has dropped out of sight, and a better one needs to\n  be written to use the high-level GIFLIB API and GIF89 graphics\n  control extension support.  We'll carry such a wrapper when we have\n  a maintainer for it.\n* EGifSetVersion(), introduced in 4.2, is gone. The library always\n  writes GIF87 or GIF89 as required by the data. This change helps\n",
                      "markdown": "`* Lennie Araki's Windows C++ wrapper is gone. It's eight years old,\n  unmaintained, he has dropped out of sight, and a better one needs to\n  be written to use the high-level GIFLIB API and GIF89 graphics\n  control extension support.  We'll carry such a wrapper when we have\n  a maintainer for it.\n* EGifSetVersion(), introduced in 4.2, is gone. The library always\n  writes GIF87 or GIF89 as required by the data. This change helps\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 46,
                  "endLine": 423,
                  "endColumn": 55,
                  "snippet": {
                    "text": "  EGifPutExtensionTrailer().  See the Compatibility section of\n  the library API documentation for details.\n* New functions DGifSavedExtensionToGCB() and EGifGCBToSavedExtension()\n  make it easy to read and edit GIF89 graphics control blocks in saved images.\n\nNamespacing\n~~~~~~~~~~~\n",
                    "rendered": {
                      "text": "  EGifPutExtensionTrailer().  See the Compatibility section of\n  the library API documentation for details.\n* New functions DGifSavedExtensionToGCB() and EGifGCBToSavedExtension()\n  make it easy to read and edit GIF89 graphics control blocks in saved images.\n\nNamespacing\n~~~~~~~~~~~\n",
                      "markdown": "`  EGifPutExtensionTrailer().  See the Compatibility section of\n  the library API documentation for details.\n* New functions DGifSavedExtensionToGCB() and EGifGCBToSavedExtension()\n  make it easy to read and edit GIF89 graphics control blocks in saved images.\n\nNamespacing\n~~~~~~~~~~~\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 64,
                  "endLine": 370,
                  "snippet": {
                    "text": "\nCode Fixes\n----------\n* In 5.0.0 the private gif89 bit wasn't being guaranteed cleared at\n  the beginning of EGifGetGifVersion(); this occasionally led to an\n  incorrect version prefix being issued dependent on the state of\n  malloced memory.\n* An EGifSetGifVersion() function taking a GifFile argument has been \n",
                    "rendered": {
                      "text": "\nCode Fixes\n----------\n* In 5.0.0 the private gif89 bit wasn't being guaranteed cleared at\n  the beginning of EGifGetGifVersion(); this occasionally led to an\n  incorrect version prefix being issued dependent on the state of\n  malloced memory.\n* An EGifSetGifVersion() function taking a GifFile argument has been \n",
                      "markdown": "`\nCode Fixes\n----------\n* In 5.0.0 the private gif89 bit wasn't being guaranteed cleared at\n  the beginning of EGifGetGifVersion(); this occasionally led to an\n  incorrect version prefix being issued dependent on the state of\n  malloced memory.\n* An EGifSetGifVersion() function taking a GifFile argument has been \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 92,
                  "endLine": 79,
                  "endColumn": 96,
                  "snippet": {
                    "text": "\n* Address SF issue #166: a read zero page leads segment fault in getarg.c and memory leaks in gif2rgb.c and gifmalloc.c\n\n* Address SF issue #167: Heap-Buffer Overflow during Image Saving in DumpScreen2RGB Function at Line 321 of gif2rgb.c\n\nVersion 5.2.1\n==============\n",
                    "rendered": {
                      "text": "\n* Address SF issue #166: a read zero page leads segment fault in getarg.c and memory leaks in gif2rgb.c and gifmalloc.c\n\n* Address SF issue #167: Heap-Buffer Overflow during Image Saving in DumpScreen2RGB Function at Line 321 of gif2rgb.c\n\nVersion 5.2.1\n==============\n",
                      "markdown": "`\n* Address SF issue #166: a read zero page leads segment fault in getarg.c and memory leaks in gif2rgb.c and gifmalloc.c\n\n* Address SF issue #167: Heap-Buffer Overflow during Image Saving in DumpScreen2RGB Function at Line 321 of gif2rgb.c\n\nVersion 5.2.1\n==============\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 21,
                  "endLine": 833,
                  "endColumn": 29,
                  "snippet": {
                    "text": "* The util Makefile for UNIX has been improved.  It now uses the cc/gcc -s\n  option rather than strip(1).  There are now separate install productions,\n  so you can test new versions in util before installation for production\n  (the top-level make script still does an install).\n\nVersion 1.2\n===========\n",
                    "rendered": {
                      "text": "* The util Makefile for UNIX has been improved.  It now uses the cc/gcc -s\n  option rather than strip(1).  There are now separate install productions,\n  so you can test new versions in util before installation for production\n  (the top-level make script still does an install).\n\nVersion 1.2\n===========\n",
                      "markdown": "`* The util Makefile for UNIX has been improved.  It now uses the cc/gcc -s\n  option rather than strip(1).  There are now separate install productions,\n  so you can test new versions in util before installation for production\n  (the top-level make script still does an install).\n\nVersion 1.2\n===========\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 17,
                  "endLine": 737,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  LZW-compressed gifs.  This is actually the major motivating factor behind\n  libungif; to provide third-party distributors a means to provide a gif\n  library without the patented LZW encoder.\n* A new configure script to make compilation of the library on multiple\n  platforms easier.  The package should now build shared libraries on all\n  platforms supported by GNU libtool.\n* Removed the getarg functions from libgif.  These were not part of the\n",
                    "rendered": {
                      "text": "  LZW-compressed gifs.  This is actually the major motivating factor behind\n  libungif; to provide third-party distributors a means to provide a gif\n  library without the patented LZW encoder.\n* A new configure script to make compilation of the library on multiple\n  platforms easier.  The package should now build shared libraries on all\n  platforms supported by GNU libtool.\n* Removed the getarg functions from libgif.  These were not part of the\n",
                      "markdown": "`  LZW-compressed gifs.  This is actually the major motivating factor behind\n  libungif; to provide third-party distributors a means to provide a gif\n  library without the patented LZW encoder.\n* A new configure script to make compilation of the library on multiple\n  platforms easier.  The package should now build shared libraries on all\n  platforms supported by GNU libtool.\n* Removed the getarg functions from libgif.  These were not part of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 682,
                  "startColumn": 10,
                  "endLine": 682,
                  "endColumn": 16,
                  "snippet": {
                    "text": "* The qprintf methods of the library are now deprecated.  Do not use \n  GifQuietPrint or GifQprintf.  These should have been pushed out into the\n  utility helper library instead of sitting around in the library proper at\n  the same time as the getarg functions were moved out.  Getting rid of these\n  will let us get rid of our dependence on stdarg.h/varargs.h (Which a Gif\n  reading library has no business requiring.)\n\n",
                    "rendered": {
                      "text": "* The qprintf methods of the library are now deprecated.  Do not use \n  GifQuietPrint or GifQprintf.  These should have been pushed out into the\n  utility helper library instead of sitting around in the library proper at\n  the same time as the getarg functions were moved out.  Getting rid of these\n  will let us get rid of our dependence on stdarg.h/varargs.h (Which a Gif\n  reading library has no business requiring.)\n\n",
                      "markdown": "`* The qprintf methods of the library are now deprecated.  Do not use \n  GifQuietPrint or GifQprintf.  These should have been pushed out into the\n  utility helper library instead of sitting around in the library proper at\n  the same time as the getarg functions were moved out.  Getting rid of these\n  will let us get rid of our dependence on stdarg.h/varargs.h (Which a Gif\n  reading library has no business requiring.)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 663,
                  "startColumn": 34,
                  "endLine": 663,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  instead.\n* Some Windows code from the old CVS repository now available in the windows\n  subdirectory.  I don't have a Windows environment to test and maintain this\n  but maybe someone out there will find it useful.  Caveat hacker.\n\nVersion 4.1.2\n=============\n",
                    "rendered": {
                      "text": "  instead.\n* Some Windows code from the old CVS repository now available in the windows\n  subdirectory.  I don't have a Windows environment to test and maintain this\n  but maybe someone out there will find it useful.  Caveat hacker.\n\nVersion 4.1.2\n=============\n",
                      "markdown": "`  instead.\n* Some Windows code from the old CVS repository now available in the windows\n  subdirectory.  I don't have a Windows environment to test and maintain this\n  but maybe someone out there will find it useful.  Caveat hacker.\n\nVersion 4.1.2\n=============\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 582,
                  "startColumn": 18,
                  "endLine": 582,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Testing\n-------\n* There is now a proper regression-test suite; run 'make' in tests/.\n  The old test-unx script is now tests/visual-check and can be run \n  occasionally for a check with the Mark One Eyeball.\n\nDocumentation\n",
                    "rendered": {
                      "text": "Testing\n-------\n* There is now a proper regression-test suite; run 'make' in tests/.\n  The old test-unx script is now tests/visual-check and can be run \n  occasionally for a check with the Mark One Eyeball.\n\nDocumentation\n",
                      "markdown": "`Testing\n-------\n* There is now a proper regression-test suite; run 'make' in tests/.\n  The old test-unx script is now tests/visual-check and can be run \n  occasionally for a check with the Mark One Eyeball.\n\nDocumentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 59,
                  "endLine": 530,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\nNew API Features\n----------------\n* The default GIF version to write is now computed at write time from\n  the types of an image's extension blocks, but can be overridden with \n  EGifSetGifVersion().\n* EGifSpew() is now thread-safe. \n",
                    "rendered": {
                      "text": "\nNew API Features\n----------------\n* The default GIF version to write is now computed at write time from\n  the types of an image's extension blocks, but can be overridden with \n  EGifSetGifVersion().\n* EGifSpew() is now thread-safe. \n",
                      "markdown": "`\nNew API Features\n----------------\n* The default GIF version to write is now computed at write time from\n  the types of an image's extension blocks, but can be overridden with \n  EGifSetGifVersion().\n* EGifSpew() is now thread-safe. \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 32,
                  "endLine": 440,
                  "endColumn": 38,
                  "snippet": {
                    "text": "Other changes\n~~~~~~~~~~~~~\n* DGifSlurp() and EGifSpew() now read and write interlaced images properly.\n* The amazingly obscure colormap sort flag and pixel aspect ratio\n  features of GIF are now read and preserved, for whatever good that\n  may do.\n* Six undocumented functions have been renamed; five of these take additional\n",
                    "rendered": {
                      "text": "Other changes\n~~~~~~~~~~~~~\n* DGifSlurp() and EGifSpew() now read and write interlaced images properly.\n* The amazingly obscure colormap sort flag and pixel aspect ratio\n  features of GIF are now read and preserved, for whatever good that\n  may do.\n* Six undocumented functions have been renamed; five of these take additional\n",
                      "markdown": "`Other changes\n~~~~~~~~~~~~~\n* DGifSlurp() and EGifSpew() now read and write interlaced images properly.\n* The amazingly obscure colormap sort flag and pixel aspect ratio\n  features of GIF are now read and preserved, for whatever good that\n  may do.\n* Six undocumented functions have been renamed; five of these take additional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 36,
                  "endLine": 328,
                  "endColumn": 44,
                  "snippet": {
                    "text": "Version 5.0.5\n=============\n\nSet the error return properly when a screen descriptor read fails.\nFixes for some minor API documentation bugs. Some internal manual\npages are not to be installed.\n\n",
                    "rendered": {
                      "text": "Version 5.0.5\n=============\n\nSet the error return properly when a screen descriptor read fails.\nFixes for some minor API documentation bugs. Some internal manual\npages are not to be installed.\n\n",
                      "markdown": "`Version 5.0.5\n=============\n\nSet the error return properly when a screen descriptor read fails.\nFixes for some minor API documentation bugs. Some internal manual\npages are not to be installed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 57,
                  "endLine": 53,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n* Address SF issue #148: heap Out of Bound Read in gif2rgb.c:298 DumpScreen2RGB\n\n* Declared no-info on SF issue #150: There is a denial of service vulnerability in GIFLIB 5.2.1\n\n* Declared Won't-fix on SF issue 149: Out of source builds no longer possible\n\n",
                    "rendered": {
                      "text": "\n* Address SF issue #148: heap Out of Bound Read in gif2rgb.c:298 DumpScreen2RGB\n\n* Declared no-info on SF issue #150: There is a denial of service vulnerability in GIFLIB 5.2.1\n\n* Declared Won't-fix on SF issue 149: Out of source builds no longer possible\n\n",
                      "markdown": "`\n* Address SF issue #148: heap Out of Bound Read in gif2rgb.c:298 DumpScreen2RGB\n\n* Declared no-info on SF issue #150: There is a denial of service vulnerability in GIFLIB 5.2.1\n\n* Declared Won't-fix on SF issue 149: Out of source builds no longer possible\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 49,
                  "endLine": 25,
                  "endColumn": 57,
                  "snippet": {
                    "text": "apply point fixes that have been accumulating since 5.2.1\n\nThere are a few unresolved (but minor) memory leaks related to design\nissues in the API that still need to be resolved. Expect those fixes\nin the next release.\n\nCode Fixes\n",
                    "rendered": {
                      "text": "apply point fixes that have been accumulating since 5.2.1\n\nThere are a few unresolved (but minor) memory leaks related to design\nissues in the API that still need to be resolved. Expect those fixes\nin the next release.\n\nCode Fixes\n",
                      "markdown": "`apply point fixes that have been accumulating since 5.2.1\n\nThere are a few unresolved (but minor) memory leaks related to design\nissues in the API that still need to be resolved. Expect those fixes\nin the next release.\n\nCode Fixes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/NEWS"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 10,
                  "endLine": 4,
                  "snippet": {
                    "text": "\t\t\tGIFLIB NEWS\n\nRepository head\n===============\n\nCode Fixes\n----------\n",
                    "rendered": {
                      "text": "\t\t\tGIFLIB NEWS\n\nRepository head\n===============\n\nCode Fixes\n----------\n",
                      "markdown": "`\t\t\tGIFLIB NEWS\n\nRepository head\n===============\n\nCode Fixes\n----------\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/index.html"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 8,
                  "snippet": {
                    "text": "<li><a href=\"bits_and_bytes.html\">Bits and Bytes</a> - first we look at the\nfile format that makes up a GIF file</li>\n<li><a href=\"lzw_image_data.html\">LZW Image Data</a> - a closer \nlook at how image data is compressed within a GIF file</li>\n<li><a href=\"animation_and_transparency.html\">Transparency and Animation</a> - \nhow some of the more advanced features of GIF files work</li>\n</ol>\n",
                    "rendered": {
                      "text": "<li><a href=\"bits_and_bytes.html\">Bits and Bytes</a> - first we look at the\nfile format that makes up a GIF file</li>\n<li><a href=\"lzw_image_data.html\">LZW Image Data</a> - a closer \nlook at how image data is compressed within a GIF file</li>\n<li><a href=\"animation_and_transparency.html\">Transparency and Animation</a> - \nhow some of the more advanced features of GIF files work</li>\n</ol>\n",
                      "markdown": "`<li><a href=\"bits_and_bytes.html\">Bits and Bytes</a> - first we look at the\nfile format that makes up a GIF file</li>\n<li><a href=\"lzw_image_data.html\">LZW Image Data</a> - a closer \nlook at how image data is compressed within a GIF file</li>\n<li><a href=\"animation_and_transparency.html\">Transparency and Animation</a> - \nhow some of the more advanced features of GIF files work</li>\n</ol>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/index.html"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 68,
                  "endLine": 24,
                  "endColumn": 72,
                  "snippet": {
                    "text": "<p>The explanation is in three parts:<p>\n\n<ol>\n<li><a href=\"bits_and_bytes.html\">Bits and Bytes</a> - first we look at the\nfile format that makes up a GIF file</li>\n<li><a href=\"lzw_image_data.html\">LZW Image Data</a> - a closer \nlook at how image data is compressed within a GIF file</li>\n",
                    "rendered": {
                      "text": "<p>The explanation is in three parts:<p>\n\n<ol>\n<li><a href=\"bits_and_bytes.html\">Bits and Bytes</a> - first we look at the\nfile format that makes up a GIF file</li>\n<li><a href=\"lzw_image_data.html\">LZW Image Data</a> - a closer \nlook at how image data is compressed within a GIF file</li>\n",
                      "markdown": "`<p>The explanation is in three parts:<p>\n\n<ol>\n<li><a href=\"bits_and_bytes.html\">Bits and Bytes</a> - first we look at the\nfile format that makes up a GIF file</li>\n<li><a href=\"lzw_image_data.html\">LZW Image Data</a> - a closer \nlook at how image data is compressed within a GIF file</li>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 41,
                  "endLine": 423,
                  "endColumn": 45,
                  "snippet": {
                    "text": "reduce annoying visual flicker. The effect of interlacing on a display\nis that the first pass of appears immediately, displaying the graphic\nas a first as a blur and then sharpenining it up as later passes fill\nin lines. That allows the human viewer to at least get an idea of\nwhat's coming up rather than waiting for the entire image to be\npainted, line by line. <a\nhref=\"http://webtutor.tamu.edu/lesson6/interlace.html\">See an\n",
                    "rendered": {
                      "text": "reduce annoying visual flicker. The effect of interlacing on a display\nis that the first pass of appears immediately, displaying the graphic\nas a first as a blur and then sharpenining it up as later passes fill\nin lines. That allows the human viewer to at least get an idea of\nwhat's coming up rather than waiting for the entire image to be\npainted, line by line. <a\nhref=\"http://webtutor.tamu.edu/lesson6/interlace.html\">See an\n",
                      "markdown": "`reduce annoying visual flicker. The effect of interlacing on a display\nis that the first pass of appears immediately, displaying the graphic\nas a first as a blur and then sharpenining it up as later passes fill\nin lines. That allows the human viewer to at least get an idea of\nwhat's coming up rather than waiting for the entire image to be\npainted, line by line. <a\nhref=\"http://webtutor.tamu.edu/lesson6/interlace.html\">See an\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 21,
                  "endLine": 408,
                  "endColumn": 25,
                  "snippet": {
                    "text": "<p>Next, this block specifies the <strong>image width</strong> and\n<strong>image height</strong>. Each of these values is in the\ntwo-byte, unsigned little-endian format. Our sample image indicates\nthat the image starts at (0,0) and is 10 pixels wide by 10 pixels\ntall. (This image does take up the whole canvas size.)</p>\n\n<p>The last byte is another packed field. In our sample file this byte is 0 so\n",
                    "rendered": {
                      "text": "<p>Next, this block specifies the <strong>image width</strong> and\n<strong>image height</strong>. Each of these values is in the\ntwo-byte, unsigned little-endian format. Our sample image indicates\nthat the image starts at (0,0) and is 10 pixels wide by 10 pixels\ntall. (This image does take up the whole canvas size.)</p>\n\n<p>The last byte is another packed field. In our sample file this byte is 0 so\n",
                      "markdown": "`<p>Next, this block specifies the <strong>image width</strong> and\n<strong>image height</strong>. Each of these values is in the\ntwo-byte, unsigned little-endian format. Our sample image indicates\nthat the image starts at (0,0) and is 10 pixels wide by 10 pixels\ntall. (This image does take up the whole canvas size.)</p>\n\n<p>The last byte is another packed field. In our sample file this byte is 0 so\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 16,
                  "endLine": 367,
                  "endColumn": 25,
                  "snippet": {
                    "text": "class=\"byte\">00</span>.</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\nalt=\"GIF graphic control extension block layout\" style=\"border: 1px\nsolid black\" /></p>\n\t\n<h2><a name=\"image_descriptor_block\">Image Descriptor</a></h2>\n",
                    "rendered": {
                      "text": "class=\"byte\">00</span>.</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\nalt=\"GIF graphic control extension block layout\" style=\"border: 1px\nsolid black\" /></p>\n\t\n<h2><a name=\"image_descriptor_block\">Image Descriptor</a></h2>\n",
                      "markdown": "`class=\"byte\">00</span>.</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\nalt=\"GIF graphic control extension block layout\" style=\"border: 1px\nsolid black\" /></p>\n\t\n<h2><a name=\"image_descriptor_block\">Image Descriptor</a></h2>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 23,
                  "endLine": 355,
                  "endColumn": 32,
                  "snippet": {
                    "text": "<em>extension</em> blocks begin with <span\nclass=\"byte\">21</span>. Next is the <strong>graphic control\nlabel</strong>, <span class=\"byte\">F9</span>, which is the value that\nflags this as a graphic control extension. Third up is the total\n<strong>block size</strong> in bytes. Next is a packed field. Bits 1-3\nare reserved for future use. Bits 4-6 indicate <strong>disposal\nmethod</strong>. The penultimate bit is the <strong>user input\n",
                    "rendered": {
                      "text": "<em>extension</em> blocks begin with <span\nclass=\"byte\">21</span>. Next is the <strong>graphic control\nlabel</strong>, <span class=\"byte\">F9</span>, which is the value that\nflags this as a graphic control extension. Third up is the total\n<strong>block size</strong> in bytes. Next is a packed field. Bits 1-3\nare reserved for future use. Bits 4-6 indicate <strong>disposal\nmethod</strong>. The penultimate bit is the <strong>user input\n",
                      "markdown": "`<em>extension</em> blocks begin with <span\nclass=\"byte\">21</span>. Next is the <strong>graphic control\nlabel</strong>, <span class=\"byte\">F9</span>, which is the value that\nflags this as a graphic control extension. Third up is the total\n<strong>block size</strong> in bytes. Next is a packed field. Bits 1-3\nare reserved for future use. Bits 4-6 indicate <strong>disposal\nmethod</strong>. The penultimate bit is the <strong>user input\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 51,
                  "endLine": 354,
                  "snippet": {
                    "text": "\n<p>The first byte is the <strong>extension introducer</strong>. All\n<em>extension</em> blocks begin with <span\nclass=\"byte\">21</span>. Next is the <strong>graphic control\nlabel</strong>, <span class=\"byte\">F9</span>, which is the value that\nflags this as a graphic control extension. Third up is the total\n<strong>block size</strong> in bytes. Next is a packed field. Bits 1-3\nare reserved for future use. Bits 4-6 indicate <strong>disposal\n",
                    "rendered": {
                      "text": "\n<p>The first byte is the <strong>extension introducer</strong>. All\n<em>extension</em> blocks begin with <span\nclass=\"byte\">21</span>. Next is the <strong>graphic control\nlabel</strong>, <span class=\"byte\">F9</span>, which is the value that\nflags this as a graphic control extension. Third up is the total\n<strong>block size</strong> in bytes. Next is a packed field. Bits 1-3\nare reserved for future use. Bits 4-6 indicate <strong>disposal\n",
                      "markdown": "`\n<p>The first byte is the <strong>extension introducer</strong>. All\n<em>extension</em> blocks begin with <span\nclass=\"byte\">21</span>. Next is the <strong>graphic control\nlabel</strong>, <span class=\"byte\">F9</span>, which is the value that\nflags this as a graphic control extension. Third up is the total\n<strong>block size</strong> in bytes. Next is a packed field. Bits 1-3\nare reserved for future use. Bits 4-6 indicate <strong>disposal\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 12,
                  "endLine": 346,
                  "endColumn": 21,
                  "snippet": {
                    "text": "</p>\n\n<p>Graphic control extension blocks are used to specify transparency\nsettings and control animations. They are an optional GIF89 extension.\nThe semantics of this extension will be described in detail in a later section\n(see <a href=\"animation_and_transparency.html\">Transparency and Animation</a>); \nfor completeness we'll describe the data fields here.</p>\n",
                    "rendered": {
                      "text": "</p>\n\n<p>Graphic control extension blocks are used to specify transparency\nsettings and control animations. They are an optional GIF89 extension.\nThe semantics of this extension will be described in detail in a later section\n(see <a href=\"animation_and_transparency.html\">Transparency and Animation</a>); \nfor completeness we'll describe the data fields here.</p>\n",
                      "markdown": "`</p>\n\n<p>Graphic control extension blocks are used to specify transparency\nsettings and control animations. They are an optional GIF89 extension.\nThe semantics of this extension will be described in detail in a later section\n(see <a href=\"animation_and_transparency.html\">Transparency and Animation</a>); \nfor completeness we'll describe the data fields here.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 10,
                  "endLine": 345,
                  "endColumn": 19,
                  "snippet": {
                    "text": "<span class=\"byte gif_graphic\"> 00 </span>\n</p>\n\n<p>Graphic control extension blocks are used to specify transparency\nsettings and control animations. They are an optional GIF89 extension.\nThe semantics of this extension will be described in detail in a later section\n(see <a href=\"animation_and_transparency.html\">Transparency and Animation</a>); \n",
                    "rendered": {
                      "text": "<span class=\"byte gif_graphic\"> 00 </span>\n</p>\n\n<p>Graphic control extension blocks are used to specify transparency\nsettings and control animations. They are an optional GIF89 extension.\nThe semantics of this extension will be described in detail in a later section\n(see <a href=\"animation_and_transparency.html\">Transparency and Animation</a>); \n",
                      "markdown": "`<span class=\"byte gif_graphic\"> 00 </span>\n</p>\n\n<p>Graphic control extension blocks are used to specify transparency\nsettings and control animations. They are an optional GIF89 extension.\nThe semantics of this extension will be described in detail in a later section\n(see <a href=\"animation_and_transparency.html\">Transparency and Animation</a>); \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 55,
                  "endLine": 332,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\n<p style=\"text-align:center\"><img src=\"global_color_table.gif\" alt=\"GIF global color table block layout\" style=\"border: 1px solid black\" /></p>\t\n\n<h2><a name=\"graphics_control_extension_block\">Graphics Control Extension</a></h2>\n\n<p>From the sample file: \n<span class=\"byte gif_graphic\"> 21</span>\n",
                    "rendered": {
                      "text": "\n<p style=\"text-align:center\"><img src=\"global_color_table.gif\" alt=\"GIF global color table block layout\" style=\"border: 1px solid black\" /></p>\t\n\n<h2><a name=\"graphics_control_extension_block\">Graphics Control Extension</a></h2>\n\n<p>From the sample file: \n<span class=\"byte gif_graphic\"> 21</span>\n",
                      "markdown": "`\n<p style=\"text-align:center\"><img src=\"global_color_table.gif\" alt=\"GIF global color table block layout\" style=\"border: 1px solid black\" /></p>\t\n\n<h2><a name=\"graphics_control_extension_block\">Graphics Control Extension</a></h2>\n\n<p>From the sample file: \n<span class=\"byte gif_graphic\"> 21</span>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 42,
                  "endLine": 317,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n<p>Our sample file has a global color table size of 1. This means it\nholds 2^(1+1)=2^2=4 colors.  We can see that it takes up 12, (3*4),\nbytes as expected. We read the bytes three at a time to get each of\nthe colors. The first color is #FFFFFF (white). This value is given an\nindex of 0.  The second color is #FF0000 (red). The color with an\nindex value of 2 is #0000FF (blue).  The last color is #000000\n",
                    "rendered": {
                      "text": "\n<p>Our sample file has a global color table size of 1. This means it\nholds 2^(1+1)=2^2=4 colors.  We can see that it takes up 12, (3*4),\nbytes as expected. We read the bytes three at a time to get each of\nthe colors. The first color is #FFFFFF (white). This value is given an\nindex of 0.  The second color is #FF0000 (red). The color with an\nindex value of 2 is #0000FF (blue).  The last color is #000000\n",
                      "markdown": "`\n<p>Our sample file has a global color table size of 1. This means it\nholds 2^(1+1)=2^2=4 colors.  We can see that it takes up 12, (3*4),\nbytes as expected. We read the bytes three at a time to get each of\nthe colors. The first color is #FFFFFF (white). This value is given an\nindex of 0.  The second color is #FF0000 (red). The color with an\nindex value of 2 is #0000FF (blue).  The last color is #000000\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 18,
                  "endLine": 294,
                  "endColumn": 22,
                  "snippet": {
                    "text": "each color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\n",
                    "rendered": {
                      "text": "each color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\n",
                      "markdown": "`each color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 59,
                  "endLine": 294,
                  "snippet": {
                    "text": "of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\n",
                    "rendered": {
                      "text": "of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\n",
                      "markdown": "`of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 39,
                  "endLine": 293,
                  "endColumn": 43,
                  "snippet": {
                    "text": "of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n",
                    "rendered": {
                      "text": "of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n",
                      "markdown": "`of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 60,
                  "endLine": 245,
                  "endColumn": 64,
                  "snippet": {
                    "text": "decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\n",
                    "rendered": {
                      "text": "decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\n",
                      "markdown": "`decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 4,
                  "endLine": 243,
                  "endColumn": 8,
                  "snippet": {
                    "text": "order of &quot;decreasing importance,&quot; which typically means\n&quot;decreasing frequency&quot; in the image. This can help the image\ndecoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\n",
                    "rendered": {
                      "text": "order of &quot;decreasing importance,&quot; which typically means\n&quot;decreasing frequency&quot; in the image. This can help the image\ndecoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\n",
                      "markdown": "`order of &quot;decreasing importance,&quot; which typically means\n&quot;decreasing frequency&quot; in the image. This can help the image\ndecoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 37,
                  "endLine": 212,
                  "endColumn": 41,
                  "snippet": {
                    "text": "<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n<p style=\"text-align:center\"><img src=\"logical_screen_desc_block.gif\" alt=\"GIF logical screen descriptor block layout\" style=\"border: 1px solid black\" /></p>\n\n",
                    "rendered": {
                      "text": "<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n<p style=\"text-align:center\"><img src=\"logical_screen_desc_block.gif\" alt=\"GIF logical screen descriptor block layout\" style=\"border: 1px solid black\" /></p>\n\n",
                      "markdown": "`<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n<p style=\"text-align:center\"><img src=\"logical_screen_desc_block.gif\" alt=\"GIF logical screen descriptor block layout\" style=\"border: 1px solid black\" /></p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 51,
                  "endLine": 210,
                  "endColumn": 59,
                  "snippet": {
                    "text": "and allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n",
                    "rendered": {
                      "text": "and allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n",
                      "markdown": "`and allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 49,
                  "endLine": 141,
                  "snippet": {
                    "text": "href=\"#header_block\">header</a>, <a\nhref=\"#logical_screen_descriptor_block\">logical screen descriptor</a>,\n<a href=\"#global_color_table_block\">global color table</a>, <a\nhref=\"#graphics_control_extension_block\">graphics control\nextension</a>, <a href=\"#image_descriptor_block\">image descriptor</a>,\n<a href=\"#local_color_table_block\">local color table</a>, <a\nhref=\"#image_data_block\">image data</a>, <a\nhref=\"#plain_text_extension_block\">plain text extension</a>, <a\n",
                    "rendered": {
                      "text": "href=\"#header_block\">header</a>, <a\nhref=\"#logical_screen_descriptor_block\">logical screen descriptor</a>,\n<a href=\"#global_color_table_block\">global color table</a>, <a\nhref=\"#graphics_control_extension_block\">graphics control\nextension</a>, <a href=\"#image_descriptor_block\">image descriptor</a>,\n<a href=\"#local_color_table_block\">local color table</a>, <a\nhref=\"#image_data_block\">image data</a>, <a\nhref=\"#plain_text_extension_block\">plain text extension</a>, <a\n",
                      "markdown": "`href=\"#header_block\">header</a>, <a\nhref=\"#logical_screen_descriptor_block\">logical screen descriptor</a>,\n<a href=\"#global_color_table_block\">global color table</a>, <a\nhref=\"#graphics_control_extension_block\">graphics control\nextension</a>, <a href=\"#image_descriptor_block\">image descriptor</a>,\n<a href=\"#local_color_table_block\">local color table</a>, <a\nhref=\"#image_data_block\">image data</a>, <a\nhref=\"#plain_text_extension_block\">plain text extension</a>, <a\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 66,
                  "endLine": 38,
                  "snippet": {
                    "text": "</div>\n\n<p>The authority on the content of GIFs is the <a\nhref=\"../gif89.txt\">GIF89a specification</a>. Originally developed at\nCompuServe in the late 1980s, it is now a W3C standard.</p>\n\n<p>A GIF file is made up of a sequence of data blocks.  The first two\nblocks are fixed length and fixed format. Later ones are variable\n",
                    "rendered": {
                      "text": "</div>\n\n<p>The authority on the content of GIFs is the <a\nhref=\"../gif89.txt\">GIF89a specification</a>. Originally developed at\nCompuServe in the late 1980s, it is now a W3C standard.</p>\n\n<p>A GIF file is made up of a sequence of data blocks.  The first two\nblocks are fixed length and fixed format. Later ones are variable\n",
                      "markdown": "`</div>\n\n<p>The authority on the content of GIFs is the <a\nhref=\"../gif89.txt\">GIF89a specification</a>. Originally developed at\nCompuServe in the late 1980s, it is now a W3C standard.</p>\n\n<p>A GIF file is made up of a sequence of data blocks.  The first two\nblocks are fixed length and fixed format. Later ones are variable\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 33,
                  "endLine": 587,
                  "endColumn": 41,
                  "snippet": {
                    "text": "href=\"animation_and_transparency.html\">animation</a>.</p>\n\n<p>The Netscape 2.0 looping block must appear immediately after the\nglobal color table of the logical screen descriptor.  It is\n19 bytes long.\n\n<pre>\n",
                    "rendered": {
                      "text": "href=\"animation_and_transparency.html\">animation</a>.</p>\n\n<p>The Netscape 2.0 looping block must appear immediately after the\nglobal color table of the logical screen descriptor.  It is\n19 bytes long.\n\n<pre>\n",
                      "markdown": "`href=\"animation_and_transparency.html\">animation</a>.</p>\n\n<p>The Netscape 2.0 looping block must appear immediately after the\nglobal color table of the logical screen descriptor.  It is\n19 bytes long.\n\n<pre>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 44,
                  "endLine": 419,
                  "endColumn": 52,
                  "snippet": {
                    "text": "color table follows.)</p>\n\n<p>The second bit is the <strong>interlace flag</strong>. Interlacing\nchanges the way images are rendered onto the screen in a way that may\nreduce annoying visual flicker. The effect of interlacing on a display\nis that the first pass of appears immediately, displaying the graphic\nas a first as a blur and then sharpenining it up as later passes fill\n",
                    "rendered": {
                      "text": "color table follows.)</p>\n\n<p>The second bit is the <strong>interlace flag</strong>. Interlacing\nchanges the way images are rendered onto the screen in a way that may\nreduce annoying visual flicker. The effect of interlacing on a display\nis that the first pass of appears immediately, displaying the graphic\nas a first as a blur and then sharpenining it up as later passes fill\n",
                      "markdown": "`color table follows.)</p>\n\n<p>The second bit is the <strong>interlace flag</strong>. Interlacing\nchanges the way images are rendered onto the screen in a way that may\nreduce annoying visual flicker. The effect of interlacing on a display\nis that the first pass of appears immediately, displaying the graphic\nas a first as a blur and then sharpenining it up as later passes fill\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 401,
                  "startColumn": 17,
                  "endLine": 401,
                  "endColumn": 22,
                  "snippet": {
                    "text": "<p>An image in the stream may not necessarily take up the entire\ncanvas size defined by the logical screen descriptor. Therefore, the\nimage descriptor specifies the <strong>image left position</strong>\nand <strong>image top position</strong> of where the image should\nbegin on the canvas. Both these fields are usually ignored by modern\nviewers and browsers.</p>\n\n",
                    "rendered": {
                      "text": "<p>An image in the stream may not necessarily take up the entire\ncanvas size defined by the logical screen descriptor. Therefore, the\nimage descriptor specifies the <strong>image left position</strong>\nand <strong>image top position</strong> of where the image should\nbegin on the canvas. Both these fields are usually ignored by modern\nviewers and browsers.</p>\n\n",
                      "markdown": "`<p>An image in the stream may not necessarily take up the entire\ncanvas size defined by the logical screen descriptor. Therefore, the\nimage descriptor specifies the <strong>image left position</strong>\nand <strong>image top position</strong> of where the image should\nbegin on the canvas. Both these fields are usually ignored by modern\nviewers and browsers.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 34,
                  "endLine": 399,
                  "endColumn": 42,
                  "snippet": {
                    "text": "image.</p>\n\n<p>An image in the stream may not necessarily take up the entire\ncanvas size defined by the logical screen descriptor. Therefore, the\nimage descriptor specifies the <strong>image left position</strong>\nand <strong>image top position</strong> of where the image should\nbegin on the canvas. Both these fields are usually ignored by modern\n",
                    "rendered": {
                      "text": "image.</p>\n\n<p>An image in the stream may not necessarily take up the entire\ncanvas size defined by the logical screen descriptor. Therefore, the\nimage descriptor specifies the <strong>image left position</strong>\nand <strong>image top position</strong> of where the image should\nbegin on the canvas. Both these fields are usually ignored by modern\n",
                      "markdown": "`image.</p>\n\n<p>An image in the stream may not necessarily take up the entire\ncanvas size defined by the logical screen descriptor. Therefore, the\nimage descriptor specifies the <strong>image left position</strong>\nand <strong>image top position</strong> of where the image should\nbegin on the canvas. Both these fields are usually ignored by modern\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 37,
                  "endLine": 326,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n<p>Note that this block is labeled as &quot;optional.&quot; Not every\nGIF has to specify a global color table. However, if the global color\ntable flag is set to 1 in the logical screen descriptor block, the\ncolor table is then required to immediately follow that block.\n</p>\n\n",
                    "rendered": {
                      "text": "\n<p>Note that this block is labeled as &quot;optional.&quot; Not every\nGIF has to specify a global color table. However, if the global color\ntable flag is set to 1 in the logical screen descriptor block, the\ncolor table is then required to immediately follow that block.\n</p>\n\n",
                      "markdown": "`\n<p>Note that this block is labeled as &quot;optional.&quot; Not every\nGIF has to specify a global color table. However, if the global color\ntable flag is set to 1 in the logical screen descriptor block, the\ncolor table is then required to immediately follow that block.\n</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 47,
                  "endLine": 317,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n<p>Our sample file has a global color table size of 1. This means it\nholds 2^(1+1)=2^2=4 colors.  We can see that it takes up 12, (3*4),\nbytes as expected. We read the bytes three at a time to get each of\nthe colors. The first color is #FFFFFF (white). This value is given an\nindex of 0.  The second color is #FF0000 (red). The color with an\nindex value of 2 is #0000FF (blue).  The last color is #000000\n",
                    "rendered": {
                      "text": "\n<p>Our sample file has a global color table size of 1. This means it\nholds 2^(1+1)=2^2=4 colors.  We can see that it takes up 12, (3*4),\nbytes as expected. We read the bytes three at a time to get each of\nthe colors. The first color is #FFFFFF (white). This value is given an\nindex of 0.  The second color is #FF0000 (red). The color with an\nindex value of 2 is #0000FF (blue).  The last color is #000000\n",
                      "markdown": "`\n<p>Our sample file has a global color table size of 1. This means it\nholds 2^(1+1)=2^2=4 colors.  We can see that it takes up 12, (3*4),\nbytes as expected. We read the bytes three at a time to get each of\nthe colors. The first color is #FFFFFF (white). This value is given an\nindex of 0.  The second color is #FF0000 (red). The color with an\nindex value of 2 is #0000FF (blue).  The last color is #000000\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 7,
                  "endLine": 298,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\nlogical screen descriptor. The table will take up 3*2^(N+1) bytes in\nthe stream.</p>\n\n<div style=\"text-align:center\">\n",
                    "rendered": {
                      "text": "\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\nlogical screen descriptor. The table will take up 3*2^(N+1) bytes in\nthe stream.</p>\n\n<div style=\"text-align:center\">\n",
                      "markdown": "`\n<p>As previously noted, the length of the global color table is\n2^(N+1) entries where N is the value of the color depth field in the\nlogical screen descriptor. The table will take up 3*2^(N+1) bytes in\nthe stream.</p>\n\n<div style=\"text-align:center\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 35,
                  "endLine": 293,
                  "endColumn": 40,
                  "snippet": {
                    "text": "of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n",
                    "rendered": {
                      "text": "of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n",
                      "markdown": "`of RGB (Red-Green-Blue) color component intensities, three bytes for\neach color, with intensities ranging from 0 (least) to 255 (most). The\ncolor (0,0,0) is deepest black, the color (255,255,255) brightest\nwhite. The other extreme colors are red at (255,0,0), green at\n(0,255,0) and blue at (0,0,255).</p>\n\n<p>As previously noted, the length of the global color table is\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 31,
                  "endLine": 261,
                  "endColumn": 39,
                  "snippet": {
                    "text": "by an image. GIFLIB supports reading and setting this byte, but modern\nviewers and browsers generally have no use for it.</p>\n\n<p>The last byte of the logical screen descriptor is the <strong>pixel\naspect ratio</strong>. Modern viewers don't use this.  Until 5.0,\nGIFLIB ignored this flag on input and zeroed it on output; now it is\nread and preserved if present. The GIF standard doesn't give a\n",
                    "rendered": {
                      "text": "by an image. GIFLIB supports reading and setting this byte, but modern\nviewers and browsers generally have no use for it.</p>\n\n<p>The last byte of the logical screen descriptor is the <strong>pixel\naspect ratio</strong>. Modern viewers don't use this.  Until 5.0,\nGIFLIB ignored this flag on input and zeroed it on output; now it is\nread and preserved if present. The GIF standard doesn't give a\n",
                      "markdown": "`by an image. GIFLIB supports reading and setting this byte, but modern\nviewers and browsers generally have no use for it.</p>\n\n<p>The last byte of the logical screen descriptor is the <strong>pixel\naspect ratio</strong>. Modern viewers don't use this.  Until 5.0,\nGIFLIB ignored this flag on input and zeroed it on output; now it is\nread and preserved if present. The GIF standard doesn't give a\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 67,
                  "endLine": 246,
                  "endColumn": 5,
                  "snippet": {
                    "text": "decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\nit on output; 5.0 and later versions read and preserve it.</p>\n",
                    "rendered": {
                      "text": "decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\nit on output; 5.0 and later versions read and preserve it.</p>\n",
                      "markdown": "`decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\nit on output; 5.0 and later versions read and preserve it.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 6,
                  "endLine": 245,
                  "endColumn": 12,
                  "snippet": {
                    "text": "decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\n",
                    "rendered": {
                      "text": "decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\n",
                      "markdown": "`decoder, but is not required. In the sample file this value has been\nleft at 0.</p>\n\n<p>The sort flag reflected the high cost of dual-port memory at the\ntime the GIF specification was written in the late 1980s.  That kind\nof limit disappeared in the mid-1990s, and modern GIF software ignores\nthis flag.  Until version 5.0, GIFLIB ignored it on input and zeroed\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 86,
                  "endLine": 214,
                  "endColumn": 94,
                  "snippet": {
                    "text": "<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n<p style=\"text-align:center\"><img src=\"logical_screen_desc_block.gif\" alt=\"GIF logical screen descriptor block layout\" style=\"border: 1px solid black\" /></p>\n\n<p>The first (most-significant) bit is the <strong>global color table\nflag</strong>. If it's 0, then there is no global color table. If it's\n",
                    "rendered": {
                      "text": "<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n<p style=\"text-align:center\"><img src=\"logical_screen_desc_block.gif\" alt=\"GIF logical screen descriptor block layout\" style=\"border: 1px solid black\" /></p>\n\n<p>The first (most-significant) bit is the <strong>global color table\nflag</strong>. If it's 0, then there is no global color table. If it's\n",
                      "markdown": "`<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n<p style=\"text-align:center\"><img src=\"logical_screen_desc_block.gif\" alt=\"GIF logical screen descriptor block layout\" style=\"border: 1px solid black\" /></p>\n\n<p>The first (most-significant) bit is the <strong>global color table\nflag</strong>. If it's 0, then there is no global color table. If it's\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 51,
                  "endLine": 210,
                  "endColumn": 59,
                  "snippet": {
                    "text": "and allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n",
                    "rendered": {
                      "text": "and allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n",
                      "markdown": "`and allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 66,
                  "endLine": 210,
                  "endColumn": 7,
                  "snippet": {
                    "text": "canvas width and height are mainly fossils. GIFLIB does extract them\nand allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n",
                    "rendered": {
                      "text": "canvas width and height are mainly fossils. GIFLIB does extract them\nand allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n",
                      "markdown": "`canvas width and height are mainly fossils. GIFLIB does extract them\nand allow you to set them, however.</p>\n\n<p>The next byte contains four fields of packed data, the \"logical\nscreen descriptor\". To understand these, we need to expand the byte\n<span class=\"byte\"> 91 </span> to binary as <span\nclass=\"byte\">10010001</span> and look at the fields inside it.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 14,
                  "endLine": 182,
                  "endColumn": 22,
                  "snippet": {
                    "text": "<p>From Sample File: <span class=\"byte gif_screen\"> 0A </span>\n<span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 0A </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 91 </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 00 </span></p>\n\n<p>The logical screen descriptor always immediately follows the\nheader. This block tells the decoder how much room this image will\ntake up. It is exactly seven bytes long. It starts with the\n<strong>canvas width</strong> and <strong>canvas height</strong>. \n",
                    "rendered": {
                      "text": "<p>From Sample File: <span class=\"byte gif_screen\"> 0A </span>\n<span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 0A </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 91 </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 00 </span></p>\n\n<p>The logical screen descriptor always immediately follows the\nheader. This block tells the decoder how much room this image will\ntake up. It is exactly seven bytes long. It starts with the\n<strong>canvas width</strong> and <strong>canvas height</strong>. \n",
                      "markdown": "`<p>From Sample File: <span class=\"byte gif_screen\"> 0A </span>\n<span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 0A </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 91 </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 00 </span></p>\n\n<p>The logical screen descriptor always immediately follows the\nheader. This block tells the decoder how much room this image will\ntake up. It is exactly seven bytes long. It starts with the\n<strong>canvas width</strong> and <strong>canvas height</strong>. \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 53,
                  "endLine": 178,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n<p style=\"text-align:center\"><img src=\"header_block.gif\" alt=\"GIF header block layout\" style=\"border: 1px solid black\" /></p>\n\n<h2><a name=\"logical_screen_descriptor_block\">Logical Screen Descriptor</a></h2>\n<p>From Sample File: <span class=\"byte gif_screen\"> 0A </span>\n<span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 0A </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 91 </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 00 </span></p>\n\n",
                    "rendered": {
                      "text": "\n<p style=\"text-align:center\"><img src=\"header_block.gif\" alt=\"GIF header block layout\" style=\"border: 1px solid black\" /></p>\n\n<h2><a name=\"logical_screen_descriptor_block\">Logical Screen Descriptor</a></h2>\n<p>From Sample File: <span class=\"byte gif_screen\"> 0A </span>\n<span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 0A </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 91 </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 00 </span></p>\n\n",
                      "markdown": "`\n<p style=\"text-align:center\"><img src=\"header_block.gif\" alt=\"GIF header block layout\" style=\"border: 1px solid black\" /></p>\n\n<h2><a name=\"logical_screen_descriptor_block\">Logical Screen Descriptor</a></h2>\n<p>From Sample File: <span class=\"byte gif_screen\"> 0A </span>\n<span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 0A </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 91 </span><span class=\"byte gif_screen\"> 00 </span><span class=\"byte gif_screen\"> 00 </span></p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/bits_and_bytes.html"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 47,
                  "endLine": 138,
                  "endColumn": 55,
                  "snippet": {
                    "text": "sample file. Later we'll provide samples of missing block types where\nappropriate. The different types of blocks include: <a\nhref=\"#header_block\">header</a>, <a\nhref=\"#logical_screen_descriptor_block\">logical screen descriptor</a>,\n<a href=\"#global_color_table_block\">global color table</a>, <a\nhref=\"#graphics_control_extension_block\">graphics control\nextension</a>, <a href=\"#image_descriptor_block\">image descriptor</a>,\n",
                    "rendered": {
                      "text": "sample file. Later we'll provide samples of missing block types where\nappropriate. The different types of blocks include: <a\nhref=\"#header_block\">header</a>, <a\nhref=\"#logical_screen_descriptor_block\">logical screen descriptor</a>,\n<a href=\"#global_color_table_block\">global color table</a>, <a\nhref=\"#graphics_control_extension_block\">graphics control\nextension</a>, <a href=\"#image_descriptor_block\">image descriptor</a>,\n",
                      "markdown": "`sample file. Later we'll provide samples of missing block types where\nappropriate. The different types of blocks include: <a\nhref=\"#header_block\">header</a>, <a\nhref=\"#logical_screen_descriptor_block\">logical screen descriptor</a>,\n<a href=\"#global_color_table_block\">global color table</a>, <a\nhref=\"#graphics_control_extension_block\">graphics control\nextension</a>, <a href=\"#image_descriptor_block\">image descriptor</a>,\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 4,
                  "endLine": 219,
                  "endColumn": 8,
                  "snippet": {
                    "text": "<sect1><title>Package Status</title>\n\n<para>GIFLIB's current maintainer is Eric S. Raymond.  You can find his home\npage at <ulink url=\"&homepage;\">&homepage;</ulink>.</para>\n\n<para>GIFLIB is not under active development, but bug fixes are being\naccepted.</para>\n",
                    "rendered": {
                      "text": "<sect1><title>Package Status</title>\n\n<para>GIFLIB's current maintainer is Eric S. Raymond.  You can find his home\npage at <ulink url=\"&homepage;\">&homepage;</ulink>.</para>\n\n<para>GIFLIB is not under active development, but bug fixes are being\naccepted.</para>\n",
                      "markdown": "`<sect1><title>Package Status</title>\n\n<para>GIFLIB's current maintainer is Eric S. Raymond.  You can find his home\npage at <ulink url=\"&homepage;\">&homepage;</ulink>.</para>\n\n<para>GIFLIB is not under active development, but bug fixes are being\naccepted.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 76,
                  "endLine": 64,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n<sect1><title>Utilities</title>\n\n<para>Here is a summary of the utilities in this package.  If you're looking\nat this page through a web browser, each utility name should be a\nhotlink to HTML documentation.</para>\n\n<para>Most utilities have a -v (verbose) option that will cause them to print\n",
                    "rendered": {
                      "text": "\n<sect1><title>Utilities</title>\n\n<para>Here is a summary of the utilities in this package.  If you're looking\nat this page through a web browser, each utility name should be a\nhotlink to HTML documentation.</para>\n\n<para>Most utilities have a -v (verbose) option that will cause them to print\n",
                      "markdown": "`\n<sect1><title>Utilities</title>\n\n<para>Here is a summary of the utilities in this package.  If you're looking\nat this page through a web browser, each utility name should be a\nhotlink to HTML documentation.</para>\n\n<para>Most utilities have a -v (verbose) option that will cause them to print\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 69,
                  "endLine": 52,
                  "snippet": {
                    "text": "<para>The library includes program-callable entry points for reading and writing\nGIF files, an 8x8 utility font for embedding text in GIFs, and an error\nhandler.  GIF manipulation can be done at a relatively low level by\nsequential I/O (which automatically does/undoes image compression) or at\na higher level by slurping an entire GIF into allocated core.</para>\n\n<para>This library speaks both GIF87a and GIF89.  The differences\nbetween GIF87 and GIF89 are minor: in the latter, the interpretation\n",
                    "rendered": {
                      "text": "<para>The library includes program-callable entry points for reading and writing\nGIF files, an 8x8 utility font for embedding text in GIFs, and an error\nhandler.  GIF manipulation can be done at a relatively low level by\nsequential I/O (which automatically does/undoes image compression) or at\na higher level by slurping an entire GIF into allocated core.</para>\n\n<para>This library speaks both GIF87a and GIF89.  The differences\nbetween GIF87 and GIF89 are minor: in the latter, the interpretation\n",
                      "markdown": "`<para>The library includes program-callable entry points for reading and writing\nGIF files, an 8x8 utility font for embedding text in GIFs, and an error\nhandler.  GIF manipulation can be done at a relatively low level by\nsequential I/O (which automatically does/undoes image compression) or at\na higher level by slurping an entire GIF into allocated core.</para>\n\n<para>This library speaks both GIF87a and GIF89.  The differences\nbetween GIF87 and GIF89 are minor: in the latter, the interpretation\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 38,
                  "endLine": 50,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n<para>The library includes program-callable entry points for reading and writing\nGIF files, an 8x8 utility font for embedding text in GIFs, and an error\nhandler.  GIF manipulation can be done at a relatively low level by\nsequential I/O (which automatically does/undoes image compression) or at\na higher level by slurping an entire GIF into allocated core.</para>\n\n",
                    "rendered": {
                      "text": "\n<para>The library includes program-callable entry points for reading and writing\nGIF files, an 8x8 utility font for embedding text in GIFs, and an error\nhandler.  GIF manipulation can be done at a relatively low level by\nsequential I/O (which automatically does/undoes image compression) or at\na higher level by slurping an entire GIF into allocated core.</para>\n\n",
                      "markdown": "`\n<para>The library includes program-callable entry points for reading and writing\nGIF files, an 8x8 utility font for embedding text in GIFs, and an error\nhandler.  GIF manipulation can be done at a relatively low level by\nsequential I/O (which automatically does/undoes image compression) or at\na higher level by slurping an entire GIF into allocated core.</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 62,
                  "endLine": 218,
                  "endColumn": 68,
                  "snippet": {
                    "text": "</sect1>\n<sect1><title>Package Status</title>\n\n<para>GIFLIB's current maintainer is Eric S. Raymond.  You can find his home\npage at <ulink url=\"&homepage;\">&homepage;</ulink>.</para>\n\n<para>GIFLIB is not under active development, but bug fixes are being\n",
                    "rendered": {
                      "text": "</sect1>\n<sect1><title>Package Status</title>\n\n<para>GIFLIB's current maintainer is Eric S. Raymond.  You can find his home\npage at <ulink url=\"&homepage;\">&homepage;</ulink>.</para>\n\n<para>GIFLIB is not under active development, but bug fixes are being\n",
                      "markdown": "`</sect1>\n<sect1><title>Package Status</title>\n\n<para>GIFLIB's current maintainer is Eric S. Raymond.  You can find his home\npage at <ulink url=\"&homepage;\">&homepage;</ulink>.</para>\n\n<para>GIFLIB is not under active development, but bug fixes are being\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 17,
                  "endLine": 40,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n<para>This package has been released under an X Consortium-like open-source\nlicense.  Use and copy as you see fit.  If you make useful changes,\nadd new tools, or find and fix bugs, please send your mods to the\nmaintainers for general distribution.</para>\n\n<para>The util directory includes programs to clip, rotate, scale, and\n",
                    "rendered": {
                      "text": "\n<para>This package has been released under an X Consortium-like open-source\nlicense.  Use and copy as you see fit.  If you make useful changes,\nadd new tools, or find and fix bugs, please send your mods to the\nmaintainers for general distribution.</para>\n\n<para>The util directory includes programs to clip, rotate, scale, and\n",
                      "markdown": "`\n<para>This package has been released under an X Consortium-like open-source\nlicense.  Use and copy as you see fit.  If you make useful changes,\nadd new tools, or find and fix bugs, please send your mods to the\nmaintainers for general distribution.</para>\n\n<para>The util directory includes programs to clip, rotate, scale, and\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/intro.xml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 50,
                  "endLine": 35,
                  "endColumn": 59,
                  "snippet": {
                    "text": "working with GIF images.</para>\n\n<para>The Graphics Interchange Format(c) specification is the copyrighted\nproperty of CompuServe Incorporated.  GIF(sm) is a service mark\nproperty of CompuServe Incorporated.</para>\n\n<para>This package has been released under an X Consortium-like open-source\n",
                    "rendered": {
                      "text": "working with GIF images.</para>\n\n<para>The Graphics Interchange Format(c) specification is the copyrighted\nproperty of CompuServe Incorporated.  GIF(sm) is a service mark\nproperty of CompuServe Incorporated.</para>\n\n<para>This package has been released under an X Consortium-like open-source\n",
                      "markdown": "`working with GIF images.</para>\n\n<para>The Graphics Interchange Format(c) specification is the copyrighted\nproperty of CompuServe Incorporated.  GIF(sm) is a service mark\nproperty of CompuServe Incorporated.</para>\n\n<para>This package has been released under an X Consortium-like open-source\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/Makefile"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "endColumn": 4,
                  "snippet": {
                    "text": "website: allhtml\n\trm -fr staging; mkdir staging; \n\tcp -r $(XMLALL:.xml=.html) gifstandard whatsinagif giflib-logo.gif staging\n\tcp index.html.in staging/index.html\n\tasciidoc - <../history.adoc >staging/history.html\n\nclean:\n",
                    "rendered": {
                      "text": "website: allhtml\n\trm -fr staging; mkdir staging; \n\tcp -r $(XMLALL:.xml=.html) gifstandard whatsinagif giflib-logo.gif staging\n\tcp index.html.in staging/index.html\n\tasciidoc - <../history.adoc >staging/history.html\n\nclean:\n",
                      "markdown": "`website: allhtml\n\trm -fr staging; mkdir staging; \n\tcp -r $(XMLALL:.xml=.html) gifstandard whatsinagif giflib-logo.gif staging\n\tcp index.html.in staging/index.html\n\tasciidoc - <../history.adoc >staging/history.html\n\nclean:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/Makefile"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 57,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# ImageMagick and asciidoc are required.\nwebsite: allhtml\n\trm -fr staging; mkdir staging; \n\tcp -r $(XMLALL:.xml=.html) gifstandard whatsinagif giflib-logo.gif staging\n\tcp index.html.in staging/index.html\n\tasciidoc - <../history.adoc >staging/history.html\n\n",
                    "rendered": {
                      "text": "# ImageMagick and asciidoc are required.\nwebsite: allhtml\n\trm -fr staging; mkdir staging; \n\tcp -r $(XMLALL:.xml=.html) gifstandard whatsinagif giflib-logo.gif staging\n\tcp index.html.in staging/index.html\n\tasciidoc - <../history.adoc >staging/history.html\n\n",
                      "markdown": "`# ImageMagick and asciidoc are required.\nwebsite: allhtml\n\trm -fr staging; mkdir staging; \n\tcp -r $(XMLALL:.xml=.html) gifstandard whatsinagif giflib-logo.gif staging\n\tcp index.html.in staging/index.html\n\tasciidoc - <../history.adoc >staging/history.html\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/cmpdiffer"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 34,
                  "endLine": 18,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# SPDX-FileCopyrightText: (C) Eric S. Raymond <esr@thyrsus.com>\n# SPDX-License-Identifier: MIT-0\n#\n# A newer version may be available at https://gitlab.com/esr/tapview\n# Check your last commit dqte for this file against the commit list\n# there to see if it might be a good idea to update.\n#\n",
                    "rendered": {
                      "text": "# SPDX-FileCopyrightText: (C) Eric S. Raymond <esr@thyrsus.com>\n# SPDX-License-Identifier: MIT-0\n#\n# A newer version may be available at https://gitlab.com/esr/tapview\n# Check your last commit dqte for this file against the commit list\n# there to see if it might be a good idea to update.\n#\n",
                      "markdown": "`# SPDX-FileCopyrightText: (C) Eric S. Raymond <esr@thyrsus.com>\n# SPDX-License-Identifier: MIT-0\n#\n# A newer version may be available at https://gitlab.com/esr/tapview\n# Check your last commit dqte for this file against the commit list\n# there to see if it might be a good idea to update.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 39,
                  "endLine": 27,
                  "snippet": {
                    "text": "001100000111110001111100110111000111111001100000\n000000000000000000000000000000000000000000000000\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                    "rendered": {
                      "text": "001100000111110001111100110111000111111001100000\n000000000000000000000000000000000000000000000000\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                      "markdown": "`001100000111110001111100110111000111111001100000\n000000000000000000000000000000000000000000000000\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 5,
                  "endLine": 15,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 48 by 8\n000111100000000000000000110000000000000000000000\n001100000000000000000000110000000000000000000000\n",
                    "rendered": {
                      "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 48 by 8\n000111100000000000000000110000000000000000000000\n001100000000000000000000110000000000000000000000\n",
                      "markdown": "`\nimage # 1\nimage left 0\nimage top 0\nimage bits 48 by 8\n000111100000000000000000110000000000000000000000\n001100000000000000000000110000000000000000000000\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 000 000 000 is 0\n\trgb 255 255 255 is 1\nend\n",
                    "rendered": {
                      "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 000 000 000 is 0\n\trgb 255 255 255 is 1\nend\n",
                      "markdown": "`pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 000 000 000 is 0\n\trgb 255 255 255 is 1\nend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen colors 2\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 000 000 000 is 0\n\trgb 255 255 255 is 1\n",
                    "rendered": {
                      "text": "screen colors 2\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 000 000 000 is 0\n\trgb 255 255 255 is 1\n",
                      "markdown": "`screen colors 2\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 000 000 000 is 0\n\trgb 255 255 255 is 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                    "rendered": {
                      "text": "screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                      "markdown": "`screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n\nscreen map\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 15,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n\n",
                    "rendered": {
                      "text": "screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n\n",
                      "markdown": "`screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/foobar.ico"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 15,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n",
                    "rendered": {
                      "text": "screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n",
                      "markdown": "`screen width 48\nscreen height 8\nscreen colors 2\nscreen background 0\npixel aspect byte 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap-interlaced.dmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 40, Height = 40.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 40, Height = 40.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 40, Height = 40.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap-interlaced.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 40, Height = 40.\n\tColorResolution = 7, BitsPerPixel = 4, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 40, Height = 40.\n\tColorResolution = 7, BitsPerPixel = 4, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 40, Height = 40.\n\tColorResolution = 7, BitsPerPixel = 4, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 27,
                  "endLine": 138,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tdone\ngiftext-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.dmp\"; \\\n\t\t$(UTILS)/giftext <$${test} >$${stem}.dmp; \\\n\tdone\n",
                    "rendered": {
                      "text": "\tdone\ngiftext-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.dmp\"; \\\n\t\t$(UTILS)/giftext <$${test} >$${stem}.dmp; \\\n\tdone\n",
                      "markdown": "`\tdone\ngiftext-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.dmp\"; \\\n\t\t$(UTILS)/giftext <$${test} >$${stem}.dmp; \\\n\tdone\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 30,
                  "endLine": 133,
                  "endColumn": 35,
                  "snippet": {
                    "text": "giftext-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/giftext <$${test} | ./cmpdiffer \"text dump of $${test}\" $${stem}.dmp; \\\n\tdone\ngiftext-rebuild:\n",
                    "rendered": {
                      "text": "giftext-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/giftext <$${test} | ./cmpdiffer \"text dump of $${test}\" $${stem}.dmp; \\\n\tdone\ngiftext-rebuild:\n",
                      "markdown": "`giftext-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/giftext <$${test} | ./cmpdiffer \"text dump of $${test}\" $${stem}.dmp; \\\n\tdone\ngiftext-rebuild:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 30,
                  "endLine": 126,
                  "endColumn": 35,
                  "snippet": {
                    "text": "gifsponge-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/gifsponge <$${test} | $(UTILS)/gif2rgb | ./cmpdiffer \"gifsponge: sink of $${test}\" $${stem}.rgb; \\\n\tdone\n\n",
                    "rendered": {
                      "text": "gifsponge-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/gifsponge <$${test} | $(UTILS)/gif2rgb | ./cmpdiffer \"gifsponge: sink of $${test}\" $${stem}.rgb; \\\n\tdone\n\n",
                      "markdown": "`gifsponge-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/gifsponge <$${test} | $(UTILS)/gif2rgb | ./cmpdiffer \"gifsponge: sink of $${test}\" $${stem}.rgb; \\\n\tdone\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 30,
                  "endLine": 99,
                  "endColumn": 35,
                  "snippet": {
                    "text": "giffilter-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/giffilter <$${test} | $(UTILS)/gif2rgb | ./cmpdiffer \"giffiltr: copy of $${test}\" \"$${stem}.rgb\"; \\\n\tdone\n\n",
                    "rendered": {
                      "text": "giffilter-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/giffilter <$${test} | $(UTILS)/gif2rgb | ./cmpdiffer \"giffiltr: copy of $${test}\" \"$${stem}.rgb\"; \\\n\tdone\n\n",
                      "markdown": "`giffilter-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/giffilter <$${test} | $(UTILS)/gif2rgb | ./cmpdiffer \"giffiltr: copy of $${test}\" \"$${stem}.rgb\"; \\\n\tdone\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 27,
                  "endLine": 85,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t@rm -f $@.*.regress\ngifclrmp-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.map\"; \\\n\t\t$(UTILS)/gifclrmp <$${test} >$${stem}.map; \\\n\tdone\n",
                    "rendered": {
                      "text": "\t@rm -f $@.*.regress\ngifclrmp-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.map\"; \\\n\t\t$(UTILS)/gifclrmp <$${test} >$${stem}.map; \\\n\tdone\n",
                      "markdown": "`\t@rm -f $@.*.regress\ngifclrmp-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.map\"; \\\n\t\t$(UTILS)/gifclrmp <$${test} >$${stem}.map; \\\n\tdone\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 30,
                  "endLine": 74,
                  "endColumn": 35,
                  "snippet": {
                    "text": "gifclrmp-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    if ! $(UTILS)/gifclrmp <$${test} > $@.$${stem}.regress 2>&1; \\\n\t    then \\\n\t\techo \"not ok - gifclrmap: crashed on $${test}\"; \\\n",
                    "rendered": {
                      "text": "gifclrmp-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    if ! $(UTILS)/gifclrmp <$${test} > $@.$${stem}.regress 2>&1; \\\n\t    then \\\n\t\techo \"not ok - gifclrmap: crashed on $${test}\"; \\\n",
                      "markdown": "`gifclrmp-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    if ! $(UTILS)/gifclrmp <$${test} > $@.$${stem}.regress 2>&1; \\\n\t    then \\\n\t\techo \"not ok - gifclrmap: crashed on $${test}\"; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 72,
                  "endLine": 56,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\tdone\n\ngif2rgb-regress:\n\t@$(UTILS)/gif2rgb -c 3 -s 100 100 <gifgrid.rgb | $(UTILS)/gifbuild -d | sed \"/sort flag/s/off/on/\" | ./tapdiffer \"checking gif2rgb idempotency\" gifgrid.ico\ngif2rgb-rebuild:\n\t@echo \"Rebuilding gif2rgb checkfile.\"\n\t@$(UTILS)/gif2rgb -c 3 -s 100 100 <gifgrid.rgb | $(UTILS)/gifbuild -d >gifgrid.ico\n",
                    "rendered": {
                      "text": "\tdone\n\ngif2rgb-regress:\n\t@$(UTILS)/gif2rgb -c 3 -s 100 100 <gifgrid.rgb | $(UTILS)/gifbuild -d | sed \"/sort flag/s/off/on/\" | ./tapdiffer \"checking gif2rgb idempotency\" gifgrid.ico\ngif2rgb-rebuild:\n\t@echo \"Rebuilding gif2rgb checkfile.\"\n\t@$(UTILS)/gif2rgb -c 3 -s 100 100 <gifgrid.rgb | $(UTILS)/gifbuild -d >gifgrid.ico\n",
                      "markdown": "`\tdone\n\ngif2rgb-regress:\n\t@$(UTILS)/gif2rgb -c 3 -s 100 100 <gifgrid.rgb | $(UTILS)/gifbuild -d | sed \"/sort flag/s/off/on/\" | ./tapdiffer \"checking gif2rgb idempotency\" gifgrid.ico\ngif2rgb-rebuild:\n\t@echo \"Rebuilding gif2rgb checkfile.\"\n\t@$(UTILS)/gif2rgb -c 3 -s 100 100 <gifgrid.rgb | $(UTILS)/gifbuild -d >gifgrid.ico\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 27,
                  "endLine": 50,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tdone\nrender-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.rgb\"; \\\n\t\t$(UTILS)/gif2rgb -1 -o $${stem}.rgb $${test}; \\\n\tdone\n",
                    "rendered": {
                      "text": "\tdone\nrender-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.rgb\"; \\\n\t\t$(UTILS)/gif2rgb -1 -o $${stem}.rgb $${test}; \\\n\tdone\n",
                      "markdown": "`\tdone\nrender-rebuild:\n\t@for test in $(GIFS); do \\\n\t\tstem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t\techo \"Remaking $${stem}.rgb\"; \\\n\t\t$(UTILS)/gif2rgb -1 -o $${stem}.rgb $${test}; \\\n\tdone\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 30,
                  "endLine": 45,
                  "endColumn": 35,
                  "snippet": {
                    "text": "render-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/gif2rgb -1 <$${test} | ./cmpdiffer \"gif2rgb: test of $${test}\" $${stem}.rgb; \\\n\tdone\nrender-rebuild:\n",
                    "rendered": {
                      "text": "render-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/gif2rgb -1 <$${test} | ./cmpdiffer \"gif2rgb: test of $${test}\" $${stem}.rgb; \\\n\tdone\nrender-rebuild:\n",
                      "markdown": "`render-regress:\n\t@for test in $(GIFS); \\\n\tdo \\\n\t    stem=`basename $${test} | sed -e \"s/.gif$$//\"`; \\\n\t    $(UTILS)/gif2rgb -1 <$${test} | ./cmpdiffer \"gif2rgb: test of $${test}\" $${stem}.rgb; \\\n\tdone\nrender-rebuild:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/makefile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 29,
                  "endLine": 11,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t@$(MAKE) --quiet tap | ./tapview\n\ntap:\n\t@$(MAKE) --quiet tapstream | tee taplog$$$$; echo \"1..$$(grep ok  taplog$$$$ | wc -l)\"; rm taplog$$$$\n\ntapstream: render-regress \\\n\tgif2rgb-regress \\\n",
                    "rendered": {
                      "text": "\t@$(MAKE) --quiet tap | ./tapview\n\ntap:\n\t@$(MAKE) --quiet tapstream | tee taplog$$$$; echo \"1..$$(grep ok  taplog$$$$ | wc -l)\"; rm taplog$$$$\n\ntapstream: render-regress \\\n\tgif2rgb-regress \\\n",
                      "markdown": "`\t@$(MAKE) --quiet tap | ./tapview\n\ntap:\n\t@$(MAKE) --quiet tapstream | tee taplog$$$$; echo \"1..$$(grep ok  taplog$$$$ | wc -l)\"; rm taplog$$$$\n\ntapstream: render-regress \\\n\tgif2rgb-regress \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/giffix.c"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 29,
                  "endLine": 112,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tCol = GifFileIn->Image.Left;\n\t\t\tWidth = GifFileIn->Image.Width;\n\t\t\tHeight = GifFileIn->Image.Height;\n\t\t\tGifQprintf(\"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, ++ImageNum, Col, Row, Width,\n\t\t\t           Height);\n\t\t\tif (Width > GifFileIn->SWidth) {\n",
                    "rendered": {
                      "text": "\t\t\tCol = GifFileIn->Image.Left;\n\t\t\tWidth = GifFileIn->Image.Width;\n\t\t\tHeight = GifFileIn->Image.Height;\n\t\t\tGifQprintf(\"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, ++ImageNum, Col, Row, Width,\n\t\t\t           Height);\n\t\t\tif (Width > GifFileIn->SWidth) {\n",
                      "markdown": "`\t\t\tCol = GifFileIn->Image.Left;\n\t\t\tWidth = GifFileIn->Image.Width;\n\t\t\tHeight = GifFileIn->Image.Height;\n\t\t\tGifQprintf(\"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, ++ImageNum, Col, Row, Width,\n\t\t\t           Height);\n\t\t\tif (Width > GifFileIn->SWidth) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/gif89a.css"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 3,
                  "snippet": {
                    "text": "ul {\n\tlist-style-type:disc;\n}\nul ul {\n\tlist-style-type:circle;\n}\n\n",
                    "rendered": {
                      "text": "ul {\n\tlist-style-type:disc;\n}\nul ul {\n\tlist-style-type:circle;\n}\n\n",
                      "markdown": "`ul {\n\tlist-style-type:disc;\n}\nul ul {\n\tlist-style-type:circle;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 14,
                  "endLine": 430,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 14,
                  "endLine": 417,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 14,
                  "endLine": 404,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 391,
                  "startColumn": 14,
                  "endLine": 391,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 14,
                  "endLine": 378,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 365,
                  "startColumn": 14,
                  "endLine": 365,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 14,
                  "endLine": 352,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 14,
                  "endLine": 339,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 14,
                  "endLine": 326,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 14,
                  "endLine": 313,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 14,
                  "endLine": 300,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 14,
                  "endLine": 287,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 14,
                  "endLine": 274,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 14,
                  "endLine": 261,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 14,
                  "endLine": 248,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 14,
                  "endLine": 235,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 14,
                  "endLine": 222,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 14,
                  "endLine": 209,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 14,
                  "endLine": 196,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 14,
                  "endLine": 183,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 14,
                  "endLine": 170,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 14,
                  "endLine": 157,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 14,
                  "endLine": 144,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 14,
                  "endLine": 131,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 14,
                  "endLine": 118,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 14,
                  "endLine": 105,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 14,
                  "endLine": 92,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 14,
                  "endLine": 79,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 14,
                  "endLine": 66,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 14,
                  "endLine": 53,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 40,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 14,
                  "endLine": 27,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tImage is Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 23,
                  "snippet": {
                    "text": "GIF89 comment (Ext Code = 254 [ ]):\n\n00000:  2                                                                  \nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "GIF89 comment (Ext Code = 254 [ ]):\n\n00000:  2                                                                  \nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`GIF89 comment (Ext Code = 254 [ ]):\n\n00000:  2                                                                  \nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 1\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 23,
                  "endLine": 439,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #33:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #33:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #33:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 23,
                  "endLine": 426,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #32:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #32:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #32:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 23,
                  "endLine": 413,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #31:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #31:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #31:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 23,
                  "endLine": 400,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #30:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #30:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #30:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 23,
                  "endLine": 387,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #29:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #29:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #29:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 374,
                  "startColumn": 23,
                  "endLine": 374,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #28:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #28:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #28:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 361,
                  "startColumn": 23,
                  "endLine": 361,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #27:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #27:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #27:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 23,
                  "endLine": 348,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #26:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #26:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #26:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 335,
                  "startColumn": 23,
                  "endLine": 335,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #25:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #25:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #25:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 23,
                  "endLine": 322,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #24:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #24:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #24:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 23,
                  "endLine": 309,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #23:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #23:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #23:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 23,
                  "endLine": 296,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #22:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #22:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #22:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 23,
                  "endLine": 283,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #21:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #21:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #21:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 23,
                  "endLine": 270,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #20:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #20:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #20:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 23,
                  "endLine": 257,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #19:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #19:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #19:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 23,
                  "endLine": 244,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #18:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #18:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #18:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 23,
                  "endLine": 231,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #17:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #17:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #17:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 23,
                  "endLine": 218,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #16:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #16:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #16:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 23,
                  "endLine": 205,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #15:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #15:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #15:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 23,
                  "endLine": 192,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #14:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #14:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #14:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 23,
                  "endLine": 179,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #13:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #13:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #13:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 23,
                  "endLine": 166,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #12:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #12:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #12:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 23,
                  "endLine": 153,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #11:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #11:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #11:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 23,
                  "endLine": 140,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #10:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #10:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #10:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 23,
                  "endLine": 127,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #9:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #9:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #9:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 23,
                  "endLine": 114,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #8:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #8:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #8:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 23,
                  "endLine": 101,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #7:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #7:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #7:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 23,
                  "endLine": 88,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #6:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #6:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #6:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 23,
                  "endLine": 75,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #5:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #5:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #5:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 23,
                  "endLine": 62,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #4:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #4:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #4:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 23,
                  "endLine": 49,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #3:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #3:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #3:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 23,
                  "endLine": 36,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #2:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #2:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #2:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 23,
                  "endLine": 23,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 30, Height = 60.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/fire.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 30, Height = 60.\n\tColorResolution = 8, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 30, Height = 60.\n\tColorResolution = 8, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 30, Height = 60.\n\tColorResolution = 8, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 39,
                  "endLine": 73,
                  "snippet": {
                    "text": "8555555555555555555555555555555555555555\n5555555555555555555555555555555555555555\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                    "rendered": {
                      "text": "8555555555555555555555555555555555555555\n5555555555555555555555555555555555555555\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                      "markdown": "`8555555555555555555555555555555555555555\n5555555555555555555555555555555555555555\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 40 by 40\n8888888888888888888888888888888888888885\n8888888888888888888888888888888888888855\n",
                    "rendered": {
                      "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 40 by 40\n8888888888888888888888888888888888888885\n8888888888888888888888888888888888888855\n",
                      "markdown": "`\nimage # 1\nimage left 0\nimage top 0\nimage bits 40 by 40\n8888888888888888888888888888888888888885\n8888888888888888888888888888888888888855\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n\trgb 000 157 000 is 2\n",
                    "rendered": {
                      "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n\trgb 000 157 000 is 2\n",
                      "markdown": "`pixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n\trgb 000 157 000 is 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n",
                    "rendered": {
                      "text": "screen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n",
                      "markdown": "`screen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag off\n\trgb 046 140 093 is 0\n\trgb 000 255 255 is 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                    "rendered": {
                      "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                      "markdown": "`screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\nscreen map\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 16,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\n",
                    "rendered": {
                      "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\n",
                      "markdown": "`screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.ico"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 15,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n",
                    "rendered": {
                      "text": "screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n",
                      "markdown": "`screen width 40\nscreen height 40\nscreen colors 128\nscreen background 0\npixel aspect byte 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/README"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 29,
                  "endLine": 24,
                  "endColumn": 38,
                  "snippet": {
                    "text": "You will find full documentation of the API in doc/ and on the \nproject website.\n\nPlease report bugs to the bug tracker on sourceforge:\n\nhttp://sourceforge.net/tracker/?group_id=102202\n\n",
                    "rendered": {
                      "text": "You will find full documentation of the API in doc/ and on the \nproject website.\n\nPlease report bugs to the bug tracker on sourceforge:\n\nhttp://sourceforge.net/tracker/?group_id=102202\n\n",
                      "markdown": "`You will find full documentation of the API in doc/ and on the \nproject website.\n\nPlease report bugs to the bug tracker on sourceforge:\n\nhttp://sourceforge.net/tracker/?group_id=102202\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/README"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 31,
                  "endLine": 42,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        former maintainer\n\nEric Raymond <esr[AT]snark.thyrsus.com>\n        current as well as long time former maintainer of giflib code\n\nThere have been many other contributors; see the attributions in the\nversion-control history to learn more.\n",
                    "rendered": {
                      "text": "        former maintainer\n\nEric Raymond <esr[AT]snark.thyrsus.com>\n        current as well as long time former maintainer of giflib code\n\nThere have been many other contributors; see the attributions in the\nversion-control history to learn more.\n",
                      "markdown": "`        former maintainer\n\nEric Raymond <esr[AT]snark.thyrsus.com>\n        current as well as long time former maintainer of giflib code\n\nThere have been many other contributors; see the attributions in the\nversion-control history to learn more.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/README"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nYou will find build instructions in build.adoc\n\nYou will find full documentation of the API in doc/ and on the \nproject website.\n\nPlease report bugs to the bug tracker on sourceforge:\n",
                    "rendered": {
                      "text": "\nYou will find build instructions in build.adoc\n\nYou will find full documentation of the API in doc/ and on the \nproject website.\n\nPlease report bugs to the bug tracker on sourceforge:\n",
                      "markdown": "`\nYou will find build instructions in build.adoc\n\nYou will find full documentation of the API in doc/ and on the \nproject website.\n\nPlease report bugs to the bug tracker on sourceforge:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/README"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nThe (permissive) open-source license is in the file COPYING.\n\nYou will find build instructions in build.adoc\n\nYou will find full documentation of the API in doc/ and on the \nproject website.\n",
                    "rendered": {
                      "text": "\nThe (permissive) open-source license is in the file COPYING.\n\nYou will find build instructions in build.adoc\n\nYou will find full documentation of the API in doc/ and on the \nproject website.\n",
                      "markdown": "`\nThe (permissive) open-source license is in the file COPYING.\n\nYou will find build instructions in build.adoc\n\nYou will find full documentation of the API in doc/ and on the \nproject website.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gif2rgb.c"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 29,
                  "endLine": 434,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tCol = GifFile->Image.Left;\n\t\t\tWidth = GifFile->Image.Width;\n\t\t\tHeight = GifFile->Image.Height;\n\t\t\tGifQprintf(\"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, ++ImageNum, Col, Row, Width,\n\t\t\t           Height);\n\t\t\tif (GifFile->Image.Left + GifFile->Image.Width >\n",
                    "rendered": {
                      "text": "\t\t\tCol = GifFile->Image.Left;\n\t\t\tWidth = GifFile->Image.Width;\n\t\t\tHeight = GifFile->Image.Height;\n\t\t\tGifQprintf(\"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, ++ImageNum, Col, Row, Width,\n\t\t\t           Height);\n\t\t\tif (GifFile->Image.Left + GifFile->Image.Width >\n",
                      "markdown": "`\t\t\tCol = GifFile->Image.Left;\n\t\t\tWidth = GifFile->Image.Width;\n\t\t\tHeight = GifFile->Image.Height;\n\t\t\tGifQprintf(\"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, ++ImageNum, Col, Row, Width,\n\t\t\t           Height);\n\t\t\tif (GifFile->Image.Left + GifFile->Image.Width >\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gif2rgb.c"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 26,
                  "endLine": 177,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\texit(EXIT_FAILURE);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                    "rendered": {
                      "text": "\t\texit(EXIT_FAILURE);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                      "markdown": "`\t\texit(EXIT_FAILURE);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gif2rgb.c"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 40,
                  "endLine": 442,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t\t    GifFile->Image.Top + GifFile->Image.Height >\n\t\t\t        GifFile->SHeight) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        \"Image %d is not confined to screen \"\n\t\t\t\t        \"dimension, aborted.\\n\",\n\t\t\t\t        ImageNum);\n\t\t\t\texit(EXIT_FAILURE);\n",
                    "rendered": {
                      "text": "\t\t\t    GifFile->Image.Top + GifFile->Image.Height >\n\t\t\t        GifFile->SHeight) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        \"Image %d is not confined to screen \"\n\t\t\t\t        \"dimension, aborted.\\n\",\n\t\t\t\t        ImageNum);\n\t\t\t\texit(EXIT_FAILURE);\n",
                      "markdown": "`\t\t\t    GifFile->Image.Top + GifFile->Image.Height >\n\t\t\t        GifFile->SHeight) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t        \"Image %d is not confined to screen \"\n\t\t\t\t        \"dimension, aborted.\\n\",\n\t\t\t\t        ImageNum);\n\t\t\t\texit(EXIT_FAILURE);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gif_err.c"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 11,
                  "endLine": 61,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\tErr = \"Data is not in GIF format\";\n\t\tbreak;\n\tcase D_GIF_ERR_NO_SCRN_DSCR:\n\t\tErr = \"No screen descriptor detected\";\n\t\tbreak;\n\tcase D_GIF_ERR_NO_IMAG_DSCR:\n\t\tErr = \"No Image Descriptor detected\";\n",
                    "rendered": {
                      "text": "\t\tErr = \"Data is not in GIF format\";\n\t\tbreak;\n\tcase D_GIF_ERR_NO_SCRN_DSCR:\n\t\tErr = \"No screen descriptor detected\";\n\t\tbreak;\n\tcase D_GIF_ERR_NO_IMAG_DSCR:\n\t\tErr = \"No Image Descriptor detected\";\n",
                      "markdown": "`\t\tErr = \"Data is not in GIF format\";\n\t\tbreak;\n\tcase D_GIF_ERR_NO_SCRN_DSCR:\n\t\tErr = \"No screen descriptor detected\";\n\t\tbreak;\n\tcase D_GIF_ERR_NO_IMAG_DSCR:\n\t\tErr = \"No Image Descriptor detected\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/build.adoc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 19,
                  "endLine": 42,
                  "endColumn": 28,
                  "snippet": {
                    "text": "3. Version-stamp the top entry in the NEWS file. \n\n4. If you are changing major versions, sync the XBS-SourceForge-Folder\n   attribute in the control file.\n\n5. 'make dist' to make a tarball.\n\n",
                    "rendered": {
                      "text": "3. Version-stamp the top entry in the NEWS file. \n\n4. If you are changing major versions, sync the XBS-SourceForge-Folder\n   attribute in the control file.\n\n5. 'make dist' to make a tarball.\n\n",
                      "markdown": "`3. Version-stamp the top entry in the NEWS file. \n\n4. If you are changing major versions, sync the XBS-SourceForge-Folder\n   attribute in the control file.\n\n5. 'make dist' to make a tarball.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/build.adoc"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 24,
                  "endLine": 34,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n== Release Procedure ==\n\n1. Check the SourceForge tracker for bugs and patches.\n\n2. Bump the version number in gif_lib.h.  Do \"make version\"\n   to confirm that it looks sane when extracted to the Makefile.\n",
                    "rendered": {
                      "text": "\n== Release Procedure ==\n\n1. Check the SourceForge tracker for bugs and patches.\n\n2. Bump the version number in gif_lib.h.  Do \"make version\"\n   to confirm that it looks sane when extracted to the Makefile.\n",
                      "markdown": "`\n== Release Procedure ==\n\n1. Check the SourceForge tracker for bugs and patches.\n\n2. Bump the version number in gif_lib.h.  Do \"make version\"\n   to confirm that it looks sane when extracted to the Makefile.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/build.adoc"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 20,
                  "endLine": 39,
                  "endColumn": 25,
                  "snippet": {
                    "text": "2. Bump the version number in gif_lib.h.  Do \"make version\"\n   to confirm that it looks sane when extracted to the Makefile.\n\n3. Version-stamp the top entry in the NEWS file. \n\n4. If you are changing major versions, sync the XBS-SourceForge-Folder\n   attribute in the control file.\n",
                    "rendered": {
                      "text": "2. Bump the version number in gif_lib.h.  Do \"make version\"\n   to confirm that it looks sane when extracted to the Makefile.\n\n3. Version-stamp the top entry in the NEWS file. \n\n4. If you are changing major versions, sync the XBS-SourceForge-Folder\n   attribute in the control file.\n",
                      "markdown": "`2. Bump the version number in gif_lib.h.  Do \"make version\"\n   to confirm that it looks sane when extracted to the Makefile.\n\n3. Version-stamp the top entry in the NEWS file. \n\n4. If you are changing major versions, sync the XBS-SourceForge-Folder\n   attribute in the control file.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 25,
                  "endLine": 325,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n</p><p>\n      Just as sort of a P.S., you may have noticed that a compressor has a\nlittle bit of flexibility at compression time. I specified a \"greedy\" approach\nto the compression, grabbing as many characters as possible before outputting\ncodes. This is, in fact, the standard LZW way of doing things, and it will\nyield the best compression ratio. But there's no rule saying you can't stop\n",
                    "rendered": {
                      "text": "\n</p><p>\n      Just as sort of a P.S., you may have noticed that a compressor has a\nlittle bit of flexibility at compression time. I specified a \"greedy\" approach\nto the compression, grabbing as many characters as possible before outputting\ncodes. This is, in fact, the standard LZW way of doing things, and it will\nyield the best compression ratio. But there's no rule saying you can't stop\n",
                      "markdown": "`\n</p><p>\n      Just as sort of a P.S., you may have noticed that a compressor has a\nlittle bit of flexibility at compression time. I specified a \"greedy\" approach\nto the compression, grabbing as many characters as possible before outputting\ncodes. This is, in fact, the standard LZW way of doing things, and it will\nyield the best compression ratio. But there's no rule saying you can't stop\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 39,
                  "endLine": 288,
                  "endColumn": 43,
                  "snippet": {
                    "text": "</p><p>\n\nIf you're encoding or decoding, you should\nstart adding things to the string table at &lt;CC&gt; + 2. If you're\nencoding, you should output &lt;CC&gt; as the very first code, and then\nwhenever after that you reach code #4095 (hex FFF), because GIF does\nnot allow compression sizes to be greater than 12 bits. If you're\n",
                    "rendered": {
                      "text": "</p><p>\n\nIf you're encoding or decoding, you should\nstart adding things to the string table at &lt;CC&gt; + 2. If you're\nencoding, you should output &lt;CC&gt; as the very first code, and then\nwhenever after that you reach code #4095 (hex FFF), because GIF does\nnot allow compression sizes to be greater than 12 bits. If you're\n",
                      "markdown": "`</p><p>\n\nIf you're encoding or decoding, you should\nstart adding things to the string table at &lt;CC&gt; + 2. If you're\nencoding, you should output &lt;CC&gt; as the very first code, and then\nwhenever after that you reach code #4095 (hex FFF), because GIF does\nnot allow compression sizes to be greater than 12 bits. If you're\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 10,
                  "endLine": 279,
                  "endColumn": 14,
                  "snippet": {
                    "text": "and (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n1). &lt;CC&gt; tells the compressor to re- initialize the string table,\nand to reset the compression size to (N+1). &lt;EOI&gt; means there's no\n",
                    "rendered": {
                      "text": "and (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n1). &lt;CC&gt; tells the compressor to re- initialize the string table,\nand to reset the compression size to (N+1). &lt;EOI&gt; means there's no\n",
                      "markdown": "`and (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n1). &lt;CC&gt; tells the compressor to re- initialize the string table,\nand to reset the compression size to (N+1). &lt;EOI&gt; means there's no\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 57,
                  "endLine": 277,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n",
                    "rendered": {
                      "text": "\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n",
                      "markdown": "`\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 46,
                  "endLine": 210,
                  "endColumn": 50,
                  "snippet": {
                    "text": "character of P[...]P to add to the string for the last code, P[...],\nto form the code for P[...]P. However, when a decompressor finds a\ncode that it doesn't know yet, it will always be the very next one to\nbe added to the string table.  So it can guess at what the string for\nthe code should be, and, in fact, it will always be correct. If I am a\ndecompressor, and I see code#124, and yet my string table has entries\nonly up to code#123, I can figure out what code#124 must be, add it to\n",
                    "rendered": {
                      "text": "character of P[...]P to add to the string for the last code, P[...],\nto form the code for P[...]P. However, when a decompressor finds a\ncode that it doesn't know yet, it will always be the very next one to\nbe added to the string table.  So it can guess at what the string for\nthe code should be, and, in fact, it will always be correct. If I am a\ndecompressor, and I see code#124, and yet my string table has entries\nonly up to code#123, I can figure out what code#124 must be, add it to\n",
                      "markdown": "`character of P[...]P to add to the string for the last code, P[...],\nto form the code for P[...]P. However, when a decompressor finds a\ncode that it doesn't know yet, it will always be the very next one to\nbe added to the string table.  So it can guess at what the string for\nthe code should be, and, in fact, it will always be correct. If I am a\ndecompressor, and I see code#124, and yet my string table has entries\nonly up to code#123, I can figure out what code#124 must be, add it to\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 36,
                  "endLine": 179,
                  "endColumn": 40,
                  "snippet": {
                    "text": "to as \"&lt;old&gt;\".  To start things off, look at the first code.  This\nis now &lt;code&gt;.  This code will be in the intialized string table as\nthe code for a root.  Output the root to the charstream. Make this code\nthe old-code &lt;old&gt;.  *Now look at the next code, and make it\n&lt;code&gt;.  It is possible that this code will not be in the string\ntable, but let's assume for now that it is.  Output the string\ncorresponding to &lt;code&gt; to the codestream.  Now find the first\n",
                    "rendered": {
                      "text": "to as \"&lt;old&gt;\".  To start things off, look at the first code.  This\nis now &lt;code&gt;.  This code will be in the intialized string table as\nthe code for a root.  Output the root to the charstream. Make this code\nthe old-code &lt;old&gt;.  *Now look at the next code, and make it\n&lt;code&gt;.  It is possible that this code will not be in the string\ntable, but let's assume for now that it is.  Output the string\ncorresponding to &lt;code&gt; to the codestream.  Now find the first\n",
                      "markdown": "`to as \"&lt;old&gt;\".  To start things off, look at the first code.  This\nis now &lt;code&gt;.  This code will be in the intialized string table as\nthe code for a root.  Output the root to the charstream. Make this code\nthe old-code &lt;old&gt;.  *Now look at the next code, and make it\n&lt;code&gt;.  It is possible that this code will not be in the string\ntable, but let's assume for now that it is.  Output the string\ncorresponding to &lt;code&gt; to the codestream.  Now find the first\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 47,
                  "endLine": 176,
                  "endColumn": 51,
                  "snippet": {
                    "text": "<p>\nWe need to define something called a \"current code\", which I\nwill refer to as \"&lt;code&gt;\", and an \"old-code\", which I will refer\nto as \"&lt;old&gt;\".  To start things off, look at the first code.  This\nis now &lt;code&gt;.  This code will be in the intialized string table as\nthe code for a root.  Output the root to the charstream. Make this code\nthe old-code &lt;old&gt;.  *Now look at the next code, and make it\n",
                    "rendered": {
                      "text": "<p>\nWe need to define something called a \"current code\", which I\nwill refer to as \"&lt;code&gt;\", and an \"old-code\", which I will refer\nto as \"&lt;old&gt;\".  To start things off, look at the first code.  This\nis now &lt;code&gt;.  This code will be in the intialized string table as\nthe code for a root.  Output the root to the charstream. Make this code\nthe old-code &lt;old&gt;.  *Now look at the next code, and make it\n",
                      "markdown": "`<p>\nWe need to define something called a \"current code\", which I\nwill refer to as \"&lt;code&gt;\", and an \"old-code\", which I will refer\nto as \"&lt;old&gt;\".  To start things off, look at the first code.  This\nis now &lt;code&gt;.  This code will be in the intialized string table as\nthe code for a root.  Output the root to the charstream. Make this code\nthe old-code &lt;old&gt;.  *Now look at the next code, and make it\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 43,
                  "endLine": 151,
                  "endColumn": 47,
                  "snippet": {
                    "text": "implements a very clever one, but we'll get to that.\n\n</p><p>\n      An important thing to notice is that, at any point during the\ncompression, if [...]K is in the string table, [...] is there also. This fact\nsuggests an efficient method for storing strings in the table. Rather than\nstore the entire string of K's in the table, realize that any string can be\n",
                    "rendered": {
                      "text": "implements a very clever one, but we'll get to that.\n\n</p><p>\n      An important thing to notice is that, at any point during the\ncompression, if [...]K is in the string table, [...] is there also. This fact\nsuggests an efficient method for storing strings in the table. Rather than\nstore the entire string of K's in the table, realize that any string can be\n",
                      "markdown": "`implements a very clever one, but we'll get to that.\n\n</p><p>\n      An important thing to notice is that, at any point during the\ncompression, if [...]K is in the string table, [...] is there also. This fact\nsuggests an efficient method for storing strings in the table. Rather than\nstore the entire string of K's in the table, realize that any string can be\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 67,
                  "endLine": 135,
                  "endColumn": 71,
                  "snippet": {
                    "text": "in the string table. Output code #0, and add AC to the string table as code\n#6. Now [.c.] becomes C. Next we get [.c.]A = CA, which is not in the table.\nOutput #2 for C, and add CA to table as code#7. Now [.c.] becomes A. Next we\nget AB, which IS in the string table, so [.c.] gets AB, and we look at ABA,\nwhich is not in the string table, so output the code for AB, which is #4, and\nadd ABA to the string table as code #8. [.c.] becomes A. We can't get any more\ncharacters, so we just output #0 for the code for A, and we're done. So, the\n",
                    "rendered": {
                      "text": "in the string table. Output code #0, and add AC to the string table as code\n#6. Now [.c.] becomes C. Next we get [.c.]A = CA, which is not in the table.\nOutput #2 for C, and add CA to table as code#7. Now [.c.] becomes A. Next we\nget AB, which IS in the string table, so [.c.] gets AB, and we look at ABA,\nwhich is not in the string table, so output the code for AB, which is #4, and\nadd ABA to the string table as code #8. [.c.] becomes A. We can't get any more\ncharacters, so we just output #0 for the code for A, and we're done. So, the\n",
                      "markdown": "`in the string table. Output code #0, and add AC to the string table as code\n#6. Now [.c.] becomes C. Next we get [.c.]A = CA, which is not in the table.\nOutput #2 for C, and add CA to table as code#7. Now [.c.] becomes A. Next we\nget AB, which IS in the string table, so [.c.] gets AB, and we look at ABA,\nwhich is not in the string table, so output the code for AB, which is #4, and\nadd ABA to the string table as code #8. [.c.] becomes A. We can't get any more\ncharacters, so we just output #0 for the code for A, and we're done. So, the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 67,
                  "endLine": 93,
                  "snippet": {
                    "text": "string.  (At this point, of course, it's just the root P.)  Now search\nthrough the string table to see if [.c.]P appears in it.  Of course, it\ndoes now, because our string table is initialized to have all roots.\nSo we don't do anything.  Now make [.c.]P the current prefix.  Look at\nthe next character in the charstream. Call it Q.  Add it to the\ncurrent prefix to form [.c.]Q, the current string.  Now search through\nthe string table to see if [.c.]Q appears in it. In this case, of\ncourse, it doesn't.  Aha! Now we get to do something.  Add [.c.]Q\n",
                    "rendered": {
                      "text": "string.  (At this point, of course, it's just the root P.)  Now search\nthrough the string table to see if [.c.]P appears in it.  Of course, it\ndoes now, because our string table is initialized to have all roots.\nSo we don't do anything.  Now make [.c.]P the current prefix.  Look at\nthe next character in the charstream. Call it Q.  Add it to the\ncurrent prefix to form [.c.]Q, the current string.  Now search through\nthe string table to see if [.c.]Q appears in it. In this case, of\ncourse, it doesn't.  Aha! Now we get to do something.  Add [.c.]Q\n",
                      "markdown": "`string.  (At this point, of course, it's just the root P.)  Now search\nthrough the string table to see if [.c.]P appears in it.  Of course, it\ndoes now, because our string table is initialized to have all roots.\nSo we don't do anything.  Now make [.c.]P the current prefix.  Look at\nthe next character in the charstream. Call it Q.  Add it to the\ncurrent prefix to form [.c.]Q, the current string.  Now search through\nthe string table to see if [.c.]Q appears in it. In this case, of\ncourse, it doesn't.  Aha! Now we get to do something.  Add [.c.]Q\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 49,
                  "endLine": 87,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\"[.c.]\". Initially, the current prefix has nothing in it.  Let's also\ndefine a \"current string\", which will be the current prefix plus the\nnext character in the charstream.  I will refer to the current string\nas \"[.c.]K\", where K is some character.  OK, look at the first\ncharacter in the charstream.  Call it P.  Make [.c.]P the current\nstring.  (At this point, of course, it's just the root P.)  Now search\nthrough the string table to see if [.c.]P appears in it.  Of course, it\n",
                    "rendered": {
                      "text": "\"[.c.]\". Initially, the current prefix has nothing in it.  Let's also\ndefine a \"current string\", which will be the current prefix plus the\nnext character in the charstream.  I will refer to the current string\nas \"[.c.]K\", where K is some character.  OK, look at the first\ncharacter in the charstream.  Call it P.  Make [.c.]P the current\nstring.  (At this point, of course, it's just the root P.)  Now search\nthrough the string table to see if [.c.]P appears in it.  Of course, it\n",
                      "markdown": "`\"[.c.]\". Initially, the current prefix has nothing in it.  Let's also\ndefine a \"current string\", which will be the current prefix plus the\nnext character in the charstream.  I will refer to the current string\nas \"[.c.]K\", where K is some character.  OK, look at the first\ncharacter in the charstream.  Call it P.  Make [.c.]P the current\nstring.  (At this point, of course, it's just the root P.)  Now search\nthrough the string table to see if [.c.]P appears in it.  Of course, it\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 324,
                  "startColumn": 13,
                  "endLine": 324,
                  "endColumn": 19,
                  "snippet": {
                    "text": "understand those variations, you understand it all!\n\n</p><p>\n      Just as sort of a P.S., you may have noticed that a compressor has a\nlittle bit of flexibility at compression time. I specified a \"greedy\" approach\nto the compression, grabbing as many characters as possible before outputting\ncodes. This is, in fact, the standard LZW way of doing things, and it will\n",
                    "rendered": {
                      "text": "understand those variations, you understand it all!\n\n</p><p>\n      Just as sort of a P.S., you may have noticed that a compressor has a\nlittle bit of flexibility at compression time. I specified a \"greedy\" approach\nto the compression, grabbing as many characters as possible before outputting\ncodes. This is, in fact, the standard LZW way of doing things, and it will\n",
                      "markdown": "`understand those variations, you understand it all!\n\n</p><p>\n      Just as sort of a P.S., you may have noticed that a compressor has a\nlittle bit of flexibility at compression time. I specified a \"greedy\" approach\nto the compression, grabbing as many characters as possible before outputting\ncodes. This is, in fact, the standard LZW way of doing things, and it will\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 277,
                  "startColumn": 62,
                  "endLine": 277,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n",
                    "rendered": {
                      "text": "\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n",
                      "markdown": "`\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\ncode. If you're encoding, you output the codes (N+1) bits at a time to\nstart with, and if you're decoding, you grab (N+1) bits from the\ncodestream at a time.  As for the special codes: &lt;CC&gt; or the clear\ncode, is (2**N), and &lt;EOI&gt;, or end-of-information, is (2**N +\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 51,
                  "endLine": 273,
                  "endColumn": 56,
                  "snippet": {
                    "text": "in bits, of the compression codes actually changes during\ncompression/decompression, and I will refer to that size here as the\n\"compression size\".  The initial table is just the codes for all the\nroots, as usual, but two special codes are added on top of those.  The\n\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\n",
                    "rendered": {
                      "text": "in bits, of the compression codes actually changes during\ncompression/decompression, and I will refer to that size here as the\n\"compression size\".  The initial table is just the codes for all the\nroots, as usual, but two special codes are added on top of those.  The\n\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\n",
                      "markdown": "`in bits, of the compression codes actually changes during\ncompression/decompression, and I will refer to that size here as the\n\"compression size\".  The initial table is just the codes for all the\nroots, as usual, but two special codes are added on top of those.  The\n\"code size\" N is set to max(2,bits-per-pixel).  In the table the roots\ntake up slots #0 through #(2**N-1), and the special codes are (2**N)\nand (2**N + 1).  The initial compression size will be N+1 bits per\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 50,
                  "endLine": 201,
                  "endColumn": 56,
                  "snippet": {
                    "text": "the string table, but P[...]P is not. The compressor will parse out\nP[...], and find that P[...]P is not in the string table. It will\noutput the code for P[...], and add P[...]P to the string table. Then\nit will get up to P[...]P for the next string, and find that P[...]P\nis in the table, as the code just added. So it will output the code\nfor P[...]P if it finds that P[...]PQ is not in the table.  The\ndecompressor is always \"one step behind\" the compressor. When the\n",
                    "rendered": {
                      "text": "the string table, but P[...]P is not. The compressor will parse out\nP[...], and find that P[...]P is not in the string table. It will\noutput the code for P[...], and add P[...]P to the string table. Then\nit will get up to P[...]P for the next string, and find that P[...]P\nis in the table, as the code just added. So it will output the code\nfor P[...]P if it finds that P[...]PQ is not in the table.  The\ndecompressor is always \"one step behind\" the compressor. When the\n",
                      "markdown": "`the string table, but P[...]P is not. The compressor will parse out\nP[...], and find that P[...]P is not in the string table. It will\noutput the code for P[...], and add P[...]P to the string table. Then\nit will get up to P[...]P for the next string, and find that P[...]P\nis in the table, as the code just added. So it will output the code\nfor P[...]P if it finds that P[...]PQ is not in the table.  The\ndecompressor is always \"one step behind\" the compressor. When the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 11,
                  "endLine": 199,
                  "endColumn": 17,
                  "snippet": {
                    "text": "try to understand what happens when you have a string like\nP[...]P[...]PQ appear in the charstream. Suppose P[...] is already in\nthe string table, but P[...]P is not. The compressor will parse out\nP[...], and find that P[...]P is not in the string table. It will\noutput the code for P[...], and add P[...]P to the string table. Then\nit will get up to P[...]P for the next string, and find that P[...]P\nis in the table, as the code just added. So it will output the code\n",
                    "rendered": {
                      "text": "try to understand what happens when you have a string like\nP[...]P[...]PQ appear in the charstream. Suppose P[...] is already in\nthe string table, but P[...]P is not. The compressor will parse out\nP[...], and find that P[...]P is not in the string table. It will\noutput the code for P[...], and add P[...]P to the string table. Then\nit will get up to P[...]P for the next string, and find that P[...]P\nis in the table, as the code just added. So it will output the code\n",
                      "markdown": "`try to understand what happens when you have a string like\nP[...]P[...]PQ appear in the charstream. Suppose P[...] is already in\nthe string table, but P[...]P is not. The compressor will parse out\nP[...], and find that P[...]P is not in the string table. It will\noutput the code for P[...], and add P[...]P to the string table. Then\nit will get up to P[...]P for the next string, and find that P[...]P\nis in the table, as the code just added. So it will output the code\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 182,
                  "startColumn": 53,
                  "endLine": 182,
                  "endColumn": 59,
                  "snippet": {
                    "text": "the old-code &lt;old&gt;.  *Now look at the next code, and make it\n&lt;code&gt;.  It is possible that this code will not be in the string\ntable, but let's assume for now that it is.  Output the string\ncorresponding to &lt;code&gt; to the codestream.  Now find the first\ncharacter in the string you just translated.  Call this K.  Add this to\nthe prefix [...] generated by &lt;old&gt; to form a new string\n[...]K. Add this string [...]K to the string table, and set the\n",
                    "rendered": {
                      "text": "the old-code &lt;old&gt;.  *Now look at the next code, and make it\n&lt;code&gt;.  It is possible that this code will not be in the string\ntable, but let's assume for now that it is.  Output the string\ncorresponding to &lt;code&gt; to the codestream.  Now find the first\ncharacter in the string you just translated.  Call this K.  Add this to\nthe prefix [...] generated by &lt;old&gt; to form a new string\n[...]K. Add this string [...]K to the string table, and set the\n",
                      "markdown": "`the old-code &lt;old&gt;.  *Now look at the next code, and make it\n&lt;code&gt;.  It is possible that this code will not be in the string\ntable, but let's assume for now that it is.  Output the string\ncorresponding to &lt;code&gt; to the codestream.  Now find the first\ncharacter in the string you just translated.  Call this K.  Add this to\nthe prefix [...] generated by &lt;old&gt; to form a new string\n[...]K. Add this string [...]K to the string table, and set the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/LZW-and-GIF-explained.html"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 31,
                  "endLine": 100,
                  "endColumn": 37,
                  "snippet": {
                    "text": "(which is PQ in this case) to the string table for code#32, and output\nthe code for [.c.] to the codestream.  Now start over again with the\ncurrent prefix being just the root Q.  Keep adding characters to [.c.]\nto form [.c.]K, until you can't find [.c.]K in the string table.  Then\noutput the code for [.c.] and add [.c.]K to the string table.  In\npseudo-code, the algorithm goes something like this:\n\n",
                    "rendered": {
                      "text": "(which is PQ in this case) to the string table for code#32, and output\nthe code for [.c.] to the codestream.  Now start over again with the\ncurrent prefix being just the root Q.  Keep adding characters to [.c.]\nto form [.c.]K, until you can't find [.c.]K in the string table.  Then\noutput the code for [.c.] and add [.c.]K to the string table.  In\npseudo-code, the algorithm goes something like this:\n\n",
                      "markdown": "`(which is PQ in this case) to the string table for code#32, and output\nthe code for [.c.] to the codestream.  Now start over again with the\ncurrent prefix being just the root Q.  Keep adding characters to [.c.]\nto form [.c.]K, until you can't find [.c.]K in the string table.  Then\noutput the code for [.c.] and add [.c.]K to the string table.  In\npseudo-code, the algorithm goes something like this:\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 50,
                  "endLine": 171,
                  "endColumn": 56,
                  "snippet": {
                    "text": "<para>The -x option takes a decimal integer argument and uses it to set the\nGIF89 disposal mode in selected images.</para>\n\n<para>The -z option sets or clears the color-table sort flag in\nselected images.  Acceptable arguments are \"1\", \"0\", \"yes\", \"no\",\n\"on\", \"off\", \"t\", \"f\".</para>\n\n",
                    "rendered": {
                      "text": "<para>The -x option takes a decimal integer argument and uses it to set the\nGIF89 disposal mode in selected images.</para>\n\n<para>The -z option sets or clears the color-table sort flag in\nselected images.  Acceptable arguments are \"1\", \"0\", \"yes\", \"no\",\n\"on\", \"off\", \"t\", \"f\".</para>\n\n",
                      "markdown": "`<para>The -x option takes a decimal integer argument and uses it to set the\nGIF89 disposal mode in selected images.</para>\n\n<para>The -z option sets or clears the color-table sort flag in\nselected images.  Acceptable arguments are \"1\", \"0\", \"yes\", \"no\",\n\"on\", \"off\", \"t\", \"f\".</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 23,
                  "endLine": 159,
                  "endColumn": 31,
                  "snippet": {
                    "text": "images.</para>\n\n<para>The -s option takes a (0-origin) x,y coordinate-pair and sets it\nas the expected display screen size.</para>\n\n<para>The -t option takes a decimal integer argument and uses it to set the \n(0-origin) index of the transparency color in selected images.</para>\n",
                    "rendered": {
                      "text": "images.</para>\n\n<para>The -s option takes a (0-origin) x,y coordinate-pair and sets it\nas the expected display screen size.</para>\n\n<para>The -t option takes a decimal integer argument and uses it to set the \n(0-origin) index of the transparency color in selected images.</para>\n",
                      "markdown": "`images.</para>\n\n<para>The -s option takes a (0-origin) x,y coordinate-pair and sets it\nas the expected display screen size.</para>\n\n<para>The -t option takes a decimal integer argument and uses it to set the \n(0-origin) index of the transparency color in selected images.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 56,
                  "endLine": 147,
                  "snippet": {
                    "text": "block.</para>\n\n<para>The -b option takes an unsigned decimal integer argument and\nuses it to set the background color index in the logical screen\ndescriptor block.</para>\n\n<para>The -d option takes a decimal integer argument and uses it to set a delay\ntime, in hundredths of a second, on selected images.</para>\n",
                    "rendered": {
                      "text": "block.</para>\n\n<para>The -b option takes an unsigned decimal integer argument and\nuses it to set the background color index in the logical screen\ndescriptor block.</para>\n\n<para>The -d option takes a decimal integer argument and uses it to set a delay\ntime, in hundredths of a second, on selected images.</para>\n",
                      "markdown": "`block.</para>\n\n<para>The -b option takes an unsigned decimal integer argument and\nuses it to set the background color index in the logical screen\ndescriptor block.</para>\n\n<para>The -d option takes a decimal integer argument and uses it to set a delay\ntime, in hundredths of a second, on selected images.</para>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 50,
                  "endLine": 142,
                  "endColumn": 58,
                  "snippet": {
                    "text": "strings \"on\" and \"off\". The default with no prefix is numeric.</para>\n\n<para>The -a option takes an unsigned decimal integer argument and\nuses it to set the aspect-ratio bye in the logical screen descriptor\nblock.</para>\n\n<para>The -b option takes an unsigned decimal integer argument and\n",
                    "rendered": {
                      "text": "strings \"on\" and \"off\". The default with no prefix is numeric.</para>\n\n<para>The -a option takes an unsigned decimal integer argument and\nuses it to set the aspect-ratio bye in the logical screen descriptor\nblock.</para>\n\n<para>The -b option takes an unsigned decimal integer argument and\n",
                      "markdown": "`strings \"on\" and \"off\". The default with no prefix is numeric.</para>\n\n<para>The -a option takes an unsigned decimal integer argument and\nuses it to set the aspect-ratio bye in the logical screen descriptor\nblock.</para>\n\n<para>The -b option takes an unsigned decimal integer argument and\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 45,
                  "endLine": 138,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</varlistentry>\n</variablelist>\n\n<para>Thus, for example, \"%oz\" displays image sort flags using the\nstrings \"on\" and \"off\". The default with no prefix is numeric.</para>\n\n<para>The -a option takes an unsigned decimal integer argument and\n",
                    "rendered": {
                      "text": "</varlistentry>\n</variablelist>\n\n<para>Thus, for example, \"%oz\" displays image sort flags using the\nstrings \"on\" and \"off\". The default with no prefix is numeric.</para>\n\n<para>The -a option takes an unsigned decimal integer argument and\n",
                      "markdown": "`</varlistentry>\n</variablelist>\n\n<para>Thus, for example, \"%oz\" displays image sort flags using the\nstrings \"on\" and \"off\". The default with no prefix is numeric.</para>\n\n<para>The -a option takes an unsigned decimal integer argument and\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 35,
                  "endLine": 111,
                  "endColumn": 41,
                  "snippet": {
                    "text": "</varlistentry>\n<varlistentry>\n<term>%z</term>\n<listitem><para>Image's color table sort flag (boolean, \nfalse if no local color map)</para></listitem>\n</varlistentry>\n</variablelist>\n",
                    "rendered": {
                      "text": "</varlistentry>\n<varlistentry>\n<term>%z</term>\n<listitem><para>Image's color table sort flag (boolean, \nfalse if no local color map)</para></listitem>\n</varlistentry>\n</variablelist>\n",
                      "markdown": "`</varlistentry>\n<varlistentry>\n<term>%z</term>\n<listitem><para>Image's color table sort flag (boolean, \nfalse if no local color map)</para></listitem>\n</varlistentry>\n</variablelist>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giftool.xml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 18,
                  "endLine": 51,
                  "endColumn": 26,
                  "snippet": {
                    "text": "images.</para>\n\n<para>The -b option takes a decimal integer argument and uses it to\nset the (0-origin) screen background color index.</para>\n\n<para>The -f option accepts a printf-style format string and\nsubstitutes into it the values of image-descriptor and graphics-control\n",
                    "rendered": {
                      "text": "images.</para>\n\n<para>The -b option takes a decimal integer argument and uses it to\nset the (0-origin) screen background color index.</para>\n\n<para>The -f option accepts a printf-style format string and\nsubstitutes into it the values of image-descriptor and graphics-control\n",
                      "markdown": "`images.</para>\n\n<para>The -b option takes a decimal integer argument and uses it to\nset the (0-origin) screen background color index.</para>\n\n<para>The -f option accepts a printf-style format string and\nsubstitutes into it the values of image-descriptor and graphics-control\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapview"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 32,
                  "endLine": 153,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t    continue\n\t\t    ;;\n\t\t*)\n\t\t    echo \"Ill-formed plan line at ${ln}\"\n\t\t    exit 1\n\t\t    ;;\n\t    esac\n",
                    "rendered": {
                      "text": "\t\t    continue\n\t\t    ;;\n\t\t*)\n\t\t    echo \"Ill-formed plan line at ${ln}\"\n\t\t    exit 1\n\t\t    ;;\n\t    esac\n",
                      "markdown": "`\t\t    continue\n\t\t    ;;\n\t\t*)\n\t\t    echo \"Ill-formed plan line at ${ln}\"\n\t\t    exit 1\n\t\t    ;;\n\t    esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapview"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 26,
                  "endLine": 73,
                  "endColumn": 30,
                  "snippet": {
                    "text": "context_pop () {\n    if [ \"$(context_get count)\" -gt 0 ] && [ -z \"$(context_get plan)\" ]\n    then\n\tship_line \"Missing a plan at line ${ln}.\"\n\tstatus=1\n    elif [ \"$(context_get test_before_plan)\" = \"yes\" ] && [ \"$(context_get test_after_plan)\" = \"yes\" ] \n    then\n",
                    "rendered": {
                      "text": "context_pop () {\n    if [ \"$(context_get count)\" -gt 0 ] && [ -z \"$(context_get plan)\" ]\n    then\n\tship_line \"Missing a plan at line ${ln}.\"\n\tstatus=1\n    elif [ \"$(context_get test_before_plan)\" = \"yes\" ] && [ \"$(context_get test_after_plan)\" = \"yes\" ] \n    then\n",
                      "markdown": "`context_pop () {\n    if [ \"$(context_get count)\" -gt 0 ] && [ -z \"$(context_get plan)\" ]\n    then\n\tship_line \"Missing a plan at line ${ln}.\"\n\tstatus=1\n    elif [ \"$(context_get test_before_plan)\" = \"yes\" ] && [ \"$(context_get test_after_plan)\" = \"yes\" ] \n    then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapview"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 38,
                  "snippet": {
                    "text": "#\n# This version shipped on 2024-02-05.\n#\n# A newer version may be available at https://gitlab.com/esr/tapview;\n# check the ship date oagainst the commit list there to see if it\n# might be a good idea to update.\n\n",
                    "rendered": {
                      "text": "#\n# This version shipped on 2024-02-05.\n#\n# A newer version may be available at https://gitlab.com/esr/tapview;\n# check the ship date oagainst the commit list there to see if it\n# might be a good idea to update.\n\n",
                      "markdown": "`#\n# This version shipped on 2024-02-05.\n#\n# A newer version may be available at https://gitlab.com/esr/tapview;\n# check the ship date oagainst the commit list there to see if it\n# might be a good idea to update.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapview"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 17,
                  "endLine": 149,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\texit 1\t# Not specified in the standard whether this should exit 1 or 0\n\t\t    fi\n\t\t    context_set plan \"${line}\"\n\t\t    context_set expect \"${tok1##[1][.][.]}\"\n\t\t    continue\n\t\t    ;;\n\t\t*)\n",
                    "rendered": {
                      "text": "\t\t\texit 1\t# Not specified in the standard whether this should exit 1 or 0\n\t\t    fi\n\t\t    context_set plan \"${line}\"\n\t\t    context_set expect \"${tok1##[1][.][.]}\"\n\t\t    continue\n\t\t    ;;\n\t\t*)\n",
                      "markdown": "`\t\t\texit 1\t# Not specified in the standard whether this should exit 1 or 0\n\t\t    fi\n\t\t    context_set plan \"${line}\"\n\t\t    context_set expect \"${tok1##[1][.][.]}\"\n\t\t    continue\n\t\t    ;;\n\t\t*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapview"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 15,
                  "endLine": 65,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    context_set count 0\n    context_set test_before_plan no\n    context_set test_after_plan no\n    context_set expect \"\"\n    context_set bail no\n    context_set strict no\n}\n",
                    "rendered": {
                      "text": "    context_set count 0\n    context_set test_before_plan no\n    context_set test_after_plan no\n    context_set expect \"\"\n    context_set bail no\n    context_set strict no\n}\n",
                      "markdown": "`    context_set count 0\n    context_set test_before_plan no\n    context_set test_after_plan no\n    context_set expect \"\"\n    context_set bail no\n    context_set strict no\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/solid2.dmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 640, Height = 400.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 640, Height = 400.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 640, Height = 400.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/solid2.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 640, Height = 400.\n\tColorResolution = 7, BitsPerPixel = 7, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 640, Height = 400.\n\tColorResolution = 7, BitsPerPixel = 7, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 640, Height = 400.\n\tColorResolution = 7, BitsPerPixel = 7, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 14,
                  "endLine": 76,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 14,
                  "endLine": 63,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 14,
                  "endLine": 50,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 14,
                  "endLine": 37,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 14,
                  "endLine": 24,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\tImage is Non Interlaced.\n\tNo Image Color Map.\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 11,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nGIF89 application block (Ext Code = 255 [ ]):\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\nGIF89 application block (Ext Code = 255 [ ]):\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\nGIF89 application block (Ext Code = 255 [ ]):\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 2\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 23,
                  "endLine": 85,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #6:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #6:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n",
                      "markdown": "`\nImage #6:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 23,
                  "endLine": 72,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #5:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #5:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #5:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 23,
                  "endLine": 59,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #4:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #4:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n",
                      "markdown": "`\nImage #4:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 23,
                  "endLine": 46,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #3:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #3:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #3:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 23,
                  "endLine": 33,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #2:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #2:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n",
                      "markdown": "`\nImage #2:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced, BitsPerPixel = 8.\n\tImage Has Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 290, Height = 48.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/welcome2.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 290, Height = 48.\n\tColorResolution = 8, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 290, Height = 48.\n\tColorResolution = 8, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 290, Height = 48.\n\tColorResolution = 8, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbg.c"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 26,
                  "endLine": 238,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                    "rendered": {
                      "text": "\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                      "markdown": "`\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/giftool.c"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 2,
                  "endLine": 195,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t} else {\n\t\t\t\ttop->mode = screensize;\n\t\t\t}\n\t\t\tcp = strchr(optarg, ',');\n\t\t\tif (cp == NULL) {\n\t\t\t\t(void)fprintf(stderr, \"giftool: missing comma \"\n\t\t\t\t                      \"in coordinate pair.\\n\");\n",
                    "rendered": {
                      "text": "\t\t\t} else {\n\t\t\t\ttop->mode = screensize;\n\t\t\t}\n\t\t\tcp = strchr(optarg, ',');\n\t\t\tif (cp == NULL) {\n\t\t\t\t(void)fprintf(stderr, \"giftool: missing comma \"\n\t\t\t\t                      \"in coordinate pair.\\n\");\n",
                      "markdown": "`\t\t\t} else {\n\t\t\t\ttop->mode = screensize;\n\t\t\t}\n\t\t\tcp = strchr(optarg, ',');\n\t\t\tif (cp == NULL) {\n\t\t\t\t(void)fprintf(stderr, \"giftool: missing comma \"\n\t\t\t\t                      \"in coordinate pair.\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/giftool.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 4,
                  "endLine": 174,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\t\t\t\tif (span > 0) {\n\t\t\t\t\tselected[nselected++] = atoi(cp) - 1;\n\t\t\t\t\tcp += span;\n\t\t\t\t\tif (*cp == '\\0') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (*cp == ',') {\n",
                    "rendered": {
                      "text": "\n\t\t\t\tif (span > 0) {\n\t\t\t\t\tselected[nselected++] = atoi(cp) - 1;\n\t\t\t\t\tcp += span;\n\t\t\t\t\tif (*cp == '\\0') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (*cp == ',') {\n",
                      "markdown": "`\n\t\t\t\tif (span > 0) {\n\t\t\t\t\tselected[nselected++] = atoi(cp) - 1;\n\t\t\t\t\tcp += span;\n\t\t\t\t\tif (*cp == '\\0') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (*cp == ',') {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/giftool.c"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 2,
                  "endLine": 168,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tcase 'n':\n\t\t\thave_selection = true;\n\t\t\tnselected = 0;\n\t\t\tcp = optarg;\n\t\t\tfor (;;) {\n\t\t\t\tsize_t span = strspn(cp, \"0123456789\");\n\n",
                    "rendered": {
                      "text": "\t\tcase 'n':\n\t\t\thave_selection = true;\n\t\t\tnselected = 0;\n\t\t\tcp = optarg;\n\t\t\tfor (;;) {\n\t\t\t\tsize_t span = strspn(cp, \"0123456789\");\n\n",
                      "markdown": "`\t\tcase 'n':\n\t\t\thave_selection = true;\n\t\t\tnselected = 0;\n\t\t\tcp = optarg;\n\t\t\tfor (;;) {\n\t\t\t\tsize_t span = strspn(cp, \"0123456789\");\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifecho.c"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 26,
                  "endLine": 162,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                    "rendered": {
                      "text": "\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                      "markdown": "`\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifwedge.c"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 26,
                  "endLine": 116,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\texit(EXIT_FAILURE);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                    "rendered": {
                      "text": "\t\texit(EXIT_FAILURE);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                      "markdown": "`\t\texit(EXIT_FAILURE);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/index.html"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 19,
                  "endLine": 100,
                  "endColumn": 25,
                  "snippet": {
                    "text": "href=\"gif_lib.html#compatibility\">here</a>.\n\n<p>The SourceForge summary page (where you can download the source,\nreview the project, find links to the bugtracker  and mailing list\npages, or ask to join the project as a developer) is <a\nhref=\"https://sourceforge.net/projects/giflib/\">here</a>.\n\n",
                    "rendered": {
                      "text": "href=\"gif_lib.html#compatibility\">here</a>.\n\n<p>The SourceForge summary page (where you can download the source,\nreview the project, find links to the bugtracker  and mailing list\npages, or ask to join the project as a developer) is <a\nhref=\"https://sourceforge.net/projects/giflib/\">here</a>.\n\n",
                      "markdown": "`href=\"gif_lib.html#compatibility\">here</a>.\n\n<p>The SourceForge summary page (where you can download the source,\nreview the project, find links to the bugtracker  and mailing list\npages, or ask to join the project as a developer) is <a\nhref=\"https://sourceforge.net/projects/giflib/\">here</a>.\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/index.html"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 4,
                  "endLine": 86,
                  "endColumn": 10,
                  "snippet": {
                    "text": "<p>Before October 2006 the GIF format was encumbered by patents on the\nLZW compression it uses.  This first became an issue in 1993 when the\npatent-holders made ambiguous noises about requiring royalties.  For\nsome time a subset of this code travelled as \"libungif\", supporting\ndecompression but not compression. You can read a more detailed\nhistory <a href=\"history.html\">here</a>.</p>\n\n",
                    "rendered": {
                      "text": "<p>Before October 2006 the GIF format was encumbered by patents on the\nLZW compression it uses.  This first became an issue in 1993 when the\npatent-holders made ambiguous noises about requiring royalties.  For\nsome time a subset of this code travelled as \"libungif\", supporting\ndecompression but not compression. You can read a more detailed\nhistory <a href=\"history.html\">here</a>.</p>\n\n",
                      "markdown": "`<p>Before October 2006 the GIF format was encumbered by patents on the\nLZW compression it uses.  This first became an issue in 1993 when the\npatent-holders made ambiguous noises about requiring royalties.  For\nsome time a subset of this code travelled as \"libungif\", supporting\ndecompression but not compression. You can read a more detailed\nhistory <a href=\"history.html\">here</a>.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/index.html"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 42,
                  "endLine": 58,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</tr>\n</table>\n\n<p>The GIFLIB project maintains the giflib service library, which has\nbeen pulling images out of GIFs since 1989. It is deployed everywhere\nyou can think of and some places you probably can't - graphics\napplications and web browsers on multiple operating systems, game\n",
                    "rendered": {
                      "text": "</tr>\n</table>\n\n<p>The GIFLIB project maintains the giflib service library, which has\nbeen pulling images out of GIFs since 1989. It is deployed everywhere\nyou can think of and some places you probably can't - graphics\napplications and web browsers on multiple operating systems, game\n",
                      "markdown": "`</tr>\n</table>\n\n<p>The GIFLIB project maintains the giflib service library, which has\nbeen pulling images out of GIFs since 1989. It is deployed everywhere\nyou can think of and some places you probably can't - graphics\napplications and web browsers on multiple operating systems, game\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifcolor.c"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 26,
                  "endLine": 104,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                    "rendered": {
                      "text": "\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n",
                      "markdown": "`\t\tQuitGifError(GifFile);\n\t}\n\n\tGifQprintf(\"\\n%s: Image 1 at (%d, %d) [%dx%d]:     \", PROGRAM_NAME,\n\t           GifFile->Image.Left, GifFile->Image.Top,\n\t           GifFile->Image.Width, GifFile->Image.Height);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/Makefile"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 5,
                  "endLine": 186,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t     ChangeLog \\\n\t     build.adoc \\\n\t     history.adoc \\\n\t     control \\\n\t     doc/whatsinagif \\\n\t     doc/gifstandard \\\n\n",
                    "rendered": {
                      "text": "\t     ChangeLog \\\n\t     build.adoc \\\n\t     history.adoc \\\n\t     control \\\n\t     doc/whatsinagif \\\n\t     doc/gifstandard \\\n\n",
                      "markdown": "`\t     ChangeLog \\\n\t     build.adoc \\\n\t     history.adoc \\\n\t     control \\\n\t     doc/whatsinagif \\\n\t     doc/gifstandard \\\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/Makefile"
                },
                "region": {
                  "startLine": 213,
                  "endLine": 213,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Verify the build\ndistcheck: all\n\t$(MAKE) giflib-$(VERSION).tar.gz\n\ttar xzvf giflib-$(VERSION).tar.gz\n\t$(MAKE) -C giflib-$(VERSION)\n\trm -fr giflib-$(VERSION)\n\n",
                    "rendered": {
                      "text": "# Verify the build\ndistcheck: all\n\t$(MAKE) giflib-$(VERSION).tar.gz\n\ttar xzvf giflib-$(VERSION).tar.gz\n\t$(MAKE) -C giflib-$(VERSION)\n\trm -fr giflib-$(VERSION)\n\n",
                      "markdown": "`# Verify the build\ndistcheck: all\n\t$(MAKE) giflib-$(VERSION).tar.gz\n\ttar xzvf giflib-$(VERSION).tar.gz\n\t$(MAKE) -C giflib-$(VERSION)\n\trm -fr giflib-$(VERSION)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/Makefile"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 32,
                  "endLine": 192,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nDSOURCES = Makefile *.[ch]\nDOCS = doc/*.xml doc/*.1 doc/*.7 doc/*.html doc/index.html.in doc/00README doc/Makefile\nALL =  $(DSOURCES) $(DOCS) tests pic $(EXTRAS)\ngiflib-$(VERSION).tar.gz: $(ALL)\n\t$(TAR) --transform='s:^:giflib-$(VERSION)/:' -czf giflib-$(VERSION).tar.gz $(ALL)\ngiflib-$(VERSION).tar.bz2: $(ALL)\n",
                    "rendered": {
                      "text": "\nDSOURCES = Makefile *.[ch]\nDOCS = doc/*.xml doc/*.1 doc/*.7 doc/*.html doc/index.html.in doc/00README doc/Makefile\nALL =  $(DSOURCES) $(DOCS) tests pic $(EXTRAS)\ngiflib-$(VERSION).tar.gz: $(ALL)\n\t$(TAR) --transform='s:^:giflib-$(VERSION)/:' -czf giflib-$(VERSION).tar.gz $(ALL)\ngiflib-$(VERSION).tar.bz2: $(ALL)\n",
                      "markdown": "`\nDSOURCES = Makefile *.[ch]\nDOCS = doc/*.xml doc/*.1 doc/*.7 doc/*.html doc/index.html.in doc/00README doc/Makefile\nALL =  $(DSOURCES) $(DOCS) tests pic $(EXTRAS)\ngiflib-$(VERSION).tar.gz: $(ALL)\n\t$(TAR) --transform='s:^:giflib-$(VERSION)/:' -czf giflib-$(VERSION).tar.gz $(ALL)\ngiflib-$(VERSION).tar.bz2: $(ALL)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/Makefile"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 5,
                  "endLine": 18,
                  "snippet": {
                    "text": "CFLAGS  += -std=gnu99 -fPIC -Wall -Wno-format-truncation $(OFLAGS)\n\nSHELL = /bin/sh\nTAR = tar\nINSTALL = install\n\nPREFIX ?= /usr/local\nBINDIR = $(PREFIX)/bin\n",
                    "rendered": {
                      "text": "CFLAGS  += -std=gnu99 -fPIC -Wall -Wno-format-truncation $(OFLAGS)\n\nSHELL = /bin/sh\nTAR = tar\nINSTALL = install\n\nPREFIX ?= /usr/local\nBINDIR = $(PREFIX)/bin\n",
                      "markdown": "`CFLAGS  += -std=gnu99 -fPIC -Wall -Wno-format-truncation $(OFLAGS)\n\nSHELL = /bin/sh\nTAR = tar\nINSTALL = install\n\nPREFIX ?= /usr/local\nBINDIR = $(PREFIX)/bin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/Makefile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 15,
                  "endLine": 17,
                  "endColumn": 4,
                  "snippet": {
                    "text": "OFLAGS  = -O2\nCFLAGS  += -std=gnu99 -fPIC -Wall -Wno-format-truncation $(OFLAGS)\n\nSHELL = /bin/sh\nTAR = tar\nINSTALL = install\n\nPREFIX ?= /usr/local\n",
                    "rendered": {
                      "text": "OFLAGS  = -O2\nCFLAGS  += -std=gnu99 -fPIC -Wall -Wno-format-truncation $(OFLAGS)\n\nSHELL = /bin/sh\nTAR = tar\nINSTALL = install\n\nPREFIX ?= /usr/local\n",
                      "markdown": "`OFLAGS  = -O2\nCFLAGS  += -std=gnu99 -fPIC -Wall -Wno-format-truncation $(OFLAGS)\n\nSHELL = /bin/sh\nTAR = tar\nINSTALL = install\n\nPREFIX ?= /usr/local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2797,
                  "startColumn": 18,
                  "endLine": 2797,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n<p>Because of a large base of decoders that do not handle the decompression in\nthis manner, we ask developers of GIF encoding software to <i>not</i> implement\nthis feature until at least January 1991 and later if they see that their\nparticular market is not ready for it. This will give developers of GIF\ndecoding software time to implement this feature and to get it into the hands\nof their clients before the decoders start \"breaking\" on the new GIF's. It is\n",
                    "rendered": {
                      "text": "\n<p>Because of a large base of decoders that do not handle the decompression in\nthis manner, we ask developers of GIF encoding software to <i>not</i> implement\nthis feature until at least January 1991 and later if they see that their\nparticular market is not ready for it. This will give developers of GIF\ndecoding software time to implement this feature and to get it into the hands\nof their clients before the decoders start \"breaking\" on the new GIF's. It is\n",
                      "markdown": "`\n<p>Because of a large base of decoders that do not handle the decompression in\nthis manner, we ask developers of GIF encoding software to <i>not</i> implement\nthis feature until at least January 1991 and later if they see that their\nparticular market is not ready for it. This will give developers of GIF\ndecoding software time to implement this feature and to get it into the hands\nof their clients before the decoders start \"breaking\" on the new GIF's. It is\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2783,
                  "startColumn": 50,
                  "endLine": 2783,
                  "endColumn": 54,
                  "snippet": {
                    "text": "<h3>Deferred clear code in LZW compression</h3>\n\n<p>There has been confusion about where clear codes can be found in the data\nstream. As the specification says, they may appear at anytime. There is not a\nrequirement to send a clear code when the string table is full.</p>\n\n<p>It is the encoder's decision as to when the table should be cleared. When\n",
                    "rendered": {
                      "text": "<h3>Deferred clear code in LZW compression</h3>\n\n<p>There has been confusion about where clear codes can be found in the data\nstream. As the specification says, they may appear at anytime. There is not a\nrequirement to send a clear code when the string table is full.</p>\n\n<p>It is the encoder's decision as to when the table should be cleared. When\n",
                      "markdown": "`<h3>Deferred clear code in LZW compression</h3>\n\n<p>There has been confusion about where clear codes can be found in the data\nstream. As the specification says, they may appear at anytime. There is not a\nrequirement to send a clear code when the string table is full.</p>\n\n<p>It is the encoder's decision as to when the table should be cleared. When\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2620,
                  "startColumn": 59,
                  "endLine": 2620,
                  "endColumn": 68,
                  "snippet": {
                    "text": "based on this information should be designed in a flexible way to accommodate\nany changes resulting from the revisions.</p>\n\n<p>The following sequences are defined for use in mediating control between a\nGIF sender and GIF receiver over an interactive communications line. These\nsequences do not apply to applications that involve downloading of static GIF\nfiles and are not considered part of a GIF file.</p>\n",
                    "rendered": {
                      "text": "based on this information should be designed in a flexible way to accommodate\nany changes resulting from the revisions.</p>\n\n<p>The following sequences are defined for use in mediating control between a\nGIF sender and GIF receiver over an interactive communications line. These\nsequences do not apply to applications that involve downloading of static GIF\nfiles and are not considered part of a GIF file.</p>\n",
                      "markdown": "`based on this information should be designed in a flexible way to accommodate\nany changes resulting from the revisions.</p>\n\n<p>The following sequences are defined for use in mediating control between a\nGIF sender and GIF receiver over an interactive communications line. These\nsequences do not apply to applications that involve downloading of static GIF\nfiles and are not considered part of a GIF file.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2550,
                  "startColumn": 17,
                  "endLine": 2550,
                  "endColumn": 21,
                  "snippet": {
                    "text": "series of 8-bit bytes that will be the characters actually stored or\ntransmitted. This provides additional compression of the image. The codes are\nformed into a stream of bits as if they were packed right to left and then\npicked off 8 bits at a time to be output.</p>\n\n<p>Assuming a character array of 8 bits per character and using 5 bit codes to\nbe packed, an example layout would be similar to:</p>\n",
                    "rendered": {
                      "text": "series of 8-bit bytes that will be the characters actually stored or\ntransmitted. This provides additional compression of the image. The codes are\nformed into a stream of bits as if they were packed right to left and then\npicked off 8 bits at a time to be output.</p>\n\n<p>Assuming a character array of 8 bits per character and using 5 bit codes to\nbe packed, an example layout would be similar to:</p>\n",
                      "markdown": "`series of 8-bit bytes that will be the characters actually stored or\ntransmitted. This provides additional compression of the image. The codes are\nformed into a stream of bits as if they were packed right to left and then\npicked off 8 bits at a time to be output.</p>\n\n<p>Assuming a character array of 8 bits per character and using 5 bit codes to\nbe packed, an example layout would be similar to:</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2532,
                  "startColumn": 59,
                  "endLine": 2532,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\tencountered. It must be the last code output by the encoder for an image.\n\tThe value of this code is &lt;Clear code&gt;+1.\n\t</li><li>The first available compression code value is &lt;Clear code&gt; + 2.\n\t</li><li>The output codes are of variable length, starting at &lt;code size&gt;\n\t+ 1 bits per code, up to 12 bits per code. This defines a maximum code\n\tvalue of 4095 (<tt>0xFFF</tt>). Whenever the LZW code value would exceed\n\tthe current code length, the code length is increased by one. The\n",
                    "rendered": {
                      "text": "\tencountered. It must be the last code output by the encoder for an image.\n\tThe value of this code is &lt;Clear code&gt;+1.\n\t</li><li>The first available compression code value is &lt;Clear code&gt; + 2.\n\t</li><li>The output codes are of variable length, starting at &lt;code size&gt;\n\t+ 1 bits per code, up to 12 bits per code. This defines a maximum code\n\tvalue of 4095 (<tt>0xFFF</tt>). Whenever the LZW code value would exceed\n\tthe current code length, the code length is increased by one. The\n",
                      "markdown": "`\tencountered. It must be the last code output by the encoder for an image.\n\tThe value of this code is &lt;Clear code&gt;+1.\n\t</li><li>The first available compression code value is &lt;Clear code&gt; + 2.\n\t</li><li>The output codes are of variable length, starting at &lt;code size&gt;\n\t+ 1 bits per code, up to 12 bits per code. This defines a maximum code\n\tvalue of 4095 (<tt>0xFFF</tt>). Whenever the LZW code value would exceed\n\tthe current code length, the code length is increased by one. The\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2523,
                  "startColumn": 63,
                  "endLine": 2523,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\tcompression/decompression parameters and tables to a start-up state. The\n\tvalue of this code is 2<sup>&lt;code size&gt;</sup>. For example if the\n\tcode size indicated was 4 (image was 4 bits/pixel) the Clear code value\n\twould be 16 (<tt>10000</tt> binary). The Clear code can appear at any point\n\tin the image data stream and therefore requires the LZW algorithm to\n\tprocess succeeding codes as if a new data stream was starting. Encoders\n\tshould output a Clear code as the first code of each image data stream.\n",
                    "rendered": {
                      "text": "\tcompression/decompression parameters and tables to a start-up state. The\n\tvalue of this code is 2<sup>&lt;code size&gt;</sup>. For example if the\n\tcode size indicated was 4 (image was 4 bits/pixel) the Clear code value\n\twould be 16 (<tt>10000</tt> binary). The Clear code can appear at any point\n\tin the image data stream and therefore requires the LZW algorithm to\n\tprocess succeeding codes as if a new data stream was starting. Encoders\n\tshould output a Clear code as the first code of each image data stream.\n",
                      "markdown": "`\tcompression/decompression parameters and tables to a start-up state. The\n\tvalue of this code is 2<sup>&lt;code size&gt;</sup>. For example if the\n\tcode size indicated was 4 (image was 4 bits/pixel) the Clear code value\n\twould be 16 (<tt>10000</tt> binary). The Clear code can appear at any point\n\tin the image data stream and therefore requires the LZW algorithm to\n\tprocess succeeding codes as if a new data stream was starting. Encoders\n\tshould output a Clear code as the first code of each image data stream.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2179,
                  "startColumn": 5,
                  "endLine": 2179,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t<td>Data Stream\n\t\t</td><td>The GIF Data Stream is composed of blocks and <a href=\"#subblocks\">sub-blocks</a> representing images and graphics,\n\t\ttogether with control information to render them on a display device.\n\t\tAll control and data blocks in the Data Stream must follow the <a href=\"#header\">Header</a> and must precede the <a href=\"#trailer\">Trailer</a>.\n\t</td></tr><tr>\n\t\t<td>Decoder\n\t\t</td><td>A program capable of processing a GIF Data Stream to render the\n",
                    "rendered": {
                      "text": "\t\t<td>Data Stream\n\t\t</td><td>The GIF Data Stream is composed of blocks and <a href=\"#subblocks\">sub-blocks</a> representing images and graphics,\n\t\ttogether with control information to render them on a display device.\n\t\tAll control and data blocks in the Data Stream must follow the <a href=\"#header\">Header</a> and must precede the <a href=\"#trailer\">Trailer</a>.\n\t</td></tr><tr>\n\t\t<td>Decoder\n\t\t</td><td>A program capable of processing a GIF Data Stream to render the\n",
                      "markdown": "`\t\t<td>Data Stream\n\t\t</td><td>The GIF Data Stream is composed of blocks and <a href=\"#subblocks\">sub-blocks</a> representing images and graphics,\n\t\ttogether with control information to render them on a display device.\n\t\tAll control and data blocks in the Data Stream must follow the <a href=\"#header\">Header</a> and must precede the <a href=\"#trailer\">Trailer</a>.\n\t</td></tr><tr>\n\t\t<td>Decoder\n\t\t</td><td>A program capable of processing a GIF Data Stream to render the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2178,
                  "startColumn": 15,
                  "endLine": 2178,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<td>Data Stream\n\t\t</td><td>The GIF Data Stream is composed of blocks and <a href=\"#subblocks\">sub-blocks</a> representing images and graphics,\n\t\ttogether with control information to render them on a display device.\n\t\tAll control and data blocks in the Data Stream must follow the <a href=\"#header\">Header</a> and must precede the <a href=\"#trailer\">Trailer</a>.\n\t</td></tr><tr>\n\t\t<td>Decoder\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<td>Data Stream\n\t\t</td><td>The GIF Data Stream is composed of blocks and <a href=\"#subblocks\">sub-blocks</a> representing images and graphics,\n\t\ttogether with control information to render them on a display device.\n\t\tAll control and data blocks in the Data Stream must follow the <a href=\"#header\">Header</a> and must precede the <a href=\"#trailer\">Trailer</a>.\n\t</td></tr><tr>\n\t\t<td>Decoder\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<td>Data Stream\n\t\t</td><td>The GIF Data Stream is composed of blocks and <a href=\"#subblocks\">sub-blocks</a> representing images and graphics,\n\t\ttogether with control information to render them on a display device.\n\t\tAll control and data blocks in the Data Stream must follow the <a href=\"#header\">Header</a> and must precede the <a href=\"#trailer\">Trailer</a>.\n\t</td></tr><tr>\n\t\t<td>Decoder\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2150,
                  "startColumn": 76,
                  "endLine": 2151,
                  "snippet": {
                    "text": "<p><i>Note:</i> The grammar indicates that it is possible for a GIF Data Stream\nto contain the Header, the Logical Screen Descriptor, a Global Color Table and\nthe GIF Trailer. This special case is used to load a GIF decoder with a Global\nColor Table, in preparation for subsequent Data Streams without color tables at\nall.</p>\n\n</div>\n\n",
                    "rendered": {
                      "text": "<p><i>Note:</i> The grammar indicates that it is possible for a GIF Data Stream\nto contain the Header, the Logical Screen Descriptor, a Global Color Table and\nthe GIF Trailer. This special case is used to load a GIF decoder with a Global\nColor Table, in preparation for subsequent Data Streams without color tables at\nall.</p>\n\n</div>\n\n",
                      "markdown": "`<p><i>Note:</i> The grammar indicates that it is possible for a GIF Data Stream\nto contain the Header, the Logical Screen Descriptor, a Global Color Table and\nthe GIF Trailer. This special case is used to load a GIF decoder with a Global\nColor Table, in preparation for subsequent Data Streams without color tables at\nall.</p>\n\n</div>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2130,
                  "startColumn": 54,
                  "endLine": 2130,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<td>&lt;Graphic Block&gt;\n\t\t</td><td>::=\n\t\t</td><td>[<a href=\"#graphiccontrolextension\">Graphic Control Extension</a>]\n\t\t&lt;Graphic-Rendering Block&gt;\n\t</td></tr><tr>\n\t\t<td>&lt;Graphic-Rendering Block&gt;\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<td>&lt;Graphic Block&gt;\n\t\t</td><td>::=\n\t\t</td><td>[<a href=\"#graphiccontrolextension\">Graphic Control Extension</a>]\n\t\t&lt;Graphic-Rendering Block&gt;\n\t</td></tr><tr>\n\t\t<td>&lt;Graphic-Rendering Block&gt;\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<td>&lt;Graphic Block&gt;\n\t\t</td><td>::=\n\t\t</td><td>[<a href=\"#graphiccontrolextension\">Graphic Control Extension</a>]\n\t\t&lt;Graphic-Rendering Block&gt;\n\t</td></tr><tr>\n\t\t<td>&lt;Graphic-Rendering Block&gt;\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2106,
                  "startColumn": 67,
                  "endLine": 2106,
                  "endColumn": 71,
                  "snippet": {
                    "text": "entity Data, which is also defined below by another rule. Finally, the entity\nData is followed by the Trailer. Since there is no rule defining the Header or\nthe Trailer, this means that these blocks are defined in the document. The\nentity Data has a special symbol (*) following it which means that, at this\nposition, the entity Data may be repeated any number of times, including 0\ntimes. For further reading on this subject, refer to a standard text on\nProgramming Languages.</p>\n",
                    "rendered": {
                      "text": "entity Data, which is also defined below by another rule. Finally, the entity\nData is followed by the Trailer. Since there is no rule defining the Header or\nthe Trailer, this means that these blocks are defined in the document. The\nentity Data has a special symbol (*) following it which means that, at this\nposition, the entity Data may be repeated any number of times, including 0\ntimes. For further reading on this subject, refer to a standard text on\nProgramming Languages.</p>\n",
                      "markdown": "`entity Data, which is also defined below by another rule. Finally, the entity\nData is followed by the Trailer. Since there is no rule defining the Header or\nthe Trailer, this means that these blocks are defined in the document. The\nentity Data has a special symbol (*) following it which means that, at this\nposition, the entity Data may be repeated any number of times, including 0\ntimes. For further reading on this subject, refer to a standard text on\nProgramming Languages.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2062,
                  "startColumn": 22,
                  "endLine": 2062,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n<p>A Grammar is a form of notation to represent the sequence in which certain\nobjects form larger objects. A grammar is also used to represent the number of\nobjects that can occur at a given position. The grammar given here represents\nthe sequence of blocks that form the GIF Data Stream. A grammar is given by\nlisting its rules. Each rule consists of the left-hand side, followed by some\nform of equals sign, followed by the right-hand side. In a rule, the right-hand\n",
                    "rendered": {
                      "text": "\n<p>A Grammar is a form of notation to represent the sequence in which certain\nobjects form larger objects. A grammar is also used to represent the number of\nobjects that can occur at a given position. The grammar given here represents\nthe sequence of blocks that form the GIF Data Stream. A grammar is given by\nlisting its rules. Each rule consists of the left-hand side, followed by some\nform of equals sign, followed by the right-hand side. In a rule, the right-hand\n",
                      "markdown": "`\n<p>A Grammar is a form of notation to represent the sequence in which certain\nobjects form larger objects. A grammar is also used to represent the number of\nobjects that can occur at a given position. The grammar given here represents\nthe sequence of blocks that form the GIF Data Stream. A grammar is given by\nlisting its rules. Each rule consists of the left-hand side, followed by some\nform of equals sign, followed by the right-hand side. In a rule, the right-hand\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2018,
                  "startColumn": 48,
                  "endLine": 2018,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<th colspan=\"5\">Control Blocks\n\t</th></tr><tr>\n\t\t<td><a href=\"#graphiccontrolextension\">Graphic Control Extension</a>\n\t\t</td><td>optional (zero or more occurrences)\n\t\t</td><td style=\"text-align:center;\"><tt>0xF9</tt> (249)\n\t\t</td><td style=\"text-align:center;\">yes\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<th colspan=\"5\">Control Blocks\n\t</th></tr><tr>\n\t\t<td><a href=\"#graphiccontrolextension\">Graphic Control Extension</a>\n\t\t</td><td>optional (zero or more occurrences)\n\t\t</td><td style=\"text-align:center;\"><tt>0xF9</tt> (249)\n\t\t</td><td style=\"text-align:center;\">yes\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<th colspan=\"5\">Control Blocks\n\t</th></tr><tr>\n\t\t<td><a href=\"#graphiccontrolextension\">Graphic Control Extension</a>\n\t\t</td><td>optional (zero or more occurrences)\n\t\t</td><td style=\"text-align:center;\"><tt>0xF9</tt> (249)\n\t\t</td><td style=\"text-align:center;\">yes\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1790,
                  "startColumn": 36,
                  "endLine": 1790,
                  "endColumn": 45,
                  "snippet": {
                    "text": "<h3>d. Extensions and Scope</h3>\n\n<p>The scope of this block is the Plain Text Data Block contained in it. This\nblock may be modified by the Graphic Control Extension.</p>\n\n<h3 id=\"p25e\">e. Recommendations</h3>\n\n",
                    "rendered": {
                      "text": "<h3>d. Extensions and Scope</h3>\n\n<p>The scope of this block is the Plain Text Data Block contained in it. This\nblock may be modified by the Graphic Control Extension.</p>\n\n<h3 id=\"p25e\">e. Recommendations</h3>\n\n",
                      "markdown": "`<h3>d. Extensions and Scope</h3>\n\n<p>The scope of this block is the Plain Text Data Block contained in it. This\nblock may be modified by the Graphic Control Extension.</p>\n\n<h3 id=\"p25e\">e. Recommendations</h3>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1776,
                  "startColumn": 64,
                  "endLine": 1776,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Plain Text Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the Block Terminator.\n\t</li></ul>\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Plain Text Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the Block Terminator.\n\t</li></ul>\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Plain Text Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the Block Terminator.\n\t</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1776,
                  "startColumn": 42,
                  "endLine": 1776,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Plain Text Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the Block Terminator.\n\t</li></ul>\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Plain Text Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the Block Terminator.\n\t</li></ul>\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Plain Text Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the Block Terminator.\n\t</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1616,
                  "startColumn": 42,
                  "endLine": 1616,
                  "endColumn": 51,
                  "snippet": {
                    "text": "if one was saved.</p>\n\n<p>This block is a graphic rendering block, therefore it may be modified by a\n<a href=\"#graphiccontrolextension\">Graphic Control Extension</a>.</p>\n\n<p>This block is <i>optional</i>; any number of them may appear in the Data\nStream.</p>\n",
                    "rendered": {
                      "text": "if one was saved.</p>\n\n<p>This block is a graphic rendering block, therefore it may be modified by a\n<a href=\"#graphiccontrolextension\">Graphic Control Extension</a>.</p>\n\n<p>This block is <i>optional</i>; any number of them may appear in the Data\nStream.</p>\n",
                      "markdown": "`if one was saved.</p>\n\n<p>This block is a graphic rendering block, therefore it may be modified by a\n<a href=\"#graphiccontrolextension\">Graphic Control Extension</a>.</p>\n\n<p>This block is <i>optional</i>; any number of them may appear in the Data\nStream.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1580,
                  "startColumn": 18,
                  "endLine": 1580,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n\n",
                    "rendered": {
                      "text": "\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n\n",
                      "markdown": "`\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1579,
                  "startColumn": 67,
                  "endLine": 1580,
                  "snippet": {
                    "text": "\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n\n",
                    "rendered": {
                      "text": "\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n\n",
                      "markdown": "`\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1579,
                  "startColumn": 20,
                  "endLine": 1579,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n",
                    "rendered": {
                      "text": "\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n",
                      "markdown": "`\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n\t</li></ul>\n</li></ol>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1577,
                  "startColumn": 59,
                  "endLine": 1577,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1577,
                  "startColumn": 27,
                  "endLine": 1577,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n\t\t<li>This block may appear at any point in the Data Stream at which a\n\t\tblock can begin; however, it is recommended that Comment Extensions do\n\t\tnot interfere with Control or Data blocks; they should be located at\n\t\tthe beginning or at the end of the Data Stream to the extent possible.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1573,
                  "startColumn": 1,
                  "endLine": 1573,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t<ul>\n\t\t<li>This block is intended for humans. It should contain text using the\n\t\t7-bit ASCII character set. This block should not be used to store\n\t\tcontrol information for custom processing.\n\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t<ul>\n\t\t<li>This block is intended for humans. It should contain text using the\n\t\t7-bit ASCII character set. This block should not be used to store\n\t\tcontrol information for custom processing.\n\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n",
                      "markdown": "`\t<ul>\n\t\t<li>This block is intended for humans. It should contain text using the\n\t\t7-bit ASCII character set. This block should not be used to store\n\t\tcontrol information for custom processing.\n\t</li></ul>\n\t</li><li>Position:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1550,
                  "startColumn": 64,
                  "endLine": 1550,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Comment Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the <a href=\"#blockterminator\">Block\n\t\tTerminator</a>.\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Comment Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the <a href=\"#blockterminator\">Block\n\t\tTerminator</a>.\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Comment Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the <a href=\"#blockterminator\">Block\n\t\tTerminator</a>.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1550,
                  "startColumn": 42,
                  "endLine": 1550,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Comment Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the <a href=\"#blockterminator\">Block\n\t\tTerminator</a>.\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Comment Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the <a href=\"#blockterminator\">Block\n\t\tTerminator</a>.\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Comment Data:\n\t<ul>\n\t\t<li>Sequence of sub-blocks, each of size at most 255 bytes and at least\n\t\t1 byte, with the size in a byte preceding the data. The end of the\n\t\tsequence is marked by the <a href=\"#blockterminator\">Block\n\t\tTerminator</a>.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1434,
                  "startColumn": 62,
                  "endLine": 1435,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Block Terminator:\n\t<ul>\n\t\t<li>This zero-length data block marks the end of the Graphic Control\n\t\tExtension.\n\t</li></ul>\n</li></ol>\n\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Block Terminator:\n\t<ul>\n\t\t<li>This zero-length data block marks the end of the Graphic Control\n\t\tExtension.\n\t</li></ul>\n</li></ol>\n\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Block Terminator:\n\t<ul>\n\t\t<li>This zero-length data block marks the end of the Graphic Control\n\t\tExtension.\n\t</li></ul>\n</li></ol>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1368,
                  "startColumn": 47,
                  "endLine": 1368,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Graphic Control Label:\n\t<ul>\n\t\t<li>Identifies the current block as a Graphic Control Extension. This\n\t\tfield contains the fixed value <tt>0xF9</tt> (249).\n\t</li></ul>\n\t</li><li>Block Size:\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Graphic Control Label:\n\t<ul>\n\t\t<li>Identifies the current block as a Graphic Control Extension. This\n\t\tfield contains the fixed value <tt>0xF9</tt> (249).\n\t</li></ul>\n\t</li><li>Block Size:\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Graphic Control Label:\n\t<ul>\n\t\t<li>Identifies the current block as a Graphic Control Extension. This\n\t\tfield contains the fixed value <tt>0xF9</tt> (249).\n\t</li></ul>\n\t</li><li>Block Size:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1366,
                  "startColumn": 17,
                  "endLine": 1366,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t<li>Identifies the beginning of an extension block. This field contains\n\t\tthe fixed value <tt>0x21</tt> (33, <tt>'!'</tt>).\n\t</li></ul>\n\t</li><li>Graphic Control Label:\n\t<ul>\n\t\t<li>Identifies the current block as a Graphic Control Extension. This\n\t\tfield contains the fixed value <tt>0xF9</tt> (249).\n",
                    "rendered": {
                      "text": "\t\t<li>Identifies the beginning of an extension block. This field contains\n\t\tthe fixed value <tt>0x21</tt> (33, <tt>'!'</tt>).\n\t</li></ul>\n\t</li><li>Graphic Control Label:\n\t<ul>\n\t\t<li>Identifies the current block as a Graphic Control Extension. This\n\t\tfield contains the fixed value <tt>0xF9</tt> (249).\n",
                      "markdown": "`\t\t<li>Identifies the beginning of an extension block. This field contains\n\t\tthe fixed value <tt>0x21</tt> (33, <tt>'!'</tt>).\n\t</li></ul>\n\t</li><li>Graphic Control Label:\n\t<ul>\n\t\t<li>Identifies the current block as a Graphic Control Extension. This\n\t\tfield contains the fixed value <tt>0xF9</tt> (249).\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1282,
                  "startColumn": 18,
                  "endLine": 1282,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t</td><td>Byte\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">1\n\t\t</td><td>Graphic Control Label\n\t\t</td><td>Byte\n</td></tr></tbody></table>\n\n",
                    "rendered": {
                      "text": "\t\t</td><td>Byte\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">1\n\t\t</td><td>Graphic Control Label\n\t\t</td><td>Byte\n</td></tr></tbody></table>\n\n",
                      "markdown": "`\t\t</td><td>Byte\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">1\n\t\t</td><td>Graphic Control Label\n\t\t</td><td>Byte\n</td></tr></tbody></table>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1263,
                  "startColumn": 7,
                  "endLine": 1263,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n<h3>b. Required Version</h3>\n\n",
                    "rendered": {
                      "text": "\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n<h3>b. Required Version</h3>\n\n",
                      "markdown": "`\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n<h3>b. Required Version</h3>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1261,
                  "startColumn": 53,
                  "endLine": 1261,
                  "endColumn": 62,
                  "snippet": {
                    "text": "graphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n",
                    "rendered": {
                      "text": "graphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n",
                      "markdown": "`graphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1261,
                  "startColumn": 33,
                  "endLine": 1261,
                  "endColumn": 37,
                  "snippet": {
                    "text": "graphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n",
                    "rendered": {
                      "text": "graphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n",
                      "markdown": "`graphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n<p>This block is <i>optional</i>; at most one Graphic Control Extension may\nprecede a graphic rendering block. This is the only limit to the number of\nGraphic Control Extensions that may be contained in a Data Stream.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1257,
                  "startColumn": 14,
                  "endLine": 1257,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n<h3>a. Description</h3>\n\n<p>The Graphic Control Extension contains parameters used when processing a\ngraphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n",
                    "rendered": {
                      "text": "\n<h3>a. Description</h3>\n\n<p>The Graphic Control Extension contains parameters used when processing a\ngraphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n",
                      "markdown": "`\n<h3>a. Description</h3>\n\n<p>The Graphic Control Extension contains parameters used when processing a\ngraphic rendering block. The scope of this extension is the first graphic\nrendering block to follow. The extension contains only one <a href=\"#subblocks\">data sub-block</a>.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1251,
                  "startColumn": 44,
                  "endLine": 1251,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n</div>\n\n<h2 id=\"graphiccontrolextension\">23. Graphic Control Extension <span onclick=\"ToggleVis(23);\">(hide/show)</span></h2>\n\n<div id=\"p23\">\n\n",
                    "rendered": {
                      "text": "\n</div>\n\n<h2 id=\"graphiccontrolextension\">23. Graphic Control Extension <span onclick=\"ToggleVis(23);\">(hide/show)</span></h2>\n\n<div id=\"p23\">\n\n",
                      "markdown": "`\n</div>\n\n<h2 id=\"graphiccontrolextension\">23. Graphic Control Extension <span onclick=\"ToggleVis(23);\">(hide/show)</span></h2>\n\n<div id=\"p23\">\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1198,
                  "startColumn": 57,
                  "endLine": 1198,
                  "endColumn": 61,
                  "snippet": {
                    "text": "<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\nindices is encoded using the LZW Algorithm with variable-length code, as\ndescribed in <a href=\"#lzw\">Appendix F</a>.</p>\n\n",
                    "rendered": {
                      "text": "<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\nindices is encoded using the LZW Algorithm with variable-length code, as\ndescribed in <a href=\"#lzw\">Appendix F</a>.</p>\n\n",
                      "markdown": "`<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\nindices is encoded using the LZW Algorithm with variable-length code, as\ndescribed in <a href=\"#lzw\">Appendix F</a>.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1195,
                  "startColumn": 112,
                  "endLine": 1195,
                  "endColumn": 116,
                  "snippet": {
                    "text": "\n<h3>a. Description</h3>\n\n<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\n",
                    "rendered": {
                      "text": "\n<h3>a. Description</h3>\n\n<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\n",
                      "markdown": "`\n<h3>a. Description</h3>\n\n<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1129,
                  "startColumn": 16,
                  "endLine": 1129,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n<p>If present, this color table temporarily becomes the active color table and\nthe following image should be processed using it. This block is\n<i>optional</i>; at most one Local Color Table may be present per Image\nDescriptor and its scope is the single image associated with the Image\nDescriptor that precedes it.</p>\n\n",
                    "rendered": {
                      "text": "\n<p>If present, this color table temporarily becomes the active color table and\nthe following image should be processed using it. This block is\n<i>optional</i>; at most one Local Color Table may be present per Image\nDescriptor and its scope is the single image associated with the Image\nDescriptor that precedes it.</p>\n\n",
                      "markdown": "`\n<p>If present, this color table temporarily becomes the active color table and\nthe following image should be processed using it. This block is\n<i>optional</i>; at most one Local Color Table may be present per Image\nDescriptor and its scope is the single image associated with the Image\nDescriptor that precedes it.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1102,
                  "startColumn": 41,
                  "endLine": 1102,
                  "endColumn": 50,
                  "snippet": {
                    "text": "<h3>d. Extensions and Scope</h3>\n\n<p>The scope of this block is the Table-based Image Data Block that follows it.\nThis block may be modified by the Graphic Control Extension.</p>\n\n<h3>e. Recommendation</h3>\n\n",
                    "rendered": {
                      "text": "<h3>d. Extensions and Scope</h3>\n\n<p>The scope of this block is the Table-based Image Data Block that follows it.\nThis block may be modified by the Graphic Control Extension.</p>\n\n<h3>e. Recommendation</h3>\n\n",
                      "markdown": "`<h3>d. Extensions and Scope</h3>\n\n<p>The scope of this block is the Table-based Image Data Block that follows it.\nThis block may be modified by the Graphic Control Extension.</p>\n\n<h3>e. Recommendation</h3>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 111,
                  "endLine": 932,
                  "endColumn": 120,
                  "snippet": {
                    "text": "<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\nthe Logical Screen, and are given in pixels. This block is a Graphic-Rendering\nBlock, optionally preceded by one or more Control blocks such as the <a href=\"#graphiccontrolextension\">Graphic Control Extension</a>, and may be\noptionally followed by a Local Color Table; the Image Descriptor is always\nfollowed by the image data.</p>\n\n",
                    "rendered": {
                      "text": "<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\nthe Logical Screen, and are given in pixels. This block is a Graphic-Rendering\nBlock, optionally preceded by one or more Control blocks such as the <a href=\"#graphiccontrolextension\">Graphic Control Extension</a>, and may be\noptionally followed by a Local Color Table; the Image Descriptor is always\nfollowed by the image data.</p>\n\n",
                      "markdown": "`<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\nthe Logical Screen, and are given in pixels. This block is a Graphic-Rendering\nBlock, optionally preceded by one or more Control blocks such as the <a href=\"#graphiccontrolextension\">Graphic Control Extension</a>, and may be\noptionally followed by a Local Color Table; the Image Descriptor is always\nfollowed by the image data.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 41,
                  "endLine": 932,
                  "endColumn": 50,
                  "snippet": {
                    "text": "<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\nthe Logical Screen, and are given in pixels. This block is a Graphic-Rendering\nBlock, optionally preceded by one or more Control blocks such as the <a href=\"#graphiccontrolextension\">Graphic Control Extension</a>, and may be\noptionally followed by a Local Color Table; the Image Descriptor is always\nfollowed by the image data.</p>\n\n",
                    "rendered": {
                      "text": "<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\nthe Logical Screen, and are given in pixels. This block is a Graphic-Rendering\nBlock, optionally preceded by one or more Control blocks such as the <a href=\"#graphiccontrolextension\">Graphic Control Extension</a>, and may be\noptionally followed by a Local Color Table; the Image Descriptor is always\nfollowed by the image data.</p>\n\n",
                      "markdown": "`<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\nthe Logical Screen, and are given in pixels. This block is a Graphic-Rendering\nBlock, optionally preceded by one or more Control blocks such as the <a href=\"#graphiccontrolextension\">Graphic Control Extension</a>, and may be\noptionally followed by a Local Color Table; the Image Descriptor is always\nfollowed by the image data.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 33,
                  "endLine": 860,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t<p>3 × 2<sup>Size of Global Color Table + 1</sup></p>\n</blockquote>\n\n<p>This block is <i>optional</i>; at most one Global Color Table may be present\nper Data Stream.</p>\n\n<h3>b. Required Version</h3>\n",
                    "rendered": {
                      "text": "\t<p>3 × 2<sup>Size of Global Color Table + 1</sup></p>\n</blockquote>\n\n<p>This block is <i>optional</i>; at most one Global Color Table may be present\nper Data Stream.</p>\n\n<h3>b. Required Version</h3>\n",
                      "markdown": "`\t<p>3 × 2<sup>Size of Global Color Table + 1</sup></p>\n</blockquote>\n\n<p>This block is <i>optional</i>; at most one Global Color Table may be present\nper Data Stream.</p>\n\n<h3>b. Required Version</h3>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 11,
                  "endLine": 574,
                  "endColumn": 15,
                  "snippet": {
                    "text": "<h3>b. Required Version</h3>\n\n<p>Not applicable. This block is not subject to a version number. This block\nmust appear at the beginning of every Data Stream.</p>\n\n<h3>c. Syntax</h3>\n\n",
                    "rendered": {
                      "text": "<h3>b. Required Version</h3>\n\n<p>Not applicable. This block is not subject to a version number. This block\nmust appear at the beginning of every Data Stream.</p>\n\n<h3>c. Syntax</h3>\n\n",
                      "markdown": "`<h3>b. Required Version</h3>\n\n<p>Not applicable. This block is not subject to a version number. This block\nmust appear at the beginning of every Data Stream.</p>\n\n<h3>c. Syntax</h3>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 38,
                  "endLine": 449,
                  "endColumn": 47,
                  "snippet": {
                    "text": "<h3>a. Description</h3>\n\n<p>Data Sub-blocks are units containing data. They do not have a label, these\nblocks are processed in the context of control blocks, wherever data blocks are\nspecified in the format. The first byte of the Data sub-block indicates the\nnumber of data bytes to follow. A data sub-block may contain from 0 to 255 data\nbytes. The size of the block does not account for the size byte itself,\n",
                    "rendered": {
                      "text": "<h3>a. Description</h3>\n\n<p>Data Sub-blocks are units containing data. They do not have a label, these\nblocks are processed in the context of control blocks, wherever data blocks are\nspecified in the format. The first byte of the Data sub-block indicates the\nnumber of data bytes to follow. A data sub-block may contain from 0 to 255 data\nbytes. The size of the block does not account for the size byte itself,\n",
                      "markdown": "`<h3>a. Description</h3>\n\n<p>Data Sub-blocks are units containing data. They do not have a label, these\nblocks are processed in the context of control blocks, wherever data blocks are\nspecified in the format. The first byte of the Data sub-block indicates the\nnumber of data bytes to follow. A data sub-block may contain from 0 to 255 data\nbytes. The size of the block does not account for the size byte itself,\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 55,
                  "endLine": 401,
                  "snippet": {
                    "text": "\t<li><tt>0x00</tt>–<tt>0x7F</tt> (0–127) are the Graphic\n\tRendering blocks, excluding the <a href=\"#trailer\">Trailer</a>\n\t(<tt>0x3B</tt>, 59)\n\t</li><li><tt>0x80</tt>–<tt>0xF9</tt> (128–249) are the Control\n\tblocks\n\t</li><li><tt>0xFA</tt>–<tt>0xFF</tt> (250–255) are the Special\n\tPurpose blocks\n</li></ul>\n",
                    "rendered": {
                      "text": "\t<li><tt>0x00</tt>–<tt>0x7F</tt> (0–127) are the Graphic\n\tRendering blocks, excluding the <a href=\"#trailer\">Trailer</a>\n\t(<tt>0x3B</tt>, 59)\n\t</li><li><tt>0x80</tt>–<tt>0xF9</tt> (128–249) are the Control\n\tblocks\n\t</li><li><tt>0xFA</tt>–<tt>0xFF</tt> (250–255) are the Special\n\tPurpose blocks\n</li></ul>\n",
                      "markdown": "`\t<li><tt>0x00</tt>–<tt>0x7F</tt> (0–127) are the Graphic\n\tRendering blocks, excluding the <a href=\"#trailer\">Trailer</a>\n\t(<tt>0x3B</tt>, 59)\n\t</li><li><tt>0x80</tt>–<tt>0xF9</tt> (128–249) are the Control\n\tblocks\n\t</li><li><tt>0xFA</tt>–<tt>0xFF</tt> (250–255) are the Special\n\tPurpose blocks\n</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 43,
                  "endLine": 392,
                  "endColumn": 52,
                  "snippet": {
                    "text": "scope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\nextensions are used as scope delimiters for Control blocks and extensions.</p>\n\n<p>The labels used to identify labeled blocks fall into three ranges:</p>\n\n",
                    "rendered": {
                      "text": "scope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\nextensions are used as scope delimiters for Control blocks and extensions.</p>\n\n<p>The labels used to identify labeled blocks fall into three ranges:</p>\n\n",
                      "markdown": "`scope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\nextensions are used as scope delimiters for Control blocks and extensions.</p>\n\n<p>The labels used to identify labeled blocks fall into three ranges:</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 46,
                  "endLine": 390,
                  "endColumn": 55,
                  "snippet": {
                    "text": "Descriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\nextensions are used as scope delimiters for Control blocks and extensions.</p>\n\n",
                    "rendered": {
                      "text": "Descriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\nextensions are used as scope delimiters for Control blocks and extensions.</p>\n\n",
                      "markdown": "`Descriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\nextensions are used as scope delimiters for Control blocks and extensions.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 48,
                  "endLine": 388,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\nDescriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\n",
                    "rendered": {
                      "text": "\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\nDescriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\n",
                      "markdown": "`\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\nDescriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\nblocks are transparent to the decoding process. Graphic-Rendering blocks and\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 19,
                  "endLine": 383,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n<p>Special Purpose blocks such as the <a href=\"#commentextension\">Comment\nExtension</a> and the <a href=\"#applicationextension\">Application Extension</a>\nare neither used to control the process of the Data Stream nor do they contain\ninformation or data used to render a graphic on the display device.</p>\n\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\n",
                    "rendered": {
                      "text": "\n<p>Special Purpose blocks such as the <a href=\"#commentextension\">Comment\nExtension</a> and the <a href=\"#applicationextension\">Application Extension</a>\nare neither used to control the process of the Data Stream nor do they contain\ninformation or data used to render a graphic on the display device.</p>\n\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\n",
                      "markdown": "`\n<p>Special Purpose blocks such as the <a href=\"#commentextension\">Comment\nExtension</a> and the <a href=\"#applicationextension\">Application Extension</a>\nare neither used to control the process of the Data Stream nor do they contain\ninformation or data used to render a graphic on the display device.</p>\n\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 2,
                  "endLine": 373,
                  "endColumn": 11,
                  "snippet": {
                    "text": "<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n\n<p>Graphic-Rendering blocks such as the <a href=\"#imagedescriptor\">Image\n",
                    "rendered": {
                      "text": "<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n\n<p>Graphic-Rendering blocks such as the <a href=\"#imagedescriptor\">Image\n",
                      "markdown": "`<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n\n<p>Graphic-Rendering blocks such as the <a href=\"#imagedescriptor\">Image\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 58,
                  "endLine": 372,
                  "snippet": {
                    "text": "Special Purpose.</p>\n\n<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n\n",
                    "rendered": {
                      "text": "Special Purpose.</p>\n\n<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n\n",
                      "markdown": "`Special Purpose.</p>\n\n<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 45,
                  "endLine": 359,
                  "endColumn": 49,
                  "snippet": {
                    "text": "<a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>, a Global\nColor Table and the <a href=\"#trailer\">GIF Trailer</a>. Such a Data Stream\nwould be used to load a decoder with a Global Color Table, in preparation for\nsubsequent Data Streams without a color table at all.</p>\n\n</div>\n\n",
                    "rendered": {
                      "text": "<a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>, a Global\nColor Table and the <a href=\"#trailer\">GIF Trailer</a>. Such a Data Stream\nwould be used to load a decoder with a Global Color Table, in preparation for\nsubsequent Data Streams without a color table at all.</p>\n\n</div>\n\n",
                      "markdown": "`<a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>, a Global\nColor Table and the <a href=\"#trailer\">GIF Trailer</a>. Such a Data Stream\nwould be used to load a decoder with a Global Color Table, in preparation for\nsubsequent Data Streams without a color table at all.</p>\n\n</div>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 51,
                  "endLine": 348,
                  "endColumn": 55,
                  "snippet": {
                    "text": "Table of the present Stream. This is intended to reduce the overhead incurred\nby color tables. In particular, it is recommended that an encoder use only one\nGlobal Color Table if all the images in related Data Streams can be rendered\nwith the same table. If no color table is available at all, the decoder is free\nto use a system color table or a table of its own. In that case, the decoder\nmay use a color table with as many colors as its hardware is able to support;\nit is recommended that such a table have black and white as its first two\n",
                    "rendered": {
                      "text": "Table of the present Stream. This is intended to reduce the overhead incurred\nby color tables. In particular, it is recommended that an encoder use only one\nGlobal Color Table if all the images in related Data Streams can be rendered\nwith the same table. If no color table is available at all, the decoder is free\nto use a system color table or a table of its own. In that case, the decoder\nmay use a color table with as many colors as its hardware is able to support;\nit is recommended that such a table have black and white as its first two\n",
                      "markdown": "`Table of the present Stream. This is intended to reduce the overhead incurred\nby color tables. In particular, it is recommended that an encoder use only one\nGlobal Color Table if all the images in related Data Streams can be rendered\nwith the same table. If no color table is available at all, the decoder is free\nto use a system color table or a table of its own. In that case, the decoder\nmay use a color table with as many colors as its hardware is able to support;\nit is recommended that such a table have black and white as its first two\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 57,
                  "endLine": 339,
                  "endColumn": 61,
                  "snippet": {
                    "text": "Table to render the image, and then restore the Global Color Table.</p>\n\n<p>Both types of color tables are optional, making it possible for a Data\nStream to contain numerous graphics without a color table at all. For this\nreason, it is recommended that the decoder save the last Global Color Table\nused until another Global Color Table is encountered. In this way, a Data\nStream which does not contain either a Global Color Table or a Local Color\n",
                    "rendered": {
                      "text": "Table to render the image, and then restore the Global Color Table.</p>\n\n<p>Both types of color tables are optional, making it possible for a Data\nStream to contain numerous graphics without a color table at all. For this\nreason, it is recommended that the decoder save the last Global Color Table\nused until another Global Color Table is encountered. In this way, a Data\nStream which does not contain either a Global Color Table or a Local Color\n",
                      "markdown": "`Table to render the image, and then restore the Global Color Table.</p>\n\n<p>Both types of color tables are optional, making it possible for a Data\nStream to contain numerous graphics without a color table at all. For this\nreason, it is recommended that the decoder save the last Global Color Table\nused until another Global Color Table is encountered. In this way, a Data\nStream which does not contain either a Global Color Table or a Local Color\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 73,
                  "endLine": 289,
                  "snippet": {
                    "text": "<ul>\n\t<li>Process each graphic in the Data Stream in sequence, without delays\n\tother than those specified in the control information.\n\t</li><li>Set its hardware parameters to fit, as closely as possible, the control\n\tinformation contained in the Data Stream.\n</li></ul>\n\n</div>\n",
                    "rendered": {
                      "text": "<ul>\n\t<li>Process each graphic in the Data Stream in sequence, without delays\n\tother than those specified in the control information.\n\t</li><li>Set its hardware parameters to fit, as closely as possible, the control\n\tinformation contained in the Data Stream.\n</li></ul>\n\n</div>\n",
                      "markdown": "`<ul>\n\t<li>Process each graphic in the Data Stream in sequence, without delays\n\tother than those specified in the control information.\n\t</li><li>Set its hardware parameters to fit, as closely as possible, the control\n\tinformation contained in the Data Stream.\n</li></ul>\n\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 34,
                  "endLine": 287,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n<ul>\n\t<li>Process each graphic in the Data Stream in sequence, without delays\n\tother than those specified in the control information.\n\t</li><li>Set its hardware parameters to fit, as closely as possible, the control\n\tinformation contained in the Data Stream.\n</li></ul>\n",
                    "rendered": {
                      "text": "\n<ul>\n\t<li>Process each graphic in the Data Stream in sequence, without delays\n\tother than those specified in the control information.\n\t</li><li>Set its hardware parameters to fit, as closely as possible, the control\n\tinformation contained in the Data Stream.\n</li></ul>\n",
                      "markdown": "`\n<ul>\n\t<li>Process each graphic in the Data Stream in sequence, without delays\n\tother than those specified in the control information.\n\t</li><li>Set its hardware parameters to fit, as closely as possible, the control\n\tinformation contained in the Data Stream.\n</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 46,
                  "endLine": 279,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n<p>The Decoder is the program used to process a GIF Data Stream. It processes\nthe Data Stream sequentially, parsing the various blocks and\n<a href=\"#subblocks\">sub-blocks</a>, using the control information to set\nhardware and process parameters and interpreting the data to render the\ngraphics.</p>\n\n",
                    "rendered": {
                      "text": "\n<p>The Decoder is the program used to process a GIF Data Stream. It processes\nthe Data Stream sequentially, parsing the various blocks and\n<a href=\"#subblocks\">sub-blocks</a>, using the control information to set\nhardware and process parameters and interpreting the data to render the\ngraphics.</p>\n\n",
                      "markdown": "`\n<p>The Decoder is the program used to process a GIF Data Stream. It processes\nthe Data Stream sequentially, parsing the various blocks and\n<a href=\"#subblocks\">sub-blocks</a>, using the control information to set\nhardware and process parameters and interpreting the data to render the\ngraphics.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 62,
                  "endLine": 250,
                  "endColumn": 71,
                  "snippet": {
                    "text": "<div id=\"p7\">\n\n<p>The Encoder is the program used to create a GIF Data Stream. From raster\ndata and other information, the encoder produces the necessary control and data\nblocks needed for reproducing the original graphics.</p>\n\n<p>The encoder has the following primary responsibilities.</p>\n",
                    "rendered": {
                      "text": "<div id=\"p7\">\n\n<p>The Encoder is the program used to create a GIF Data Stream. From raster\ndata and other information, the encoder produces the necessary control and data\nblocks needed for reproducing the original graphics.</p>\n\n<p>The encoder has the following primary responsibilities.</p>\n",
                      "markdown": "`<div id=\"p7\">\n\n<p>The Encoder is the program used to create a GIF Data Stream. From raster\ndata and other information, the encoder produces the necessary control and data\nblocks needed for reproducing the original graphics.</p>\n\n<p>The encoder has the following primary responsibilities.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 41,
                  "endLine": 213,
                  "endColumn": 50,
                  "snippet": {
                    "text": "general, the graphics in a Data Stream are assumed to be related to some\ndegree, and to share some control information; it is recommended that encoders\nattempt to group together related graphics in order to minimize hardware\nchanges during processing and to minimize control information overhead. For the\nsame reason, unrelated graphics or graphics which require resetting hardware\nparameters should be encoded separately to the extent possible.</p>\n\n",
                    "rendered": {
                      "text": "general, the graphics in a Data Stream are assumed to be related to some\ndegree, and to share some control information; it is recommended that encoders\nattempt to group together related graphics in order to minimize hardware\nchanges during processing and to minimize control information overhead. For the\nsame reason, unrelated graphics or graphics which require resetting hardware\nparameters should be encoded separately to the extent possible.</p>\n\n",
                      "markdown": "`general, the graphics in a Data Stream are assumed to be related to some\ndegree, and to share some control information; it is recommended that encoders\nattempt to group together related graphics in order to minimize hardware\nchanges during processing and to minimize control information overhead. For the\nsame reason, unrelated graphics or graphics which require resetting hardware\nparameters should be encoded separately to the extent possible.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 25,
                  "endLine": 211,
                  "endColumn": 34,
                  "snippet": {
                    "text": "used in the reproduction of a graphic. A GIF Data Stream is a sequence of\nprotocol blocks and sub-blocks representing a collection of graphics. In\ngeneral, the graphics in a Data Stream are assumed to be related to some\ndegree, and to share some control information; it is recommended that encoders\nattempt to group together related graphics in order to minimize hardware\nchanges during processing and to minimize control information overhead. For the\nsame reason, unrelated graphics or graphics which require resetting hardware\n",
                    "rendered": {
                      "text": "used in the reproduction of a graphic. A GIF Data Stream is a sequence of\nprotocol blocks and sub-blocks representing a collection of graphics. In\ngeneral, the graphics in a Data Stream are assumed to be related to some\ndegree, and to share some control information; it is recommended that encoders\nattempt to group together related graphics in order to minimize hardware\nchanges during processing and to minimize control information overhead. For the\nsame reason, unrelated graphics or graphics which require resetting hardware\n",
                      "markdown": "`used in the reproduction of a graphic. A GIF Data Stream is a sequence of\nprotocol blocks and sub-blocks representing a collection of graphics. In\ngeneral, the graphics in a Data Stream are assumed to be related to some\ndegree, and to share some control information; it is recommended that encoders\nattempt to group together related graphics in order to minimize hardware\nchanges during processing and to minimize control information overhead. For the\nsame reason, unrelated graphics or graphics which require resetting hardware\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 76,
                  "endLine": 125,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n<p>The Graphics Interchange Format℠ as specified here should be\nconsidered complete; any deviation from it should be considered invalid,\nincluding but not limited to, the use of reserved or undefined fields within\ncontrol or data blocks, the inclusion of extraneous data within or between\nblocks, the use of methods or algorithms not specifically listed as part of the\nformat, etc. In general, any and all deviations, extensions or modifications\nnot specified in this document should be considered to be in violation of the\n",
                    "rendered": {
                      "text": "\n<p>The Graphics Interchange Format℠ as specified here should be\nconsidered complete; any deviation from it should be considered invalid,\nincluding but not limited to, the use of reserved or undefined fields within\ncontrol or data blocks, the inclusion of extraneous data within or between\nblocks, the use of methods or algorithms not specifically listed as part of the\nformat, etc. In general, any and all deviations, extensions or modifications\nnot specified in this document should be considered to be in violation of the\n",
                      "markdown": "`\n<p>The Graphics Interchange Format℠ as specified here should be\nconsidered complete; any deviation from it should be considered invalid,\nincluding but not limited to, the use of reserved or undefined fields within\ncontrol or data blocks, the inclusion of extraneous data within or between\nblocks, the use of methods or algorithms not specifically listed as part of the\nformat, etc. In general, any and all deviations, extensions or modifications\nnot specified in this document should be considered to be in violation of the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 52,
                  "endLine": 75,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t</li><li><a href=\"#imagedescriptor\">Image Descriptor</a>\n\t</li><li><a href=\"#localcolortable\">Local Color Table</a>\n\t</li><li><a href=\"#tablebasedimagedata\">Table Based Image Data</a>\n\t</li><li><a href=\"#graphiccontrolextension\">Graphic Control Extension</a>\n\t</li><li><a href=\"#commentextension\">Comment Extension</a>\n\t</li><li><a href=\"#plaintextextension\">Plain Text Extension</a>\n\t</li><li><a href=\"#applicationextension\">Application Extension</a>\n",
                    "rendered": {
                      "text": "\t</li><li><a href=\"#imagedescriptor\">Image Descriptor</a>\n\t</li><li><a href=\"#localcolortable\">Local Color Table</a>\n\t</li><li><a href=\"#tablebasedimagedata\">Table Based Image Data</a>\n\t</li><li><a href=\"#graphiccontrolextension\">Graphic Control Extension</a>\n\t</li><li><a href=\"#commentextension\">Comment Extension</a>\n\t</li><li><a href=\"#plaintextextension\">Plain Text Extension</a>\n\t</li><li><a href=\"#applicationextension\">Application Extension</a>\n",
                      "markdown": "`\t</li><li><a href=\"#imagedescriptor\">Image Descriptor</a>\n\t</li><li><a href=\"#localcolortable\">Local Color Table</a>\n\t</li><li><a href=\"#tablebasedimagedata\">Table Based Image Data</a>\n\t</li><li><a href=\"#graphiccontrolextension\">Graphic Control Extension</a>\n\t</li><li><a href=\"#commentextension\">Comment Extension</a>\n\t</li><li><a href=\"#plaintextextension\">Plain Text Extension</a>\n\t</li><li><a href=\"#applicationextension\">Application Extension</a>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2809,
                  "startColumn": 15,
                  "endLine": 2809,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<p>There will be a Courtesy Directory file located on CompuServe in the PICS\nforum. This directory will contain Application Identifiers for <a href=\"#applicationextension\">Application Extension Blocks</a> that have been\nused by developers of GIF applications. This file is intended to help keep\ndevelopers that wish to create Application Extension Blocks from using the same\nApplication Identifiers. This is not an official directory; it is for voluntary\nparticipation only and does not guarantee that someone will not use the same\nidentifier.</p>\n",
                    "rendered": {
                      "text": "<p>There will be a Courtesy Directory file located on CompuServe in the PICS\nforum. This directory will contain Application Identifiers for <a href=\"#applicationextension\">Application Extension Blocks</a> that have been\nused by developers of GIF applications. This file is intended to help keep\ndevelopers that wish to create Application Extension Blocks from using the same\nApplication Identifiers. This is not an official directory; it is for voluntary\nparticipation only and does not guarantee that someone will not use the same\nidentifier.</p>\n",
                      "markdown": "`<p>There will be a Courtesy Directory file located on CompuServe in the PICS\nforum. This directory will contain Application Identifiers for <a href=\"#applicationextension\">Application Extension Blocks</a> that have been\nused by developers of GIF applications. This file is intended to help keep\ndevelopers that wish to create Application Extension Blocks from using the same\nApplication Identifiers. This is not an official directory; it is for voluntary\nparticipation only and does not guarantee that someone will not use the same\nidentifier.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2799,
                  "startColumn": 17,
                  "endLine": 2799,
                  "endColumn": 23,
                  "snippet": {
                    "text": "this manner, we ask developers of GIF encoding software to <i>not</i> implement\nthis feature until at least January 1991 and later if they see that their\nparticular market is not ready for it. This will give developers of GIF\ndecoding software time to implement this feature and to get it into the hands\nof their clients before the decoders start \"breaking\" on the new GIF's. It is\nnot required that encoders change their software to take advantage of the\ndeferred clear code, but it is for decoders.</p>\n",
                    "rendered": {
                      "text": "this manner, we ask developers of GIF encoding software to <i>not</i> implement\nthis feature until at least January 1991 and later if they see that their\nparticular market is not ready for it. This will give developers of GIF\ndecoding software time to implement this feature and to get it into the hands\nof their clients before the decoders start \"breaking\" on the new GIF's. It is\nnot required that encoders change their software to take advantage of the\ndeferred clear code, but it is for decoders.</p>\n",
                      "markdown": "`this manner, we ask developers of GIF encoding software to <i>not</i> implement\nthis feature until at least January 1991 and later if they see that their\nparticular market is not ready for it. This will give developers of GIF\ndecoding software time to implement this feature and to get it into the hands\nof their clients before the decoders start \"breaking\" on the new GIF's. It is\nnot required that encoders change their software to take advantage of the\ndeferred clear code, but it is for decoders.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2788,
                  "startColumn": 76,
                  "endLine": 2789,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n<p>It is the encoder's decision as to when the table should be cleared. When\nthe table is full, the encoder can chose to use the table as is, making no\nchanges to it until the encoder chooses to clear it. The encoder during this\ntime sends out codes that are of the maximum Code Size.</p>\n\n<p>As we can see from the above, when the decoder's table is full, it must not\nchange the table until a clear code is received. The Code Size is that of the\n",
                    "rendered": {
                      "text": "\n<p>It is the encoder's decision as to when the table should be cleared. When\nthe table is full, the encoder can chose to use the table as is, making no\nchanges to it until the encoder chooses to clear it. The encoder during this\ntime sends out codes that are of the maximum Code Size.</p>\n\n<p>As we can see from the above, when the decoder's table is full, it must not\nchange the table until a clear code is received. The Code Size is that of the\n",
                      "markdown": "`\n<p>It is the encoder's decision as to when the table should be cleared. When\nthe table is full, the encoder can chose to use the table as is, making no\nchanges to it until the encoder chooses to clear it. The encoder during this\ntime sends out codes that are of the maximum Code Size.</p>\n\n<p>As we can see from the above, when the decoder's table is full, it must not\nchange the table until a clear code is received. The Code Size is that of the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2746,
                  "startColumn": 46,
                  "endLine": 2746,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t<td style=\"text-align:center;\"><tt>ESC</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x1B</tt> (27)\n\t\t</td><td rowspan=\"5\">Display image directly to an attached graphics printer.\n\t\tThe image may optionally be displayed on the screen as well.\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\"><tt>[</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x5B</tt> (91)\n",
                    "rendered": {
                      "text": "\t\t<td style=\"text-align:center;\"><tt>ESC</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x1B</tt> (27)\n\t\t</td><td rowspan=\"5\">Display image directly to an attached graphics printer.\n\t\tThe image may optionally be displayed on the screen as well.\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\"><tt>[</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x5B</tt> (91)\n",
                      "markdown": "`\t\t<td style=\"text-align:center;\"><tt>ESC</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x1B</tt> (27)\n\t\t</td><td rowspan=\"5\">Display image directly to an attached graphics printer.\n\t\tThe image may optionally be displayed on the screen as well.\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\"><tt>[</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x5B</tt> (91)\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2724,
                  "startColumn": 43,
                  "endLine": 2725,
                  "snippet": {
                    "text": "\t<tbody><tr>\n\t\t<td style=\"text-align:center;\"><tt>ESC</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x1B</tt> (27)\n\t\t</td><td rowspan=\"5\">Display GIF image on screen\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\"><tt>[</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x5B</tt> (91)\n\t</td></tr><tr>\n",
                    "rendered": {
                      "text": "\t<tbody><tr>\n\t\t<td style=\"text-align:center;\"><tt>ESC</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x1B</tt> (27)\n\t\t</td><td rowspan=\"5\">Display GIF image on screen\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\"><tt>[</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x5B</tt> (91)\n\t</td></tr><tr>\n",
                      "markdown": "`\t<tbody><tr>\n\t\t<td style=\"text-align:center;\"><tt>ESC</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x1B</tt> (27)\n\t\t</td><td rowspan=\"5\">Display GIF image on screen\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\"><tt>[</tt>\n\t\t</td><td style=\"text-align:center;\"><tt>0x5B</tt> (91)\n\t</td></tr><tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2629,
                  "startColumn": 79,
                  "endLine": 2630,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n<p>The GIF Capabilities Enquiry sequence is issued from a host and requests an\ninteractive GIF decoder to return a response message that defines the graphics\nparameters for the decoder. This involves returning information about available\nscreen sizes, number of bits/color supported and the amount of color detail\nsupported. The escape sequence for the GIF Capabilities Enquiry is defined\nas:</p>\n\n",
                    "rendered": {
                      "text": "\n<p>The GIF Capabilities Enquiry sequence is issued from a host and requests an\ninteractive GIF decoder to return a response message that defines the graphics\nparameters for the decoder. This involves returning information about available\nscreen sizes, number of bits/color supported and the amount of color detail\nsupported. The escape sequence for the GIF Capabilities Enquiry is defined\nas:</p>\n\n",
                      "markdown": "`\n<p>The GIF Capabilities Enquiry sequence is issued from a host and requests an\ninteractive GIF decoder to return a response message that defines the graphics\nparameters for the decoder. This involves returning information about available\nscreen sizes, number of bits/color supported and the amount of color detail\nsupported. The escape sequence for the GIF Capabilities Enquiry is defined\nas:</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2550,
                  "startColumn": 22,
                  "endLine": 2550,
                  "endColumn": 28,
                  "snippet": {
                    "text": "series of 8-bit bytes that will be the characters actually stored or\ntransmitted. This provides additional compression of the image. The codes are\nformed into a stream of bits as if they were packed right to left and then\npicked off 8 bits at a time to be output.</p>\n\n<p>Assuming a character array of 8 bits per character and using 5 bit codes to\nbe packed, an example layout would be similar to:</p>\n",
                    "rendered": {
                      "text": "series of 8-bit bytes that will be the characters actually stored or\ntransmitted. This provides additional compression of the image. The codes are\nformed into a stream of bits as if they were packed right to left and then\npicked off 8 bits at a time to be output.</p>\n\n<p>Assuming a character array of 8 bits per character and using 5 bit codes to\nbe packed, an example layout would be similar to:</p>\n",
                      "markdown": "`series of 8-bit bytes that will be the characters actually stored or\ntransmitted. This provides additional compression of the image. The codes are\nformed into a stream of bits as if they were packed right to left and then\npicked off 8 bits at a time to be output.</p>\n\n<p>Assuming a character array of 8 bits per character and using 5 bit codes to\nbe packed, an example layout would be similar to:</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2198,
                  "startColumn": 44,
                  "endLine": 2198,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t</td><td>Label (<tt>0x21</tt>, 33, <tt>'!'</tt>) defining an Extension.\n\t</td></tr><tr>\n\t\t<td>Graphic\n\t\t</td><td>Data which can be rendered on the screen by virtue of some\n\t\talgorithm. The term graphic is more general than the term image; in\n\t\taddition to images, the term graphic also includes data such as text,\n\t\twhich is rendered using character bit-maps.\n",
                    "rendered": {
                      "text": "\t\t</td><td>Label (<tt>0x21</tt>, 33, <tt>'!'</tt>) defining an Extension.\n\t</td></tr><tr>\n\t\t<td>Graphic\n\t\t</td><td>Data which can be rendered on the screen by virtue of some\n\t\talgorithm. The term graphic is more general than the term image; in\n\t\taddition to images, the term graphic also includes data such as text,\n\t\twhich is rendered using character bit-maps.\n",
                      "markdown": "`\t\t</td><td>Label (<tt>0x21</tt>, 33, <tt>'!'</tt>) defining an Extension.\n\t</td></tr><tr>\n\t\t<td>Graphic\n\t\t</td><td>Data which can be rendered on the screen by virtue of some\n\t\talgorithm. The term graphic is more general than the term image; in\n\t\taddition to images, the term graphic also includes data such as text,\n\t\twhich is rendered using character bit-maps.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2148,
                  "startColumn": 34,
                  "endLine": 2148,
                  "endColumn": 42,
                  "snippet": {
                    "text": "</td></tr></tbody></table>\n\n<p><i>Note:</i> The grammar indicates that it is possible for a GIF Data Stream\nto contain the Header, the Logical Screen Descriptor, a Global Color Table and\nthe GIF Trailer. This special case is used to load a GIF decoder with a Global\nColor Table, in preparation for subsequent Data Streams without color tables at\nall.</p>\n",
                    "rendered": {
                      "text": "</td></tr></tbody></table>\n\n<p><i>Note:</i> The grammar indicates that it is possible for a GIF Data Stream\nto contain the Header, the Logical Screen Descriptor, a Global Color Table and\nthe GIF Trailer. This special case is used to load a GIF decoder with a Global\nColor Table, in preparation for subsequent Data Streams without color tables at\nall.</p>\n",
                      "markdown": "`</td></tr></tbody></table>\n\n<p><i>Note:</i> The grammar indicates that it is possible for a GIF Data Stream\nto contain the Header, the Logical Screen Descriptor, a Global Color Table and\nthe GIF Trailer. This special case is used to load a GIF decoder with a Global\nColor Table, in preparation for subsequent Data Streams without color tables at\nall.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2121,
                  "startColumn": 53,
                  "endLine": 2121,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<td>&lt;Logical Screen&gt;\n\t\t</td><td>::=\n\t\t</td><td><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t\t[<a href=\"#globalcolortable\">Global Color Table</a>]\n\t</td></tr><tr>\n\t\t<td>&lt;Data&gt;\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<td>&lt;Logical Screen&gt;\n\t\t</td><td>::=\n\t\t</td><td><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t\t[<a href=\"#globalcolortable\">Global Color Table</a>]\n\t</td></tr><tr>\n\t\t<td>&lt;Data&gt;\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<td>&lt;Logical Screen&gt;\n\t\t</td><td>::=\n\t\t</td><td><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t\t[<a href=\"#globalcolortable\">Global Color Table</a>]\n\t</td></tr><tr>\n\t\t<td>&lt;Data&gt;\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2102,
                  "startColumn": 51,
                  "endLine": 2102,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n<p>This rule defines the entity &lt;GIF Data Stream&gt; as follows. It must\nbegin with a Header. The Header is followed by an entity called Logical Screen,\nwhich is defined below by another rule. The Logical Screen is followed by the\nentity Data, which is also defined below by another rule. Finally, the entity\nData is followed by the Trailer. Since there is no rule defining the Header or\nthe Trailer, this means that these blocks are defined in the document. The\n",
                    "rendered": {
                      "text": "\n<p>This rule defines the entity &lt;GIF Data Stream&gt; as follows. It must\nbegin with a Header. The Header is followed by an entity called Logical Screen,\nwhich is defined below by another rule. The Logical Screen is followed by the\nentity Data, which is also defined below by another rule. Finally, the entity\nData is followed by the Trailer. Since there is no rule defining the Header or\nthe Trailer, this means that these blocks are defined in the document. The\n",
                      "markdown": "`\n<p>This rule defines the entity &lt;GIF Data Stream&gt; as follows. It must\nbegin with a Header. The Header is followed by an entity called Logical Screen,\nwhich is defined below by another rule. The Logical Screen is followed by the\nentity Data, which is also defined below by another rule. Finally, the entity\nData is followed by the Trailer. Since there is no rule defining the Header or\nthe Trailer, this means that these blocks are defined in the document. The\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 2049,
                  "startColumn": 27,
                  "endLine": 2049,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n<ul>\n\t<li>The Header is not subject to Version Numbers.\n\t</li><li>(89a) The Logical Screen Descriptor and the Image Descriptor retained\n\ttheir syntax from version 87a to version 89a, but some fields reserved\n\tunder version 87a are used under version 89a.\n</li></ul>\n",
                    "rendered": {
                      "text": "\n<ul>\n\t<li>The Header is not subject to Version Numbers.\n\t</li><li>(89a) The Logical Screen Descriptor and the Image Descriptor retained\n\ttheir syntax from version 87a to version 89a, but some fields reserved\n\tunder version 87a are used under version 89a.\n</li></ul>\n",
                      "markdown": "`\n<ul>\n\t<li>The Header is not subject to Version Numbers.\n\t</li><li>(89a) The Logical Screen Descriptor and the Image Descriptor retained\n\ttheir syntax from version 87a to version 89a, but some fields reserved\n\tunder version 87a are used under version 89a.\n</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1984,
                  "startColumn": 48,
                  "endLine": 1984,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\t</td><td style=\"text-align:center;\">no\n\t\t</td><td style=\"text-align:center;\">N/A\n\t</td></tr><tr>\n\t\t<td><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t\t</td><td>required (one occurrence)\n\t\t</td><td style=\"text-align:center;\">none\n\t\t</td><td style=\"text-align:center;\">no\n",
                    "rendered": {
                      "text": "\t\t</td><td style=\"text-align:center;\">no\n\t\t</td><td style=\"text-align:center;\">N/A\n\t</td></tr><tr>\n\t\t<td><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t\t</td><td>required (one occurrence)\n\t\t</td><td style=\"text-align:center;\">none\n\t\t</td><td style=\"text-align:center;\">no\n",
                      "markdown": "`\t\t</td><td style=\"text-align:center;\">no\n\t\t</td><td style=\"text-align:center;\">N/A\n\t</td></tr><tr>\n\t\t<td><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t\t</td><td>required (one occurrence)\n\t\t</td><td style=\"text-align:center;\">none\n\t\t</td><td style=\"text-align:center;\">no\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1746,
                  "startColumn": 16,
                  "endLine": 1746,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Image Grid Width:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Image Grid Width:\n\t<ul>\n",
                      "markdown": "`\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Image Grid Width:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1745,
                  "startColumn": 35,
                  "endLine": 1745,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Image Grid Width:\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Image Grid Width:\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Image Grid Width:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1743,
                  "startColumn": 19,
                  "endLine": 1743,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t<li>Column number, in pixels, of the left edge of the text grid, with\n\t\trespect to the left edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n",
                    "rendered": {
                      "text": "\t\t<li>Column number, in pixels, of the left edge of the text grid, with\n\t\trespect to the left edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n",
                      "markdown": "`\t\t<li>Column number, in pixels, of the left edge of the text grid, with\n\t\trespect to the left edge of the Logical Screen.\n\t</li></ul>\n\t</li><li>Text Grid Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the text grid, with\n\t\trespect to the top edge of the Logical Screen.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1661,
                  "startColumn": 32,
                  "endLine": 1661,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t<td style=\"text-align:center;\">2\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t\t</td><td rowspan=\"2\">Text Grid Top Position\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">4\n",
                    "rendered": {
                      "text": "\t\t<td style=\"text-align:center;\">2\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t\t</td><td rowspan=\"2\">Text Grid Top Position\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">4\n",
                      "markdown": "`\t\t<td style=\"text-align:center;\">2\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t\t</td><td rowspan=\"2\">Text Grid Top Position\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">4\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1603,
                  "startColumn": 42,
                  "endLine": 1603,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n<p>The data characters are taken sequentially from the data portion of the\nblock and rendered within a cell, starting with the upper left cell in the grid\nand proceeding from left to right and from top to bottom. Text data is rendered\nuntil the end of data is reached or the character grid is filled. The Character\nGrid contains an integral number of cells; in the case that the cell dimensions\ndo not allow for an integral number, fractional cells must be discarded; an\n",
                    "rendered": {
                      "text": "\n<p>The data characters are taken sequentially from the data portion of the\nblock and rendered within a cell, starting with the upper left cell in the grid\nand proceeding from left to right and from top to bottom. Text data is rendered\nuntil the end of data is reached or the character grid is filled. The Character\nGrid contains an integral number of cells; in the case that the cell dimensions\ndo not allow for an integral number, fractional cells must be discarded; an\n",
                      "markdown": "`\n<p>The data characters are taken sequentially from the data portion of the\nblock and rendered within a cell, starting with the upper left cell in the grid\nand proceeding from left to right and from top to bottom. Text data is rendered\nuntil the end of data is reached or the character grid is filled. The Character\nGrid contains an integral number of cells; in the case that the cell dimensions\ndo not allow for an integral number, fractional cells must be discarded; an\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1468,
                  "startColumn": 57,
                  "endLine": 1468,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\tdecoder may sound the bell (<tt>0x07</tt>, 7) to alert the user that\n\t\tinput is being expected. In the absence of a specified Delay Time, the\n\t\tdecoder should wait for user input indefinitely. It is recommended that\n\t\tthe encoder not set the User Input Flag without a Delay Time specified.\n\t</li></ul>\n</li></ol>\n\n",
                    "rendered": {
                      "text": "\t\tdecoder may sound the bell (<tt>0x07</tt>, 7) to alert the user that\n\t\tinput is being expected. In the absence of a specified Delay Time, the\n\t\tdecoder should wait for user input indefinitely. It is recommended that\n\t\tthe encoder not set the User Input Flag without a Delay Time specified.\n\t</li></ul>\n</li></ol>\n\n",
                      "markdown": "`\t\tdecoder may sound the bell (<tt>0x07</tt>, 7) to alert the user that\n\t\tinput is being expected. In the absence of a specified Delay Time, the\n\t\tdecoder should wait for user input indefinitely. It is recommended that\n\t\tthe encoder not set the User Input Flag without a Delay Time specified.\n\t</li></ul>\n</li></ol>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1406,
                  "startColumn": 1,
                  "endLine": 1406,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t</li></ul>\n\t\t</li><li>When a Delay Time is used and the User Input Flag is set,\n\t\tprocessing will continue when user input is received or when the delay\n\t\ttime expires, whichever occurs first.\n\t</li></ul>\n\t</li><li>Transparency Flag:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t\t</li></ul>\n\t\t</li><li>When a Delay Time is used and the User Input Flag is set,\n\t\tprocessing will continue when user input is received or when the delay\n\t\ttime expires, whichever occurs first.\n\t</li></ul>\n\t</li><li>Transparency Flag:\n\t<ul>\n",
                      "markdown": "`\t\t</li></ul>\n\t\t</li><li>When a Delay Time is used and the User Input Flag is set,\n\t\tprocessing will continue when user input is received or when the delay\n\t\ttime expires, whichever occurs first.\n\t</li></ul>\n\t</li><li>Transparency Flag:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1404,
                  "startColumn": 23,
                  "endLine": 1404,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t<li>0: User input is not expected.\n\t\t\t</li><li>1: User input is expected.\n\t\t</li></ul>\n\t\t</li><li>When a Delay Time is used and the User Input Flag is set,\n\t\tprocessing will continue when user input is received or when the delay\n\t\ttime expires, whichever occurs first.\n\t</li></ul>\n",
                    "rendered": {
                      "text": "\t\t\t<li>0: User input is not expected.\n\t\t\t</li><li>1: User input is expected.\n\t\t</li></ul>\n\t\t</li><li>When a Delay Time is used and the User Input Flag is set,\n\t\tprocessing will continue when user input is received or when the delay\n\t\ttime expires, whichever occurs first.\n\t</li></ul>\n",
                      "markdown": "`\t\t\t<li>0: User input is not expected.\n\t\t\t</li><li>1: User input is expected.\n\t\t</li></ul>\n\t\t</li><li>When a Delay Time is used and the User Input Flag is set,\n\t\tprocessing will continue when user input is received or when the delay\n\t\ttime expires, whichever occurs first.\n\t</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1319,
                  "startColumn": 28,
                  "endLine": 1320,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">2\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Delay Time\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t</td></tr><tr>\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">2\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Delay Time\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t</td></tr><tr>\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">2\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Delay Time\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t</td></tr><tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1197,
                  "startColumn": 38,
                  "endLine": 1197,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\nindices is encoded using the LZW Algorithm with variable-length code, as\ndescribed in <a href=\"#lzw\">Appendix F</a>.</p>\n",
                    "rendered": {
                      "text": "\n<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\nindices is encoded using the LZW Algorithm with variable-length code, as\ndescribed in <a href=\"#lzw\">Appendix F</a>.</p>\n",
                      "markdown": "`\n<p>The image data for a table based image consists of a sequence of <a href=\"#subblocks\">sub-blocks</a>, of size at most 255 bytes each, containing an\nindex into the active color table, for each pixel in the image. Pixel indices\nare in order of left to right and from top to bottom. Each index must be within\nthe range of the size of the active color table, starting at 0. The sequence of\nindices is encoded using the LZW Algorithm with variable-length code, as\ndescribed in <a href=\"#lzw\">Appendix F</a>.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1040,
                  "startColumn": 60,
                  "endLine": 1040,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n",
                      "markdown": "`\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1040,
                  "startColumn": 37,
                  "endLine": 1040,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n",
                      "markdown": "`\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1040,
                  "startColumn": 5,
                  "endLine": 1040,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n",
                      "markdown": "`\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1039,
                  "startColumn": 35,
                  "endLine": 1039,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Width:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 15,
                  "endLine": 1037,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\trespect to the left edge of the Logical Screen. Leftmost column of the\n\t\tLogical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n",
                    "rendered": {
                      "text": "\t\trespect to the left edge of the Logical Screen. Leftmost column of the\n\t\tLogical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n",
                      "markdown": "`\t\trespect to the left edge of the Logical Screen. Leftmost column of the\n\t\tLogical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n\t\t<li>Row number, in pixels, of the top edge of the image with respect to\n\t\tthe top edge of the Logical Screen. Top row of the Logical Screen is 0.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 1035,
                  "startColumn": 9,
                  "endLine": 1035,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t<ul>\n\t\t<li>Column number, in pixels, of the left edge of the image, with\n\t\trespect to the left edge of the Logical Screen. Leftmost column of the\n\t\tLogical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n",
                    "rendered": {
                      "text": "\t<ul>\n\t\t<li>Column number, in pixels, of the left edge of the image, with\n\t\trespect to the left edge of the Logical Screen. Leftmost column of the\n\t\tLogical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n",
                      "markdown": "`\t<ul>\n\t\t<li>Column number, in pixels, of the left edge of the image, with\n\t\trespect to the left edge of the Logical Screen. Leftmost column of the\n\t\tLogical Screen is 0.\n\t</li></ul>\n\t</li><li>Image Top Position:\n\t<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 976,
                  "startColumn": 28,
                  "endLine": 976,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Image Top Position\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">4\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Image Top Position\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">4\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Image Top Position\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">4\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 927,
                  "startColumn": 94,
                  "endLine": 927,
                  "endColumn": 102,
                  "snippet": {
                    "text": "\n<p>Each image in the Data Stream is composed of an Image Descriptor, an\noptional <a href=\"#localcolortable\">Local Color Table</a>, and the <a href=\"#tablebasedimagedata\">image data</a>. Each image must fit within the\nboundaries of the Logical Screen, as defined in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>.</p>\n\n<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\n",
                    "rendered": {
                      "text": "\n<p>Each image in the Data Stream is composed of an Image Descriptor, an\noptional <a href=\"#localcolortable\">Local Color Table</a>, and the <a href=\"#tablebasedimagedata\">image data</a>. Each image must fit within the\nboundaries of the Logical Screen, as defined in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>.</p>\n\n<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\n",
                      "markdown": "`\n<p>Each image in the Data Stream is composed of an Image Descriptor, an\noptional <a href=\"#localcolortable\">Local Color Table</a>, and the <a href=\"#tablebasedimagedata\">image data</a>. Each image must fit within the\nboundaries of the Logical Screen, as defined in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>.</p>\n\n<p>The Image Descriptor contains the parameters necessary to process a table\nbased image. The coordinates given in this block refer to coordinates within\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 853,
                  "startColumn": 31,
                  "endLine": 853,
                  "endColumn": 39,
                  "snippet": {
                    "text": "<span class=\"rcomp\">red</span>-<span class=\"gcomp\">green</span>-<span class=\"bcomp\">blue</span> color triplets. The Global Color Table is used by\nimages without a <a href=\"#localcolortable\">Local Color Table</a> and by <a href=\"#plaintextextension\">Plain Text Extensions</a>. Its presence is marked by\nthe Global Color Table Flag being set to 1 in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>; if present, it\nimmediately follows the Logical Screen Descriptor and contains a number of\nbytes equal to:</p>\n\n<blockquote>\n",
                    "rendered": {
                      "text": "<span class=\"rcomp\">red</span>-<span class=\"gcomp\">green</span>-<span class=\"bcomp\">blue</span> color triplets. The Global Color Table is used by\nimages without a <a href=\"#localcolortable\">Local Color Table</a> and by <a href=\"#plaintextextension\">Plain Text Extensions</a>. Its presence is marked by\nthe Global Color Table Flag being set to 1 in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>; if present, it\nimmediately follows the Logical Screen Descriptor and contains a number of\nbytes equal to:</p>\n\n<blockquote>\n",
                      "markdown": "`<span class=\"rcomp\">red</span>-<span class=\"gcomp\">green</span>-<span class=\"bcomp\">blue</span> color triplets. The Global Color Table is used by\nimages without a <a href=\"#localcolortable\">Local Color Table</a> and by <a href=\"#plaintextextension\">Plain Text Extensions</a>. Its presence is marked by\nthe Global Color Table Flag being set to 1 in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>; if present, it\nimmediately follows the Logical Screen Descriptor and contains a number of\nbytes equal to:</p>\n\n<blockquote>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 92,
                  "endLine": 852,
                  "endColumn": 100,
                  "snippet": {
                    "text": "> color triplets. The Global Color Table is used by\nimages without a <a href=\"#localcolortable\">Local Color Table</a> and by <a href=\"#plaintextextension\">Plain Text Extensions</a>. Its presence is marked by\nthe Global Color Table Flag being set to 1 in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>; if present, it\nimmediately follows the Logical Screen Descriptor and contains a number of\nbytes equal to:</p>\n\n<blockquote>\n\t<p>3 × 2<sup>Size of Global Color Table + 1</sup></p>\n</blockquote>\n\n<p>This block is <i>optional</i>; at most one Global Color Table may be present\nper Data S",
                    "rendered": {
                      "text": "> color triplets. The Global Color Table is used by\nimages without a <a href=\"#localcolortable\">Local Color Table</a> and by <a href=\"#plaintextextension\">Plain Text Extensions</a>. Its presence is marked by\nthe Global Color Table Flag being set to 1 in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>; if present, it\nimmediately follows the Logical Screen Descriptor and contains a number of\nbytes equal to:</p>\n\n<blockquote>\n\t<p>3 × 2<sup>Size of Global Color Table + 1</sup></p>\n</blockquote>\n\n<p>This block is <i>optional</i>; at most one Global Color Table may be present\nper Data S",
                      "markdown": "`> color triplets. The Global Color Table is used by\nimages without a <a href=\"#localcolortable\">Local Color Table</a> and by <a href=\"#plaintextextension\">Plain Text Extensions</a>. Its presence is marked by\nthe Global Color Table Flag being set to 1 in the <a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>; if present, it\nimmediately follows the Logical Screen Descriptor and contains a number of\nbytes equal to:</p>\n\n<blockquote>\n\t<p>3 × 2<sup>Size of Global Color Table + 1</sup></p>\n</blockquote>\n\n<p>This block is <i>optional</i>; at most one Global Color Table may be present\nper Data S`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 810,
                  "startColumn": 60,
                  "endLine": 810,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t</li><li>Background Color Index:\n\t<ul>\n\t\t<li>Index into the Global Color Table for the Background Color. The\n\t\tBackground Color is the color used for those pixels on the screen that\n\t\tare not covered by an image. If the Global Color Table Flag is set to\n\t\t(zero), this field should be zero and should be ignored.\n\t</li></ul>\n",
                    "rendered": {
                      "text": "\t</li><li>Background Color Index:\n\t<ul>\n\t\t<li>Index into the Global Color Table for the Background Color. The\n\t\tBackground Color is the color used for those pixels on the screen that\n\t\tare not covered by an image. If the Global Color Table Flag is set to\n\t\t(zero), this field should be zero and should be ignored.\n\t</li></ul>\n",
                      "markdown": "`\t</li><li>Background Color Index:\n\t<ul>\n\t\t<li>Index into the Global Color Table for the Background Color. The\n\t\tBackground Color is the color used for those pixels on the screen that\n\t\tare not covered by an image. If the Global Color Table Flag is set to\n\t\t(zero), this field should be zero and should be ignored.\n\t</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 1,
                  "endLine": 759,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t<ul>\n\t\t<li>Flag indicating the presence of a Global Color Table; if the flag\n\t\tis set, the Global Color Table will immediately follow the Logical\n\t\tScreen Descriptor. This flag also selects the interpretation of the\n\t\tBackground Color Index; if the flag is set, the value of the Background\n\t\tColor Index field should be used as the table index of the background\n\t\tcolor. (This field is the most significant bit of the byte.)\n",
                    "rendered": {
                      "text": "\t<ul>\n\t\t<li>Flag indicating the presence of a Global Color Table; if the flag\n\t\tis set, the Global Color Table will immediately follow the Logical\n\t\tScreen Descriptor. This flag also selects the interpretation of the\n\t\tBackground Color Index; if the flag is set, the value of the Background\n\t\tColor Index field should be used as the table index of the background\n\t\tcolor. (This field is the most significant bit of the byte.)\n",
                      "markdown": "`\t<ul>\n\t\t<li>Flag indicating the presence of a Global Color Table; if the flag\n\t\tis set, the Global Color Table will immediately follow the Logical\n\t\tScreen Descriptor. This flag also selects the interpretation of the\n\t\tBackground Color Index; if the flag is set, the value of the Background\n\t\tColor Index field should be used as the table index of the background\n\t\tcolor. (This field is the most significant bit of the byte.)\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 752,
                  "startColumn": 39,
                  "endLine": 752,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t</li></ul>\n\t</li><li>Logical Screen Height:\n\t<ul>\n\t\t<li>Height, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Global Color Table Flag:\n",
                    "rendered": {
                      "text": "\t</li></ul>\n\t</li><li>Logical Screen Height:\n\t<ul>\n\t\t<li>Height, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Global Color Table Flag:\n",
                      "markdown": "`\t</li></ul>\n\t</li><li>Logical Screen Height:\n\t<ul>\n\t\t<li>Height, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Global Color Table Flag:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 750,
                  "startColumn": 17,
                  "endLine": 750,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Logical Screen Height:\n\t<ul>\n\t\t<li>Height, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n",
                    "rendered": {
                      "text": "\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Logical Screen Height:\n\t<ul>\n\t\t<li>Height, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n",
                      "markdown": "`\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Logical Screen Height:\n\t<ul>\n\t\t<li>Height, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 38,
                  "endLine": 747,
                  "endColumn": 46,
                  "snippet": {
                    "text": "<ol style=\"list-style-type:lower-roman;\">\n\t<li>Logical Screen Width:\n\t<ul>\n\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Logical Screen Height:\n",
                    "rendered": {
                      "text": "<ol style=\"list-style-type:lower-roman;\">\n\t<li>Logical Screen Width:\n\t<ul>\n\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Logical Screen Height:\n",
                      "markdown": "`<ol style=\"list-style-type:lower-roman;\">\n\t<li>Logical Screen Width:\n\t<ul>\n\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n\t</li></ul>\n\t</li><li>Logical Screen Height:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 12,
                  "endLine": 745,
                  "endColumn": 20,
                  "snippet": {
                    "text": "</td></tr></tbody></table>\n\n<ol style=\"list-style-type:lower-roman;\">\n\t<li>Logical Screen Width:\n\t<ul>\n\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n",
                    "rendered": {
                      "text": "</td></tr></tbody></table>\n\n<ol style=\"list-style-type:lower-roman;\">\n\t<li>Logical Screen Width:\n\t<ul>\n\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n",
                      "markdown": "`</td></tr></tbody></table>\n\n<ol style=\"list-style-type:lower-roman;\">\n\t<li>Logical Screen Width:\n\t<ul>\n\t\t<li>Width, in pixels, of the Logical Screen where the images will be\n\t\trendered in the displaying device.\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 703,
                  "startColumn": 30,
                  "endLine": 703,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">2\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Logical Screen Height\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n",
                    "rendered": {
                      "text": "\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">2\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Logical Screen Height\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n",
                      "markdown": "`\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">2\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Logical Screen Height\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">3\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 30,
                  "endLine": 696,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t</th></tr><tr>\n\t\t<td style=\"text-align:center;\">0\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Logical Screen Width\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">1\n",
                    "rendered": {
                      "text": "\t</th></tr><tr>\n\t\t<td style=\"text-align:center;\">0\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Logical Screen Width\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">1\n",
                      "markdown": "`\t</th></tr><tr>\n\t\t<td style=\"text-align:center;\">0\n\t\t</td><td rowspan=\"2\" colspan=\"8\">\n\t\t</td><td rowspan=\"2\">Logical Screen Width\n\t\t</td><td rowspan=\"2\">Unsigned\n\t</td></tr><tr>\n\t\t<td style=\"text-align:center;\">1\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 668,
                  "startColumn": 53,
                  "endLine": 668,
                  "endColumn": 61,
                  "snippet": {
                    "text": "display device. This implies that they could refer to window coordinates in a\nwindow-based environment or printer coordinates when a printer is used.</p>\n\n<p>This block is <i>required</i>; exactly one Logical Screen Descriptor must be\npresent per Data Stream.</p>\n\n<h3>b. Required Version</h3>\n",
                    "rendered": {
                      "text": "display device. This implies that they could refer to window coordinates in a\nwindow-based environment or printer coordinates when a printer is used.</p>\n\n<p>This block is <i>required</i>; exactly one Logical Screen Descriptor must be\npresent per Data Stream.</p>\n\n<h3>b. Required Version</h3>\n",
                      "markdown": "`display device. This implies that they could refer to window coordinates in a\nwindow-based environment or printer coordinates when a printer is used.</p>\n\n<p>This block is <i>required</i>; exactly one Logical Screen Descriptor must be\npresent per Data Stream.</p>\n\n<h3>b. Required Version</h3>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 661,
                  "startColumn": 14,
                  "endLine": 661,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n<h3>a. Description</h3>\n\n<p>The Logical Screen Descriptor contains the parameters necessary to define\nthe area of the display device within which the images will be rendered. The\ncoordinates in this block are given with respect to the top-left corner of the\nvirtual screen; they do not necessarily refer to absolute coordinates on the\n",
                    "rendered": {
                      "text": "\n<h3>a. Description</h3>\n\n<p>The Logical Screen Descriptor contains the parameters necessary to define\nthe area of the display device within which the images will be rendered. The\ncoordinates in this block are given with respect to the top-left corner of the\nvirtual screen; they do not necessarily refer to absolute coordinates on the\n",
                      "markdown": "`\n<h3>a. Description</h3>\n\n<p>The Logical Screen Descriptor contains the parameters necessary to define\nthe area of the display device within which the images will be rendered. The\ncoordinates in this block are given with respect to the top-left corner of the\nvirtual screen; they do not necessarily refer to absolute coordinates on the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 655,
                  "startColumn": 44,
                  "endLine": 655,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n</div>\n\n<h2 id=\"logicalscreendescriptor\">18. Logical Screen Descriptor <span onclick=\"ToggleVis(18);\">(hide/show)</span></h2>\n\n<div id=\"p18\">\n\n",
                    "rendered": {
                      "text": "\n</div>\n\n<h2 id=\"logicalscreendescriptor\">18. Logical Screen Descriptor <span onclick=\"ToggleVis(18);\">(hide/show)</span></h2>\n\n<div id=\"p18\">\n\n",
                      "markdown": "`\n</div>\n\n<h2 id=\"logicalscreendescriptor\">18. Logical Screen Descriptor <span onclick=\"ToggleVis(18);\">(hide/show)</span></h2>\n\n<div id=\"p18\">\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 71,
                  "endLine": 387,
                  "snippet": {
                    "text": "are neither used to control the process of the Data Stream nor do they contain\ninformation or data used to render a graphic on the display device.</p>\n\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\nDescriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\n",
                    "rendered": {
                      "text": "are neither used to control the process of the Data Stream nor do they contain\ninformation or data used to render a graphic on the display device.</p>\n\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\nDescriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\n",
                      "markdown": "`are neither used to control the process of the Data Stream nor do they contain\ninformation or data used to render a graphic on the display device.</p>\n\n<p>With the exception of the <a href=\"#logicalscreendescriptor\">Logical Screen\nDescriptor</a> and the <a href=\"#globalcolortable\">Global Color Table</a>,\nwhose scope is the entire Data Stream, all other Control blocks have a limited\nscope, restricted to the Graphic-Rendering block that follows them. Special\nPurpose blocks do not delimit the scope of any Control blocks; Special Purpose\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 72,
                  "endLine": 371,
                  "snippet": {
                    "text": "<p>Blocks can be classified into three groups: Control, Graphic-Rendering and\nSpecial Purpose.</p>\n\n<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n",
                    "rendered": {
                      "text": "<p>Blocks can be classified into three groups: Control, Graphic-Rendering and\nSpecial Purpose.</p>\n\n<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n",
                      "markdown": "`<p>Blocks can be classified into three groups: Control, Graphic-Rendering and\nSpecial Purpose.</p>\n\n<p>Control blocks, such as the <a href=\"#header\">Header</a>, the Logical Screen\nDescriptor, the <a href=\"#graphiccontrolextension\">Graphic Control\nExtension</a> and the <a href=\"#trailer\">Trailer</a>, contain information used\nto control the process of the Data Stream or information used in setting\nhardware parameters.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 42,
                  "endLine": 356,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n<p>The Definition of the GIF Format allows for a Data Stream to contain only\nthe <a href=\"#header\">Header</a>, the\n<a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>, a Global\nColor Table and the <a href=\"#trailer\">GIF Trailer</a>. Such a Data Stream\nwould be used to load a decoder with a Global Color Table, in preparation for\nsubsequent Data Streams without a color table at all.</p>\n",
                    "rendered": {
                      "text": "\n<p>The Definition of the GIF Format allows for a Data Stream to contain only\nthe <a href=\"#header\">Header</a>, the\n<a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>, a Global\nColor Table and the <a href=\"#trailer\">GIF Trailer</a>. Such a Data Stream\nwould be used to load a decoder with a Global Color Table, in preparation for\nsubsequent Data Streams without a color table at all.</p>\n",
                      "markdown": "`\n<p>The Definition of the GIF Format allows for a Data Stream to contain only\nthe <a href=\"#header\">Header</a>, the\n<a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>, a Global\nColor Table and the <a href=\"#trailer\">GIF Trailer</a>. Such a Data Stream\nwould be used to load a decoder with a Global Color Table, in preparation for\nsubsequent Data Streams without a color table at all.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 50,
                  "endLine": 266,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t</li><li>To the extent possible, avoid grouping graphics which might require\n\tresetting hardware parameters during the decoding process.\n\t</li><li>Set to zero (off) each of the bits of each and every field designated\n\tas reserved. Note that some fields in the Logical Screen Descriptor and the\n\t<a href=\"#imagedescriptor\">Image Descriptor</a> were reserved under Version\n\t87a, but are used under version 89a.\n</li></ul>\n",
                    "rendered": {
                      "text": "\t</li><li>To the extent possible, avoid grouping graphics which might require\n\tresetting hardware parameters during the decoding process.\n\t</li><li>Set to zero (off) each of the bits of each and every field designated\n\tas reserved. Note that some fields in the Logical Screen Descriptor and the\n\t<a href=\"#imagedescriptor\">Image Descriptor</a> were reserved under Version\n\t87a, but are used under version 89a.\n</li></ul>\n",
                      "markdown": "`\t</li><li>To the extent possible, avoid grouping graphics which might require\n\tresetting hardware parameters during the decoding process.\n\t</li><li>Set to zero (off) each of the bits of each and every field designated\n\tas reserved. Note that some fields in the Logical Screen Descriptor and the\n\t<a href=\"#imagedescriptor\">Image Descriptor</a> were reserved under Version\n\t87a, but are used under version 89a.\n</li></ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 11,
                  "endLine": 189,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Version refers to the version number that an encoder will have to use if the\ncorresponding block is used in the Data Stream. Within each section, a diagram\ndescribes the individual fields in the block; the diagrams are drawn\nvertically; top bytes in the diagram appear first in the Data Stream. Bits\nwithin a byte are drawn most significant on the left end. Multi-byte numeric\nfields are ordered Least Significant Byte first. Numeric constants are\nrepresented as Hexadecimal numbers, preceded by <tt>\"0x\"</tt>. Bit fields\n",
                    "rendered": {
                      "text": "Version refers to the version number that an encoder will have to use if the\ncorresponding block is used in the Data Stream. Within each section, a diagram\ndescribes the individual fields in the block; the diagrams are drawn\nvertically; top bytes in the diagram appear first in the Data Stream. Bits\nwithin a byte are drawn most significant on the left end. Multi-byte numeric\nfields are ordered Least Significant Byte first. Numeric constants are\nrepresented as Hexadecimal numbers, preceded by <tt>\"0x\"</tt>. Bit fields\n",
                      "markdown": "`Version refers to the version number that an encoder will have to use if the\ncorresponding block is used in the Data Stream. Within each section, a diagram\ndescribes the individual fields in the block; the diagrams are drawn\nvertically; top bytes in the diagram appear first in the Data Stream. Bits\nwithin a byte are drawn most significant on the left end. Multi-byte numeric\nfields are ordered Least Significant Byte first. Numeric constants are\nrepresented as Hexadecimal numbers, preceded by <tt>\"0x\"</tt>. Bit fields\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 26,
                  "endLine": 172,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n<p>CompuServe Incorporated maintains a mailing list with all those individuals\nand organizations who wish to receive copies of this document when it is\ncorrected or revised. This service is offered free of charge; please provide us\nwith your mailing address.</p>\n\n</div>\n",
                    "rendered": {
                      "text": "\n<p>CompuServe Incorporated maintains a mailing list with all those individuals\nand organizations who wish to receive copies of this document when it is\ncorrected or revised. This service is offered free of charge; please provide us\nwith your mailing address.</p>\n\n</div>\n",
                      "markdown": "`\n<p>CompuServe Incorporated maintains a mailing list with all those individuals\nand organizations who wish to receive copies of this document when it is\ncorrected or revised. This service is offered free of charge; please provide us\nwith your mailing address.</p>\n\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 21,
                  "endLine": 171,
                  "endColumn": 27,
                  "snippet": {
                    "text": "</blockquote>\n\n<p>CompuServe Incorporated maintains a mailing list with all those individuals\nand organizations who wish to receive copies of this document when it is\ncorrected or revised. This service is offered free of charge; please provide us\nwith your mailing address.</p>\n\n",
                    "rendered": {
                      "text": "</blockquote>\n\n<p>CompuServe Incorporated maintains a mailing list with all those individuals\nand organizations who wish to receive copies of this document when it is\ncorrected or revised. This service is offered free of charge; please provide us\nwith your mailing address.</p>\n\n",
                      "markdown": "`</blockquote>\n\n<p>CompuServe Incorporated maintains a mailing list with all those individuals\nand organizations who wish to receive copies of this document when it is\ncorrected or revised. This service is offered free of charge; please provide us\nwith your mailing address.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 35,
                  "endLine": 156,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n<blockquote>\n\t<p><i>The Graphics Interchange Format© is the Copyright property of\n\tCompuServe Incorporated. GIF℠ is a Service Mark property of\n\tCompuServe Incorporated.</i></p>\n</blockquote>\n\n",
                    "rendered": {
                      "text": "\n<blockquote>\n\t<p><i>The Graphics Interchange Format© is the Copyright property of\n\tCompuServe Incorporated. GIF℠ is a Service Mark property of\n\tCompuServe Incorporated.</i></p>\n</blockquote>\n\n",
                      "markdown": "`\n<blockquote>\n\t<p><i>The Graphics Interchange Format© is the Copyright property of\n\tCompuServe Incorporated. GIF℠ is a Service Mark property of\n\tCompuServe Incorporated.</i></p>\n</blockquote>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 38,
                  "endLine": 151,
                  "endColumn": 46,
                  "snippet": {
                    "text": "Documentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n\n<blockquote>\n",
                    "rendered": {
                      "text": "Documentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n\n<blockquote>\n",
                      "markdown": "`Documentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n\n<blockquote>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 78,
                  "endLine": 151,
                  "endColumn": 7,
                  "snippet": {
                    "text": "GIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n\n<blockquote>\n",
                    "rendered": {
                      "text": "GIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n\n<blockquote>\n",
                      "markdown": "`GIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n\n<blockquote>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 52,
                  "endLine": 149,
                  "endColumn": 61,
                  "snippet": {
                    "text": "Incorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n",
                    "rendered": {
                      "text": "Incorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n",
                      "markdown": "`Incorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\nsuch as the following may be used:</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 33,
                  "endLine": 148,
                  "endColumn": 41,
                  "snippet": {
                    "text": "the Graphics Interchange Format and its Service Mark by CompuServe\nIncorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\n",
                    "rendered": {
                      "text": "the Graphics Interchange Format and its Service Mark by CompuServe\nIncorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\n",
                      "markdown": "`the Graphics Interchange Format and its Service Mark by CompuServe\nIncorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\nownership of the Graphics Interchange Format and the Service Mark by CompuServe\nIncorporated; in this case, the acknowledgement may be displayed in an opening\nscreen or leading banner, or a closing screen or trailing banner. A message\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 39,
                  "endLine": 145,
                  "endColumn": 48,
                  "snippet": {
                    "text": "<p>CompuServe Incorporated hereby grants a limited, non-exclusive, royalty-free\nlicense for the use of the Graphics Interchange Format℠ in computer\nsoftware; computer software utilizing GIF℠ must acknowledge ownership of\nthe Graphics Interchange Format and its Service Mark by CompuServe\nIncorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\n",
                    "rendered": {
                      "text": "<p>CompuServe Incorporated hereby grants a limited, non-exclusive, royalty-free\nlicense for the use of the Graphics Interchange Format℠ in computer\nsoftware; computer software utilizing GIF℠ must acknowledge ownership of\nthe Graphics Interchange Format and its Service Mark by CompuServe\nIncorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\n",
                      "markdown": "`<p>CompuServe Incorporated hereby grants a limited, non-exclusive, royalty-free\nlicense for the use of the Graphics Interchange Format℠ in computer\nsoftware; computer software utilizing GIF℠ must acknowledge ownership of\nthe Graphics Interchange Format and its Service Mark by CompuServe\nIncorporated, in User and Technical Documentation. Computer software utilizing\nGIF, which is distributed or may be distributed without User or Technical\nDocumentation must display to the screen or printer a message acknowledging\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifstandard/GIF89a.html"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 52,
                  "endLine": 70,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t</li><li><a href=\"#subblocks\">Data Sub-blocks</a>\n\t</li><li><a href=\"#blockterminator\">Block Terminator</a>\n\t</li><li><a href=\"#header\">Header</a>\n\t</li><li><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t</li><li><a href=\"#globalcolortable\">Global Color Table</a>\n\t</li><li><a href=\"#imagedescriptor\">Image Descriptor</a>\n\t</li><li><a href=\"#localcolortable\">Local Color Table</a>\n",
                    "rendered": {
                      "text": "\t</li><li><a href=\"#subblocks\">Data Sub-blocks</a>\n\t</li><li><a href=\"#blockterminator\">Block Terminator</a>\n\t</li><li><a href=\"#header\">Header</a>\n\t</li><li><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t</li><li><a href=\"#globalcolortable\">Global Color Table</a>\n\t</li><li><a href=\"#imagedescriptor\">Image Descriptor</a>\n\t</li><li><a href=\"#localcolortable\">Local Color Table</a>\n",
                      "markdown": "`\t</li><li><a href=\"#subblocks\">Data Sub-blocks</a>\n\t</li><li><a href=\"#blockterminator\">Block Terminator</a>\n\t</li><li><a href=\"#header\">Header</a>\n\t</li><li><a href=\"#logicalscreendescriptor\">Logical Screen Descriptor</a>\n\t</li><li><a href=\"#globalcolortable\">Global Color Table</a>\n\t</li><li><a href=\"#imagedescriptor\">Image Descriptor</a>\n\t</li><li><a href=\"#localcolortable\">Local Color Table</a>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapdiffer"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "endLine": 20,
                  "endColumn": 38,
                  "snippet": {
                    "text": "# SPDX-FileCopyrightText: (C) Eric S. Raymond <esr@thyrsus.com>\n# SPDX-License-Identifier: MIT-0\n#\n# A newer version may be available at https://gitlab.com/esr/tapview\n# Check your last commit dqte for this file against the commit list\n# there to see if it might be a good idea to update.\n#\n",
                    "rendered": {
                      "text": "# SPDX-FileCopyrightText: (C) Eric S. Raymond <esr@thyrsus.com>\n# SPDX-License-Identifier: MIT-0\n#\n# A newer version may be available at https://gitlab.com/esr/tapview\n# Check your last commit dqte for this file against the commit list\n# there to see if it might be a good idea to update.\n#\n",
                      "markdown": "`# SPDX-FileCopyrightText: (C) Eric S. Raymond <esr@thyrsus.com>\n# SPDX-License-Identifier: MIT-0\n#\n# A newer version may be available at https://gitlab.com/esr/tapview\n# Check your last commit dqte for this file against the commit list\n# there to see if it might be a good idea to update.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapdiffer"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tif [ ! \"${QUIET}\" = 1 ]\n\tthen\n\t\techo \"  --- |\"\n\t\tsed </tmp/tapdiff$$ -e 's/^/  /'\n\t\techo \"  ...\"\n\tfi\nfi\n",
                    "rendered": {
                      "text": "\tif [ ! \"${QUIET}\" = 1 ]\n\tthen\n\t\techo \"  --- |\"\n\t\tsed </tmp/tapdiff$$ -e 's/^/  /'\n\t\techo \"  ...\"\n\tfi\nfi\n",
                      "markdown": "`\tif [ ! \"${QUIET}\" = 1 ]\n\tthen\n\t\techo \"  --- |\"\n\t\tsed </tmp/tapdiff$$ -e 's/^/  /'\n\t\techo \"  ...\"\n\tfi\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapdiffer"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 2,
                  "endLine": 40,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\ntrap 'rm /tmp/tapdiff$$' EXIT HUP INT QUIT TERM\n\nif diff --text \"${diffopts}\" \"${checkfile}\" - >/tmp/tapdiff$$\nthen\n\techo \"ok - ${legend}\"\nelse\n",
                    "rendered": {
                      "text": "\ntrap 'rm /tmp/tapdiff$$' EXIT HUP INT QUIT TERM\n\nif diff --text \"${diffopts}\" \"${checkfile}\" - >/tmp/tapdiff$$\nthen\n\techo \"ok - ${legend}\"\nelse\n",
                      "markdown": "`\ntrap 'rm /tmp/tapdiff$$' EXIT HUP INT QUIT TERM\n\nif diff --text \"${diffopts}\" \"${checkfile}\" - >/tmp/tapdiff$$\nthen\n\techo \"ok - ${legend}\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapdiffer"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# Usage: tapdiffer LEGEND CHECKFILE\n#\n# Output is a TAP report, ok if the diff is empty and not ok otherwise.\n# A nonempty diff is shipped as a TAP YAML block following \"not ok\" \n# unless QUIET=1 in the environment.\n#\n# This code is intended to be embedded in your project. The author\n",
                    "rendered": {
                      "text": "# Usage: tapdiffer LEGEND CHECKFILE\n#\n# Output is a TAP report, ok if the diff is empty and not ok otherwise.\n# A nonempty diff is shipped as a TAP YAML block following \"not ok\" \n# unless QUIET=1 in the environment.\n#\n# This code is intended to be embedded in your project. The author\n",
                      "markdown": "`# Usage: tapdiffer LEGEND CHECKFILE\n#\n# Output is a TAP report, ok if the diff is empty and not ok otherwise.\n# A nonempty diff is shipped as a TAP YAML block following \"not ok\" \n# unless QUIET=1 in the environment.\n#\n# This code is intended to be embedded in your project. The author\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapdiffer"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 35,
                  "endLine": 7,
                  "endColumn": 41,
                  "snippet": {
                    "text": "#\n# Usage: tapdiffer LEGEND CHECKFILE\n#\n# Output is a TAP report, ok if the diff is empty and not ok otherwise.\n# A nonempty diff is shipped as a TAP YAML block following \"not ok\" \n# unless QUIET=1 in the environment.\n#\n",
                    "rendered": {
                      "text": "#\n# Usage: tapdiffer LEGEND CHECKFILE\n#\n# Output is a TAP report, ok if the diff is empty and not ok otherwise.\n# A nonempty diff is shipped as a TAP YAML block following \"not ok\" \n# unless QUIET=1 in the environment.\n#\n",
                      "markdown": "`#\n# Usage: tapdiffer LEGEND CHECKFILE\n#\n# Output is a TAP report, ok if the diff is empty and not ok otherwise.\n# A nonempty diff is shipped as a TAP YAML block following \"not ok\" \n# unless QUIET=1 in the environment.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/tapdiffer"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 20,
                  "endLine": 3,
                  "endColumn": 26,
                  "snippet": {
                    "text": "#! /bin/sh\n#\n# tapdiffer - Render diff between input and checkfile as a TAP report\n#\n# Usage: tapdiffer LEGEND CHECKFILE\n#\n",
                    "rendered": {
                      "text": "#! /bin/sh\n#\n# tapdiffer - Render diff between input and checkfile as a TAP report\n#\n# Usage: tapdiffer LEGEND CHECKFILE\n#\n",
                      "markdown": "`#! /bin/sh\n#\n# tapdiffer - Render diff between input and checkfile as a TAP report\n#\n# Usage: tapdiffer LEGEND CHECKFILE\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/control"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 27,
                  "endLine": 1,
                  "endColumn": 36,
                  "snippet": {
                    "text": "# This is not a real Debian control file, though the syntax is compatible.\n# It's project metadata for the shipper tool\n\nPackage: giflib\n",
                    "rendered": {
                      "text": "# This is not a real Debian control file, though the syntax is compatible.\n# It's project metadata for the shipper tool\n\nPackage: giflib\n",
                      "markdown": "`# This is not a real Debian control file, though the syntax is compatible.\n# It's project metadata for the shipper tool\n\nPackage: giflib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/control"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 16,
                  "endLine": 9,
                  "endColumn": 25,
                  "snippet": {
                    "text": "Destinations: ~,sourceforge\n\nDescription: a library for rendering and generating GIF image files.\n This is the GIF service code in C used for over two decades by graphics\n applications, web browsers, game consoles, ATMs, and pretty much anything\n else that throws pixels on a display. Simple, stable, and bulletproof.\n\n",
                    "rendered": {
                      "text": "Destinations: ~,sourceforge\n\nDescription: a library for rendering and generating GIF image files.\n This is the GIF service code in C used for over two decades by graphics\n applications, web browsers, game consoles, ATMs, and pretty much anything\n else that throws pixels on a display. Simple, stable, and bulletproof.\n\n",
                      "markdown": "`Destinations: ~,sourceforge\n\nDescription: a library for rendering and generating GIF image files.\n This is the GIF service code in C used for over two decades by graphics\n applications, web browsers, game consoles, ATMs, and pretty much anything\n else that throws pixels on a display. Simple, stable, and bulletproof.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 28,
                  "endLine": 664,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n",
                    "rendered": {
                      "text": "          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n",
                      "markdown": "`          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 663,
                  "startColumn": 26,
                  "endLine": 663,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        * Makefile.am's: Fixes to allow the dist* family of targets to work\n          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n",
                    "rendered": {
                      "text": "        * Makefile.am's: Fixes to allow the dist* family of targets to work\n          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n",
                      "markdown": "`        * Makefile.am's: Fixes to allow the dist* family of targets to work\n          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 23,
                  "endLine": 662,
                  "endColumn": 31,
                  "snippet": {
                    "text": "          generated files in my cvs repository.\n        * Makefile.am's: Fixes to allow the dist* family of targets to work\n          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n",
                    "rendered": {
                      "text": "          generated files in my cvs repository.\n        * Makefile.am's: Fixes to allow the dist* family of targets to work\n          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n",
                      "markdown": "`          generated files in my cvs repository.\n        * Makefile.am's: Fixes to allow the dist* family of targets to work\n          correctly.  Preliminary support for make check as well.\n        * configure.in: Update version to 3.1.0\n        * lib/Makefile.am: Update libtool version to 4:0:1 libtool)\n        * libungif-3.0.spec: Update from Marc Ewing.\n        * Add int/pointer Alpha fixes from Dick Porter to many source files.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 46,
                  "endLine": 635,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        * lib/dgif_lib.c: (DGifSlurp) memory for the extensions was not being\n          allocated.  Now I call AddExtensionBlock when I add an extension to\n          the structure.  Additionally, fix a memory leak here.\n        * configure.in, NEWS, lib/Makefile.am: Update to version 3.1.1\n        * ltmain.sh, ltconfig: removed from the cvs repository\n        * BUGS: add the BUGS file to list unresolved BUGS.\n\n",
                    "rendered": {
                      "text": "        * lib/dgif_lib.c: (DGifSlurp) memory for the extensions was not being\n          allocated.  Now I call AddExtensionBlock when I add an extension to\n          the structure.  Additionally, fix a memory leak here.\n        * configure.in, NEWS, lib/Makefile.am: Update to version 3.1.1\n        * ltmain.sh, ltconfig: removed from the cvs repository\n        * BUGS: add the BUGS file to list unresolved BUGS.\n\n",
                      "markdown": "`        * lib/dgif_lib.c: (DGifSlurp) memory for the extensions was not being\n          allocated.  Now I call AddExtensionBlock when I add an extension to\n          the structure.  Additionally, fix a memory leak here.\n        * configure.in, NEWS, lib/Makefile.am: Update to version 3.1.1\n        * ltmain.sh, ltconfig: removed from the cvs repository\n        * BUGS: add the BUGS file to list unresolved BUGS.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 617,
                  "startColumn": 25,
                  "endLine": 617,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n1998 29 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * lib/dgif_lib.c: (DGifSlurp) Fix a few of the minor bugs plaguing\n          this function.  At this point, the function should no longer cause\n          a Seg Fault.  It is now losing all extension data however.  I know\n          how to hack a fix in, but I need to commit these changes first.\n        * lib/dgif_lib.c: (DGifGetImageDesc) Fix my bug fix: the colormap is\n",
                    "rendered": {
                      "text": "\n1998 29 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * lib/dgif_lib.c: (DGifSlurp) Fix a few of the minor bugs plaguing\n          this function.  At this point, the function should no longer cause\n          a Seg Fault.  It is now losing all extension data however.  I know\n          how to hack a fix in, but I need to commit these changes first.\n        * lib/dgif_lib.c: (DGifGetImageDesc) Fix my bug fix: the colormap is\n",
                      "markdown": "`\n1998 29 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * lib/dgif_lib.c: (DGifSlurp) Fix a few of the minor bugs plaguing\n          this function.  At this point, the function should no longer cause\n          a Seg Fault.  It is now losing all extension data however.  I know\n          how to hack a fix in, but I need to commit these changes first.\n        * lib/dgif_lib.c: (DGifGetImageDesc) Fix my bug fix: the colormap is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 567,
                  "startColumn": 24,
                  "endLine": 567,
                  "endColumn": 32,
                  "snippet": {
                    "text": "1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n        * lib/gif_lib_private.h: (PrivateType) New header for common stuff\n          private to the library.  Currently, this is only the Private struct.\n",
                    "rendered": {
                      "text": "1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n        * lib/gif_lib_private.h: (PrivateType) New header for common stuff\n          private to the library.  Currently, this is only the Private struct.\n",
                      "markdown": "`1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n        * lib/gif_lib_private.h: (PrivateType) New header for common stuff\n          private to the library.  Currently, this is only the Private struct.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 26,
                  "endLine": 566,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n        * lib/gif_lib_private.h: (PrivateType) New header for common stuff\n",
                    "rendered": {
                      "text": "\n1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n        * lib/gif_lib_private.h: (PrivateType) New header for common stuff\n",
                      "markdown": "`\n1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n        * lib/gif_lib_private.h: (PrivateType) New header for common stuff\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 23,
                  "endLine": 565,
                  "endColumn": 31,
                  "snippet": {
                    "text": "          no extension blocks.\n\n1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n",
                    "rendered": {
                      "text": "          no extension blocks.\n\n1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n",
                      "markdown": "`          no extension blocks.\n\n1998 14 Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * configure.in: Update version to 4.0\n        * lib/Makefile.am: Update libtool version to 4:0:0 (libtool)\n        * libungif.spec: Update for version 4.0 (not binary compatible with\n          giflib, change version.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 22,
                  "endLine": 522,
                  "endColumn": 30,
                  "snippet": {
                    "text": "         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n         - lib/egif_lib.c: (WRITE)  change from a function to a macro.\n         - lib/dgif_lib.c: (DGifOpenFileName) close FileHandle on error.\n         - lib/dgif_lib.c: (DGifOpenFileHandle) make sure the FILE stream is\n",
                    "rendered": {
                      "text": "         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n         - lib/egif_lib.c: (WRITE)  change from a function to a macro.\n         - lib/dgif_lib.c: (DGifOpenFileName) close FileHandle on error.\n         - lib/dgif_lib.c: (DGifOpenFileHandle) make sure the FILE stream is\n",
                      "markdown": "`         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n         - lib/egif_lib.c: (WRITE)  change from a function to a macro.\n         - lib/dgif_lib.c: (DGifOpenFileName) close FileHandle on error.\n         - lib/dgif_lib.c: (DGifOpenFileHandle) make sure the FILE stream is\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 23,
                  "endLine": 520,
                  "endColumn": 31,
                  "snippet": {
                    "text": "           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n         - lib/egif_lib.c: (WRITE)  change from a function to a macro.\n",
                    "rendered": {
                      "text": "           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n         - lib/egif_lib.c: (WRITE)  change from a function to a macro.\n",
                      "markdown": "`           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n         - lib/egif_lib.c: (WRITE)  change from a function to a macro.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 27,
                  "endLine": 519,
                  "endColumn": 35,
                  "snippet": {
                    "text": "         - lib/gif_lib_private.h: Above mentioned constants and macros are now\n           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n",
                    "rendered": {
                      "text": "         - lib/gif_lib_private.h: Above mentioned constants and macros are now\n           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n",
                      "markdown": "`         - lib/gif_lib_private.h: Above mentioned constants and macros are now\n           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n         - giflib.lsm: Update for version 4.1.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 518,
                  "startColumn": 24,
                  "endLine": 518,
                  "endColumn": 32,
                  "snippet": {
                    "text": "           gif_lib_private.h\n         - lib/gif_lib_private.h: Above mentioned constants and macros are now\n           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n",
                    "rendered": {
                      "text": "           gif_lib_private.h\n         - lib/gif_lib_private.h: Above mentioned constants and macros are now\n           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n",
                      "markdown": "`           gif_lib_private.h\n         - lib/gif_lib_private.h: Above mentioned constants and macros are now\n           here.  FILE_STATE_READ is now 0x08 instead of 0x00.\n         - configure.in: Update version to 4.1.0\n         - lib/Makefile.am: Update libtool version to 5:0:1 (libtool)\n         - giflib.spec: Update for version 4.1.0 (Add libungif-4.1\n           compatibility stuff and change version.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 9,
                  "endLine": 474,
                  "endColumn": 17,
                  "snippet": {
                    "text": "1999 17 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * New cvs Repository.  Hopefully I've got everything that was in the\n          old one.  This one is available on anonymous cvs.\n        * Update to libtool 1.3.3, automake 1.4, and autoconf 2.13\n\n1999 23 May Michael R Brown <michael@arrakeen.demon.co.uk>\n        * Lots of 'const' qualifiers added, thanks Alexis\n",
                    "rendered": {
                      "text": "1999 17 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * New cvs Repository.  Hopefully I've got everything that was in the\n          old one.  This one is available on anonymous cvs.\n        * Update to libtool 1.3.3, automake 1.4, and autoconf 2.13\n\n1999 23 May Michael R Brown <michael@arrakeen.demon.co.uk>\n        * Lots of 'const' qualifiers added, thanks Alexis\n",
                      "markdown": "`1999 17 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * New cvs Repository.  Hopefully I've got everything that was in the\n          old one.  This one is available on anonymous cvs.\n        * Update to libtool 1.3.3, automake 1.4, and autoconf 2.13\n\n1999 23 May Michael R Brown <michael@arrakeen.demon.co.uk>\n        * Lots of 'const' qualifiers added, thanks Alexis\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 9,
                  "endLine": 467,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    * libungif.spec: Updated a few things from the latest redhat spec file.\n\n1999 5  Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * Update links to the web pages as I have reorganized them somewhat.\n        * Add the welcome2.gif to the pic directory and a test that utilizes\n          it to test-unx.\n\n",
                    "rendered": {
                      "text": "    * libungif.spec: Updated a few things from the latest redhat spec file.\n\n1999 5  Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * Update links to the web pages as I have reorganized them somewhat.\n        * Add the welcome2.gif to the pic directory and a test that utilizes\n          it to test-unx.\n\n",
                      "markdown": "`    * libungif.spec: Updated a few things from the latest redhat spec file.\n\n1999 5  Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * Update links to the web pages as I have reorganized them somewhat.\n        * Add the welcome2.gif to the pic directory and a test that utilizes\n          it to test-unx.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 34,
                  "endLine": 303,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    * lib/gif_lib.h:\n      - C++ extern \"C\" fix\n      - Fix typo with EGifOpen\n    * lib/qprintf.c, lib/getarg.c: Update the varargs code.  Some users reported\n      that not all systems can handle the hybridized varargs parameter lists\n      we had.  Need to use old-style declarations instead.\n    \n",
                    "rendered": {
                      "text": "    * lib/gif_lib.h:\n      - C++ extern \"C\" fix\n      - Fix typo with EGifOpen\n    * lib/qprintf.c, lib/getarg.c: Update the varargs code.  Some users reported\n      that not all systems can handle the hybridized varargs parameter lists\n      we had.  Need to use old-style declarations instead.\n    \n",
                      "markdown": "`    * lib/gif_lib.h:\n      - C++ extern \"C\" fix\n      - Fix typo with EGifOpen\n    * lib/qprintf.c, lib/getarg.c: Update the varargs code.  Some users reported\n      that not all systems can handle the hybridized varargs parameter lists\n      we had.  Need to use old-style declarations instead.\n    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 16,
                  "endLine": 231,
                  "snippet": {
                    "text": "    * Set property lastlog to remind me when I last synced the ChangeLog\n\n2004-03-03 Toshio Kuratomi <toshio@tiki-lounge.com> - r62    \n    * ChangeLog: Update\n\n2004-03-03 Toshio Kuratomi <toshio@tiki-lounge.com> - r61    \n    * configure.ac: Bump version to 4.1.2\n    \n",
                    "rendered": {
                      "text": "    * Set property lastlog to remind me when I last synced the ChangeLog\n\n2004-03-03 Toshio Kuratomi <toshio@tiki-lounge.com> - r62    \n    * ChangeLog: Update\n\n2004-03-03 Toshio Kuratomi <toshio@tiki-lounge.com> - r61    \n    * configure.ac: Bump version to 4.1.2\n    \n",
                      "markdown": "`    * Set property lastlog to remind me when I last synced the ChangeLog\n\n2004-03-03 Toshio Kuratomi <toshio@tiki-lounge.com> - r62    \n    * ChangeLog: Update\n\n2004-03-03 Toshio Kuratomi <toshio@tiki-lounge.com> - r61    \n    * configure.ac: Bump version to 4.1.2\n    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 11,
                  "endLine": 159,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    * lib/egif_lib.c: Set ColorMaps to NULL when we free a colormap object.\n    * lib/gifalloc.c: Set ColorMaps to NULL when we free a colormap object.\n    * lib/dev2gif.c: Fix redefinition problem on IRIX.\n    * NEWS: Update to 4.1.4\n    * util/gifcomb.c: Set a olorMap to NULL.\n    \n2004-07-11 Toshio Kuratomi <toshio@tiki-lounge.com> - r79    \n",
                    "rendered": {
                      "text": "    * lib/egif_lib.c: Set ColorMaps to NULL when we free a colormap object.\n    * lib/gifalloc.c: Set ColorMaps to NULL when we free a colormap object.\n    * lib/dev2gif.c: Fix redefinition problem on IRIX.\n    * NEWS: Update to 4.1.4\n    * util/gifcomb.c: Set a olorMap to NULL.\n    \n2004-07-11 Toshio Kuratomi <toshio@tiki-lounge.com> - r79    \n",
                      "markdown": "`    * lib/egif_lib.c: Set ColorMaps to NULL when we free a colormap object.\n    * lib/gifalloc.c: Set ColorMaps to NULL when we free a colormap object.\n    * lib/dev2gif.c: Fix redefinition problem on IRIX.\n    * NEWS: Update to 4.1.4\n    * util/gifcomb.c: Set a olorMap to NULL.\n    \n2004-07-11 Toshio Kuratomi <toshio@tiki-lounge.com> - r79    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 14,
                  "endLine": 139,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      - On Game Boy Advance we need to reduce memory usage.  Change values to\n        short int where appropriate.\n    * lib/gif_lib.h:\n      - Handle te GBA changes by defining GifPrefixType and GifWord to int\n        unless compiling on GBA.  Then use unsigned short and short\n        respectively.\n      - Fix a problem with the API on _WIN32.  DrawText conflicts with the\n",
                    "rendered": {
                      "text": "      - On Game Boy Advance we need to reduce memory usage.  Change values to\n        short int where appropriate.\n    * lib/gif_lib.h:\n      - Handle te GBA changes by defining GifPrefixType and GifWord to int\n        unless compiling on GBA.  Then use unsigned short and short\n        respectively.\n      - Fix a problem with the API on _WIN32.  DrawText conflicts with the\n",
                      "markdown": "`      - On Game Boy Advance we need to reduce memory usage.  Change values to\n        short int where appropriate.\n    * lib/gif_lib.h:\n      - Handle te GBA changes by defining GifPrefixType and GifWord to int\n        unless compiling on GBA.  Then use unsigned short and short\n        respectively.\n      - Fix a problem with the API on _WIN32.  DrawText conflicts with the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 11,
                  "endLine": 127,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r91    \n    * ChangeLog: Update to r90.\n    * NEWS: Update on GBA and Windows fixes.\n    \n2005-10-06 Toshio Kuratomi <toshio@tiki-lounge.com> - r90    \n    Changes from Lennie Araki:\n",
                    "rendered": {
                      "text": "    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r91    \n    * ChangeLog: Update to r90.\n    * NEWS: Update on GBA and Windows fixes.\n    \n2005-10-06 Toshio Kuratomi <toshio@tiki-lounge.com> - r90    \n    Changes from Lennie Araki:\n",
                      "markdown": "`    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r91    \n    * ChangeLog: Update to r90.\n    * NEWS: Update on GBA and Windows fixes.\n    \n2005-10-06 Toshio Kuratomi <toshio@tiki-lounge.com> - r90    \n    Changes from Lennie Araki:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 16,
                  "endLine": 126,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    * lib/gif_lib.h: Change GifPrefixType to unsigned.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r91    \n    * ChangeLog: Update to r90.\n    * NEWS: Update on GBA and Windows fixes.\n    \n2005-10-06 Toshio Kuratomi <toshio@tiki-lounge.com> - r90    \n",
                    "rendered": {
                      "text": "    * lib/gif_lib.h: Change GifPrefixType to unsigned.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r91    \n    * ChangeLog: Update to r90.\n    * NEWS: Update on GBA and Windows fixes.\n    \n2005-10-06 Toshio Kuratomi <toshio@tiki-lounge.com> - r90    \n",
                      "markdown": "`    * lib/gif_lib.h: Change GifPrefixType to unsigned.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r91    \n    * ChangeLog: Update to r90.\n    * NEWS: Update on GBA and Windows fixes.\n    \n2005-10-06 Toshio Kuratomi <toshio@tiki-lounge.com> - r90    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 11,
                  "endLine": 120,
                  "endColumn": 19,
                  "snippet": {
                    "text": "2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r94    \n    * Sync with libungif r93.\n    * ChangeLog: Update to r92.\n    * NEWS: Update with combined libungif/giflib changes.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r92    \n    * lib/gif_lib.h: Change GifPrefixType to unsigned.\n",
                    "rendered": {
                      "text": "2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r94    \n    * Sync with libungif r93.\n    * ChangeLog: Update to r92.\n    * NEWS: Update with combined libungif/giflib changes.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r92    \n    * lib/gif_lib.h: Change GifPrefixType to unsigned.\n",
                      "markdown": "`2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r94    \n    * Sync with libungif r93.\n    * ChangeLog: Update to r92.\n    * NEWS: Update with combined libungif/giflib changes.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r92    \n    * lib/gif_lib.h: Change GifPrefixType to unsigned.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 16,
                  "endLine": 119,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r94    \n    * Sync with libungif r93.\n    * ChangeLog: Update to r92.\n    * NEWS: Update with combined libungif/giflib changes.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r92    \n",
                    "rendered": {
                      "text": "\n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r94    \n    * Sync with libungif r93.\n    * ChangeLog: Update to r92.\n    * NEWS: Update with combined libungif/giflib changes.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r92    \n",
                      "markdown": "`\n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r94    \n    * Sync with libungif r93.\n    * ChangeLog: Update to r92.\n    * NEWS: Update with combined libungif/giflib changes.\n    \n2005-10-09 Toshio Kuratomi <toshio@tiki-lounge.com> - r92    \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 27,
                  "endLine": 22,
                  "endColumn": 35,
                  "snippet": {
                    "text": "2007-11-10 13:09  abadger1999\n\n\t* NEWS, PATENT_PROBLEMS, lib/Makefile.am: Remove PATENT_PROBLEMS as\n\t  it's no longer covered.  Update NEWS and Makefile.am for the new\n\t  release.\n\n2007-11-10 10:46  abadger1999\n",
                    "rendered": {
                      "text": "2007-11-10 13:09  abadger1999\n\n\t* NEWS, PATENT_PROBLEMS, lib/Makefile.am: Remove PATENT_PROBLEMS as\n\t  it's no longer covered.  Update NEWS and Makefile.am for the new\n\t  release.\n\n2007-11-10 10:46  abadger1999\n",
                      "markdown": "`2007-11-10 13:09  abadger1999\n\n\t* NEWS, PATENT_PROBLEMS, lib/Makefile.am: Remove PATENT_PROBLEMS as\n\t  it's no longer covered.  Update NEWS and Makefile.am for the new\n\t  release.\n\n2007-11-10 10:46  abadger1999\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 37,
                  "endLine": 468,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n1999 5  Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * Update links to the web pages as I have reorganized them somewhat.\n        * Add the welcome2.gif to the pic directory and a test that utilizes\n          it to test-unx.\n\n1999 17 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n",
                    "rendered": {
                      "text": "\n1999 5  Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * Update links to the web pages as I have reorganized them somewhat.\n        * Add the welcome2.gif to the pic directory and a test that utilizes\n          it to test-unx.\n\n1999 17 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n",
                      "markdown": "`\n1999 5  Dec Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n        * Update links to the web pages as I have reorganized them somewhat.\n        * Add the welcome2.gif to the pic directory and a test that utilizes\n          it to test-unx.\n\n1999 17 Nov Toshio Kuratomi <badger@prtr-13.ucsc.edu>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 40,
                  "endLine": 405,
                  "snippet": {
                    "text": "\t* lib/Makefile.am, util/Makefile.am: CFLAGS=>AM_CFLAGS; INCLUDES=>AM_CPPFLAGS\n\t* configure.ac:\n\t  - initialization macros for automake and autoconf have changed\n\t  - removed checks for C++ compiler and Awk\n\t  - acconfig.h functionality moved here.\n\t  - add other X11 libraries to the X11_LIB define\n\n2004-02-15 Toshio Kuratomi <toshio@tiki-lounge.com>\n",
                    "rendered": {
                      "text": "\t* lib/Makefile.am, util/Makefile.am: CFLAGS=>AM_CFLAGS; INCLUDES=>AM_CPPFLAGS\n\t* configure.ac:\n\t  - initialization macros for automake and autoconf have changed\n\t  - removed checks for C++ compiler and Awk\n\t  - acconfig.h functionality moved here.\n\t  - add other X11 libraries to the X11_LIB define\n\n2004-02-15 Toshio Kuratomi <toshio@tiki-lounge.com>\n",
                      "markdown": "`\t* lib/Makefile.am, util/Makefile.am: CFLAGS=>AM_CFLAGS; INCLUDES=>AM_CPPFLAGS\n\t* configure.ac:\n\t  - initialization macros for automake and autoconf have changed\n\t  - removed checks for C++ compiler and Awk\n\t  - acconfig.h functionality moved here.\n\t  - add other X11 libraries to the X11_LIB define\n\n2004-02-15 Toshio Kuratomi <toshio@tiki-lounge.com>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 36,
                  "endLine": 187,
                  "endColumn": 42,
                  "snippet": {
                    "text": "2004-05-29 Toshio Kuratomi <toshio@tiki-lounge.com> - r70    \n    * AUTHORS: Add Lennie Araki to the list of contributers.\n    * windows: The windows subdirectory and all files under it are contributions\n      from Lennie Araki to provide a nice interface on MS Windows.\n    * README: Redundancy fix.\n    * doc/gif_lib.html: Add EGifPutExtension{First,Next,Last} to the documentation\n      so people know they should use it instead of EGifPutExtension.\n",
                    "rendered": {
                      "text": "2004-05-29 Toshio Kuratomi <toshio@tiki-lounge.com> - r70    \n    * AUTHORS: Add Lennie Araki to the list of contributers.\n    * windows: The windows subdirectory and all files under it are contributions\n      from Lennie Araki to provide a nice interface on MS Windows.\n    * README: Redundancy fix.\n    * doc/gif_lib.html: Add EGifPutExtension{First,Next,Last} to the documentation\n      so people know they should use it instead of EGifPutExtension.\n",
                      "markdown": "`2004-05-29 Toshio Kuratomi <toshio@tiki-lounge.com> - r70    \n    * AUTHORS: Add Lennie Araki to the list of contributers.\n    * windows: The windows subdirectory and all files under it are contributions\n      from Lennie Araki to provide a nice interface on MS Windows.\n    * README: Redundancy fix.\n    * doc/gif_lib.html: Add EGifPutExtension{First,Next,Last} to the documentation\n      so people know they should use it instead of EGifPutExtension.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/ChangeLog"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 50,
                  "endLine": 28,
                  "endColumn": 56,
                  "snippet": {
                    "text": "2007-11-10 10:46  abadger1999\n\n\t* configure.ac, util/gif2epsn.c, util/gif2iris.c, util/gif2ps.c,\n\t  util/gif2rgb.c, util/gif2rle.c, util/gif2x11.c: Find and fix\n\t  segfaults in the gif2* programs due to referencing the ColorMap\n\t  beforefinding out if hte GifFile produced a valid colormap or was\n\t  corrupt.\n",
                    "rendered": {
                      "text": "2007-11-10 10:46  abadger1999\n\n\t* configure.ac, util/gif2epsn.c, util/gif2iris.c, util/gif2ps.c,\n\t  util/gif2rgb.c, util/gif2rle.c, util/gif2x11.c: Find and fix\n\t  segfaults in the gif2* programs due to referencing the ColorMap\n\t  beforefinding out if hte GifFile produced a valid colormap or was\n\t  corrupt.\n",
                      "markdown": "`2007-11-10 10:46  abadger1999\n\n\t* configure.ac, util/gif2epsn.c, util/gif2iris.c, util/gif2ps.c,\n\t  util/gif2rgb.c, util/gif2rle.c, util/gif2x11.c: Find and fix\n\t  segfaults in the gif2* programs due to referencing the ColorMap\n\t  beforefinding out if hte GifFile produced a valid colormap or was\n\t  corrupt.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 432,
                  "startColumn": 17,
                  "endLine": 432,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \nthis whole byte is simply <span class=\"byte\">01</span>. The next two \nbytes can be left at zero.</p>\n\n<p>We must now specify which color to disappear.  Recall that our\nsample image had the following global color table:</p>\n",
                    "rendered": {
                      "text": "<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \nthis whole byte is simply <span class=\"byte\">01</span>. The next two \nbytes can be left at zero.</p>\n\n<p>We must now specify which color to disappear.  Recall that our\nsample image had the following global color table:</p>\n",
                      "markdown": "`<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \nthis whole byte is simply <span class=\"byte\">01</span>. The next two \nbytes can be left at zero.</p>\n\n<p>We must now specify which color to disappear.  Recall that our\nsample image had the following global color table:</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 56,
                  "endLine": 430,
                  "endColumn": 60,
                  "snippet": {
                    "text": "the Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \nthis whole byte is simply <span class=\"byte\">01</span>. The next two \nbytes can be left at zero.</p>\n\n",
                    "rendered": {
                      "text": "the Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \nthis whole byte is simply <span class=\"byte\">01</span>. The next two \nbytes can be left at zero.</p>\n\n",
                      "markdown": "`the Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \nthis whole byte is simply <span class=\"byte\">01</span>. The next two \nbytes can be left at zero.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 11,
                  "endLine": 427,
                  "endColumn": 20,
                  "snippet": {
                    "text": "<p>Let's demonstrate this by revisiting the sample image we used\nin <a href=\"bits_and_bytes.html\">Bits and Bytes</a>. We will update this\nfile to make the white center part transparent. Let's start creating\nthe Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \n",
                    "rendered": {
                      "text": "<p>Let's demonstrate this by revisiting the sample image we used\nin <a href=\"bits_and_bytes.html\">Bits and Bytes</a>. We will update this\nfile to make the white center part transparent. Let's start creating\nthe Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \n",
                      "markdown": "`<p>Let's demonstrate this by revisiting the sample image we used\nin <a href=\"bits_and_bytes.html\">Bits and Bytes</a>. We will update this\nfile to make the white center part transparent. Let's start creating\nthe Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n<span class=\"byte\">04</span> punch. In the next byte, we need to flip\nthe transparent color flag to 1 (we can leave the others at zero) so \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 60,
                  "endLine": 425,
                  "endColumn": 68,
                  "snippet": {
                    "text": "the color in the color table.</p>\n\n<p>Let's demonstrate this by revisiting the sample image we used\nin <a href=\"bits_and_bytes.html\">Bits and Bytes</a>. We will update this\nfile to make the white center part transparent. Let's start creating\nthe Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n",
                    "rendered": {
                      "text": "the color in the color table.</p>\n\n<p>Let's demonstrate this by revisiting the sample image we used\nin <a href=\"bits_and_bytes.html\">Bits and Bytes</a>. We will update this\nfile to make the white center part transparent. Let's start creating\nthe Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n",
                      "markdown": "`the color in the color table.</p>\n\n<p>Let's demonstrate this by revisiting the sample image we used\nin <a href=\"bits_and_bytes.html\">Bits and Bytes</a>. We will update this\nfile to make the white center part transparent. Let's start creating\nthe Graphic Control Extension block that will do this for us. Again we \nstart with the <span class=\"byte\">21</span> <span class=\"byte\">F9</span>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 44,
                  "endLine": 414,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n<p>There are only two pieces of data we have to set to pull this\noff. First we must set the Transparency Color Flag to 1. This is the\nlowest bit in the packed byte of the Graphic Control Extension. This\nwill tell the decoder that we want our image to have a transparent\ncomponent.  Secondly we must tell the decoder which color we want to\nuse as our invisible ink. The decoder will then all you to see thought\n",
                    "rendered": {
                      "text": "\n<p>There are only two pieces of data we have to set to pull this\noff. First we must set the Transparency Color Flag to 1. This is the\nlowest bit in the packed byte of the Graphic Control Extension. This\nwill tell the decoder that we want our image to have a transparent\ncomponent.  Secondly we must tell the decoder which color we want to\nuse as our invisible ink. The decoder will then all you to see thought\n",
                      "markdown": "`\n<p>There are only two pieces of data we have to set to pull this\noff. First we must set the Transparency Color Flag to 1. This is the\nlowest bit in the packed byte of the Graphic Control Extension. This\nwill tell the decoder that we want our image to have a transparent\ncomponent.  Secondly we must tell the decoder which color we want to\nuse as our invisible ink. The decoder will then all you to see thought\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 23,
                  "endLine": 398,
                  "endColumn": 32,
                  "snippet": {
                    "text": "that it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n",
                    "rendered": {
                      "text": "that it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n",
                      "markdown": "`that it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 31,
                  "endLine": 395,
                  "endColumn": 35,
                  "snippet": {
                    "text": "we can specify just the part that changes (that is, the smallest\nrectangle that covers the part that changes). You'll see that the \nimage descriptor before the second block of image data specifies\nthat it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\n",
                    "rendered": {
                      "text": "we can specify just the part that changes (that is, the smallest\nrectangle that covers the part that changes). You'll see that the \nimage descriptor before the second block of image data specifies\nthat it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\n",
                      "markdown": "`we can specify just the part that changes (that is, the smallest\nrectangle that covers the part that changes). You'll see that the \nimage descriptor before the second block of image data specifies\nthat it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 18,
                  "endLine": 395,
                  "endColumn": 22,
                  "snippet": {
                    "text": "we can specify just the part that changes (that is, the smallest\nrectangle that covers the part that changes). You'll see that the \nimage descriptor before the second block of image data specifies\nthat it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\n",
                    "rendered": {
                      "text": "we can specify just the part that changes (that is, the smallest\nrectangle that covers the part that changes). You'll see that the \nimage descriptor before the second block of image data specifies\nthat it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\n",
                      "markdown": "`we can specify just the part that changes (that is, the smallest\nrectangle that covers the part that changes). You'll see that the \nimage descriptor before the second block of image data specifies\nthat it will start at the pixel at (2, 11) and draws a box that's \n7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 33,
                  "endLine": 376,
                  "endColumn": 37,
                  "snippet": {
                    "text": "stays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\nwill be drawing an image starting at the top left corner and taking up\nthe whole canvas (11px x 29px). This block is followed by the image\ndata that contains all the codes to draw the first scene, the one with\nthe green light on.</p>\n",
                    "rendered": {
                      "text": "stays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\nwill be drawing an image starting at the top left corner and taking up\nthe whole canvas (11px x 29px). This block is followed by the image\ndata that contains all the codes to draw the first scene, the one with\nthe green light on.</p>\n",
                      "markdown": "`stays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\nwill be drawing an image starting at the top left corner and taking up\nthe whole canvas (11px x 29px). This block is followed by the image\ndata that contains all the codes to draw the first scene, the one with\nthe green light on.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 15,
                  "endLine": 369,
                  "endColumn": 24,
                  "snippet": {
                    "text": "in the first graphics control block which means we would wait 1 second \nbefore changing our green light to yellow.</p>\n\n<p>Our graphics control extension block ends with the block\nterminator <span class=\"byte\">00</span>. You will notice this\ntype of block appearing two more times in this image, the second\ninstance differing only in the delay time (the yellow light only \n",
                    "rendered": {
                      "text": "in the first graphics control block which means we would wait 1 second \nbefore changing our green light to yellow.</p>\n\n<p>Our graphics control extension block ends with the block\nterminator <span class=\"byte\">00</span>. You will notice this\ntype of block appearing two more times in this image, the second\ninstance differing only in the delay time (the yellow light only \n",
                      "markdown": "`in the first graphics control block which means we would wait 1 second \nbefore changing our green light to yellow.</p>\n\n<p>Our graphics control extension block ends with the block\nterminator <span class=\"byte\">00</span>. You will notice this\ntype of block appearing two more times in this image, the second\ninstance differing only in the delay time (the yellow light only \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 21,
                  "endLine": 366,
                  "endColumn": 30,
                  "snippet": {
                    "text": "represents the number of hundredths of a second to wait before moving\non to the next scene. We see that our sample image has specified\na value of 100 (<span class=\"byte\">64</span> <span class=\"byte\">00</span>)\nin the first graphics control block which means we would wait 1 second \nbefore changing our green light to yellow.</p>\n\n<p>Our graphics control extension block ends with the block\n",
                    "rendered": {
                      "text": "represents the number of hundredths of a second to wait before moving\non to the next scene. We see that our sample image has specified\na value of 100 (<span class=\"byte\">64</span> <span class=\"byte\">00</span>)\nin the first graphics control block which means we would wait 1 second \nbefore changing our green light to yellow.</p>\n\n<p>Our graphics control extension block ends with the block\n",
                      "markdown": "`represents the number of hundredths of a second to wait before moving\non to the next scene. We see that our sample image has specified\na value of 100 (<span class=\"byte\">64</span> <span class=\"byte\">00</span>)\nin the first graphics control block which means we would wait 1 second \nbefore changing our green light to yellow.</p>\n\n<p>Our graphics control extension block ends with the block\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 22,
                  "endLine": 359,
                  "endColumn": 26,
                  "snippet": {
                    "text": "The final bit is the transparency flag. We will go into more detail\nabout transparency in <a href=\"#transparency\">the next\nsection</a>. Since this image isn't using any transparency, we see\nthis bit has been left at 0. </p>\n\n<p>The next two bytes are the delay time. This value is in the same\nunsigned lformat as all the other integers in the file. This number\n",
                    "rendered": {
                      "text": "The final bit is the transparency flag. We will go into more detail\nabout transparency in <a href=\"#transparency\">the next\nsection</a>. Since this image isn't using any transparency, we see\nthis bit has been left at 0. </p>\n\n<p>The next two bytes are the delay time. This value is in the same\nunsigned lformat as all the other integers in the file. This number\n",
                      "markdown": "`The final bit is the transparency flag. We will go into more detail\nabout transparency in <a href=\"#transparency\">the next\nsection</a>. Since this image isn't using any transparency, we see\nthis bit has been left at 0. </p>\n\n<p>The next two bytes are the delay time. This value is in the same\nunsigned lformat as all the other integers in the file. This number\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 69,
                  "endLine": 331,
                  "endColumn": 8,
                  "snippet": {
                    "text": "<p>The first chunk begins immediately after the application extension\nblock.  It is there we encounter our first graphic control\nextension. As with all extensions, it begins with <span\nclass=\"byte\">21</span>. Next, the type specific label for the graphic\ncontrol type of extension is <span class=\"byte\">F9</span>. Next we see\nthe byte size of the data in the block; this should always be <span\nclass=\"byte\">04</span>. The first of these four data blocks is a\npacked field. </p>\n",
                    "rendered": {
                      "text": "<p>The first chunk begins immediately after the application extension\nblock.  It is there we encounter our first graphic control\nextension. As with all extensions, it begins with <span\nclass=\"byte\">21</span>. Next, the type specific label for the graphic\ncontrol type of extension is <span class=\"byte\">F9</span>. Next we see\nthe byte size of the data in the block; this should always be <span\nclass=\"byte\">04</span>. The first of these four data blocks is a\npacked field. </p>\n",
                      "markdown": "`<p>The first chunk begins immediately after the application extension\nblock.  It is there we encounter our first graphic control\nextension. As with all extensions, it begins with <span\nclass=\"byte\">21</span>. Next, the type specific label for the graphic\ncontrol type of extension is <span class=\"byte\">F9</span>. Next we see\nthe byte size of the data in the block; this should always be <span\nclass=\"byte\">04</span>. The first of these four data blocks is a\npacked field. </p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 50,
                  "endLine": 329,
                  "snippet": {
                    "text": "</table>\n\n<p>The first chunk begins immediately after the application extension\nblock.  It is there we encounter our first graphic control\nextension. As with all extensions, it begins with <span\nclass=\"byte\">21</span>. Next, the type specific label for the graphic\ncontrol type of extension is <span class=\"byte\">F9</span>. Next we see\nthe byte size of the data in the block; this should always be <span\n",
                    "rendered": {
                      "text": "</table>\n\n<p>The first chunk begins immediately after the application extension\nblock.  It is there we encounter our first graphic control\nextension. As with all extensions, it begins with <span\nclass=\"byte\">21</span>. Next, the type specific label for the graphic\ncontrol type of extension is <span class=\"byte\">F9</span>. Next we see\nthe byte size of the data in the block; this should always be <span\n",
                      "markdown": "`</table>\n\n<p>The first chunk begins immediately after the application extension\nblock.  It is there we encounter our first graphic control\nextension. As with all extensions, it begins with <span\nclass=\"byte\">21</span>. Next, the type specific label for the graphic\ncontrol type of extension is <span class=\"byte\">F9</span>. Next we see\nthe byte size of the data in the block; this should always be <span\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 14,
                  "endLine": 298,
                  "endColumn": 18,
                  "snippet": {
                    "text": "href=\"bits_and_bytes.html#application_extension_block\">application\nextension block</a>.  This is this block that causes our animation to\nrepeat rather than play once and stop. The first three bytes tell us\nwe are looking at (1) an extension block (2) of type\n&quot;application&quot; which is followed by (3) 11 bytes of fixed\nlength data. These 11 bytes contain the ASCII character codes for\n&quot;NETSCAPE2.0&quot;. Then begins the actual &quot;application\n",
                    "rendered": {
                      "text": "href=\"bits_and_bytes.html#application_extension_block\">application\nextension block</a>.  This is this block that causes our animation to\nrepeat rather than play once and stop. The first three bytes tell us\nwe are looking at (1) an extension block (2) of type\n&quot;application&quot; which is followed by (3) 11 bytes of fixed\nlength data. These 11 bytes contain the ASCII character codes for\n&quot;NETSCAPE2.0&quot;. Then begins the actual &quot;application\n",
                      "markdown": "`href=\"bits_and_bytes.html#application_extension_block\">application\nextension block</a>.  This is this block that causes our animation to\nrepeat rather than play once and stop. The first three bytes tell us\nwe are looking at (1) an extension block (2) of type\n&quot;application&quot; which is followed by (3) 11 bytes of fixed\nlength data. These 11 bytes contain the ASCII character codes for\n&quot;NETSCAPE2.0&quot;. Then begins the actual &quot;application\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 17,
                  "endLine": 43,
                  "endColumn": 26,
                  "snippet": {
                    "text": "block looks like:</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\nalt=\"GIF graphics control ext block layout\" style=\"border: 1px solid\nblack\" /></p>\n\n<p>I'll show you how to manipulate the bytes in this block to achieve\n",
                    "rendered": {
                      "text": "block looks like:</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\nalt=\"GIF graphics control ext block layout\" style=\"border: 1px solid\nblack\" /></p>\n\n<p>I'll show you how to manipulate the bytes in this block to achieve\n",
                      "markdown": "`block looks like:</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\nalt=\"GIF graphics control ext block layout\" style=\"border: 1px solid\nblack\" /></p>\n\n<p>I'll show you how to manipulate the bytes in this block to achieve\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 20,
                  "endLine": 39,
                  "endColumn": 29,
                  "snippet": {
                    "text": "<p>In addition to being able to store simple image data, \nGIF files (specifically GIF89a files) allow for some special features. Tricks\nsuch as transparency and animation can be accomplished with the \nhelp of the Graphics Control Extension block. Here's a sample of what this\nblock looks like:</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\n",
                    "rendered": {
                      "text": "<p>In addition to being able to store simple image data, \nGIF files (specifically GIF89a files) allow for some special features. Tricks\nsuch as transparency and animation can be accomplished with the \nhelp of the Graphics Control Extension block. Here's a sample of what this\nblock looks like:</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\n",
                      "markdown": "`<p>In addition to being able to store simple image data, \nGIF files (specifically GIF89a files) allow for some special features. Tricks\nsuch as transparency and animation can be accomplished with the \nhelp of the Graphics Control Extension block. Here's a sample of what this\nblock looks like:</p>\n\n<p style=\"text-align:center\"><img src=\"graphic_control_ext.gif\"\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 27,
                  "endLine": 495,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n<p>This concludes our description of the bits inside GIFs.  If you\nhave not already read the <a href=\"../gif_lib.html\">documentation of\nthe GIFLIB API</a>, you may wish to continue with that.</p>\n \n</div>\n\n",
                    "rendered": {
                      "text": "\n<p>This concludes our description of the bits inside GIFs.  If you\nhave not already read the <a href=\"../gif_lib.html\">documentation of\nthe GIFLIB API</a>, you may wish to continue with that.</p>\n \n</div>\n\n",
                      "markdown": "`\n<p>This concludes our description of the bits inside GIFs.  If you\nhave not already read the <a href=\"../gif_lib.html\">documentation of\nthe GIFLIB API</a>, you may wish to continue with that.</p>\n \n</div>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 39,
                  "endLine": 477,
                  "endColumn": 4,
                  "snippet": {
                    "text": "<th style=\"width:25%\">Original</th>\n<th style=\"width:25%\">Transparent <br/>\nWhite (<span class=\"byte\">00</span>)</th>\n<th style=\"width:25%\">Transparent <br/>\nRed (<span class=\"byte\">01</span>)</th>\n<th style=\"width:25%\">Transparent <br/>\nBlue (<span class=\"byte\">02</span>)</th>\n</tr>\n",
                    "rendered": {
                      "text": "<th style=\"width:25%\">Original</th>\n<th style=\"width:25%\">Transparent <br/>\nWhite (<span class=\"byte\">00</span>)</th>\n<th style=\"width:25%\">Transparent <br/>\nRed (<span class=\"byte\">01</span>)</th>\n<th style=\"width:25%\">Transparent <br/>\nBlue (<span class=\"byte\">02</span>)</th>\n</tr>\n",
                      "markdown": "`<th style=\"width:25%\">Original</th>\n<th style=\"width:25%\">Transparent <br/>\nWhite (<span class=\"byte\">00</span>)</th>\n<th style=\"width:25%\">Transparent <br/>\nRed (<span class=\"byte\">01</span>)</th>\n<th style=\"width:25%\">Transparent <br/>\nBlue (<span class=\"byte\">02</span>)</th>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 10,
                  "endLine": 468,
                  "endColumn": 15,
                  "snippet": {
                    "text": "<p>Now, all we have to do is plug this into our sample image right before the\nimage descriptor. I've placed our original sample image on a black background\nas well as the one we just made so you can see the results. I've also included\nones where red or blue are transparent. The last three differ by only the \ntransparent color index byte.</p>\n\n<table cellpadding=\"10px\" style=\"text-align: center; margin-left: auto; margin-right: auto\">\n",
                    "rendered": {
                      "text": "<p>Now, all we have to do is plug this into our sample image right before the\nimage descriptor. I've placed our original sample image on a black background\nas well as the one we just made so you can see the results. I've also included\nones where red or blue are transparent. The last three differ by only the \ntransparent color index byte.</p>\n\n<table cellpadding=\"10px\" style=\"text-align: center; margin-left: auto; margin-right: auto\">\n",
                      "markdown": "`<p>Now, all we have to do is plug this into our sample image right before the\nimage descriptor. I've placed our original sample image on a black background\nas well as the one we just made so you can see the results. I've also included\nones where red or blue are transparent. The last three differ by only the \ntransparent color index byte.</p>\n\n<table cellpadding=\"10px\" style=\"text-align: center; margin-left: auto; margin-right: auto\">\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 45,
                  "endLine": 448,
                  "endColumn": 50,
                  "snippet": {
                    "text": "<p>We already know what we want to make all the white sections\ntransparent.  The color white has an index of 0. Therefore we will\nspecify a value of <span class=\"byte\">00</span> for the transparent\ncolor index block.  Had we wanted to make the red transparent we would\nhave used <span class=\"byte\">01</span>, or <span\nclass=\"byte\">02</span> for blue.  Lastly we tack on the block\nterminator of <span class=\"byte\">00</span> and we're done. We have\n",
                    "rendered": {
                      "text": "<p>We already know what we want to make all the white sections\ntransparent.  The color white has an index of 0. Therefore we will\nspecify a value of <span class=\"byte\">00</span> for the transparent\ncolor index block.  Had we wanted to make the red transparent we would\nhave used <span class=\"byte\">01</span>, or <span\nclass=\"byte\">02</span> for blue.  Lastly we tack on the block\nterminator of <span class=\"byte\">00</span> and we're done. We have\n",
                      "markdown": "`<p>We already know what we want to make all the white sections\ntransparent.  The color white has an index of 0. Therefore we will\nspecify a value of <span class=\"byte\">00</span> for the transparent\ncolor index block.  Had we wanted to make the red transparent we would\nhave used <span class=\"byte\">01</span>, or <span\nclass=\"byte\">02</span> for blue.  Lastly we tack on the block\nterminator of <span class=\"byte\">00</span> and we're done. We have\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 19,
                  "endLine": 400,
                  "endColumn": 24,
                  "snippet": {
                    "text": "lights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n<h2><a name=\"transparency\">Transparency</a></h2>\n\n",
                    "rendered": {
                      "text": "lights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n<h2><a name=\"transparency\">Transparency</a></h2>\n\n",
                      "markdown": "`lights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n<h2><a name=\"transparency\">Transparency</a></h2>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 53,
                  "endLine": 399,
                  "endColumn": 58,
                  "snippet": {
                    "text": "7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n<h2><a name=\"transparency\">Transparency</a></h2>\n",
                    "rendered": {
                      "text": "7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n<h2><a name=\"transparency\">Transparency</a></h2>\n",
                      "markdown": "`7px wide by 16px tall. This is just large enough to cover the bottom two\nlights. The works because we chose the &quot;do not dispose&quot; disposal\nmethod for out graphics control extension block. In the same way,\nthe third and final image data block only renders the top two circles\nto both fill in the red and cover up the yellow.</p>\n\t\n<h2><a name=\"transparency\">Transparency</a></h2>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 40,
                  "endLine": 376,
                  "endColumn": 45,
                  "snippet": {
                    "text": "stays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\nwill be drawing an image starting at the top left corner and taking up\nthe whole canvas (11px x 29px). This block is followed by the image\ndata that contains all the codes to draw the first scene, the one with\nthe green light on.</p>\n",
                    "rendered": {
                      "text": "stays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\nwill be drawing an image starting at the top left corner and taking up\nthe whole canvas (11px x 29px). This block is followed by the image\ndata that contains all the codes to draw the first scene, the one with\nthe green light on.</p>\n",
                      "markdown": "`stays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\nwill be drawing an image starting at the top left corner and taking up\nthe whole canvas (11px x 29px). This block is followed by the image\ndata that contains all the codes to draw the first scene, the one with\nthe green light on.</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 36,
                  "endLine": 372,
                  "endColumn": 42,
                  "snippet": {
                    "text": "<p>Our graphics control extension block ends with the block\nterminator <span class=\"byte\">00</span>. You will notice this\ntype of block appearing two more times in this image, the second\ninstance differing only in the delay time (the yellow light only \nstays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\n",
                    "rendered": {
                      "text": "<p>Our graphics control extension block ends with the block\nterminator <span class=\"byte\">00</span>. You will notice this\ntype of block appearing two more times in this image, the second\ninstance differing only in the delay time (the yellow light only \nstays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\n",
                      "markdown": "`<p>Our graphics control extension block ends with the block\nterminator <span class=\"byte\">00</span>. You will notice this\ntype of block appearing two more times in this image, the second\ninstance differing only in the delay time (the yellow light only \nstays up for half a second).</p>\n\n<p>The next chunk is an image descriptor. The block declares that it\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 18,
                  "endLine": 353,
                  "endColumn": 24,
                  "snippet": {
                    "text": "these bits would have been set to 0 which indicates that do not wish\nto specify a disposal method. The seventh bit in they byte is the\n<em>user input flag</em>. When set to 1, that means that the decoder\nwill wait for some sort of &quot;input&quot; from the person viewing\nthe image before moving on to the next scene. I'm guessing it's highly\nunlikeley that you will encounter any other value that 0 for this bit.\nThe final bit is the transparency flag. We will go into more detail\n",
                    "rendered": {
                      "text": "these bits would have been set to 0 which indicates that do not wish\nto specify a disposal method. The seventh bit in they byte is the\n<em>user input flag</em>. When set to 1, that means that the decoder\nwill wait for some sort of &quot;input&quot; from the person viewing\nthe image before moving on to the next scene. I'm guessing it's highly\nunlikeley that you will encounter any other value that 0 for this bit.\nThe final bit is the transparency flag. We will go into more detail\n",
                      "markdown": "`these bits would have been set to 0 which indicates that do not wish\nto specify a disposal method. The seventh bit in they byte is the\n<em>user input flag</em>. When set to 1, that means that the decoder\nwill wait for some sort of &quot;input&quot; from the person viewing\nthe image before moving on to the next scene. I'm guessing it's highly\nunlikeley that you will encounter any other value that 0 for this bit.\nThe final bit is the transparency flag. We will go into more detail\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 63,
                  "endLine": 351,
                  "snippet": {
                    "text": "current image was drawn. I don't believe that this value is widely\nsupported but haven't had the chance to test it out. The behavior for\nvalues 4-7 are yet to be defined. If this image were not animated,\nthese bits would have been set to 0 which indicates that do not wish\nto specify a disposal method. The seventh bit in they byte is the\n<em>user input flag</em>. When set to 1, that means that the decoder\nwill wait for some sort of &quot;input&quot; from the person viewing\nthe image before moving on to the next scene. I'm guessing it's highly\n",
                    "rendered": {
                      "text": "current image was drawn. I don't believe that this value is widely\nsupported but haven't had the chance to test it out. The behavior for\nvalues 4-7 are yet to be defined. If this image were not animated,\nthese bits would have been set to 0 which indicates that do not wish\nto specify a disposal method. The seventh bit in they byte is the\n<em>user input flag</em>. When set to 1, that means that the decoder\nwill wait for some sort of &quot;input&quot; from the person viewing\nthe image before moving on to the next scene. I'm guessing it's highly\n",
                      "markdown": "`current image was drawn. I don't believe that this value is widely\nsupported but haven't had the chance to test it out. The behavior for\nvalues 4-7 are yet to be defined. If this image were not animated,\nthese bits would have been set to 0 which indicates that do not wish\nto specify a disposal method. The seventh bit in they byte is the\n<em>user input flag</em>. When set to 1, that means that the decoder\nwill wait for some sort of &quot;input&quot; from the person viewing\nthe image before moving on to the next scene. I'm guessing it's highly\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 11,
                  "endLine": 345,
                  "endColumn": 19,
                  "snippet": {
                    "text": "a value of 1 which tells the decoder to leave the image in place and\ndraw the next image on top of it. A value of 2 would have meant that\nthe canvas should be restored to the background color (as indicated by\nthe logical screen descriptor). A value of 3 is defined to mean that\nthe decoder should restore the canvas to its previous state before the\ncurrent image was drawn. I don't believe that this value is widely\nsupported but haven't had the chance to test it out. The behavior for\n",
                    "rendered": {
                      "text": "a value of 1 which tells the decoder to leave the image in place and\ndraw the next image on top of it. A value of 2 would have meant that\nthe canvas should be restored to the background color (as indicated by\nthe logical screen descriptor). A value of 3 is defined to mean that\nthe decoder should restore the canvas to its previous state before the\ncurrent image was drawn. I don't believe that this value is widely\nsupported but haven't had the chance to test it out. The behavior for\n",
                      "markdown": "`a value of 1 which tells the decoder to leave the image in place and\ndraw the next image on top of it. A value of 2 would have meant that\nthe canvas should be restored to the background color (as indicated by\nthe logical screen descriptor). A value of 3 is defined to mean that\nthe decoder should restore the canvas to its previous state before the\ncurrent image was drawn. I don't believe that this value is widely\nsupported but haven't had the chance to test it out. The behavior for\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 22,
                  "endLine": 343,
                  "endColumn": 27,
                  "snippet": {
                    "text": "data when you move onto the next. We have three bits which means we\ncan represent a number between 0 and 7. Our sample animated image has\na value of 1 which tells the decoder to leave the image in place and\ndraw the next image on top of it. A value of 2 would have meant that\nthe canvas should be restored to the background color (as indicated by\nthe logical screen descriptor). A value of 3 is defined to mean that\nthe decoder should restore the canvas to its previous state before the\n",
                    "rendered": {
                      "text": "data when you move onto the next. We have three bits which means we\ncan represent a number between 0 and 7. Our sample animated image has\na value of 1 which tells the decoder to leave the image in place and\ndraw the next image on top of it. A value of 2 would have meant that\nthe canvas should be restored to the background color (as indicated by\nthe logical screen descriptor). A value of 3 is defined to mean that\nthe decoder should restore the canvas to its previous state before the\n",
                      "markdown": "`data when you move onto the next. We have three bits which means we\ncan represent a number between 0 and 7. Our sample animated image has\na value of 1 which tells the decoder to leave the image in place and\ndraw the next image on top of it. A value of 2 would have meant that\nthe canvas should be restored to the background color (as indicated by\nthe logical screen descriptor). A value of 3 is defined to mean that\nthe decoder should restore the canvas to its previous state before the\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 56,
                  "endLine": 323,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t<tr>\n\t<td><img src=\"sample_2_animation_green.gif\" alt=\"scene 1: green light\" width=\"11\" height=\"29\"/></td>\n\t<td><img src=\"sample_2_animation_yellow.gif\" alt=\"scene 2: yellow light\" width=\"11\" height=\"29\"/></td>\n\t<td><img src=\"sample_2_animation_red.gif\" alt=\"scene 3: red light\" width=\"11\" height=\"29\"/></td>\n\t</tr>\n</table>\n\n",
                    "rendered": {
                      "text": "\t<tr>\n\t<td><img src=\"sample_2_animation_green.gif\" alt=\"scene 1: green light\" width=\"11\" height=\"29\"/></td>\n\t<td><img src=\"sample_2_animation_yellow.gif\" alt=\"scene 2: yellow light\" width=\"11\" height=\"29\"/></td>\n\t<td><img src=\"sample_2_animation_red.gif\" alt=\"scene 3: red light\" width=\"11\" height=\"29\"/></td>\n\t</tr>\n</table>\n\n",
                      "markdown": "`\t<tr>\n\t<td><img src=\"sample_2_animation_green.gif\" alt=\"scene 1: green light\" width=\"11\" height=\"29\"/></td>\n\t<td><img src=\"sample_2_animation_yellow.gif\" alt=\"scene 2: yellow light\" width=\"11\" height=\"29\"/></td>\n\t<td><img src=\"sample_2_animation_red.gif\" alt=\"scene 3: red light\" width=\"11\" height=\"29\"/></td>\n\t</tr>\n</table>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 66,
                  "endLine": 287,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n<p>This file is similar to  the ones we've previously encountered. The\nbytes   start  out  with   the  GIF   header.  Next   we  have   a  <a\nhref=\"bits_and_bytes.html#logical_screen_descriptor_block\">logical\nscreen descriptor</a> which  tells us that our image is  11px by 29 px\nand will have  a global color table  with 8 colors in it  (of which we\nonly really need 5). Immediately after, follows the global color table\nwhich  tells  us what  those  colors  are  (0=red, 1=green,  2=yellow,\n",
                    "rendered": {
                      "text": "\n<p>This file is similar to  the ones we've previously encountered. The\nbytes   start  out  with   the  GIF   header.  Next   we  have   a  <a\nhref=\"bits_and_bytes.html#logical_screen_descriptor_block\">logical\nscreen descriptor</a> which  tells us that our image is  11px by 29 px\nand will have  a global color table  with 8 colors in it  (of which we\nonly really need 5). Immediately after, follows the global color table\nwhich  tells  us what  those  colors  are  (0=red, 1=green,  2=yellow,\n",
                      "markdown": "`\n<p>This file is similar to  the ones we've previously encountered. The\nbytes   start  out  with   the  GIF   header.  Next   we  have   a  <a\nhref=\"bits_and_bytes.html#logical_screen_descriptor_block\">logical\nscreen descriptor</a> which  tells us that our image is  11px by 29 px\nand will have  a global color table  with 8 colors in it  (of which we\nonly really need 5). Immediately after, follows the global color table\nwhich  tells  us what  those  colors  are  (0=red, 1=green,  2=yellow,\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/animation_and_transparency.html"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 55,
                  "endLine": 55,
                  "endColumn": 61,
                  "snippet": {
                    "text": "each slightly different from the one before, which, when rapidly shown\none after the other, give the illusion of motion. Animation in GIF\nimages is achieved in much the same way. Multiple images may be stored\nin the same file and you can tell the computer how much time to wait\nbefore showing the next image. Let's walk though the parts that make\nup this simple traffic light animation.\n</p>\n",
                    "rendered": {
                      "text": "each slightly different from the one before, which, when rapidly shown\none after the other, give the illusion of motion. Animation in GIF\nimages is achieved in much the same way. Multiple images may be stored\nin the same file and you can tell the computer how much time to wait\nbefore showing the next image. Let's walk though the parts that make\nup this simple traffic light animation.\n</p>\n",
                      "markdown": "`each slightly different from the one before, which, when rapidly shown\none after the other, give the illusion of motion. Animation in GIF\nimages is achieved in much the same way. Multiple images may be stored\nin the same file and you can tell the computer how much time to wait\nbefore showing the next image. Let's walk though the parts that make\nup this simple traffic light animation.\n</p>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 46,
                  "endLine": 141,
                  "endColumn": 55,
                  "snippet": {
                    "text": "23.</para>\n\n<para>A netscape loop declaration creates an application extension\nblock containing a NETSCAPE 2.0 animation loop control with a\nspecified repeat count (repeat count 0 means loop forever). This must\nbe immediately after the header declaration. These loop blocks are\ninterpreted by the Netscape/Mozilla/Firefox line of browsers.</para> \n",
                    "rendered": {
                      "text": "23.</para>\n\n<para>A netscape loop declaration creates an application extension\nblock containing a NETSCAPE 2.0 animation loop control with a\nspecified repeat count (repeat count 0 means loop forever). This must\nbe immediately after the header declaration. These loop blocks are\ninterpreted by the Netscape/Mozilla/Firefox line of browsers.</para> \n",
                      "markdown": "`23.</para>\n\n<para>A netscape loop declaration creates an application extension\nblock containing a NETSCAPE 2.0 animation loop control with a\nspecified repeat count (repeat count 0 means loop forever). This must\nbe immediately after the header declaration. These loop blocks are\ninterpreted by the Netscape/Mozilla/Firefox line of browsers.</para> \n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 61,
                  "endLine": 137,
                  "snippet": {
                    "text": "newline is stripped).  Text may include standard C-style octal and hex\nescapes preceded by a backslash.</para>\n\n<para>A graphics control block declaration creates a graphics control\nextension block; for the field semantics see the GIF89 standard, part\n23.</para>\n\n<para>A netscape loop declaration creates an application extension\n",
                    "rendered": {
                      "text": "newline is stripped).  Text may include standard C-style octal and hex\nescapes preceded by a backslash.</para>\n\n<para>A graphics control block declaration creates a graphics control\nextension block; for the field semantics see the GIF89 standard, part\n23.</para>\n\n<para>A netscape loop declaration creates an application extension\n",
                      "markdown": "`newline is stripped).  Text may include standard C-style octal and hex\nescapes preceded by a backslash.</para>\n\n<para>A graphics control block declaration creates a graphics control\nextension block; for the field semantics see the GIF89 standard, part\n23.</para>\n\n<para>A netscape loop declaration creates an application extension\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 16,
                  "endLine": 136,
                  "endColumn": 25,
                  "snippet": {
                    "text": "newline is stripped).  Text may include standard C-style octal and hex\nescapes preceded by a backslash.</para>\n\n<para>A graphics control block declaration creates a graphics control\nextension block; for the field semantics see the GIF89 standard, part\n23.</para>\n\n",
                    "rendered": {
                      "text": "newline is stripped).  Text may include standard C-style octal and hex\nescapes preceded by a backslash.</para>\n\n<para>A graphics control block declaration creates a graphics control\nextension block; for the field semantics see the GIF89 standard, part\n23.</para>\n\n",
                      "markdown": "`newline is stripped).  Text may include standard C-style octal and hex\nescapes preceded by a backslash.</para>\n\n<para>A graphics control block declaration creates a graphics control\nextension block; for the field semantics see the GIF89 standard, part\n23.</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 43,
                  "endLine": 124,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n<para>The <quote>comment</quote>, <quote>plaintext</quote> or\n<quote>ggraphics control</quote> keywords lead defined GIF89 extension\nrecord data. The final GIF89 type, graphics control and application\nblock, are not yet supported, but the code does recognize a Netscape\nloop block.  You can also say <quote>extension</quote> followed by a\nhexadecimal record type.  All of these extension declarations must be\n",
                    "rendered": {
                      "text": "\n<para>The <quote>comment</quote>, <quote>plaintext</quote> or\n<quote>ggraphics control</quote> keywords lead defined GIF89 extension\nrecord data. The final GIF89 type, graphics control and application\nblock, are not yet supported, but the code does recognize a Netscape\nloop block.  You can also say <quote>extension</quote> followed by a\nhexadecimal record type.  All of these extension declarations must be\n",
                      "markdown": "`\n<para>The <quote>comment</quote>, <quote>plaintext</quote> or\n<quote>ggraphics control</quote> keywords lead defined GIF89 extension\nrecord data. The final GIF89 type, graphics control and application\nblock, are not yet supported, but the code does recognize a Netscape\nloop block.  You can also say <quote>extension</quote> followed by a\nhexadecimal record type.  All of these extension declarations must be\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 26,
                  "endLine": 84,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                    "rendered": {
                      "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                      "markdown": "`\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 15,
                  "endLine": 210,
                  "endColumn": 20,
                  "snippet": {
                    "text": "<refsect1><title>Example:</title>\n\n<para>A sample icon file called <filename>sample.ico</filename> is\nincluded in the pic directory of the GIFLIB source\ndistribution.</para>\n\n</refsect1>\n",
                    "rendered": {
                      "text": "<refsect1><title>Example:</title>\n\n<para>A sample icon file called <filename>sample.ico</filename> is\nincluded in the pic directory of the GIFLIB source\ndistribution.</para>\n\n</refsect1>\n",
                      "markdown": "`<refsect1><title>Example:</title>\n\n<para>A sample icon file called <filename>sample.ico</filename> is\nincluded in the pic directory of the GIFLIB source\ndistribution.</para>\n\n</refsect1>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 36,
                  "endLine": 148,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n<para>All &lt;digits&gt; tokens are interpreted as decimal numerals;\n&lt;hex-digits&gt; tokens are interpreted as two hex digits (a byte). All\ncoordinates are zero-origin with the top left corner (0,0).  Range\nchecking is weak and signedness checking nonexistent; caveat\nhacker!</para>\n\n",
                    "rendered": {
                      "text": "\n<para>All &lt;digits&gt; tokens are interpreted as decimal numerals;\n&lt;hex-digits&gt; tokens are interpreted as two hex digits (a byte). All\ncoordinates are zero-origin with the top left corner (0,0).  Range\nchecking is weak and signedness checking nonexistent; caveat\nhacker!</para>\n\n",
                      "markdown": "`\n<para>All &lt;digits&gt; tokens are interpreted as decimal numerals;\n&lt;hex-digits&gt; tokens are interpreted as two hex digits (a byte). All\ncoordinates are zero-origin with the top left corner (0,0).  Range\nchecking is weak and signedness checking nonexistent; caveat\nhacker!</para>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 56,
                  "endLine": 111,
                  "endColumn": 62,
                  "snippet": {
                    "text": "raster blocks.  As these must be printable and non-whitespace, you can\nonly specify 94 colors per icon.  Life is like that sometimes.</para>\n\n<para>A color table declaration can also set the table's sort flag with \n\"sort flag on\" or \"sort flag off\" on any line before the end.</para>\n\n<para>An <quote>ascii</quote> raster block is just a block of key\n",
                    "rendered": {
                      "text": "raster blocks.  As these must be printable and non-whitespace, you can\nonly specify 94 colors per icon.  Life is like that sometimes.</para>\n\n<para>A color table declaration can also set the table's sort flag with \n\"sort flag on\" or \"sort flag off\" on any line before the end.</para>\n\n<para>An <quote>ascii</quote> raster block is just a block of key\n",
                      "markdown": "`raster blocks.  As these must be printable and non-whitespace, you can\nonly specify 94 colors per icon.  Life is like that sometimes.</para>\n\n<para>A color table declaration can also set the table's sort flag with \n\"sort flag on\" or \"sort flag off\" on any line before the end.</para>\n\n<para>An <quote>ascii</quote> raster block is just a block of key\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 50,
                  "endLine": 92,
                  "snippet": {
                    "text": "&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n\n<para>If the data types of the <quote>screen height</quote>,\n",
                    "rendered": {
                      "text": "&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n\n<para>If the data types of the <quote>screen height</quote>,\n",
                      "markdown": "`&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n\n<para>If the data types of the <quote>screen height</quote>,\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 38,
                  "endLine": 91,
                  "snippet": {
                    "text": "\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n\n",
                    "rendered": {
                      "text": "\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n\n",
                      "markdown": "`\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 42,
                  "endLine": 90,
                  "snippet": {
                    "text": "\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n",
                    "rendered": {
                      "text": "\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n",
                      "markdown": "`\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n</programlisting>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 49,
                  "endLine": 89,
                  "snippet": {
                    "text": "                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n",
                    "rendered": {
                      "text": "                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n",
                      "markdown": "`                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n                | transparent index &lt;digits&gt; NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 66,
                  "endLine": 87,
                  "snippet": {
                    "text": "\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n",
                      "markdown": "`\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n                | delay &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 59,
                  "endLine": 86,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n",
                    "rendered": {
                      "text": "\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n",
                      "markdown": "`\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 32,
                  "endLine": 86,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n",
                    "rendered": {
                      "text": "\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n",
                      "markdown": "`\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 47,
                  "endLine": 86,
                  "snippet": {
                    "text": "&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n",
                    "rendered": {
                      "text": "&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n",
                      "markdown": "`&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n                | user input flag {on|off} NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 61,
                  "endLine": 85,
                  "snippet": {
                    "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n",
                      "markdown": "`\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n&lt;GCB-part&gt; ::= disposal mode &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 54,
                  "endLine": 84,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                    "rendered": {
                      "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                      "markdown": "`\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 34,
                  "endLine": 84,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                    "rendered": {
                      "text": "\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                      "markdown": "`\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 55,
                  "endLine": 84,
                  "snippet": {
                    "text": "\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                    "rendered": {
                      "text": "\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n",
                      "markdown": "`\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 48,
                  "endLine": 83,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n",
                    "rendered": {
                      "text": "\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n",
                      "markdown": "`\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 21,
                  "endLine": 83,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n",
                    "rendered": {
                      "text": "\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n",
                      "markdown": "`\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 70,
                  "endLine": 83,
                  "snippet": {
                    "text": "\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n",
                    "rendered": {
                      "text": "\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n",
                      "markdown": "`\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n\t\t| extension &lt;hex-digits&gt; NL &lt;extension-block&gt; NL end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 63,
                  "endLine": 82,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n",
                      "markdown": "`\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 36,
                  "endLine": 82,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n",
                      "markdown": "`\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n                | graphics control NL &lt;GCB-part&gt; NL end NL\n                | netscape loop  &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 60,
                  "endLine": 80,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n",
                    "rendered": {
                      "text": "\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n",
                      "markdown": "`\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 34,
                  "endLine": 80,
                  "snippet": {
                    "text": "&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n",
                    "rendered": {
                      "text": "&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n",
                      "markdown": "`&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n\t\t| &lt;plaintext&gt; NL &lt;extension-block&gt; NL end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 21,
                  "endLine": 79,
                  "snippet": {
                    "text": "\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n",
                    "rendered": {
                      "text": "\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n",
                      "markdown": "`\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n&lt;extension&gt; := &lt;comment&gt; NL &lt;extension-block&gt; NL end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 30,
                  "endLine": 78,
                  "snippet": {
                    "text": "\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n",
                    "rendered": {
                      "text": "\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n",
                      "markdown": "`\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 55,
                  "endLine": 77,
                  "snippet": {
                    "text": "\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n",
                    "rendered": {
                      "text": "\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n",
                      "markdown": "`\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n\t\t\t| image bits &lt;digits&gt; by &lt;digits&gt; [hex|ascii] NL &lt;raster-block&gt;\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 36,
                  "endLine": 76,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n",
                    "rendered": {
                      "text": "\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n",
                      "markdown": "`\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n&lt;image-declarations&gt; ::= image top &lt;digits&gt; NL\n\t\t\t| image left &lt;digits&gt; NL\n\t\t\t| image interlaced NL\n\t\t\t| image map &lt;color-table&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 9,
                  "endLine": 72,
                  "snippet": {
                    "text": "                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n",
                    "rendered": {
                      "text": "                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n",
                      "markdown": "`                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 49,
                  "endLine": 71,
                  "snippet": {
                    "text": "&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n",
                    "rendered": {
                      "text": "&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n",
                      "markdown": "`&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n\t\t\t&lt;raster-picture&gt;\n\t\t\t[ &lt;extension&gt; ]\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 36,
                  "endLine": 69,
                  "snippet": {
                    "text": "&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n",
                    "rendered": {
                      "text": "&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n",
                      "markdown": "`&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n\t\t\t&lt;image-declaration&gt;...\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endLine": 68,
                  "endColumn": 23,
                  "snippet": {
                    "text": "&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n",
                    "rendered": {
                      "text": "&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n",
                      "markdown": "`&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 96,
                  "endLine": 68,
                  "snippet": {
                    "text": "\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n",
                    "rendered": {
                      "text": "\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n",
                      "markdown": "`\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n&lt;image-block&gt; ::= include &lt;file-name&gt; NL\n\t\t| image NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 56,
                  "endLine": 66,
                  "snippet": {
                    "text": "\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n",
                    "rendered": {
                      "text": "\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n",
                      "markdown": "`\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n                | sort flag {on|off} NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 34,
                  "endLine": 64,
                  "snippet": {
                    "text": "\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n",
                    "rendered": {
                      "text": "\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n",
                      "markdown": "`\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n&lt;color-declaration&gt; ::= rgb &lt;digits&gt; &lt;digits&gt; &lt;digits&gt; [ is &lt;key&gt;] NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 63,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n",
                    "rendered": {
                      "text": "\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n",
                      "markdown": "`\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 36,
                  "endLine": 63,
                  "snippet": {
                    "text": "\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n",
                    "rendered": {
                      "text": "\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n",
                      "markdown": "`\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 36,
                  "endLine": 62,
                  "snippet": {
                    "text": "\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n",
                    "rendered": {
                      "text": "\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n",
                      "markdown": "`\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n&lt;color-table&gt; ::= &lt;color-declaration&gt;... end NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 3,
                  "endLine": 61,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n",
                    "rendered": {
                      "text": "\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n",
                      "markdown": "`\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 32,
                  "endLine": 61,
                  "snippet": {
                    "text": "&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n",
                    "rendered": {
                      "text": "&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n",
                      "markdown": "`&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 3,
                  "endLine": 60,
                  "endColumn": 11,
                  "snippet": {
                    "text": "&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n",
                    "rendered": {
                      "text": "&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n",
                      "markdown": "`&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 32,
                  "endLine": 60,
                  "snippet": {
                    "text": "\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n",
                    "rendered": {
                      "text": "\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n",
                      "markdown": "`\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n\t\t| screen map &lt;color-table&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n",
                      "markdown": "`\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 59,
                  "snippet": {
                    "text": "&lt;header-block&gt; ::= &lt;header-declaration&gt;...\n\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "&lt;header-block&gt; ::= &lt;header-declaration&gt;...\n\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n",
                      "markdown": "`&lt;header-block&gt; ::= &lt;header-declaration&gt;...\n\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n\t\t| pixel aspect byte &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifbuild.xml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 11,
                  "snippet": {
                    "text": "&lt;header-block&gt; ::= &lt;header-declaration&gt;...\n\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n",
                    "rendered": {
                      "text": "&lt;header-block&gt; ::= &lt;header-declaration&gt;...\n\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n",
                      "markdown": "`&lt;header-block&gt; ::= &lt;header-declaration&gt;...\n\n&lt;header-declaration ::=\n\t\t| screen width &lt;digits&gt; NL\n\t\t| screen height &lt;digits&gt; NL\n\t\t| screen colors &lt;digits&gt; NL\n\t\t| screen background &lt;digits&gt; NL\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifhisto.xml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 239,
                  "endLine": 56,
                  "endColumn": 245,
                  "snippet": {
                    "text": "<varlistentry>\n<term>-t</term>\n<listitem>\n<para>Force output to be text file of the following form: (colormap size) lines each containing two integers: number of times color appeared, and color index.  Lines are in increasing color index order. This output can be fed directly to a sort program if ordering by color frequency is desired.</para>\n<para>The colormap picked is the one to be used for the image to\ngenerate histogram for, as defined in GIF format.</para>\n</listitem>\n",
                    "rendered": {
                      "text": "<varlistentry>\n<term>-t</term>\n<listitem>\n<para>Force output to be text file of the following form: (colormap size) lines each containing two integers: number of times color appeared, and color index.  Lines are in increasing color index order. This output can be fed directly to a sort program if ordering by color frequency is desired.</para>\n<para>The colormap picked is the one to be used for the image to\ngenerate histogram for, as defined in GIF format.</para>\n</listitem>\n",
                      "markdown": "`<varlistentry>\n<term>-t</term>\n<listitem>\n<para>Force output to be text file of the following form: (colormap size) lines each containing two integers: number of times color appeared, and color index.  Lines are in increasing color index order. This output can be fed directly to a sort program if ordering by color frequency is desired.</para>\n<para>The colormap picked is the one to be used for the image to\ngenerate histogram for, as defined in GIF format.</para>\n</listitem>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 39,
                  "endLine": 125,
                  "snippet": {
                    "text": "2000000002200000000220000000022000000002200000000231111111133111111113311111111331111111133111111113\n2222222222222222222222222222222222222222222222222233333333333333333333333333333333333333333333333333\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                    "rendered": {
                      "text": "2000000002200000000220000000022000000002200000000231111111133111111113311111111331111111133111111113\n2222222222222222222222222222222222222222222222222233333333333333333333333333333333333333333333333333\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                      "markdown": "`2000000002200000000220000000022000000002200000000231111111133111111113311111111331111111133111111113\n2222222222222222222222222222222222222222222222222233333333333333333333333333333333333333333333333333\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 100 by 100\n3333333333333333333333333333333333333333333333333322222222222222222222222222222222222222222222222222\n3111111113311111111331111111133111111113311111111320000000022000000002200000000220000000022000000002\n",
                    "rendered": {
                      "text": "\nimage # 1\nimage left 0\nimage top 0\nimage bits 100 by 100\n3333333333333333333333333333333333333333333333333322222222222222222222222222222222222222222222222222\n3111111113311111111331111111133111111113311111111320000000022000000002200000000220000000022000000002\n",
                      "markdown": "`\nimage # 1\nimage left 0\nimage top 0\nimage bits 100 by 100\n3333333333333333333333333333333333333333333333333322222222222222222222222222222222222222222222222222\n3111111113311111111331111111133111111113311111111320000000022000000002200000000220000000022000000002\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 8,
                  "endColumn": 6,
                  "snippet": {
                    "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag on\n\trgb 000 000 248 is 0\n\trgb 248 000 000 is 1\n\trgb 000 016 160 is 2\n",
                    "rendered": {
                      "text": "pixel aspect byte 0\n\nscreen map\n\tsort flag on\n\trgb 000 000 248 is 0\n\trgb 248 000 000 is 1\n\trgb 000 016 160 is 2\n",
                      "markdown": "`pixel aspect byte 0\n\nscreen map\n\tsort flag on\n\trgb 000 000 248 is 0\n\trgb 248 000 000 is 1\n\trgb 000 016 160 is 2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen colors 8\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag on\n\trgb 000 000 248 is 0\n\trgb 248 000 000 is 1\n",
                    "rendered": {
                      "text": "screen colors 8\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag on\n\trgb 000 000 248 is 0\n\trgb 248 000 000 is 1\n",
                      "markdown": "`screen colors 8\nscreen background 0\npixel aspect byte 0\n\nscreen map\n\tsort flag on\n\trgb 000 000 248 is 0\n\trgb 248 000 000 is 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                    "rendered": {
                      "text": "screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n\nscreen map\n",
                      "markdown": "`screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n\nscreen map\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n\n",
                    "rendered": {
                      "text": "screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n\n",
                      "markdown": "`screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.ico"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 16,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n",
                    "rendered": {
                      "text": "screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n",
                      "markdown": "`screen width 100\nscreen height 100\nscreen colors 8\nscreen background 0\npixel aspect byte 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/x-trans.dmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 11,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nGIF89 comment (Ext Code = 254 [ ]):\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 0\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                    "rendered": {
                      "text": "\nGIF89 comment (Ext Code = 254 [ ]):\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 0\n\tUser Input Flag: 0\n\tTransparency on: yes\n",
                      "markdown": "`\nGIF89 comment (Ext Code = 254 [ ]):\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 0\n\tUser Input Flag: 0\n\tTransparency on: yes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/x-trans.dmp"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 100, Height = 100.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 100, Height = 100.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 100, Height = 100.\n\tImage is Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/x-trans.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 100, Height = 100.\n\tColorResolution = 7, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 100, Height = 100.\n\tColorResolution = 7, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 100, Height = 100.\n\tColorResolution = 7, BitsPerPixel = 8, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 27,
                  "endLine": 24,
                  "endColumn": 80,
                  "snippet": {
                    "text": "static char *CtrlStr =\n    PROGRAM_NAME \" v%- d%- t%-Characters!s h%- GifFile(s)!*s\";\n\nstatic char KeyLetters[] = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO\"\n                           \"PQRSTUVWXYZ!\\\"#$%&'()*+,-./:<=>?@[\\\\]^_`{|}~\";\n#define PRINTABLES (sizeof(KeyLetters) - 1)\n\n",
                    "rendered": {
                      "text": "static char *CtrlStr =\n    PROGRAM_NAME \" v%- d%- t%-Characters!s h%- GifFile(s)!*s\";\n\nstatic char KeyLetters[] = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO\"\n                           \"PQRSTUVWXYZ!\\\"#$%&'()*+,-./:<=>?@[\\\\]^_`{|}~\";\n#define PRINTABLES (sizeof(KeyLetters) - 1)\n\n",
                      "markdown": "`static char *CtrlStr =\n    PROGRAM_NAME \" v%- d%- t%-Characters!s h%- GifFile(s)!*s\";\n\nstatic char KeyLetters[] = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO\"\n                           \"PQRSTUVWXYZ!\\\"#$%&'()*+,-./:<=>?@[\\\\]^_`{|}~\";\n#define PRINTABLES (sizeof(KeyLetters) - 1)\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 33,
                  "endLine": 751,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\tprintf(\"graphics control\\n\");\n\t\t\tif (DGifExtensionToGCB(ep->ByteCount, ep->Bytes,\n\t\t\t                       &gcb) == GIF_ERROR) {\n\t\t\t\tGIF_MESSAGE(\"invalid graphics control block\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\tprintf(\"\\tdisposal mode %d\\n\", gcb.DisposalMode);\n",
                    "rendered": {
                      "text": "\t\t\tprintf(\"graphics control\\n\");\n\t\t\tif (DGifExtensionToGCB(ep->ByteCount, ep->Bytes,\n\t\t\t                       &gcb) == GIF_ERROR) {\n\t\t\t\tGIF_MESSAGE(\"invalid graphics control block\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\tprintf(\"\\tdisposal mode %d\\n\", gcb.DisposalMode);\n",
                      "markdown": "`\t\t\tprintf(\"graphics control\\n\");\n\t\t\tif (DGifExtensionToGCB(ep->ByteCount, ep->Bytes,\n\t\t\t                       &gcb) == GIF_ERROR) {\n\t\t\t\tGIF_MESSAGE(\"invalid graphics control block\");\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t\tprintf(\"\\tdisposal mode %d\\n\", gcb.DisposalMode);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 599,
                  "startColumn": 27,
                  "endLine": 599,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t\tGifQprintf(\"%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, GifFileOut->ImageCount,\n\t\t\t           NewImage->ImageDesc.Left,\n\t\t\t           NewImage->ImageDesc.Top,\n",
                    "rendered": {
                      "text": "\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t\tGifQprintf(\"%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, GifFileOut->ImageCount,\n\t\t\t           NewImage->ImageDesc.Left,\n\t\t\t           NewImage->ImageDesc.Top,\n",
                      "markdown": "`\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\n\t\t\tGifQprintf(\"%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t           PROGRAM_NAME, GifFileOut->ImageCount,\n\t\t\t           NewImage->ImageDesc.Left,\n\t\t\t           NewImage->ImageDesc.Top,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 28,
                  "endLine": 359,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\t\t\t                    Translation);\n\t\t\t\t}\n\n\t\t\t\tGifQprintf(\"%s: Image %d at (%d, %d) [%dx%d]: \"\n\t\t\t\t           \"from %s\\n\",\n\t\t\t\t           PROGRAM_NAME, GifFileOut->ImageCount,\n\t\t\t\t           NewImage->ImageDesc.Left,\n",
                    "rendered": {
                      "text": "\t\t\t\t\t                    Translation);\n\t\t\t\t}\n\n\t\t\t\tGifQprintf(\"%s: Image %d at (%d, %d) [%dx%d]: \"\n\t\t\t\t           \"from %s\\n\",\n\t\t\t\t           PROGRAM_NAME, GifFileOut->ImageCount,\n\t\t\t\t           NewImage->ImageDesc.Left,\n",
                      "markdown": "`\t\t\t\t\t                    Translation);\n\t\t\t\t}\n\n\t\t\t\tGifQprintf(\"%s: Image %d at (%d, %d) [%dx%d]: \"\n\t\t\t\t           \"from %s\\n\",\n\t\t\t\t           PROGRAM_NAME, GifFileOut->ImageCount,\n\t\t\t\t           NewImage->ImageDesc.Left,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 942,
                  "startColumn": 57,
                  "endLine": 942,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\tif (GifFile->SBackGroundColor < 0 ||\n\t    (GifFile->SColorMap &&\n\t     GifFile->SBackGroundColor >= GifFile->SColorMap->ColorCount)) {\n\t\tfprintf(stderr, \"gifbuild: background color invalid for screen \"\n\t\t                \"colormap.\\n\");\n\t}\n\n",
                    "rendered": {
                      "text": "\tif (GifFile->SBackGroundColor < 0 ||\n\t    (GifFile->SColorMap &&\n\t     GifFile->SBackGroundColor >= GifFile->SColorMap->ColorCount)) {\n\t\tfprintf(stderr, \"gifbuild: background color invalid for screen \"\n\t\t                \"colormap.\\n\");\n\t}\n\n",
                      "markdown": "`\tif (GifFile->SBackGroundColor < 0 ||\n\t    (GifFile->SColorMap &&\n\t     GifFile->SBackGroundColor >= GifFile->SColorMap->ColorCount)) {\n\t\tfprintf(stderr, \"gifbuild: background color invalid for screen \"\n\t\t                \"colormap.\\n\");\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 42,
                  "endLine": 843,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\t\tDumpExtensions(GifFile, image->ExtensionBlockCount,\n\t\t               image->ExtensionBlocks);\n\n\t\tprintf(\"image # %d\\nimage left %d\\nimage top %d\\n\", im + 1,\n\t\t       image->ImageDesc.Left, image->ImageDesc.Top);\n\t\tif (image->ImageDesc.Interlace) {\n\t\t\tprintf(\"image interlaced\\n\");\n",
                    "rendered": {
                      "text": "\t\tDumpExtensions(GifFile, image->ExtensionBlockCount,\n\t\t               image->ExtensionBlocks);\n\n\t\tprintf(\"image # %d\\nimage left %d\\nimage top %d\\n\", im + 1,\n\t\t       image->ImageDesc.Left, image->ImageDesc.Top);\n\t\tif (image->ImageDesc.Interlace) {\n\t\t\tprintf(\"image interlaced\\n\");\n",
                      "markdown": "`\t\tDumpExtensions(GifFile, image->ExtensionBlockCount,\n\t\t               image->ExtensionBlocks);\n\n\t\tprintf(\"image # %d\\nimage left %d\\nimage top %d\\n\", im + 1,\n\t\t       image->ImageDesc.Left, image->ImageDesc.Top);\n\t\tif (image->ImageDesc.Interlace) {\n\t\t\tprintf(\"image interlaced\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 15,
                  "endLine": 691,
                  "endColumn": 19,
                  "snippet": {
                    "text": "{\n\tGifByteType *cp;\n\n\tfor (cp = buf; cp < buf + len; cp++) {\n\t\tif (isprint((int)(*cp)) || *cp == ' ') {\n\t\t\tputchar(*cp);\n\t\t} else if (*cp == '\\n') {\n",
                    "rendered": {
                      "text": "{\n\tGifByteType *cp;\n\n\tfor (cp = buf; cp < buf + len; cp++) {\n\t\tif (isprint((int)(*cp)) || *cp == ' ') {\n\t\t\tputchar(*cp);\n\t\t} else if (*cp == '\\n') {\n",
                      "markdown": "`{\n\tGifByteType *cp;\n\n\tfor (cp = buf; cp < buf + len; cp++) {\n\t\tif (isprint((int)(*cp)) || *cp == ' ') {\n\t\t\tputchar(*cp);\n\t\t} else if (*cp == '\\n') {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 29,
                  "endLine": 566,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t/*\n\t\t * Accept image attributes\n\t\t */\n\t\telse if (sscanf(buf, \"image top %d\\n\",\n\t\t                &NewImage->ImageDesc.Top) == 1) {\n\t\t\tcontinue;\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t/*\n\t\t * Accept image attributes\n\t\t */\n\t\telse if (sscanf(buf, \"image top %d\\n\",\n\t\t                &NewImage->ImageDesc.Top) == 1) {\n\t\t\tcontinue;\n\t\t}\n",
                      "markdown": "`\t\t/*\n\t\t * Accept image attributes\n\t\t */\n\t\telse if (sscanf(buf, \"image top %d\\n\",\n\t\t                &NewImage->ImageDesc.Top) == 1) {\n\t\t\tcontinue;\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 24,
                  "endLine": 255,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tSortFlag = true;\n\t\t}\n\n\t\telse if (strcmp(buf, \"\tsort flag off\\n\") == 0) {\n\t\t\tSortFlag = false;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tSortFlag = true;\n\t\t}\n\n\t\telse if (strcmp(buf, \"\tsort flag off\\n\") == 0) {\n\t\t\tSortFlag = false;\n\t\t}\n\n",
                      "markdown": "`\t\t\tSortFlag = true;\n\t\t}\n\n\t\telse if (strcmp(buf, \"\tsort flag off\\n\") == 0) {\n\t\t\tSortFlag = false;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifbuild.c"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 24,
                  "endLine": 251,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tColorMapSize++;\n\t\t}\n\n\t\telse if (strcmp(buf, \"\tsort flag on\\n\") == 0) {\n\t\t\tSortFlag = true;\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tColorMapSize++;\n\t\t}\n\n\t\telse if (strcmp(buf, \"\tsort flag on\\n\") == 0) {\n\t\t\tSortFlag = true;\n\t\t}\n\n",
                      "markdown": "`\t\t\tColorMapSize++;\n\t\t}\n\n\t\telse if (strcmp(buf, \"\tsort flag on\\n\") == 0) {\n\t\t\tSortFlag = true;\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifhisto.c"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 23,
                  "endLine": 128,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\t    (GifRowType)malloc(GifFileIn->Image.Width *\n\t\t\t\t                       sizeof(GifPixelType));\n\t\t\t\tGifQprintf(\n\t\t\t\t    \"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t\t    PROGRAM_NAME, ImageNum,\n\t\t\t\t    GifFileIn->Image.Left, GifFileIn->Image.Top,\n\t\t\t\t    GifFileIn->Image.Width,\n",
                    "rendered": {
                      "text": "\t\t\t\t    (GifRowType)malloc(GifFileIn->Image.Width *\n\t\t\t\t                       sizeof(GifPixelType));\n\t\t\t\tGifQprintf(\n\t\t\t\t    \"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t\t    PROGRAM_NAME, ImageNum,\n\t\t\t\t    GifFileIn->Image.Left, GifFileIn->Image.Top,\n\t\t\t\t    GifFileIn->Image.Width,\n",
                      "markdown": "`\t\t\t\t    (GifRowType)malloc(GifFileIn->Image.Width *\n\t\t\t\t                       sizeof(GifPixelType));\n\t\t\t\tGifQprintf(\n\t\t\t\t    \"\\n%s: Image %d at (%d, %d) [%dx%d]:     \",\n\t\t\t\t    PROGRAM_NAME, ImageNum,\n\t\t\t\t    GifFileIn->Image.Left, GifFileIn->Image.Top,\n\t\t\t\t    GifFileIn->Image.Width,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifhisto.c"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 21,
                  "endLine": 111,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t} else if (GifFileIn->SColorMap) {\n\t\t\t\tNumColors = GifFileIn->SColorMap->ColorCount;\n\t\t\t} else {\n\t\t\t\tGIF_EXIT(\"Neither Screen nor Image color map \"\n\t\t\t\t         \"exists.\");\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t} else if (GifFileIn->SColorMap) {\n\t\t\t\tNumColors = GifFileIn->SColorMap->ColorCount;\n\t\t\t} else {\n\t\t\t\tGIF_EXIT(\"Neither Screen nor Image color map \"\n\t\t\t\t         \"exists.\");\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t} else if (GifFileIn->SColorMap) {\n\t\t\t\tNumColors = GifFileIn->SColorMap->ColorCount;\n\t\t\t} else {\n\t\t\t\tGIF_EXIT(\"Neither Screen nor Image color map \"\n\t\t\t\t         \"exists.\");\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/quantize.c"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 35,
                  "endLine": 197,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n#ifdef DEBUG\n\tfprintf(stderr,\n\t        \"Quantization L(0) errors: Red = %d, Green = %d, Blue = %d.\\n\",\n\t        MaxRGBError[0], MaxRGBError[1], MaxRGBError[2]);\n#endif /* DEBUG */\n\n",
                    "rendered": {
                      "text": "\n#ifdef DEBUG\n\tfprintf(stderr,\n\t        \"Quantization L(0) errors: Red = %d, Green = %d, Blue = %d.\\n\",\n\t        MaxRGBError[0], MaxRGBError[1], MaxRGBError[2]);\n#endif /* DEBUG */\n\n",
                      "markdown": "`\n#ifdef DEBUG\n\tfprintf(stderr,\n\t        \"Quantization L(0) errors: Red = %d, Green = %d, Blue = %d.\\n\",\n\t        MaxRGBError[0], MaxRGBError[1], MaxRGBError[2]);\n#endif /* DEBUG */\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/quantize.c"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 3,
                  "endLine": 153,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\tRed = Green = Blue = 0;\n\t\t\twhile (QuantizedColor) {\n\t\t\t\tQuantizedColor->NewColorIndex = i;\n\t\t\t\tRed += QuantizedColor->RGB[0];\n\t\t\t\tGreen += QuantizedColor->RGB[1];\n\t\t\t\tBlue += QuantizedColor->RGB[2];\n\t\t\t\tQuantizedColor = QuantizedColor->Pnext;\n",
                    "rendered": {
                      "text": "\t\t\tRed = Green = Blue = 0;\n\t\t\twhile (QuantizedColor) {\n\t\t\t\tQuantizedColor->NewColorIndex = i;\n\t\t\t\tRed += QuantizedColor->RGB[0];\n\t\t\t\tGreen += QuantizedColor->RGB[1];\n\t\t\t\tBlue += QuantizedColor->RGB[2];\n\t\t\t\tQuantizedColor = QuantizedColor->Pnext;\n",
                      "markdown": "`\t\t\tRed = Green = Blue = 0;\n\t\t\twhile (QuantizedColor) {\n\t\t\t\tQuantizedColor->NewColorIndex = i;\n\t\t\t\tRed += QuantizedColor->RGB[0];\n\t\t\t\tGreen += QuantizedColor->RGB[1];\n\t\t\t\tBlue += QuantizedColor->RGB[2];\n\t\t\t\tQuantizedColor = QuantizedColor->Pnext;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/quantize.c"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 2,
                  "endLine": 150,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tfor (i = 0; i < NewColorMapSize; i++) {\n\t\tif ((j = NewColorSubdiv[i].NumEntries) > 0) {\n\t\t\tQuantizedColor = NewColorSubdiv[i].QuantizedColors;\n\t\t\tRed = Green = Blue = 0;\n\t\t\twhile (QuantizedColor) {\n\t\t\t\tQuantizedColor->NewColorIndex = i;\n\t\t\t\tRed += QuantizedColor->RGB[0];\n",
                    "rendered": {
                      "text": "\tfor (i = 0; i < NewColorMapSize; i++) {\n\t\tif ((j = NewColorSubdiv[i].NumEntries) > 0) {\n\t\t\tQuantizedColor = NewColorSubdiv[i].QuantizedColors;\n\t\t\tRed = Green = Blue = 0;\n\t\t\twhile (QuantizedColor) {\n\t\t\t\tQuantizedColor->NewColorIndex = i;\n\t\t\t\tRed += QuantizedColor->RGB[0];\n",
                      "markdown": "`\tfor (i = 0; i < NewColorMapSize; i++) {\n\t\tif ((j = NewColorSubdiv[i].NumEntries) > 0) {\n\t\t\tQuantizedColor = NewColorSubdiv[i].QuantizedColors;\n\t\t\tRed = Green = Blue = 0;\n\t\t\twhile (QuantizedColor) {\n\t\t\t\tQuantizedColor->NewColorIndex = i;\n\t\t\t\tRed += QuantizedColor->RGB[0];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 39,
                  "endLine": 81,
                  "snippet": {
                    "text": "......XXXX......\n.......XX.......\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                    "rendered": {
                      "text": "......XXXX......\n.......XX.......\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n",
                      "markdown": "`......XXXX......\n.......XX.......\n\n# The following sets edit modes for GNU EMACS\n# Local Variables:\n# mode:picture\n# truncate-lines:t\n# End:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 5,
                  "endLine": 60,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Questionmark\n#\nimage\nimage top 30\nimage left 500\nimage bits 16 by 16\n......XXXXX.....\n",
                    "rendered": {
                      "text": "# Questionmark\n#\nimage\nimage top 30\nimage left 500\nimage bits 16 by 16\n......XXXXX.....\n",
                      "markdown": "`# Questionmark\n#\nimage\nimage top 30\nimage left 500\nimage bits 16 by 16\n......XXXXX.....\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 5,
                  "endLine": 32,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Shield\n#\nimage\nimage top 30\nimage left 50\nimage bits 16 by 16\n################\n",
                    "rendered": {
                      "text": "# Shield\n#\nimage\nimage top 30\nimage left 50\nimage bits 16 by 16\n################\n",
                      "markdown": "`# Shield\n#\nimage\nimage top 30\nimage left 50\nimage bits 16 by 16\n################\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 23,
                  "endLine": 15,
                  "snippet": {
                    "text": "\trgb   0   0 170\tis 1\t# Blue\n\trgb   0 170   0\tis 2\t# Green\n\trgb   0 170 170\tis 3\t# Cyan\n\trgb 170   0   0\tis 4\t# Red\n\trgb 170   0 170\tis 5\t# Magenta\n\trgb 170 170   0\tis 6\t# Brown\n\trgb 170 170 170\tis 7\t# LightGray\n\trgb  85  85  85\tis X\t# DarkGray\n",
                    "rendered": {
                      "text": "\trgb   0   0 170\tis 1\t# Blue\n\trgb   0 170   0\tis 2\t# Green\n\trgb   0 170 170\tis 3\t# Cyan\n\trgb 170   0   0\tis 4\t# Red\n\trgb 170   0 170\tis 5\t# Magenta\n\trgb 170 170   0\tis 6\t# Brown\n\trgb 170 170 170\tis 7\t# LightGray\n\trgb  85  85  85\tis X\t# DarkGray\n",
                      "markdown": "`\trgb   0   0 170\tis 1\t# Blue\n\trgb   0 170   0\tis 2\t# Green\n\trgb   0 170 170\tis 3\t# Cyan\n\trgb 170   0   0\tis 4\t# Red\n\trgb 170   0 170\tis 5\t# Magenta\n\trgb 170 170   0\tis 6\t# Brown\n\trgb 170 170 170\tis 7\t# LightGray\n\trgb  85  85  85\tis X\t# DarkGray\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 7,
                  "snippet": {
                    "text": "screen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n\trgb   0   0   0\tis .\t# Black\n\trgb   0   0 170\tis 1\t# Blue\n\trgb   0 170   0\tis 2\t# Green\n",
                    "rendered": {
                      "text": "screen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n\trgb   0   0   0\tis .\t# Black\n\trgb   0   0 170\tis 1\t# Blue\n\trgb   0 170   0\tis 2\t# Green\n",
                      "markdown": "`screen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n\trgb   0   0   0\tis .\t# Black\n\trgb   0   0 170\tis 1\t# Blue\n\trgb   0 170   0\tis 2\t# Green\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 16,
                  "endLine": 7,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n\trgb   0   0   0\tis .\t# Black\n",
                    "rendered": {
                      "text": "#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n\trgb   0   0   0\tis .\t# Black\n",
                      "markdown": "`#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n\trgb   0   0   0\tis .\t# Black\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 17,
                  "endLine": 6,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n",
                    "rendered": {
                      "text": "# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n",
                      "markdown": "`# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\nscreen map\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 16,
                  "endLine": 5,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\n",
                    "rendered": {
                      "text": "#\n# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\n",
                      "markdown": "`#\n# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/pic/sample.ico"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n",
                    "rendered": {
                      "text": "#\n# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n",
                      "markdown": "`#\n# Example icon file\n#\nscreen width 640\nscreen height 480\nscreen colors 16\nscreen background 0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 1089,
                  "startColumn": 61,
                  "endLine": 1090,
                  "endColumn": 3,
                  "snippet": {
                    "text": "<p>That is pretty much everything you need to know to read or generate \na basic image file. One of the reasons the GIF becames such a popular\nformat was because it also allowed for &quot;fancier&quot; features. These\nfeatures include animation and transparency. Next we'll look \nat how those work.</p>\n\n<p><a href=\"animation_and_transparency.html\">Continue...</a></p>\n</div>\n",
                    "rendered": {
                      "text": "<p>That is pretty much everything you need to know to read or generate \na basic image file. One of the reasons the GIF becames such a popular\nformat was because it also allowed for &quot;fancier&quot; features. These\nfeatures include animation and transparency. Next we'll look \nat how those work.</p>\n\n<p><a href=\"animation_and_transparency.html\">Continue...</a></p>\n</div>\n",
                      "markdown": "`<p>That is pretty much everything you need to know to read or generate \na basic image file. One of the reasons the GIF becames such a popular\nformat was because it also allowed for &quot;fancier&quot; features. These\nfeatures include animation and transparency. Next we'll look \nat how those work.</p>\n\n<p><a href=\"animation_and_transparency.html\">Continue...</a></p>\n</div>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 1049,
                  "startColumn": 29,
                  "endLine": 1049,
                  "endColumn": 33,
                  "snippet": {
                    "text": "<p>Finally we must turn all these bit values into bytes. The lowest bit of the\ncode bit value gets placed in the lowest available bit of the byte. After\nyou've filled up the 8 bits in the byte, you take any left over bits and \nstart a new byte. Take a look at the following illustration to see\nhow that works with the codes from our sample image.</p>\n\n<p style=\"text-align:center\"><img src=\"lzw_encoding_codes.gif\"\n",
                    "rendered": {
                      "text": "<p>Finally we must turn all these bit values into bytes. The lowest bit of the\ncode bit value gets placed in the lowest available bit of the byte. After\nyou've filled up the 8 bits in the byte, you take any left over bits and \nstart a new byte. Take a look at the following illustration to see\nhow that works with the codes from our sample image.</p>\n\n<p style=\"text-align:center\"><img src=\"lzw_encoding_codes.gif\"\n",
                      "markdown": "`<p>Finally we must turn all these bit values into bytes. The lowest bit of the\ncode bit value gets placed in the lowest available bit of the byte. After\nyou've filled up the 8 bits in the byte, you take any left over bits and \nstart a new byte. Take a look at the following illustration to see\nhow that works with the codes from our sample image.</p>\n\n<p style=\"text-align:center\"><img src=\"lzw_encoding_codes.gif\"\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 1037,
                  "startColumn": 10,
                  "endLine": 1037,
                  "endColumn": 14,
                  "snippet": {
                    "text": "<p>Jumping back to our sample image, we see that we have a minimum code\nsize value of 2 which means out first code size will be 3 bits long. \nOut first three codes, #1 #6 and #6, would be coded as 001 110 and 110.\nIf you see at Step 6 of the encoding, we added a code of #7 to our code\ntable. This is our clue to increase our code size because 7 is equal to\n2^3-1 (where 3 is our current code size). Thus, the next code we \nwrite out, #2, will use the new code size of 4 and therefore look\n",
                    "rendered": {
                      "text": "<p>Jumping back to our sample image, we see that we have a minimum code\nsize value of 2 which means out first code size will be 3 bits long. \nOut first three codes, #1 #6 and #6, would be coded as 001 110 and 110.\nIf you see at Step 6 of the encoding, we added a code of #7 to our code\ntable. This is our clue to increase our code size because 7 is equal to\n2^3-1 (where 3 is our current code size). Thus, the next code we \nwrite out, #2, will use the new code size of 4 and therefore look\n",
                      "markdown": "`<p>Jumping back to our sample image, we see that we have a minimum code\nsize value of 2 which means out first code size will be 3 bits long. \nOut first three codes, #1 #6 and #6, would be coded as 001 110 and 110.\nIf you see at Step 6 of the encoding, we added a code of #7 to our code\ntable. This is our clue to increase our code size because 7 is equal to\n2^3-1 (where 3 is our current code size). Thus, the next code we \nwrite out, #2, will use the new code size of 4 and therefore look\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 1006,
                  "startColumn": 17,
                  "endLine": 1006,
                  "endColumn": 21,
                  "snippet": {
                    "text": "you will need 5 bits/pixel (for numbers 0-31 because 31 in binary is 11111). \nThus, this will most likely be one more than the bit value for the size of the \ncolor table you are using. (Even if you only have two colors, the minimum\ncode size most be at least 2.) Refer to the <a href=\"#color_table_size\">\ncode table above</a> to remind yourself how that works.</p>\n\n<p>Here's the funny thing: the value for minimum code size isn't\n",
                    "rendered": {
                      "text": "you will need 5 bits/pixel (for numbers 0-31 because 31 in binary is 11111). \nThus, this will most likely be one more than the bit value for the size of the \ncolor table you are using. (Even if you only have two colors, the minimum\ncode size most be at least 2.) Refer to the <a href=\"#color_table_size\">\ncode table above</a> to remind yourself how that works.</p>\n\n<p>Here's the funny thing: the value for minimum code size isn't\n",
                      "markdown": "`you will need 5 bits/pixel (for numbers 0-31 because 31 in binary is 11111). \nThus, this will most likely be one more than the bit value for the size of the \ncolor table you are using. (Even if you only have two colors, the minimum\ncode size most be at least 2.) Refer to the <a href=\"#color_table_size\">\ncode table above</a> to remind yourself how that works.</p>\n\n<p>Here's the funny thing: the value for minimum code size isn't\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 989,
                  "startColumn": 31,
                  "endLine": 989,
                  "endColumn": 35,
                  "snippet": {
                    "text": "of bits it takes to store the value of the code. When we talk about bits, \nwe're referring to the 1's and 0's that make up a byte. The codes are \nconverted to their binary values to come up with the bits. To specify \nthe code for #4, you would look at this binary equivalent, which is 100, \nand see that you would need three bits to store this value. The largest code\nvalue in our sample code stream is #36 (binary: 100100) which would \ntake 6 bits to encode. Note that the number of bits i've just given is \n",
                    "rendered": {
                      "text": "of bits it takes to store the value of the code. When we talk about bits, \nwe're referring to the 1's and 0's that make up a byte. The codes are \nconverted to their binary values to come up with the bits. To specify \nthe code for #4, you would look at this binary equivalent, which is 100, \nand see that you would need three bits to store this value. The largest code\nvalue in our sample code stream is #36 (binary: 100100) which would \ntake 6 bits to encode. Note that the number of bits i've just given is \n",
                      "markdown": "`of bits it takes to store the value of the code. When we talk about bits, \nwe're referring to the 1's and 0's that make up a byte. The codes are \nconverted to their binary values to come up with the bits. To specify \nthe code for #4, you would look at this binary equivalent, which is 100, \nand see that you would need three bits to store this value. The largest code\nvalue in our sample code stream is #36 (binary: 100100) which would \ntake 6 bits to encode. Note that the number of bits i've just given is \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 21,
                  "endLine": 893,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n<p>Now we enter the main loop of the algorithm. The next code gets assigned\nto CODE which now makes that value #6. Next we check to see if this value\nis in our code table. At this time, it is not. This means we must find the \nfirst index in the value of {CODE-1} and call this K. Thus K = first index of\n{CODE-1} = first index of {#1} = 1. Now we output {CODE-1} + K to the index \nstream and add this value to our code table. The means we output 1,1 and \n",
                    "rendered": {
                      "text": "\n<p>Now we enter the main loop of the algorithm. The next code gets assigned\nto CODE which now makes that value #6. Next we check to see if this value\nis in our code table. At this time, it is not. This means we must find the \nfirst index in the value of {CODE-1} and call this K. Thus K = first index of\n{CODE-1} = first index of {#1} = 1. Now we output {CODE-1} + K to the index \nstream and add this value to our code table. The means we output 1,1 and \n",
                      "markdown": "`\n<p>Now we enter the main loop of the algorithm. The next code gets assigned\nto CODE which now makes that value #6. Next we check to see if this value\nis in our code table. At this time, it is not. This means we must find the \nfirst index in the value of {CODE-1} and call this K. Thus K = first index of\n{CODE-1} = first index of {#1} = 1. Now we output {CODE-1} + K to the index \nstream and add this value to our code table. The means we output 1,1 and \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 850,
                  "startColumn": 35,
                  "endLine": 850,
                  "endColumn": 39,
                  "snippet": {
                    "text": "will be the value for CODE in the code table. For example, using the code\ntable we created during compression, if CODE=#7 then {CODE}=1,1,1. \nIn the same way, {CODE-1} would be the value in the code table for the \ncode that came before CODE. Looking at step 26 from the compression, \nif CODE=#7, then {CODE-1} would be {#9}, not {#6}, which was 2,2.</p>\n\n<ul>\n",
                    "rendered": {
                      "text": "will be the value for CODE in the code table. For example, using the code\ntable we created during compression, if CODE=#7 then {CODE}=1,1,1. \nIn the same way, {CODE-1} would be the value in the code table for the \ncode that came before CODE. Looking at step 26 from the compression, \nif CODE=#7, then {CODE-1} would be {#9}, not {#6}, which was 2,2.</p>\n\n<ul>\n",
                      "markdown": "`will be the value for CODE in the code table. For example, using the code\ntable we created during compression, if CODE=#7 then {CODE}=1,1,1. \nIn the same way, {CODE-1} would be the value in the code table for the \ncode that came before CODE. Looking at step 26 from the compression, \nif CODE=#7, then {CODE-1} would be {#9}, not {#6}, which was 2,2.</p>\n\n<ul>\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 838,
                  "startColumn": 3,
                  "endLine": 838,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n<h2><a name=\"lzw_decompression\">LZW Decompression</a></h2>\n\n<p> At some point we will need to turn this code stream back into\na picture. To do this, we only need to know the values in the stream\nand the size of the color table that was used. That's it. You remember that\nbig code table we built during compression? We actually have enough information\n",
                    "rendered": {
                      "text": "\n<h2><a name=\"lzw_decompression\">LZW Decompression</a></h2>\n\n<p> At some point we will need to turn this code stream back into\na picture. To do this, we only need to know the values in the stream\nand the size of the color table that was used. That's it. You remember that\nbig code table we built during compression? We actually have enough information\n",
                      "markdown": "`\n<h2><a name=\"lzw_decompression\">LZW Decompression</a></h2>\n\n<p> At some point we will need to turn this code stream back into\na picture. To do this, we only need to know the values in the stream\nand the size of the color table that was used. That's it. You remember that\nbig code table we built during compression? We actually have enough information\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 827,
                  "startColumn": 41,
                  "endLine": 827,
                  "endColumn": 45,
                  "snippet": {
                    "text": "sample was the #4). This tells the decoder that you are reinitializing\nyour code table and it should too. Then you start building your own\ncodes again starting just after the value for your end-of-information\ncode (in our sample, we would start again at #6).</p>\n\n<p>The final code stream would look like this:</p>\n\n",
                    "rendered": {
                      "text": "sample was the #4). This tells the decoder that you are reinitializing\nyour code table and it should too. Then you start building your own\ncodes again starting just after the value for your end-of-information\ncode (in our sample, we would start again at #6).</p>\n\n<p>The final code stream would look like this:</p>\n\n",
                      "markdown": "`sample was the #4). This tells the decoder that you are reinitializing\nyour code table and it should too. Then you start building your own\ncodes again starting just after the value for your end-of-information\ncode (in our sample, we would start again at #6).</p>\n\n<p>The final code stream would look like this:</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 45,
                  "endLine": 121,
                  "endColumn": 54,
                  "snippet": {
                    "text": "</table>\n\n<p>I added a code for each of the colors in the global color table of\nour sample image. I also snuck in two special control codes.  (These\nspecial codes are only used in the GIF version of LZW, not in standard\nLZW compression.) Our code table is now considered initialized.</p>\n\n",
                    "rendered": {
                      "text": "</table>\n\n<p>I added a code for each of the colors in the global color table of\nour sample image. I also snuck in two special control codes.  (These\nspecial codes are only used in the GIF version of LZW, not in standard\nLZW compression.) Our code table is now considered initialized.</p>\n\n",
                      "markdown": "`</table>\n\n<p>I added a code for each of the colors in the global color table of\nour sample image. I also snuck in two special control codes.  (These\nspecial codes are only used in the GIF version of LZW, not in standard\nLZW compression.) Our code table is now considered initialized.</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 67,
                  "endLine": 104,
                  "snippet": {
                    "text": "<p>The compression method GIF use is a variant of LZW\n(Lempel-Ziv-Welch) compression. To start using this method, we need a\n<strong>code table</strong>. This code table will allow us to use\nspecial codes to indicate a sequence of colors rather than just one at\na time.  The first thing we do is to <em>initialize the code\ntable</em>.  We start by adding a code for each of the colors in the\ncolor table. This would be a local color table if one was provided, or\nthe global color table. (I will be starting all codes with\n",
                    "rendered": {
                      "text": "<p>The compression method GIF use is a variant of LZW\n(Lempel-Ziv-Welch) compression. To start using this method, we need a\n<strong>code table</strong>. This code table will allow us to use\nspecial codes to indicate a sequence of colors rather than just one at\na time.  The first thing we do is to <em>initialize the code\ntable</em>.  We start by adding a code for each of the colors in the\ncolor table. This would be a local color table if one was provided, or\nthe global color table. (I will be starting all codes with\n",
                      "markdown": "`<p>The compression method GIF use is a variant of LZW\n(Lempel-Ziv-Welch) compression. To start using this method, we need a\n<strong>code table</strong>. This code table will allow us to use\nspecial codes to indicate a sequence of colors rather than just one at\na time.  The first thing we do is to <em>initialize the code\ntable</em>.  We start by adding a code for each of the colors in the\ncolor table. This would be a local color table if one was provided, or\nthe global color table. (I will be starting all codes with\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 66,
                  "endLine": 77,
                  "snippet": {
                    "text": "\n<p>The color table came from the global color table block. The colors\nare listed in the order which they appear in the file. The first color\nis given an index of zero. When we send the codes, we always start at\nthe top left of the image and work our way right. When we get to the\nend of the line, the very next code is the one that starts the next\nline. (The decoder will &quot;wrap&quot; the image based on the image\ndimensions.) We could encode our sample image in the following\n",
                    "rendered": {
                      "text": "\n<p>The color table came from the global color table block. The colors\nare listed in the order which they appear in the file. The first color\nis given an index of zero. When we send the codes, we always start at\nthe top left of the image and work our way right. When we get to the\nend of the line, the very next code is the one that starts the next\nline. (The decoder will &quot;wrap&quot; the image based on the image\ndimensions.) We could encode our sample image in the following\n",
                      "markdown": "`\n<p>The color table came from the global color table block. The colors\nare listed in the order which they appear in the file. The first color\nis given an index of zero. When we send the codes, we always start at\nthe top left of the image and work our way right. When we get to the\nend of the line, the very next code is the one that starts the next\nline. (The decoder will &quot;wrap&quot; the image based on the image\ndimensions.) We could encode our sample image in the following\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 17,
                  "endLine": 44,
                  "endColumn": 21,
                  "snippet": {
                    "text": "<p><a href=\"index.html\">Back to the GIF index page.</a></p>\n</div>\n\n<p>Now let's look at exactly how we go about storing an image in a GIF\nfile. The GIF format is a raster format, meaning it stores image data\nby remembering the color of every pixel in the image. More\nspecifically, GIF files remember the index of the color in a color\n",
                    "rendered": {
                      "text": "<p><a href=\"index.html\">Back to the GIF index page.</a></p>\n</div>\n\n<p>Now let's look at exactly how we go about storing an image in a GIF\nfile. The GIF format is a raster format, meaning it stores image data\nby remembering the color of every pixel in the image. More\nspecifically, GIF files remember the index of the color in a color\n",
                      "markdown": "`<p><a href=\"index.html\">Back to the GIF index page.</a></p>\n</div>\n\n<p>Now let's look at exactly how we go about storing an image in a GIF\nfile. The GIF format is a raster format, meaning it stores image data\nby remembering the color of every pixel in the image. More\nspecifically, GIF files remember the index of the color in a color\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 1026,
                  "startColumn": 74,
                  "endLine": 1027,
                  "endColumn": 5,
                  "snippet": {
                    "text": "your code size as soon as your write out the code equal to \n2^(current code size)-1. If you are decoding from codes to indexes,\nyou need to increase your code size as soon as you add the code value that\nis equal to 2^(current code size)-1 to your code table. That is, the next \ntime you grab the next section of bits, you grab one more.</p>\n\n<p>Note that the largest code size allowed is 12 bits. If you get to this\nlimit, the next code you encounter should be the <em>clear code</em> which\n",
                    "rendered": {
                      "text": "your code size as soon as your write out the code equal to \n2^(current code size)-1. If you are decoding from codes to indexes,\nyou need to increase your code size as soon as you add the code value that\nis equal to 2^(current code size)-1 to your code table. That is, the next \ntime you grab the next section of bits, you grab one more.</p>\n\n<p>Note that the largest code size allowed is 12 bits. If you get to this\nlimit, the next code you encounter should be the <em>clear code</em> which\n",
                      "markdown": "`your code size as soon as your write out the code equal to \n2^(current code size)-1. If you are decoding from codes to indexes,\nyou need to increase your code size as soon as you add the code value that\nis equal to 2^(current code size)-1 to your code table. That is, the next \ntime you grab the next section of bits, you grab one more.</p>\n\n<p>Note that the largest code size allowed is 12 bits. If you get to this\nlimit, the next code you encounter should be the <em>clear code</em> which\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 959,
                  "startColumn": 11,
                  "endLine": 959,
                  "endColumn": 17,
                  "snippet": {
                    "text": "</table>\n\n<p>We start the loop again by reading the next code. CODE now would be\n#6 and this time we do have a record for this code in our code\ntable. Thus we dump {#6} to the index stream which would be 1,1.\nNow we take the first index in {#6} and call that K. Here, {#6} has\ntwo indexes, the first of which is 1; thus K = 1. Before moving\n",
                    "rendered": {
                      "text": "</table>\n\n<p>We start the loop again by reading the next code. CODE now would be\n#6 and this time we do have a record for this code in our code\ntable. Thus we dump {#6} to the index stream which would be 1,1.\nNow we take the first index in {#6} and call that K. Here, {#6} has\ntwo indexes, the first of which is 1; thus K = 1. Before moving\n",
                      "markdown": "`</table>\n\n<p>We start the loop again by reading the next code. CODE now would be\n#6 and this time we do have a record for this code in our code\ntable. Thus we dump {#6} to the index stream which would be 1,1.\nNow we take the first index in {#6} and call that K. Here, {#6} has\ntwo indexes, the first of which is 1; thus K = 1. Before moving\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 65,
                  "endLine": 893,
                  "endColumn": 71,
                  "snippet": {
                    "text": "\n<p>Now we enter the main loop of the algorithm. The next code gets assigned\nto CODE which now makes that value #6. Next we check to see if this value\nis in our code table. At this time, it is not. This means we must find the \nfirst index in the value of {CODE-1} and call this K. Thus K = first index of\n{CODE-1} = first index of {#1} = 1. Now we output {CODE-1} + K to the index \nstream and add this value to our code table. The means we output 1,1 and \n",
                    "rendered": {
                      "text": "\n<p>Now we enter the main loop of the algorithm. The next code gets assigned\nto CODE which now makes that value #6. Next we check to see if this value\nis in our code table. At this time, it is not. This means we must find the \nfirst index in the value of {CODE-1} and call this K. Thus K = first index of\n{CODE-1} = first index of {#1} = 1. Now we output {CODE-1} + K to the index \nstream and add this value to our code table. The means we output 1,1 and \n",
                      "markdown": "`\n<p>Now we enter the main loop of the algorithm. The next code gets assigned\nto CODE which now makes that value #6. Next we check to see if this value\nis in our code table. At this time, it is not. This means we must find the \nfirst index in the value of {CODE-1} and call this K. Thus K = first index of\n{CODE-1} = first index of {#1} = 1. Now we output {CODE-1} + K to the index \nstream and add this value to our code table. The means we output 1,1 and \n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 42,
                  "endLine": 214,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n<p>We continue by reading the next index into K. [Step 3]. Now K is 1 and the\nindex buffer is 1. Again we look to see if there is a value in our code\ntable for the buffer plus K (1,1) and this time there is. (In fact we just\nadded it.) Therefore we add K to the end of the index buffer and clear out\nK. Now our index buffer is 1,1. [Step 4].</p>\n\n",
                    "rendered": {
                      "text": "\n<p>We continue by reading the next index into K. [Step 3]. Now K is 1 and the\nindex buffer is 1. Again we look to see if there is a value in our code\ntable for the buffer plus K (1,1) and this time there is. (In fact we just\nadded it.) Therefore we add K to the end of the index buffer and clear out\nK. Now our index buffer is 1,1. [Step 4].</p>\n\n",
                      "markdown": "`\n<p>We continue by reading the next index into K. [Step 3]. Now K is 1 and the\nindex buffer is 1. Again we look to see if there is a value in our code\ntable for the buffer plus K (1,1) and this time there is. (In fact we just\nadded it.) Therefore we add K to the end of the index buffer and clear out\nK. Now our index buffer is 1,1. [Step 4].</p>\n\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/whatsinagif/lzw_image_data.html"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 3,
                  "endLine": 77,
                  "endColumn": 8,
                  "snippet": {
                    "text": "<p>The color table came from the global color table block. The colors\nare listed in the order which they appear in the file. The first color\nis given an index of zero. When we send the codes, we always start at\nthe top left of the image and work our way right. When we get to the\nend of the line, the very next code is the one that starts the next\nline. (The decoder will &quot;wrap&quot; the image based on the image\ndimensions.) We could encode our sample image in the following\n",
                    "rendered": {
                      "text": "<p>The color table came from the global color table block. The colors\nare listed in the order which they appear in the file. The first color\nis given an index of zero. When we send the codes, we always start at\nthe top left of the image and work our way right. When we get to the\nend of the line, the very next code is the one that starts the next\nline. (The decoder will &quot;wrap&quot; the image based on the image\ndimensions.) We could encode our sample image in the following\n",
                      "markdown": "`<p>The color table came from the global color table block. The colors\nare listed in the order which they appear in the file. The first color\nis given an index of zero. When we send the codes, we always start at\nthe top left of the image and work our way right. When we get to the\nend of the line, the very next code is the one that starts the next\nline. (The decoder will &quot;wrap&quot; the image based on the image\ndimensions.) We could encode our sample image in the following\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifclrmp.xml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 7,
                  "endLine": 68,
                  "endColumn": 11,
                  "snippet": {
                    "text": "<para>Change color index values.  The change is made to both the\nselected color table and the raster bits of the selected image.  A\ntranslation file is a list of pairs of `before' and `after' index\nvalues. At present, the `before' index values must be in ascending\norder starting from 0.</para>\n</listitem>\n</varlistentry>\n",
                    "rendered": {
                      "text": "<para>Change color index values.  The change is made to both the\nselected color table and the raster bits of the selected image.  A\ntranslation file is a list of pairs of `before' and `after' index\nvalues. At present, the `before' index values must be in ascending\norder starting from 0.</para>\n</listitem>\n</varlistentry>\n",
                      "markdown": "`<para>Change color index values.  The change is made to both the\nselected color table and the raster bits of the selected image.  A\ntranslation file is a list of pairs of `before' and `after' index\nvalues. At present, the `before' index values must be in ascending\norder starting from 0.</para>\n</listitem>\n</varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifclrmp.xml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 26,
                  "endLine": 36,
                  "endColumn": 30,
                  "snippet": {
                    "text": "<refsect1><title>Description</title>\n\n<para>A program to modify GIF image colormaps.  Any local colormap in\na GIF file can be modified at a time, or the global screen one.</para>\n\n</refsect1>\n<refsect1><title>Options</title>\n",
                    "rendered": {
                      "text": "<refsect1><title>Description</title>\n\n<para>A program to modify GIF image colormaps.  Any local colormap in\na GIF file can be modified at a time, or the global screen one.</para>\n\n</refsect1>\n<refsect1><title>Options</title>\n",
                      "markdown": "`<refsect1><title>Description</title>\n\n<para>A program to modify GIF image colormaps.  Any local colormap in\na GIF file can be modified at a time, or the global screen one.</para>\n\n</refsect1>\n<refsect1><title>Options</title>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifclrmp.xml"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 41,
                  "endLine": 105,
                  "endColumn": 46,
                  "snippet": {
                    "text": "</listitem>\n<listitem>\n<para>The file to load/dump is simply one color map entry per line.  Each such\nentry line has four integers: \"ColorIndex Red Green Blue\", where color\nindex is in ascending order starting from 1.</para>\n</listitem>\n</itemizedlist>\n",
                    "rendered": {
                      "text": "</listitem>\n<listitem>\n<para>The file to load/dump is simply one color map entry per line.  Each such\nentry line has four integers: \"ColorIndex Red Green Blue\", where color\nindex is in ascending order starting from 1.</para>\n</listitem>\n</itemizedlist>\n",
                      "markdown": "`</listitem>\n<listitem>\n<para>The file to load/dump is simply one color map entry per line.  Each such\nentry line has four integers: \"ColorIndex Red Green Blue\", where color\nindex is in ascending order starting from 1.</para>\n</listitem>\n</itemizedlist>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifclrmp.xml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 23,
                  "endLine": 52,
                  "endColumn": 31,
                  "snippet": {
                    "text": "<varlistentry>\n<term>-s</term>\n<listitem>\n<para>Select the global screen color map.</para>\n</listitem>\n</varlistentry>\n<varlistentry>\n",
                    "rendered": {
                      "text": "<varlistentry>\n<term>-s</term>\n<listitem>\n<para>Select the global screen color map.</para>\n</listitem>\n</varlistentry>\n<varlistentry>\n",
                      "markdown": "`<varlistentry>\n<term>-s</term>\n<listitem>\n<para>Select the global screen color map.</para>\n</listitem>\n</varlistentry>\n<varlistentry>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/gifclrmp.xml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 51,
                  "endLine": 36,
                  "endColumn": 59,
                  "snippet": {
                    "text": "<refsect1><title>Description</title>\n\n<para>A program to modify GIF image colormaps.  Any local colormap in\na GIF file can be modified at a time, or the global screen one.</para>\n\n</refsect1>\n<refsect1><title>Options</title>\n",
                    "rendered": {
                      "text": "<refsect1><title>Description</title>\n\n<para>A program to modify GIF image colormaps.  Any local colormap in\na GIF file can be modified at a time, or the global screen one.</para>\n\n</refsect1>\n<refsect1><title>Options</title>\n",
                      "markdown": "`<refsect1><title>Description</title>\n\n<para>A program to modify GIF image colormaps.  Any local colormap in\na GIF file can be modified at a time, or the global screen one.</para>\n\n</refsect1>\n<refsect1><title>Options</title>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giflib.xml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 9,
                  "endLine": 34,
                  "endColumn": 13,
                  "snippet": {
                    "text": "may not adequately support.</para>\n\n<para>API documentation for the service library is best viewed through\na browser at the project website: &project;.</para>\n\n</refsect1>\n<refsect1><title>See Also</title>\n",
                    "rendered": {
                      "text": "may not adequately support.</para>\n\n<para>API documentation for the service library is best viewed through\na browser at the project website: &project;.</para>\n\n</refsect1>\n<refsect1><title>See Also</title>\n",
                      "markdown": "`may not adequately support.</para>\n\n<para>API documentation for the service library is best viewed through\na browser at the project website: &project;.</para>\n\n</refsect1>\n<refsect1><title>See Also</title>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giflib.xml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 31,
                  "endLine": 33,
                  "endColumn": 40,
                  "snippet": {
                    "text": "intended to facilitate GIF-specific operations which multi-format tools\nmay not adequately support.</para>\n\n<para>API documentation for the service library is best viewed through\na browser at the project website: &project;.</para>\n\n</refsect1>\n",
                    "rendered": {
                      "text": "intended to facilitate GIF-specific operations which multi-format tools\nmay not adequately support.</para>\n\n<para>API documentation for the service library is best viewed through\na browser at the project website: &project;.</para>\n\n</refsect1>\n",
                      "markdown": "`intended to facilitate GIF-specific operations which multi-format tools\nmay not adequately support.</para>\n\n<para>API documentation for the service library is best viewed through\na browser at the project website: &project;.</para>\n\n</refsect1>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giflib.xml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 46,
                  "endLine": 27,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n<para>These utilities are not intended to compete with or replace\nmulti-format graphics toolkits like ImageMagick or the Python Imaging\nLibrary, or graphics editors such as the GIMP. Find one of those, or\nan equivalent, if you need to crop, scale, rotate, toggle interlacing,\nor perform other conventional image transformations. Rather, these are\nintended to facilitate GIF-specific operations which multi-format tools\n",
                    "rendered": {
                      "text": "\n<para>These utilities are not intended to compete with or replace\nmulti-format graphics toolkits like ImageMagick or the Python Imaging\nLibrary, or graphics editors such as the GIMP. Find one of those, or\nan equivalent, if you need to crop, scale, rotate, toggle interlacing,\nor perform other conventional image transformations. Rather, these are\nintended to facilitate GIF-specific operations which multi-format tools\n",
                      "markdown": "`\n<para>These utilities are not intended to compete with or replace\nmulti-format graphics toolkits like ImageMagick or the Python Imaging\nLibrary, or graphics editors such as the GIMP. Find one of those, or\nan equivalent, if you need to crop, scale, rotate, toggle interlacing,\nor perform other conventional image transformations. Rather, these are\nintended to facilitate GIF-specific operations which multi-format tools\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/doc/giflib.xml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 26,
                  "endLine": 22,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n<refsect1><title>Description</title>\n\n<para>GIFLIB is a linkable service library and a set of utilities for\nprocessing images encoded using GIF (Graphics Interchange Format).</para>\n\n<para>These utilities are not intended to compete with or replace\n",
                    "rendered": {
                      "text": "\n<refsect1><title>Description</title>\n\n<para>GIFLIB is a linkable service library and a set of utilities for\nprocessing images encoded using GIF (Graphics Interchange Format).</para>\n\n<para>These utilities are not intended to compete with or replace\n",
                      "markdown": "`\n<refsect1><title>Description</title>\n\n<para>GIFLIB is a linkable service library and a set of utilities for\nprocessing images encoded using GIF (Graphics Interchange Format).</para>\n\n<para>These utilities are not intended to compete with or replace\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.dmp"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 14,
                  "endLine": 9,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tHas Global Color Map.\n\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 0\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                    "rendered": {
                      "text": "\tHas Global Color Map.\n\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 0\n\tUser Input Flag: 0\n\tTransparency on: no\n",
                      "markdown": "`\tHas Global Color Map.\n\n\nGIF89 graphics control (Ext Code = 249 [ ]):\n\tDisposal Mode: 0\n\tUser Input Flag: 0\n\tTransparency on: no\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.dmp"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 100, Height = 100.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 100, Height = 100.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 100, Height = 100.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/gifgrid.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 100, Height = 100.\n\tColorResolution = 3, BitsPerPixel = 3, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 100, Height = 100.\n\tColorResolution = 3, BitsPerPixel = 3, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 100, Height = 100.\n\tColorResolution = 3, BitsPerPixel = 3, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.dmp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 23,
                  "endLine": 11,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 40, Height = 40.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                    "rendered": {
                      "text": "\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 40, Height = 40.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n",
                      "markdown": "`\nImage #1:\n\n\tImage Size - Left = 0, Top = 0, Width = 40, Height = 40.\n\tImage is Non Interlaced.\n\tNo Image Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/tests/treescap.dmp"
                },
                "region": {
                  "startLine": 4,
                  "endLine": 4,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nStdin:\n\n\tScreen Size - Width = 40, Height = 40.\n\tColorResolution = 7, BitsPerPixel = 4, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                    "rendered": {
                      "text": "\nStdin:\n\n\tScreen Size - Width = 40, Height = 40.\n\tColorResolution = 7, BitsPerPixel = 4, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n",
                      "markdown": "`\nStdin:\n\n\tScreen Size - Width = 40, Height = 40.\n\tColorResolution = 7, BitsPerPixel = 4, BackGround = 0, Aspect = 0.\n\tHas Global Color Map.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gif_font.c"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 2,
                  "endLine": 250,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tGifDrawText8x8(\n\t\t\t    Image, x + border + (leadspace * GIF_FONT_WIDTH),\n\t\t\t    y + border + (GIF_FONT_HEIGHT * i++), cp, fg);\n\t\t\tcp = strtok_r(NULL, \"\\r\\n\", &lasts);\n\t\t} while (cp);\n\t\t(void)free((void *)dup);\n\n",
                    "rendered": {
                      "text": "\t\t\tGifDrawText8x8(\n\t\t\t    Image, x + border + (leadspace * GIF_FONT_WIDTH),\n\t\t\t    y + border + (GIF_FONT_HEIGHT * i++), cp, fg);\n\t\t\tcp = strtok_r(NULL, \"\\r\\n\", &lasts);\n\t\t} while (cp);\n\t\t(void)free((void *)dup);\n\n",
                      "markdown": "`\t\t\tGifDrawText8x8(\n\t\t\t    Image, x + border + (leadspace * GIF_FONT_WIDTH),\n\t\t\t    y + border + (GIF_FONT_HEIGHT * i++), cp, fg);\n\t\t\tcp = strtok_r(NULL, \"\\r\\n\", &lasts);\n\t\t} while (cp);\n\t\t(void)free((void *)dup);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gif_font.c"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 1,
                  "endLine": 239,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t\t    border + LineCount * GIF_FONT_HEIGHT + border - 1, bg);\n\t\t(void)strcpy(dup, (char *)legend);\n\t\tchar *lasts;\n\t\tcp = strtok_r(dup, \"\\r\\n\", &lasts);\n\t\tdo {\n\t\t\tint leadspace = 0;\n\n",
                    "rendered": {
                      "text": "\t\t    border + LineCount * GIF_FONT_HEIGHT + border - 1, bg);\n\t\t(void)strcpy(dup, (char *)legend);\n\t\tchar *lasts;\n\t\tcp = strtok_r(dup, \"\\r\\n\", &lasts);\n\t\tdo {\n\t\t\tint leadspace = 0;\n\n",
                      "markdown": "`\t\t    border + LineCount * GIF_FONT_HEIGHT + border - 1, bg);\n\t\t(void)strcpy(dup, (char *)legend);\n\t\tchar *lasts;\n\t\tcp = strtok_r(dup, \"\\r\\n\", &lasts);\n\t\tdo {\n\t\t\tint leadspace = 0;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifclrmp.c"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 60,
                  "endLine": 72,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t}\n\n\tif (SaveFlag + LoadFlag + GammaFlag + TranslateFlag > 1) {\n\t\tGIF_EXIT(\"Can not handle more than one of -s -l, -t, or -g at \"\n\t\t         \"the same time.\");\n\t}\n\n",
                    "rendered": {
                      "text": "\t}\n\n\tif (SaveFlag + LoadFlag + GammaFlag + TranslateFlag > 1) {\n\t\tGIF_EXIT(\"Can not handle more than one of -s -l, -t, or -g at \"\n\t\t         \"the same time.\");\n\t}\n\n",
                      "markdown": "`\t}\n\n\tif (SaveFlag + LoadFlag + GammaFlag + TranslateFlag > 1) {\n\t\tGIF_EXIT(\"Can not handle more than one of -s -l, -t, or -g at \"\n\t\t         \"the same time.\");\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/giflib.zip/gifclrmp.c"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 9,
                  "endLine": 243,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\t\t\t\t\t/* translation step goes here */\n\t\t\t\t\tfor (cp = Line;\n\t\t\t\t\t     cp < Line + GifFileIn->Image.Width;\n\t\t\t\t\t     cp++) {\n\t\t\t\t\t\t*cp = Translation[*cp];\n\t\t\t\t\t}\n",
                    "rendered": {
                      "text": "\n\t\t\t\t\t/* translation step goes here */\n\t\t\t\t\tfor (cp = Line;\n\t\t\t\t\t     cp < Line + GifFileIn->Image.Width;\n\t\t\t\t\t     cp++) {\n\t\t\t\t\t\t*cp = Translation[*cp];\n\t\t\t\t\t}\n",
                      "markdown": "`\n\t\t\t\t\t/* translation step goes here */\n\t\t\t\t\tfor (cp = Line;\n\t\t\t\t\t     cp < Line + GifFileIn->Image.Width;\n\t\t\t\t\t     cp++) {\n\t\t\t\t\t\t*cp = Translation[*cp];\n\t\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}