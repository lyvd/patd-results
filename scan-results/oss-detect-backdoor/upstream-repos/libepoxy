{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/glx.xml"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 55,
                  "endLine": 597,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                      "markdown": "`    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/glx.xml"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 42,
                  "endLine": 165,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    unsigned int mask;      /* mask indicating which buffers are affected*/\n    int x, y;\n    int width, height;\n    int count;              /* if nonzero, at least this many more */\n} <name>GLXBufferClobberEventSGIX</name>;</type>\n\n        <type>typedef struct {\n",
                    "rendered": {
                      "text": "    unsigned int mask;      /* mask indicating which buffers are affected*/\n    int x, y;\n    int width, height;\n    int count;              /* if nonzero, at least this many more */\n} <name>GLXBufferClobberEventSGIX</name>;</type>\n\n        <type>typedef struct {\n",
                      "markdown": "`    unsigned int mask;      /* mask indicating which buffers are affected*/\n    int x, y;\n    int width, height;\n    int count;              /* if nonzero, at least this many more */\n} <name>GLXBufferClobberEventSGIX</name>;</type>\n\n        <type>typedef struct {\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/glx.xml"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 46,
                  "endLine": 122,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    unsigned int aux_buffer;    /* which aux buffer was affected */\n    int x, y;\n    int width, height;\n    int count;                  /* if nonzero, at least this many more */\n} <name>GLXPbufferClobberEvent</name>;</type>\n\n        <type>typedef struct {\n",
                    "rendered": {
                      "text": "    unsigned int aux_buffer;    /* which aux buffer was affected */\n    int x, y;\n    int width, height;\n    int count;                  /* if nonzero, at least this many more */\n} <name>GLXPbufferClobberEvent</name>;</type>\n\n        <type>typedef struct {\n",
                      "markdown": "`    unsigned int aux_buffer;    /* which aux buffer was affected */\n    int x, y;\n    int width, height;\n    int count;                  /* if nonzero, at least this many more */\n} <name>GLXPbufferClobberEvent</name>;</type>\n\n        <type>typedef struct {\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/glx.xml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 8,
                  "endLine": 24,
                  "snippet": {
                    "text": "This file, glx.xml, is the GLX API Registry. The canonical version of the\nregistry, together with documentation, schema, and Python generator scripts\nused to generate C header files for GLX, can always be found in the Khronos\nRegistry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: GLX type definitions. Does not include X or GL types. -->\n",
                    "rendered": {
                      "text": "This file, glx.xml, is the GLX API Registry. The canonical version of the\nregistry, together with documentation, schema, and Python generator scripts\nused to generate C header files for GLX, can always be found in the Khronos\nRegistry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: GLX type definitions. Does not include X or GL types. -->\n",
                      "markdown": "`This file, glx.xml, is the GLX API Registry. The canonical version of the\nregistry, together with documentation, schema, and Python generator scripts\nused to generate C header files for GLX, can always be found in the Khronos\nRegistry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: GLX type definitions. Does not include X or GL types. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/glx.xml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 9,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/glx.xml"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 62,
                  "endLine": 597,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                      "markdown": "`    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/README.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 11,
                  "endLine": 3,
                  "endColumn": 19,
                  "snippet": {
                    "text": "## Updating the registry XML\n\nIn order to update the registry XML files and retain the history you cannot\nsimply download the files the [Khronos website](https://khronos.org/registry/OpenGL/index_gl.php)\nand copy them into this directory. You should follow these steps, instead:\n\n",
                    "rendered": {
                      "text": "## Updating the registry XML\n\nIn order to update the registry XML files and retain the history you cannot\nsimply download the files the [Khronos website](https://khronos.org/registry/OpenGL/index_gl.php)\nand copy them into this directory. You should follow these steps, instead:\n\n",
                      "markdown": "`## Updating the registry XML\n\nIn order to update the registry XML files and retain the history you cannot\nsimply download the files the [Khronos website](https://khronos.org/registry/OpenGL/index_gl.php)\nand copy them into this directory. You should follow these steps, instead:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/glx_common.c"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 12,
                  "snippet": {
                    "text": "{\n\tXSetWindowAttributes window_attr;\n\tunsigned long mask;\n\tint screen = DefaultScreen(dpy);\n\tWindow root_win = RootWindow(dpy, screen);\n\tWindow win;\n\n",
                    "rendered": {
                      "text": "{\n\tXSetWindowAttributes window_attr;\n\tunsigned long mask;\n\tint screen = DefaultScreen(dpy);\n\tWindow root_win = RootWindow(dpy, screen);\n\tWindow win;\n\n",
                      "markdown": "`{\n\tXSetWindowAttributes window_attr;\n\tunsigned long mask;\n\tint screen = DefaultScreen(dpy);\n\tWindow root_win = RootWindow(dpy, screen);\n\tWindow win;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/glx_common.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 4,
                  "endLine": 54,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tGLX_DOUBLEBUFFER,\n\t\tNone\n\t};\n\tint screen = DefaultScreen(dpy);\n\n\tvisinfo = glXChooseVisual(dpy, screen, attrib);\n\tif (visinfo == NULL) {\n",
                    "rendered": {
                      "text": "\t\tGLX_DOUBLEBUFFER,\n\t\tNone\n\t};\n\tint screen = DefaultScreen(dpy);\n\n\tvisinfo = glXChooseVisual(dpy, screen, attrib);\n\tif (visinfo == NULL) {\n",
                      "markdown": "`\t\tGLX_DOUBLEBUFFER,\n\t\tNone\n\t};\n\tint screen = DefaultScreen(dpy);\n\n\tvisinfo = glXChooseVisual(dpy, screen, attrib);\n\tif (visinfo == NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/dispatch_common.c"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 25,
                  "endLine": 872,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#elif PLATFORM_HAS_GLX\n    if (epoxy_current_context_is_glx())\n        return glXGetProcAddressARB((const GLubyte *)name);\n    assert(0 && \"Couldn't find current GLX or EGL context.\\n\");\n#endif\n\n    return NULL;\n",
                    "rendered": {
                      "text": "#elif PLATFORM_HAS_GLX\n    if (epoxy_current_context_is_glx())\n        return glXGetProcAddressARB((const GLubyte *)name);\n    assert(0 && \"Couldn't find current GLX or EGL context.\\n\");\n#endif\n\n    return NULL;\n",
                      "markdown": "`#elif PLATFORM_HAS_GLX\n    if (epoxy_current_context_is_glx())\n        return glXGetProcAddressARB((const GLubyte *)name);\n    assert(0 && \"Couldn't find current GLX or EGL context.\\n\");\n#endif\n\n    return NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/macos.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 25,
                  "snippet": {
                    "text": "          python-version: 3.x\n      - run: |\n          brew install ninja\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}\"\n",
                    "rendered": {
                      "text": "          python-version: 3.x\n      - run: |\n          brew install ninja\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}\"\n",
                      "markdown": "`          python-version: 3.x\n      - run: |\n          brew install ninja\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/macos.yml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 19,
                  "endLine": 24,
                  "endColumn": 24,
                  "snippet": {
                    "text": "          python-version: 3.x\n      - run: |\n          brew install ninja\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}\"\n",
                    "rendered": {
                      "text": "          python-version: 3.x\n      - run: |\n          brew install ninja\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}\"\n",
                      "markdown": "`          python-version: 3.x\n      - run: |\n          brew install ninja\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=clang .github/scripts/epoxy-ci-osx.sh ${{ matrix.build-opts }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/dlwrap.c"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 53,
                  "endLine": 268,
                  "endColumn": 59,
                  "snippet": {
                    "text": "                  \"\\n\"\n                  \"And then inspecting the version attached to the dlsym symbol:\\n\"\n                  \"\\n\"\n                  \"\\treadelf -s /path/to/libdl.so.2 | grep dlsym\\n\"\n                  \"\\n\"\n                  \"And finally, adding the version to dlwrap.c:dlwrap_real_dlsym.\\n\",\n                  stderr);\n",
                    "rendered": {
                      "text": "                  \"\\n\"\n                  \"And then inspecting the version attached to the dlsym symbol:\\n\"\n                  \"\\n\"\n                  \"\\treadelf -s /path/to/libdl.so.2 | grep dlsym\\n\"\n                  \"\\n\"\n                  \"And finally, adding the version to dlwrap.c:dlwrap_real_dlsym.\\n\",\n                  stderr);\n",
                      "markdown": "`                  \"\\n\"\n                  \"And then inspecting the version attached to the dlsym symbol:\\n\"\n                  \"\\n\"\n                  \"\\treadelf -s /path/to/libdl.so.2 | grep dlsym\\n\"\n                  \"\\n\"\n                  \"And finally, adding the version to dlwrap.c:dlwrap_real_dlsym.\\n\",\n                  stderr);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/dlwrap.c"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 41,
                  "endLine": 264,
                  "endColumn": 47,
                  "snippet": {
                    "text": "                fprintf(stderr, \"%s \", version[i]);\n            fputs(\"\\n\\nYou can inspect your version by first finding libdl.so.2:\\n\"\n                  \"\\n\"\n                  \"\\tldd <your-program> | grep libdl.so\\n\"\n                  \"\\n\"\n                  \"And then inspecting the version attached to the dlsym symbol:\\n\"\n                  \"\\n\"\n",
                    "rendered": {
                      "text": "                fprintf(stderr, \"%s \", version[i]);\n            fputs(\"\\n\\nYou can inspect your version by first finding libdl.so.2:\\n\"\n                  \"\\n\"\n                  \"\\tldd <your-program> | grep libdl.so\\n\"\n                  \"\\n\"\n                  \"And then inspecting the version attached to the dlsym symbol:\\n\"\n                  \"\\n\"\n",
                      "markdown": "`                fprintf(stderr, \"%s \", version[i]);\n            fputs(\"\\n\\nYou can inspect your version by first finding libdl.so.2:\\n\"\n                  \"\\n\"\n                  \"\\tldd <your-program> | grep libdl.so\\n\"\n                  \"\\n\"\n                  \"And then inspecting the version attached to the dlsym symbol:\\n\"\n                  \"\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/dlwrap.c"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 44,
                  "endLine": 256,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                break;\n        }\n        if (i == num_versions) {\n            fputs(\"Internal error: Failed to find real dlsym\\n\", stderr);\n            fputs(\"This may be a simple matter of fips not knowing about the version of GLIBC that\\n\"\n                  \"your program is using. Current known versions are:\\n\\n\\t\",\n                  stderr);\n",
                    "rendered": {
                      "text": "                break;\n        }\n        if (i == num_versions) {\n            fputs(\"Internal error: Failed to find real dlsym\\n\", stderr);\n            fputs(\"This may be a simple matter of fips not knowing about the version of GLIBC that\\n\"\n                  \"your program is using. Current known versions are:\\n\\n\\t\",\n                  stderr);\n",
                      "markdown": "`                break;\n        }\n        if (i == num_versions) {\n            fputs(\"Internal error: Failed to find real dlsym\\n\", stderr);\n            fputs(\"This may be a simple matter of fips not knowing about the version of GLIBC that\\n\"\n                  \"your program is using. Current known versions are:\\n\\n\\t\",\n                  stderr);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/dlwrap.c"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 35,
                  "endLine": 148,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    if (!real_dlopen) {\n        real_dlopen = (fips_dlopen_t) dlwrap_real_dlsym(RTLD_NEXT, \"dlopen\");\n        if (!real_dlopen) {\n            fputs(\"Error: Failed to find symbol for dlopen.\\n\", stderr);\n            exit(1);\n        }\n    }\n",
                    "rendered": {
                      "text": "    if (!real_dlopen) {\n        real_dlopen = (fips_dlopen_t) dlwrap_real_dlsym(RTLD_NEXT, \"dlopen\");\n        if (!real_dlopen) {\n            fputs(\"Error: Failed to find symbol for dlopen.\\n\", stderr);\n            exit(1);\n        }\n    }\n",
                      "markdown": "`    if (!real_dlopen) {\n        real_dlopen = (fips_dlopen_t) dlwrap_real_dlsym(RTLD_NEXT, \"dlopen\");\n        if (!real_dlopen) {\n            fputs(\"Error: Failed to find symbol for dlopen.\\n\", stderr);\n            exit(1);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/meson.build"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 54,
                  "endLine": 198,
                  "snippet": {
                    "text": "if host_system == 'windows'\n  opengl32_dep = cc.find_library('opengl32', required: true)\n\n  # When building against static libraries, we need to control\n  # the order of the dependencies, and gdi32 provides symbols\n  # needed when using opengl32, like SetPixelFormat and\n  # ChoosePixelFormat. This is mostly a workaround for older\n  # versions of Meson.\n",
                    "rendered": {
                      "text": "if host_system == 'windows'\n  opengl32_dep = cc.find_library('opengl32', required: true)\n\n  # When building against static libraries, we need to control\n  # the order of the dependencies, and gdi32 provides symbols\n  # needed when using opengl32, like SetPixelFormat and\n  # ChoosePixelFormat. This is mostly a workaround for older\n  # versions of Meson.\n",
                      "markdown": "`if host_system == 'windows'\n  opengl32_dep = cc.find_library('opengl32', required: true)\n\n  # When building against static libraries, we need to control\n  # the order of the dependencies, and gdi32 provides symbols\n  # needed when using opengl32, like SetPixelFormat and\n  # ChoosePixelFormat. This is mostly a workaround for older\n  # versions of Meson.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/meson.build"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 10,
                  "endLine": 192,
                  "endColumn": 14,
                  "snippet": {
                    "text": "endif\n\n# On windows, the DLL has to have all of its functions\n# resolved at link time, so we have to link directly against\n# opengl32.  But that's the only GL provider, anyway.\nif host_system == 'windows'\n  opengl32_dep = cc.find_library('opengl32', required: true)\n",
                    "rendered": {
                      "text": "endif\n\n# On windows, the DLL has to have all of its functions\n# resolved at link time, so we have to link directly against\n# opengl32.  But that's the only GL provider, anyway.\nif host_system == 'windows'\n  opengl32_dep = cc.find_library('opengl32', required: true)\n",
                      "markdown": "`endif\n\n# On windows, the DLL has to have all of its functions\n# resolved at link time, so we have to link directly against\n# opengl32.  But that's the only GL provider, anyway.\nif host_system == 'windows'\n  opengl32_dep = cc.find_library('opengl32', required: true)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/meson.build"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 11,
                  "endLine": 34,
                  "endColumn": 17,
                  "snippet": {
                    "text": "conf.set('HAVE_KHRPLATFORM_H', cc.has_header('KHR/khrplatform.h'))\n\n# GLX can be used on different platforms, so we expose a\n# configure time switch to enable or disable it; in case\n# the \"auto\" default value is set, we only enable GLX\n# support on Linux and Unix\nenable_glx = get_option('glx')\n",
                    "rendered": {
                      "text": "conf.set('HAVE_KHRPLATFORM_H', cc.has_header('KHR/khrplatform.h'))\n\n# GLX can be used on different platforms, so we expose a\n# configure time switch to enable or disable it; in case\n# the \"auto\" default value is set, we only enable GLX\n# support on Linux and Unix\nenable_glx = get_option('glx')\n",
                      "markdown": "`conf.set('HAVE_KHRPLATFORM_H', cc.has_header('KHR/khrplatform.h'))\n\n# GLX can be used on different platforms, so we expose a\n# configure time switch to enable or disable it; in case\n# the \"auto\" default value is set, we only enable GLX\n# support on Linux and Unix\nenable_glx = get_option('glx')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/README.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 54,
                  "endLine": 107,
                  "endColumn": 60,
                  "snippet": {
                    "text": "[piglit](http://piglit.freedesktop.org/).  Other GL dispatch code\ngeneration projects had similar failures.  Ideally, piglit wants to be\nable to build a single binary for a test that can run on whatever\ncontext or window system it chooses, not based on link time choices.\n\nWe had to solve some of GLEW's problems for piglit and solving them\nmeant replacing every single piece of GLEW, so we built\n",
                    "rendered": {
                      "text": "[piglit](http://piglit.freedesktop.org/).  Other GL dispatch code\ngeneration projects had similar failures.  Ideally, piglit wants to be\nable to build a single binary for a test that can run on whatever\ncontext or window system it chooses, not based on link time choices.\n\nWe had to solve some of GLEW's problems for piglit and solving them\nmeant replacing every single piece of GLEW, so we built\n",
                      "markdown": "`[piglit](http://piglit.freedesktop.org/).  Other GL dispatch code\ngeneration projects had similar failures.  Ideally, piglit wants to be\nable to build a single binary for a test that can run on whatever\ncontext or window system it chooses, not based on link time choices.\n\nWe had to solve some of GLEW's problems for piglit and solving them\nmeant replacing every single piece of GLEW, so we built\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/README.md"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 27,
                  "endLine": 99,
                  "endColumn": 33,
                  "snippet": {
                    "text": "  * Doesn't support OpenGL ES.\n  * Has a hard-to-maintain parser of extension specification text\n    instead of using the old .spec file or the new .xml.\n  * Has significant startup time overhead when `glewInit()`\n    autodetects the world.\n  * User-visible multithreading support choice for win32.\n\n",
                    "rendered": {
                      "text": "  * Doesn't support OpenGL ES.\n  * Has a hard-to-maintain parser of extension specification text\n    instead of using the old .spec file or the new .xml.\n  * Has significant startup time overhead when `glewInit()`\n    autodetects the world.\n  * User-visible multithreading support choice for win32.\n\n",
                      "markdown": "`  * Doesn't support OpenGL ES.\n  * Has a hard-to-maintain parser of extension specification text\n    instead of using the old .spec file or the new .xml.\n  * Has significant startup time overhead when `glewInit()`\n    autodetects the world.\n  * User-visible multithreading support choice for win32.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/egl.xml"
                },
                "region": {
                  "startLine": 3066,
                  "startColumn": 30,
                  "endLine": 3066,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                <enum name=\"EGL_YUV_PLANE2_TEXTURE_UNIT_NV\"/>\n                <enum name=\"EGL_YUV_NUMBER_OF_PLANES_EXT\"/>\n                <enum name=\"EGL_YUV_BUFFER_EXT\"/>\n                <command name=\"eglStreamConsumerGLTextureExternalAttribsNV\"/>\n            </require>\n        </extension>\n        <extension name=\"EGL_NV_stream_cross_object\" supported=\"egl\">\n",
                    "rendered": {
                      "text": "                <enum name=\"EGL_YUV_PLANE2_TEXTURE_UNIT_NV\"/>\n                <enum name=\"EGL_YUV_NUMBER_OF_PLANES_EXT\"/>\n                <enum name=\"EGL_YUV_BUFFER_EXT\"/>\n                <command name=\"eglStreamConsumerGLTextureExternalAttribsNV\"/>\n            </require>\n        </extension>\n        <extension name=\"EGL_NV_stream_cross_object\" supported=\"egl\">\n",
                      "markdown": "`                <enum name=\"EGL_YUV_PLANE2_TEXTURE_UNIT_NV\"/>\n                <enum name=\"EGL_YUV_NUMBER_OF_PLANES_EXT\"/>\n                <enum name=\"EGL_YUV_BUFFER_EXT\"/>\n                <command name=\"eglStreamConsumerGLTextureExternalAttribsNV\"/>\n            </require>\n        </extension>\n        <extension name=\"EGL_NV_stream_cross_object\" supported=\"egl\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/egl.xml"
                },
                "region": {
                  "startLine": 1014,
                  "startColumn": 19,
                  "endLine": 1014,
                  "endColumn": 23,
                  "snippet": {
                    "text": "     mind. -->\n\n<!-- Reservable for future use. To generate a new range, allocate multiples\n     of 16 starting at the lowest available point in this block. -->\n    <enums namespace=\"EGL\" start=\"0x34A0\" end=\"0x3FFF\" vendor=\"KHR\" comment=\"Reserved for future use\">\n            <unused start=\"0x34A0\" end=\"0x3FFF\"/>\n    </enums>\n",
                    "rendered": {
                      "text": "     mind. -->\n\n<!-- Reservable for future use. To generate a new range, allocate multiples\n     of 16 starting at the lowest available point in this block. -->\n    <enums namespace=\"EGL\" start=\"0x34A0\" end=\"0x3FFF\" vendor=\"KHR\" comment=\"Reserved for future use\">\n            <unused start=\"0x34A0\" end=\"0x3FFF\"/>\n    </enums>\n",
                      "markdown": "`     mind. -->\n\n<!-- Reservable for future use. To generate a new range, allocate multiples\n     of 16 starting at the lowest available point in this block. -->\n    <enums namespace=\"EGL\" start=\"0x34A0\" end=\"0x3FFF\" vendor=\"KHR\" comment=\"Reserved for future use\">\n            <unused start=\"0x34A0\" end=\"0x3FFF\"/>\n    </enums>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/egl.xml"
                },
                "region": {
                  "startLine": 1007,
                  "startColumn": 55,
                  "endLine": 1007,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, EGL project, Registry\n     component. Also note that some EGL enum values are shared with other\n     Khronos APIs, and new ranges should be allocated with such overlaps in\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, EGL project, Registry\n     component. Also note that some EGL enum values are shared with other\n     Khronos APIs, and new ranges should be allocated with such overlaps in\n",
                      "markdown": "`    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, EGL project, Registry\n     component. Also note that some EGL enum values are shared with other\n     Khronos APIs, and new ranges should be allocated with such overlaps in\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/egl.xml"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 32,
                  "snippet": {
                    "text": "    extensions and API versions. The canonical version of the registry,\n    together with documentation, schema, and Python generator scripts used\n    to generate C header files for EGL, can be found in the Khronos Registry\n    at\n        https://www.github.com/KhronosGroup/EGL-Registry\n    -->\n\n    <!-- SECTION: EGL type definitions. Does not include GL types. -->\n",
                    "rendered": {
                      "text": "    extensions and API versions. The canonical version of the registry,\n    together with documentation, schema, and Python generator scripts used\n    to generate C header files for EGL, can be found in the Khronos Registry\n    at\n        https://www.github.com/KhronosGroup/EGL-Registry\n    -->\n\n    <!-- SECTION: EGL type definitions. Does not include GL types. -->\n",
                      "markdown": "`    extensions and API versions. The canonical version of the registry,\n    together with documentation, schema, and Python generator scripts used\n    to generate C header files for EGL, can be found in the Khronos Registry\n    at\n        https://www.github.com/KhronosGroup/EGL-Registry\n    -->\n\n    <!-- SECTION: EGL type definitions. Does not include GL types. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/egl.xml"
                },
                "region": {
                  "startLine": 1007,
                  "startColumn": 62,
                  "endLine": 1007,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, EGL project, Registry\n     component. Also note that some EGL enum values are shared with other\n     Khronos APIs, and new ranges should be allocated with such overlaps in\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, EGL project, Registry\n     component. Also note that some EGL enum values are shared with other\n     Khronos APIs, and new ranges should be allocated with such overlaps in\n",
                      "markdown": "`    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, EGL project, Registry\n     component. Also note that some EGL enum values are shared with other\n     Khronos APIs, and new ranges should be allocated with such overlaps in\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/wgl.xml"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 63,
                  "endLine": 453,
                  "endColumn": 67,
                  "snippet": {
                    "text": "     WGL, and new ranges should be allocated with such overlaps in mind. -->\n\n<!-- Reservable for future use: 0x21C0-0x2FFF.\n     To generate a new range, allocate multiples of 16 starting at the\n     lowest available point in this block. -->\n    <enums namespace=\"WGL\" start=\"0x21C0\" end=\"0x2FFF\" vendor=\"ARB\">\n            <unused start=\"0x21C0\" end=\"0x2FFF\" comment=\"Reserved for future use\"/>\n",
                    "rendered": {
                      "text": "     WGL, and new ranges should be allocated with such overlaps in mind. -->\n\n<!-- Reservable for future use: 0x21C0-0x2FFF.\n     To generate a new range, allocate multiples of 16 starting at the\n     lowest available point in this block. -->\n    <enums namespace=\"WGL\" start=\"0x21C0\" end=\"0x2FFF\" vendor=\"ARB\">\n            <unused start=\"0x21C0\" end=\"0x2FFF\" comment=\"Reserved for future use\"/>\n",
                      "markdown": "`     WGL, and new ranges should be allocated with such overlaps in mind. -->\n\n<!-- Reservable for future use: 0x21C0-0x2FFF.\n     To generate a new range, allocate multiples of 16 starting at the\n     lowest available point in this block. -->\n    <enums namespace=\"WGL\" start=\"0x21C0\" end=\"0x2FFF\" vendor=\"ARB\">\n            <unused start=\"0x21C0\" end=\"0x2FFF\" comment=\"Reserved for future use\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/wgl.xml"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 55,
                  "endLine": 447,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                      "markdown": "`    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/wgl.xml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 8,
                  "endLine": 26,
                  "snippet": {
                    "text": "extensions and API versions. The canonical version of the registry,\ntogether with documentation, schema, and Python generator scripts used\nto generate C header files for WGL, can always be found in the Khronos\nRegistry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: WGL type definitions. Does not include base Windows types. -->\n",
                    "rendered": {
                      "text": "extensions and API versions. The canonical version of the registry,\ntogether with documentation, schema, and Python generator scripts used\nto generate C header files for WGL, can always be found in the Khronos\nRegistry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: WGL type definitions. Does not include base Windows types. -->\n",
                      "markdown": "`extensions and API versions. The canonical version of the registry,\ntogether with documentation, schema, and Python generator scripts used\nto generate C header files for WGL, can always be found in the Khronos\nRegistry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: WGL type definitions. Does not include base Windows types. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/wgl.xml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 9,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/wgl.xml"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 62,
                  "endLine": 447,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n",
                      "markdown": "`    </enums>\n\n<!-- Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. Also note that some GLX enum values are shared with GL and\n     WGL, and new ranges should be allocated with such overlaps in mind. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/glx_public_api_core.c"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 51,
                  "endLine": 103,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n    if (version < 13) {\n        fprintf(stderr,\n                \"Reported GLX version %d, should be at least 13 \"\n                \"according to Linux GL ABI\\n\",\n                version);\n        return false;\n",
                    "rendered": {
                      "text": "\n    if (version < 13) {\n        fprintf(stderr,\n                \"Reported GLX version %d, should be at least 13 \"\n                \"according to Linux GL ABI\\n\",\n                version);\n        return false;\n",
                      "markdown": "`\n    if (version < 13) {\n        fprintf(stderr,\n                \"Reported GLX version %d, should be at least 13 \"\n                \"according to Linux GL ABI\\n\",\n                version);\n        return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/glx_public_api_core.c"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 65,
                  "endLine": 75,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\n    if (gl_version < 32) {\n        fprintf(stderr,\n                \"Implementation reported GL version %d, should be at least 32\\n\",\n                gl_version);\n        return false;\n    }\n",
                    "rendered": {
                      "text": "\n    if (gl_version < 32) {\n        fprintf(stderr,\n                \"Implementation reported GL version %d, should be at least 32\\n\",\n                gl_version);\n        return false;\n    }\n",
                      "markdown": "`\n    if (gl_version < 32) {\n        fprintf(stderr,\n                \"Implementation reported GL version %d, should be at least 32\\n\",\n                gl_version);\n        return false;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/scripts/epoxy-ci-linux.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 12,
                  "snippet": {
                    "text": "dump_log_and_quit() {\n        local exitcode=$1\n\n        cat meson-logs/testlog.txt\n\n        exit $exitcode\n}\n",
                    "rendered": {
                      "text": "dump_log_and_quit() {\n        local exitcode=$1\n\n        cat meson-logs/testlog.txt\n\n        exit $exitcode\n}\n",
                      "markdown": "`dump_log_and_quit() {\n        local exitcode=$1\n\n        cat meson-logs/testlog.txt\n\n        exit $exitcode\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/khronos_typedefs_nonepoxy.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 32,
                  "endLine": 65,
                  "endColumn": 38,
                  "snippet": {
                    "text": "void\nget_system_typedef_sizes(uint32_t *sizes)\n{\n    fputs(\"./configure failed to find khrplatform.h\\n\", stderr);\n    exit(77);\n}\n\n",
                    "rendered": {
                      "text": "void\nget_system_typedef_sizes(uint32_t *sizes)\n{\n    fputs(\"./configure failed to find khrplatform.h\\n\", stderr);\n    exit(77);\n}\n\n",
                      "markdown": "`void\nget_system_typedef_sizes(uint32_t *sizes)\n{\n    fputs(\"./configure failed to find khrplatform.h\\n\", stderr);\n    exit(77);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/glx_public_api.c"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 51,
                  "endLine": 60,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n    if (version < 13) {\n        fprintf(stderr,\n                \"Reported GLX version %d, should be at least 13 \"\n                \"according to Linux GL ABI\\n\",\n                version);\n        return false;\n",
                    "rendered": {
                      "text": "\n    if (version < 13) {\n        fprintf(stderr,\n                \"Reported GLX version %d, should be at least 13 \"\n                \"according to Linux GL ABI\\n\",\n                version);\n        return false;\n",
                      "markdown": "`\n    if (version < 13) {\n        fprintf(stderr,\n                \"Reported GLX version %d, should be at least 13 \"\n                \"according to Linux GL ABI\\n\",\n                version);\n        return false;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/test/glx_public_api.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 50,
                  "endLine": 40,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    int version = epoxy_gl_version();\n    if (version < 12) {\n        fprintf(stderr,\n                \"Reported GL version %d, should be at least 12\\n\",\n                version);\n        return false;\n    }\n",
                    "rendered": {
                      "text": "    int version = epoxy_gl_version();\n    if (version < 12) {\n        fprintf(stderr,\n                \"Reported GL version %d, should be at least 12\\n\",\n                version);\n        return false;\n    }\n",
                      "markdown": "`    int version = epoxy_gl_version();\n    if (version < 12) {\n        fprintf(stderr,\n                \"Reported GL version %d, should be at least 12\\n\",\n                version);\n        return false;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/scripts/epoxy-ci-osx.sh"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 7,
                  "endLine": 6,
                  "endColumn": 12,
                  "snippet": {
                    "text": "dump_log_and_quit() {\n        local exitcode=$1\n\n        cat meson-logs/testlog.txt\n\n        exit $exitcode\n}\n",
                    "rendered": {
                      "text": "dump_log_and_quit() {\n        local exitcode=$1\n\n        cat meson-logs/testlog.txt\n\n        exit $exitcode\n}\n",
                      "markdown": "`dump_log_and_quit() {\n        local exitcode=$1\n\n        cat meson-logs/testlog.txt\n\n        exit $exitcode\n}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 47032,
                  "startColumn": 40,
                  "endLine": 47032,
                  "endColumn": 63,
                  "snippet": {
                    "text": "                <enum name=\"GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_IMG_texture_env_enhanced_fixed_function\" supported=\"gles1\">\n            <require>\n                <enum name=\"GL_MODULATE_COLOR_IMG\"/>\n                <enum name=\"GL_RECIP_ADD_SIGNED_ALPHA_IMG\"/>\n",
                    "rendered": {
                      "text": "                <enum name=\"GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_IMG_texture_env_enhanced_fixed_function\" supported=\"gles1\">\n            <require>\n                <enum name=\"GL_MODULATE_COLOR_IMG\"/>\n                <enum name=\"GL_RECIP_ADD_SIGNED_ALPHA_IMG\"/>\n",
                      "markdown": "`                <enum name=\"GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_IMG_texture_env_enhanced_fixed_function\" supported=\"gles1\">\n            <require>\n                <enum name=\"GL_MODULATE_COLOR_IMG\"/>\n                <enum name=\"GL_RECIP_ADD_SIGNED_ALPHA_IMG\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28581,
                  "startColumn": 33,
                  "endLine": 28581,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvxvOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\">const <ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvxvOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\">const <ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvxvOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\">const <ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28575,
                  "startColumn": 33,
                  "endLine": 28575,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvxv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\">const <ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvxv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\">const <ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvxv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\">const <ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28569,
                  "startColumn": 33,
                  "endLine": 28569,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvxOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param><ptype>GLfixed</ptype> <name>param</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvxOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param><ptype>GLfixed</ptype> <name>param</name></param>\n        </command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvxOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param><ptype>GLfixed</ptype> <name>param</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28563,
                  "startColumn": 33,
                  "endLine": 28563,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvx</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param><ptype>GLfixed</ptype> <name>param</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvx</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param><ptype>GLfixed</ptype> <name>param</name></param>\n        </command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvx</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param><ptype>GLfixed</ptype> <name>param</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28556,
                  "startColumn": 33,
                  "endLine": 28556,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnviv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\" len=\"COMPSIZE(pname)\">const <ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"render\" opcode=\"114\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnviv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\" len=\"COMPSIZE(pname)\">const <ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"render\" opcode=\"114\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnviv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\" len=\"COMPSIZE(pname)\">const <ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"render\" opcode=\"114\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28549,
                  "startColumn": 33,
                  "endLine": 28549,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvi</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\"><ptype>GLint</ptype> <name>param</name></param>\n            <glx type=\"render\" opcode=\"113\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvi</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\"><ptype>GLint</ptype> <name>param</name></param>\n            <glx type=\"render\" opcode=\"113\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvi</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\"><ptype>GLint</ptype> <name>param</name></param>\n            <glx type=\"render\" opcode=\"113\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28542,
                  "startColumn": 33,
                  "endLine": 28542,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvfv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\" len=\"COMPSIZE(pname)\">const <ptype>GLfloat</ptype> *<name>params</name></param>\n            <glx type=\"render\" opcode=\"112\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvfv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\" len=\"COMPSIZE(pname)\">const <ptype>GLfloat</ptype> *<name>params</name></param>\n            <glx type=\"render\" opcode=\"112\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvfv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\" len=\"COMPSIZE(pname)\">const <ptype>GLfloat</ptype> *<name>params</name></param>\n            <glx type=\"render\" opcode=\"112\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 28535,
                  "startColumn": 33,
                  "endLine": 28535,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvf</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\"><ptype>GLfloat</ptype> <name>param</name></param>\n            <glx type=\"render\" opcode=\"111\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glTexEnvf</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\"><ptype>GLfloat</ptype> <name>param</name></param>\n            <glx type=\"render\" opcode=\"111\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glTexEnvf</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\"><ptype>GLfloat</ptype> <name>param</name></param>\n            <glx type=\"render\" opcode=\"111\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 27946,
                  "startColumn": 30,
                  "endLine": 27946,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1279\"/>\n        </command>\n        <command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1279\"/>\n        </command>\n        <command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1279\"/>\n        </command>\n        <command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 27942,
                  "startColumn": 30,
                  "endLine": 27942,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glTestFenceNV</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 27516,
                  "startColumn": 30,
                  "endLine": 27516,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glSetFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <param group=\"FenceConditionNV\"><ptype>GLenum</ptype> <name>condition</name></param>\n        </command>\n        <command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glSetFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <param group=\"FenceConditionNV\"><ptype>GLenum</ptype> <name>condition</name></param>\n        </command>\n        <command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glSetFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <param group=\"FenceConditionNV\"><ptype>GLenum</ptype> <name>condition</name></param>\n        </command>\n        <command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 27512,
                  "startColumn": 30,
                  "endLine": 27512,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glSetFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto>void <name>glSetFenceNV</name></proto>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glSetFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto>void <name>glSetFenceNV</name></proto>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glSetFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto>void <name>glSetFenceNV</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 23137,
                  "startColumn": 33,
                  "endLine": 23137,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glMultiTexEnvivEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\" len=\"COMPSIZE(pname)\">const <ptype>GLint</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glMultiTexEnvivEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\" len=\"COMPSIZE(pname)\">const <ptype>GLint</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glMultiTexEnvivEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\" len=\"COMPSIZE(pname)\">const <ptype>GLint</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 23129,
                  "startColumn": 33,
                  "endLine": 23129,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glMultiTexEnviEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\"><ptype>GLint</ptype> <name>param</name></param>\n            <vecequiv name=\"glMultiTexEnvivEXT\"/>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glMultiTexEnviEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\"><ptype>GLint</ptype> <name>param</name></param>\n            <vecequiv name=\"glMultiTexEnvivEXT\"/>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glMultiTexEnviEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedInt32\"><ptype>GLint</ptype> <name>param</name></param>\n            <vecequiv name=\"glMultiTexEnvivEXT\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 23122,
                  "startColumn": 33,
                  "endLine": 23122,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glMultiTexEnvfvEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\" len=\"COMPSIZE(pname)\">const <ptype>GLfloat</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glMultiTexEnvfvEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\" len=\"COMPSIZE(pname)\">const <ptype>GLfloat</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glMultiTexEnvfvEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\" len=\"COMPSIZE(pname)\">const <ptype>GLfloat</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 23114,
                  "startColumn": 33,
                  "endLine": 23114,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glMultiTexEnvfEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\"><ptype>GLfloat</ptype> <name>param</name></param>\n            <vecequiv name=\"glMultiTexEnvfvEXT\"/>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glMultiTexEnvfEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\"><ptype>GLfloat</ptype> <name>param</name></param>\n            <vecequiv name=\"glMultiTexEnvfvEXT\"/>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glMultiTexEnvfEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param group=\"CheckedFloat32\"><ptype>GLfloat</ptype> <name>param</name></param>\n            <vecequiv name=\"glMultiTexEnvfvEXT\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 21069,
                  "startColumn": 30,
                  "endLine": 21069,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1278\"/>\n        </command>\n        <command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1278\"/>\n        </command>\n        <command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1278\"/>\n        </command>\n        <command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 21065,
                  "startColumn": 30,
                  "endLine": 21065,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto group=\"Boolean\"><ptype>GLboolean</ptype> <name>glIsFenceNV</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 19580,
                  "startColumn": 33,
                  "endLine": 19580,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnvxvOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnvxvOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glGetTexEnvxvOES</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 19574,
                  "startColumn": 33,
                  "endLine": 19574,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnvxv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnvxv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glGetTexEnvxv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfixed</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 19567,
                  "startColumn": 33,
                  "endLine": 19567,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnviv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"single\" opcode=\"131\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnviv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"single\" opcode=\"131\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glGetTexEnviv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"single\" opcode=\"131\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 19560,
                  "startColumn": 33,
                  "endLine": 19560,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnvfv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfloat</ptype> *<name>params</name></param>\n            <glx type=\"single\" opcode=\"130\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glGetTexEnvfv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfloat</ptype> *<name>params</name></param>\n            <glx type=\"single\" opcode=\"130\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glGetTexEnvfv</name></proto>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfloat</ptype> *<name>params</name></param>\n            <glx type=\"single\" opcode=\"130\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 18397,
                  "startColumn": 33,
                  "endLine": 18397,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glGetMultiTexEnvivEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glGetMultiTexEnvivEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glGetMultiTexEnvivEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 18390,
                  "startColumn": 33,
                  "endLine": 18390,
                  "endColumn": 78,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glGetMultiTexEnvfvEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfloat</ptype> *<name>params</name></param>\n        </command>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glGetMultiTexEnvfvEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfloat</ptype> *<name>params</name></param>\n        </command>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glGetMultiTexEnvfvEXT</name></proto>\n            <param group=\"TextureUnit\"><ptype>GLenum</ptype> <name>texunit</name></param>\n            <param group=\"TextureEnvTarget\"><ptype>GLenum</ptype> <name>target</name></param>\n            <param group=\"TextureEnvParameter\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLfloat</ptype> *<name>params</name></param>\n        </command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 17790,
                  "startColumn": 30,
                  "endLine": 17790,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glGetFenceivNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <param group=\"FenceParameterNameNV\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"vendor\" opcode=\"1280\"/>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glGetFenceivNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <param group=\"FenceParameterNameNV\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"vendor\" opcode=\"1280\"/>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glGetFenceivNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <param group=\"FenceParameterNameNV\"><ptype>GLenum</ptype> <name>pname</name></param>\n            <param len=\"COMPSIZE(pname)\"><ptype>GLint</ptype> *<name>params</name></param>\n            <glx type=\"vendor\" opcode=\"1280\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 17008,
                  "startColumn": 30,
                  "endLine": 17008,
                  "endColumn": 76,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glGenFencesNV</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\"><ptype>GLuint</ptype> *<name>fences</name></param>\n            <glx type=\"vendor\" opcode=\"1277\"/>\n        </command>\n        <command>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glGenFencesNV</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\"><ptype>GLuint</ptype> *<name>fences</name></param>\n            <glx type=\"vendor\" opcode=\"1277\"/>\n        </command>\n        <command>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glGenFencesNV</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\"><ptype>GLuint</ptype> *<name>fences</name></param>\n            <glx type=\"vendor\" opcode=\"1277\"/>\n        </command>\n        <command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 17003,
                  "startColumn": 30,
                  "endLine": 17003,
                  "endColumn": 76,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glGenFencesAPPLE</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\"><ptype>GLuint</ptype> *<name>fences</name></param>\n        </command>\n        <command>\n            <proto>void <name>glGenFencesNV</name></proto>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glGenFencesAPPLE</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\"><ptype>GLuint</ptype> *<name>fences</name></param>\n        </command>\n        <command>\n            <proto>void <name>glGenFencesNV</name></proto>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glGenFencesAPPLE</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\"><ptype>GLuint</ptype> *<name>fences</name></param>\n        </command>\n        <command>\n            <proto>void <name>glGenFencesNV</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 16343,
                  "startColumn": 30,
                  "endLine": 16343,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glFinishFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1312\"/>\n        </command>\n        <command>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glFinishFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1312\"/>\n        </command>\n        <command>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glFinishFenceNV</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n            <glx type=\"vendor\" opcode=\"1312\"/>\n        </command>\n        <command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 16339,
                  "startColumn": 30,
                  "endLine": 16339,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        </command>\n        <command>\n            <proto>void <name>glFinishFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto>void <name>glFinishFenceNV</name></proto>\n",
                    "rendered": {
                      "text": "        </command>\n        <command>\n            <proto>void <name>glFinishFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto>void <name>glFinishFenceNV</name></proto>\n",
                      "markdown": "`        </command>\n        <command>\n            <proto>void <name>glFinishFenceAPPLE</name></proto>\n            <param group=\"FenceNV\"><ptype>GLuint</ptype> <name>fence</name></param>\n        </command>\n        <command>\n            <proto>void <name>glFinishFenceNV</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 14939,
                  "startColumn": 30,
                  "endLine": 14939,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glDeleteFencesNV</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\">const <ptype>GLuint</ptype> *<name>fences</name></param>\n            <glx type=\"vendor\" opcode=\"1276\"/>\n        </command>\n        <command>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glDeleteFencesNV</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\">const <ptype>GLuint</ptype> *<name>fences</name></param>\n            <glx type=\"vendor\" opcode=\"1276\"/>\n        </command>\n        <command>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glDeleteFencesNV</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\">const <ptype>GLuint</ptype> *<name>fences</name></param>\n            <glx type=\"vendor\" opcode=\"1276\"/>\n        </command>\n        <command>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 14934,
                  "startColumn": 30,
                  "endLine": 14934,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        <command>\n            <proto>void <name>glDeleteFencesAPPLE</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\">const <ptype>GLuint</ptype> *<name>fences</name></param>\n        </command>\n        <command>\n            <proto>void <name>glDeleteFencesNV</name></proto>\n",
                    "rendered": {
                      "text": "        <command>\n            <proto>void <name>glDeleteFencesAPPLE</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\">const <ptype>GLuint</ptype> *<name>fences</name></param>\n        </command>\n        <command>\n            <proto>void <name>glDeleteFencesNV</name></proto>\n",
                      "markdown": "`        <command>\n            <proto>void <name>glDeleteFencesAPPLE</name></proto>\n            <param><ptype>GLsizei</ptype> <name>n</name></param>\n            <param group=\"FenceNV\" len=\"n\">const <ptype>GLuint</ptype> *<name>fences</name></param>\n        </command>\n        <command>\n            <proto>void <name>glDeleteFencesNV</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 5549,
                  "startColumn": 75,
                  "endLine": 5549,
                  "endColumn": 84,
                  "snippet": {
                    "text": "        <enum value=\"0x2201\" name=\"GL_TEXTURE_ENV_COLOR\"/>\n            <unused start=\"0x2202\" end=\"0x22FF\" comment=\"Unused for TextureEnvParameter\"/>\n        <enum value=\"0x2300\" name=\"GL_TEXTURE_ENV\"/>\n            <unused start=\"0x2301\" end=\"0x23FF\" comment=\"Unused for TextureEnvTarget\"/>\n        <enum value=\"0x2400\" name=\"GL_EYE_LINEAR\"/>\n        <enum value=\"0x2400\" name=\"GL_EYE_LINEAR_NV\"/>\n        <enum value=\"0x2401\" name=\"GL_OBJECT_LINEAR\"/>\n",
                    "rendered": {
                      "text": "        <enum value=\"0x2201\" name=\"GL_TEXTURE_ENV_COLOR\"/>\n            <unused start=\"0x2202\" end=\"0x22FF\" comment=\"Unused for TextureEnvParameter\"/>\n        <enum value=\"0x2300\" name=\"GL_TEXTURE_ENV\"/>\n            <unused start=\"0x2301\" end=\"0x23FF\" comment=\"Unused for TextureEnvTarget\"/>\n        <enum value=\"0x2400\" name=\"GL_EYE_LINEAR\"/>\n        <enum value=\"0x2400\" name=\"GL_EYE_LINEAR_NV\"/>\n        <enum value=\"0x2401\" name=\"GL_OBJECT_LINEAR\"/>\n",
                      "markdown": "`        <enum value=\"0x2201\" name=\"GL_TEXTURE_ENV_COLOR\"/>\n            <unused start=\"0x2202\" end=\"0x22FF\" comment=\"Unused for TextureEnvParameter\"/>\n        <enum value=\"0x2300\" name=\"GL_TEXTURE_ENV\"/>\n            <unused start=\"0x2301\" end=\"0x23FF\" comment=\"Unused for TextureEnvTarget\"/>\n        <enum value=\"0x2400\" name=\"GL_EYE_LINEAR\"/>\n        <enum value=\"0x2400\" name=\"GL_EYE_LINEAR_NV\"/>\n        <enum value=\"0x2401\" name=\"GL_OBJECT_LINEAR\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 3082,
                  "startColumn": 28,
                  "endLine": 3082,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            <enum name=\"GL_TEXTURE_ENV_MODE\"/>\n        </group>\n\n        <group name=\"TextureEnvTarget\">\n            <enum name=\"GL_TEXTURE_ENV\"/>\n        </group>\n\n",
                    "rendered": {
                      "text": "            <enum name=\"GL_TEXTURE_ENV_MODE\"/>\n        </group>\n\n        <group name=\"TextureEnvTarget\">\n            <enum name=\"GL_TEXTURE_ENV\"/>\n        </group>\n\n",
                      "markdown": "`            <enum name=\"GL_TEXTURE_ENV_MODE\"/>\n        </group>\n\n        <group name=\"TextureEnvTarget\">\n            <enum name=\"GL_TEXTURE_ENV\"/>\n        </group>\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51408,
                  "startColumn": 30,
                  "endLine": 51408,
                  "endColumn": 88,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_VIV_shader_binary\" supported=\"gles2\">\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_VIV_shader_binary\" supported=\"gles2\">\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_VIV_shader_binary\" supported=\"gles2\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51407,
                  "startColumn": 30,
                  "endLine": 51407,
                  "endColumn": 87,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n        </extension>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n        </extension>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n        </extension>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51406,
                  "startColumn": 30,
                  "endLine": 51406,
                  "endColumn": 81,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n            </require>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51405,
                  "startColumn": 30,
                  "endLine": 51405,
                  "endColumn": 80,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51404,
                  "startColumn": 30,
                  "endLine": 51404,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51403,
                  "startColumn": 30,
                  "endLine": 51403,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51402,
                  "startColumn": 30,
                  "endLine": 51402,
                  "endColumn": 78,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 51401,
                  "startColumn": 30,
                  "endLine": 51401,
                  "endColumn": 77,
                  "snippet": {
                    "text": "                <command name=\"glReplacementCodeuiColor3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glReplacementCodeuiColor3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n",
                      "markdown": "`                <command name=\"glReplacementCodeuiColor3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiColor4fNormal3fVertex3fvSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fSUN\"/>\n                <command name=\"glReplacementCodeuiTexCoord2fVertex3fvSUN\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 50560,
                  "startColumn": 30,
                  "endLine": 50560,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        <extension name=\"GL_OVR_multiview2\" supported=\"gl|glcore|gles2\"/>\n        <extension name=\"GL_OVR_multiview_multisampled_render_to_texture\" supported=\"gles2\">\n            <require>\n                <command name=\"glFramebufferTextureMultisampleMultiviewOVR\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_PGI_misc_hints\" supported=\"gl\">\n",
                    "rendered": {
                      "text": "        <extension name=\"GL_OVR_multiview2\" supported=\"gl|glcore|gles2\"/>\n        <extension name=\"GL_OVR_multiview_multisampled_render_to_texture\" supported=\"gles2\">\n            <require>\n                <command name=\"glFramebufferTextureMultisampleMultiviewOVR\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_PGI_misc_hints\" supported=\"gl\">\n",
                      "markdown": "`        <extension name=\"GL_OVR_multiview2\" supported=\"gl|glcore|gles2\"/>\n        <extension name=\"GL_OVR_multiview_multisampled_render_to_texture\" supported=\"gles2\">\n            <require>\n                <command name=\"glFramebufferTextureMultisampleMultiviewOVR\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_PGI_misc_hints\" supported=\"gl\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 50025,
                  "startColumn": 30,
                  "endLine": 50025,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                <command name=\"glCheckFramebufferStatusOES\"/>\n                <command name=\"glFramebufferRenderbufferOES\"/>\n                <command name=\"glFramebufferTexture2DOES\"/>\n                <command name=\"glGetFramebufferAttachmentParameterivOES\"/>\n                <command name=\"glGenerateMipmapOES\"/>\n            </require>\n        </extension>\n",
                    "rendered": {
                      "text": "                <command name=\"glCheckFramebufferStatusOES\"/>\n                <command name=\"glFramebufferRenderbufferOES\"/>\n                <command name=\"glFramebufferTexture2DOES\"/>\n                <command name=\"glGetFramebufferAttachmentParameterivOES\"/>\n                <command name=\"glGenerateMipmapOES\"/>\n            </require>\n        </extension>\n",
                      "markdown": "`                <command name=\"glCheckFramebufferStatusOES\"/>\n                <command name=\"glFramebufferRenderbufferOES\"/>\n                <command name=\"glFramebufferTexture2DOES\"/>\n                <command name=\"glGetFramebufferAttachmentParameterivOES\"/>\n                <command name=\"glGenerateMipmapOES\"/>\n            </require>\n        </extension>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 49309,
                  "startColumn": 30,
                  "endLine": 49309,
                  "endColumn": 81,
                  "snippet": {
                    "text": "        </extension>\n        <extension name=\"GL_NV_vdpau_interop2\" supported=\"gl\">\n            <require>\n                <command name=\"glVDPAURegisterVideoSurfaceWithPictureStructureNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_vertex_array_range\" supported=\"gl\">\n",
                    "rendered": {
                      "text": "        </extension>\n        <extension name=\"GL_NV_vdpau_interop2\" supported=\"gl\">\n            <require>\n                <command name=\"glVDPAURegisterVideoSurfaceWithPictureStructureNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_vertex_array_range\" supported=\"gl\">\n",
                      "markdown": "`        </extension>\n        <extension name=\"GL_NV_vdpau_interop2\" supported=\"gl\">\n            <require>\n                <command name=\"glVDPAURegisterVideoSurfaceWithPictureStructureNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_vertex_array_range\" supported=\"gl\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 48296,
                  "startColumn": 30,
                  "endLine": 48296,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                <command name=\"glMulticastCopyBufferSubDataNV\"/>\n                <command name=\"glMulticastCopyImageSubDataNV\"/>\n                <command name=\"glMulticastBlitFramebufferNV\"/>\n                <command name=\"glMulticastFramebufferSampleLocationsfvNV\"/>\n                <command name=\"glMulticastBarrierNV\"/>\n                <command name=\"glMulticastWaitSyncNV\"/>\n                <command name=\"glMulticastGetQueryObjectivNV\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glMulticastCopyBufferSubDataNV\"/>\n                <command name=\"glMulticastCopyImageSubDataNV\"/>\n                <command name=\"glMulticastBlitFramebufferNV\"/>\n                <command name=\"glMulticastFramebufferSampleLocationsfvNV\"/>\n                <command name=\"glMulticastBarrierNV\"/>\n                <command name=\"glMulticastWaitSyncNV\"/>\n                <command name=\"glMulticastGetQueryObjectivNV\"/>\n",
                      "markdown": "`                <command name=\"glMulticastCopyBufferSubDataNV\"/>\n                <command name=\"glMulticastCopyImageSubDataNV\"/>\n                <command name=\"glMulticastBlitFramebufferNV\"/>\n                <command name=\"glMulticastFramebufferSampleLocationsfvNV\"/>\n                <command name=\"glMulticastBarrierNV\"/>\n                <command name=\"glMulticastWaitSyncNV\"/>\n                <command name=\"glMulticastGetQueryObjectivNV\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 48067,
                  "startColumn": 30,
                  "endLine": 48067,
                  "endColumn": 74,
                  "snippet": {
                    "text": "                <enum name=\"GL_RENDERBUFFER_COLOR_SAMPLES_NV\"/>\n                <enum name=\"GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV\"/>\n                <enum name=\"GL_MULTISAMPLE_COVERAGE_MODES_NV\"/>\n                <command name=\"glRenderbufferStorageMultisampleCoverageNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_generate_mipmap_sRGB\" supported=\"gles2\"/>\n",
                    "rendered": {
                      "text": "                <enum name=\"GL_RENDERBUFFER_COLOR_SAMPLES_NV\"/>\n                <enum name=\"GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV\"/>\n                <enum name=\"GL_MULTISAMPLE_COVERAGE_MODES_NV\"/>\n                <command name=\"glRenderbufferStorageMultisampleCoverageNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_generate_mipmap_sRGB\" supported=\"gles2\"/>\n",
                      "markdown": "`                <enum name=\"GL_RENDERBUFFER_COLOR_SAMPLES_NV\"/>\n                <enum name=\"GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV\"/>\n                <enum name=\"GL_MULTISAMPLE_COVERAGE_MODES_NV\"/>\n                <command name=\"glRenderbufferStorageMultisampleCoverageNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_generate_mipmap_sRGB\" supported=\"gles2\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 47558,
                  "startColumn": 30,
                  "endLine": 47558,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        <extension name=\"GL_NV_bindless_multi_draw_indirect_count\" supported=\"gl|glcore\">\n            <require>\n                <command name=\"glMultiDrawArraysIndirectBindlessCountNV\"/>\n                <command name=\"glMultiDrawElementsIndirectBindlessCountNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_bindless_texture\" supported=\"gl|glcore|gles2\">\n",
                    "rendered": {
                      "text": "        <extension name=\"GL_NV_bindless_multi_draw_indirect_count\" supported=\"gl|glcore\">\n            <require>\n                <command name=\"glMultiDrawArraysIndirectBindlessCountNV\"/>\n                <command name=\"glMultiDrawElementsIndirectBindlessCountNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_bindless_texture\" supported=\"gl|glcore|gles2\">\n",
                      "markdown": "`        <extension name=\"GL_NV_bindless_multi_draw_indirect_count\" supported=\"gl|glcore\">\n            <require>\n                <command name=\"glMultiDrawArraysIndirectBindlessCountNV\"/>\n                <command name=\"glMultiDrawElementsIndirectBindlessCountNV\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_NV_bindless_texture\" supported=\"gl|glcore|gles2\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 47557,
                  "startColumn": 30,
                  "endLine": 47557,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        </extension>\n        <extension name=\"GL_NV_bindless_multi_draw_indirect_count\" supported=\"gl|glcore\">\n            <require>\n                <command name=\"glMultiDrawArraysIndirectBindlessCountNV\"/>\n                <command name=\"glMultiDrawElementsIndirectBindlessCountNV\"/>\n            </require>\n        </extension>\n",
                    "rendered": {
                      "text": "        </extension>\n        <extension name=\"GL_NV_bindless_multi_draw_indirect_count\" supported=\"gl|glcore\">\n            <require>\n                <command name=\"glMultiDrawArraysIndirectBindlessCountNV\"/>\n                <command name=\"glMultiDrawElementsIndirectBindlessCountNV\"/>\n            </require>\n        </extension>\n",
                      "markdown": "`        </extension>\n        <extension name=\"GL_NV_bindless_multi_draw_indirect_count\" supported=\"gl|glcore\">\n            <require>\n                <command name=\"glMultiDrawArraysIndirectBindlessCountNV\"/>\n                <command name=\"glMultiDrawElementsIndirectBindlessCountNV\"/>\n            </require>\n        </extension>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 45913,
                  "startColumn": 30,
                  "endLine": 45913,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                <enum name=\"GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT\"/>\n                <enum name=\"GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT\"/>\n                <command name=\"glFramebufferPixelLocalStorageSizeEXT\"/>\n                <command name=\"glGetFramebufferPixelLocalStorageSizeEXT\"/>\n                <command name=\"glClearPixelLocalStorageuiEXT\"/>\n            </require>\n        </extension>\n",
                    "rendered": {
                      "text": "                <enum name=\"GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT\"/>\n                <enum name=\"GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT\"/>\n                <command name=\"glFramebufferPixelLocalStorageSizeEXT\"/>\n                <command name=\"glGetFramebufferPixelLocalStorageSizeEXT\"/>\n                <command name=\"glClearPixelLocalStorageuiEXT\"/>\n            </require>\n        </extension>\n",
                      "markdown": "`                <enum name=\"GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT\"/>\n                <enum name=\"GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT\"/>\n                <command name=\"glFramebufferPixelLocalStorageSizeEXT\"/>\n                <command name=\"glGetFramebufferPixelLocalStorageSizeEXT\"/>\n                <command name=\"glClearPixelLocalStorageuiEXT\"/>\n            </require>\n        </extension>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 45130,
                  "startColumn": 30,
                  "endLine": 45130,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                <command name=\"glFramebufferTexture2DEXT\"/>\n                <command name=\"glFramebufferTexture3DEXT\"/>\n                <command name=\"glFramebufferRenderbufferEXT\"/>\n                <command name=\"glGetFramebufferAttachmentParameterivEXT\"/>\n                <command name=\"glGenerateMipmapEXT\"/>\n            </require>\n        </extension>\n",
                    "rendered": {
                      "text": "                <command name=\"glFramebufferTexture2DEXT\"/>\n                <command name=\"glFramebufferTexture3DEXT\"/>\n                <command name=\"glFramebufferRenderbufferEXT\"/>\n                <command name=\"glGetFramebufferAttachmentParameterivEXT\"/>\n                <command name=\"glGenerateMipmapEXT\"/>\n            </require>\n        </extension>\n",
                      "markdown": "`                <command name=\"glFramebufferTexture2DEXT\"/>\n                <command name=\"glFramebufferTexture3DEXT\"/>\n                <command name=\"glFramebufferRenderbufferEXT\"/>\n                <command name=\"glGetFramebufferAttachmentParameterivEXT\"/>\n                <command name=\"glGenerateMipmapEXT\"/>\n            </require>\n        </extension>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 44754,
                  "startColumn": 30,
                  "endLine": 44754,
                  "endColumn": 77,
                  "snippet": {
                    "text": "                <command name=\"glNamedFramebufferTexture2DEXT\"/>\n                <command name=\"glNamedFramebufferTexture3DEXT\"/>\n                <command name=\"glNamedFramebufferRenderbufferEXT\"/>\n                <command name=\"glGetNamedFramebufferAttachmentParameterivEXT\"/>\n            </require>\n            <require comment=\"OpenGL 3.0: New texture commands\">\n                <command name=\"glGenerateTextureMipmapEXT\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glNamedFramebufferTexture2DEXT\"/>\n                <command name=\"glNamedFramebufferTexture3DEXT\"/>\n                <command name=\"glNamedFramebufferRenderbufferEXT\"/>\n                <command name=\"glGetNamedFramebufferAttachmentParameterivEXT\"/>\n            </require>\n            <require comment=\"OpenGL 3.0: New texture commands\">\n                <command name=\"glGenerateTextureMipmapEXT\"/>\n",
                      "markdown": "`                <command name=\"glNamedFramebufferTexture2DEXT\"/>\n                <command name=\"glNamedFramebufferTexture3DEXT\"/>\n                <command name=\"glNamedFramebufferRenderbufferEXT\"/>\n                <command name=\"glGetNamedFramebufferAttachmentParameterivEXT\"/>\n            </require>\n            <require comment=\"OpenGL 3.0: New texture commands\">\n                <command name=\"glGenerateTextureMipmapEXT\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 44746,
                  "startColumn": 30,
                  "endLine": 44746,
                  "endColumn": 80,
                  "snippet": {
                    "text": "                <command name=\"glNamedRenderbufferStorageMultisampleEXT\"/>\n            </require>\n            <require comment=\"Extend NV_framebuffer_multisample_coverage\">\n                <command name=\"glNamedRenderbufferStorageMultisampleCoverageEXT\"/>\n            </require>\n            <require comment=\"OpenGL 3.0: New framebuffer commands\">\n                <command name=\"glCheckNamedFramebufferStatusEXT\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glNamedRenderbufferStorageMultisampleEXT\"/>\n            </require>\n            <require comment=\"Extend NV_framebuffer_multisample_coverage\">\n                <command name=\"glNamedRenderbufferStorageMultisampleCoverageEXT\"/>\n            </require>\n            <require comment=\"OpenGL 3.0: New framebuffer commands\">\n                <command name=\"glCheckNamedFramebufferStatusEXT\"/>\n",
                      "markdown": "`                <command name=\"glNamedRenderbufferStorageMultisampleEXT\"/>\n            </require>\n            <require comment=\"Extend NV_framebuffer_multisample_coverage\">\n                <command name=\"glNamedRenderbufferStorageMultisampleCoverageEXT\"/>\n            </require>\n            <require comment=\"OpenGL 3.0: New framebuffer commands\">\n                <command name=\"glCheckNamedFramebufferStatusEXT\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 44743,
                  "startColumn": 30,
                  "endLine": 44743,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            <require comment=\"OpenGL 3.0: New renderbuffer commands\">\n                <command name=\"glNamedRenderbufferStorageEXT\"/>\n                <command name=\"glGetNamedRenderbufferParameterivEXT\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleEXT\"/>\n            </require>\n            <require comment=\"Extend NV_framebuffer_multisample_coverage\">\n                <command name=\"glNamedRenderbufferStorageMultisampleCoverageEXT\"/>\n",
                    "rendered": {
                      "text": "            <require comment=\"OpenGL 3.0: New renderbuffer commands\">\n                <command name=\"glNamedRenderbufferStorageEXT\"/>\n                <command name=\"glGetNamedRenderbufferParameterivEXT\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleEXT\"/>\n            </require>\n            <require comment=\"Extend NV_framebuffer_multisample_coverage\">\n                <command name=\"glNamedRenderbufferStorageMultisampleCoverageEXT\"/>\n",
                      "markdown": "`            <require comment=\"OpenGL 3.0: New renderbuffer commands\">\n                <command name=\"glNamedRenderbufferStorageEXT\"/>\n                <command name=\"glGetNamedRenderbufferParameterivEXT\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleEXT\"/>\n            </require>\n            <require comment=\"Extend NV_framebuffer_multisample_coverage\">\n                <command name=\"glNamedRenderbufferStorageMultisampleCoverageEXT\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 44213,
                  "startColumn": 30,
                  "endLine": 44213,
                  "endColumn": 80,
                  "snippet": {
                    "text": "            <require>\n                <command name=\"glDrawArraysInstancedBaseInstanceEXT\"/>\n                <command name=\"glDrawElementsInstancedBaseInstanceEXT\"/>\n                <command name=\"glDrawElementsInstancedBaseVertexBaseInstanceEXT\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_EXT_bgra\" supported=\"gl\">\n",
                    "rendered": {
                      "text": "            <require>\n                <command name=\"glDrawArraysInstancedBaseInstanceEXT\"/>\n                <command name=\"glDrawElementsInstancedBaseInstanceEXT\"/>\n                <command name=\"glDrawElementsInstancedBaseVertexBaseInstanceEXT\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_EXT_bgra\" supported=\"gl\">\n",
                      "markdown": "`            <require>\n                <command name=\"glDrawArraysInstancedBaseInstanceEXT\"/>\n                <command name=\"glDrawElementsInstancedBaseInstanceEXT\"/>\n                <command name=\"glDrawElementsInstancedBaseVertexBaseInstanceEXT\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_EXT_bgra\" supported=\"gl\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 41278,
                  "startColumn": 30,
                  "endLine": 41278,
                  "endColumn": 74,
                  "snippet": {
                    "text": "                <command name=\"glBlitNamedFramebuffer\"/>\n                <command name=\"glCheckNamedFramebufferStatus\"/>\n                <command name=\"glGetNamedFramebufferParameteriv\"/>\n                <command name=\"glGetNamedFramebufferAttachmentParameteriv\"/>\n            </require>\n            <require comment=\"Renderbuffer object functions\">\n                <command name=\"glCreateRenderbuffers\"/>\n",
                    "rendered": {
                      "text": "                <command name=\"glBlitNamedFramebuffer\"/>\n                <command name=\"glCheckNamedFramebufferStatus\"/>\n                <command name=\"glGetNamedFramebufferParameteriv\"/>\n                <command name=\"glGetNamedFramebufferAttachmentParameteriv\"/>\n            </require>\n            <require comment=\"Renderbuffer object functions\">\n                <command name=\"glCreateRenderbuffers\"/>\n",
                      "markdown": "`                <command name=\"glBlitNamedFramebuffer\"/>\n                <command name=\"glCheckNamedFramebufferStatus\"/>\n                <command name=\"glGetNamedFramebufferParameteriv\"/>\n                <command name=\"glGetNamedFramebufferAttachmentParameteriv\"/>\n            </require>\n            <require comment=\"Renderbuffer object functions\">\n                <command name=\"glCreateRenderbuffers\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 41001,
                  "startColumn": 30,
                  "endLine": 41001,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            <require>\n                <command name=\"glDrawArraysInstancedBaseInstance\"/>\n                <command name=\"glDrawElementsInstancedBaseInstance\"/>\n                <command name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_ARB_bindless_texture\" supported=\"gl|glcore\">\n",
                    "rendered": {
                      "text": "            <require>\n                <command name=\"glDrawArraysInstancedBaseInstance\"/>\n                <command name=\"glDrawElementsInstancedBaseInstance\"/>\n                <command name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_ARB_bindless_texture\" supported=\"gl|glcore\">\n",
                      "markdown": "`            <require>\n                <command name=\"glDrawArraysInstancedBaseInstance\"/>\n                <command name=\"glDrawElementsInstancedBaseInstance\"/>\n                <command name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_ARB_bindless_texture\" supported=\"gl|glcore\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 40351,
                  "startColumn": 30,
                  "endLine": 40351,
                  "endColumn": 80,
                  "snippet": {
                    "text": "                <enum name=\"GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <enum name=\"GL_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <command name=\"glRenderbufferStorageMultisampleAdvancedAMD\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleAdvancedAMD\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_AMD_framebuffer_sample_positions\" supported=\"gl\">\n",
                    "rendered": {
                      "text": "                <enum name=\"GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <enum name=\"GL_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <command name=\"glRenderbufferStorageMultisampleAdvancedAMD\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleAdvancedAMD\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_AMD_framebuffer_sample_positions\" supported=\"gl\">\n",
                      "markdown": "`                <enum name=\"GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <enum name=\"GL_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <command name=\"glRenderbufferStorageMultisampleAdvancedAMD\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleAdvancedAMD\"/>\n            </require>\n        </extension>\n        <extension name=\"GL_AMD_framebuffer_sample_positions\" supported=\"gl\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 40350,
                  "startColumn": 30,
                  "endLine": 40350,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                <enum name=\"GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD\"/>\n                <enum name=\"GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <enum name=\"GL_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <command name=\"glRenderbufferStorageMultisampleAdvancedAMD\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleAdvancedAMD\"/>\n            </require>\n        </extension>\n",
                    "rendered": {
                      "text": "                <enum name=\"GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD\"/>\n                <enum name=\"GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <enum name=\"GL_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <command name=\"glRenderbufferStorageMultisampleAdvancedAMD\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleAdvancedAMD\"/>\n            </require>\n        </extension>\n",
                      "markdown": "`                <enum name=\"GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD\"/>\n                <enum name=\"GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <enum name=\"GL_SUPPORTED_MULTISAMPLE_MODES_AMD\"/>\n                <command name=\"glRenderbufferStorageMultisampleAdvancedAMD\"/>\n                <command name=\"glNamedRenderbufferStorageMultisampleAdvancedAMD\"/>\n            </require>\n        </extension>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 37701,
                  "startColumn": 26,
                  "endLine": 37701,
                  "endColumn": 70,
                  "snippet": {
                    "text": "            <command name=\"glBlitNamedFramebuffer\"/>\n            <command name=\"glCheckNamedFramebufferStatus\"/>\n            <command name=\"glGetNamedFramebufferParameteriv\"/>\n            <command name=\"glGetNamedFramebufferAttachmentParameteriv\"/>\n            <command name=\"glCreateRenderbuffers\"/>\n            <command name=\"glNamedRenderbufferStorage\"/>\n            <command name=\"glNamedRenderbufferStorageMultisample\"/>\n",
                    "rendered": {
                      "text": "            <command name=\"glBlitNamedFramebuffer\"/>\n            <command name=\"glCheckNamedFramebufferStatus\"/>\n            <command name=\"glGetNamedFramebufferParameteriv\"/>\n            <command name=\"glGetNamedFramebufferAttachmentParameteriv\"/>\n            <command name=\"glCreateRenderbuffers\"/>\n            <command name=\"glNamedRenderbufferStorage\"/>\n            <command name=\"glNamedRenderbufferStorageMultisample\"/>\n",
                      "markdown": "`            <command name=\"glBlitNamedFramebuffer\"/>\n            <command name=\"glCheckNamedFramebufferStatus\"/>\n            <command name=\"glGetNamedFramebufferParameteriv\"/>\n            <command name=\"glGetNamedFramebufferAttachmentParameteriv\"/>\n            <command name=\"glCreateRenderbuffers\"/>\n            <command name=\"glNamedRenderbufferStorage\"/>\n            <command name=\"glNamedRenderbufferStorageMultisample\"/>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 37124,
                  "startColumn": 26,
                  "endLine": 37124,
                  "endColumn": 73,
                  "snippet": {
                    "text": "        <require comment=\"Reuse commands from ARB_base_instance\">\n            <command name=\"glDrawArraysInstancedBaseInstance\"/>\n            <command name=\"glDrawElementsInstancedBaseInstance\"/>\n            <command name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n        </require>\n        <require comment=\"Reuse commands from ARB_compressed_texture_pixel_storage (none)\">\n        </require>\n",
                    "rendered": {
                      "text": "        <require comment=\"Reuse commands from ARB_base_instance\">\n            <command name=\"glDrawArraysInstancedBaseInstance\"/>\n            <command name=\"glDrawElementsInstancedBaseInstance\"/>\n            <command name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n        </require>\n        <require comment=\"Reuse commands from ARB_compressed_texture_pixel_storage (none)\">\n        </require>\n",
                      "markdown": "`        <require comment=\"Reuse commands from ARB_base_instance\">\n            <command name=\"glDrawArraysInstancedBaseInstance\"/>\n            <command name=\"glDrawElementsInstancedBaseInstance\"/>\n            <command name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n        </require>\n        <require comment=\"Reuse commands from ARB_compressed_texture_pixel_storage (none)\">\n        </require>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 15644,
                  "startColumn": 24,
                  "endLine": 15644,
                  "endColumn": 71,
                  "snippet": {
                    "text": "            <param><ptype>GLsizei</ptype> <name>instancecount</name></param>\n            <param><ptype>GLint</ptype> <name>basevertex</name></param>\n            <param><ptype>GLuint</ptype> <name>baseinstance</name></param>\n            <alias name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n        </command>\n        <command>\n            <proto>void <name>glDrawElementsInstancedBaseVertexEXT</name></proto>\n",
                    "rendered": {
                      "text": "            <param><ptype>GLsizei</ptype> <name>instancecount</name></param>\n            <param><ptype>GLint</ptype> <name>basevertex</name></param>\n            <param><ptype>GLuint</ptype> <name>baseinstance</name></param>\n            <alias name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n        </command>\n        <command>\n            <proto>void <name>glDrawElementsInstancedBaseVertexEXT</name></proto>\n",
                      "markdown": "`            <param><ptype>GLsizei</ptype> <name>instancecount</name></param>\n            <param><ptype>GLint</ptype> <name>basevertex</name></param>\n            <param><ptype>GLuint</ptype> <name>baseinstance</name></param>\n            <alias name=\"glDrawElementsInstancedBaseVertexBaseInstance\"/>\n        </command>\n        <command>\n            <proto>void <name>glDrawElementsInstancedBaseVertexEXT</name></proto>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 40601,
                  "startColumn": 76,
                  "endLine": 40601,
                  "endColumn": 80,
                  "snippet": {
                    "text": "        </extension>\n        <extension name=\"GL_AMD_vertex_shader_viewport_index\" supported=\"gl\"/>\n        <extension name=\"GL_ANDROID_extension_pack_es31a\" supported=\"gles2\">\n            <require comment=\"This is an alias for the following extensions. At present gl.xml doesn't actually replicate all their interfaces here.\">\n                <!--\n                    KHR_debug\n                    KHR_texture_compression_astc_ldr\n",
                    "rendered": {
                      "text": "        </extension>\n        <extension name=\"GL_AMD_vertex_shader_viewport_index\" supported=\"gl\"/>\n        <extension name=\"GL_ANDROID_extension_pack_es31a\" supported=\"gles2\">\n            <require comment=\"This is an alias for the following extensions. At present gl.xml doesn't actually replicate all their interfaces here.\">\n                <!--\n                    KHR_debug\n                    KHR_texture_compression_astc_ldr\n",
                      "markdown": "`        </extension>\n        <extension name=\"GL_AMD_vertex_shader_viewport_index\" supported=\"gl\"/>\n        <extension name=\"GL_ANDROID_extension_pack_es31a\" supported=\"gles2\">\n            <require comment=\"This is an alias for the following extensions. At present gl.xml doesn't actually replicate all their interfaces here.\">\n                <!--\n                    KHR_debug\n                    KHR_texture_compression_astc_ldr\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 37467,
                  "startColumn": 78,
                  "endLine": 37467,
                  "endColumn": 86,
                  "snippet": {
                    "text": "            <enum name=\"GL_VERTEX_BINDING_STRIDE\"/>\n            <enum name=\"GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET\"/>\n            <enum name=\"GL_MAX_VERTEX_ATTRIB_BINDINGS\"/>\n            <enum name=\"GL_VERTEX_BINDING_BUFFER\" comment=\"Added in 2013/10/22 update to the spec\"/>\n        </require>\n        <require comment=\"Reuse commands from ARB_arrays_of_arrays (none, GLSL only)\">\n        </require>\n",
                    "rendered": {
                      "text": "            <enum name=\"GL_VERTEX_BINDING_STRIDE\"/>\n            <enum name=\"GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET\"/>\n            <enum name=\"GL_MAX_VERTEX_ATTRIB_BINDINGS\"/>\n            <enum name=\"GL_VERTEX_BINDING_BUFFER\" comment=\"Added in 2013/10/22 update to the spec\"/>\n        </require>\n        <require comment=\"Reuse commands from ARB_arrays_of_arrays (none, GLSL only)\">\n        </require>\n",
                      "markdown": "`            <enum name=\"GL_VERTEX_BINDING_STRIDE\"/>\n            <enum name=\"GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET\"/>\n            <enum name=\"GL_MAX_VERTEX_ATTRIB_BINDINGS\"/>\n            <enum name=\"GL_VERTEX_BINDING_BUFFER\" comment=\"Added in 2013/10/22 update to the spec\"/>\n        </require>\n        <require comment=\"Reuse commands from ARB_arrays_of_arrays (none, GLSL only)\">\n        </require>\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 11387,
                  "startColumn": 55,
                  "endLine": 11387,
                  "endColumn": 59,
                  "snippet": {
                    "text": "     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. -->\n\n",
                    "rendered": {
                      "text": "     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. -->\n\n",
                      "markdown": "`     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. -->\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 11383,
                  "startColumn": 37,
                  "endLine": 11383,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    </enums>\n\n<!-- Enums reservable for future use. To reserve a new range, allocate one\n     or more multiples of 16 starting at the lowest available point in this\n     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n",
                    "rendered": {
                      "text": "    </enums>\n\n<!-- Enums reservable for future use. To reserve a new range, allocate one\n     or more multiples of 16 starting at the lowest available point in this\n     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n",
                      "markdown": "`    </enums>\n\n<!-- Enums reservable for future use. To reserve a new range, allocate one\n     or more multiples of 16 starting at the lowest available point in this\n     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 6915,
                  "startColumn": 57,
                  "endLine": 6915,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n    <enums namespace=\"GL\" start=\"0x8370\" end=\"0x837F\" vendor=\"HP\">\n            <!-- NOTE: IBM is using values in this range, because of a\n                 bobble when an employee left DEC for IBM at the same\n                 time as they were assigned the range. their registry\n                 became inconsistent. It's unknown whether HP has any\n                 conflicts. They have never reported using any values in\n",
                    "rendered": {
                      "text": "\n    <enums namespace=\"GL\" start=\"0x8370\" end=\"0x837F\" vendor=\"HP\">\n            <!-- NOTE: IBM is using values in this range, because of a\n                 bobble when an employee left DEC for IBM at the same\n                 time as they were assigned the range. their registry\n                 became inconsistent. It's unknown whether HP has any\n                 conflicts. They have never reported using any values in\n",
                      "markdown": "`\n    <enums namespace=\"GL\" start=\"0x8370\" end=\"0x837F\" vendor=\"HP\">\n            <!-- NOTE: IBM is using values in this range, because of a\n                 bobble when an employee left DEC for IBM at the same\n                 time as they were assigned the range. their registry\n                 became inconsistent. It's unknown whether HP has any\n                 conflicts. They have never reported using any values in\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 4610,
                  "startColumn": 107,
                  "endLine": 4610,
                  "endColumn": 111,
                  "snippet": {
                    "text": "        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_ARB\"/>\n        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_EXT\"/>\n        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_3DFX\"/>\n        <enum value=\"0xFFFFFFFF\" name=\"GL_ALL_ATTRIB_BITS\" comment=\"Guaranteed to mark all attribute groups at once\"/>\n    </enums>\n\n    <enums namespace=\"GL\" group=\"BufferStorageMask\" type=\"bitmask\" comment=\"GL_MAP_{COHERENT,PERSISTENT,READ,WRITE}_{BIT,BIT_EXT} also lie in this namespace\">\n",
                    "rendered": {
                      "text": "        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_ARB\"/>\n        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_EXT\"/>\n        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_3DFX\"/>\n        <enum value=\"0xFFFFFFFF\" name=\"GL_ALL_ATTRIB_BITS\" comment=\"Guaranteed to mark all attribute groups at once\"/>\n    </enums>\n\n    <enums namespace=\"GL\" group=\"BufferStorageMask\" type=\"bitmask\" comment=\"GL_MAP_{COHERENT,PERSISTENT,READ,WRITE}_{BIT,BIT_EXT} also lie in this namespace\">\n",
                      "markdown": "`        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_ARB\"/>\n        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_EXT\"/>\n        <enum value=\"0x20000000\" name=\"GL_MULTISAMPLE_BIT_3DFX\"/>\n        <enum value=\"0xFFFFFFFF\" name=\"GL_ALL_ATTRIB_BITS\" comment=\"Guaranteed to mark all attribute groups at once\"/>\n    </enums>\n\n    <enums namespace=\"GL\" group=\"BufferStorageMask\" type=\"bitmask\" comment=\"GL_MAP_{COHERENT,PERSISTENT,READ,WRITE}_{BIT,BIT_EXT} also lie in this namespace\">\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 43,
                  "endLine": 24,
                  "snippet": {
                    "text": "This file, gl.xml, is the OpenGL and OpenGL API Registry. The canonical\nversion of the registry, together with documentation, schema, and Python\ngenerator scripts used to generate C header files for OpenGL and OpenGL ES,\ncan always be found in the Khronos Registry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: GL type definitions. -->\n",
                    "rendered": {
                      "text": "This file, gl.xml, is the OpenGL and OpenGL API Registry. The canonical\nversion of the registry, together with documentation, schema, and Python\ngenerator scripts used to generate C header files for OpenGL and OpenGL ES,\ncan always be found in the Khronos Registry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: GL type definitions. -->\n",
                      "markdown": "`This file, gl.xml, is the OpenGL and OpenGL API Registry. The canonical\nversion of the registry, together with documentation, schema, and Python\ngenerator scripts used to generate C header files for OpenGL and OpenGL ES,\ncan always be found in the Khronos Registry at\n        https://github.com/KhronosGroup/OpenGL-Registry\n    </comment>\n\n    <!-- SECTION: GL type definitions. -->\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 9,
                  "snippet": {
                    "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 11387,
                  "startColumn": 62,
                  "endLine": 11387,
                  "endColumn": 67,
                  "snippet": {
                    "text": "     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. -->\n\n",
                    "rendered": {
                      "text": "     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. -->\n\n",
                      "markdown": "`     block and note it in a new <enums> block immediately above.\n\n     Please remember that new enumerant allocations must be obtained by\n     request to the Khronos API registrar (see comments at the top of this\n     file) File requests in the Khronos Bugzilla, OpenGL project, Registry\n     component. -->\n\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/registry/gl.xml"
                },
                "region": {
                  "startLine": 6916,
                  "startColumn": 16,
                  "endLine": 6916,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    <enums namespace=\"GL\" start=\"0x8370\" end=\"0x837F\" vendor=\"HP\">\n            <!-- NOTE: IBM is using values in this range, because of a\n                 bobble when an employee left DEC for IBM at the same\n                 time as they were assigned the range. their registry\n                 became inconsistent. It's unknown whether HP has any\n                 conflicts. They have never reported using any values in\n                 this range. Lesson: assigned ranges belong to vendors,\n",
                    "rendered": {
                      "text": "    <enums namespace=\"GL\" start=\"0x8370\" end=\"0x837F\" vendor=\"HP\">\n            <!-- NOTE: IBM is using values in this range, because of a\n                 bobble when an employee left DEC for IBM at the same\n                 time as they were assigned the range. their registry\n                 became inconsistent. It's unknown whether HP has any\n                 conflicts. They have never reported using any values in\n                 this range. Lesson: assigned ranges belong to vendors,\n",
                      "markdown": "`    <enums namespace=\"GL\" start=\"0x8370\" end=\"0x837F\" vendor=\"HP\">\n            <!-- NOTE: IBM is using values in this range, because of a\n                 bobble when an employee left DEC for IBM at the same\n                 time as they were assigned the range. their registry\n                 became inconsistent. It's unknown whether HP has any\n                 conflicts. They have never reported using any values in\n                 this range. Lesson: assigned ranges belong to vendors,\n`"
                    }
                  },
                  "sourceLanguage": "XML"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 22,
                  "endLine": 25,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    steps:\n      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n",
                    "rendered": {
                      "text": "    steps:\n      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n",
                      "markdown": "`    steps:\n      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 41,
                  "endLine": 37,
                  "snippet": {
                    "text": "        with:\n          python-version: 3.x\n      - run: |\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=${{ matrix.compiler }} .github/scripts/epoxy-ci-linux.sh ${{ matrix.build-opts }}\"\n",
                    "rendered": {
                      "text": "        with:\n          python-version: 3.x\n      - run: |\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=${{ matrix.compiler }} .github/scripts/epoxy-ci-linux.sh ${{ matrix.build-opts }}\"\n",
                      "markdown": "`        with:\n          python-version: 3.x\n      - run: |\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=${{ matrix.compiler }} .github/scripts/epoxy-ci-linux.sh ${{ matrix.build-opts }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 19,
                  "endLine": 36,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        with:\n          python-version: 3.x\n      - run: |\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=${{ matrix.compiler }} .github/scripts/epoxy-ci-linux.sh ${{ matrix.build-opts }}\"\n",
                    "rendered": {
                      "text": "        with:\n          python-version: 3.x\n      - run: |\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=${{ matrix.compiler }} .github/scripts/epoxy-ci-linux.sh ${{ matrix.build-opts }}\"\n",
                      "markdown": "`        with:\n          python-version: 3.x\n      - run: |\n          python -m pip install --upgrade pip\n          pip3 install meson\n          /bin/sh -c \"CC=${{ matrix.compiler }} .github/scripts/epoxy-ci-linux.sh ${{ matrix.build-opts }}\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 14,
                  "endLine": 26,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n          libgles2-mesa-dev\n",
                    "rendered": {
                      "text": "      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n          libgles2-mesa-dev\n",
                      "markdown": "`      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n          libgles2-mesa-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 14,
                  "endLine": 25,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    steps:\n      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n",
                    "rendered": {
                      "text": "    steps:\n      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n",
                      "markdown": "`    steps:\n      - uses: actions/checkout@v2\n      - run: >\n          sudo apt-get update &&\n          sudo apt-get install --no-install-recommends\n          libgl1-mesa-dev\n          libegl1-mesa-dev\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 28,
                  "endLine": 394,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n            # 'supported' is a set of strings like gl, gles1, gles2,\n            # or glx, which are separated by '|'\n            apis = extension.get('supported').split('|')\n            if 'glx' in apis:\n                condition = 'epoxy_conservative_has_glx_extension(provider_name)'\n                loader = 'glXGetProcAddress((const GLubyte *){0})'\n",
                    "rendered": {
                      "text": "\n            # 'supported' is a set of strings like gl, gles1, gles2,\n            # or glx, which are separated by '|'\n            apis = extension.get('supported').split('|')\n            if 'glx' in apis:\n                condition = 'epoxy_conservative_has_glx_extension(provider_name)'\n                loader = 'glXGetProcAddress((const GLubyte *){0})'\n",
                      "markdown": "`\n            # 'supported' is a set of strings like gl, gles1, gles2,\n            # or glx, which are separated by '|'\n            apis = extension.get('supported').split('|')\n            if 'glx' in apis:\n                condition = 'epoxy_conservative_has_glx_extension(provider_name)'\n                loader = 'glXGetProcAddress((const GLubyte *){0})'\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 31,
                  "endLine": 387,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            self.process_require_statements(feature, condition, loader, human_name)\n\n        for extension in reg.findall('extensions/extension'):\n            extname = extension.get('name')\n            cond_extname = \"enum_string[enum_string_offsets[i]]\"\n\n            self.supported_extensions.add(extname)\n",
                    "rendered": {
                      "text": "            self.process_require_statements(feature, condition, loader, human_name)\n\n        for extension in reg.findall('extensions/extension'):\n            extname = extension.get('name')\n            cond_extname = \"enum_string[enum_string_offsets[i]]\"\n\n            self.supported_extensions.add(extname)\n",
                      "markdown": "`            self.process_require_statements(feature, condition, loader, human_name)\n\n        for extension in reg.findall('extensions/extension'):\n            extname = extension.get('name')\n            cond_extname = \"enum_string[enum_string_offsets[i]]\"\n\n            self.supported_extensions.add(extname)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 59,
                  "endLine": 344,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                if version >= 11:\n                    condition += ' && epoxy_conservative_gl_version() >= {0}'.format(version)\n            elif api == 'gles2':\n                human_name = 'OpenGL ES {0}'.format(feature.get('number'))\n                condition = '!epoxy_is_desktop_gl() && epoxy_gl_version() >= {0}'.format(version)\n\n                if version <= 20:\n",
                    "rendered": {
                      "text": "                if version >= 11:\n                    condition += ' && epoxy_conservative_gl_version() >= {0}'.format(version)\n            elif api == 'gles2':\n                human_name = 'OpenGL ES {0}'.format(feature.get('number'))\n                condition = '!epoxy_is_desktop_gl() && epoxy_gl_version() >= {0}'.format(version)\n\n                if version <= 20:\n",
                      "markdown": "`                if version >= 11:\n                    condition += ' && epoxy_conservative_gl_version() >= {0}'.format(version)\n            elif api == 'gles2':\n                human_name = 'OpenGL ES {0}'.format(feature.get('number'))\n                condition = '!epoxy_is_desktop_gl() && epoxy_gl_version() >= {0}'.format(version)\n\n                if version <= 20:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 64,
                  "endLine": 337,
                  "endColumn": 69,
                  "snippet": {
                    "text": "            self.supported_versions.add(feature.get('name'))\n\n            if api == 'gl':\n                human_name = 'Desktop OpenGL {0}'.format(feature.get('number'))\n                condition = 'epoxy_is_desktop_gl()'\n\n                loader = 'epoxy_get_core_proc_address({0}, {1})'.format('{0}', version)\n",
                    "rendered": {
                      "text": "            self.supported_versions.add(feature.get('name'))\n\n            if api == 'gl':\n                human_name = 'Desktop OpenGL {0}'.format(feature.get('number'))\n                condition = 'epoxy_is_desktop_gl()'\n\n                loader = 'epoxy_get_core_proc_address({0}, {1})'.format('{0}', version)\n",
                      "markdown": "`            self.supported_versions.add(feature.get('name'))\n\n            if api == 'gl':\n                human_name = 'Desktop OpenGL {0}'.format(feature.get('number'))\n                condition = 'epoxy_is_desktop_gl()'\n\n                loader = 'epoxy_get_core_proc_address({0}, {1})'.format('{0}', version)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 47,
                  "endLine": 334,
                  "endColumn": 52,
                  "snippet": {
                    "text": "            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n            self.supported_versions.add(feature.get('name'))\n\n            if api == 'gl':\n                human_name = 'Desktop OpenGL {0}'.format(feature.get('number'))\n",
                    "rendered": {
                      "text": "            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n            self.supported_versions.add(feature.get('name'))\n\n            if api == 'gl':\n                human_name = 'Desktop OpenGL {0}'.format(feature.get('number'))\n",
                      "markdown": "`            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n            self.supported_versions.add(feature.get('name'))\n\n            if api == 'gl':\n                human_name = 'Desktop OpenGL {0}'.format(feature.get('number'))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 53,
                  "endLine": 331,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    def parse_function_providers(self, reg):\n        for feature in reg.findall('feature'):\n            api = feature.get('api') # string gl, gles1, gles2, glx\n            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n            self.supported_versions.add(feature.get('name'))\n",
                    "rendered": {
                      "text": "    def parse_function_providers(self, reg):\n        for feature in reg.findall('feature'):\n            api = feature.get('api') # string gl, gles1, gles2, glx\n            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n            self.supported_versions.add(feature.get('name'))\n",
                      "markdown": "`    def parse_function_providers(self, reg):\n        for feature in reg.findall('feature'):\n            api = feature.get('api') # string gl, gles1, gles2, glx\n            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n            self.supported_versions.add(feature.get('name'))\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 25,
                  "endLine": 330,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n    def parse_function_providers(self, reg):\n        for feature in reg.findall('feature'):\n            api = feature.get('api') # string gl, gles1, gles2, glx\n            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n",
                    "rendered": {
                      "text": "\n    def parse_function_providers(self, reg):\n        for feature in reg.findall('feature'):\n            api = feature.get('api') # string gl, gles1, gles2, glx\n            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n",
                      "markdown": "`\n    def parse_function_providers(self, reg):\n        for feature in reg.findall('feature'):\n            api = feature.get('api') # string gl, gles1, gles2, glx\n            m = re.match(r'([0-9])\\.([0-9])', feature.get('number'))\n            version = int(m.group(1)) * 10 + int(m.group(2))\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 26,
                  "endLine": 315,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n    def process_require_statements(self, feature, condition, loader, human_name):\n        for command in feature.findall('require/command'):\n            name = command.get('name')\n\n            # wgl.xml describes 6 functions in WGL 1.0 that are in\n            # gdi32.dll instead of opengl32.dll, and we would need to\n",
                    "rendered": {
                      "text": "\n    def process_require_statements(self, feature, condition, loader, human_name):\n        for command in feature.findall('require/command'):\n            name = command.get('name')\n\n            # wgl.xml describes 6 functions in WGL 1.0 that are in\n            # gdi32.dll instead of opengl32.dll, and we would need to\n",
                      "markdown": "`\n    def process_require_statements(self, feature, condition, loader, human_name):\n        for command in feature.findall('require/command'):\n            name = command.get('name')\n\n            # wgl.xml describes 6 functions in WGL 1.0 that are in\n            # gdi32.dll instead of opengl32.dll, and we would need to\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 39,
                  "endLine": 265,
                  "endColumn": 44,
                  "snippet": {
                    "text": "                # Note that some alias references appear before the\n                # target command is defined (glAttachObjectARB() ->\n                # glAttachShader(), for example).\n                func.alias_name = alias.get('name')\n\n            self.functions[name] = func\n\n",
                    "rendered": {
                      "text": "                # Note that some alias references appear before the\n                # target command is defined (glAttachObjectARB() ->\n                # glAttachShader(), for example).\n                func.alias_name = alias.get('name')\n\n            self.functions[name] = func\n\n",
                      "markdown": "`                # Note that some alias references appear before the\n                # target command is defined (glAttachObjectARB() ->\n                # glAttachShader(), for example).\n                func.alias_name = alias.get('name')\n\n            self.functions[name] = func\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 35,
                  "endLine": 242,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                continue\n\n            self.max_enum_name_len = max(self.max_enum_name_len, len(name))\n            self.enums[name] = enum.get('value')\n\n    def get_function_return_type(self, proto):\n        # Everything up to the start of the name element is the return type.\n",
                    "rendered": {
                      "text": "                continue\n\n            self.max_enum_name_len = max(self.max_enum_name_len, len(name))\n            self.enums[name] = enum.get('value')\n\n    def get_function_return_type(self, proto):\n        # Everything up to the start of the name element is the return type.\n",
                      "markdown": "`                continue\n\n            self.max_enum_name_len = max(self.max_enum_name_len, len(name))\n            self.enums[name] = enum.get('value')\n\n    def get_function_return_type(self, proto):\n        # Everything up to the start of the name element is the return type.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 23,
                  "endLine": 234,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n    def parse_enums(self, reg):\n        for enum in reg.findall('enums/enum'):\n            name = enum.get('name')\n\n            # wgl.xml's 0xwhatever definitions end up colliding with\n            # wingdi.h's decimal definitions of these.\n",
                    "rendered": {
                      "text": "\n    def parse_enums(self, reg):\n        for enum in reg.findall('enums/enum'):\n            name = enum.get('name')\n\n            # wgl.xml's 0xwhatever definitions end up colliding with\n            # wingdi.h's decimal definitions of these.\n",
                      "markdown": "`\n    def parse_enums(self, reg):\n        for enum in reg.findall('enums/enum'):\n            name = enum.get('name')\n\n            # wgl.xml's 0xwhatever definitions end up colliding with\n            # wingdi.h's decimal definitions of these.\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 19,
                  "endLine": 216,
                  "endColumn": 24,
                  "snippet": {
                    "text": "            # The gles1/gles2-specific types are redundant\n            # declarations, and the different types used for them (int\n            # vs int32_t) caused problems on win32 builds.\n            api = t.get('api')\n            if api:\n                continue\n\n",
                    "rendered": {
                      "text": "            # The gles1/gles2-specific types are redundant\n            # declarations, and the different types used for them (int\n            # vs int32_t) caused problems on win32 builds.\n            api = t.get('api')\n            if api:\n                continue\n\n",
                      "markdown": "`            # The gles1/gles2-specific types are redundant\n            # declarations, and the different types used for them (int\n            # vs int32_t) caused problems on win32 builds.\n            api = t.get('api')\n            if api:\n                continue\n\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 797,
                  "startColumn": 61,
                  "endLine": 797,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        self.outln('};')\n        self.outln('')\n\n        # Early declaration, so we can declare the real thing at the\n        # bottom. (I want the function_ptr_resolver as the first\n        # per-GL-call code, since it's the most interesting to see\n        # when you search for the implementation of a call)\n",
                    "rendered": {
                      "text": "        self.outln('};')\n        self.outln('')\n\n        # Early declaration, so we can declare the real thing at the\n        # bottom. (I want the function_ptr_resolver as the first\n        # per-GL-call code, since it's the most interesting to see\n        # when you search for the implementation of a call)\n",
                      "markdown": "`        self.outln('};')\n        self.outln('')\n\n        # Early declaration, so we can declare the real thing at the\n        # bottom. (I want the function_ptr_resolver as the first\n        # per-GL-call code, since it's the most interesting to see\n        # when you search for the implementation of a call)\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 426,
                  "startColumn": 7,
                  "endLine": 426,
                  "endColumn": 12,
                  "snippet": {
                    "text": "        func.add_provider('true', loader, 'always present')\n\n    def parse(self, xml_file):\n        reg = ET.parse(xml_file)\n        comment = reg.find('comment')\n        if comment is not None:\n            self.copyright_comment = comment.text\n",
                    "rendered": {
                      "text": "        func.add_provider('true', loader, 'always present')\n\n    def parse(self, xml_file):\n        reg = ET.parse(xml_file)\n        comment = reg.find('comment')\n        if comment is not None:\n            self.copyright_comment = comment.text\n",
                      "markdown": "`        func.add_provider('true', loader, 'always present')\n\n    def parse(self, xml_file):\n        reg = ET.parse(xml_file)\n        comment = reg.find('comment')\n        if comment is not None:\n            self.copyright_comment = comment.text\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 9,
                  "endLine": 455,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        # We want to sort by enum number (which puts a bunch of things\n        # in a logical order), then by name after that, so we do those\n        # sorts in reverse.  This is still way uglier than doing some\n        # sort based on what version/extensions things are introduced\n        # in, but we haven't paid any attention to those attributes\n        # for enums yet.\n        sorted_by_name = sorted(self.enums.keys())\n",
                    "rendered": {
                      "text": "        # We want to sort by enum number (which puts a bunch of things\n        # in a logical order), then by name after that, so we do those\n        # sorts in reverse.  This is still way uglier than doing some\n        # sort based on what version/extensions things are introduced\n        # in, but we haven't paid any attention to those attributes\n        # for enums yet.\n        sorted_by_name = sorted(self.enums.keys())\n",
                      "markdown": "`        # We want to sort by enum number (which puts a bunch of things\n        # in a logical order), then by name after that, so we do those\n        # sorts in reverse.  This is still way uglier than doing some\n        # sort based on what version/extensions things are introduced\n        # in, but we haven't paid any attention to those attributes\n        # for enums yet.\n        sorted_by_name = sorted(self.enums.keys())\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 20,
                  "endLine": 452,
                  "endColumn": 26,
                  "snippet": {
                    "text": "            self.outln('#define {0} 1'.format(name))\n        self.outln('')\n\n        # We want to sort by enum number (which puts a bunch of things\n        # in a logical order), then by name after that, so we do those\n        # sorts in reverse.  This is still way uglier than doing some\n        # sort based on what version/extensions things are introduced\n",
                    "rendered": {
                      "text": "            self.outln('#define {0} 1'.format(name))\n        self.outln('')\n\n        # We want to sort by enum number (which puts a bunch of things\n        # in a logical order), then by name after that, so we do those\n        # sorts in reverse.  This is still way uglier than doing some\n        # sort based on what version/extensions things are introduced\n",
                      "markdown": "`            self.outln('#define {0} 1'.format(name))\n        self.outln('')\n\n        # We want to sort by enum number (which puts a bunch of things\n        # in a logical order), then by name after that, so we do those\n        # sorts in reverse.  This is still way uglier than doing some\n        # sort based on what version/extensions things are introduced\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/src/gen_dispatch.py"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 13,
                  "endLine": 282,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n    def resolve_aliases(self):\n        for func in self.functions.values():\n            # Find the root of the alias tree, and add ourselves to it.\n            if func.alias_name != func.name:\n                alias_func = func\n                while alias_func.alias_name != alias_func.name:\n",
                    "rendered": {
                      "text": "\n    def resolve_aliases(self):\n        for func in self.functions.values():\n            # Find the root of the alias tree, and add ourselves to it.\n            if func.alias_name != func.name:\n                alias_func = func\n                while alias_func.alias_name != alias_func.name:\n",
                      "markdown": "`\n    def resolve_aliases(self):\n        for func in self.functions.values():\n            # Find the root of the alias tree, and add ourselves to it.\n            if func.alias_name != func.name:\n                alias_func = func\n                while alias_func.alias_name != alias_func.name:\n`"
                    }
                  },
                  "sourceLanguage": "python"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/libepoxy.zip/.github/workflows/msys2.yml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 27,
                  "endLine": 23,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      with:\n        msystem: MINGW64\n        update: true\n        install: base-devel git mingw-w64-x86_64-meson mingw-w64-x86_64-ninja mingw-w64-x86_64-pkg-config mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-pip mingw-w64-x86_64-toolchain\n    - name: Build\n      run: |\n        meson setup _build\n",
                    "rendered": {
                      "text": "      with:\n        msystem: MINGW64\n        update: true\n        install: base-devel git mingw-w64-x86_64-meson mingw-w64-x86_64-ninja mingw-w64-x86_64-pkg-config mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-pip mingw-w64-x86_64-toolchain\n    - name: Build\n      run: |\n        meson setup _build\n",
                      "markdown": "`      with:\n        msystem: MINGW64\n        update: true\n        install: base-devel git mingw-w64-x86_64-meson mingw-w64-x86_64-ninja mingw-w64-x86_64-pkg-config mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-pip mingw-w64-x86_64-toolchain\n    - name: Build\n      run: |\n        meson setup _build\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}